/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  for (var i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(
      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)
    ))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(/*! base64-js */ "./node_modules/base64-js/index.js")
var ieee754 = __webpack_require__(/*! ieee754 */ "./node_modules/ieee754/index.js")
var isArray = __webpack_require__(/*! isarray */ "./node_modules/isarray/index.js")

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/fabric/dist/fabric.js":
/*!********************************************!*\
  !*** ./node_modules/fabric/dist/fabric.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {/* build: `node build.js modules=ALL exclude=gestures,accessors requirejs minifier=uglifyjs` */
/*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */

var fabric = fabric || { version: '2.7.0' };
if (true) {
  exports.fabric = fabric;
}
/* _AMD_START_ */
else {}
/* _AMD_END_ */
if (typeof document !== 'undefined' && typeof window !== 'undefined') {
  if (document instanceof HTMLDocument)
    fabric.document = document;
  else
    fabric.document = document.implementation.createHTMLDocument("");
  fabric.window = window;
}
else {
  // assume we're running under node.js when document/window are not present
  fabric.document = __webpack_require__(/*! jsdom */ 5)
    .jsdom(
      decodeURIComponent('%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E'),
      { features: {
        FetchExternalResources: ['img']
      }
      });
  fabric.jsdomImplForWrapper = __webpack_require__(/*! jsdom/lib/jsdom/living/generated/utils */ 6).implForWrapper;
  fabric.nodeCanvas = __webpack_require__(/*! jsdom/lib/jsdom/utils */ 7).Canvas;
  fabric.window = fabric.document.defaultView;
  DOMParser = __webpack_require__(/*! xmldom */ 8).DOMParser;
}

/**
 * True when in environment that supports touch events
 * @type boolean
 */
fabric.isTouchSupported = 'ontouchstart' in fabric.window || 'ontouchstart' in fabric.document ||
  (fabric.window && fabric.window.navigator && fabric.window.navigator.maxTouchPoints > 0);

/**
 * True when in environment that's probably Node.js
 * @type boolean
 */
fabric.isLikelyNode = typeof Buffer !== 'undefined' &&
                      typeof window === 'undefined';

/* _FROM_SVG_START_ */
/**
 * Attributes parsed from all SVG elements
 * @type array
 */
fabric.SHARED_ATTRIBUTES = [
  'display',
  'transform',
  'fill', 'fill-opacity', 'fill-rule',
  'opacity',
  'stroke', 'stroke-dasharray', 'stroke-linecap', 'stroke-dashoffset',
  'stroke-linejoin', 'stroke-miterlimit',
  'stroke-opacity', 'stroke-width',
  'id', 'paint-order', 'vector-effect',
  'instantiated_by_use', 'clip-path'
];
/* _FROM_SVG_END_ */

/**
 * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.
 */
fabric.DPI = 96;
fabric.reNum = '(?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?)';
fabric.fontPaths = { };
fabric.iMatrix = [1, 0, 0, 1, 0, 0];
fabric.canvasModule = 'canvas';

/**
 * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.
 * @since 1.7.14
 * @type Number
 * @default
 */
fabric.perfLimitSizeTotal = 2097152;

/**
 * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000
 * @since 1.7.14
 * @type Number
 * @default
 */
fabric.maxCacheSideLimit = 4096;

/**
 * Lowest pixel limit for cache canvases, set at 256PX
 * @since 1.7.14
 * @type Number
 * @default
 */
fabric.minCacheSideLimit = 256;

/**
 * Cache Object for widths of chars in text rendering.
 */
fabric.charWidthsCache = { };

/**
 * if webgl is enabled and available, textureSize will determine the size
 * of the canvas backend
 * @since 2.0.0
 * @type Number
 * @default
 */
fabric.textureSize = 2048;

/**
 * Enable webgl for filtering picture is available
 * A filtering backend will be initialized, this will both take memory and
 * time since a default 2048x2048 canvas will be created for the gl context
 * @since 2.0.0
 * @type Boolean
 * @default
 */
fabric.enableGLFiltering = true;

/**
 * Device Pixel Ratio
 * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html
 */
fabric.devicePixelRatio = fabric.window.devicePixelRatio ||
                          fabric.window.webkitDevicePixelRatio ||
                          fabric.window.mozDevicePixelRatio ||
                          1;
/**
 * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,
 * which is unitless and not rendered equally across browsers.
 *
 * Values that work quite well (as of October 2017) are:
 * - Chrome: 1.5
 * - Edge: 1.75
 * - Firefox: 0.9
 * - Safari: 0.95
 *
 * @since 2.0.0
 * @type Number
 * @default 1
 */
fabric.browserShadowBlurConstant = 1;

/**
 * This object contains the result of arc to beizer conversion for faster retrieving if the same arc needs to be converted again.
 * It was an internal variable, is accessible since version 2.3.4
 */
fabric.arcToSegmentsCache = { };

/**
 * This object keeps the results of the boundsOfCurve calculation mapped by the joined arguments necessary to calculate it.
 * It does speed up calculation, if you parse and add always the same paths, but in case of heavy usage of freedrawing
 * you do not get any speed benefit and you get a big object in memory.
 * The object was a private variable before, while now is appended to the lib so that you have access to it and you
 * can eventually clear it.
 * It was an internal variable, is accessible since version 2.3.4
 */
fabric.boundsOfCurveCache = { };

/**
 * If disabled boundsOfCurveCache is not used. For apps that make heavy usage of pencil drawing probably disabling it is better
 * @default true
 */
fabric.cachesBoundsOfCurve = true;

fabric.initFilterBackend = function() {
  if (fabric.enableGLFiltering && fabric.isWebglSupported && fabric.isWebglSupported(fabric.textureSize)) {
    console.log('max texture size: ' + fabric.maxTextureSize);
    return (new fabric.WebglFilterBackend({ tileSize: fabric.textureSize }));
  }
  else if (fabric.Canvas2dFilterBackend) {
    return (new fabric.Canvas2dFilterBackend());
  }
};


if (typeof document !== 'undefined' && typeof window !== 'undefined') {
  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)
  window.fabric = fabric;
}


(function() {

  /**
   * @private
   * @param {String} eventName
   * @param {Function} handler
   */
  function _removeEventListener(eventName, handler) {
    if (!this.__eventListeners[eventName]) {
      return;
    }
    var eventListener = this.__eventListeners[eventName];
    if (handler) {
      eventListener[eventListener.indexOf(handler)] = false;
    }
    else {
      fabric.util.array.fill(eventListener, false);
    }
  }

  /**
   * Observes specified event
   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)
   * @memberOf fabric.Observable
   * @alias on
   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})
   * @param {Function} handler Function that receives a notification when an event of the specified type occurs
   * @return {Self} thisArg
   * @chainable
   */
  function observe(eventName, handler) {
    if (!this.__eventListeners) {
      this.__eventListeners = { };
    }
    // one object with key/value pairs was passed
    if (arguments.length === 1) {
      for (var prop in eventName) {
        this.on(prop, eventName[prop]);
      }
    }
    else {
      if (!this.__eventListeners[eventName]) {
        this.__eventListeners[eventName] = [];
      }
      this.__eventListeners[eventName].push(handler);
    }
    return this;
  }

  /**
   * Stops event observing for a particular event handler. Calling this method
   * without arguments removes all handlers for all events
   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)
   * @memberOf fabric.Observable
   * @alias off
   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})
   * @param {Function} handler Function to be deleted from EventListeners
   * @return {Self} thisArg
   * @chainable
   */
  function stopObserving(eventName, handler) {
    if (!this.__eventListeners) {
      return;
    }

    // remove all key/value pairs (event name -> event handler)
    if (arguments.length === 0) {
      for (eventName in this.__eventListeners) {
        _removeEventListener.call(this, eventName);
      }
    }
    // one object with key/value pairs was passed
    else if (arguments.length === 1 && typeof arguments[0] === 'object') {
      for (var prop in eventName) {
        _removeEventListener.call(this, prop, eventName[prop]);
      }
    }
    else {
      _removeEventListener.call(this, eventName, handler);
    }
    return this;
  }

  /**
   * Fires event with an optional options object
   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)
   * @memberOf fabric.Observable
   * @alias trigger
   * @param {String} eventName Event name to fire
   * @param {Object} [options] Options object
   * @return {Self} thisArg
   * @chainable
   */
  function fire(eventName, options) {
    if (!this.__eventListeners) {
      return;
    }

    var listenersForEvent = this.__eventListeners[eventName];
    if (!listenersForEvent) {
      return;
    }

    for (var i = 0, len = listenersForEvent.length; i < len; i++) {
      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });
    }
    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {
      return value !== false;
    });
    return this;
  }

  /**
   * @namespace fabric.Observable
   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}
   * @see {@link http://fabricjs.com/events|Events demo}
   */
  fabric.Observable = {
    observe: observe,
    stopObserving: stopObserving,
    fire: fire,

    on: observe,
    off: stopObserving,
    trigger: fire
  };
})();


/**
 * @namespace fabric.Collection
 */
fabric.Collection = {

  _objects: [],

  /**
   * Adds objects to collection, Canvas or Group, then renders canvas
   * (if `renderOnAddRemove` is not `false`).
   * in case of Group no changes to bounding box are made.
   * Objects should be instances of (or inherit from) fabric.Object
   * Use of this function is highly discouraged for groups.
   * you can add a bunch of objects with the add method but then you NEED
   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.
   * @param {...fabric.Object} object Zero or more fabric instances
   * @return {Self} thisArg
   * @chainable
   */
  add: function () {
    this._objects.push.apply(this._objects, arguments);
    if (this._onObjectAdded) {
      for (var i = 0, length = arguments.length; i < length; i++) {
        this._onObjectAdded(arguments[i]);
      }
    }
    this.renderOnAddRemove && this.requestRenderAll();
    return this;
  },

  /**
   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)
   * An object should be an instance of (or inherit from) fabric.Object
   * Use of this function is highly discouraged for groups.
   * you can add a bunch of objects with the insertAt method but then you NEED
   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.
   * @param {Object} object Object to insert
   * @param {Number} index Index to insert object at
   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs
   * @return {Self} thisArg
   * @chainable
   */
  insertAt: function (object, index, nonSplicing) {
    var objects = this._objects;
    if (nonSplicing) {
      objects[index] = object;
    }
    else {
      objects.splice(index, 0, object);
    }
    this._onObjectAdded && this._onObjectAdded(object);
    this.renderOnAddRemove && this.requestRenderAll();
    return this;
  },

  /**
   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)
   * @param {...fabric.Object} object Zero or more fabric instances
   * @return {Self} thisArg
   * @chainable
   */
  remove: function() {
    var objects = this._objects,
        index, somethingRemoved = false;

    for (var i = 0, length = arguments.length; i < length; i++) {
      index = objects.indexOf(arguments[i]);

      // only call onObjectRemoved if an object was actually removed
      if (index !== -1) {
        somethingRemoved = true;
        objects.splice(index, 1);
        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);
      }
    }

    this.renderOnAddRemove && somethingRemoved && this.requestRenderAll();
    return this;
  },

  /**
   * Executes given function for each object in this group
   * @param {Function} callback
   *                   Callback invoked with current object as first argument,
   *                   index - as second and an array of all objects - as third.
   *                   Callback is invoked in a context of Global Object (e.g. `window`)
   *                   when no `context` argument is given
   *
   * @param {Object} context Context (aka thisObject)
   * @return {Self} thisArg
   * @chainable
   */
  forEachObject: function(callback, context) {
    var objects = this.getObjects();
    for (var i = 0, len = objects.length; i < len; i++) {
      callback.call(context, objects[i], i, objects);
    }
    return this;
  },

  /**
   * Returns an array of children objects of this instance
   * Type parameter introduced in 1.3.10
   * since 2.3.5 this method return always a COPY of the array;
   * @param {String} [type] When specified, only objects of this type are returned
   * @return {Array}
   */
  getObjects: function(type) {
    if (typeof type === 'undefined') {
      return this._objects.concat();
    }
    return this._objects.filter(function(o) {
      return o.type === type;
    });
  },

  /**
   * Returns object at specified index
   * @param {Number} index
   * @return {Self} thisArg
   */
  item: function (index) {
    return this._objects[index];
  },

  /**
   * Returns true if collection contains no objects
   * @return {Boolean} true if collection is empty
   */
  isEmpty: function () {
    return this._objects.length === 0;
  },

  /**
   * Returns a size of a collection (i.e: length of an array containing its objects)
   * @return {Number} Collection size
   */
  size: function() {
    return this._objects.length;
  },

  /**
   * Returns true if collection contains an object
   * @param {Object} object Object to check against
   * @return {Boolean} `true` if collection contains an object
   */
  contains: function(object) {
    return this._objects.indexOf(object) > -1;
  },

  /**
   * Returns number representation of a collection complexity
   * @return {Number} complexity
   */
  complexity: function () {
    return this._objects.reduce(function (memo, current) {
      memo += current.complexity ? current.complexity() : 0;
      return memo;
    }, 0);
  }
};


/**
 * @namespace fabric.CommonMethods
 */
fabric.CommonMethods = {

  /**
   * Sets object's properties from options
   * @param {Object} [options] Options object
   */
  _setOptions: function(options) {
    for (var prop in options) {
      this.set(prop, options[prop]);
    }
  },

  /**
   * @private
   * @param {Object} [filler] Options object
   * @param {String} [property] property to set the Gradient to
   */
  _initGradient: function(filler, property) {
    if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {
      this.set(property, new fabric.Gradient(filler));
    }
  },

  /**
   * @private
   * @param {Object} [filler] Options object
   * @param {String} [property] property to set the Pattern to
   * @param {Function} [callback] callback to invoke after pattern load
   */
  _initPattern: function(filler, property, callback) {
    if (filler && filler.source && !(filler instanceof fabric.Pattern)) {
      this.set(property, new fabric.Pattern(filler, callback));
    }
    else {
      callback && callback();
    }
  },

  /**
   * @private
   * @param {Object} [options] Options object
   */
  _initClipping: function(options) {
    if (!options.clipTo || typeof options.clipTo !== 'string') {
      return;
    }

    var functionBody = fabric.util.getFunctionBody(options.clipTo);
    if (typeof functionBody !== 'undefined') {
      this.clipTo = new Function('ctx', functionBody);
    }
  },

  /**
   * @private
   */
  _setObject: function(obj) {
    for (var prop in obj) {
      this._set(prop, obj[prop]);
    }
  },

  /**
   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.
   * @param {String|Object} key Property name or object (if object, iterate over the object properties)
   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)
   * @return {fabric.Object} thisArg
   * @chainable
   */
  set: function(key, value) {
    if (typeof key === 'object') {
      this._setObject(key);
    }
    else {
      if (typeof value === 'function' && key !== 'clipTo') {
        this._set(key, value(this.get(key)));
      }
      else {
        this._set(key, value);
      }
    }
    return this;
  },

  _set: function(key, value) {
    this[key] = value;
  },

  /**
   * Toggles specified property from `true` to `false` or from `false` to `true`
   * @param {String} property Property to toggle
   * @return {fabric.Object} thisArg
   * @chainable
   */
  toggle: function(property) {
    var value = this.get(property);
    if (typeof value === 'boolean') {
      this.set(property, !value);
    }
    return this;
  },

  /**
   * Basic getter
   * @param {String} property Property name
   * @return {*} value of a property
   */
  get: function(property) {
    return this[property];
  }
};


(function(global) {

  var sqrt = Math.sqrt,
      atan2 = Math.atan2,
      pow = Math.pow,
      abs = Math.abs,
      PiBy180 = Math.PI / 180,
      PiBy2 = Math.PI / 2;

  /**
   * @namespace fabric.util
   */
  fabric.util = {

    /**
     * Calculate the cos of an angle, avoiding returning floats for known results
     * @static
     * @memberOf fabric.util
     * @param {Number} angle the angle in radians or in degree
     * @return {Number}
     */
    cos: function(angle) {
      if (angle === 0) { return 1; }
      if (angle < 0) {
        // cos(a) = cos(-a)
        angle = -angle;
      }
      var angleSlice = angle / PiBy2;
      switch (angleSlice) {
        case 1: case 3: return 0;
        case 2: return -1;
      }
      return Math.cos(angle);
    },

    /**
     * Calculate the sin of an angle, avoiding returning floats for known results
     * @static
     * @memberOf fabric.util
     * @param {Number} angle the angle in radians or in degree
     * @return {Number}
     */
    sin: function(angle) {
      if (angle === 0) { return 0; }
      var angleSlice = angle / PiBy2, sign = 1;
      if (angle < 0) {
        // sin(-a) = -sin(a)
        sign = -1;
      }
      switch (angleSlice) {
        case 1: return sign;
        case 2: return 0;
        case 3: return -sign;
      }
      return Math.sin(angle);
    },

    /**
     * Removes value from an array.
     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`
     * @static
     * @memberOf fabric.util
     * @param {Array} array
     * @param {*} value
     * @return {Array} original array
     */
    removeFromArray: function(array, value) {
      var idx = array.indexOf(value);
      if (idx !== -1) {
        array.splice(idx, 1);
      }
      return array;
    },

    /**
     * Returns random number between 2 specified ones.
     * @static
     * @memberOf fabric.util
     * @param {Number} min lower limit
     * @param {Number} max upper limit
     * @return {Number} random value (between min and max)
     */
    getRandomInt: function(min, max) {
      return Math.floor(Math.random() * (max - min + 1)) + min;
    },

    /**
     * Transforms degrees to radians.
     * @static
     * @memberOf fabric.util
     * @param {Number} degrees value in degrees
     * @return {Number} value in radians
     */
    degreesToRadians: function(degrees) {
      return degrees * PiBy180;
    },

    /**
     * Transforms radians to degrees.
     * @static
     * @memberOf fabric.util
     * @param {Number} radians value in radians
     * @return {Number} value in degrees
     */
    radiansToDegrees: function(radians) {
      return radians / PiBy180;
    },

    /**
     * Rotates `point` around `origin` with `radians`
     * @static
     * @memberOf fabric.util
     * @param {fabric.Point} point The point to rotate
     * @param {fabric.Point} origin The origin of the rotation
     * @param {Number} radians The radians of the angle for the rotation
     * @return {fabric.Point} The new rotated point
     */
    rotatePoint: function(point, origin, radians) {
      point.subtractEquals(origin);
      var v = fabric.util.rotateVector(point, radians);
      return new fabric.Point(v.x, v.y).addEquals(origin);
    },

    /**
     * Rotates `vector` with `radians`
     * @static
     * @memberOf fabric.util
     * @param {Object} vector The vector to rotate (x and y)
     * @param {Number} radians The radians of the angle for the rotation
     * @return {Object} The new rotated point
     */
    rotateVector: function(vector, radians) {
      var sin = fabric.util.sin(radians),
          cos = fabric.util.cos(radians),
          rx = vector.x * cos - vector.y * sin,
          ry = vector.x * sin + vector.y * cos;
      return {
        x: rx,
        y: ry
      };
    },

    /**
     * Apply transform t to point p
     * @static
     * @memberOf fabric.util
     * @param  {fabric.Point} p The point to transform
     * @param  {Array} t The transform
     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied
     * @return {fabric.Point} The transformed point
     */
    transformPoint: function(p, t, ignoreOffset) {
      if (ignoreOffset) {
        return new fabric.Point(
          t[0] * p.x + t[2] * p.y,
          t[1] * p.x + t[3] * p.y
        );
      }
      return new fabric.Point(
        t[0] * p.x + t[2] * p.y + t[4],
        t[1] * p.x + t[3] * p.y + t[5]
      );
    },

    /**
     * Returns coordinates of points's bounding rectangle (left, top, width, height)
     * @param {Array} points 4 points array
     * @return {Object} Object with left, top, width, height properties
     */
    makeBoundingBoxFromPoints: function(points) {
      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],
          minX = fabric.util.array.min(xPoints),
          maxX = fabric.util.array.max(xPoints),
          width = maxX - minX,
          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],
          minY = fabric.util.array.min(yPoints),
          maxY = fabric.util.array.max(yPoints),
          height = maxY - minY;

      return {
        left: minX,
        top: minY,
        width: width,
        height: height
      };
    },

    /**
     * Invert transformation t
     * @static
     * @memberOf fabric.util
     * @param {Array} t The transform
     * @return {Array} The inverted transform
     */
    invertTransform: function(t) {
      var a = 1 / (t[0] * t[3] - t[1] * t[2]),
          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],
          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);
      r[4] = -o.x;
      r[5] = -o.y;
      return r;
    },

    /**
     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.
     * @static
     * @memberOf fabric.util
     * @param {Number|String} number number to operate on
     * @param {Number} fractionDigits number of fraction digits to "leave"
     * @return {Number}
     */
    toFixed: function(number, fractionDigits) {
      return parseFloat(Number(number).toFixed(fractionDigits));
    },

    /**
     * Converts from attribute value to pixel value if applicable.
     * Returns converted pixels or original value not converted.
     * @param {Number|String} value number to operate on
     * @param {Number} fontSize
     * @return {Number|String}
     */
    parseUnit: function(value, fontSize) {
      var unit = /\D{0,2}$/.exec(value),
          number = parseFloat(value);
      if (!fontSize) {
        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;
      }
      switch (unit[0]) {
        case 'mm':
          return number * fabric.DPI / 25.4;

        case 'cm':
          return number * fabric.DPI / 2.54;

        case 'in':
          return number * fabric.DPI;

        case 'pt':
          return number * fabric.DPI / 72; // or * 4 / 3

        case 'pc':
          return number * fabric.DPI / 72 * 12; // or * 16

        case 'em':
          return number * fontSize;

        default:
          return number;
      }
    },

    /**
     * Function which always returns `false`.
     * @static
     * @memberOf fabric.util
     * @return {Boolean}
     */
    falseFunction: function() {
      return false;
    },

    /**
     * Returns klass "Class" object of given namespace
     * @memberOf fabric.util
     * @param {String} type Type of object (eg. 'circle')
     * @param {String} namespace Namespace to get klass "Class" object from
     * @return {Object} klass "Class"
     */
    getKlass: function(type, namespace) {
      // capitalize first letter only
      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));
      return fabric.util.resolveNamespace(namespace)[type];
    },

    /**
     * Returns array of attributes for given svg that fabric parses
     * @memberOf fabric.util
     * @param {String} type Type of svg element (eg. 'circle')
     * @return {Array} string names of supported attributes
     */
    getSvgAttributes: function(type) {
      var attributes = [
        'instantiated_by_use',
        'style',
        'id',
        'class'
      ];
      switch (type) {
        case 'linearGradient':
          attributes = attributes.concat(['x1', 'y1', 'x2', 'y2', 'gradientUnits', 'gradientTransform']);
          break;
        case 'radialGradient':
          attributes = attributes.concat(['gradientUnits', 'gradientTransform', 'cx', 'cy', 'r', 'fx', 'fy', 'fr']);
          break;
        case 'stop':
          attributes = attributes.concat(['offset', 'stop-color', 'stop-opacity']);
          break;
      }
      return attributes;
    },

    /**
     * Returns object of given namespace
     * @memberOf fabric.util
     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'
     * @return {Object} Object for given namespace (default fabric)
     */
    resolveNamespace: function(namespace) {
      if (!namespace) {
        return fabric;
      }

      var parts = namespace.split('.'),
          len = parts.length, i,
          obj = global || fabric.window;

      for (i = 0; i < len; ++i) {
        obj = obj[parts[i]];
      }

      return obj;
    },

    /**
     * Loads image element from given url and passes it to a callback
     * @memberOf fabric.util
     * @param {String} url URL representing an image
     * @param {Function} callback Callback; invoked with loaded image
     * @param {*} [context] Context to invoke callback in
     * @param {Object} [crossOrigin] crossOrigin value to set image element to
     */
    loadImage: function(url, callback, context, crossOrigin) {
      if (!url) {
        callback && callback.call(context, url);
        return;
      }

      var img = fabric.util.createImage();

      /** @ignore */
      var onLoadCallback = function () {
        callback && callback.call(context, img);
        img = img.onload = img.onerror = null;
      };

      img.onload = onLoadCallback;
      /** @ignore */
      img.onerror = function() {
        fabric.log('Error loading ' + img.src);
        callback && callback.call(context, null, true);
        img = img.onload = img.onerror = null;
      };

      // data-urls appear to be buggy with crossOrigin
      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767
      // see https://code.google.com/p/chromium/issues/detail?id=315152
      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069
      if (url.indexOf('data') !== 0 && crossOrigin) {
        img.crossOrigin = crossOrigin;
      }

      // IE10 / IE11-Fix: SVG contents from data: URI
      // will only be available if the IMG is present
      // in the DOM (and visible)
      if (url.substring(0,14) === 'data:image/svg') {
        img.onload = null;
        fabric.util.loadImageInDom(img, onLoadCallback);
      }

      img.src = url;
    },

    /**
     * Attaches SVG image with data: URL to the dom
     * @memberOf fabric.util
     * @param {Object} img Image object with data:image/svg src
     * @param {Function} callback Callback; invoked with loaded image
     * @return {Object} DOM element (div containing the SVG image)
     */
    loadImageInDom: function(img, onLoadCallback) {
      var div = fabric.document.createElement('div');
      div.style.width = div.style.height = '1px';
      div.style.left = div.style.top = '-100%';
      div.style.position = 'absolute';
      div.appendChild(img);
      fabric.document.querySelector('body').appendChild(div);
      /**
       * Wrap in function to:
       *   1. Call existing callback
       *   2. Cleanup DOM
       */
      img.onload = function () {
        onLoadCallback();
        div.parentNode.removeChild(div);
        div = null;
      };
    },

    /**
     * Creates corresponding fabric instances from their object representations
     * @static
     * @memberOf fabric.util
     * @param {Array} objects Objects to enliven
     * @param {Function} callback Callback to invoke when all objects are created
     * @param {String} namespace Namespace to get klass "Class" object from
     * @param {Function} reviver Method for further parsing of object elements,
     * called after each fabric object created.
     */
    enlivenObjects: function(objects, callback, namespace, reviver) {
      objects = objects || [];

      function onLoaded() {
        if (++numLoadedObjects === numTotalObjects) {
          callback && callback(enlivenedObjects);
        }
      }

      var enlivenedObjects = [],
          numLoadedObjects = 0,
          numTotalObjects = objects.length;

      if (!numTotalObjects) {
        callback && callback(enlivenedObjects);
        return;
      }

      objects.forEach(function (o, index) {
        // if sparse array
        if (!o || !o.type) {
          onLoaded();
          return;
        }
        var klass = fabric.util.getKlass(o.type, namespace);
        klass.fromObject(o, function (obj, error) {
          error || (enlivenedObjects[index] = obj);
          reviver && reviver(o, obj, error);
          onLoaded();
        });
      });
    },

    /**
     * Create and wait for loading of patterns
     * @static
     * @memberOf fabric.util
     * @param {Array} patterns Objects to enliven
     * @param {Function} callback Callback to invoke when all objects are created
     * called after each fabric object created.
     */
    enlivenPatterns: function(patterns, callback) {
      patterns = patterns || [];

      function onLoaded() {
        if (++numLoadedPatterns === numPatterns) {
          callback && callback(enlivenedPatterns);
        }
      }

      var enlivenedPatterns = [],
          numLoadedPatterns = 0,
          numPatterns = patterns.length;

      if (!numPatterns) {
        callback && callback(enlivenedPatterns);
        return;
      }

      patterns.forEach(function (p, index) {
        if (p && p.source) {
          new fabric.Pattern(p, function(pattern) {
            enlivenedPatterns[index] = pattern;
            onLoaded();
          });
        }
        else {
          enlivenedPatterns[index] = p;
          onLoaded();
        }
      });
    },

    /**
     * Groups SVG elements (usually those retrieved from SVG document)
     * @static
     * @memberOf fabric.util
     * @param {Array} elements SVG elements to group
     * @param {Object} [options] Options object
     * @param {String} path Value to set sourcePath to
     * @return {fabric.Object|fabric.Group}
     */
    groupSVGElements: function(elements, options, path) {
      var object;
      if (elements && elements.length === 1) {
        return elements[0];
      }
      if (options) {
        if (options.width && options.height) {
          options.centerPoint = {
            x: options.width / 2,
            y: options.height / 2
          };
        }
        else {
          delete options.width;
          delete options.height;
        }
      }
      object = new fabric.Group(elements, options);
      if (typeof path !== 'undefined') {
        object.sourcePath = path;
      }
      return object;
    },

    /**
     * Populates an object with properties of another object
     * @static
     * @memberOf fabric.util
     * @param {Object} source Source object
     * @param {Object} destination Destination object
     * @return {Array} properties Properties names to include
     */
    populateWithProperties: function(source, destination, properties) {
      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {
        for (var i = 0, len = properties.length; i < len; i++) {
          if (properties[i] in source) {
            destination[properties[i]] = source[properties[i]];
          }
        }
      }
    },

    /**
     * Draws a dashed line between two points
     *
     * This method is used to draw dashed line around selection area.
     * See <a href="http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas">dotted stroke in canvas</a>
     *
     * @param {CanvasRenderingContext2D} ctx context
     * @param {Number} x  start x coordinate
     * @param {Number} y start y coordinate
     * @param {Number} x2 end x coordinate
     * @param {Number} y2 end y coordinate
     * @param {Array} da dash array pattern
     */
    drawDashedLine: function(ctx, x, y, x2, y2, da) {
      var dx = x2 - x,
          dy = y2 - y,
          len = sqrt(dx * dx + dy * dy),
          rot = atan2(dy, dx),
          dc = da.length,
          di = 0,
          draw = true;

      ctx.save();
      ctx.translate(x, y);
      ctx.moveTo(0, 0);
      ctx.rotate(rot);

      x = 0;
      while (len > x) {
        x += da[di++ % dc];
        if (x > len) {
          x = len;
        }
        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);
        draw = !draw;
      }

      ctx.restore();
    },

    /**
     * Creates canvas element
     * @static
     * @memberOf fabric.util
     * @return {CanvasElement} initialized canvas element
     */
    createCanvasElement: function() {
      return fabric.document.createElement('canvas');
    },

    /**
     * Creates a canvas element that is a copy of another and is also painted
     * @param {CanvasElement} canvas to copy size and content of
     * @static
     * @memberOf fabric.util
     * @return {CanvasElement} initialized canvas element
     */
    copyCanvasElement: function(canvas) {
      var newCanvas = fabric.util.createCanvasElement();
      newCanvas.width = canvas.width;
      newCanvas.height = canvas.height;
      newCanvas.getContext('2d').drawImage(canvas, 0, 0);
      return newCanvas;
    },

    /**
     * since 2.6.0 moved from canvas instance to utility.
     * @param {CanvasElement} canvasEl to copy size and content of
     * @param {String} format 'jpeg' or 'png', in some browsers 'webp' is ok too
     * @param {Number} quality <= 1 and > 0
     * @static
     * @memberOf fabric.util
     * @return {String} data url
     */
    toDataURL: function(canvasEl, format, quality) {
      return canvasEl.toDataURL('image/' + format, quality);
    },

    /**
     * Creates image element (works on client and node)
     * @static
     * @memberOf fabric.util
     * @return {HTMLImageElement} HTML image element
     */
    createImage: function() {
      return fabric.document.createElement('img');
    },

    /**
     * @static
     * @memberOf fabric.util
     * @deprecated since 2.0.0
     * @param {fabric.Object} receiver Object implementing `clipTo` method
     * @param {CanvasRenderingContext2D} ctx Context to clip
     */
    clipContext: function(receiver, ctx) {
      ctx.save();
      ctx.beginPath();
      receiver.clipTo(ctx);
      ctx.clip();
    },

    /**
     * Multiply matrix A by matrix B to nest transformations
     * @static
     * @memberOf fabric.util
     * @param  {Array} a First transformMatrix
     * @param  {Array} b Second transformMatrix
     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices
     * @return {Array} The product of the two transform matrices
     */
    multiplyTransformMatrices: function(a, b, is2x2) {
      // Matrix multiply a * b
      return [
        a[0] * b[0] + a[2] * b[1],
        a[1] * b[0] + a[3] * b[1],
        a[0] * b[2] + a[2] * b[3],
        a[1] * b[2] + a[3] * b[3],
        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],
        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]
      ];
    },

    /**
     * Decomposes standard 2x2 matrix into transform componentes
     * @static
     * @memberOf fabric.util
     * @param  {Array} a transformMatrix
     * @return {Object} Components of transform
     */
    qrDecompose: function(a) {
      var angle = atan2(a[1], a[0]),
          denom = pow(a[0], 2) + pow(a[1], 2),
          scaleX = sqrt(denom),
          scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,
          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);
      return {
        angle: angle  / PiBy180,
        scaleX: scaleX,
        scaleY: scaleY,
        skewX: skewX / PiBy180,
        skewY: 0,
        translateX: a[4],
        translateY: a[5]
      };
    },

    customTransformMatrix: function(scaleX, scaleY, skewX) {
      var skewMatrixX = [1, 0, abs(Math.tan(skewX * PiBy180)), 1],
          scaleMatrix = [abs(scaleX), 0, 0, abs(scaleY)];
      return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);
    },

    /**
     * reset an object transform state to neutral. Top and left are not accounted for
     * @static
     * @memberOf fabric.util
     * @param  {fabric.Object} target object to transform
     */
    resetObjectTransform: function (target) {
      target.scaleX = 1;
      target.scaleY = 1;
      target.skewX = 0;
      target.skewY = 0;
      target.flipX = false;
      target.flipY = false;
      target.rotate(0);
    },

    /**
     * Extract Object transform values
     * @static
     * @memberOf fabric.util
     * @param  {fabric.Object} target object to read from
     * @return {Object} Components of transform
     */
    saveObjectTransform: function (target) {
      return {
        scaleX: target.scaleX,
        scaleY: target.scaleY,
        skewX: target.skewX,
        skewY: target.skewY,
        angle: target.angle,
        left: target.left,
        flipX: target.flipX,
        flipY: target.flipY,
        top: target.top
      };
    },

    /**
     * Returns string representation of function body
     * @param {Function} fn Function to get body of
     * @return {String} Function body
     */
    getFunctionBody: function(fn) {
      return (String(fn).match(/function[^{]*\{([\s\S]*)\}/) || {})[1];
    },

    /**
     * Returns true if context has transparent pixel
     * at specified location (taking tolerance into account)
     * @param {CanvasRenderingContext2D} ctx context
     * @param {Number} x x coordinate
     * @param {Number} y y coordinate
     * @param {Number} tolerance Tolerance
     */
    isTransparent: function(ctx, x, y, tolerance) {

      // If tolerance is > 0 adjust start coords to take into account.
      // If moves off Canvas fix to 0
      if (tolerance > 0) {
        if (x > tolerance) {
          x -= tolerance;
        }
        else {
          x = 0;
        }
        if (y > tolerance) {
          y -= tolerance;
        }
        else {
          y = 0;
        }
      }

      var _isTransparent = true, i, temp,
          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),
          l = imageData.data.length;

      // Split image data - for tolerance > 1, pixelDataSize = 4;
      for (i = 3; i < l; i += 4) {
        temp = imageData.data[i];
        _isTransparent = temp <= 0;
        if (_isTransparent === false) {
          break; // Stop if colour found
        }
      }

      imageData = null;

      return _isTransparent;
    },

    /**
     * Parse preserveAspectRatio attribute from element
     * @param {string} attribute to be parsed
     * @return {Object} an object containing align and meetOrSlice attribute
     */
    parsePreserveAspectRatioAttribute: function(attribute) {
      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',
          aspectRatioAttrs = attribute.split(' '), align;

      if (aspectRatioAttrs && aspectRatioAttrs.length) {
        meetOrSlice = aspectRatioAttrs.pop();
        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {
          align = meetOrSlice;
          meetOrSlice = 'meet';
        }
        else if (aspectRatioAttrs.length) {
          align = aspectRatioAttrs.pop();
        }
      }
      //divide align in alignX and alignY
      alignX = align !== 'none' ? align.slice(1, 4) : 'none';
      alignY = align !== 'none' ? align.slice(5, 8) : 'none';
      return {
        meetOrSlice: meetOrSlice,
        alignX: alignX,
        alignY: alignY
      };
    },

    /**
     * Clear char widths cache for the given font family or all the cache if no
     * fontFamily is specified.
     * Use it if you know you are loading fonts in a lazy way and you are not waiting
     * for custom fonts to load properly when adding text objects to the canvas.
     * If a text object is added when its own font is not loaded yet, you will get wrong
     * measurement and so wrong bounding boxes.
     * After the font cache is cleared, either change the textObject text content or call
     * initDimensions() to trigger a recalculation
     * @memberOf fabric.util
     * @param {String} [fontFamily] font family to clear
     */
    clearFabricFontCache: function(fontFamily) {
      fontFamily = (fontFamily || '').toLowerCase();
      if (!fontFamily) {
        fabric.charWidthsCache = { };
      }
      else if (fabric.charWidthsCache[fontFamily]) {
        delete fabric.charWidthsCache[fontFamily];
      }
    },

    /**
     * Given current aspect ratio, determines the max width and height that can
     * respect the total allowed area for the cache.
     * @memberOf fabric.util
     * @param {Number} ar aspect ratio
     * @param {Number} maximumArea Maximum area you want to achieve
     * @return {Object.x} Limited dimensions by X
     * @return {Object.y} Limited dimensions by Y
     */
    limitDimsByArea: function(ar, maximumArea) {
      var roughWidth = Math.sqrt(maximumArea * ar),
          perfLimitSizeY = Math.floor(maximumArea / roughWidth);
      return { x: Math.floor(roughWidth), y: perfLimitSizeY };
    },

    capValue: function(min, value, max) {
      return Math.max(min, Math.min(value, max));
    },

    findScaleToFit: function(source, destination) {
      return Math.min(destination.width / source.width, destination.height / source.height);
    },

    findScaleToCover: function(source, destination) {
      return Math.max(destination.width / source.width, destination.height / source.height);
    }
  };
})( true ? exports : undefined);


(function() {

  var _join = Array.prototype.join;

  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp
   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here
   * http://mozilla.org/MPL/2.0/
   */
  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {
    var argsString = _join.call(arguments);
    if (fabric.arcToSegmentsCache[argsString]) {
      return fabric.arcToSegmentsCache[argsString];
    }

    var PI = Math.PI, th = rotateX * PI / 180,
        sinTh = fabric.util.sin(th),
        cosTh = fabric.util.cos(th),
        fromX = 0, fromY = 0;

    rx = Math.abs(rx);
    ry = Math.abs(ry);

    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,
        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,
        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,
        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,
        root = 0;

    if (pl < 0) {
      var s = Math.sqrt(1 - pl / (rx2 * ry2));
      rx *= s;
      ry *= s;
    }
    else {
      root = (large === sweep ? -1.0 : 1.0) *
              Math.sqrt( pl / (rx2 * py2 + ry2 * px2));
    }

    var cx = root * rx * py / ry,
        cy = -root * ry * px / rx,
        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,
        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,
        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),
        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);

    if (sweep === 0 && dtheta > 0) {
      dtheta -= 2 * PI;
    }
    else if (sweep === 1 && dtheta < 0) {
      dtheta += 2 * PI;
    }

    // Convert into cubic bezier segments <= 90deg
    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),
        result = [], mDelta = dtheta / segments,
        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),
        th3 = mTheta + mDelta;

    for (var i = 0; i < segments; i++) {
      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);
      fromX = result[i][4];
      fromY = result[i][5];
      mTheta = th3;
      th3 += mDelta;
    }
    fabric.arcToSegmentsCache[argsString] = result;
    return result;
  }

  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {
    var costh2 = fabric.util.cos(th2),
        sinth2 = fabric.util.sin(th2),
        costh3 = fabric.util.cos(th3),
        sinth3 = fabric.util.sin(th3),
        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,
        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,
        cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),
        cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),
        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),
        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);

    return [
      cp1X, cp1Y,
      cp2X, cp2Y,
      toX, toY
    ];
  }

  /*
   * Private
   */
  function calcVectorAngle(ux, uy, vx, vy) {
    var ta = Math.atan2(uy, ux),
        tb = Math.atan2(vy, vx);
    if (tb >= ta) {
      return tb - ta;
    }
    else {
      return 2 * Math.PI - (ta - tb);
    }
  }

  /**
   * Draws arc
   * @param {CanvasRenderingContext2D} ctx
   * @param {Number} fx
   * @param {Number} fy
   * @param {Array} coords
   */
  fabric.util.drawArc = function(ctx, fx, fy, coords) {
    var rx = coords[0],
        ry = coords[1],
        rot = coords[2],
        large = coords[3],
        sweep = coords[4],
        tx = coords[5],
        ty = coords[6],
        segs = [[], [], [], []],
        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);

    for (var i = 0, len = segsNorm.length; i < len; i++) {
      segs[i][0] = segsNorm[i][0] + fx;
      segs[i][1] = segsNorm[i][1] + fy;
      segs[i][2] = segsNorm[i][2] + fx;
      segs[i][3] = segsNorm[i][3] + fy;
      segs[i][4] = segsNorm[i][4] + fx;
      segs[i][5] = segsNorm[i][5] + fy;
      ctx.bezierCurveTo.apply(ctx, segs[i]);
    }
  };

  /**
   * Calculate bounding box of a elliptic-arc
   * @param {Number} fx start point of arc
   * @param {Number} fy
   * @param {Number} rx horizontal radius
   * @param {Number} ry vertical radius
   * @param {Number} rot angle of horizontal axe
   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points
   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction
   * @param {Number} tx end point of arc
   * @param {Number} ty
   */
  fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {

    var fromX = 0, fromY = 0, bound, bounds = [],
        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);

    for (var i = 0, len = segs.length; i < len; i++) {
      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);
      bounds.push({ x: bound[0].x + fx, y: bound[0].y + fy });
      bounds.push({ x: bound[1].x + fx, y: bound[1].y + fy });
      fromX = segs[i][4];
      fromY = segs[i][5];
    }
    return bounds;
  };

  /**
   * Calculate bounding box of a beziercurve
   * @param {Number} x0 starting point
   * @param {Number} y0
   * @param {Number} x1 first control point
   * @param {Number} y1
   * @param {Number} x2 secondo control point
   * @param {Number} y2
   * @param {Number} x3 end of beizer
   * @param {Number} y3
   */
  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.
  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {
    var argsString;
    if (fabric.cachesBoundsOfCurve) {
      argsString = _join.call(arguments);
      if (fabric.boundsOfCurveCache[argsString]) {
        return fabric.boundsOfCurveCache[argsString];
      }
    }

    var sqrt = Math.sqrt,
        min = Math.min, max = Math.max,
        abs = Math.abs, tvalues = [],
        bounds = [[], []],
        a, b, c, t, t1, t2, b2ac, sqrtb2ac;

    b = 6 * x0 - 12 * x1 + 6 * x2;
    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;
    c = 3 * x1 - 3 * x0;

    for (var i = 0; i < 2; ++i) {
      if (i > 0) {
        b = 6 * y0 - 12 * y1 + 6 * y2;
        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;
        c = 3 * y1 - 3 * y0;
      }

      if (abs(a) < 1e-12) {
        if (abs(b) < 1e-12) {
          continue;
        }
        t = -c / b;
        if (0 < t && t < 1) {
          tvalues.push(t);
        }
        continue;
      }
      b2ac = b * b - 4 * c * a;
      if (b2ac < 0) {
        continue;
      }
      sqrtb2ac = sqrt(b2ac);
      t1 = (-b + sqrtb2ac) / (2 * a);
      if (0 < t1 && t1 < 1) {
        tvalues.push(t1);
      }
      t2 = (-b - sqrtb2ac) / (2 * a);
      if (0 < t2 && t2 < 1) {
        tvalues.push(t2);
      }
    }

    var x, y, j = tvalues.length, jlen = j, mt;
    while (j--) {
      t = tvalues[j];
      mt = 1 - t;
      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);
      bounds[0][j] = x;

      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);
      bounds[1][j] = y;
    }

    bounds[0][jlen] = x0;
    bounds[1][jlen] = y0;
    bounds[0][jlen + 1] = x3;
    bounds[1][jlen + 1] = y3;
    var result = [
      {
        x: min.apply(null, bounds[0]),
        y: min.apply(null, bounds[1])
      },
      {
        x: max.apply(null, bounds[0]),
        y: max.apply(null, bounds[1])
      }
    ];
    if (fabric.cachesBoundsOfCurve) {
      fabric.boundsOfCurveCache[argsString] = result;
    }
    return result;
  }

  fabric.util.getBoundsOfCurve = getBoundsOfCurve;

})();


(function() {

  var slice = Array.prototype.slice;

  /**
   * Invokes method on all items in a given array
   * @memberOf fabric.util.array
   * @param {Array} array Array to iterate over
   * @param {String} method Name of a method to invoke
   * @return {Array}
   */
  function invoke(array, method) {
    var args = slice.call(arguments, 2), result = [];
    for (var i = 0, len = array.length; i < len; i++) {
      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);
    }
    return result;
  }

  /**
   * Finds maximum value in array (not necessarily "first" one)
   * @memberOf fabric.util.array
   * @param {Array} array Array to iterate over
   * @param {String} byProperty
   * @return {*}
   */
  function max(array, byProperty) {
    return find(array, byProperty, function(value1, value2) {
      return value1 >= value2;
    });
  }

  /**
   * Finds minimum value in array (not necessarily "first" one)
   * @memberOf fabric.util.array
   * @param {Array} array Array to iterate over
   * @param {String} byProperty
   * @return {*}
   */
  function min(array, byProperty) {
    return find(array, byProperty, function(value1, value2) {
      return value1 < value2;
    });
  }

  /**
   * @private
   */
  function fill(array, value) {
    var k = array.length;
    while (k--) {
      array[k] = value;
    }
    return array;
  }

  /**
   * @private
   */
  function find(array, byProperty, condition) {
    if (!array || array.length === 0) {
      return;
    }

    var i = array.length - 1,
        result = byProperty ? array[i][byProperty] : array[i];
    if (byProperty) {
      while (i--) {
        if (condition(array[i][byProperty], result)) {
          result = array[i][byProperty];
        }
      }
    }
    else {
      while (i--) {
        if (condition(array[i], result)) {
          result = array[i];
        }
      }
    }
    return result;
  }

  /**
   * @namespace fabric.util.array
   */
  fabric.util.array = {
    fill: fill,
    invoke: invoke,
    min: min,
    max: max
  };

})();


(function() {
  /**
   * Copies all enumerable properties of one js object to another
   * this does not and cannot compete with generic utils.
   * Does not clone or extend fabric.Object subclasses.
   * This is mostly for internal use and has extra handling for fabricJS objects
   * it skips the canvas property in deep cloning.
   * @memberOf fabric.util.object
   * @param {Object} destination Where to copy to
   * @param {Object} source Where to copy from
   * @return {Object}
   */

  function extend(destination, source, deep) {
    // JScript DontEnum bug is not taken care of
    // the deep clone is for internal use, is not meant to avoid
    // javascript traps or cloning html element or self referenced objects.
    if (deep) {
      if (!fabric.isLikelyNode && source instanceof Element) {
        // avoid cloning deep images, canvases,
        destination = source;
      }
      else if (source instanceof Array) {
        destination = [];
        for (var i = 0, len = source.length; i < len; i++) {
          destination[i] = extend({ }, source[i], deep);
        }
      }
      else if (source && typeof source === 'object') {
        for (var property in source) {
          if (property === 'canvas') {
            destination[property] = extend({ }, source[property]);
          }
          else if (source.hasOwnProperty(property)) {
            destination[property] = extend({ }, source[property], deep);
          }
        }
      }
      else {
        // this sounds odd for an extend but is ok for recursive use
        destination = source;
      }
    }
    else {
      for (var property in source) {
        destination[property] = source[property];
      }
    }
    return destination;
  }

  /**
   * Creates an empty object and copies all enumerable properties of another object to it
   * @memberOf fabric.util.object
   * TODO: this function return an empty object if you try to clone null
   * @param {Object} object Object to clone
   * @return {Object}
   */
  function clone(object, deep) {
    return extend({ }, object, deep);
  }

  /** @namespace fabric.util.object */
  fabric.util.object = {
    extend: extend,
    clone: clone
  };
  fabric.util.object.extend(fabric.util, fabric.Observable);
})();


(function() {

  /**
   * Camelizes a string
   * @memberOf fabric.util.string
   * @param {String} string String to camelize
   * @return {String} Camelized version of a string
   */
  function camelize(string) {
    return string.replace(/-+(.)?/g, function(match, character) {
      return character ? character.toUpperCase() : '';
    });
  }

  /**
   * Capitalizes a string
   * @memberOf fabric.util.string
   * @param {String} string String to capitalize
   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized
   * and other letters stay untouched, if false first letter is capitalized
   * and other letters are converted to lowercase.
   * @return {String} Capitalized version of a string
   */
  function capitalize(string, firstLetterOnly) {
    return string.charAt(0).toUpperCase() +
      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());
  }

  /**
   * Escapes XML in a string
   * @memberOf fabric.util.string
   * @param {String} string String to escape
   * @return {String} Escaped version of a string
   */
  function escapeXml(string) {
    return string.replace(/&/g, '&amp;')
      .replace(/"/g, '&quot;')
      .replace(/'/g, '&apos;')
      .replace(/</g, '&lt;')
      .replace(/>/g, '&gt;');
  }

  /**
   * Divide a string in the user perceived single units
   * @memberOf fabric.util.string
   * @param {String} textstring String to escape
   * @return {Array} array containing the graphemes
   */
  function graphemeSplit(textstring) {
    var i = 0, chr, graphemes = [];
    for (i = 0, chr; i < textstring.length; i++) {
      if ((chr = getWholeChar(textstring, i)) === false) {
        continue;
      }
      graphemes.push(chr);
    }
    return graphemes;
  }

  // taken from mdn in the charAt doc page.
  function getWholeChar(str, i) {
    var code = str.charCodeAt(i);

    if (isNaN(code)) {
      return ''; // Position not found
    }
    if (code < 0xD800 || code > 0xDFFF) {
      return str.charAt(i);
    }

    // High surrogate (could change last hex to 0xDB7F to treat high private
    // surrogates as single characters)
    if (0xD800 <= code && code <= 0xDBFF) {
      if (str.length <= (i + 1)) {
        throw 'High surrogate without following low surrogate';
      }
      var next = str.charCodeAt(i + 1);
      if (0xDC00 > next || next > 0xDFFF) {
        throw 'High surrogate without following low surrogate';
      }
      return str.charAt(i) + str.charAt(i + 1);
    }
    // Low surrogate (0xDC00 <= code && code <= 0xDFFF)
    if (i === 0) {
      throw 'Low surrogate without preceding high surrogate';
    }
    var prev = str.charCodeAt(i - 1);

    // (could change last hex to 0xDB7F to treat high private
    // surrogates as single characters)
    if (0xD800 > prev || prev > 0xDBFF) {
      throw 'Low surrogate without preceding high surrogate';
    }
    // We can pass over low surrogates now as the second component
    // in a pair which we have already processed
    return false;
  }


  /**
   * String utilities
   * @namespace fabric.util.string
   */
  fabric.util.string = {
    camelize: camelize,
    capitalize: capitalize,
    escapeXml: escapeXml,
    graphemeSplit: graphemeSplit
  };
})();


(function() {

  var slice = Array.prototype.slice, emptyFunction = function() { },

      IS_DONTENUM_BUGGY = (function() {
        for (var p in { toString: 1 }) {
          if (p === 'toString') {
            return false;
          }
        }
        return true;
      })(),

      /** @ignore */
      addMethods = function(klass, source, parent) {
        for (var property in source) {

          if (property in klass.prototype &&
              typeof klass.prototype[property] === 'function' &&
              (source[property] + '').indexOf('callSuper') > -1) {

            klass.prototype[property] = (function(property) {
              return function() {

                var superclass = this.constructor.superclass;
                this.constructor.superclass = parent;
                var returnValue = source[property].apply(this, arguments);
                this.constructor.superclass = superclass;

                if (property !== 'initialize') {
                  return returnValue;
                }
              };
            })(property);
          }
          else {
            klass.prototype[property] = source[property];
          }

          if (IS_DONTENUM_BUGGY) {
            if (source.toString !== Object.prototype.toString) {
              klass.prototype.toString = source.toString;
            }
            if (source.valueOf !== Object.prototype.valueOf) {
              klass.prototype.valueOf = source.valueOf;
            }
          }
        }
      };

  function Subclass() { }

  function callSuper(methodName) {
    var parentMethod = null,
        _this = this;

    // climb prototype chain to find method not equal to callee's method
    while (_this.constructor.superclass) {
      var superClassMethod = _this.constructor.superclass.prototype[methodName];
      if (_this[methodName] !== superClassMethod) {
        parentMethod = superClassMethod;
        break;
      }
      // eslint-disable-next-line
      _this = _this.constructor.superclass.prototype;
    }

    if (!parentMethod) {
      return console.log('tried to callSuper ' + methodName + ', method not found in prototype chain', this);
    }

    return (arguments.length > 1)
      ? parentMethod.apply(this, slice.call(arguments, 1))
      : parentMethod.call(this);
  }

  /**
   * Helper for creation of "classes".
   * @memberOf fabric.util
   * @param {Function} [parent] optional "Class" to inherit from
   * @param {Object} [properties] Properties shared by all instances of this class
   *                  (be careful modifying objects defined here as this would affect all instances)
   */
  function createClass() {
    var parent = null,
        properties = slice.call(arguments, 0);

    if (typeof properties[0] === 'function') {
      parent = properties.shift();
    }
    function klass() {
      this.initialize.apply(this, arguments);
    }

    klass.superclass = parent;
    klass.subclasses = [];

    if (parent) {
      Subclass.prototype = parent.prototype;
      klass.prototype = new Subclass();
      parent.subclasses.push(klass);
    }
    for (var i = 0, length = properties.length; i < length; i++) {
      addMethods(klass, properties[i], parent);
    }
    if (!klass.prototype.initialize) {
      klass.prototype.initialize = emptyFunction;
    }
    klass.prototype.constructor = klass;
    klass.prototype.callSuper = callSuper;
    return klass;
  }

  fabric.util.createClass = createClass;
})();


(function () {

  var unknown = 'unknown';

  /* EVENT HANDLING */

  function areHostMethods(object) {
    var methodNames = Array.prototype.slice.call(arguments, 1),
        t, i, len = methodNames.length;
    for (i = 0; i < len; i++) {
      t = typeof object[methodNames[i]];
      if (!(/^(?:function|object|unknown)$/).test(t)) {
        return false;
      }
    }
    return true;
  }

  /** @ignore */
  var getElement,
      setElement,
      getUniqueId = (function () {
        var uid = 0;
        return function (element) {
          return element.__uniqueID || (element.__uniqueID = 'uniqueID__' + uid++);
        };
      })();

  (function () {
    var elements = { };
    /** @ignore */
    getElement = function (uid) {
      return elements[uid];
    };
    /** @ignore */
    setElement = function (uid, element) {
      elements[uid] = element;
    };
  })();

  function createListener(uid, handler) {
    return {
      handler: handler,
      wrappedHandler: createWrappedHandler(uid, handler)
    };
  }

  function createWrappedHandler(uid, handler) {
    return function (e) {
      handler.call(getElement(uid), e || fabric.window.event);
    };
  }

  function createDispatcher(uid, eventName) {
    return function (e) {
      if (handlers[uid] && handlers[uid][eventName]) {
        var handlersForEvent = handlers[uid][eventName];
        for (var i = 0, len = handlersForEvent.length; i < len; i++) {
          handlersForEvent[i].call(this, e || fabric.window.event);
        }
      }
    };
  }

  var shouldUseAddListenerRemoveListener = (
        areHostMethods(fabric.document.documentElement, 'addEventListener', 'removeEventListener') &&
        areHostMethods(fabric.window, 'addEventListener', 'removeEventListener')),

      shouldUseAttachEventDetachEvent = (
        areHostMethods(fabric.document.documentElement, 'attachEvent', 'detachEvent') &&
        areHostMethods(fabric.window, 'attachEvent', 'detachEvent')),

      // IE branch
      listeners = { },

      // DOM L0 branch
      handlers = { },

      addListener, removeListener;

  if (shouldUseAddListenerRemoveListener) {
    /** @ignore */
    addListener = function (element, eventName, handler, options) {
      // since ie10 or ie9 can use addEventListener but they do not support options, i need to check
      element && element.addEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);
    };
    /** @ignore */
    removeListener = function (element, eventName, handler, options) {
      element && element.removeEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);
    };
  }

  else if (shouldUseAttachEventDetachEvent) {
    /** @ignore */
    addListener = function (element, eventName, handler) {
      if (!element) {
        return;
      }
      var uid = getUniqueId(element);
      setElement(uid, element);
      if (!listeners[uid]) {
        listeners[uid] = { };
      }
      if (!listeners[uid][eventName]) {
        listeners[uid][eventName] = [];

      }
      var listener = createListener(uid, handler);
      listeners[uid][eventName].push(listener);
      element.attachEvent('on' + eventName, listener.wrappedHandler);
    };
    /** @ignore */
    removeListener = function (element, eventName, handler) {
      if (!element) {
        return;
      }
      var uid = getUniqueId(element), listener;
      if (listeners[uid] && listeners[uid][eventName]) {
        for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {
          listener = listeners[uid][eventName][i];
          if (listener && listener.handler === handler) {
            element.detachEvent('on' + eventName, listener.wrappedHandler);
            listeners[uid][eventName][i] = null;
          }
        }
      }
    };
  }
  else {
    /** @ignore */
    addListener = function (element, eventName, handler) {
      if (!element) {
        return;
      }
      var uid = getUniqueId(element);
      if (!handlers[uid]) {
        handlers[uid] = { };
      }
      if (!handlers[uid][eventName]) {
        handlers[uid][eventName] = [];
        var existingHandler = element['on' + eventName];
        if (existingHandler) {
          handlers[uid][eventName].push(existingHandler);
        }
        element['on' + eventName] = createDispatcher(uid, eventName);
      }
      handlers[uid][eventName].push(handler);
    };
    /** @ignore */
    removeListener = function (element, eventName, handler) {
      if (!element) {
        return;
      }
      var uid = getUniqueId(element);
      if (handlers[uid] && handlers[uid][eventName]) {
        var handlersForEvent = handlers[uid][eventName];
        for (var i = 0, len = handlersForEvent.length; i < len; i++) {
          if (handlersForEvent[i] === handler) {
            handlersForEvent.splice(i, 1);
          }
        }
      }
    };
  }

  /**
   * Adds an event listener to an element
   * @function
   * @memberOf fabric.util
   * @param {HTMLElement} element
   * @param {String} eventName
   * @param {Function} handler
   */
  fabric.util.addListener = addListener;

  /**
   * Removes an event listener from an element
   * @function
   * @memberOf fabric.util
   * @param {HTMLElement} element
   * @param {String} eventName
   * @param {Function} handler
   */
  fabric.util.removeListener = removeListener;

  /**
   * Cross-browser wrapper for getting event's coordinates
   * @memberOf fabric.util
   * @param {Event} event Event object
   */
  function getPointer(event) {
    event || (event = fabric.window.event);

    var element = event.target ||
                  (typeof event.srcElement !== unknown ? event.srcElement : null),

        scroll = fabric.util.getScrollLeftTop(element);
    return {
      x: pointerX(event) + scroll.left,
      y: pointerY(event) + scroll.top
    };
  }

  var pointerX = function(event) {
        return event.clientX;
      },

      pointerY = function(event) {
        return event.clientY;
      };

  function _getPointer(event, pageProp, clientProp) {
    var touchProp = event.type === 'touchend' ? 'changedTouches' : 'touches';
    var pointer, eventTouchProp = event[touchProp];

    if (eventTouchProp && eventTouchProp[0]) {
      pointer = eventTouchProp[0][clientProp];
    }

    if (typeof pointer === 'undefined') {
      pointer = event[clientProp];
    }

    return pointer;
  }

  if (fabric.isTouchSupported) {
    pointerX = function(event) {
      return _getPointer(event, 'pageX', 'clientX');
    };
    pointerY = function(event) {
      return _getPointer(event, 'pageY', 'clientY');
    };
  }

  fabric.util.getPointer = getPointer;

})();


(function () {

  /**
   * Cross-browser wrapper for setting element's style
   * @memberOf fabric.util
   * @param {HTMLElement} element
   * @param {Object} styles
   * @return {HTMLElement} Element that was passed as a first argument
   */
  function setStyle(element, styles) {
    var elementStyle = element.style;
    if (!elementStyle) {
      return element;
    }
    if (typeof styles === 'string') {
      element.style.cssText += ';' + styles;
      return styles.indexOf('opacity') > -1
        ? setOpacity(element, styles.match(/opacity:\s*(\d?\.?\d*)/)[1])
        : element;
    }
    for (var property in styles) {
      if (property === 'opacity') {
        setOpacity(element, styles[property]);
      }
      else {
        var normalizedProperty = (property === 'float' || property === 'cssFloat')
          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')
          : property;
        elementStyle[normalizedProperty] = styles[property];
      }
    }
    return element;
  }

  var parseEl = fabric.document.createElement('div'),
      supportsOpacity = typeof parseEl.style.opacity === 'string',
      supportsFilters = typeof parseEl.style.filter === 'string',
      reOpacity = /alpha\s*\(\s*opacity\s*=\s*([^\)]+)\)/,

      /** @ignore */
      setOpacity = function (element) { return element; };

  if (supportsOpacity) {
    /** @ignore */
    setOpacity = function(element, value) {
      element.style.opacity = value;
      return element;
    };
  }
  else if (supportsFilters) {
    /** @ignore */
    setOpacity = function(element, value) {
      var es = element.style;
      if (element.currentStyle && !element.currentStyle.hasLayout) {
        es.zoom = 1;
      }
      if (reOpacity.test(es.filter)) {
        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');
        es.filter = es.filter.replace(reOpacity, value);
      }
      else {
        es.filter += ' alpha(opacity=' + (value * 100) + ')';
      }
      return element;
    };
  }

  fabric.util.setStyle = setStyle;

})();


(function() {

  var _slice = Array.prototype.slice;

  /**
   * Takes id and returns an element with that id (if one exists in a document)
   * @memberOf fabric.util
   * @param {String|HTMLElement} id
   * @return {HTMLElement|null}
   */
  function getById(id) {
    return typeof id === 'string' ? fabric.document.getElementById(id) : id;
  }

  var sliceCanConvertNodelists,
      /**
       * Converts an array-like object (e.g. arguments or NodeList) to an array
       * @memberOf fabric.util
       * @param {Object} arrayLike
       * @return {Array}
       */
      toArray = function(arrayLike) {
        return _slice.call(arrayLike, 0);
      };

  try {
    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;
  }
  catch (err) { }

  if (!sliceCanConvertNodelists) {
    toArray = function(arrayLike) {
      var arr = new Array(arrayLike.length), i = arrayLike.length;
      while (i--) {
        arr[i] = arrayLike[i];
      }
      return arr;
    };
  }

  /**
   * Creates specified element with specified attributes
   * @memberOf fabric.util
   * @param {String} tagName Type of an element to create
   * @param {Object} [attributes] Attributes to set on an element
   * @return {HTMLElement} Newly created element
   */
  function makeElement(tagName, attributes) {
    var el = fabric.document.createElement(tagName);
    for (var prop in attributes) {
      if (prop === 'class') {
        el.className = attributes[prop];
      }
      else if (prop === 'for') {
        el.htmlFor = attributes[prop];
      }
      else {
        el.setAttribute(prop, attributes[prop]);
      }
    }
    return el;
  }

  /**
   * Adds class to an element
   * @memberOf fabric.util
   * @param {HTMLElement} element Element to add class to
   * @param {String} className Class to add to an element
   */
  function addClass(element, className) {
    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {
      element.className += (element.className ? ' ' : '') + className;
    }
  }

  /**
   * Wraps element with another element
   * @memberOf fabric.util
   * @param {HTMLElement} element Element to wrap
   * @param {HTMLElement|String} wrapper Element to wrap with
   * @param {Object} [attributes] Attributes to set on a wrapper
   * @return {HTMLElement} wrapper
   */
  function wrapElement(element, wrapper, attributes) {
    if (typeof wrapper === 'string') {
      wrapper = makeElement(wrapper, attributes);
    }
    if (element.parentNode) {
      element.parentNode.replaceChild(wrapper, element);
    }
    wrapper.appendChild(element);
    return wrapper;
  }

  /**
   * Returns element scroll offsets
   * @memberOf fabric.util
   * @param {HTMLElement} element Element to operate on
   * @return {Object} Object with left/top values
   */
  function getScrollLeftTop(element) {

    var left = 0,
        top = 0,
        docElement = fabric.document.documentElement,
        body = fabric.document.body || {
          scrollLeft: 0, scrollTop: 0
        };

    // While loop checks (and then sets element to) .parentNode OR .host
    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,
    //  but the .parentNode of a root ShadowDOM node will always be null, instead
    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938
    while (element && (element.parentNode || element.host)) {

      // Set element to element parent, or 'host' in case of ShadowDOM
      element = element.parentNode || element.host;

      if (element === fabric.document) {
        left = body.scrollLeft || docElement.scrollLeft || 0;
        top = body.scrollTop ||  docElement.scrollTop || 0;
      }
      else {
        left += element.scrollLeft || 0;
        top += element.scrollTop || 0;
      }

      if (element.nodeType === 1 && element.style.position === 'fixed') {
        break;
      }
    }

    return { left: left, top: top };
  }

  /**
   * Returns offset for a given element
   * @function
   * @memberOf fabric.util
   * @param {HTMLElement} element Element to get offset for
   * @return {Object} Object with "left" and "top" properties
   */
  function getElementOffset(element) {
    var docElem,
        doc = element && element.ownerDocument,
        box = { left: 0, top: 0 },
        offset = { left: 0, top: 0 },
        scrollLeftTop,
        offsetAttributes = {
          borderLeftWidth: 'left',
          borderTopWidth:  'top',
          paddingLeft:     'left',
          paddingTop:      'top'
        };

    if (!doc) {
      return offset;
    }

    for (var attr in offsetAttributes) {
      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;
    }

    docElem = doc.documentElement;
    if ( typeof element.getBoundingClientRect !== 'undefined' ) {
      box = element.getBoundingClientRect();
    }

    scrollLeftTop = getScrollLeftTop(element);

    return {
      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,
      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top
    };
  }

  /**
   * Returns style attribute value of a given element
   * @memberOf fabric.util
   * @param {HTMLElement} element Element to get style attribute for
   * @param {String} attr Style attribute to get for element
   * @return {String} Style attribute value of the given element.
   */
  var getElementStyle;
  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {
    getElementStyle = function(element, attr) {
      var style = fabric.document.defaultView.getComputedStyle(element, null);
      return style ? style[attr] : undefined;
    };
  }
  else {
    getElementStyle = function(element, attr) {
      var value = element.style[attr];
      if (!value && element.currentStyle) {
        value = element.currentStyle[attr];
      }
      return value;
    };
  }

  (function () {
    var style = fabric.document.documentElement.style,
        selectProp = 'userSelect' in style
          ? 'userSelect'
          : 'MozUserSelect' in style
            ? 'MozUserSelect'
            : 'WebkitUserSelect' in style
              ? 'WebkitUserSelect'
              : 'KhtmlUserSelect' in style
                ? 'KhtmlUserSelect'
                : '';

    /**
     * Makes element unselectable
     * @memberOf fabric.util
     * @param {HTMLElement} element Element to make unselectable
     * @return {HTMLElement} Element that was passed in
     */
    function makeElementUnselectable(element) {
      if (typeof element.onselectstart !== 'undefined') {
        element.onselectstart = fabric.util.falseFunction;
      }
      if (selectProp) {
        element.style[selectProp] = 'none';
      }
      else if (typeof element.unselectable === 'string') {
        element.unselectable = 'on';
      }
      return element;
    }

    /**
     * Makes element selectable
     * @memberOf fabric.util
     * @param {HTMLElement} element Element to make selectable
     * @return {HTMLElement} Element that was passed in
     */
    function makeElementSelectable(element) {
      if (typeof element.onselectstart !== 'undefined') {
        element.onselectstart = null;
      }
      if (selectProp) {
        element.style[selectProp] = '';
      }
      else if (typeof element.unselectable === 'string') {
        element.unselectable = '';
      }
      return element;
    }

    fabric.util.makeElementUnselectable = makeElementUnselectable;
    fabric.util.makeElementSelectable = makeElementSelectable;
  })();

  (function() {

    /**
     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading
     * @memberOf fabric.util
     * @param {String} url URL of a script to load
     * @param {Function} callback Callback to execute when script is finished loading
     */
    function getScript(url, callback) {
      var headEl = fabric.document.getElementsByTagName('head')[0],
          scriptEl = fabric.document.createElement('script'),
          loading = true;

      /** @ignore */
      scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {
        if (loading) {
          if (typeof this.readyState === 'string' &&
              this.readyState !== 'loaded' &&
              this.readyState !== 'complete') {
            return;
          }
          loading = false;
          callback(e || fabric.window.event);
          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;
        }
      };
      scriptEl.src = url;
      headEl.appendChild(scriptEl);
      // causes issue in Opera
      // headEl.removeChild(scriptEl);
    }

    fabric.util.getScript = getScript;
  })();

  function getNodeCanvas(element) {
    var impl = fabric.jsdomImplForWrapper(element);
    return impl._canvas || impl._image;
  };

  function cleanUpJsdomNode(element) {
    if (!fabric.isLikelyNode) {
      return;
    }
    var impl = fabric.jsdomImplForWrapper(element);
    if (impl) {
      impl._image = null;
      impl._canvas = null;
      // unsure if necessary
      impl._currentSrc = null;
      impl._attributes = null;
      impl._classList = null;
    }
  }

  fabric.util.getById = getById;
  fabric.util.toArray = toArray;
  fabric.util.makeElement = makeElement;
  fabric.util.addClass = addClass;
  fabric.util.wrapElement = wrapElement;
  fabric.util.getScrollLeftTop = getScrollLeftTop;
  fabric.util.getElementOffset = getElementOffset;
  fabric.util.getElementStyle = getElementStyle;
  fabric.util.getNodeCanvas = getNodeCanvas;
  fabric.util.cleanUpJsdomNode = cleanUpJsdomNode;

})();


(function() {

  function addParamToUrl(url, param) {
    return url + (/\?/.test(url) ? '&' : '?') + param;
  }

  function emptyFn() { }

  /**
   * Cross-browser abstraction for sending XMLHttpRequest
   * @memberOf fabric.util
   * @param {String} url URL to send XMLHttpRequest to
   * @param {Object} [options] Options object
   * @param {String} [options.method="GET"]
   * @param {String} [options.parameters] parameters to append to url in GET or in body
   * @param {String} [options.body] body to send with POST or PUT request
   * @param {Function} options.onComplete Callback to invoke when request is completed
   * @return {XMLHttpRequest} request
   */
  function request(url, options) {
    options || (options = { });

    var method = options.method ? options.method.toUpperCase() : 'GET',
        onComplete = options.onComplete || function() { },
        xhr = new fabric.window.XMLHttpRequest(),
        body = options.body || options.parameters;

    /** @ignore */
    xhr.onreadystatechange = function() {
      if (xhr.readyState === 4) {
        onComplete(xhr);
        xhr.onreadystatechange = emptyFn;
      }
    };

    if (method === 'GET') {
      body = null;
      if (typeof options.parameters === 'string') {
        url = addParamToUrl(url, options.parameters);
      }
    }

    xhr.open(method, url, true);

    if (method === 'POST' || method === 'PUT') {
      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
    }

    xhr.send(body);
    return xhr;
  }

  fabric.util.request = request;
})();


/**
 * Wrapper around `console.log` (when available)
 * @param {*} [values] Values to log
 */
fabric.log = function() { };

/**
 * Wrapper around `console.warn` (when available)
 * @param {*} [values] Values to log as a warning
 */
fabric.warn = function() { };

/* eslint-disable */
if (typeof console !== 'undefined') {

  ['log', 'warn'].forEach(function(methodName) {

    if (typeof console[methodName] !== 'undefined' &&
        typeof console[methodName].apply === 'function') {

      fabric[methodName] = function() {
        return console[methodName].apply(console, arguments);
      };
    }
  });
}
/* eslint-enable */


(function() {

  function noop() {
    return false;
  }

  /**
   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.
   * @memberOf fabric.util
   * @param {Object} [options] Animation options
   * @param {Function} [options.onChange] Callback; invoked on every value change
   * @param {Function} [options.onComplete] Callback; invoked when value change is completed
   * @param {Number} [options.startValue=0] Starting value
   * @param {Number} [options.endValue=100] Ending value
   * @param {Number} [options.byValue=100] Value to modify the property by
   * @param {Function} [options.easing] Easing function
   * @param {Number} [options.duration=500] Duration of change (in ms)
   */
  function animate(options) {

    requestAnimFrame(function(timestamp) {
      options || (options = { });

      var start = timestamp || +new Date(),
          duration = options.duration || 500,
          finish = start + duration, time,
          onChange = options.onChange || noop,
          abort = options.abort || noop,
          onComplete = options.onComplete || noop,
          easing = options.easing || function(t, b, c, d) {return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},
          startValue = 'startValue' in options ? options.startValue : 0,
          endValue = 'endValue' in options ? options.endValue : 100,
          byValue = options.byValue || endValue - startValue;

      options.onStart && options.onStart();

      (function tick(ticktime) {
        if (abort()) {
          onComplete(endValue, 1, 1);
          return;
        }
        time = ticktime || +new Date();
        var currentTime = time > finish ? duration : (time - start),
            timePerc = currentTime / duration,
            current = easing(currentTime, startValue, byValue, duration),
            valuePerc = Math.abs((current - startValue) / byValue);
        onChange(current, valuePerc, timePerc);
        if (time > finish) {
          options.onComplete && options.onComplete();
          return;
        }
        requestAnimFrame(tick);
      })(start);
    });

  }

  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||
                          fabric.window.webkitRequestAnimationFrame ||
                          fabric.window.mozRequestAnimationFrame    ||
                          fabric.window.oRequestAnimationFrame      ||
                          fabric.window.msRequestAnimationFrame     ||
                          function(callback) {
                            return fabric.window.setTimeout(callback, 1000 / 60);
                          };

  var _cancelAnimFrame = fabric.window.cancelAnimationFrame || fabric.window.clearTimeout;

  /**
   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/
   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method
   * @memberOf fabric.util
   * @param {Function} callback Callback to invoke
   * @param {DOMElement} element optional Element to associate with animation
   */
  function requestAnimFrame() {
    return _requestAnimFrame.apply(fabric.window, arguments);
  }

  function cancelAnimFrame() {
    return _cancelAnimFrame.apply(fabric.window, arguments);
  }

  fabric.util.animate = animate;
  fabric.util.requestAnimFrame = requestAnimFrame;
  fabric.util.cancelAnimFrame = cancelAnimFrame;
})();


(function() {
  // Calculate an in-between color. Returns a "rgba()" string.
  // Credit: Edwin Martin <edwin@bitstorm.org>
  //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js
  function calculateColor(begin, end, pos) {
    var color = 'rgba('
        + parseInt((begin[0] + pos * (end[0] - begin[0])), 10) + ','
        + parseInt((begin[1] + pos * (end[1] - begin[1])), 10) + ','
        + parseInt((begin[2] + pos * (end[2] - begin[2])), 10);

    color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);
    color += ')';
    return color;
  }

  /**
   * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.
   * @memberOf fabric.util
   * @param {String} fromColor The starting color in hex or rgb(a) format.
   * @param {String} toColor The starting color in hex or rgb(a) format.
   * @param {Number} [duration] Duration of change (in ms).
   * @param {Object} [options] Animation options
   * @param {Function} [options.onChange] Callback; invoked on every value change
   * @param {Function} [options.onComplete] Callback; invoked when value change is completed
   * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.
   */
  function animateColor(fromColor, toColor, duration, options) {
    var startColor = new fabric.Color(fromColor).getSource(),
        endColor = new fabric.Color(toColor).getSource();

    options = options || {};

    fabric.util.animate(fabric.util.object.extend(options, {
      duration: duration || 500,
      startValue: startColor,
      endValue: endColor,
      byValue: endColor,
      easing: function (currentTime, startValue, byValue, duration) {
        var posValue = options.colorEasing
          ? options.colorEasing(currentTime, duration)
          : 1 - Math.cos(currentTime / duration * (Math.PI / 2));
        return calculateColor(startValue, byValue, posValue);
      }
    }));
  }

  fabric.util.animateColor = animateColor;

})();


(function() {

  function normalize(a, c, p, s) {
    if (a < Math.abs(c)) {
      a = c;
      s = p / 4;
    }
    else {
      //handle the 0/0 case:
      if (c === 0 && a === 0) {
        s = p / (2 * Math.PI) * Math.asin(1);
      }
      else {
        s = p / (2 * Math.PI) * Math.asin(c / a);
      }
    }
    return { a: a, c: c, p: p, s: s };
  }

  function elastic(opts, t, d) {
    return opts.a *
      Math.pow(2, 10 * (t -= 1)) *
      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );
  }

  /**
   * Cubic easing out
   * @memberOf fabric.util.ease
   */
  function easeOutCubic(t, b, c, d) {
    return c * ((t = t / d - 1) * t * t + 1) + b;
  }

  /**
   * Cubic easing in and out
   * @memberOf fabric.util.ease
   */
  function easeInOutCubic(t, b, c, d) {
    t /= d / 2;
    if (t < 1) {
      return c / 2 * t * t * t + b;
    }
    return c / 2 * ((t -= 2) * t * t + 2) + b;
  }

  /**
   * Quartic easing in
   * @memberOf fabric.util.ease
   */
  function easeInQuart(t, b, c, d) {
    return c * (t /= d) * t * t * t + b;
  }

  /**
   * Quartic easing out
   * @memberOf fabric.util.ease
   */
  function easeOutQuart(t, b, c, d) {
    return -c * ((t = t / d - 1) * t * t * t - 1) + b;
  }

  /**
   * Quartic easing in and out
   * @memberOf fabric.util.ease
   */
  function easeInOutQuart(t, b, c, d) {
    t /= d / 2;
    if (t < 1) {
      return c / 2 * t * t * t * t + b;
    }
    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;
  }

  /**
   * Quintic easing in
   * @memberOf fabric.util.ease
   */
  function easeInQuint(t, b, c, d) {
    return c * (t /= d) * t * t * t * t + b;
  }

  /**
   * Quintic easing out
   * @memberOf fabric.util.ease
   */
  function easeOutQuint(t, b, c, d) {
    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;
  }

  /**
   * Quintic easing in and out
   * @memberOf fabric.util.ease
   */
  function easeInOutQuint(t, b, c, d) {
    t /= d / 2;
    if (t < 1) {
      return c / 2 * t * t * t * t * t + b;
    }
    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;
  }

  /**
   * Sinusoidal easing in
   * @memberOf fabric.util.ease
   */
  function easeInSine(t, b, c, d) {
    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;
  }

  /**
   * Sinusoidal easing out
   * @memberOf fabric.util.ease
   */
  function easeOutSine(t, b, c, d) {
    return c * Math.sin(t / d * (Math.PI / 2)) + b;
  }

  /**
   * Sinusoidal easing in and out
   * @memberOf fabric.util.ease
   */
  function easeInOutSine(t, b, c, d) {
    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;
  }

  /**
   * Exponential easing in
   * @memberOf fabric.util.ease
   */
  function easeInExpo(t, b, c, d) {
    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;
  }

  /**
   * Exponential easing out
   * @memberOf fabric.util.ease
   */
  function easeOutExpo(t, b, c, d) {
    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;
  }

  /**
   * Exponential easing in and out
   * @memberOf fabric.util.ease
   */
  function easeInOutExpo(t, b, c, d) {
    if (t === 0) {
      return b;
    }
    if (t === d) {
      return b + c;
    }
    t /= d / 2;
    if (t < 1) {
      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;
    }
    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;
  }

  /**
   * Circular easing in
   * @memberOf fabric.util.ease
   */
  function easeInCirc(t, b, c, d) {
    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;
  }

  /**
   * Circular easing out
   * @memberOf fabric.util.ease
   */
  function easeOutCirc(t, b, c, d) {
    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;
  }

  /**
   * Circular easing in and out
   * @memberOf fabric.util.ease
   */
  function easeInOutCirc(t, b, c, d) {
    t /= d / 2;
    if (t < 1) {
      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;
    }
    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;
  }

  /**
   * Elastic easing in
   * @memberOf fabric.util.ease
   */
  function easeInElastic(t, b, c, d) {
    var s = 1.70158, p = 0, a = c;
    if (t === 0) {
      return b;
    }
    t /= d;
    if (t === 1) {
      return b + c;
    }
    if (!p) {
      p = d * 0.3;
    }
    var opts = normalize(a, c, p, s);
    return -elastic(opts, t, d) + b;
  }

  /**
   * Elastic easing out
   * @memberOf fabric.util.ease
   */
  function easeOutElastic(t, b, c, d) {
    var s = 1.70158, p = 0, a = c;
    if (t === 0) {
      return b;
    }
    t /= d;
    if (t === 1) {
      return b + c;
    }
    if (!p) {
      p = d * 0.3;
    }
    var opts = normalize(a, c, p, s);
    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;
  }

  /**
   * Elastic easing in and out
   * @memberOf fabric.util.ease
   */
  function easeInOutElastic(t, b, c, d) {
    var s = 1.70158, p = 0, a = c;
    if (t === 0) {
      return b;
    }
    t /= d / 2;
    if (t === 2) {
      return b + c;
    }
    if (!p) {
      p = d * (0.3 * 1.5);
    }
    var opts = normalize(a, c, p, s);
    if (t < 1) {
      return -0.5 * elastic(opts, t, d) + b;
    }
    return opts.a * Math.pow(2, -10 * (t -= 1)) *
      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;
  }

  /**
   * Backwards easing in
   * @memberOf fabric.util.ease
   */
  function easeInBack(t, b, c, d, s) {
    if (s === undefined) {
      s = 1.70158;
    }
    return c * (t /= d) * t * ((s + 1) * t - s) + b;
  }

  /**
   * Backwards easing out
   * @memberOf fabric.util.ease
   */
  function easeOutBack(t, b, c, d, s) {
    if (s === undefined) {
      s = 1.70158;
    }
    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;
  }

  /**
   * Backwards easing in and out
   * @memberOf fabric.util.ease
   */
  function easeInOutBack(t, b, c, d, s) {
    if (s === undefined) {
      s = 1.70158;
    }
    t /= d / 2;
    if (t < 1) {
      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;
    }
    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;
  }

  /**
   * Bouncing easing in
   * @memberOf fabric.util.ease
   */
  function easeInBounce(t, b, c, d) {
    return c - easeOutBounce (d - t, 0, c, d) + b;
  }

  /**
   * Bouncing easing out
   * @memberOf fabric.util.ease
   */
  function easeOutBounce(t, b, c, d) {
    if ((t /= d) < (1 / 2.75)) {
      return c * (7.5625 * t * t) + b;
    }
    else if (t < (2 / 2.75)) {
      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;
    }
    else if (t < (2.5 / 2.75)) {
      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;
    }
    else {
      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;
    }
  }

  /**
   * Bouncing easing in and out
   * @memberOf fabric.util.ease
   */
  function easeInOutBounce(t, b, c, d) {
    if (t < d / 2) {
      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;
    }
    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;
  }

  /**
   * Easing functions
   * See <a href="http://gizma.com/easing/">Easing Equations by Robert Penner</a>
   * @namespace fabric.util.ease
   */
  fabric.util.ease = {

    /**
     * Quadratic easing in
     * @memberOf fabric.util.ease
     */
    easeInQuad: function(t, b, c, d) {
      return c * (t /= d) * t + b;
    },

    /**
     * Quadratic easing out
     * @memberOf fabric.util.ease
     */
    easeOutQuad: function(t, b, c, d) {
      return -c * (t /= d) * (t - 2) + b;
    },

    /**
     * Quadratic easing in and out
     * @memberOf fabric.util.ease
     */
    easeInOutQuad: function(t, b, c, d) {
      t /= (d / 2);
      if (t < 1) {
        return c / 2 * t * t + b;
      }
      return -c / 2 * ((--t) * (t - 2) - 1) + b;
    },

    /**
     * Cubic easing in
     * @memberOf fabric.util.ease
     */
    easeInCubic: function(t, b, c, d) {
      return c * (t /= d) * t * t + b;
    },

    easeOutCubic: easeOutCubic,
    easeInOutCubic: easeInOutCubic,
    easeInQuart: easeInQuart,
    easeOutQuart: easeOutQuart,
    easeInOutQuart: easeInOutQuart,
    easeInQuint: easeInQuint,
    easeOutQuint: easeOutQuint,
    easeInOutQuint: easeInOutQuint,
    easeInSine: easeInSine,
    easeOutSine: easeOutSine,
    easeInOutSine: easeInOutSine,
    easeInExpo: easeInExpo,
    easeOutExpo: easeOutExpo,
    easeInOutExpo: easeInOutExpo,
    easeInCirc: easeInCirc,
    easeOutCirc: easeOutCirc,
    easeInOutCirc: easeInOutCirc,
    easeInElastic: easeInElastic,
    easeOutElastic: easeOutElastic,
    easeInOutElastic: easeInOutElastic,
    easeInBack: easeInBack,
    easeOutBack: easeOutBack,
    easeInOutBack: easeInOutBack,
    easeInBounce: easeInBounce,
    easeOutBounce: easeOutBounce,
    easeInOutBounce: easeInOutBounce
  };

})();


(function(global) {

  'use strict';

  /**
   * @name fabric
   * @namespace
   */

  var fabric = global.fabric || (global.fabric = { }),
      extend = fabric.util.object.extend,
      clone = fabric.util.object.clone,
      toFixed = fabric.util.toFixed,
      parseUnit = fabric.util.parseUnit,
      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,

      svgValidTagNames = ['path', 'circle', 'polygon', 'polyline', 'ellipse', 'rect', 'line',
        'image', 'text'],
      svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],
      svgInvalidAncestors = ['pattern', 'defs', 'symbol', 'metadata', 'clipPath', 'mask', 'desc'],
      svgValidParents = ['symbol', 'g', 'a', 'svg', 'clipPath', 'defs'],

      attributesMap = {
        cx:                   'left',
        x:                    'left',
        r:                    'radius',
        cy:                   'top',
        y:                    'top',
        display:              'visible',
        visibility:           'visible',
        transform:            'transformMatrix',
        'fill-opacity':       'fillOpacity',
        'fill-rule':          'fillRule',
        'font-family':        'fontFamily',
        'font-size':          'fontSize',
        'font-style':         'fontStyle',
        'font-weight':        'fontWeight',
        'letter-spacing':     'charSpacing',
        'paint-order':        'paintFirst',
        'stroke-dasharray':   'strokeDashArray',
        'stroke-dashoffset':  'strokeDashOffset',
        'stroke-linecap':     'strokeLineCap',
        'stroke-linejoin':    'strokeLineJoin',
        'stroke-miterlimit':  'strokeMiterLimit',
        'stroke-opacity':     'strokeOpacity',
        'stroke-width':       'strokeWidth',
        'text-decoration':    'textDecoration',
        'text-anchor':        'textAnchor',
        opacity:              'opacity',
        'clip-path':          'clipPath',
        'clip-rule':          'clipRule',
        'vector-effect':      'strokeUniform'
      },

      colorAttributes = {
        stroke: 'strokeOpacity',
        fill:   'fillOpacity'
      };

  fabric.svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);
  fabric.svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);
  fabric.svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);
  fabric.svgValidParentsRegEx = getSvgRegex(svgValidParents);

  fabric.cssRules = { };
  fabric.gradientDefs = { };
  fabric.clipPaths = { };

  function normalizeAttr(attr) {
    // transform attribute names
    if (attr in attributesMap) {
      return attributesMap[attr];
    }
    return attr;
  }

  function normalizeValue(attr, value, parentAttributes, fontSize) {
    var isArray = Object.prototype.toString.call(value) === '[object Array]',
        parsed;

    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {
      value = '';
    }
    else if (attr === 'vector-effect') {
      value = value === 'non-scaling-stroke';
    }
    else if (attr === 'strokeDashArray') {
      if (value === 'none') {
        value = null;
      }
      else {
        value = value.replace(/,/g, ' ').split(/\s+/).map(parseFloat);
      }
    }
    else if (attr === 'transformMatrix') {
      if (parentAttributes && parentAttributes.transformMatrix) {
        value = multiplyTransformMatrices(
          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));
      }
      else {
        value = fabric.parseTransformAttribute(value);
      }
    }
    else if (attr === 'visible') {
      value = value !== 'none' && value !== 'hidden';
      // display=none on parent element always takes precedence over child element
      if (parentAttributes && parentAttributes.visible === false) {
        value = false;
      }
    }
    else if (attr === 'opacity') {
      value = parseFloat(value);
      if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {
        value *= parentAttributes.opacity;
      }
    }
    else if (attr === 'textAnchor' /* text-anchor */) {
      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';
    }
    else if (attr === 'charSpacing') {
      // parseUnit returns px and we convert it to em
      parsed = parseUnit(value, fontSize) / fontSize * 1000;
    }
    else if (attr === 'paintFirst') {
      var fillIndex = value.indexOf('fill');
      var strokeIndex = value.indexOf('stroke');
      var value = 'fill';
      if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {
        value = 'stroke';
      }
      else if (fillIndex === -1 && strokeIndex > -1) {
        value = 'stroke';
      }
    }
    else if (attr === 'href' || attr === 'xlink:href') {
      return value;
    }
    else {
      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);
    }

    return (!isArray && isNaN(parsed) ? value : parsed);
  }

  /**
    * @private
    */
  function getSvgRegex(arr) {
    return new RegExp('^(' + arr.join('|') + ')\\b', 'i');
  }

  /**
   * @private
   * @param {Object} attributes Array of attributes to parse
   */
  function _setStrokeFillOpacity(attributes) {
    for (var attr in colorAttributes) {

      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {
        continue;
      }

      if (typeof attributes[attr] === 'undefined') {
        if (!fabric.Object.prototype[attr]) {
          continue;
        }
        attributes[attr] = fabric.Object.prototype[attr];
      }

      if (attributes[attr].indexOf('url(') === 0) {
        continue;
      }

      var color = new fabric.Color(attributes[attr]);
      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();
    }
    return attributes;
  }

  /**
   * @private
   */
  function _getMultipleNodes(doc, nodeNames) {
    var nodeName, nodeArray = [], nodeList, i, len;
    for (i = 0, len = nodeNames.length; i < len; i++) {
      nodeName = nodeNames[i];
      nodeList = doc.getElementsByTagName(nodeName);
      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));
    }
    return nodeArray;
  }

  /**
   * Parses "transform" attribute, returning an array of values
   * @static
   * @function
   * @memberOf fabric
   * @param {String} attributeValue String containing attribute value
   * @return {Array} Array of 6 elements representing transformation matrix
   */
  fabric.parseTransformAttribute = (function() {
    function rotateMatrix(matrix, args) {
      var cos = fabric.util.cos(args[0]), sin = fabric.util.sin(args[0]),
          x = 0, y = 0;
      if (args.length === 3) {
        x = args[1];
        y = args[2];
      }

      matrix[0] = cos;
      matrix[1] = sin;
      matrix[2] = -sin;
      matrix[3] = cos;
      matrix[4] = x - (cos * x - sin * y);
      matrix[5] = y - (sin * x + cos * y);
    }

    function scaleMatrix(matrix, args) {
      var multiplierX = args[0],
          multiplierY = (args.length === 2) ? args[1] : args[0];

      matrix[0] = multiplierX;
      matrix[3] = multiplierY;
    }

    function skewMatrix(matrix, args, pos) {
      matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));
    }

    function translateMatrix(matrix, args) {
      matrix[4] = args[0];
      if (args.length === 2) {
        matrix[5] = args[1];
      }
    }

    // identity matrix
    var iMatrix = fabric.iMatrix,

        // == begin transform regexp
        number = fabric.reNum,

        commaWsp = '(?:\\s+,?\\s*|,\\s*)',

        skewX = '(?:(skewX)\\s*\\(\\s*(' + number + ')\\s*\\))',

        skewY = '(?:(skewY)\\s*\\(\\s*(' + number + ')\\s*\\))',

        rotate = '(?:(rotate)\\s*\\(\\s*(' + number + ')(?:' +
                    commaWsp + '(' + number + ')' +
                    commaWsp + '(' + number + '))?\\s*\\))',

        scale = '(?:(scale)\\s*\\(\\s*(' + number + ')(?:' +
                    commaWsp + '(' + number + '))?\\s*\\))',

        translate = '(?:(translate)\\s*\\(\\s*(' + number + ')(?:' +
                    commaWsp + '(' + number + '))?\\s*\\))',

        matrix = '(?:(matrix)\\s*\\(\\s*' +
                  '(' + number + ')' + commaWsp +
                  '(' + number + ')' + commaWsp +
                  '(' + number + ')' + commaWsp +
                  '(' + number + ')' + commaWsp +
                  '(' + number + ')' + commaWsp +
                  '(' + number + ')' +
                  '\\s*\\))',

        transform = '(?:' +
                    matrix + '|' +
                    translate + '|' +
                    scale + '|' +
                    rotate + '|' +
                    skewX + '|' +
                    skewY +
                    ')',

        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',

        transformList = '^\\s*(?:' + transforms + '?)\\s*$',

        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute
        reTransformList = new RegExp(transformList),
        // == end transform regexp

        reTransform = new RegExp(transform, 'g');

    return function(attributeValue) {

      // start with identity matrix
      var matrix = iMatrix.concat(),
          matrices = [];

      // return if no argument was given or
      // an argument does not match transform attribute regexp
      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {
        return matrix;
      }

      attributeValue.replace(reTransform, function(match) {

        var m = new RegExp(transform).exec(match).filter(function (match) {
              // match !== '' && match != null
              return (!!match);
            }),
            operation = m[1],
            args = m.slice(2).map(parseFloat);

        switch (operation) {
          case 'translate':
            translateMatrix(matrix, args);
            break;
          case 'rotate':
            args[0] = fabric.util.degreesToRadians(args[0]);
            rotateMatrix(matrix, args);
            break;
          case 'scale':
            scaleMatrix(matrix, args);
            break;
          case 'skewX':
            skewMatrix(matrix, args, 2);
            break;
          case 'skewY':
            skewMatrix(matrix, args, 1);
            break;
          case 'matrix':
            matrix = args;
            break;
        }

        // snapshot current matrix into matrices array
        matrices.push(matrix.concat());
        // reset
        matrix = iMatrix.concat();
      });

      var combinedMatrix = matrices[0];
      while (matrices.length > 1) {
        matrices.shift();
        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);
      }
      return combinedMatrix;
    };
  })();

  /**
   * @private
   */
  function parseStyleString(style, oStyle) {
    var attr, value;
    style.replace(/;\s*$/, '').split(';').forEach(function (chunk) {
      var pair = chunk.split(':');

      attr = pair[0].trim().toLowerCase();
      value =  pair[1].trim();

      oStyle[attr] = value;
    });
  }

  /**
   * @private
   */
  function parseStyleObject(style, oStyle) {
    var attr, value;
    for (var prop in style) {
      if (typeof style[prop] === 'undefined') {
        continue;
      }

      attr = prop.toLowerCase();
      value = style[prop];

      oStyle[attr] = value;
    }
  }

  /**
   * @private
   */
  function getGlobalStylesForElement(element, svgUid) {
    var styles = { };
    for (var rule in fabric.cssRules[svgUid]) {
      if (elementMatchesRule(element, rule.split(' '))) {
        for (var property in fabric.cssRules[svgUid][rule]) {
          styles[property] = fabric.cssRules[svgUid][rule][property];
        }
      }
    }
    return styles;
  }

  /**
   * @private
   */
  function elementMatchesRule(element, selectors) {
    var firstMatching, parentMatching = true;
    //start from rightmost selector.
    firstMatching = selectorMatches(element, selectors.pop());
    if (firstMatching && selectors.length) {
      parentMatching = doesSomeParentMatch(element, selectors);
    }
    return firstMatching && parentMatching && (selectors.length === 0);
  }

  function doesSomeParentMatch(element, selectors) {
    var selector, parentMatching = true;
    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {
      if (parentMatching) {
        selector = selectors.pop();
      }
      element = element.parentNode;
      parentMatching = selectorMatches(element, selector);
    }
    return selectors.length === 0;
  }

  /**
   * @private
   */
  function selectorMatches(element, selector) {
    var nodeName = element.nodeName,
        classNames = element.getAttribute('class'),
        id = element.getAttribute('id'), matcher, i;
    // i check if a selector matches slicing away part from it.
    // if i get empty string i should match
    matcher = new RegExp('^' + nodeName, 'i');
    selector = selector.replace(matcher, '');
    if (id && selector.length) {
      matcher = new RegExp('#' + id + '(?![a-zA-Z\\-]+)', 'i');
      selector = selector.replace(matcher, '');
    }
    if (classNames && selector.length) {
      classNames = classNames.split(' ');
      for (i = classNames.length; i--;) {
        matcher = new RegExp('\\.' + classNames[i] + '(?![a-zA-Z\\-]+)', 'i');
        selector = selector.replace(matcher, '');
      }
    }
    return selector.length === 0;
  }

  /**
   * @private
   * to support IE8 missing getElementById on SVGdocument and on node xmlDOM
   */
  function elementById(doc, id) {
    var el;
    doc.getElementById && (el = doc.getElementById(id));
    if (el) {
      return el;
    }
    var node, i, len, nodelist = doc.getElementsByTagName('*');
    for (i = 0, len = nodelist.length; i < len; i++) {
      node = nodelist[i];
      if (id === node.getAttribute('id')) {
        return node;
      }
    }
  }

  /**
   * @private
   */
  function parseUseDirectives(doc) {
    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;
    while (nodelist.length && i < nodelist.length) {
      var el = nodelist[i],
          xlink = (el.getAttribute('xlink:href') || el.getAttribute('href')).substr(1),
          x = el.getAttribute('x') || 0,
          y = el.getAttribute('y') || 0,
          el2 = elementById(doc, xlink).cloneNode(true),
          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',
          parentNode, oldLength = nodelist.length, attr, j, attrs, len;

      applyViewboxTransform(el2);
      if (/^svg$/i.test(el2.nodeName)) {
        var el3 = el2.ownerDocument.createElement('g');
        for (j = 0, attrs = el2.attributes, len = attrs.length; j < len; j++) {
          attr = attrs.item(j);
          el3.setAttribute(attr.nodeName, attr.nodeValue);
        }
        // el2.firstChild != null
        while (el2.firstChild) {
          el3.appendChild(el2.firstChild);
        }
        el2 = el3;
      }

      for (j = 0, attrs = el.attributes, len = attrs.length; j < len; j++) {
        attr = attrs.item(j);
        if (attr.nodeName === 'x' || attr.nodeName === 'y' ||
          attr.nodeName === 'xlink:href' || attr.nodeName === 'href') {
          continue;
        }

        if (attr.nodeName === 'transform') {
          currentTrans = attr.nodeValue + ' ' + currentTrans;
        }
        else {
          el2.setAttribute(attr.nodeName, attr.nodeValue);
        }
      }

      el2.setAttribute('transform', currentTrans);
      el2.setAttribute('instantiated_by_use', '1');
      el2.removeAttribute('id');
      parentNode = el.parentNode;
      parentNode.replaceChild(el2, el);
      // some browsers do not shorten nodelist after replaceChild (IE8)
      if (nodelist.length === oldLength) {
        i++;
      }
    }
  }

  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute
  // matches, e.g.: +14.56e-12, etc.
  var reViewBoxAttrValue = new RegExp(
    '^' +
    '\\s*(' + fabric.reNum + '+)\\s*,?' +
    '\\s*(' + fabric.reNum + '+)\\s*,?' +
    '\\s*(' + fabric.reNum + '+)\\s*,?' +
    '\\s*(' + fabric.reNum + '+)\\s*' +
    '$'
  );

  /**
   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements
   */
  function applyViewboxTransform(element) {

    var viewBoxAttr = element.getAttribute('viewBox'),
        scaleX = 1,
        scaleY = 1,
        minX = 0,
        minY = 0,
        viewBoxWidth, viewBoxHeight, matrix, el,
        widthAttr = element.getAttribute('width'),
        heightAttr = element.getAttribute('height'),
        x = element.getAttribute('x') || 0,
        y = element.getAttribute('y') || 0,
        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',
        missingViewBox = (!viewBoxAttr || !fabric.svgViewBoxElementsRegEx.test(element.nodeName)
                           || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),
        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),
        toBeParsed = missingViewBox && missingDimAttr,
        parsedDim = { }, translateMatrix = '', widthDiff = 0, heightDiff = 0;

    parsedDim.width = 0;
    parsedDim.height = 0;
    parsedDim.toBeParsed = toBeParsed;

    if (toBeParsed) {
      return parsedDim;
    }

    if (missingViewBox) {
      parsedDim.width = parseUnit(widthAttr);
      parsedDim.height = parseUnit(heightAttr);
      return parsedDim;
    }

    minX = -parseFloat(viewBoxAttr[1]);
    minY = -parseFloat(viewBoxAttr[2]);
    viewBoxWidth = parseFloat(viewBoxAttr[3]);
    viewBoxHeight = parseFloat(viewBoxAttr[4]);

    if (!missingDimAttr) {
      parsedDim.width = parseUnit(widthAttr);
      parsedDim.height = parseUnit(heightAttr);
      scaleX = parsedDim.width / viewBoxWidth;
      scaleY = parsedDim.height / viewBoxHeight;
    }
    else {
      parsedDim.width = viewBoxWidth;
      parsedDim.height = viewBoxHeight;
    }

    // default is to preserve aspect ratio
    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);
    if (preserveAspectRatio.alignX !== 'none') {
      //translate all container for the effect of Mid, Min, Max
      if (preserveAspectRatio.meetOrSlice === 'meet') {
        scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);
        // calculate additional translation to move the viewbox
      }
      if (preserveAspectRatio.meetOrSlice === 'slice') {
        scaleY = scaleX = (scaleX > scaleY ? scaleX : scaleY);
        // calculate additional translation to move the viewbox
      }
      widthDiff = parsedDim.width - viewBoxWidth * scaleX;
      heightDiff = parsedDim.height - viewBoxHeight * scaleX;
      if (preserveAspectRatio.alignX === 'Mid') {
        widthDiff /= 2;
      }
      if (preserveAspectRatio.alignY === 'Mid') {
        heightDiff /= 2;
      }
      if (preserveAspectRatio.alignX === 'Min') {
        widthDiff = 0;
      }
      if (preserveAspectRatio.alignY === 'Min') {
        heightDiff = 0;
      }
    }

    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {
      return parsedDim;
    }

    if (x || y) {
      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';
    }

    matrix = translateMatrix + ' matrix(' + scaleX +
                  ' 0' +
                  ' 0 ' +
                  scaleY + ' ' +
                  (minX * scaleX + widthDiff) + ' ' +
                  (minY * scaleY + heightDiff) + ') ';
    parsedDim.viewboxTransform = fabric.parseTransformAttribute(matrix);
    if (element.nodeName === 'svg') {
      el = element.ownerDocument.createElement('g');
      // element.firstChild != null
      while (element.firstChild) {
        el.appendChild(element.firstChild);
      }
      element.appendChild(el);
    }
    else {
      el = element;
      matrix = el.getAttribute('transform') + matrix;
    }
    el.setAttribute('transform', matrix);
    return parsedDim;
  }

  function hasAncestorWithNodeName(element, nodeName) {
    while (element && (element = element.parentNode)) {
      if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))
        && !element.getAttribute('instantiated_by_use')) {
        return true;
      }
    }
    return false;
  }

  /**
   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback
   * @static
   * @function
   * @memberOf fabric
   * @param {SVGDocument} doc SVG document to parse
   * @param {Function} callback Callback to call when parsing is finished;
   * It's being passed an array of elements (parsed from a document).
   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.
   * @param {Object} [parsingOptions] options for parsing document
   * @param {String} [parsingOptions.crossOrigin] crossOrigin settings
   */
  fabric.parseSVGDocument = function(doc, callback, reviver, parsingOptions) {
    if (!doc) {
      return;
    }

    parseUseDirectives(doc);

    var svgUid =  fabric.Object.__uid++, i, len,
        options = applyViewboxTransform(doc),
        descendants = fabric.util.toArray(doc.getElementsByTagName('*'));
    options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;
    options.svgUid = svgUid;

    if (descendants.length === 0 && fabric.isLikelyNode) {
      // we're likely in node, where "o3-xml" library fails to gEBTN("*")
      // https://github.com/ajaxorg/node-o3-xml/issues/21
      descendants = doc.selectNodes('//*[name(.)!="svg"]');
      var arr = [];
      for (i = 0, len = descendants.length; i < len; i++) {
        arr[i] = descendants[i];
      }
      descendants = arr;
    }

    var elements = descendants.filter(function(el) {
      applyViewboxTransform(el);
      return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', '')) &&
            !hasAncestorWithNodeName(el, fabric.svgInvalidAncestorsRegEx); // http://www.w3.org/TR/SVG/struct.html#DefsElement
    });

    if (!elements || (elements && !elements.length)) {
      callback && callback([], {});
      return;
    }
    var clipPaths = { };
    descendants.filter(function(el) {
      return el.nodeName.replace('svg:', '') === 'clipPath';
    }).forEach(function(el) {
      var id = el.getAttribute('id');
      clipPaths[id] = fabric.util.toArray(el.getElementsByTagName('*')).filter(function(el) {
        return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', ''));
      });
    });
    fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);
    fabric.cssRules[svgUid] = fabric.getCSSRules(doc);
    fabric.clipPaths[svgUid] = clipPaths;
    // Precedence of rules:   style > class > attribute
    fabric.parseElements(elements, function(instances, elements) {
      if (callback) {
        callback(instances, options, elements, descendants);
        delete fabric.gradientDefs[svgUid];
        delete fabric.cssRules[svgUid];
        delete fabric.clipPaths[svgUid];
      }
    }, clone(options), reviver, parsingOptions);
  };

  function recursivelyParseGradientsXlink(doc, gradient) {
    var gradientsAttrs = ['gradientTransform', 'x1', 'x2', 'y1', 'y2', 'gradientUnits', 'cx', 'cy', 'r', 'fx', 'fy'],
        xlinkAttr = 'xlink:href',
        xLink = gradient.getAttribute(xlinkAttr).substr(1),
        referencedGradient = elementById(doc, xLink);
    if (referencedGradient && referencedGradient.getAttribute(xlinkAttr)) {
      recursivelyParseGradientsXlink(doc, referencedGradient);
    }
    gradientsAttrs.forEach(function(attr) {
      if (!gradient.hasAttribute(attr)) {
        gradient.setAttribute(attr, referencedGradient.getAttribute(attr));
      }
    });
    if (!gradient.children.length) {
      var referenceClone = referencedGradient.cloneNode(true);
      while (referenceClone.firstChild) {
        gradient.appendChild(referenceClone.firstChild);
      }
    }
    gradient.removeAttribute(xlinkAttr);
  }

  var reFontDeclaration = new RegExp(
    '(normal|italic)?\\s*(normal|small-caps)?\\s*' +
    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\s*(' +
      fabric.reNum +
    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\/(normal|' + fabric.reNum + '))?\\s+(.*)');

  extend(fabric, {
    /**
     * Parses a short font declaration, building adding its properties to a style object
     * @static
     * @function
     * @memberOf fabric
     * @param {String} value font declaration
     * @param {Object} oStyle definition
     */
    parseFontDeclaration: function(value, oStyle) {
      var match = value.match(reFontDeclaration);

      if (!match) {
        return;
      }
      var fontStyle = match[1],
          // font variant is not used
          // fontVariant = match[2],
          fontWeight = match[3],
          fontSize = match[4],
          lineHeight = match[5],
          fontFamily = match[6];

      if (fontStyle) {
        oStyle.fontStyle = fontStyle;
      }
      if (fontWeight) {
        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);
      }
      if (fontSize) {
        oStyle.fontSize = parseUnit(fontSize);
      }
      if (fontFamily) {
        oStyle.fontFamily = fontFamily;
      }
      if (lineHeight) {
        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;
      }
    },

    /**
     * Parses an SVG document, returning all of the gradient declarations found in it
     * @static
     * @function
     * @memberOf fabric
     * @param {SVGDocument} doc SVG document to parse
     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element
     */
    getGradientDefs: function(doc) {
      var tagArray = [
            'linearGradient',
            'radialGradient',
            'svg:linearGradient',
            'svg:radialGradient'],
          elList = _getMultipleNodes(doc, tagArray),
          el, j = 0, gradientDefs = { };
      j = elList.length;
      while (j--) {
        el = elList[j];
        if (el.getAttribute('xlink:href')) {
          recursivelyParseGradientsXlink(doc, el);
        }
        gradientDefs[el.getAttribute('id')] = el;
      }
      return gradientDefs;
    },

    /**
     * Returns an object of attributes' name/value, given element and an array of attribute names;
     * Parses parent "g" nodes recursively upwards.
     * @static
     * @memberOf fabric
     * @param {DOMElement} element Element to parse
     * @param {Array} attributes Array of attributes to parse
     * @return {Object} object containing parsed attributes' names/values
     */
    parseAttributes: function(element, attributes, svgUid) {

      if (!element) {
        return;
      }

      var value,
          parentAttributes = { },
          fontSize, parentFontSize;

      if (typeof svgUid === 'undefined') {
        svgUid = element.getAttribute('svgUid');
      }
      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards
      if (element.parentNode && fabric.svgValidParentsRegEx.test(element.parentNode.nodeName)) {
        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);
      }

      var ownAttributes = attributes.reduce(function(memo, attr) {
        value = element.getAttribute(attr);
        if (value) { // eslint-disable-line
          memo[attr] = value;
        }
        return memo;
      }, { });
      // add values parsed from style, which take precedence over attributes
      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)
      ownAttributes = extend(ownAttributes,
        extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));

      fontSize = parentFontSize = parentAttributes.fontSize || fabric.Text.DEFAULT_SVG_FONT_SIZE;
      if (ownAttributes['font-size']) {
        // looks like the minimum should be 9px when dealing with ems. this is what looks like in browsers.
        ownAttributes['font-size'] = fontSize = parseUnit(ownAttributes['font-size'], parentFontSize);
      }

      var normalizedAttr, normalizedValue, normalizedStyle = {};
      for (var attr in ownAttributes) {
        normalizedAttr = normalizeAttr(attr);
        normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);
        normalizedStyle[normalizedAttr] = normalizedValue;
      }
      if (normalizedStyle && normalizedStyle.font) {
        fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);
      }
      var mergedAttrs = extend(parentAttributes, normalizedStyle);
      return fabric.svgValidParentsRegEx.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);
    },

    /**
     * Transforms an array of svg elements to corresponding fabric.* instances
     * @static
     * @memberOf fabric
     * @param {Array} elements Array of elements to parse
     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)
     * @param {Object} [options] Options object
     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.
     */
    parseElements: function(elements, callback, options, reviver, parsingOptions) {
      new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();
    },

    /**
     * Parses "style" attribute, retuning an object with values
     * @static
     * @memberOf fabric
     * @param {SVGElement} element Element to parse
     * @return {Object} Objects with values parsed from style attribute of an element
     */
    parseStyleAttribute: function(element) {
      var oStyle = { },
          style = element.getAttribute('style');

      if (!style) {
        return oStyle;
      }

      if (typeof style === 'string') {
        parseStyleString(style, oStyle);
      }
      else {
        parseStyleObject(style, oStyle);
      }

      return oStyle;
    },

    /**
     * Parses "points" attribute, returning an array of values
     * @static
     * @memberOf fabric
     * @param {String} points points attribute string
     * @return {Array} array of points
     */
    parsePointsAttribute: function(points) {

      // points attribute is required and must not be empty
      if (!points) {
        return null;
      }

      // replace commas with whitespace and remove bookending whitespace
      points = points.replace(/,/g, ' ').trim();

      points = points.split(/\s+/);
      var parsedPoints = [], i, len;

      for (i = 0, len = points.length; i < len; i += 2) {
        parsedPoints.push({
          x: parseFloat(points[i]),
          y: parseFloat(points[i + 1])
        });
      }

      // odd number of points is an error
      // if (parsedPoints.length % 2 !== 0) {
      //   return null;
      // }

      return parsedPoints;
    },

    /**
     * Returns CSS rules for a given SVG document
     * @static
     * @function
     * @memberOf fabric
     * @param {SVGDocument} doc SVG document to parse
     * @return {Object} CSS rules of this document
     */
    getCSSRules: function(doc) {
      var styles = doc.getElementsByTagName('style'), i, len,
          allRules = { }, rules;

      // very crude parsing of style contents
      for (i = 0, len = styles.length; i < len; i++) {
        // IE9 doesn't support textContent, but provides text instead.
        var styleContents = styles[i].textContent || styles[i].text;

        // remove comments
        styleContents = styleContents.replace(/\/\*[\s\S]*?\*\//g, '');
        if (styleContents.trim() === '') {
          continue;
        }
        rules = styleContents.match(/[^{]*\{[\s\S]*?\}/g);
        rules = rules.map(function(rule) { return rule.trim(); });
        // eslint-disable-next-line no-loop-func
        rules.forEach(function(rule) {

          var match = rule.match(/([\s\S]*?)\s*\{([^}]*)\}/),
              ruleObj = { }, declaration = match[2].trim(),
              propertyValuePairs = declaration.replace(/;$/, '').split(/\s*;\s*/);

          for (i = 0, len = propertyValuePairs.length; i < len; i++) {
            var pair = propertyValuePairs[i].split(/\s*:\s*/),
                property = pair[0],
                value = pair[1];
            ruleObj[property] = value;
          }
          rule = match[1];
          rule.split(',').forEach(function(_rule) {
            _rule = _rule.replace(/^svg/i, '').trim();
            if (_rule === '') {
              return;
            }
            if (allRules[_rule]) {
              fabric.util.object.extend(allRules[_rule], ruleObj);
            }
            else {
              allRules[_rule] = fabric.util.object.clone(ruleObj);
            }
          });
        });
      }
      return allRules;
    },

    /**
     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.
     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)
     * @memberOf fabric
     * @param {String} url
     * @param {Function} callback
     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.
     * @param {Object} [options] Object containing options for parsing
     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources
     */
    loadSVGFromURL: function(url, callback, reviver, options) {

      url = url.replace(/^\n\s*/, '').trim();
      new fabric.util.request(url, {
        method: 'get',
        onComplete: onComplete
      });

      function onComplete(r) {

        var xml = r.responseXML;
        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {
          xml = new ActiveXObject('Microsoft.XMLDOM');
          xml.async = 'false';
          //IE chokes on DOCTYPE
          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\s\S]*?(\[[\s\S]*\])*?>/i, ''));
        }
        if (!xml || !xml.documentElement) {
          callback && callback(null);
          return false;
        }

        fabric.parseSVGDocument(xml.documentElement, function (results, _options, elements, allElements) {
          callback && callback(results, _options, elements, allElements);
        }, reviver, options);
      }
    },

    /**
     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects
     * @memberOf fabric
     * @param {String} string
     * @param {Function} callback
     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.
     * @param {Object} [options] Object containing options for parsing
     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources
     */
    loadSVGFromString: function(string, callback, reviver, options) {
      string = string.trim();
      var doc;
      if (typeof DOMParser !== 'undefined') {
        var parser = new DOMParser();
        if (parser && parser.parseFromString) {
          doc = parser.parseFromString(string, 'text/xml');
        }
      }
      else if (fabric.window.ActiveXObject) {
        doc = new ActiveXObject('Microsoft.XMLDOM');
        doc.async = 'false';
        // IE chokes on DOCTYPE
        doc.loadXML(string.replace(/<!DOCTYPE[\s\S]*?(\[[\s\S]*\])*?>/i, ''));
      }

      fabric.parseSVGDocument(doc.documentElement, function (results, _options, elements, allElements) {
        callback(results, _options, elements, allElements);
      }, reviver, options);
    }
  });

})( true ? exports : undefined);


fabric.ElementsParser = function(elements, callback, options, reviver, parsingOptions) {
  this.elements = elements;
  this.callback = callback;
  this.options = options;
  this.reviver = reviver;
  this.svgUid = (options && options.svgUid) || 0;
  this.parsingOptions = parsingOptions;
  this.regexUrl = /^url\(['"]?#([^'"]+)['"]?\)/g;
};

(function(proto) {
  proto.parse = function() {
    this.instances = new Array(this.elements.length);
    this.numElements = this.elements.length;
    this.createObjects();
  };

  proto.createObjects = function() {
    var _this = this;
    this.elements.forEach(function(element, i) {
      element.setAttribute('svgUid', _this.svgUid);
      _this.createObject(element, i);
    });
  };

  proto.findTag = function(el) {
    return fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];
  };

  proto.createObject = function(el, index) {
    var klass = this.findTag(el);
    if (klass && klass.fromElement) {
      try {
        klass.fromElement(el, this.createCallback(index, el), this.options);
      }
      catch (err) {
        fabric.log(err);
      }
    }
    else {
      this.checkIfDone();
    }
  };

  proto.createCallback = function(index, el) {
    var _this = this;
    return function(obj) {
      var _options;
      _this.resolveGradient(obj, 'fill');
      _this.resolveGradient(obj, 'stroke');
      if (obj instanceof fabric.Image && obj._originalElement) {
        _options = obj.parsePreserveAspectRatioAttribute(el);
      }
      obj._removeTransformMatrix(_options);
      _this.resolveClipPath(obj);
      _this.reviver && _this.reviver(el, obj);
      _this.instances[index] = obj;
      _this.checkIfDone();
    };
  };

  proto.extractPropertyDefinition = function(obj, property, storage) {
    var value = obj[property];
    if (!(/^url\(/).test(value)) {
      return;
    }
    var id = this.regexUrl.exec(value)[1];
    this.regexUrl.lastIndex = 0;
    return fabric[storage][this.svgUid][id];
  };

  proto.resolveGradient = function(obj, property) {
    var gradientDef = this.extractPropertyDefinition(obj, property, 'gradientDefs');
    if (gradientDef) {
      obj.set(property, fabric.Gradient.fromElement(gradientDef, obj));
    }
  };

  proto.createClipPathCallback = function(obj, container) {
    return function(_newObj) {
      _newObj._removeTransformMatrix();
      _newObj.fillRule = _newObj.clipRule;
      container.push(_newObj);
    };
  };

  proto.resolveClipPath = function(obj) {
    var clipPath = this.extractPropertyDefinition(obj, 'clipPath', 'clipPaths'),
        element, klass, objTransformInv, container, gTransform, options;
    if (clipPath) {
      container = [];
      objTransformInv = fabric.util.invertTransform(obj.calcTransformMatrix());
      for (var i = 0; i < clipPath.length; i++) {
        element = clipPath[i];
        klass = this.findTag(element);
        klass.fromElement(
          element,
          this.createClipPathCallback(obj, container),
          this.options
        );
      }
      if (container.length === 1) {
        clipPath = container[0];
      }
      else {
        clipPath = new fabric.Group(container);
      }
      gTransform = fabric.util.multiplyTransformMatrices(
        objTransformInv,
        clipPath.calcTransformMatrix()
      );
      var options = fabric.util.qrDecompose(gTransform);
      clipPath.flipX = false;
      clipPath.flipY = false;
      clipPath.set('scaleX', options.scaleX);
      clipPath.set('scaleY', options.scaleY);
      clipPath.angle = options.angle;
      clipPath.skewX = options.skewX;
      clipPath.skewY = 0;
      clipPath.setPositionByOrigin({ x: options.translateX, y: options.translateY }, 'center', 'center');
      obj.clipPath = clipPath;
    }
  };

  proto.checkIfDone = function() {
    if (--this.numElements === 0) {
      this.instances = this.instances.filter(function(el) {
        // eslint-disable-next-line no-eq-null, eqeqeq
        return el != null;
      });
      this.callback(this.instances, this.elements);
    }
  };
})(fabric.ElementsParser.prototype);


(function(global) {

  'use strict';

  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */

  var fabric = global.fabric || (global.fabric = { });

  if (fabric.Point) {
    fabric.warn('fabric.Point is already defined');
    return;
  }

  fabric.Point = Point;

  /**
   * Point class
   * @class fabric.Point
   * @memberOf fabric
   * @constructor
   * @param {Number} x
   * @param {Number} y
   * @return {fabric.Point} thisArg
   */
  function Point(x, y) {
    this.x = x;
    this.y = y;
  }

  Point.prototype = /** @lends fabric.Point.prototype */ {

    type: 'point',

    constructor: Point,

    /**
     * Adds another point to this one and returns another one
     * @param {fabric.Point} that
     * @return {fabric.Point} new Point instance with added values
     */
    add: function (that) {
      return new Point(this.x + that.x, this.y + that.y);
    },

    /**
     * Adds another point to this one
     * @param {fabric.Point} that
     * @return {fabric.Point} thisArg
     * @chainable
     */
    addEquals: function (that) {
      this.x += that.x;
      this.y += that.y;
      return this;
    },

    /**
     * Adds value to this point and returns a new one
     * @param {Number} scalar
     * @return {fabric.Point} new Point with added value
     */
    scalarAdd: function (scalar) {
      return new Point(this.x + scalar, this.y + scalar);
    },

    /**
     * Adds value to this point
     * @param {Number} scalar
     * @return {fabric.Point} thisArg
     * @chainable
     */
    scalarAddEquals: function (scalar) {
      this.x += scalar;
      this.y += scalar;
      return this;
    },

    /**
     * Subtracts another point from this point and returns a new one
     * @param {fabric.Point} that
     * @return {fabric.Point} new Point object with subtracted values
     */
    subtract: function (that) {
      return new Point(this.x - that.x, this.y - that.y);
    },

    /**
     * Subtracts another point from this point
     * @param {fabric.Point} that
     * @return {fabric.Point} thisArg
     * @chainable
     */
    subtractEquals: function (that) {
      this.x -= that.x;
      this.y -= that.y;
      return this;
    },

    /**
     * Subtracts value from this point and returns a new one
     * @param {Number} scalar
     * @return {fabric.Point}
     */
    scalarSubtract: function (scalar) {
      return new Point(this.x - scalar, this.y - scalar);
    },

    /**
     * Subtracts value from this point
     * @param {Number} scalar
     * @return {fabric.Point} thisArg
     * @chainable
     */
    scalarSubtractEquals: function (scalar) {
      this.x -= scalar;
      this.y -= scalar;
      return this;
    },

    /**
     * Multiplies this point by a value and returns a new one
     * TODO: rename in scalarMultiply in 2.0
     * @param {Number} scalar
     * @return {fabric.Point}
     */
    multiply: function (scalar) {
      return new Point(this.x * scalar, this.y * scalar);
    },

    /**
     * Multiplies this point by a value
     * TODO: rename in scalarMultiplyEquals in 2.0
     * @param {Number} scalar
     * @return {fabric.Point} thisArg
     * @chainable
     */
    multiplyEquals: function (scalar) {
      this.x *= scalar;
      this.y *= scalar;
      return this;
    },

    /**
     * Divides this point by a value and returns a new one
     * TODO: rename in scalarDivide in 2.0
     * @param {Number} scalar
     * @return {fabric.Point}
     */
    divide: function (scalar) {
      return new Point(this.x / scalar, this.y / scalar);
    },

    /**
     * Divides this point by a value
     * TODO: rename in scalarDivideEquals in 2.0
     * @param {Number} scalar
     * @return {fabric.Point} thisArg
     * @chainable
     */
    divideEquals: function (scalar) {
      this.x /= scalar;
      this.y /= scalar;
      return this;
    },

    /**
     * Returns true if this point is equal to another one
     * @param {fabric.Point} that
     * @return {Boolean}
     */
    eq: function (that) {
      return (this.x === that.x && this.y === that.y);
    },

    /**
     * Returns true if this point is less than another one
     * @param {fabric.Point} that
     * @return {Boolean}
     */
    lt: function (that) {
      return (this.x < that.x && this.y < that.y);
    },

    /**
     * Returns true if this point is less than or equal to another one
     * @param {fabric.Point} that
     * @return {Boolean}
     */
    lte: function (that) {
      return (this.x <= that.x && this.y <= that.y);
    },

    /**

     * Returns true if this point is greater another one
     * @param {fabric.Point} that
     * @return {Boolean}
     */
    gt: function (that) {
      return (this.x > that.x && this.y > that.y);
    },

    /**
     * Returns true if this point is greater than or equal to another one
     * @param {fabric.Point} that
     * @return {Boolean}
     */
    gte: function (that) {
      return (this.x >= that.x && this.y >= that.y);
    },

    /**
     * Returns new point which is the result of linear interpolation with this one and another one
     * @param {fabric.Point} that
     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5
     * @return {fabric.Point}
     */
    lerp: function (that, t) {
      if (typeof t === 'undefined') {
        t = 0.5;
      }
      t = Math.max(Math.min(1, t), 0);
      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);
    },

    /**
     * Returns distance from this point and another one
     * @param {fabric.Point} that
     * @return {Number}
     */
    distanceFrom: function (that) {
      var dx = this.x - that.x,
          dy = this.y - that.y;
      return Math.sqrt(dx * dx + dy * dy);
    },

    /**
     * Returns the point between this point and another one
     * @param {fabric.Point} that
     * @return {fabric.Point}
     */
    midPointFrom: function (that) {
      return this.lerp(that);
    },

    /**
     * Returns a new point which is the min of this and another one
     * @param {fabric.Point} that
     * @return {fabric.Point}
     */
    min: function (that) {
      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));
    },

    /**
     * Returns a new point which is the max of this and another one
     * @param {fabric.Point} that
     * @return {fabric.Point}
     */
    max: function (that) {
      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));
    },

    /**
     * Returns string representation of this point
     * @return {String}
     */
    toString: function () {
      return this.x + ',' + this.y;
    },

    /**
     * Sets x/y of this point
     * @param {Number} x
     * @param {Number} y
     * @chainable
     */
    setXY: function (x, y) {
      this.x = x;
      this.y = y;
      return this;
    },

    /**
     * Sets x of this point
     * @param {Number} x
     * @chainable
     */
    setX: function (x) {
      this.x = x;
      return this;
    },

    /**
     * Sets y of this point
     * @param {Number} y
     * @chainable
     */
    setY: function (y) {
      this.y = y;
      return this;
    },

    /**
     * Sets x/y of this point from another point
     * @param {fabric.Point} that
     * @chainable
     */
    setFromPoint: function (that) {
      this.x = that.x;
      this.y = that.y;
      return this;
    },

    /**
     * Swaps x/y of this point and another point
     * @param {fabric.Point} that
     */
    swap: function (that) {
      var x = this.x,
          y = this.y;
      this.x = that.x;
      this.y = that.y;
      that.x = x;
      that.y = y;
    },

    /**
     * return a cloned instance of the point
     * @return {fabric.Point}
     */
    clone: function () {
      return new Point(this.x, this.y);
    }
  };

})( true ? exports : undefined);


(function(global) {

  'use strict';

  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */
  var fabric = global.fabric || (global.fabric = { });

  if (fabric.Intersection) {
    fabric.warn('fabric.Intersection is already defined');
    return;
  }

  /**
   * Intersection class
   * @class fabric.Intersection
   * @memberOf fabric
   * @constructor
   */
  function Intersection(status) {
    this.status = status;
    this.points = [];
  }

  fabric.Intersection = Intersection;

  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {

    constructor: Intersection,

    /**
     * Appends a point to intersection
     * @param {fabric.Point} point
     * @return {fabric.Intersection} thisArg
     * @chainable
     */
    appendPoint: function (point) {
      this.points.push(point);
      return this;
    },

    /**
     * Appends points to intersection
     * @param {Array} points
     * @return {fabric.Intersection} thisArg
     * @chainable
     */
    appendPoints: function (points) {
      this.points = this.points.concat(points);
      return this;
    }
  };

  /**
   * Checks if one line intersects another
   * TODO: rename in intersectSegmentSegment
   * @static
   * @param {fabric.Point} a1
   * @param {fabric.Point} a2
   * @param {fabric.Point} b1
   * @param {fabric.Point} b2
   * @return {fabric.Intersection}
   */
  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {
    var result,
        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),
        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),
        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);
    if (uB !== 0) {
      var ua = uaT / uB,
          ub = ubT / uB;
      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {
        result = new Intersection('Intersection');
        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));
      }
      else {
        result = new Intersection();
      }
    }
    else {
      if (uaT === 0 || ubT === 0) {
        result = new Intersection('Coincident');
      }
      else {
        result = new Intersection('Parallel');
      }
    }
    return result;
  };

  /**
   * Checks if line intersects polygon
   * TODO: rename in intersectSegmentPolygon
   * fix detection of coincident
   * @static
   * @param {fabric.Point} a1
   * @param {fabric.Point} a2
   * @param {Array} points
   * @return {fabric.Intersection}
   */
  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {
    var result = new Intersection(),
        length = points.length,
        b1, b2, inter, i;

    for (i = 0; i < length; i++) {
      b1 = points[i];
      b2 = points[(i + 1) % length];
      inter = Intersection.intersectLineLine(a1, a2, b1, b2);

      result.appendPoints(inter.points);
    }
    if (result.points.length > 0) {
      result.status = 'Intersection';
    }
    return result;
  };

  /**
   * Checks if polygon intersects another polygon
   * @static
   * @param {Array} points1
   * @param {Array} points2
   * @return {fabric.Intersection}
   */
  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {
    var result = new Intersection(),
        length = points1.length, i;

    for (i = 0; i < length; i++) {
      var a1 = points1[i],
          a2 = points1[(i + 1) % length],
          inter = Intersection.intersectLinePolygon(a1, a2, points2);

      result.appendPoints(inter.points);
    }
    if (result.points.length > 0) {
      result.status = 'Intersection';
    }
    return result;
  };

  /**
   * Checks if polygon intersects rectangle
   * @static
   * @param {Array} points
   * @param {fabric.Point} r1
   * @param {fabric.Point} r2
   * @return {fabric.Intersection}
   */
  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {
    var min = r1.min(r2),
        max = r1.max(r2),
        topRight = new fabric.Point(max.x, min.y),
        bottomLeft = new fabric.Point(min.x, max.y),
        inter1 = Intersection.intersectLinePolygon(min, topRight, points),
        inter2 = Intersection.intersectLinePolygon(topRight, max, points),
        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),
        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),
        result = new Intersection();

    result.appendPoints(inter1.points);
    result.appendPoints(inter2.points);
    result.appendPoints(inter3.points);
    result.appendPoints(inter4.points);

    if (result.points.length > 0) {
      result.status = 'Intersection';
    }
    return result;
  };

})( true ? exports : undefined);


(function(global) {

  'use strict';

  var fabric = global.fabric || (global.fabric = { });

  if (fabric.Color) {
    fabric.warn('fabric.Color is already defined.');
    return;
  }

  /**
   * Color class
   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;
   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.
   *
   * @class fabric.Color
   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list
   * @return {fabric.Color} thisArg
   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}
   */
  function Color(color) {
    if (!color) {
      this.setSource([0, 0, 0, 1]);
    }
    else {
      this._tryParsingColor(color);
    }
  }

  fabric.Color = Color;

  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {

    /**
     * @private
     * @param {String|Array} color Color value to parse
     */
    _tryParsingColor: function(color) {
      var source;

      if (color in Color.colorNameMap) {
        color = Color.colorNameMap[color];
      }

      if (color === 'transparent') {
        source = [255, 255, 255, 0];
      }

      if (!source) {
        source = Color.sourceFromHex(color);
      }
      if (!source) {
        source = Color.sourceFromRgb(color);
      }
      if (!source) {
        source = Color.sourceFromHsl(color);
      }
      if (!source) {
        //if color is not recognize let's make black as canvas does
        source = [0, 0, 0, 1];
      }
      if (source) {
        this.setSource(source);
      }
    },

    /**
     * Adapted from <a href="https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html">https://github.com/mjijackson</a>
     * @private
     * @param {Number} r Red color value
     * @param {Number} g Green color value
     * @param {Number} b Blue color value
     * @return {Array} Hsl color
     */
    _rgbToHsl: function(r, g, b) {
      r /= 255; g /= 255; b /= 255;

      var h, s, l,
          max = fabric.util.array.max([r, g, b]),
          min = fabric.util.array.min([r, g, b]);

      l = (max + min) / 2;

      if (max === min) {
        h = s = 0; // achromatic
      }
      else {
        var d = max - min;
        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
        switch (max) {
          case r:
            h = (g - b) / d + (g < b ? 6 : 0);
            break;
          case g:
            h = (b - r) / d + 2;
            break;
          case b:
            h = (r - g) / d + 4;
            break;
        }
        h /= 6;
      }

      return [
        Math.round(h * 360),
        Math.round(s * 100),
        Math.round(l * 100)
      ];
    },

    /**
     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])
     * @return {Array}
     */
    getSource: function() {
      return this._source;
    },

    /**
     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])
     * @param {Array} source
     */
    setSource: function(source) {
      this._source = source;
    },

    /**
     * Returns color representation in RGB format
     * @return {String} ex: rgb(0-255,0-255,0-255)
     */
    toRgb: function() {
      var source = this.getSource();
      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';
    },

    /**
     * Returns color representation in RGBA format
     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)
     */
    toRgba: function() {
      var source = this.getSource();
      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';
    },

    /**
     * Returns color representation in HSL format
     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)
     */
    toHsl: function() {
      var source = this.getSource(),
          hsl = this._rgbToHsl(source[0], source[1], source[2]);

      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';
    },

    /**
     * Returns color representation in HSLA format
     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)
     */
    toHsla: function() {
      var source = this.getSource(),
          hsl = this._rgbToHsl(source[0], source[1], source[2]);

      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';
    },

    /**
     * Returns color representation in HEX format
     * @return {String} ex: FF5555
     */
    toHex: function() {
      var source = this.getSource(), r, g, b;

      r = source[0].toString(16);
      r = (r.length === 1) ? ('0' + r) : r;

      g = source[1].toString(16);
      g = (g.length === 1) ? ('0' + g) : g;

      b = source[2].toString(16);
      b = (b.length === 1) ? ('0' + b) : b;

      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();
    },

    /**
     * Returns color representation in HEXA format
     * @return {String} ex: FF5555CC
     */
    toHexa: function() {
      var source = this.getSource(), a;

      a = Math.round(source[3] * 255);
      a = a.toString(16);
      a = (a.length === 1) ? ('0' + a) : a;

      return this.toHex() + a.toUpperCase();
    },

    /**
     * Gets value of alpha channel for this color
     * @return {Number} 0-1
     */
    getAlpha: function() {
      return this.getSource()[3];
    },

    /**
     * Sets value of alpha channel for this color
     * @param {Number} alpha Alpha value 0-1
     * @return {fabric.Color} thisArg
     */
    setAlpha: function(alpha) {
      var source = this.getSource();
      source[3] = alpha;
      this.setSource(source);
      return this;
    },

    /**
     * Transforms color to its grayscale representation
     * @return {fabric.Color} thisArg
     */
    toGrayscale: function() {
      var source = this.getSource(),
          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),
          currentAlpha = source[3];
      this.setSource([average, average, average, currentAlpha]);
      return this;
    },

    /**
     * Transforms color to its black and white representation
     * @param {Number} threshold
     * @return {fabric.Color} thisArg
     */
    toBlackWhite: function(threshold) {
      var source = this.getSource(),
          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),
          currentAlpha = source[3];

      threshold = threshold || 127;

      average = (Number(average) < Number(threshold)) ? 0 : 255;
      this.setSource([average, average, average, currentAlpha]);
      return this;
    },

    /**
     * Overlays color with another color
     * @param {String|fabric.Color} otherColor
     * @return {fabric.Color} thisArg
     */
    overlayWith: function(otherColor) {
      if (!(otherColor instanceof Color)) {
        otherColor = new Color(otherColor);
      }

      var result = [],
          alpha = this.getAlpha(),
          otherAlpha = 0.5,
          source = this.getSource(),
          otherSource = otherColor.getSource(), i;

      for (i = 0; i < 3; i++) {
        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));
      }

      result[3] = alpha;
      this.setSource(result);
      return this;
    }
  };

  /**
   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))
   * @static
   * @field
   * @memberOf fabric.Color
   */
  // eslint-disable-next-line max-len
  fabric.Color.reRGBa = /^rgba?\(\s*(\d{1,3}(?:\.\d+)?\%?)\s*,\s*(\d{1,3}(?:\.\d+)?\%?)\s*,\s*(\d{1,3}(?:\.\d+)?\%?)\s*(?:\s*,\s*((?:\d*\.?\d+)?)\s*)?\)$/i;

  /**
   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))
   * @static
   * @field
   * @memberOf fabric.Color
   */
  fabric.Color.reHSLa = /^hsla?\(\s*(\d{1,3})\s*,\s*(\d{1,3}\%)\s*,\s*(\d{1,3}\%)\s*(?:\s*,\s*(\d+(?:\.\d+)?)\s*)?\)$/i;

  /**
   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)
   * @static
   * @field
   * @memberOf fabric.Color
   */
  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;

  /**
   * Map of the 148 color names with HEX code
   * @static
   * @field
   * @memberOf fabric.Color
   * @see: https://www.w3.org/TR/css3-color/#svg-color
   */
  fabric.Color.colorNameMap = {
    aliceblue:            '#F0F8FF',
    antiquewhite:         '#FAEBD7',
    aqua:                 '#00FFFF',
    aquamarine:           '#7FFFD4',
    azure:                '#F0FFFF',
    beige:                '#F5F5DC',
    bisque:               '#FFE4C4',
    black:                '#000000',
    blanchedalmond:       '#FFEBCD',
    blue:                 '#0000FF',
    blueviolet:           '#8A2BE2',
    brown:                '#A52A2A',
    burlywood:            '#DEB887',
    cadetblue:            '#5F9EA0',
    chartreuse:           '#7FFF00',
    chocolate:            '#D2691E',
    coral:                '#FF7F50',
    cornflowerblue:       '#6495ED',
    cornsilk:             '#FFF8DC',
    crimson:              '#DC143C',
    cyan:                 '#00FFFF',
    darkblue:             '#00008B',
    darkcyan:             '#008B8B',
    darkgoldenrod:        '#B8860B',
    darkgray:             '#A9A9A9',
    darkgrey:             '#A9A9A9',
    darkgreen:            '#006400',
    darkkhaki:            '#BDB76B',
    darkmagenta:          '#8B008B',
    darkolivegreen:       '#556B2F',
    darkorange:           '#FF8C00',
    darkorchid:           '#9932CC',
    darkred:              '#8B0000',
    darksalmon:           '#E9967A',
    darkseagreen:         '#8FBC8F',
    darkslateblue:        '#483D8B',
    darkslategray:        '#2F4F4F',
    darkslategrey:        '#2F4F4F',
    darkturquoise:        '#00CED1',
    darkviolet:           '#9400D3',
    deeppink:             '#FF1493',
    deepskyblue:          '#00BFFF',
    dimgray:              '#696969',
    dimgrey:              '#696969',
    dodgerblue:           '#1E90FF',
    firebrick:            '#B22222',
    floralwhite:          '#FFFAF0',
    forestgreen:          '#228B22',
    fuchsia:              '#FF00FF',
    gainsboro:            '#DCDCDC',
    ghostwhite:           '#F8F8FF',
    gold:                 '#FFD700',
    goldenrod:            '#DAA520',
    gray:                 '#808080',
    grey:                 '#808080',
    green:                '#008000',
    greenyellow:          '#ADFF2F',
    honeydew:             '#F0FFF0',
    hotpink:              '#FF69B4',
    indianred:            '#CD5C5C',
    indigo:               '#4B0082',
    ivory:                '#FFFFF0',
    khaki:                '#F0E68C',
    lavender:             '#E6E6FA',
    lavenderblush:        '#FFF0F5',
    lawngreen:            '#7CFC00',
    lemonchiffon:         '#FFFACD',
    lightblue:            '#ADD8E6',
    lightcoral:           '#F08080',
    lightcyan:            '#E0FFFF',
    lightgoldenrodyellow: '#FAFAD2',
    lightgray:            '#D3D3D3',
    lightgrey:            '#D3D3D3',
    lightgreen:           '#90EE90',
    lightpink:            '#FFB6C1',
    lightsalmon:          '#FFA07A',
    lightseagreen:        '#20B2AA',
    lightskyblue:         '#87CEFA',
    lightslategray:       '#778899',
    lightslategrey:       '#778899',
    lightsteelblue:       '#B0C4DE',
    lightyellow:          '#FFFFE0',
    lime:                 '#00FF00',
    limegreen:            '#32CD32',
    linen:                '#FAF0E6',
    magenta:              '#FF00FF',
    maroon:               '#800000',
    mediumaquamarine:     '#66CDAA',
    mediumblue:           '#0000CD',
    mediumorchid:         '#BA55D3',
    mediumpurple:         '#9370DB',
    mediumseagreen:       '#3CB371',
    mediumslateblue:      '#7B68EE',
    mediumspringgreen:    '#00FA9A',
    mediumturquoise:      '#48D1CC',
    mediumvioletred:      '#C71585',
    midnightblue:         '#191970',
    mintcream:            '#F5FFFA',
    mistyrose:            '#FFE4E1',
    moccasin:             '#FFE4B5',
    navajowhite:          '#FFDEAD',
    navy:                 '#000080',
    oldlace:              '#FDF5E6',
    olive:                '#808000',
    olivedrab:            '#6B8E23',
    orange:               '#FFA500',
    orangered:            '#FF4500',
    orchid:               '#DA70D6',
    palegoldenrod:        '#EEE8AA',
    palegreen:            '#98FB98',
    paleturquoise:        '#AFEEEE',
    palevioletred:        '#DB7093',
    papayawhip:           '#FFEFD5',
    peachpuff:            '#FFDAB9',
    peru:                 '#CD853F',
    pink:                 '#FFC0CB',
    plum:                 '#DDA0DD',
    powderblue:           '#B0E0E6',
    purple:               '#800080',
    rebeccapurple:        '#663399',
    red:                  '#FF0000',
    rosybrown:            '#BC8F8F',
    royalblue:            '#4169E1',
    saddlebrown:          '#8B4513',
    salmon:               '#FA8072',
    sandybrown:           '#F4A460',
    seagreen:             '#2E8B57',
    seashell:             '#FFF5EE',
    sienna:               '#A0522D',
    silver:               '#C0C0C0',
    skyblue:              '#87CEEB',
    slateblue:            '#6A5ACD',
    slategray:            '#708090',
    slategrey:            '#708090',
    snow:                 '#FFFAFA',
    springgreen:          '#00FF7F',
    steelblue:            '#4682B4',
    tan:                  '#D2B48C',
    teal:                 '#008080',
    thistle:              '#D8BFD8',
    tomato:               '#FF6347',
    turquoise:            '#40E0D0',
    violet:               '#EE82EE',
    wheat:                '#F5DEB3',
    white:                '#FFFFFF',
    whitesmoke:           '#F5F5F5',
    yellow:               '#FFFF00',
    yellowgreen:          '#9ACD32'
  };

  /**
   * @private
   * @param {Number} p
   * @param {Number} q
   * @param {Number} t
   * @return {Number}
   */
  function hue2rgb(p, q, t) {
    if (t < 0) {
      t += 1;
    }
    if (t > 1) {
      t -= 1;
    }
    if (t < 1 / 6) {
      return p + (q - p) * 6 * t;
    }
    if (t < 1 / 2) {
      return q;
    }
    if (t < 2 / 3) {
      return p + (q - p) * (2 / 3 - t) * 6;
    }
    return p;
  }

  /**
   * Returns new color object, when given a color in RGB format
   * @memberOf fabric.Color
   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)
   * @return {fabric.Color}
   */
  fabric.Color.fromRgb = function(color) {
    return Color.fromSource(Color.sourceFromRgb(color));
  };

  /**
   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format
   * @memberOf fabric.Color
   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)
   * @return {Array} source
   */
  fabric.Color.sourceFromRgb = function(color) {
    var match = color.match(Color.reRGBa);
    if (match) {
      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),
          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),
          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);

      return [
        parseInt(r, 10),
        parseInt(g, 10),
        parseInt(b, 10),
        match[4] ? parseFloat(match[4]) : 1
      ];
    }
  };

  /**
   * Returns new color object, when given a color in RGBA format
   * @static
   * @function
   * @memberOf fabric.Color
   * @param {String} color
   * @return {fabric.Color}
   */
  fabric.Color.fromRgba = Color.fromRgb;

  /**
   * Returns new color object, when given a color in HSL format
   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)
   * @memberOf fabric.Color
   * @return {fabric.Color}
   */
  fabric.Color.fromHsl = function(color) {
    return Color.fromSource(Color.sourceFromHsl(color));
  };

  /**
   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.
   * Adapted from <a href="https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html">https://github.com/mjijackson</a>
   * @memberOf fabric.Color
   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)
   * @return {Array} source
   * @see http://http://www.w3.org/TR/css3-color/#hsl-color
   */
  fabric.Color.sourceFromHsl = function(color) {
    var match = color.match(Color.reHSLa);
    if (!match) {
      return;
    }

    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,
        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),
        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),
        r, g, b;

    if (s === 0) {
      r = g = b = l;
    }
    else {
      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,
          p = l * 2 - q;

      r = hue2rgb(p, q, h + 1 / 3);
      g = hue2rgb(p, q, h);
      b = hue2rgb(p, q, h - 1 / 3);
    }

    return [
      Math.round(r * 255),
      Math.round(g * 255),
      Math.round(b * 255),
      match[4] ? parseFloat(match[4]) : 1
    ];
  };

  /**
   * Returns new color object, when given a color in HSLA format
   * @static
   * @function
   * @memberOf fabric.Color
   * @param {String} color
   * @return {fabric.Color}
   */
  fabric.Color.fromHsla = Color.fromHsl;

  /**
   * Returns new color object, when given a color in HEX format
   * @static
   * @memberOf fabric.Color
   * @param {String} color Color value ex: FF5555
   * @return {fabric.Color}
   */
  fabric.Color.fromHex = function(color) {
    return Color.fromSource(Color.sourceFromHex(color));
  };

  /**
   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format
   * @static
   * @memberOf fabric.Color
   * @param {String} color ex: FF5555 or FF5544CC (RGBa)
   * @return {Array} source
   */
  fabric.Color.sourceFromHex = function(color) {
    if (color.match(Color.reHex)) {
      var value = color.slice(color.indexOf('#') + 1),
          isShortNotation = (value.length === 3 || value.length === 4),
          isRGBa = (value.length === 8 || value.length === 4),
          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),
          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),
          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),
          a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';

      return [
        parseInt(r, 16),
        parseInt(g, 16),
        parseInt(b, 16),
        parseFloat((parseInt(a, 16) / 255).toFixed(2))
      ];
    }
  };

  /**
   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])
   * @static
   * @memberOf fabric.Color
   * @param {Array} source
   * @return {fabric.Color}
   */
  fabric.Color.fromSource = function(source) {
    var oColor = new Color();
    oColor.setSource(source);
    return oColor;
  };

})( true ? exports : undefined);


(function() {

  /* _FROM_SVG_START_ */
  function getColorStop(el) {
    var style = el.getAttribute('style'),
        offset = el.getAttribute('offset') || 0,
        color, colorAlpha, opacity, i;

    // convert percents to absolute values
    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);
    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;
    if (style) {
      var keyValuePairs = style.split(/\s*;\s*/);

      if (keyValuePairs[keyValuePairs.length - 1] === '') {
        keyValuePairs.pop();
      }

      for (i = keyValuePairs.length; i--; ) {

        var split = keyValuePairs[i].split(/\s*:\s*/),
            key = split[0].trim(),
            value = split[1].trim();

        if (key === 'stop-color') {
          color = value;
        }
        else if (key === 'stop-opacity') {
          opacity = value;
        }
      }
    }

    if (!color) {
      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';
    }
    if (!opacity) {
      opacity = el.getAttribute('stop-opacity');
    }

    color = new fabric.Color(color);
    colorAlpha = color.getAlpha();
    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);
    opacity *= colorAlpha;

    return {
      offset: offset,
      color: color.toRgb(),
      opacity: opacity
    };
  }

  function getLinearCoords(el) {
    return {
      x1: el.getAttribute('x1') || 0,
      y1: el.getAttribute('y1') || 0,
      x2: el.getAttribute('x2') || '100%',
      y2: el.getAttribute('y2') || 0
    };
  }

  function getRadialCoords(el) {
    return {
      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',
      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',
      r1: 0,
      x2: el.getAttribute('cx') || '50%',
      y2: el.getAttribute('cy') || '50%',
      r2: el.getAttribute('r') || '50%'
    };
  }
  /* _FROM_SVG_END_ */

  var clone = fabric.util.object.clone;

  /**
   * Gradient class
   * @class fabric.Gradient
   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}
   * @see {@link fabric.Gradient#initialize} for constructor definition
   */
  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {

    /**
     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups
     * @type Number
     * @default 0
     */
    offsetX: 0,

    /**
     * Vertical offset for aligning gradients coming from SVG when outside pathgroups
     * @type Number
     * @default 0
     */
    offsetY: 0,

    /**
     * Constructor
     * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops
     * @return {fabric.Gradient} thisArg
     */
    initialize: function(options) {
      options || (options = { });

      var coords = { };

      this.id = fabric.Object.__uid++;
      this.type = options.type || 'linear';

      coords = {
        x1: options.coords.x1 || 0,
        y1: options.coords.y1 || 0,
        x2: options.coords.x2 || 0,
        y2: options.coords.y2 || 0
      };

      if (this.type === 'radial') {
        coords.r1 = options.coords.r1 || 0;
        coords.r2 = options.coords.r2 || 0;
      }
      this.coords = coords;
      this.colorStops = options.colorStops.slice();
      if (options.gradientTransform) {
        this.gradientTransform = options.gradientTransform;
      }
      this.offsetX = options.offsetX || this.offsetX;
      this.offsetY = options.offsetY || this.offsetY;
    },

    /**
     * Adds another colorStop
     * @param {Object} colorStop Object with offset and color
     * @return {fabric.Gradient} thisArg
     */
    addColorStop: function(colorStops) {
      for (var position in colorStops) {
        var color = new fabric.Color(colorStops[position]);
        this.colorStops.push({
          offset: parseFloat(position),
          color: color.toRgb(),
          opacity: color.getAlpha()
        });
      }
      return this;
    },

    /**
     * Returns object representation of a gradient
     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
     * @return {Object}
     */
    toObject: function(propertiesToInclude) {
      var object = {
        type: this.type,
        coords: this.coords,
        colorStops: this.colorStops,
        offsetX: this.offsetX,
        offsetY: this.offsetY,
        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform
      };
      fabric.util.populateWithProperties(this, object, propertiesToInclude);

      return object;
    },

    /* _TO_SVG_START_ */
    /**
     * Returns SVG representation of an gradient
     * @param {Object} object Object to create a gradient for
     * @return {String} SVG representation of an gradient (linear/radial)
     */
    toSVG: function(object) {
      var coords = clone(this.coords, true), i, len,
          markup, commonAttributes, colorStops = clone(this.colorStops, true),
          needsSwap = coords.r1 > coords.r2,
          transform = this.gradientTransform ? this.gradientTransform.concat() : fabric.iMatrix.concat(),
          offsetX = object.width / 2 - this.offsetX, offsetY = object.height / 2 - this.offsetY;
      // colorStops must be sorted ascending
      colorStops.sort(function(a, b) {
        return a.offset - b.offset;
      });

      if (object.type === 'path') {
        offsetX -= object.pathOffset.x;
        offsetY -= object.pathOffset.y;
      }

      transform[4] -= offsetX;
      transform[5] -= offsetY;

      commonAttributes = 'id="SVGID_' + this.id +
                     '" gradientUnits="userSpaceOnUse"';
      commonAttributes += ' gradientTransform="matrix(' + transform.join(' ') + ')" ';

      if (this.type === 'linear') {
        markup = [
          '<linearGradient ',
          commonAttributes,
          ' x1="', coords.x1,
          '" y1="', coords.y1,
          '" x2="', coords.x2,
          '" y2="', coords.y2,
          '">\n'
        ];
      }
      else if (this.type === 'radial') {
        // svg radial gradient has just 1 radius. the biggest.
        markup = [
          '<radialGradient ',
          commonAttributes,
          ' cx="', needsSwap ? coords.x1 : coords.x2,
          '" cy="', needsSwap ? coords.y1 : coords.y2,
          '" r="', needsSwap ? coords.r1 : coords.r2,
          '" fx="', needsSwap ? coords.x2 : coords.x1,
          '" fy="', needsSwap ? coords.y2 : coords.y1,
          '">\n'
        ];
      }

      if (this.type === 'radial') {
        if (needsSwap) {
          // svg goes from internal to external radius. if radius are inverted, swap color stops.
          colorStops = colorStops.concat();
          colorStops.reverse();
          for (i = 0, len = colorStops.length; i < len; i++) {
            colorStops[i].offset = 1 - colorStops[i].offset;
          }
        }
        var minRadius = Math.min(coords.r1, coords.r2);
        if (minRadius > 0) {
          // i have to shift all colorStops and add new one in 0.
          var maxRadius = Math.max(coords.r1, coords.r2),
              percentageShift = minRadius / maxRadius;
          for (i = 0, len = colorStops.length; i < len; i++) {
            colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);
          }
        }
      }

      for (i = 0, len = colorStops.length; i < len; i++) {
        var colorStop = colorStops[i];
        markup.push(
          '<stop ',
          'offset="', (colorStop.offset * 100) + '%',
          '" style="stop-color:', colorStop.color,
          (typeof colorStop.opacity !== 'undefined' ? ';stop-opacity: ' + colorStop.opacity : ';'),
          '"/>\n'
        );
      }

      markup.push((this.type === 'linear' ? '</linearGradient>\n' : '</radialGradient>\n'));

      return markup.join('');
    },
    /* _TO_SVG_END_ */

    /**
     * Returns an instance of CanvasGradient
     * @param {CanvasRenderingContext2D} ctx Context to render on
     * @return {CanvasGradient}
     */
    toLive: function(ctx) {
      var gradient, coords = fabric.util.object.clone(this.coords), i, len;

      if (!this.type) {
        return;
      }

      if (this.type === 'linear') {
        gradient = ctx.createLinearGradient(
          coords.x1, coords.y1, coords.x2, coords.y2);
      }
      else if (this.type === 'radial') {
        gradient = ctx.createRadialGradient(
          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);
      }

      for (i = 0, len = this.colorStops.length; i < len; i++) {
        var color = this.colorStops[i].color,
            opacity = this.colorStops[i].opacity,
            offset = this.colorStops[i].offset;

        if (typeof opacity !== 'undefined') {
          color = new fabric.Color(color).setAlpha(opacity).toRgba();
        }
        gradient.addColorStop(offset, color);
      }

      return gradient;
    }
  });

  fabric.util.object.extend(fabric.Gradient, {

    /* _FROM_SVG_START_ */
    /**
     * Returns {@link fabric.Gradient} instance from an SVG element
     * @static
     * @memberOf fabric.Gradient
     * @param {SVGGradientElement} el SVG gradient element
     * @param {fabric.Object} instance
     * @return {fabric.Gradient} Gradient instance
     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement
     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement
     */
    fromElement: function(el, instance) {
      /**
       *  @example:
       *
       *  <linearGradient id="linearGrad1">
       *    <stop offset="0%" stop-color="white"/>
       *    <stop offset="100%" stop-color="black"/>
       *  </linearGradient>
       *
       *  OR
       *
       *  <linearGradient id="linearGrad2">
       *    <stop offset="0" style="stop-color:rgb(255,255,255)"/>
       *    <stop offset="1" style="stop-color:rgb(0,0,0)"/>
       *  </linearGradient>
       *
       *  OR
       *
       *  <radialGradient id="radialGrad1">
       *    <stop offset="0%" stop-color="white" stop-opacity="1" />
       *    <stop offset="50%" stop-color="black" stop-opacity="0.5" />
       *    <stop offset="100%" stop-color="white" stop-opacity="1" />
       *  </radialGradient>
       *
       *  OR
       *
       *  <radialGradient id="radialGrad2">
       *    <stop offset="0" stop-color="rgb(255,255,255)" />
       *    <stop offset="0.5" stop-color="rgb(0,0,0)" />
       *    <stop offset="1" stop-color="rgb(255,255,255)" />
       *  </radialGradient>
       *
       */

      var colorStopEls = el.getElementsByTagName('stop'),
          type,
          gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',
          gradientTransform = el.getAttribute('gradientTransform'),
          colorStops = [],
          coords, ellipseMatrix, i;

      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {
        type = 'linear';
      }
      else {
        type = 'radial';
      }

      if (type === 'linear') {
        coords = getLinearCoords(el);
      }
      else if (type === 'radial') {
        coords = getRadialCoords(el);
      }

      for (i = colorStopEls.length; i--; ) {
        colorStops.push(getColorStop(colorStopEls[i]));
      }

      ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);

      var gradient = new fabric.Gradient({
        type: type,
        coords: coords,
        colorStops: colorStops,
        offsetX: -instance.left,
        offsetY: -instance.top
      });

      if (gradientTransform || ellipseMatrix !== '') {
        gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);
      }

      return gradient;
    },
    /* _FROM_SVG_END_ */

    /**
     * Returns {@link fabric.Gradient} instance from its object representation
     * @static
     * @memberOf fabric.Gradient
     * @param {Object} obj
     * @param {Object} [options] Options object
     */
    forObject: function(obj, options) {
      options || (options = { });
      _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');
      return new fabric.Gradient(options);
    }
  });

  /**
   * @private
   */
  function _convertPercentUnitsToValues(object, options, gradientUnits) {
    var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = '';
    for (var prop in options) {
      if (options[prop] === 'Infinity') {
        options[prop] = 1;
      }
      else if (options[prop] === '-Infinity') {
        options[prop] = 0;
      }
      propValue = parseFloat(options[prop], 10);
      if (typeof options[prop] === 'string' && /^(\d+\.\d+)%|(\d+)%$/.test(options[prop])) {
        multFactor = 0.01;
      }
      else {
        multFactor = 1;
      }
      if (prop === 'x1' || prop === 'x2' || prop === 'r2') {
        multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;
        addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;
      }
      else if (prop === 'y1' || prop === 'y2') {
        multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;
        addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;
      }
      options[prop] = propValue * multFactor + addFactor;
    }
    if (object.type === 'ellipse' &&
        options.r2 !== null &&
        gradientUnits === 'objectBoundingBox' &&
        object.rx !== object.ry) {

      var scaleFactor = object.ry / object.rx;
      ellipseMatrix = ' scale(1, ' + scaleFactor + ')';
      if (options.y1) {
        options.y1 /= scaleFactor;
      }
      if (options.y2) {
        options.y2 /= scaleFactor;
      }
    }
    return ellipseMatrix;
  }
})();


(function() {

  'use strict';

  var toFixed = fabric.util.toFixed;

  /**
   * Pattern class
   * @class fabric.Pattern
   * @see {@link http://fabricjs.com/patterns|Pattern demo}
   * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}
   * @see {@link fabric.Pattern#initialize} for constructor definition
   */


  fabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {

    /**
     * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)
     * @type String
     * @default
     */
    repeat: 'repeat',

    /**
     * Pattern horizontal offset from object's left/top corner
     * @type Number
     * @default
     */
    offsetX: 0,

    /**
     * Pattern vertical offset from object's left/top corner
     * @type Number
     * @default
     */
    offsetY: 0,

    /**
     * crossOrigin value (one of "", "anonymous", "use-credentials")
     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes
     * @type String
     * @default
     */
    crossOrigin: '',

    /**
     * transform matrix to change the pattern, imported from svgs.
     * @type Array
     * @default
     */
    patternTransform: null,

    /**
     * Constructor
     * @param {Object} [options] Options object
     * @param {Function} [callback] function to invoke after callback init.
     * @return {fabric.Pattern} thisArg
     */
    initialize: function(options, callback) {
      options || (options = { });

      this.id = fabric.Object.__uid++;
      this.setOptions(options);
      if (!options.source || (options.source && typeof options.source !== 'string')) {
        callback && callback(this);
        return;
      }
      // function string
      if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {
        this.source = new Function(fabric.util.getFunctionBody(options.source));
        callback && callback(this);
      }
      else {
        // img src string
        var _this = this;
        this.source = fabric.util.createImage();
        fabric.util.loadImage(options.source, function(img) {
          _this.source = img;
          callback && callback(_this);
        }, null, this.crossOrigin);
      }
    },

    /**
     * Returns object representation of a pattern
     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
     * @return {Object} Object representation of a pattern instance
     */
    toObject: function(propertiesToInclude) {
      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,
          source, object;

      // callback
      if (typeof this.source === 'function') {
        source = String(this.source);
      }
      // <img> element
      else if (typeof this.source.src === 'string') {
        source = this.source.src;
      }
      // <canvas> element
      else if (typeof this.source === 'object' && this.source.toDataURL) {
        source = this.source.toDataURL();
      }

      object = {
        type: 'pattern',
        source: source,
        repeat: this.repeat,
        crossOrigin: this.crossOrigin,
        offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),
        offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),
        patternTransform: this.patternTransform ? this.patternTransform.concat() : null
      };
      fabric.util.populateWithProperties(this, object, propertiesToInclude);

      return object;
    },

    /* _TO_SVG_START_ */
    /**
     * Returns SVG representation of a pattern
     * @param {fabric.Object} object
     * @return {String} SVG representation of a pattern
     */
    toSVG: function(object) {
      var patternSource = typeof this.source === 'function' ? this.source() : this.source,
          patternWidth = patternSource.width / object.width,
          patternHeight = patternSource.height / object.height,
          patternOffsetX = this.offsetX / object.width,
          patternOffsetY = this.offsetY / object.height,
          patternImgSrc = '';
      if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {
        patternHeight = 1;
        if (patternOffsetY) {
          patternHeight += Math.abs(patternOffsetY);
        }
      }
      if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {
        patternWidth = 1;
        if (patternOffsetX) {
          patternWidth += Math.abs(patternOffsetX);
        }

      }
      if (patternSource.src) {
        patternImgSrc = patternSource.src;
      }
      else if (patternSource.toDataURL) {
        patternImgSrc = patternSource.toDataURL();
      }

      return '<pattern id="SVGID_' + this.id +
                    '" x="' + patternOffsetX +
                    '" y="' + patternOffsetY +
                    '" width="' + patternWidth +
                    '" height="' + patternHeight + '">\n' +
               '<image x="0" y="0"' +
                      ' width="' + patternSource.width +
                      '" height="' + patternSource.height +
                      '" xlink:href="' + patternImgSrc +
               '"></image>\n' +
             '</pattern>\n';
    },
    /* _TO_SVG_END_ */

    setOptions: function(options) {
      for (var prop in options) {
        this[prop] = options[prop];
      }
    },

    /**
     * Returns an instance of CanvasPattern
     * @param {CanvasRenderingContext2D} ctx Context to create pattern
     * @return {CanvasPattern}
     */
    toLive: function(ctx) {
      var source = typeof this.source === 'function' ? this.source() : this.source;

      // if the image failed to load, return, and allow rest to continue loading
      if (!source) {
        return '';
      }

      // if an image
      if (typeof source.src !== 'undefined') {
        if (!source.complete) {
          return '';
        }
        if (source.naturalWidth === 0 || source.naturalHeight === 0) {
          return '';
        }
      }
      return ctx.createPattern(source, this.repeat);
    }
  });
})();


(function(global) {

  'use strict';

  var fabric = global.fabric || (global.fabric = { }),
      toFixed = fabric.util.toFixed;

  if (fabric.Shadow) {
    fabric.warn('fabric.Shadow is already defined.');
    return;
  }

  /**
   * Shadow class
   * @class fabric.Shadow
   * @see {@link http://fabricjs.com/shadows|Shadow demo}
   * @see {@link fabric.Shadow#initialize} for constructor definition
   */
  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {

    /**
     * Shadow color
     * @type String
     * @default
     */
    color: 'rgb(0,0,0)',

    /**
     * Shadow blur
     * @type Number
     */
    blur: 0,

    /**
     * Shadow horizontal offset
     * @type Number
     * @default
     */
    offsetX: 0,

    /**
     * Shadow vertical offset
     * @type Number
     * @default
     */
    offsetY: 0,

    /**
     * Whether the shadow should affect stroke operations
     * @type Boolean
     * @default
     */
    affectStroke: false,

    /**
     * Indicates whether toObject should include default values
     * @type Boolean
     * @default
     */
    includeDefaultValues: true,

    /**
     * Constructor
     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. "rgba(0,0,0,0.2) 2px 2px 10px")
     * @return {fabric.Shadow} thisArg
     */
    initialize: function(options) {

      if (typeof options === 'string') {
        options = this._parseShadow(options);
      }

      for (var prop in options) {
        this[prop] = options[prop];
      }

      this.id = fabric.Object.__uid++;
    },

    /**
     * @private
     * @param {String} shadow Shadow value to parse
     * @return {Object} Shadow object with color, offsetX, offsetY and blur
     */
    _parseShadow: function(shadow) {
      var shadowStr = shadow.trim(),
          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],
          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';

      return {
        color: color.trim(),
        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,
        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,
        blur: parseInt(offsetsAndBlur[3], 10) || 0
      };
    },

    /**
     * Returns a string representation of an instance
     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow
     * @return {String} Returns CSS3 text-shadow declaration
     */
    toString: function() {
      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');
    },

    /* _TO_SVG_START_ */
    /**
     * Returns SVG representation of a shadow
     * @param {fabric.Object} object
     * @return {String} SVG representation of a shadow
     */
    toSVG: function(object) {
      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,
          offset = fabric.util.rotateVector(
            { x: this.offsetX, y: this.offsetY },
            fabric.util.degreesToRadians(-object.angle)),
          BLUR_BOX = 20, color = new fabric.Color(this.color);

      if (object.width && object.height) {
        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion
        // we add some extra space to filter box to contain the blur ( 20 )
        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;
        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;
      }
      if (object.flipX) {
        offset.x *= -1;
      }
      if (object.flipY) {
        offset.y *= -1;
      }

      return (
        '<filter id="SVGID_' + this.id + '" y="-' + fBoxY + '%" height="' + (100 + 2 * fBoxY) + '%" ' +
          'x="-' + fBoxX + '%" width="' + (100 + 2 * fBoxX) + '%" ' + '>\n' +
          '\t<feGaussianBlur in="SourceAlpha" stdDeviation="' +
            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '"></feGaussianBlur>\n' +
          '\t<feOffset dx="' + toFixed(offset.x, NUM_FRACTION_DIGITS) +
          '" dy="' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '" result="oBlur" ></feOffset>\n' +
          '\t<feFlood flood-color="' + color.toRgb() + '" flood-opacity="' + color.getAlpha() + '"/>\n' +
          '\t<feComposite in2="oBlur" operator="in" />\n' +
          '\t<feMerge>\n' +
            '\t\t<feMergeNode></feMergeNode>\n' +
            '\t\t<feMergeNode in="SourceGraphic"></feMergeNode>\n' +
          '\t</feMerge>\n' +
        '</filter>\n');
    },
    /* _TO_SVG_END_ */

    /**
     * Returns object representation of a shadow
     * @return {Object} Object representation of a shadow instance
     */
    toObject: function() {
      if (this.includeDefaultValues) {
        return {
          color: this.color,
          blur: this.blur,
          offsetX: this.offsetX,
          offsetY: this.offsetY,
          affectStroke: this.affectStroke
        };
      }
      var obj = { }, proto = fabric.Shadow.prototype;

      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke'].forEach(function(prop) {
        if (this[prop] !== proto[prop]) {
          obj[prop] = this[prop];
        }
      }, this);

      return obj;
    }
  });

  /**
   * Regex matching shadow offsetX, offsetY and blur (ex: "2px 2px 10px rgba(0,0,0,0.2)", "rgb(0,255,0) 2px 2px")
   * @static
   * @field
   * @memberOf fabric.Shadow
   */
  // eslint-disable-next-line max-len
  fabric.Shadow.reOffsetsAndBlur = /(?:\s|^)(-?\d+(?:px)?(?:\s?|$))?(-?\d+(?:px)?(?:\s?|$))?(\d+(?:px)?)?(?:\s?|$)(?:$|\s)/;

})( true ? exports : undefined);


(function () {

  'use strict';

  if (fabric.StaticCanvas) {
    fabric.warn('fabric.StaticCanvas is already defined.');
    return;
  }

  // aliases for faster resolution
  var extend = fabric.util.object.extend,
      getElementOffset = fabric.util.getElementOffset,
      removeFromArray = fabric.util.removeFromArray,
      toFixed = fabric.util.toFixed,
      transformPoint = fabric.util.transformPoint,
      invertTransform = fabric.util.invertTransform,
      getNodeCanvas = fabric.util.getNodeCanvas,
      createCanvasElement = fabric.util.createCanvasElement,

      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');

  /**
   * Static canvas class
   * @class fabric.StaticCanvas
   * @mixes fabric.Collection
   * @mixes fabric.Observable
   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}
   * @see {@link fabric.StaticCanvas#initialize} for constructor definition
   * @fires before:render
   * @fires after:render
   * @fires canvas:cleared
   * @fires object:added
   * @fires object:removed
   */
  fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.StaticCanvas.prototype */ {

    /**
     * Constructor
     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on
     * @param {Object} [options] Options object
     * @return {Object} thisArg
     */
    initialize: function(el, options) {
      options || (options = { });
      this.renderAndResetBound = this.renderAndReset.bind(this);
      this.requestRenderAllBound = this.requestRenderAll.bind(this);
      this._initStatic(el, options);
    },

    /**
     * Background color of canvas instance.
     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.
     * @type {(String|fabric.Pattern)}
     * @default
     */
    backgroundColor: '',

    /**
     * Background image of canvas instance.
     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.
     * <b>Backwards incompatibility note:</b> The "backgroundImageOpacity"
     * and "backgroundImageStretch" properties are deprecated since 1.3.9.
     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.
     * since 2.4.0 image caching is active, please when putting an image as background, add to the
     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom
     * vale. As an alternative you can disable image objectCaching
     * @type fabric.Image
     * @default
     */
    backgroundImage: null,

    /**
     * Overlay color of canvas instance.
     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}
     * @since 1.3.9
     * @type {(String|fabric.Pattern)}
     * @default
     */
    overlayColor: '',

    /**
     * Overlay image of canvas instance.
     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.
     * <b>Backwards incompatibility note:</b> The "overlayImageLeft"
     * and "overlayImageTop" properties are deprecated since 1.3.9.
     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.
     * since 2.4.0 image caching is active, please when putting an image as overlay, add to the
     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom
     * vale. As an alternative you can disable image objectCaching
     * @type fabric.Image
     * @default
     */
    overlayImage: null,

    /**
     * Indicates whether toObject/toDatalessObject should include default values
     * if set to false, takes precedence over the object value.
     * @type Boolean
     * @default
     */
    includeDefaultValues: true,

    /**
     * Indicates whether objects' state should be saved
     * @type Boolean
     * @default
     */
    stateful: false,

    /**
     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove},
     * {@link fabric.StaticCanvas.moveTo}, {@link fabric.StaticCanvas.clear} and many more, should also re-render canvas.
     * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once
     * since the renders are quequed and executed one per frame.
     * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )
     * Left default to true to do not break documentation and old app, fiddles.
     * @type Boolean
     * @default
     */
    renderOnAddRemove: true,

    /**
     * Function that determines clipping of entire canvas area
     * Being passed context as first argument.
     * If you are using code minification, ctx argument can be minified/manglied you should use
     * as a workaround `var ctx = arguments[0];` in the function;
     * See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}
     * @deprecated since 2.0.0
     * @type Function
     * @default
     */
    clipTo: null,

    /**
     * Indicates whether object controls (borders/controls) are rendered above overlay image
     * @type Boolean
     * @default
     */
    controlsAboveOverlay: false,

    /**
     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas
     * @type Boolean
     * @default
     */
    allowTouchScrolling: false,

    /**
     * Indicates whether this canvas will use image smoothing, this is on by default in browsers
     * @type Boolean
     * @default
     */
    imageSmoothingEnabled: true,

    /**
     * The transformation (in the format of Canvas transform) which focuses the viewport
     * @type Array
     * @default
     */
    viewportTransform: fabric.iMatrix.concat(),

    /**
     * if set to false background image is not affected by viewport transform
     * @since 1.6.3
     * @type Boolean
     * @default
     */
    backgroundVpt: true,

    /**
     * if set to false overlya image is not affected by viewport transform
     * @since 1.6.3
     * @type Boolean
     * @default
     */
    overlayVpt: true,

    /**
     * Callback; invoked right before object is about to be scaled/rotated
     * @deprecated since 2.3.0
     * Use before:transform event
     */
    onBeforeScaleRotate: function () {
      /* NOOP */
    },

    /**
     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens
     * @type Boolean
     * @default
     */
    enableRetinaScaling: true,

    /**
     * Describe canvas element extension over design
     * properties are tl,tr,bl,br.
     * if canvas is not zoomed/panned those points are the four corner of canvas
     * if canvas is viewportTransformed you those points indicate the extension
     * of canvas element in plain untrasformed coordinates
     * The coordinates get updated with @method calcViewportBoundaries.
     * @memberOf fabric.StaticCanvas.prototype
     */
    vptCoords: { },

    /**
     * Based on vptCoords and object.aCoords, skip rendering of objects that
     * are not included in current viewport.
     * May greatly help in applications with crowded canvas and use of zoom/pan
     * If One of the corner of the bounding box of the object is on the canvas
     * the objects get rendered.
     * @memberOf fabric.StaticCanvas.prototype
     * @type Boolean
     * @default
     */
    skipOffscreen: true,

    /**
     * a fabricObject that, without stroke define a clipping area with their shape. filled in black
     * the clipPath object gets used when the canvas has rendered, and the context is placed in the
     * top left corner of the canvas.
     * clipPath will clip away controls, if you do not want this to happen use controlsAboveOverlay = true
     * @type fabric.Object
     */
    clipPath: undefined,

    /**
     * @private
     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on
     * @param {Object} [options] Options object
     */
    _initStatic: function(el, options) {
      var cb = this.requestRenderAllBound;
      this._objects = [];
      this._createLowerCanvas(el);
      this._initOptions(options);
      this._setImageSmoothing();
      // only initialize retina scaling once
      if (!this.interactive) {
        this._initRetinaScaling();
      }

      if (options.overlayImage) {
        this.setOverlayImage(options.overlayImage, cb);
      }
      if (options.backgroundImage) {
        this.setBackgroundImage(options.backgroundImage, cb);
      }
      if (options.backgroundColor) {
        this.setBackgroundColor(options.backgroundColor, cb);
      }
      if (options.overlayColor) {
        this.setOverlayColor(options.overlayColor, cb);
      }
      this.calcOffset();
    },

    /**
     * @private
     */
    _isRetinaScaling: function() {
      return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);
    },

    /**
     * @private
     * @return {Number} retinaScaling if applied, otherwise 1;
     */
    getRetinaScaling: function() {
      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;
    },

    /**
     * @private
     */
    _initRetinaScaling: function() {
      if (!this._isRetinaScaling()) {
        return;
      }
      this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);
      this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);

      this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);
    },

    /**
     * Calculates canvas element offset relative to the document
     * This method is also attached as "resize" event handler of window
     * @return {fabric.Canvas} instance
     * @chainable
     */
    calcOffset: function () {
      this._offset = getElementOffset(this.lowerCanvasEl);
      return this;
    },

    /**
     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas
     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to
     * @param {Function} callback callback to invoke when image is loaded and set as an overlay
     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.
     * @return {fabric.Canvas} thisArg
     * @chainable
     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}
     * @example <caption>Normal overlayImage with left/top = 0</caption>
     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {
     *   // Needed to position overlayImage at 0/0
     *   originX: 'left',
     *   originY: 'top'
     * });
     * @example <caption>overlayImage with different properties</caption>
     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {
     *   opacity: 0.5,
     *   angle: 45,
     *   left: 400,
     *   top: 400,
     *   originX: 'left',
     *   originY: 'top'
     * });
     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>
     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {
     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});
     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));
     * });
     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>
     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {
     *   width: canvas.width,
     *   height: canvas.height,
     *   // Needed to position overlayImage at 0/0
     *   originX: 'left',
     *   originY: 'top'
     * });
     * @example <caption>overlayImage loaded from cross-origin</caption>
     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {
     *   opacity: 0.5,
     *   angle: 45,
     *   left: 400,
     *   top: 400,
     *   originX: 'left',
     *   originY: 'top',
     *   crossOrigin: 'anonymous'
     * });
     */
    setOverlayImage: function (image, callback, options) {
      return this.__setBgOverlayImage('overlayImage', image, callback, options);
    },

    /**
     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas
     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to
     * @param {Function} callback Callback to invoke when image is loaded and set as background
     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.
     * @return {fabric.Canvas} thisArg
     * @chainable
     * @see {@link http://jsfiddle.net/djnr8o7a/28/|jsFiddle demo}
     * @example <caption>Normal backgroundImage with left/top = 0</caption>
     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {
     *   // Needed to position backgroundImage at 0/0
     *   originX: 'left',
     *   originY: 'top'
     * });
     * @example <caption>backgroundImage with different properties</caption>
     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {
     *   opacity: 0.5,
     *   angle: 45,
     *   left: 400,
     *   top: 400,
     *   originX: 'left',
     *   originY: 'top'
     * });
     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>
     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {
     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});
     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));
     * });
     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>
     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {
     *   width: canvas.width,
     *   height: canvas.height,
     *   // Needed to position backgroundImage at 0/0
     *   originX: 'left',
     *   originY: 'top'
     * });
     * @example <caption>backgroundImage loaded from cross-origin</caption>
     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {
     *   opacity: 0.5,
     *   angle: 45,
     *   left: 400,
     *   top: 400,
     *   originX: 'left',
     *   originY: 'top',
     *   crossOrigin: 'anonymous'
     * });
     */
    // TODO: fix stretched examples
    setBackgroundImage: function (image, callback, options) {
      return this.__setBgOverlayImage('backgroundImage', image, callback, options);
    },

    /**
     * Sets {@link fabric.StaticCanvas#overlayColor|foreground color} for this canvas
     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set foreground color to
     * @param {Function} callback Callback to invoke when foreground color is set
     * @return {fabric.Canvas} thisArg
     * @chainable
     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}
     * @example <caption>Normal overlayColor - color value</caption>
     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));
     * @example <caption>fabric.Pattern used as overlayColor</caption>
     * canvas.setOverlayColor({
     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'
     * }, canvas.renderAll.bind(canvas));
     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>
     * canvas.setOverlayColor({
     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',
     *   repeat: 'repeat',
     *   offsetX: 200,
     *   offsetY: 100
     * }, canvas.renderAll.bind(canvas));
     */
    setOverlayColor: function(overlayColor, callback) {
      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);
    },

    /**
     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas
     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to
     * @param {Function} callback Callback to invoke when background color is set
     * @return {fabric.Canvas} thisArg
     * @chainable
     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}
     * @example <caption>Normal backgroundColor - color value</caption>
     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));
     * @example <caption>fabric.Pattern used as backgroundColor</caption>
     * canvas.setBackgroundColor({
     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'
     * }, canvas.renderAll.bind(canvas));
     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>
     * canvas.setBackgroundColor({
     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',
     *   repeat: 'repeat',
     *   offsetX: 200,
     *   offsetY: 100
     * }, canvas.renderAll.bind(canvas));
     */
    setBackgroundColor: function(backgroundColor, callback) {
      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);
    },

    /**
     * @private
     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}
     */
    _setImageSmoothing: function() {
      var ctx = this.getContext();

      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled
        || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;
      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;
    },

    /**
     * @private
     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}
     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})
     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to
     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay
     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.
     */
    __setBgOverlayImage: function(property, image, callback, options) {
      if (typeof image === 'string') {
        fabric.util.loadImage(image, function(img) {
          if (img) {
            var instance = new fabric.Image(img, options);
            this[property] = instance;
            instance.canvas = this;
          }
          callback && callback(img);
        }, this, options && options.crossOrigin);
      }
      else {
        options && image.setOptions(options);
        this[property] = image;
        image && (image.canvas = this);
        callback && callback(image);
      }

      return this;
    },

    /**
     * @private
     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}
     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})
     * @param {(Object|String|null)} color Object with pattern information, color value or null
     * @param {Function} [callback] Callback is invoked when color is set
     */
    __setBgOverlayColor: function(property, color, callback) {
      this[property] = color;
      this._initGradient(color, property);
      this._initPattern(color, property, callback);
      return this;
    },

    /**
     * @private
     */
    _createCanvasElement: function() {
      var element = createCanvasElement();
      if (!element) {
        throw CANVAS_INIT_ERROR;
      }
      if (!element.style) {
        element.style = { };
      }
      if (typeof element.getContext === 'undefined') {
        throw CANVAS_INIT_ERROR;
      }
      return element;
    },

    /**
     * @private
     * @param {Object} [options] Options object
     */
    _initOptions: function (options) {
      var lowerCanvasEl = this.lowerCanvasEl;
      this._setOptions(options);

      this.width = this.width || parseInt(lowerCanvasEl.width, 10) || 0;
      this.height = this.height || parseInt(lowerCanvasEl.height, 10) || 0;

      if (!this.lowerCanvasEl.style) {
        return;
      }

      lowerCanvasEl.width = this.width;
      lowerCanvasEl.height = this.height;

      lowerCanvasEl.style.width = this.width + 'px';
      lowerCanvasEl.style.height = this.height + 'px';

      this.viewportTransform = this.viewportTransform.slice();
    },

    /**
     * Creates a bottom canvas
     * @private
     * @param {HTMLElement} [canvasEl]
     */
    _createLowerCanvas: function (canvasEl) {
      // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node
      if (canvasEl && canvasEl.getContext) {
        this.lowerCanvasEl = canvasEl;
      }
      else {
        this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();
      }

      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');

      if (this.interactive) {
        this._applyCanvasStyle(this.lowerCanvasEl);
      }

      this.contextContainer = this.lowerCanvasEl.getContext('2d');
    },

    /**
     * Returns canvas width (in px)
     * @return {Number}
     */
    getWidth: function () {
      return this.width;
    },

    /**
     * Returns canvas height (in px)
     * @return {Number}
     */
    getHeight: function () {
      return this.height;
    },

    /**
     * Sets width of this canvas instance
     * @param {Number|String} value                         Value to set width to
     * @param {Object}        [options]                     Options object
     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions
     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions
     * @return {fabric.Canvas} instance
     * @chainable true
     */
    setWidth: function (value, options) {
      return this.setDimensions({ width: value }, options);
    },

    /**
     * Sets height of this canvas instance
     * @param {Number|String} value                         Value to set height to
     * @param {Object}        [options]                     Options object
     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions
     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions
     * @return {fabric.Canvas} instance
     * @chainable true
     */
    setHeight: function (value, options) {
      return this.setDimensions({ height: value }, options);
    },

    /**
     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)
     * @param {Object}        dimensions                    Object with width/height properties
     * @param {Number|String} [dimensions.width]            Width of canvas element
     * @param {Number|String} [dimensions.height]           Height of canvas element
     * @param {Object}        [options]                     Options object
     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions
     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions
     * @return {fabric.Canvas} thisArg
     * @chainable
     */
    setDimensions: function (dimensions, options) {
      var cssValue;

      options = options || {};

      for (var prop in dimensions) {
        cssValue = dimensions[prop];

        if (!options.cssOnly) {
          this._setBackstoreDimension(prop, dimensions[prop]);
          cssValue += 'px';
          this.hasLostContext = true;
        }

        if (!options.backstoreOnly) {
          this._setCssDimension(prop, cssValue);
        }
      }
      if (this._isCurrentlyDrawing) {
        this.freeDrawingBrush && this.freeDrawingBrush._setBrushStyles();
      }
      this._initRetinaScaling();
      this._setImageSmoothing();
      this.calcOffset();

      if (!options.cssOnly) {
        this.requestRenderAll();
      }

      return this;
    },

    /**
     * Helper for setting width/height
     * @private
     * @param {String} prop property (width|height)
     * @param {Number} value value to set property to
     * @return {fabric.Canvas} instance
     * @chainable true
     */
    _setBackstoreDimension: function (prop, value) {
      this.lowerCanvasEl[prop] = value;

      if (this.upperCanvasEl) {
        this.upperCanvasEl[prop] = value;
      }

      if (this.cacheCanvasEl) {
        this.cacheCanvasEl[prop] = value;
      }

      this[prop] = value;

      return this;
    },

    /**
     * Helper for setting css width/height
     * @private
     * @param {String} prop property (width|height)
     * @param {String} value value to set property to
     * @return {fabric.Canvas} instance
     * @chainable true
     */
    _setCssDimension: function (prop, value) {
      this.lowerCanvasEl.style[prop] = value;

      if (this.upperCanvasEl) {
        this.upperCanvasEl.style[prop] = value;
      }

      if (this.wrapperEl) {
        this.wrapperEl.style[prop] = value;
      }

      return this;
    },

    /**
     * Returns canvas zoom level
     * @return {Number}
     */
    getZoom: function () {
      return this.viewportTransform[0];
    },

    /**
     * Sets viewport transform of this canvas instance
     * @param {Array} vpt the transform in the form of context.transform
     * @return {fabric.Canvas} instance
     * @chainable true
     */
    setViewportTransform: function (vpt) {
      var activeObject = this._activeObject, object, ignoreVpt = false, skipAbsolute = true, i, len;
      this.viewportTransform = vpt;
      for (i = 0, len = this._objects.length; i < len; i++) {
        object = this._objects[i];
        object.group || object.setCoords(ignoreVpt, skipAbsolute);
      }
      if (activeObject && activeObject.type === 'activeSelection') {
        activeObject.setCoords(ignoreVpt, skipAbsolute);
      }
      this.calcViewportBoundaries();
      this.renderOnAddRemove && this.requestRenderAll();
      return this;
    },

    /**
     * Sets zoom level of this canvas instance, zoom centered around point
     * @param {fabric.Point} point to zoom with respect to
     * @param {Number} value to set zoom to, less than 1 zooms out
     * @return {fabric.Canvas} instance
     * @chainable true
     */
    zoomToPoint: function (point, value) {
      // TODO: just change the scale, preserve other transformations
      var before = point, vpt = this.viewportTransform.slice(0);
      point = transformPoint(point, invertTransform(this.viewportTransform));
      vpt[0] = value;
      vpt[3] = value;
      var after = transformPoint(point, vpt);
      vpt[4] += before.x - after.x;
      vpt[5] += before.y - after.y;
      return this.setViewportTransform(vpt);
    },

    /**
     * Sets zoom level of this canvas instance
     * @param {Number} value to set zoom to, less than 1 zooms out
     * @return {fabric.Canvas} instance
     * @chainable true
     */
    setZoom: function (value) {
      this.zoomToPoint(new fabric.Point(0, 0), value);
      return this;
    },

    /**
     * Pan viewport so as to place point at top left corner of canvas
     * @param {fabric.Point} point to move to
     * @return {fabric.Canvas} instance
     * @chainable true
     */
    absolutePan: function (point) {
      var vpt = this.viewportTransform.slice(0);
      vpt[4] = -point.x;
      vpt[5] = -point.y;
      return this.setViewportTransform(vpt);
    },

    /**
     * Pans viewpoint relatively
     * @param {fabric.Point} point (position vector) to move by
     * @return {fabric.Canvas} instance
     * @chainable true
     */
    relativePan: function (point) {
      return this.absolutePan(new fabric.Point(
        -point.x - this.viewportTransform[4],
        -point.y - this.viewportTransform[5]
      ));
    },

    /**
     * Returns &lt;canvas> element corresponding to this instance
     * @return {HTMLCanvasElement}
     */
    getElement: function () {
      return this.lowerCanvasEl;
    },

    /**
     * @private
     * @param {fabric.Object} obj Object that was added
     */
    _onObjectAdded: function(obj) {
      this.stateful && obj.setupState();
      obj._set('canvas', this);
      obj.setCoords();
      this.fire('object:added', { target: obj });
      obj.fire('added');
    },

    /**
     * @private
     * @param {fabric.Object} obj Object that was removed
     */
    _onObjectRemoved: function(obj) {
      this.fire('object:removed', { target: obj });
      obj.fire('removed');
      delete obj.canvas;
    },

    /**
     * Clears specified context of canvas element
     * @param {CanvasRenderingContext2D} ctx Context to clear
     * @return {fabric.Canvas} thisArg
     * @chainable
     */
    clearContext: function(ctx) {
      ctx.clearRect(0, 0, this.width, this.height);
      return this;
    },

    /**
     * Returns context of canvas where objects are drawn
     * @return {CanvasRenderingContext2D}
     */
    getContext: function () {
      return this.contextContainer;
    },

    /**
     * Clears all contexts (background, main, top) of an instance
     * @return {fabric.Canvas} thisArg
     * @chainable
     */
    clear: function () {
      this._objects.length = 0;
      this.backgroundImage = null;
      this.overlayImage = null;
      this.backgroundColor = '';
      this.overlayColor = '';
      if (this._hasITextHandlers) {
        this.off('mouse:up', this._mouseUpITextHandler);
        this._iTextInstances = null;
        this._hasITextHandlers = false;
      }
      this.clearContext(this.contextContainer);
      this.fire('canvas:cleared');
      this.renderOnAddRemove && this.requestRenderAll();
      return this;
    },

    /**
     * Renders the canvas
     * @return {fabric.Canvas} instance
     * @chainable
     */
    renderAll: function () {
      var canvasToDrawOn = this.contextContainer;
      this.renderCanvas(canvasToDrawOn, this._objects);
      return this;
    },

    /**
     * Function created to be instance bound at initialization
     * used in requestAnimationFrame rendering
     * Let the fabricJS call it. If you call it manually you could have more
     * animationFrame stacking on to of each other
     * for an imperative rendering, use canvas.renderAll
     * @private
     * @return {fabric.Canvas} instance
     * @chainable
     */
    renderAndReset: function() {
      this.isRendering = 0;
      this.renderAll();
    },

    /**
     * Append a renderAll request to next animation frame.
     * unless one is already in progress, in that case nothing is done
     * a boolean flag will avoid appending more.
     * @return {fabric.Canvas} instance
     * @chainable
     */
    requestRenderAll: function () {
      if (!this.isRendering) {
        this.isRendering = fabric.util.requestAnimFrame(this.renderAndResetBound);
      }
      return this;
    },

    /**
     * Calculate the position of the 4 corner of canvas with current viewportTransform.
     * helps to determinate when an object is in the current rendering viewport using
     * object absolute coordinates ( aCoords )
     * @return {Object} points.tl
     * @chainable
     */
    calcViewportBoundaries: function() {
      var points = { }, width = this.width, height = this.height,
          iVpt = invertTransform(this.viewportTransform);
      points.tl = transformPoint({ x: 0, y: 0 }, iVpt);
      points.br = transformPoint({ x: width, y: height }, iVpt);
      points.tr = new fabric.Point(points.br.x, points.tl.y);
      points.bl = new fabric.Point(points.tl.x, points.br.y);
      this.vptCoords = points;
      return points;
    },

    cancelRequestedRender: function() {
      if (this.isRendering) {
        fabric.util.cancelAnimFrame(this.isRendering);
        this.isRendering = 0;
      }
    },

    /**
     * Renders background, objects, overlay and controls.
     * @param {CanvasRenderingContext2D} ctx
     * @param {Array} objects to render
     * @return {fabric.Canvas} instance
     * @chainable
     */
    renderCanvas: function(ctx, objects) {
      var v = this.viewportTransform, path = this.clipPath;
      this.cancelRequestedRender();
      this.calcViewportBoundaries();
      this.clearContext(ctx);
      this.fire('before:render', { ctx: ctx, });
      if (this.clipTo) {
        fabric.util.clipContext(this, ctx);
      }
      this._renderBackground(ctx);

      ctx.save();
      //apply viewport transform once for all rendering process
      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);
      this._renderObjects(ctx, objects);
      ctx.restore();
      if (!this.controlsAboveOverlay && this.interactive) {
        this.drawControls(ctx);
      }
      if (this.clipTo) {
        ctx.restore();
      }
      if (path) {
        path.canvas = this;
        // needed to setup a couple of variables
        path.shouldCache();
        path._transformDone = true;
        path.renderCache({ forClipping: true });
        this.drawClipPathOnCanvas(ctx);
      }
      this._renderOverlay(ctx);
      if (this.controlsAboveOverlay && this.interactive) {
        this.drawControls(ctx);
      }
      this.fire('after:render', { ctx: ctx, });
    },

    /**
     * Paint the cached clipPath on the lowerCanvasEl
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    drawClipPathOnCanvas: function(ctx) {
      var v = this.viewportTransform, path = this.clipPath;
      ctx.save();
      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);
      // DEBUG: uncomment this line, comment the following
      // ctx.globalAlpha = 0.4;
      ctx.globalCompositeOperation = 'destination-in';
      path.transform(ctx);
      ctx.scale(1 / path.zoomX, 1 / path.zoomY);
      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);
      ctx.restore();
    },

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     * @param {Array} objects to render
     */
    _renderObjects: function(ctx, objects) {
      var i, len;
      for (i = 0, len = objects.length; i < len; ++i) {
        objects[i] && objects[i].render(ctx);
      }
    },

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     * @param {string} property 'background' or 'overlay'
     */
    _renderBackgroundOrOverlay: function(ctx, property) {
      var object = this[property + 'Color'], v;
      if (object) {
        ctx.fillStyle = object.toLive
          ? object.toLive(ctx, this)
          : object;

        ctx.fillRect(
          object.offsetX || 0,
          object.offsetY || 0,
          this.width,
          this.height);
      }
      object = this[property + 'Image'];
      if (object) {
        if (this[property + 'Vpt']) {
          v = this.viewportTransform;
          ctx.save();
          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);
        }
        object.render(ctx);
        this[property + 'Vpt'] && ctx.restore();
      }
    },

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    _renderBackground: function(ctx) {
      this._renderBackgroundOrOverlay(ctx, 'background');
    },

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    _renderOverlay: function(ctx) {
      this._renderBackgroundOrOverlay(ctx, 'overlay');
    },

    /**
     * Returns coordinates of a center of canvas.
     * Returned value is an object with top and left properties
     * @return {Object} object with "top" and "left" number values
     */
    getCenter: function () {
      return {
        top: this.height / 2,
        left: this.width / 2
      };
    },

    /**
     * Centers object horizontally in the canvas
     * @param {fabric.Object} object Object to center horizontally
     * @return {fabric.Canvas} thisArg
     */
    centerObjectH: function (object) {
      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));
    },

    /**
     * Centers object vertically in the canvas
     * @param {fabric.Object} object Object to center vertically
     * @return {fabric.Canvas} thisArg
     * @chainable
     */
    centerObjectV: function (object) {
      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));
    },

    /**
     * Centers object vertically and horizontally in the canvas
     * @param {fabric.Object} object Object to center vertically and horizontally
     * @return {fabric.Canvas} thisArg
     * @chainable
     */
    centerObject: function(object) {
      var center = this.getCenter();

      return this._centerObject(object, new fabric.Point(center.left, center.top));
    },

    /**
     * Centers object vertically and horizontally in the viewport
     * @param {fabric.Object} object Object to center vertically and horizontally
     * @return {fabric.Canvas} thisArg
     * @chainable
     */
    viewportCenterObject: function(object) {
      var vpCenter = this.getVpCenter();

      return this._centerObject(object, vpCenter);
    },

    /**
     * Centers object horizontally in the viewport, object.top is unchanged
     * @param {fabric.Object} object Object to center vertically and horizontally
     * @return {fabric.Canvas} thisArg
     * @chainable
     */
    viewportCenterObjectH: function(object) {
      var vpCenter = this.getVpCenter();
      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));
      return this;
    },

    /**
     * Centers object Vertically in the viewport, object.top is unchanged
     * @param {fabric.Object} object Object to center vertically and horizontally
     * @return {fabric.Canvas} thisArg
     * @chainable
     */
    viewportCenterObjectV: function(object) {
      var vpCenter = this.getVpCenter();

      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));
    },

    /**
     * Calculate the point in canvas that correspond to the center of actual viewport.
     * @return {fabric.Point} vpCenter, viewport center
     * @chainable
     */
    getVpCenter: function() {
      var center = this.getCenter(),
          iVpt = invertTransform(this.viewportTransform);
      return transformPoint({ x: center.left, y: center.top }, iVpt);
    },

    /**
     * @private
     * @param {fabric.Object} object Object to center
     * @param {fabric.Point} center Center point
     * @return {fabric.Canvas} thisArg
     * @chainable
     */
    _centerObject: function(object, center) {
      object.setPositionByOrigin(center, 'center', 'center');
      object.setCoords();
      this.renderOnAddRemove && this.requestRenderAll();
      return this;
    },

    /**
     * Returs dataless JSON representation of canvas
     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
     * @return {String} json string
     */
    toDatalessJSON: function (propertiesToInclude) {
      return this.toDatalessObject(propertiesToInclude);
    },

    /**
     * Returns object representation of canvas
     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
     * @return {Object} object representation of an instance
     */
    toObject: function (propertiesToInclude) {
      return this._toObjectMethod('toObject', propertiesToInclude);
    },

    /**
     * Returns dataless object representation of canvas
     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
     * @return {Object} object representation of an instance
     */
    toDatalessObject: function (propertiesToInclude) {
      return this._toObjectMethod('toDatalessObject', propertiesToInclude);
    },

    /**
     * @private
     */
    _toObjectMethod: function (methodName, propertiesToInclude) {

      var clipPath = this.clipPath, data = {
        version: fabric.version,
        objects: this._toObjects(methodName, propertiesToInclude),
      };
      if (clipPath) {
        data.clipPath = this._toObjectMethod(clipPath, methodName, propertiesToInclude);
      }
      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));

      fabric.util.populateWithProperties(this, data, propertiesToInclude);

      return data;
    },

    /**
     * @private
     */
    _toObjects: function(methodName, propertiesToInclude) {
      return this._objects.filter(function(object) {
        return !object.excludeFromExport;
      }).map(function(instance) {
        return this._toObject(instance, methodName, propertiesToInclude);
      }, this);
    },

    /**
     * @private
     */
    _toObject: function(instance, methodName, propertiesToInclude) {
      var originalValue;

      if (!this.includeDefaultValues) {
        originalValue = instance.includeDefaultValues;
        instance.includeDefaultValues = false;
      }

      var object = instance[methodName](propertiesToInclude);
      if (!this.includeDefaultValues) {
        instance.includeDefaultValues = originalValue;
      }
      return object;
    },

    /**
     * @private
     */
    __serializeBgOverlay: function(methodName, propertiesToInclude) {
      var data = { }, bgImage = this.backgroundImage, overlay = this.overlayImage;

      if (this.backgroundColor) {
        data.background = this.backgroundColor.toObject
          ? this.backgroundColor.toObject(propertiesToInclude)
          : this.backgroundColor;
      }

      if (this.overlayColor) {
        data.overlay = this.overlayColor.toObject
          ? this.overlayColor.toObject(propertiesToInclude)
          : this.overlayColor;
      }
      if (bgImage && !bgImage.excludeFromExport) {
        data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);
      }
      if (overlay && !overlay.excludeFromExport) {
        data.overlayImage = this._toObject(overlay, methodName, propertiesToInclude);
      }

      return data;
    },

    /* _TO_SVG_START_ */
    /**
     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,
     * a zoomed canvas will then produce zoomed SVG output.
     * @type Boolean
     * @default
     */
    svgViewportTransformation: true,

    /**
     * Returns SVG representation of canvas
     * @function
     * @param {Object} [options] Options object for SVG output
     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included
     * @param {Object} [options.viewBox] SVG viewbox object
     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox
     * @param {Number} [options.viewBox.y] y-coordinate of viewbox
     * @param {Number} [options.viewBox.width] Width of viewbox
     * @param {Number} [options.viewBox.height] Height of viewbox
     * @param {String} [options.encoding=UTF-8] Encoding of SVG output
     * @param {String} [options.width] desired width of svg with or without units
     * @param {String} [options.height] desired height of svg with or without units
     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.
     * @return {String} SVG string
     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}
     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}
     * @example <caption>Normal SVG output</caption>
     * var svg = canvas.toSVG();
     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>
     * var svg = canvas.toSVG({suppressPreamble: true});
     * @example <caption>SVG output with viewBox attribute</caption>
     * var svg = canvas.toSVG({
     *   viewBox: {
     *     x: 100,
     *     y: 100,
     *     width: 200,
     *     height: 300
     *   }
     * });
     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>
     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});
     * @example <caption>Modify SVG output with reviver function</caption>
     * var svg = canvas.toSVG(null, function(svg) {
     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');
     * });
     */
    toSVG: function(options, reviver) {
      options || (options = { });
      options.reviver = reviver;
      var markup = [];

      this._setSVGPreamble(markup, options);
      this._setSVGHeader(markup, options);
      if (this.clipPath) {
        markup.push('<g clip-path="url(#' + this.clipPath.clipPathId + ')" >\n');
      }
      this._setSVGBgOverlayColor(markup, 'backgroundColor');
      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);
      this._setSVGObjects(markup, reviver);
      if (this.clipPath) {
        markup.push('</g>\n');
      }
      this._setSVGBgOverlayColor(markup, 'overlayColor');
      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);

      markup.push('</svg>');

      return markup.join('');
    },

    /**
     * @private
     */
    _setSVGPreamble: function(markup, options) {
      if (options.suppressPreamble) {
        return;
      }
      markup.push(
        '<?xml version="1.0" encoding="', (options.encoding || 'UTF-8'), '" standalone="no" ?>\n',
        '<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" ',
        '"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">\n'
      );
    },

    /**
     * @private
     */
    _setSVGHeader: function(markup, options) {
      var width = options.width || this.width,
          height = options.height || this.height,
          vpt, viewBox = 'viewBox="0 0 ' + this.width + ' ' + this.height + '" ',
          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;

      if (options.viewBox) {
        viewBox = 'viewBox="' +
                options.viewBox.x + ' ' +
                options.viewBox.y + ' ' +
                options.viewBox.width + ' ' +
                options.viewBox.height + '" ';
      }
      else {
        if (this.svgViewportTransformation) {
          vpt = this.viewportTransform;
          viewBox = 'viewBox="' +
                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +
                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +
                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +
                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '" ';
        }
      }

      markup.push(
        '<svg ',
        'xmlns="http://www.w3.org/2000/svg" ',
        'xmlns:xlink="http://www.w3.org/1999/xlink" ',
        'version="1.1" ',
        'width="', width, '" ',
        'height="', height, '" ',
        viewBox,
        'xml:space="preserve">\n',
        '<desc>Created with Fabric.js ', fabric.version, '</desc>\n',
        '<defs>\n',
        this.createSVGFontFacesMarkup(),
        this.createSVGRefElementsMarkup(),
        this.createSVGClipPathMarkup(options),
        '</defs>\n'
      );
    },

    createSVGClipPathMarkup: function(options) {
      var clipPath = this.clipPath;
      if (clipPath) {
        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;
        return  '<clipPath id="' + clipPath.clipPathId + '" >\n' +
          this.clipPath.toClipPathSVG(options.reviver) +
          '</clipPath>\n';
      }
      return '';
    },

    /**
     * Creates markup containing SVG referenced elements like patterns, gradients etc.
     * @return {String}
     */
    createSVGRefElementsMarkup: function() {
      var _this = this,
          markup = ['backgroundColor', 'overlayColor'].map(function(prop) {
            var fill = _this[prop];
            if (fill && fill.toLive) {
              return fill.toSVG(_this, false);
            }
          });
      return markup.join('');
    },

    /**
     * Creates markup containing SVG font faces,
     * font URLs for font faces must be collected by developers
     * and are not extracted from the DOM by fabricjs
     * @param {Array} objects Array of fabric objects
     * @return {String}
     */
    createSVGFontFacesMarkup: function() {
      var markup = '', fontList = { }, obj, fontFamily,
          style, row, rowIndex, _char, charIndex, i, len,
          fontPaths = fabric.fontPaths, objects = this._objects;

      for (i = 0, len = objects.length; i < len; i++) {
        obj = objects[i];
        fontFamily = obj.fontFamily;
        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {
          continue;
        }
        fontList[fontFamily] = true;
        if (!obj.styles) {
          continue;
        }
        style = obj.styles;
        for (rowIndex in style) {
          row = style[rowIndex];
          for (charIndex in row) {
            _char = row[charIndex];
            fontFamily = _char.fontFamily;
            if (!fontList[fontFamily] && fontPaths[fontFamily]) {
              fontList[fontFamily] = true;
            }
          }
        }
      }

      for (var j in fontList) {
        markup += [
          '\t\t@font-face {\n',
          '\t\t\tfont-family: \'', j, '\';\n',
          '\t\t\tsrc: url(\'', fontPaths[j], '\');\n',
          '\t\t}\n'
        ].join('');
      }

      if (markup) {
        markup = [
          '\t<style type="text/css">',
          '<![CDATA[\n',
          markup,
          ']]>',
          '</style>\n'
        ].join('');
      }

      return markup;
    },

    /**
     * @private
     */
    _setSVGObjects: function(markup, reviver) {
      var instance, i, len, objects = this._objects;
      for (i = 0, len = objects.length; i < len; i++) {
        instance = objects[i];
        if (instance.excludeFromExport) {
          continue;
        }
        this._setSVGObject(markup, instance, reviver);
      }
    },

    /**
     * @private
     */
    _setSVGObject: function(markup, instance, reviver) {
      markup.push(instance.toSVG(reviver));
    },

    /**
     * @private
     */
    _setSVGBgOverlayImage: function(markup, property, reviver) {
      if (this[property] && !this[property].excludeFromExport && this[property].toSVG) {
        markup.push(this[property].toSVG(reviver));
      }
    },

    /**
     * @private
     */
    _setSVGBgOverlayColor: function(markup, property) {
      var filler = this[property], vpt = this.viewportTransform, finalWidth = this.width / vpt[0],
          finalHeight = this.height / vpt[3];
      if (!filler) {
        return;
      }
      if (filler.toLive) {
        var repeat = filler.repeat;
        markup.push(
          '<rect transform="translate(', finalWidth / 2, ',', finalHeight / 2, ')"',
          ' x="', filler.offsetX - finalWidth / 2, '" y="', filler.offsetY - finalHeight / 2, '" ',
          'width="',
          (repeat === 'repeat-y' || repeat === 'no-repeat'
            ? filler.source.width
            : finalWidth ),
          '" height="',
          (repeat === 'repeat-x' || repeat === 'no-repeat'
            ? filler.source.height
            : finalHeight),
          '" fill="url(#SVGID_' + filler.id + ')"',
          '></rect>\n'
        );
      }
      else {
        markup.push(
          '<rect x="0" y="0" width="100%" height="100%" ',
          'fill="', this[property], '"',
          '></rect>\n'
        );
      }
    },
    /* _TO_SVG_END_ */

    /**
     * Moves an object or the objects of a multiple selection
     * to the bottom of the stack of drawn objects
     * @param {fabric.Object} object Object to send to back
     * @return {fabric.Canvas} thisArg
     * @chainable
     */
    sendToBack: function (object) {
      if (!object) {
        return this;
      }
      var activeSelection = this._activeObject,
          i, obj, objs;
      if (object === activeSelection && object.type === 'activeSelection') {
        objs = activeSelection._objects;
        for (i = objs.length; i--;) {
          obj = objs[i];
          removeFromArray(this._objects, obj);
          this._objects.unshift(obj);
        }
      }
      else {
        removeFromArray(this._objects, object);
        this._objects.unshift(object);
      }
      this.renderOnAddRemove && this.requestRenderAll();
      return this;
    },

    /**
     * Moves an object or the objects of a multiple selection
     * to the top of the stack of drawn objects
     * @param {fabric.Object} object Object to send
     * @return {fabric.Canvas} thisArg
     * @chainable
     */
    bringToFront: function (object) {
      if (!object) {
        return this;
      }
      var activeSelection = this._activeObject,
          i, obj, objs;
      if (object === activeSelection && object.type === 'activeSelection') {
        objs = activeSelection._objects;
        for (i = 0; i < objs.length; i++) {
          obj = objs[i];
          removeFromArray(this._objects, obj);
          this._objects.push(obj);
        }
      }
      else {
        removeFromArray(this._objects, object);
        this._objects.push(object);
      }
      this.renderOnAddRemove && this.requestRenderAll();
      return this;
    },

    /**
     * Moves an object or a selection down in stack of drawn objects
     * An optional paramter, intersecting allowes to move the object in behind
     * the first intersecting object. Where intersection is calculated with
     * bounding box. If no intersection is found, there will not be change in the
     * stack.
     * @param {fabric.Object} object Object to send
     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object
     * @return {fabric.Canvas} thisArg
     * @chainable
     */
    sendBackwards: function (object, intersecting) {
      if (!object) {
        return this;
      }
      var activeSelection = this._activeObject,
          i, obj, idx, newIdx, objs, objsMoved = 0;

      if (object === activeSelection && object.type === 'activeSelection') {
        objs = activeSelection._objects;
        for (i = 0; i < objs.length; i++) {
          obj = objs[i];
          idx = this._objects.indexOf(obj);
          if (idx > 0 + objsMoved) {
            newIdx = idx - 1;
            removeFromArray(this._objects, obj);
            this._objects.splice(newIdx, 0, obj);
          }
          objsMoved++;
        }
      }
      else {
        idx = this._objects.indexOf(object);
        if (idx !== 0) {
          // if object is not on the bottom of stack
          newIdx = this._findNewLowerIndex(object, idx, intersecting);
          removeFromArray(this._objects, object);
          this._objects.splice(newIdx, 0, object);
        }
      }
      this.renderOnAddRemove && this.requestRenderAll();
      return this;
    },

    /**
     * @private
     */
    _findNewLowerIndex: function(object, idx, intersecting) {
      var newIdx, i;

      if (intersecting) {
        newIdx = idx;

        // traverse down the stack looking for the nearest intersecting object
        for (i = idx - 1; i >= 0; --i) {

          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||
                               object.isContainedWithinObject(this._objects[i]) ||
                               this._objects[i].isContainedWithinObject(object);

          if (isIntersecting) {
            newIdx = i;
            break;
          }
        }
      }
      else {
        newIdx = idx - 1;
      }

      return newIdx;
    },

    /**
     * Moves an object or a selection up in stack of drawn objects
     * An optional paramter, intersecting allowes to move the object in front
     * of the first intersecting object. Where intersection is calculated with
     * bounding box. If no intersection is found, there will not be change in the
     * stack.
     * @param {fabric.Object} object Object to send
     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object
     * @return {fabric.Canvas} thisArg
     * @chainable
     */
    bringForward: function (object, intersecting) {
      if (!object) {
        return this;
      }
      var activeSelection = this._activeObject,
          i, obj, idx, newIdx, objs, objsMoved = 0;

      if (object === activeSelection && object.type === 'activeSelection') {
        objs = activeSelection._objects;
        for (i = objs.length; i--;) {
          obj = objs[i];
          idx = this._objects.indexOf(obj);
          if (idx < this._objects.length - 1 - objsMoved) {
            newIdx = idx + 1;
            removeFromArray(this._objects, obj);
            this._objects.splice(newIdx, 0, obj);
          }
          objsMoved++;
        }
      }
      else {
        idx = this._objects.indexOf(object);
        if (idx !== this._objects.length - 1) {
          // if object is not on top of stack (last item in an array)
          newIdx = this._findNewUpperIndex(object, idx, intersecting);
          removeFromArray(this._objects, object);
          this._objects.splice(newIdx, 0, object);
        }
      }
      this.renderOnAddRemove && this.requestRenderAll();
      return this;
    },

    /**
     * @private
     */
    _findNewUpperIndex: function(object, idx, intersecting) {
      var newIdx, i, len;

      if (intersecting) {
        newIdx = idx;

        // traverse up the stack looking for the nearest intersecting object
        for (i = idx + 1, len = this._objects.length; i < len; ++i) {

          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||
                               object.isContainedWithinObject(this._objects[i]) ||
                               this._objects[i].isContainedWithinObject(object);

          if (isIntersecting) {
            newIdx = i;
            break;
          }
        }
      }
      else {
        newIdx = idx + 1;
      }

      return newIdx;
    },

    /**
     * Moves an object to specified level in stack of drawn objects
     * @param {fabric.Object} object Object to send
     * @param {Number} index Position to move to
     * @return {fabric.Canvas} thisArg
     * @chainable
     */
    moveTo: function (object, index) {
      removeFromArray(this._objects, object);
      this._objects.splice(index, 0, object);
      return this.renderOnAddRemove && this.requestRenderAll();
    },

    /**
     * Clears a canvas element and dispose objects
     * @return {fabric.Canvas} thisArg
     * @chainable
     */
    dispose: function () {
      // cancel eventually ongoing renders
      if (this.isRendering) {
        fabric.util.cancelAnimFrame(this.isRendering);
        this.isRendering = 0;
      }
      this.forEachObject(function(object) {
        object.dispose && object.dispose();
      });
      this._objects = [];
      if (this.backgroundImage && this.backgroundImage.dispose) {
        this.backgroundImage.dispose();
      }
      this.backgroundImage = null;
      if (this.overlayImage && this.overlayImage.dispose) {
        this.overlayImage.dispose();
      }
      this.overlayImage = null;
      this._iTextInstances = null;
      this.contextContainer = null;
      fabric.util.cleanUpJsdomNode(this.lowerCanvasEl);
      this.lowerCanvasEl = undefined;
      return this;
    },

    /**
     * Returns a string representation of an instance
     * @return {String} string representation of an instance
     */
    toString: function () {
      return '#<fabric.Canvas (' + this.complexity() + '): ' +
               '{ objects: ' + this._objects.length + ' }>';
    }
  });

  extend(fabric.StaticCanvas.prototype, fabric.Observable);
  extend(fabric.StaticCanvas.prototype, fabric.Collection);
  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);

  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {

    /**
     * @static
     * @type String
     * @default
     */
    EMPTY_JSON: '{"objects": [], "background": "white"}',

    /**
     * Provides a way to check support of some of the canvas methods
     * (either those of HTMLCanvasElement itself, or rendering context)
     *
     * @param {String} methodName Method to check support for;
     *                            Could be one of "setLineDash"
     * @return {Boolean | null} `true` if method is supported (or at least exists),
     *                          `null` if canvas element or context can not be initialized
     */
    supports: function (methodName) {
      var el = createCanvasElement();

      if (!el || !el.getContext) {
        return null;
      }

      var ctx = el.getContext('2d');
      if (!ctx) {
        return null;
      }

      switch (methodName) {

        case 'setLineDash':
          return typeof ctx.setLineDash !== 'undefined';

        default:
          return null;
      }
    }
  });

  /**
   * Returns JSON representation of canvas
   * @function
   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
   * @return {String} JSON string
   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}
   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}
   * @example <caption>JSON without additional properties</caption>
   * var json = canvas.toJSON();
   * @example <caption>JSON with additional properties included</caption>
   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);
   * @example <caption>JSON without default values</caption>
   * canvas.includeDefaultValues = false;
   * var json = canvas.toJSON();
   */
  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;

  if (fabric.isLikelyNode) {
    fabric.StaticCanvas.prototype.createPNGStream = function() {
      var impl = getNodeCanvas(this.lowerCanvasEl);
      return impl && impl.createPNGStream();
    };
    fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {
      var impl = getNodeCanvas(this.lowerCanvasEl);
      return impl && impl.createJPEGStream(opts);
    };
  }
})();


/**
 * BaseBrush class
 * @class fabric.BaseBrush
 * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}
 */
fabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {

  /**
   * Color of a brush
   * @type String
   * @default
   */
  color: 'rgb(0, 0, 0)',

  /**
   * Width of a brush, has to be a Number, no string literals
   * @type Number
   * @default
   */
  width: 1,

  /**
   * Shadow object representing shadow of this shape.
   * <b>Backwards incompatibility note:</b> This property replaces "shadowColor" (String), "shadowOffsetX" (Number),
   * "shadowOffsetY" (Number) and "shadowBlur" (Number) since v1.2.12
   * @type fabric.Shadow
   * @default
   */
  shadow: null,

  /**
   * Line endings style of a brush (one of "butt", "round", "square")
   * @type String
   * @default
   */
  strokeLineCap: 'round',

  /**
   * Corner style of a brush (one of "bevel", "round", "miter")
   * @type String
   * @default
   */
  strokeLineJoin: 'round',

  /**
   * Maximum miter length (used for strokeLineJoin = "miter") of a brush's
   * @type Number
   * @default
   */
  strokeMiterLimit:         10,

  /**
   * Stroke Dash Array.
   * @type Array
   * @default
   */
  strokeDashArray: null,

  /**
   * Sets shadow of an object
   * @param {Object|String} [options] Options object or string (e.g. "2px 2px 10px rgba(0,0,0,0.2)")
   * @return {fabric.Object} thisArg
   * @chainable
   */
  setShadow: function(options) {
    this.shadow = new fabric.Shadow(options);
    return this;
  },

  /**
   * Sets brush styles
   * @private
   */
  _setBrushStyles: function() {
    var ctx = this.canvas.contextTop;
    ctx.strokeStyle = this.color;
    ctx.lineWidth = this.width;
    ctx.lineCap = this.strokeLineCap;
    ctx.miterLimit = this.strokeMiterLimit;
    ctx.lineJoin = this.strokeLineJoin;
    if (fabric.StaticCanvas.supports('setLineDash')) {
      ctx.setLineDash(this.strokeDashArray || []);
    }
  },

  /**
   * Sets the transformation on given context
   * @param {RenderingContext2d} ctx context to render on
   * @private
   */
  _saveAndTransform: function(ctx) {
    var v = this.canvas.viewportTransform;
    ctx.save();
    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);
  },

  /**
   * Sets brush shadow styles
   * @private
   */
  _setShadow: function() {
    if (!this.shadow) {
      return;
    }

    var ctx = this.canvas.contextTop,
        zoom = this.canvas.getZoom();

    ctx.shadowColor = this.shadow.color;
    ctx.shadowBlur = this.shadow.blur * zoom;
    ctx.shadowOffsetX = this.shadow.offsetX * zoom;
    ctx.shadowOffsetY = this.shadow.offsetY * zoom;
  },

  /**
   * Removes brush shadow styles
   * @private
   */
  _resetShadow: function() {
    var ctx = this.canvas.contextTop;

    ctx.shadowColor = '';
    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;
  }
});


(function() {

  /**
   * PencilBrush class
   * @class fabric.PencilBrush
   * @extends fabric.BaseBrush
   */
  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {

    /**
     * Constructor
     * @param {fabric.Canvas} canvas
     * @return {fabric.PencilBrush} Instance of a pencil brush
     */
    initialize: function(canvas) {
      this.canvas = canvas;
      this._points = [];
    },

    /**
     * Invoked inside on mouse down and mouse move
     * @param {Object} pointer
     */
    _drawSegment: function (ctx, p1, p2) {
      var midPoint = p1.midPointFrom(p2);
      ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);
      return midPoint;
    },

    /**
     * Inovoked on mouse down
     * @param {Object} pointer
     */
    onMouseDown: function(pointer) {
      this._prepareForDrawing(pointer);
      // capture coordinates immediately
      // this allows to draw dots (when movement never occurs)
      this._captureDrawingPath(pointer);
      this._render();
    },

    /**
     * Inovoked on mouse move
     * @param {Object} pointer
     */
    onMouseMove: function(pointer) {
      if (this._captureDrawingPath(pointer) && this._points.length > 1) {
        if (this.needsFullRender) {
          // redraw curve
          // clear top canvas
          this.canvas.clearContext(this.canvas.contextTop);
          this._render();
        }
        else {
          var points = this._points, length = points.length, ctx = this.canvas.contextTop;
          // draw the curve update
          this._saveAndTransform(ctx);
          if (this.oldEnd) {
            ctx.beginPath();
            ctx.moveTo(this.oldEnd.x, this.oldEnd.y);
          }
          this.oldEnd = this._drawSegment(ctx, points[length - 2], points[length - 1], true);
          ctx.stroke();
          ctx.restore();
        }
      }
    },

    /**
     * Invoked on mouse up
     */
    onMouseUp: function() {
      this.oldEnd = undefined;
      this._finalizeAndAddPath();
    },

    /**
     * @private
     * @param {Object} pointer Actual mouse position related to the canvas.
     */
    _prepareForDrawing: function(pointer) {

      var p = new fabric.Point(pointer.x, pointer.y);

      this._reset();
      this._addPoint(p);
      this.canvas.contextTop.moveTo(p.x, p.y);
    },

    /**
     * @private
     * @param {fabric.Point} point Point to be added to points array
     */
    _addPoint: function(point) {
      if (this._points.length > 1 && point.eq(this._points[this._points.length - 1])) {
        return false;
      }
      this._points.push(point);
      return true;
    },

    /**
     * Clear points array and set contextTop canvas style.
     * @private
     */
    _reset: function() {
      this._points.length = 0;
      this._setBrushStyles();
      var color = new fabric.Color(this.color);
      this.needsFullRender = (color.getAlpha() < 1);
      this._setShadow();
    },

    /**
     * @private
     * @param {Object} pointer Actual mouse position related to the canvas.
     */
    _captureDrawingPath: function(pointer) {
      var pointerPoint = new fabric.Point(pointer.x, pointer.y);
      return this._addPoint(pointerPoint);
    },

    /**
     * Draw a smooth path on the topCanvas using quadraticCurveTo
     * @private
     */
    _render: function() {
      var ctx  = this.canvas.contextTop, i, len,
          p1 = this._points[0],
          p2 = this._points[1];

      this._saveAndTransform(ctx);
      ctx.beginPath();
      //if we only have 2 points in the path and they are the same
      //it means that the user only clicked the canvas without moving the mouse
      //then we should be drawing a dot. A path isn't drawn between two identical dots
      //that's why we set them apart a bit
      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {
        var width = this.width / 1000;
        p1 = new fabric.Point(p1.x, p1.y);
        p2 = new fabric.Point(p2.x, p2.y);
        p1.x -= width;
        p2.x += width;
      }
      ctx.moveTo(p1.x, p1.y);

      for (i = 1, len = this._points.length; i < len; i++) {
        // we pick the point between pi + 1 & pi + 2 as the
        // end point and p1 as our control point.
        this._drawSegment(ctx, p1, p2);
        p1 = this._points[i];
        p2 = this._points[i + 1];
      }
      // Draw last line as a straight line while
      // we wait for the next point to be able to calculate
      // the bezier control point
      ctx.lineTo(p1.x, p1.y);
      ctx.stroke();
      ctx.restore();
    },

    /**
     * Converts points to SVG path
     * @param {Array} points Array of points
     * @return {String} SVG path
     */
    convertPointsToSVGPath: function(points) {
      var path = [], i, width = this.width / 1000,
          p1 = new fabric.Point(points[0].x, points[0].y),
          p2 = new fabric.Point(points[1].x, points[1].y),
          len = points.length, multSignX = 1, multSignY = 1, manyPoints = len > 2;

      if (manyPoints) {
        multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;
        multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;
      }
      path.push('M ', p1.x - multSignX * width, ' ', p1.y - multSignY * width, ' ');
      for (i = 1; i < len; i++) {
        if (!p1.eq(p2)) {
          var midPoint = p1.midPointFrom(p2);
          // p1 is our bezier control point
          // midpoint is our endpoint
          // start point is p(i-1) value.
          path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');
        }
        p1 = points[i];
        if ((i + 1) < points.length) {
          p2 = points[i + 1];
        }
      }
      if (manyPoints) {
        multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;
        multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;
      }
      path.push('L ', p1.x + multSignX * width, ' ', p1.y + multSignY * width);
      return path;
    },

    /**
     * Creates fabric.Path object to add on canvas
     * @param {String} pathData Path data
     * @return {fabric.Path} Path to add on canvas
     */
    createPath: function(pathData) {
      var path = new fabric.Path(pathData, {
        fill: null,
        stroke: this.color,
        strokeWidth: this.width,
        strokeLineCap: this.strokeLineCap,
        strokeMiterLimit: this.strokeMiterLimit,
        strokeLineJoin: this.strokeLineJoin,
        strokeDashArray: this.strokeDashArray,
      });
      var position = new fabric.Point(path.left + path.width / 2, path.top + path.height / 2);
      position = path.translateToGivenOrigin(position, 'center', 'center', path.originX, path.originY);
      path.top = position.y;
      path.left = position.x;
      if (this.shadow) {
        this.shadow.affectStroke = true;
        path.setShadow(this.shadow);
      }

      return path;
    },

    /**
     * On mouseup after drawing the path on contextTop canvas
     * we use the points captured to create an new fabric path object
     * and add it to the fabric canvas.
     */
    _finalizeAndAddPath: function() {
      var ctx = this.canvas.contextTop;
      ctx.closePath();

      var pathData = this.convertPointsToSVGPath(this._points).join('');
      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {
        // do not create 0 width/height paths, as they are
        // rendered inconsistently across browsers
        // Firefox 4, for example, renders a dot,
        // whereas Chrome 10 renders nothing
        this.canvas.requestRenderAll();
        return;
      }

      var path = this.createPath(pathData);
      this.canvas.clearContext(this.canvas.contextTop);
      this.canvas.add(path);
      this.canvas.renderAll();
      path.setCoords();
      this._resetShadow();


      // fire event 'path' created
      this.canvas.fire('path:created', { path: path });
    }
  });
})();


/**
 * CircleBrush class
 * @class fabric.CircleBrush
 */
fabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {

  /**
   * Width of a brush
   * @type Number
   * @default
   */
  width: 10,

  /**
   * Constructor
   * @param {fabric.Canvas} canvas
   * @return {fabric.CircleBrush} Instance of a circle brush
   */
  initialize: function(canvas) {
    this.canvas = canvas;
    this.points = [];
  },

  /**
   * Invoked inside on mouse down and mouse move
   * @param {Object} pointer
   */
  drawDot: function(pointer) {
    var point = this.addPoint(pointer),
        ctx = this.canvas.contextTop;
    this._saveAndTransform(ctx);
    ctx.fillStyle = point.fill;
    ctx.beginPath();
    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);
    ctx.closePath();
    ctx.fill();

    ctx.restore();
  },

  /**
   * Invoked on mouse down
   */
  onMouseDown: function(pointer) {
    this.points.length = 0;
    this.canvas.clearContext(this.canvas.contextTop);
    this._setShadow();
    this.drawDot(pointer);
  },

  /**
   * Render the full state of the brush
   * @private
   */
  _render: function() {
    var ctx  = this.canvas.contextTop, i, len,
        points = this.points, point;
    this._saveAndTransform(ctx);
    for (i = 0, len = points.length; i < len; i++) {
      point = points[i];
      ctx.fillStyle = point.fill;
      ctx.beginPath();
      ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);
      ctx.closePath();
      ctx.fill();
    }
    ctx.restore();
  },

  /**
   * Invoked on mouse move
   * @param {Object} pointer
   */
  onMouseMove: function(pointer) {
    this.drawDot(pointer);
  },

  /**
   * Invoked on mouse up
   */
  onMouseUp: function() {
    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove, i, len;
    this.canvas.renderOnAddRemove = false;

    var circles = [];

    for (i = 0, len = this.points.length; i < len; i++) {
      var point = this.points[i],
          circle = new fabric.Circle({
            radius: point.radius,
            left: point.x,
            top: point.y,
            originX: 'center',
            originY: 'center',
            fill: point.fill
          });

      this.shadow && circle.setShadow(this.shadow);

      circles.push(circle);
    }
    var group = new fabric.Group(circles);
    group.canvas = this.canvas;

    this.canvas.add(group);
    this.canvas.fire('path:created', { path: group });

    this.canvas.clearContext(this.canvas.contextTop);
    this._resetShadow();
    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;
    this.canvas.requestRenderAll();
  },

  /**
   * @param {Object} pointer
   * @return {fabric.Point} Just added pointer point
   */
  addPoint: function(pointer) {
    var pointerPoint = new fabric.Point(pointer.x, pointer.y),

        circleRadius = fabric.util.getRandomInt(
          Math.max(0, this.width - 20), this.width + 20) / 2,

        circleColor = new fabric.Color(this.color)
          .setAlpha(fabric.util.getRandomInt(0, 100) / 100)
          .toRgba();

    pointerPoint.radius = circleRadius;
    pointerPoint.fill = circleColor;

    this.points.push(pointerPoint);

    return pointerPoint;
  }
});


/**
 * SprayBrush class
 * @class fabric.SprayBrush
 */
fabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {

  /**
   * Width of a spray
   * @type Number
   * @default
   */
  width:              10,

  /**
   * Density of a spray (number of dots per chunk)
   * @type Number
   * @default
   */
  density:            20,

  /**
   * Width of spray dots
   * @type Number
   * @default
   */
  dotWidth:           1,

  /**
   * Width variance of spray dots
   * @type Number
   * @default
   */
  dotWidthVariance:   1,

  /**
   * Whether opacity of a dot should be random
   * @type Boolean
   * @default
   */
  randomOpacity:        false,

  /**
   * Whether overlapping dots (rectangles) should be removed (for performance reasons)
   * @type Boolean
   * @default
   */
  optimizeOverlapping:  true,

  /**
   * Constructor
   * @param {fabric.Canvas} canvas
   * @return {fabric.SprayBrush} Instance of a spray brush
   */
  initialize: function(canvas) {
    this.canvas = canvas;
    this.sprayChunks = [];
  },

  /**
   * Invoked on mouse down
   * @param {Object} pointer
   */
  onMouseDown: function(pointer) {
    this.sprayChunks.length = 0;
    this.canvas.clearContext(this.canvas.contextTop);
    this._setShadow();

    this.addSprayChunk(pointer);
    this.render(this.sprayChunkPoints);
  },

  /**
   * Invoked on mouse move
   * @param {Object} pointer
   */
  onMouseMove: function(pointer) {
    this.addSprayChunk(pointer);
    this.render(this.sprayChunkPoints);
  },

  /**
   * Invoked on mouse up
   */
  onMouseUp: function() {
    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;
    this.canvas.renderOnAddRemove = false;

    var rects = [];

    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {
      var sprayChunk = this.sprayChunks[i];

      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {

        var rect = new fabric.Rect({
          width: sprayChunk[j].width,
          height: sprayChunk[j].width,
          left: sprayChunk[j].x + 1,
          top: sprayChunk[j].y + 1,
          originX: 'center',
          originY: 'center',
          fill: this.color
        });
        rects.push(rect);
      }
    }

    if (this.optimizeOverlapping) {
      rects = this._getOptimizedRects(rects);
    }

    var group = new fabric.Group(rects);
    this.shadow && group.setShadow(this.shadow);
    this.canvas.add(group);
    this.canvas.fire('path:created', { path: group });

    this.canvas.clearContext(this.canvas.contextTop);
    this._resetShadow();
    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;
    this.canvas.requestRenderAll();
  },

  /**
   * @private
   * @param {Array} rects
   */
  _getOptimizedRects: function(rects) {

    // avoid creating duplicate rects at the same coordinates
    var uniqueRects = { }, key, i, len;

    for (i = 0, len = rects.length; i < len; i++) {
      key = rects[i].left + '' + rects[i].top;
      if (!uniqueRects[key]) {
        uniqueRects[key] = rects[i];
      }
    }
    var uniqueRectsArray = [];
    for (key in uniqueRects) {
      uniqueRectsArray.push(uniqueRects[key]);
    }

    return uniqueRectsArray;
  },

  /**
   * Render new chunk of spray brush
   */
  render: function(sprayChunk) {
    var ctx = this.canvas.contextTop, i, len;
    ctx.fillStyle = this.color;

    this._saveAndTransform(ctx);

    for (i = 0, len = sprayChunk.length; i < len; i++) {
      var point = sprayChunk[i];
      if (typeof point.opacity !== 'undefined') {
        ctx.globalAlpha = point.opacity;
      }
      ctx.fillRect(point.x, point.y, point.width, point.width);
    }
    ctx.restore();
  },

  /**
   * Render all spray chunks
   */
  _render: function() {
    var ctx = this.canvas.contextTop, i, ilen;
    ctx.fillStyle = this.color;

    this._saveAndTransform(ctx);

    for (i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {
      this.render(this.sprayChunks[i]);
    }
    ctx.restore();
  },

  /**
   * @param {Object} pointer
   */
  addSprayChunk: function(pointer) {
    this.sprayChunkPoints = [];

    var x, y, width, radius = this.width / 2, i;

    for (i = 0; i < this.density; i++) {

      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);
      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);

      if (this.dotWidthVariance) {
        width = fabric.util.getRandomInt(
          // bottom clamp width to 1
          Math.max(1, this.dotWidth - this.dotWidthVariance),
          this.dotWidth + this.dotWidthVariance);
      }
      else {
        width = this.dotWidth;
      }

      var point = new fabric.Point(x, y);
      point.width = width;

      if (this.randomOpacity) {
        point.opacity = fabric.util.getRandomInt(0, 100) / 100;
      }

      this.sprayChunkPoints.push(point);
    }

    this.sprayChunks.push(this.sprayChunkPoints);
  }
});


/**
 * PatternBrush class
 * @class fabric.PatternBrush
 * @extends fabric.BaseBrush
 */
fabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {

  getPatternSrc: function() {

    var dotWidth = 20,
        dotDistance = 5,
        patternCanvas = fabric.util.createCanvasElement(),
        patternCtx = patternCanvas.getContext('2d');

    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;

    patternCtx.fillStyle = this.color;
    patternCtx.beginPath();
    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);
    patternCtx.closePath();
    patternCtx.fill();

    return patternCanvas;
  },

  getPatternSrcFunction: function() {
    return String(this.getPatternSrc).replace('this.color', '"' + this.color + '"');
  },

  /**
   * Creates "pattern" instance property
   */
  getPattern: function() {
    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');
  },

  /**
   * Sets brush styles
   */
  _setBrushStyles: function() {
    this.callSuper('_setBrushStyles');
    this.canvas.contextTop.strokeStyle = this.getPattern();
  },

  /**
   * Creates path
   */
  createPath: function(pathData) {
    var path = this.callSuper('createPath', pathData),
        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);

    path.stroke = new fabric.Pattern({
      source: this.source || this.getPatternSrcFunction(),
      offsetX: -topLeft.x,
      offsetY: -topLeft.y
    });
    return path;
  }
});


(function() {

  var getPointer = fabric.util.getPointer,
      degreesToRadians = fabric.util.degreesToRadians,
      radiansToDegrees = fabric.util.radiansToDegrees,
      atan2 = Math.atan2,
      abs = Math.abs,
      supportLineDash = fabric.StaticCanvas.supports('setLineDash'),

      STROKE_OFFSET = 0.5;

  /**
   * Canvas class
   * @class fabric.Canvas
   * @extends fabric.StaticCanvas
   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}
   * @see {@link fabric.Canvas#initialize} for constructor definition
   *
   * @fires object:modified
   * @fires object:rotated
   * @fires object:scaled
   * @fires object:moved
   * @fires object:skewed
   * @fires object:rotating
   * @fires object:scaling
   * @fires object:moving
   * @fires object:skewing
   * @fires object:selected this event is deprecated. use selection:created
   *
   * @fires before:transform
   * @fires before:selection:cleared
   * @fires selection:cleared
   * @fires selection:updated
   * @fires selection:created
   *
   * @fires path:created
   * @fires mouse:down
   * @fires mouse:move
   * @fires mouse:up
   * @fires mouse:down:before
   * @fires mouse:move:before
   * @fires mouse:up:before
   * @fires mouse:over
   * @fires mouse:out
   * @fires mouse:dblclick
   *
   * @fires dragover
   * @fires dragenter
   * @fires dragleave
   * @fires drop
   *
   */
  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {

    /**
     * Constructor
     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on
     * @param {Object} [options] Options object
     * @return {Object} thisArg
     */
    initialize: function(el, options) {
      options || (options = { });
      this.renderAndResetBound = this.renderAndReset.bind(this);
      this.requestRenderAllBound = this.requestRenderAll.bind(this);
      this._initStatic(el, options);
      this._initInteractive();
      this._createCacheCanvas();
    },

    /**
     * When true, objects can be transformed by one side (unproportionally)
     * @type Boolean
     * @default
     */
    uniScaleTransform:      false,

    /**
     * Indicates which key enable unproportional scaling
     * values: 'altKey', 'shiftKey', 'ctrlKey'.
     * If `null` or 'none' or any other string that is not a modifier key
     * feature is disabled feature disabled.
     * @since 1.6.2
     * @type String
     * @default
     */
    uniScaleKey:           'shiftKey',

    /**
     * When true, objects use center point as the origin of scale transformation.
     * <b>Backwards incompatibility note:</b> This property replaces "centerTransform" (Boolean).
     * @since 1.3.4
     * @type Boolean
     * @default
     */
    centeredScaling:        false,

    /**
     * When true, objects use center point as the origin of rotate transformation.
     * <b>Backwards incompatibility note:</b> This property replaces "centerTransform" (Boolean).
     * @since 1.3.4
     * @type Boolean
     * @default
     */
    centeredRotation:       false,

    /**
     * Indicates which key enable centered Transform
     * values: 'altKey', 'shiftKey', 'ctrlKey'.
     * If `null` or 'none' or any other string that is not a modifier key
     * feature is disabled feature disabled.
     * @since 1.6.2
     * @type String
     * @default
     */
    centeredKey:           'altKey',

    /**
     * Indicates which key enable alternate action on corner
     * values: 'altKey', 'shiftKey', 'ctrlKey'.
     * If `null` or 'none' or any other string that is not a modifier key
     * feature is disabled feature disabled.
     * @since 1.6.2
     * @type String
     * @default
     */
    altActionKey:           'shiftKey',

    /**
     * Indicates that canvas is interactive. This property should not be changed.
     * @type Boolean
     * @default
     */
    interactive:            true,

    /**
     * Indicates whether group selection should be enabled
     * @type Boolean
     * @default
     */
    selection:              true,

    /**
     * Indicates which key or keys enable multiple click selection
     * Pass value as a string or array of strings
     * values: 'altKey', 'shiftKey', 'ctrlKey'.
     * If `null` or empty or containing any other string that is not a modifier key
     * feature is disabled.
     * @since 1.6.2
     * @type String|Array
     * @default
     */
    selectionKey:           'shiftKey',

    /**
     * Indicates which key enable alternative selection
     * in case of target overlapping with active object
     * values: 'altKey', 'shiftKey', 'ctrlKey'.
     * For a series of reason that come from the general expectations on how
     * things should work, this feature works only for preserveObjectStacking true.
     * If `null` or 'none' or any other string that is not a modifier key
     * feature is disabled.
     * @since 1.6.5
     * @type null|String
     * @default
     */
    altSelectionKey:           null,

    /**
     * Color of selection
     * @type String
     * @default
     */
    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue

    /**
     * Default dash array pattern
     * If not empty the selection border is dashed
     * @type Array
     */
    selectionDashArray:     [],

    /**
     * Color of the border of selection (usually slightly darker than color of selection itself)
     * @type String
     * @default
     */
    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',

    /**
     * Width of a line used in object/group selection
     * @type Number
     * @default
     */
    selectionLineWidth:     1,

    /**
     * Select only shapes that are fully contained in the dragged selection rectangle.
     * @type Boolean
     * @default
     */
    selectionFullyContained: false,

    /**
     * Default cursor value used when hovering over an object on canvas
     * @type String
     * @default
     */
    hoverCursor:            'move',

    /**
     * Default cursor value used when moving an object on canvas
     * @type String
     * @default
     */
    moveCursor:             'move',

    /**
     * Default cursor value used for the entire canvas
     * @type String
     * @default
     */
    defaultCursor:          'default',

    /**
     * Cursor value used during free drawing
     * @type String
     * @default
     */
    freeDrawingCursor:      'crosshair',

    /**
     * Cursor value used for rotation point
     * @type String
     * @default
     */
    rotationCursor:         'crosshair',

    /**
     * Cursor value used for disabled elements ( corners with disabled action )
     * @type String
     * @since 2.0.0
     * @default
     */
    notAllowedCursor:         'not-allowed',

    /**
     * Default element class that's given to wrapper (div) element of canvas
     * @type String
     * @default
     */
    containerClass:         'canvas-container',

    /**
     * When true, object detection happens on per-pixel basis rather than on per-bounding-box
     * @type Boolean
     * @default
     */
    perPixelTargetFind:     false,

    /**
     * Number of pixels around target pixel to tolerate (consider active) during object detection
     * @type Number
     * @default
     */
    targetFindTolerance:    0,

    /**
     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.
     * @type Boolean
     * @default
     */
    skipTargetFind:         false,

    /**
     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.
     * After mousedown, mousemove creates a shape,
     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.
     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}
     * @type Boolean
     * @default
     */
    isDrawingMode:          false,

    /**
     * Indicates whether objects should remain in current stack position when selected.
     * When false objects are brought to top and rendered as part of the selection group
     * @type Boolean
     * @default
     */
    preserveObjectStacking: false,

    /**
     * Indicates the angle that an object will lock to while rotating.
     * @type Number
     * @since 1.6.7
     * @default
     */
    snapAngle: 0,

    /**
     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.
     * When `null`, the snapThreshold will default to the snapAngle.
     * @type null|Number
     * @since 1.6.7
     * @default
     */
    snapThreshold: null,

    /**
     * Indicates if the right click on canvas can output the context menu or not
     * @type Boolean
     * @since 1.6.5
     * @default
     */
    stopContextMenu: false,

    /**
     * Indicates if the canvas can fire right click events
     * @type Boolean
     * @since 1.6.5
     * @default
     */
    fireRightClick: false,

    /**
     * Indicates if the canvas can fire middle click events
     * @type Boolean
     * @since 1.7.8
     * @default
     */
    fireMiddleClick: false,

    /**
     * @private
     */
    _initInteractive: function() {
      this._currentTransform = null;
      this._groupSelector = null;
      this._initWrapperElement();
      this._createUpperCanvas();
      this._initEventListeners();

      this._initRetinaScaling();

      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);

      this.calcOffset();
    },

    /**
     * Divides objects in two groups, one to render immediately
     * and one to render as activeGroup.
     * @return {Array} objects to render immediately and pushes the other in the activeGroup.
     */
    _chooseObjectsToRender: function() {
      var activeObjects = this.getActiveObjects(),
          object, objsToRender, activeGroupObjects;

      if (activeObjects.length > 0 && !this.preserveObjectStacking) {
        objsToRender = [];
        activeGroupObjects = [];
        for (var i = 0, length = this._objects.length; i < length; i++) {
          object = this._objects[i];
          if (activeObjects.indexOf(object) === -1 ) {
            objsToRender.push(object);
          }
          else {
            activeGroupObjects.push(object);
          }
        }
        if (activeObjects.length > 1) {
          this._activeObject._objects = activeGroupObjects;
        }
        objsToRender.push.apply(objsToRender, activeGroupObjects);
      }
      else {
        objsToRender = this._objects;
      }
      return objsToRender;
    },

    /**
     * Renders both the top canvas and the secondary container canvas.
     * @return {fabric.Canvas} instance
     * @chainable
     */
    renderAll: function () {
      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {
        this.clearContext(this.contextTop);
        this.contextTopDirty = false;
      }
      if (this.hasLostContext) {
        this.renderTopLayer(this.contextTop);
      }
      var canvasToDrawOn = this.contextContainer;
      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());
      return this;
    },

    renderTopLayer: function(ctx) {
      ctx.save();
      if (this.isDrawingMode && this._isCurrentlyDrawing) {
        this.freeDrawingBrush && this.freeDrawingBrush._render();
        this.contextTopDirty = true;
      }
      // we render the top context - last object
      if (this.selection && this._groupSelector) {
        this._drawSelection(ctx);
        this.contextTopDirty = true;
      }
      ctx.restore();
    },

    /**
     * Method to render only the top canvas.
     * Also used to render the group selection box.
     * @return {fabric.Canvas} thisArg
     * @chainable
     */
    renderTop: function () {
      var ctx = this.contextTop;
      this.clearContext(ctx);
      this.renderTopLayer(ctx);
      this.fire('after:render');
      return this;
    },

    /**
     * Resets the current transform to its original values and chooses the type of resizing based on the event
     * @private
     */
    _resetCurrentTransform: function() {
      var t = this._currentTransform;

      t.target.set({
        scaleX: t.original.scaleX,
        scaleY: t.original.scaleY,
        skewX: t.original.skewX,
        skewY: t.original.skewY,
        left: t.original.left,
        top: t.original.top
      });

      if (this._shouldCenterTransform(t.target)) {
        if (t.originX !== 'center') {
          if (t.originX === 'right') {
            t.mouseXSign = -1;
          }
          else {
            t.mouseXSign = 1;
          }
        }
        if (t.originY !== 'center') {
          if (t.originY === 'bottom') {
            t.mouseYSign = -1;
          }
          else {
            t.mouseYSign = 1;
          }
        }

        t.originX = 'center';
        t.originY = 'center';
      }
      else {
        t.originX = t.original.originX;
        t.originY = t.original.originY;
      }
    },

    /**
     * Checks if point is contained within an area of given object
     * @param {Event} e Event object
     * @param {fabric.Object} target Object to test against
     * @param {Object} [point] x,y object of point coordinates we want to check.
     * @return {Boolean} true if point is contained within an area of given object
     */
    containsPoint: function (e, target, point) {
      var ignoreZoom = true,
          pointer = point || this.getPointer(e, ignoreZoom),
          xy;

      if (target.group && target.group === this._activeObject && target.group.type === 'activeSelection') {
        xy = this._normalizePointer(target.group, pointer);
      }
      else {
        xy = { x: pointer.x, y: pointer.y };
      }
      // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html
      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html
      return (target.containsPoint(xy) || target._findTargetCorner(pointer));
    },

    /**
     * @private
     */
    _normalizePointer: function (object, pointer) {
      var m = object.calcTransformMatrix(),
          invertedM = fabric.util.invertTransform(m),
          vptPointer = this.restorePointerVpt(pointer);
      return fabric.util.transformPoint(vptPointer, invertedM);
    },

    /**
     * Returns true if object is transparent at a certain location
     * @param {fabric.Object} target Object to check
     * @param {Number} x Left coordinate
     * @param {Number} y Top coordinate
     * @return {Boolean}
     */
    isTargetTransparent: function (target, x, y) {
      // in case the target is the activeObject, we cannot execute this optimization
      // because we need to draw controls too.
      if (target.shouldCache() && target._cacheCanvas && target !== this._activeObject) {
        var normalizedPointer = this._normalizePointer(target, {x: x, y: y}),
            targetRelativeX = Math.max(target.cacheTranslationX + (normalizedPointer.x * target.zoomX), 0),
            targetRelativeY = Math.max(target.cacheTranslationY + (normalizedPointer.y * target.zoomY), 0);

        var isTransparent = fabric.util.isTransparent(
          target._cacheContext, Math.round(targetRelativeX), Math.round(targetRelativeY), this.targetFindTolerance);

        return isTransparent;
      }

      var ctx = this.contextCache,
          originalColor = target.selectionBackgroundColor, v = this.viewportTransform;

      target.selectionBackgroundColor = '';

      this.clearContext(ctx);

      ctx.save();
      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);
      target.render(ctx);
      ctx.restore();

      target === this._activeObject && target._renderControls(ctx, {
        hasBorders: false,
        transparentCorners: false
      }, {
        hasBorders: false,
      });

      target.selectionBackgroundColor = originalColor;

      var isTransparent = fabric.util.isTransparent(
        ctx, x, y, this.targetFindTolerance);

      return isTransparent;
    },

    /**
     * takes an event and determins if selection key has been pressed
     * @private
     * @param {Event} e Event object
     */
    _isSelectionKeyPressed: function(e) {
      var selectionKeyPressed = false;

      if (Object.prototype.toString.call(this.selectionKey) === '[object Array]') {
        selectionKeyPressed = !!this.selectionKey.find(function(key) { return e[key] === true; });
      }
      else {
        selectionKeyPressed = e[this.selectionKey];
      }

      return selectionKeyPressed;
    },

    /**
     * @private
     * @param {Event} e Event object
     * @param {fabric.Object} target
     */
    _shouldClearSelection: function (e, target) {
      var activeObjects = this.getActiveObjects(),
          activeObject = this._activeObject;

      return (
        !target
        ||
        (target &&
          activeObject &&
          activeObjects.length > 1 &&
          activeObjects.indexOf(target) === -1 &&
          activeObject !== target &&
          !this._isSelectionKeyPressed(e))
        ||
        (target && !target.evented)
        ||
        (target &&
          !target.selectable &&
          activeObject &&
          activeObject !== target)
      );
    },

    /**
     * centeredScaling from object can't override centeredScaling from canvas.
     * this should be fixed, since object setting should take precedence over canvas.
     * @private
     * @param {fabric.Object} target
     */
    _shouldCenterTransform: function (target) {
      if (!target) {
        return;
      }

      var t = this._currentTransform,
          centerTransform;

      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {
        centerTransform = this.centeredScaling || target.centeredScaling;
      }
      else if (t.action === 'rotate') {
        centerTransform = this.centeredRotation || target.centeredRotation;
      }

      return centerTransform ? !t.altKey : t.altKey;
    },

    /**
     * @private
     */
    _getOriginFromCorner: function(target, corner) {
      var origin = {
        x: target.originX,
        y: target.originY
      };

      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {
        origin.x = 'right';
      }
      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {
        origin.x = 'left';
      }

      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {
        origin.y = 'bottom';
      }
      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {
        origin.y = 'top';
      }

      return origin;
    },

    /**
     * @private
     * @param {Boolean} alreadySelected true if target is already selected
     * @param {String} corner a string representing the corner ml, mr, tl ...
     * @param {Event} e Event object
     * @param {fabric.Object} [target] inserted back to help overriding. Unused
     */
    _getActionFromCorner: function(alreadySelected, corner, e /* target */) {
      if (!corner || !alreadySelected) {
        return 'drag';
      }

      switch (corner) {
        case 'mtr':
          return 'rotate';
        case 'ml':
        case 'mr':
          return e[this.altActionKey] ? 'skewY' : 'scaleX';
        case 'mt':
        case 'mb':
          return e[this.altActionKey] ? 'skewX' : 'scaleY';
        default:
          return 'scale';
      }
    },

    /**
     * @private
     * @param {Event} e Event object
     * @param {fabric.Object} target
     */
    _setupCurrentTransform: function (e, target, alreadySelected) {
      if (!target) {
        return;
      }

      var pointer = this.getPointer(e),
          corner = target._findTargetCorner(this.getPointer(e, true)),
          action = this._getActionFromCorner(alreadySelected, corner, e, target),
          origin = this._getOriginFromCorner(target, corner);

      this._currentTransform = {
        target: target,
        action: action,
        corner: corner,
        scaleX: target.scaleX,
        scaleY: target.scaleY,
        skewX: target.skewX,
        skewY: target.skewY,
        // used by transation
        offsetX: pointer.x - target.left,
        offsetY: pointer.y - target.top,
        originX: origin.x,
        originY: origin.y,
        ex: pointer.x,
        ey: pointer.y,
        lastX: pointer.x,
        lastY: pointer.y,
        // unsure they are usefull anymore.
        // left: target.left,
        // top: target.top,
        theta: degreesToRadians(target.angle),
        // end of unsure
        width: target.width * target.scaleX,
        mouseXSign: 1,
        mouseYSign: 1,
        shiftKey: e.shiftKey,
        altKey: e[this.centeredKey],
        original: fabric.util.saveObjectTransform(target),
      };

      this._currentTransform.original.originX = origin.x;
      this._currentTransform.original.originY = origin.y;

      this._resetCurrentTransform();
      this._beforeTransform(e);
    },

    /**
     * Translates object by "setting" its left/top
     * @private
     * @param {Number} x pointer's x coordinate
     * @param {Number} y pointer's y coordinate
     * @return {Boolean} true if the translation occurred
     */
    _translateObject: function (x, y) {
      var transform = this._currentTransform,
          target = transform.target,
          newLeft = x - transform.offsetX,
          newTop = y - transform.offsetY,
          moveX = !target.get('lockMovementX') && target.left !== newLeft,
          moveY = !target.get('lockMovementY') && target.top !== newTop;

      moveX && target.set('left', newLeft);
      moveY && target.set('top', newTop);
      return moveX || moveY;
    },

    /**
     * Check if we are increasing a positive skew or lower it,
     * checking mouse direction and pressed corner.
     * @private
     */
    _changeSkewTransformOrigin: function(mouseMove, t, by) {
      var property = 'originX', origins = { 0: 'center' },
          skew = t.target.skewX, originA = 'left', originB = 'right',
          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,
          flipSign = 1;

      mouseMove = mouseMove > 0 ? 1 : -1;
      if (by === 'y') {
        skew = t.target.skewY;
        originA = 'top';
        originB = 'bottom';
        property = 'originY';
      }
      origins[-1] = originA;
      origins[1] = originB;

      t.target.flipX && (flipSign *= -1);
      t.target.flipY && (flipSign *= -1);

      if (skew === 0) {
        t.skewSign = -corner * mouseMove * flipSign;
        t[property] = origins[-mouseMove];
      }
      else {
        skew = skew > 0 ? 1 : -1;
        t.skewSign = skew;
        t[property] = origins[skew * corner * flipSign];
      }
    },

    /**
     * Skew object by mouse events
     * @private
     * @param {Number} x pointer's x coordinate
     * @param {Number} y pointer's y coordinate
     * @param {String} by Either 'x' or 'y'
     * @return {Boolean} true if the skewing occurred
     */
    _skewObject: function (x, y, by) {
      var t = this._currentTransform,
          target = t.target, skewed = false,
          lockSkewingX = target.get('lockSkewingX'),
          lockSkewingY = target.get('lockSkewingY');

      if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {
        return false;
      }

      // Get the constraint point
      var center = target.getCenterPoint(),
          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],
          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],
          actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();

      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);
      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];
      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);
      // Actually skew the object
      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);
      t.lastX = x;
      t.lastY = y;
      // Make sure the constraints apply
      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);
      return skewed;
    },

    /**
     * Set object skew
     * @private
     * @return {Boolean} true if the skewing occurred
     */
    _setObjectSkew: function(localMouse, transform, by, _dim) {
      var target = transform.target, newValue, skewed = false,
          skewSign = transform.skewSign, newDim, dimNoSkew,
          otherBy, _otherBy, _by, newDimMouse, skewX, skewY;

      if (by === 'x') {
        otherBy = 'y';
        _otherBy = 'Y';
        _by = 'X';
        skewX = 0;
        skewY = target.skewY;
      }
      else {
        otherBy = 'x';
        _otherBy = 'X';
        _by = 'Y';
        skewX = target.skewX;
        skewY = 0;
      }

      dimNoSkew = target._getTransformedDimensions(skewX, skewY);
      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];
      if (newDimMouse <= 2) {
        newValue = 0;
      }
      else {
        newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /
                                        (dimNoSkew[otherBy] / target['scale' + _otherBy]));
        newValue = fabric.util.radiansToDegrees(newValue);
      }
      skewed = target['skew' + _by] !== newValue;
      target.set('skew' + _by, newValue);
      if (target['skew' + _otherBy] !== 0) {
        newDim = target._getTransformedDimensions();
        newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];
        target.set('scale' + _otherBy, newValue);
      }
      return skewed;
    },

    /**
     * Scales object by invoking its scaleX/scaleY methods
     * @private
     * @param {Number} x pointer's x coordinate
     * @param {Number} y pointer's y coordinate
     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.
     *                    When not provided, an object is scaled by both dimensions equally
     * @return {Boolean} true if the scaling occurred
     */
    _scaleObject: function (x, y, by) {
      var t = this._currentTransform,
          target = t.target,
          lockScalingX = target.lockScalingX,
          lockScalingY = target.lockScalingY,
          lockScalingFlip = target.lockScalingFlip;

      if (lockScalingX && lockScalingY) {
        return false;
      }

      // Get the constraint point
      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),
          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),
          dim = target._getTransformedDimensions(), scaled = false;

      this._setLocalMouse(localMouse, t);

      // Actually scale the object
      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);

      // Make sure the constraints apply
      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);
      return scaled;
    },

    /**
     * @private
     * @return {Boolean} true if the scaling occurred
     */
    _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {
      var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,
          scaleX = localMouse.x * target.scaleX / _dim.x,
          scaleY = localMouse.y * target.scaleY / _dim.y,
          changeX = target.scaleX !== scaleX,
          changeY = target.scaleY !== scaleY;

      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {
        forbidScalingX = true;
        localMouse.x = 0;
      }

      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {
        forbidScalingY = true;
        localMouse.y = 0;
      }

      if (by === 'equally' && !lockScalingX && !lockScalingY) {
        scaled = this._scaleObjectEqually(localMouse, target, transform, _dim);
      }
      else if (!by) {
        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));
        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));
      }
      else if (by === 'x' && !target.get('lockUniScaling')) {
        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = changeX));
      }
      else if (by === 'y' && !target.get('lockUniScaling')) {
        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = changeY));
      }
      transform.newScaleX = scaleX;
      transform.newScaleY = scaleY;
      forbidScalingX || forbidScalingY || this._flipObject(transform, by);
      return scaled;
    },

    /**
     * @private
     * @return {Boolean} true if the scaling occurred
     */
    _scaleObjectEqually: function(localMouse, target, transform, _dim) {

      var dist = localMouse.y + localMouse.x,
          lastDist = _dim.y * transform.original.scaleY / target.scaleY +
                     _dim.x * transform.original.scaleX / target.scaleX,
          scaled, signX = localMouse.x < 0 ? -1 : 1,
          signY = localMouse.y < 0 ? -1 : 1, newScaleX, newScaleY;

      // We use transform.scaleX/Y instead of target.scaleX/Y
      // because the object may have a min scale and we'll loose the proportions
      newScaleX = signX * Math.abs(transform.original.scaleX * dist / lastDist);
      newScaleY = signY * Math.abs(transform.original.scaleY * dist / lastDist);
      scaled = newScaleX !== target.scaleX || newScaleY !== target.scaleY;
      target.set('scaleX', newScaleX);
      target.set('scaleY', newScaleY);
      return scaled;
    },

    /**
     * @private
     */
    _flipObject: function(transform, by) {
      if (transform.newScaleX < 0 && by !== 'y') {
        if (transform.originX === 'left') {
          transform.originX = 'right';
        }
        else if (transform.originX === 'right') {
          transform.originX = 'left';
        }
      }

      if (transform.newScaleY < 0 && by !== 'x') {
        if (transform.originY === 'top') {
          transform.originY = 'bottom';
        }
        else if (transform.originY === 'bottom') {
          transform.originY = 'top';
        }
      }
    },

    /**
     * @private
     */
    _setLocalMouse: function(localMouse, t) {
      var target = t.target, zoom = this.getZoom(),
          padding = target.padding / zoom;

      if (t.originX === 'right') {
        localMouse.x *= -1;
      }
      else if (t.originX === 'center') {
        localMouse.x *= t.mouseXSign * 2;
        if (localMouse.x < 0) {
          t.mouseXSign = -t.mouseXSign;
        }
      }

      if (t.originY === 'bottom') {
        localMouse.y *= -1;
      }
      else if (t.originY === 'center') {
        localMouse.y *= t.mouseYSign * 2;
        if (localMouse.y < 0) {
          t.mouseYSign = -t.mouseYSign;
        }
      }

      // adjust the mouse coordinates when dealing with padding
      if (abs(localMouse.x) > padding) {
        if (localMouse.x < 0) {
          localMouse.x += padding;
        }
        else {
          localMouse.x -= padding;
        }
      }
      else { // mouse is within the padding, set to 0
        localMouse.x = 0;
      }

      if (abs(localMouse.y) > padding) {
        if (localMouse.y < 0) {
          localMouse.y += padding;
        }
        else {
          localMouse.y -= padding;
        }
      }
      else {
        localMouse.y = 0;
      }
    },

    /**
     * Rotates object by invoking its rotate method
     * @private
     * @param {Number} x pointer's x coordinate
     * @param {Number} y pointer's y coordinate
     * @return {Boolean} true if the rotation occurred
     */
    _rotateObject: function (x, y) {

      var t = this._currentTransform,
          target = t.target, constraintPosition,
          constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY);

      if (target.lockRotation) {
        return false;
      }

      var lastAngle = atan2(t.ey - constraintPosition.y, t.ex - constraintPosition.x),
          curAngle = atan2(y - constraintPosition.y, x - constraintPosition.x),
          angle = radiansToDegrees(curAngle - lastAngle + t.theta),
          hasRotated = true;

      if (target.snapAngle > 0) {
        var snapAngle  = target.snapAngle,
            snapThreshold  = target.snapThreshold || snapAngle,
            rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,
            leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;

        if (Math.abs(angle - leftAngleLocked) < snapThreshold) {
          angle = leftAngleLocked;
        }
        else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {
          angle = rightAngleLocked;
        }
      }

      // normalize angle to positive value
      if (angle < 0) {
        angle = 360 + angle;
      }
      angle %= 360;

      if (target.angle === angle) {
        hasRotated = false;
      }
      else {
        // rotation only happen here
        target.angle = angle;
        // Make sure the constraints apply
        target.setPositionByOrigin(constraintPosition, t.originX, t.originY);
      }

      return hasRotated;
    },

    /**
     * Set the cursor type of the canvas element
     * @param {String} value Cursor type of the canvas element.
     * @see http://www.w3.org/TR/css3-ui/#cursor
     */
    setCursor: function (value) {
      this.upperCanvasEl.style.cursor = value;
    },

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx to draw the selection on
     */
    _drawSelection: function (ctx) {
      var groupSelector = this._groupSelector,
          left = groupSelector.left,
          top = groupSelector.top,
          aleft = abs(left),
          atop = abs(top);

      if (this.selectionColor) {
        ctx.fillStyle = this.selectionColor;

        ctx.fillRect(
          groupSelector.ex - ((left > 0) ? 0 : -left),
          groupSelector.ey - ((top > 0) ? 0 : -top),
          aleft,
          atop
        );
      }

      if (!this.selectionLineWidth || !this.selectionBorderColor) {
        return;
      }
      ctx.lineWidth = this.selectionLineWidth;
      ctx.strokeStyle = this.selectionBorderColor;

      // selection border
      if (this.selectionDashArray.length > 1 && !supportLineDash) {

        var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),
            py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop);

        ctx.beginPath();

        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);
        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);
        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);
        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);

        ctx.closePath();
        ctx.stroke();
      }
      else {
        fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);
        ctx.strokeRect(
          groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),
          groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),
          aleft,
          atop
        );
      }
    },

    /**
     * Method that determines what object we are clicking on
     * the skipGroup parameter is for internal use, is needed for shift+click action
     * 11/09/2018 TODO: would be cool if findTarget could discern between being a full target
     * or the outside part of the corner.
     * @param {Event} e mouse event
     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through
     * @return {fabric.Object} the target found
     */
    findTarget: function (e, skipGroup) {
      if (this.skipTargetFind) {
        return;
      }

      var ignoreZoom = true,
          pointer = this.getPointer(e, ignoreZoom),
          activeObject = this._activeObject,
          aObjects = this.getActiveObjects(),
          activeTarget, activeTargetSubs;

      // first check current group (if one exists)
      // active group does not check sub targets like normal groups.
      // if active group just exits.
      this.targets = [];

      if (aObjects.length > 1 && !skipGroup && activeObject === this._searchPossibleTargets([activeObject], pointer)) {
        return activeObject;
      }
      // if we hit the corner of an activeObject, let's return that.
      if (aObjects.length === 1 && activeObject._findTargetCorner(pointer)) {
        return activeObject;
      }
      if (aObjects.length === 1 &&
        activeObject === this._searchPossibleTargets([activeObject], pointer)) {
        if (!this.preserveObjectStacking) {
          return activeObject;
        }
        else {
          activeTarget = activeObject;
          activeTargetSubs = this.targets;
          this.targets = [];
        }
      }
      var target = this._searchPossibleTargets(this._objects, pointer);
      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {
        target = activeTarget;
        this.targets = activeTargetSubs;
      }
      return target;
    },

    /**
     * Checks point is inside the object.
     * @param {Object} [pointer] x,y object of point coordinates we want to check.
     * @param {fabric.Object} obj Object to test against
     * @param {Object} [globalPointer] x,y object of point coordinates relative to canvas used to search per pixel target.
     * @return {Boolean} true if point is contained within an area of given object
     * @private
     */
    _checkTarget: function(pointer, obj, globalPointer) {
      if (obj &&
          obj.visible &&
          obj.evented &&
          this.containsPoint(null, obj, pointer)){
        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {
          var isTransparent = this.isTargetTransparent(obj, globalPointer.x, globalPointer.y);
          if (!isTransparent) {
            return true;
          }
        }
        else {
          return true;
        }
      }
    },

    /**
     * Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted
     * @param {Array} [objects] objects array to look into
     * @param {Object} [pointer] x,y object of point coordinates we want to check.
     * @return {fabric.Object} object that contains pointer
     * @private
     */
    _searchPossibleTargets: function(objects, pointer) {
      // Cache all targets where their bounding box contains point.
      var target, i = objects.length, subTarget;
      // Do not check for currently grouped objects, since we check the parent group itself.
      // until we call this function specifically to search inside the activeGroup
      while (i--) {
        var objToCheck = objects[i];
        var pointerToUse = objToCheck.group && objToCheck.group.type !== 'activeSelection' ?
          this._normalizePointer(objToCheck.group, pointer) : pointer;
        if (this._checkTarget(pointerToUse, objToCheck, pointer)) {
          target = objects[i];
          if (target.subTargetCheck && target instanceof fabric.Group) {
            subTarget = this._searchPossibleTargets(target._objects, pointer);
            subTarget && this.targets.push(subTarget);
          }
          break;
        }
      }
      return target;
    },

    /**
     * Returns pointer coordinates without the effect of the viewport
     * @param {Object} pointer with "x" and "y" number values
     * @return {Object} object with "x" and "y" number values
     */
    restorePointerVpt: function(pointer) {
      return fabric.util.transformPoint(
        pointer,
        fabric.util.invertTransform(this.viewportTransform)
      );
    },

    /**
     * Returns pointer coordinates relative to canvas.
     * Can return coordinates with or without viewportTransform.
     * ignoreZoom false gives back coordinates that represent
     * the point clicked on canvas element.
     * ignoreZoom true gives back coordinates after being processed
     * by the viewportTransform ( sort of coordinates of what is displayed
     * on the canvas where you are clicking.
     * ignoreZoom true = HTMLElement coordinates relative to top,left
     * ignoreZoom false, default = fabric space coordinates, the same used for shape position
     * To interact with your shapes top and left you want to use ignoreZoom true
     * most of the time, while ignoreZoom false will give you coordinates
     * compatible with the object.oCoords system.
     * of the time.
     * @param {Event} e
     * @param {Boolean} ignoreZoom
     * @return {Object} object with "x" and "y" number values
     */
    getPointer: function (e, ignoreZoom) {
      // return cached values if we are in the event processing chain
      if (this._absolutePointer && !ignoreZoom) {
        return this._absolutePointer;
      }
      if (this._pointer && ignoreZoom) {
        return this._pointer;
      }

      var pointer = getPointer(e),
          upperCanvasEl = this.upperCanvasEl,
          bounds = upperCanvasEl.getBoundingClientRect(),
          boundsWidth = bounds.width || 0,
          boundsHeight = bounds.height || 0,
          cssScale;

      if (!boundsWidth || !boundsHeight ) {
        if ('top' in bounds && 'bottom' in bounds) {
          boundsHeight = Math.abs( bounds.top - bounds.bottom );
        }
        if ('right' in bounds && 'left' in bounds) {
          boundsWidth = Math.abs( bounds.right - bounds.left );
        }
      }

      this.calcOffset();
      pointer.x = pointer.x - this._offset.left;
      pointer.y = pointer.y - this._offset.top;
      if (!ignoreZoom) {
        pointer = this.restorePointerVpt(pointer);
      }

      if (boundsWidth === 0 || boundsHeight === 0) {
        // If bounds are not available (i.e. not visible), do not apply scale.
        cssScale = { width: 1, height: 1 };
      }
      else {
        cssScale = {
          width: upperCanvasEl.width / boundsWidth,
          height: upperCanvasEl.height / boundsHeight
        };
      }

      return {
        x: pointer.x * cssScale.width,
        y: pointer.y * cssScale.height
      };
    },

    /**
     * @private
     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized
     */
    _createUpperCanvas: function () {
      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\s*lower-canvas\s*/, '');

      // there is no need to create a new upperCanvas element if we have already one.
      if (this.upperCanvasEl) {
        this.upperCanvasEl.className = '';
      }
      else {
        this.upperCanvasEl = this._createCanvasElement();
      }
      fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);

      this.wrapperEl.appendChild(this.upperCanvasEl);

      this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);
      this._applyCanvasStyle(this.upperCanvasEl);
      this.contextTop = this.upperCanvasEl.getContext('2d');
    },

    /**
     * @private
     */
    _createCacheCanvas: function () {
      this.cacheCanvasEl = this._createCanvasElement();
      this.cacheCanvasEl.setAttribute('width', this.width);
      this.cacheCanvasEl.setAttribute('height', this.height);
      this.contextCache = this.cacheCanvasEl.getContext('2d');
    },

    /**
     * @private
     */
    _initWrapperElement: function () {
      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {
        'class': this.containerClass
      });
      fabric.util.setStyle(this.wrapperEl, {
        width: this.width + 'px',
        height: this.height + 'px',
        position: 'relative'
      });
      fabric.util.makeElementUnselectable(this.wrapperEl);
    },

    /**
     * @private
     * @param {HTMLElement} element canvas element to apply styles on
     */
    _applyCanvasStyle: function (element) {
      var width = this.width || element.width,
          height = this.height || element.height;

      fabric.util.setStyle(element, {
        position: 'absolute',
        width: width + 'px',
        height: height + 'px',
        left: 0,
        top: 0,
        'touch-action': this.allowTouchScrolling ? 'manipulation' : 'none'
      });
      element.width = width;
      element.height = height;
      fabric.util.makeElementUnselectable(element);
    },

    /**
     * Copy the entire inline style from one element (fromEl) to another (toEl)
     * @private
     * @param {Element} fromEl Element style is copied from
     * @param {Element} toEl Element copied style is applied to
     */
    _copyCanvasStyle: function (fromEl, toEl) {
      toEl.style.cssText = fromEl.style.cssText;
    },

    /**
     * Returns context of canvas where object selection is drawn
     * @return {CanvasRenderingContext2D}
     */
    getSelectionContext: function() {
      return this.contextTop;
    },

    /**
     * Returns &lt;canvas> element on which object selection is drawn
     * @return {HTMLCanvasElement}
     */
    getSelectionElement: function () {
      return this.upperCanvasEl;
    },

    /**
     * Returns currently active object
     * @return {fabric.Object} active object
     */
    getActiveObject: function () {
      return this._activeObject;
    },

    /**
     * Returns an array with the current selected objects
     * @return {fabric.Object} active object
     */
    getActiveObjects: function () {
      var active = this._activeObject;
      if (active) {
        if (active.type === 'activeSelection' && active._objects) {
          return active._objects.slice(0);
        }
        else {
          return [active];
        }
      }
      return [];
    },

    /**
     * @private
     * @param {fabric.Object} obj Object that was removed
     */
    _onObjectRemoved: function(obj) {
      // removing active object should fire "selection:cleared" events
      if (obj === this._activeObject) {
        this.fire('before:selection:cleared', { target: obj });
        this._discardActiveObject();
        this.fire('selection:cleared', { target: obj });
        obj.fire('deselected');
      }
      if (this._hoveredTarget === obj) {
        this._hoveredTarget = null;
      }
      this.callSuper('_onObjectRemoved', obj);
    },

    /**
     * @private
     * Compares the old activeObject with the current one and fires correct events
     * @param {fabric.Object} obj old activeObject
     */
    _fireSelectionEvents: function(oldObjects, e) {
      var somethingChanged = false, objects = this.getActiveObjects(),
          added = [], removed = [], opt = { e: e };
      oldObjects.forEach(function(oldObject) {
        if (objects.indexOf(oldObject) === -1) {
          somethingChanged = true;
          oldObject.fire('deselected', opt);
          removed.push(oldObject);
        }
      });
      objects.forEach(function(object) {
        if (oldObjects.indexOf(object) === -1) {
          somethingChanged = true;
          object.fire('selected', opt);
          added.push(object);
        }
      });
      if (oldObjects.length > 0 && objects.length > 0) {
        opt.selected = added;
        opt.deselected = removed;
        // added for backward compatibility
        opt.updated = added[0] || removed[0];
        opt.target = this._activeObject;
        somethingChanged && this.fire('selection:updated', opt);
      }
      else if (objects.length > 0) {
        // deprecated event
        if (objects.length === 1) {
          opt.target = added[0];
          this.fire('object:selected', opt);
        }
        opt.selected = added;
        // added for backward compatibility
        opt.target = this._activeObject;
        this.fire('selection:created', opt);
      }
      else if (oldObjects.length > 0) {
        opt.deselected = removed;
        this.fire('selection:cleared', opt);
      }
    },

    /**
     * Sets given object as the only active object on canvas
     * @param {fabric.Object} object Object to set as an active one
     * @param {Event} [e] Event (passed along when firing "object:selected")
     * @return {fabric.Canvas} thisArg
     * @chainable
     */
    setActiveObject: function (object, e) {
      var currentActives = this.getActiveObjects();
      this._setActiveObject(object, e);
      this._fireSelectionEvents(currentActives, e);
      return this;
    },

    /**
     * @private
     * @param {Object} object to set as active
     * @param {Event} [e] Event (passed along when firing "object:selected")
     * @return {Boolean} true if the selection happened
     */
    _setActiveObject: function(object, e) {
      if (this._activeObject === object) {
        return false;
      }
      if (!this._discardActiveObject(e, object)) {
        return false;
      }
      if (object.onSelect({ e: e })) {
        return false;
      }
      this._activeObject = object;
      return true;
    },

    /**
     * @private
     */
    _discardActiveObject: function(e, object) {
      var obj = this._activeObject;
      if (obj) {
        // onDeselect return TRUE to cancel selection;
        if (obj.onDeselect({ e: e, object: object })) {
          return false;
        }
        this._activeObject = null;
      }
      return true;
    },

    /**
     * Discards currently active object and fire events. If the function is called by fabric
     * as a consequence of a mouse event, the event is passed as a parameter and
     * sent to the fire function for the custom events. When used as a method the
     * e param does not have any application.
     * @param {event} e
     * @return {fabric.Canvas} thisArg
     * @chainable
     */
    discardActiveObject: function (e) {
      var currentActives = this.getActiveObjects();
      if (currentActives.length) {
        this.fire('before:selection:cleared', { target: currentActives[0], e: e });
      }
      this._discardActiveObject(e);
      this._fireSelectionEvents(currentActives, e);
      return this;
    },

    /**
     * Clears a canvas element and removes all event listeners
     * @return {fabric.Canvas} thisArg
     * @chainable
     */
    dispose: function () {
      var wrapper = this.wrapperEl;
      this.removeListeners();
      wrapper.removeChild(this.upperCanvasEl);
      wrapper.removeChild(this.lowerCanvasEl);
      this.contextCache = null;
      this.contextTop = null;
      ['upperCanvasEl', 'cacheCanvasEl'].forEach((function(element) {
        fabric.util.cleanUpJsdomNode(this[element]);
        this[element] = undefined;
      }).bind(this));
      if (wrapper.parentNode) {
        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);
      }
      delete this.wrapperEl;
      fabric.StaticCanvas.prototype.dispose.call(this);
      return this;
    },

    /**
     * Clears all contexts (background, main, top) of an instance
     * @return {fabric.Canvas} thisArg
     * @chainable
     */
    clear: function () {
      // this.discardActiveGroup();
      this.discardActiveObject();
      this.clearContext(this.contextTop);
      return this.callSuper('clear');
    },

    /**
     * Draws objects' controls (borders/controls)
     * @param {CanvasRenderingContext2D} ctx Context to render controls on
     */
    drawControls: function(ctx) {
      var activeObject = this._activeObject;

      if (activeObject) {
        activeObject._renderControls(ctx);
      }
    },

    /**
     * @private
     */
    _toObject: function(instance, methodName, propertiesToInclude) {
      //If the object is part of the current selection group, it should
      //be transformed appropriately
      //i.e. it should be serialised as it would appear if the selection group
      //were to be destroyed.
      var originalProperties = this._realizeGroupTransformOnObject(instance),
          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);
      //Undo the damage we did by changing all of its properties
      this._unwindGroupTransformOnObject(instance, originalProperties);
      return object;
    },

    /**
     * Realises an object's group transformation on it
     * @private
     * @param {fabric.Object} [instance] the object to transform (gets mutated)
     * @returns the original values of instance which were changed
     */
    _realizeGroupTransformOnObject: function(instance) {
      if (instance.group && instance.group.type === 'activeSelection' && this._activeObject === instance.group) {
        var layoutProps = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top'];
        //Copy all the positionally relevant properties across now
        var originalValues = {};
        layoutProps.forEach(function(prop) {
          originalValues[prop] = instance[prop];
        });
        this._activeObject.realizeTransform(instance);
        return originalValues;
      }
      else {
        return null;
      }
    },

    /**
     * Restores the changed properties of instance
     * @private
     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)
     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject
     */
    _unwindGroupTransformOnObject: function(instance, originalValues) {
      if (originalValues) {
        instance.set(originalValues);
      }
    },

    /**
     * @private
     */
    _setSVGObject: function(markup, instance, reviver) {
      //If the object is in a selection group, simulate what would happen to that
      //object when the group is deselected
      var originalProperties = this._realizeGroupTransformOnObject(instance);
      this.callSuper('_setSVGObject', markup, instance, reviver);
      this._unwindGroupTransformOnObject(instance, originalProperties);
    },

    setViewportTransform: function (vpt) {
      if (this.renderOnAddRemove && this._activeObject && this._activeObject.isEditing) {
        this._activeObject.clearContextTop();
      }
      fabric.StaticCanvas.prototype.setViewportTransform.call(this, vpt);
    }
  });

  // copying static properties manually to work around Opera's bug,
  // where "prototype" property is enumerable and overrides existing prototype
  for (var prop in fabric.StaticCanvas) {
    if (prop !== 'prototype') {
      fabric.Canvas[prop] = fabric.StaticCanvas[prop];
    }
  }

  if (fabric.isTouchSupported) {
    /** @ignore */
    fabric.Canvas.prototype._setCursorFromEvent = function() { };
  }
})();


(function() {

  var cursorOffset = {
        mt: 0, // n
        tr: 1, // ne
        mr: 2, // e
        br: 3, // se
        mb: 4, // s
        bl: 5, // sw
        ml: 6, // w
        tl: 7 // nw
      },
      addListener = fabric.util.addListener,
      removeListener = fabric.util.removeListener,
      RIGHT_CLICK = 3, MIDDLE_CLICK = 2, LEFT_CLICK = 1,
      addEventOptions = { passive: false };

  function checkClick(e, value) {
    return 'which' in e ? e.which === value : e.button === value - 1;
  }

  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {

    /**
     * Map of cursor style values for each of the object controls
     * @private
     */
    cursorMap: [
      'n-resize',
      'ne-resize',
      'e-resize',
      'se-resize',
      's-resize',
      'sw-resize',
      'w-resize',
      'nw-resize'
    ],

    /**
     * Adds mouse listeners to canvas
     * @private
     */
    _initEventListeners: function () {
      // in case we initialized the class twice. This should not happen normally
      // but in some kind of applications where the canvas element may be changed
      // this is a workaround to having double listeners.
      this.removeListeners();
      this._bindEvents();
      this.addOrRemove(addListener, 'add');
    },

    addOrRemove: function(functor, eventjsFunctor) {
      functor(fabric.window, 'resize', this._onResize);
      functor(this.upperCanvasEl, 'mousedown', this._onMouseDown);
      functor(this.upperCanvasEl, 'mousemove', this._onMouseMove, addEventOptions);
      functor(this.upperCanvasEl, 'mouseout', this._onMouseOut);
      functor(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);
      functor(this.upperCanvasEl, 'wheel', this._onMouseWheel);
      functor(this.upperCanvasEl, 'contextmenu', this._onContextMenu);
      functor(this.upperCanvasEl, 'dblclick', this._onDoubleClick);
      functor(this.upperCanvasEl, 'touchstart', this._onMouseDown, addEventOptions);
      functor(this.upperCanvasEl, 'touchmove', this._onMouseMove, addEventOptions);
      functor(this.upperCanvasEl, 'dragover', this._onDragOver);
      functor(this.upperCanvasEl, 'dragenter', this._onDragEnter);
      functor(this.upperCanvasEl, 'dragleave', this._onDragLeave);
      functor(this.upperCanvasEl, 'drop', this._onDrop);
      if (typeof eventjs !== 'undefined' && eventjsFunctor in eventjs) {
        eventjs[eventjsFunctor](this.upperCanvasEl, 'gesture', this._onGesture);
        eventjs[eventjsFunctor](this.upperCanvasEl, 'drag', this._onDrag);
        eventjs[eventjsFunctor](this.upperCanvasEl, 'orientation', this._onOrientationChange);
        eventjs[eventjsFunctor](this.upperCanvasEl, 'shake', this._onShake);
        eventjs[eventjsFunctor](this.upperCanvasEl, 'longpress', this._onLongPress);
      }
    },

    /**
     * Removes all event listeners
     */
    removeListeners: function() {
      this.addOrRemove(removeListener, 'remove');
      // if you dispose on a mouseDown, before mouse up, you need to clean document to...
      removeListener(fabric.document, 'mouseup', this._onMouseUp);
      removeListener(fabric.document, 'touchend', this._onMouseUp, addEventOptions);
      removeListener(fabric.document, 'mousemove', this._onMouseMove, addEventOptions);
      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);
    },

    /**
     * @private
     */
    _bindEvents: function() {
      if (this.eventsBound) {
        // for any reason we pass here twice we do not want to bind events twice.
        return;
      }
      this._onMouseDown = this._onMouseDown.bind(this);
      this._onMouseMove = this._onMouseMove.bind(this);
      this._onMouseUp = this._onMouseUp.bind(this);
      this._onResize = this._onResize.bind(this);
      this._onGesture = this._onGesture.bind(this);
      this._onDrag = this._onDrag.bind(this);
      this._onShake = this._onShake.bind(this);
      this._onLongPress = this._onLongPress.bind(this);
      this._onOrientationChange = this._onOrientationChange.bind(this);
      this._onMouseWheel = this._onMouseWheel.bind(this);
      this._onMouseOut = this._onMouseOut.bind(this);
      this._onMouseEnter = this._onMouseEnter.bind(this);
      this._onContextMenu = this._onContextMenu.bind(this);
      this._onDoubleClick = this._onDoubleClick.bind(this);
      this._onDragOver = this._onDragOver.bind(this);
      this._onDragEnter = this._simpleEventHandler.bind(this, 'dragenter');
      this._onDragLeave = this._simpleEventHandler.bind(this, 'dragleave');
      this._onDrop = this._simpleEventHandler.bind(this, 'drop');
      this.eventsBound = true;
    },

    /**
     * @private
     * @param {Event} [e] Event object fired on Event.js gesture
     * @param {Event} [self] Inner Event object
     */
    _onGesture: function(e, self) {
      this.__onTransformGesture && this.__onTransformGesture(e, self);
    },

    /**
     * @private
     * @param {Event} [e] Event object fired on Event.js drag
     * @param {Event} [self] Inner Event object
     */
    _onDrag: function(e, self) {
      this.__onDrag && this.__onDrag(e, self);
    },

    /**
     * @private
     * @param {Event} [e] Event object fired on wheel event
     */
    _onMouseWheel: function(e) {
      this.__onMouseWheel(e);
    },

    /**
     * @private
     * @param {Event} e Event object fired on mousedown
     */
    _onMouseOut: function(e) {
      var target = this._hoveredTarget;
      this.fire('mouse:out', { target: target, e: e });
      this._hoveredTarget = null;
      target && target.fire('mouseout', { e: e });
      if (this._iTextInstances) {
        this._iTextInstances.forEach(function(obj) {
          if (obj.isEditing) {
            obj.hiddenTextarea.focus();
          }
        });
      }
    },

    /**
     * @private
     * @param {Event} e Event object fired on mouseenter
     */
    _onMouseEnter: function(e) {
      if (!this.findTarget(e)) {
        this.fire('mouse:over', { target: null, e: e });
        this._hoveredTarget = null;
      }
    },

    /**
     * @private
     * @param {Event} [e] Event object fired on Event.js orientation change
     * @param {Event} [self] Inner Event object
     */
    _onOrientationChange: function(e, self) {
      this.__onOrientationChange && this.__onOrientationChange(e, self);
    },

    /**
     * @private
     * @param {Event} [e] Event object fired on Event.js shake
     * @param {Event} [self] Inner Event object
     */
    _onShake: function(e, self) {
      this.__onShake && this.__onShake(e, self);
    },

    /**
     * @private
     * @param {Event} [e] Event object fired on Event.js shake
     * @param {Event} [self] Inner Event object
     */
    _onLongPress: function(e, self) {
      this.__onLongPress && this.__onLongPress(e, self);
    },

    /**
     * prevent default to allow drop event to be fired
     * @private
     * @param {Event} [e] Event object fired on Event.js shake
     */
    _onDragOver: function(e) {
      e.preventDefault();
      var target = this._simpleEventHandler('dragover', e);
      this._fireEnterLeaveEvents(target, e);
    },

    /**
     * @private
     * @param {Event} e Event object fired on mousedown
     */
    _onContextMenu: function (e) {
      if (this.stopContextMenu) {
        e.stopPropagation();
        e.preventDefault();
      }
      return false;
    },

    /**
     * @private
     * @param {Event} e Event object fired on mousedown
     */
    _onDoubleClick: function (e) {
      this._cacheTransformEventData(e);
      this._handleEvent(e, 'dblclick');
      this._resetTransformEventData(e);
    },

    /**
     * @private
     * @param {Event} e Event object fired on mousedown
     */
    _onMouseDown: function (e) {
      this.__onMouseDown(e);
      this._resetTransformEventData();
      addListener(fabric.document, 'touchend', this._onMouseUp, addEventOptions);
      addListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);

      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove, addEventOptions);
      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, addEventOptions);

      if (e.type === 'touchstart') {
        // Unbind mousedown to prevent double triggers from touch devices
        removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);
      }
      else {
        addListener(fabric.document, 'mouseup', this._onMouseUp);
        addListener(fabric.document, 'mousemove', this._onMouseMove, addEventOptions);
      }
    },

    /**
     * @private
     * @param {Event} e Event object fired on mouseup
     */
    _onMouseUp: function (e) {
      this.__onMouseUp(e);
      this._resetTransformEventData();
      removeListener(fabric.document, 'mouseup', this._onMouseUp);
      removeListener(fabric.document, 'touchend', this._onMouseUp, addEventOptions);

      removeListener(fabric.document, 'mousemove', this._onMouseMove, addEventOptions);
      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);

      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove, addEventOptions);
      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, addEventOptions);

      if (e.type === 'touchend') {
        // Wait 400ms before rebinding mousedown to prevent double triggers
        // from touch devices
        var _this = this;
        setTimeout(function() {
          addListener(_this.upperCanvasEl, 'mousedown', _this._onMouseDown);
        }, 400);
      }
    },

    /**
     * @private
     * @param {Event} e Event object fired on mousemove
     */
    _onMouseMove: function (e) {
      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();
      this.__onMouseMove(e);
    },

    /**
     * @private
     */
    _onResize: function () {
      this.calcOffset();
    },

    /**
     * Decides whether the canvas should be redrawn in mouseup and mousedown events.
     * @private
     * @param {Object} target
     */
    _shouldRender: function(target) {
      var activeObject = this._activeObject;

      if (
        !!activeObject !== !!target ||
        (activeObject && target && (activeObject !== target))
      ) {
        // this covers: switch of target, from target to no target, selection of target
        // multiSelection with key and mouse
        return true;
      }
      else if (activeObject && activeObject.isEditing) {
        // if we mouse up/down over a editing textbox a cursor change,
        // there is no need to re render
        return false;
      }
      return false;
    },

    /**
     * Method that defines the actions when mouse is released on canvas.
     * The method resets the currentTransform parameters, store the image corner
     * position in the image object and render the canvas on top.
     * @private
     * @param {Event} e Event object fired on mouseup
     */
    __onMouseUp: function (e) {
      var target, transform = this._currentTransform,
          groupSelector = this._groupSelector, shouldRender = false,
          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));
      this._cacheTransformEventData(e);
      target = this._target;
      this._handleEvent(e, 'up:before');
      // if right/middle click just fire events and return
      // target undefined will make the _handleEvent search the target
      if (checkClick(e, RIGHT_CLICK)) {
        if (this.fireRightClick) {
          this._handleEvent(e, 'up', RIGHT_CLICK, isClick);
        }
        return;
      }

      if (checkClick(e, MIDDLE_CLICK)) {
        if (this.fireMiddleClick) {
          this._handleEvent(e, 'up', MIDDLE_CLICK, isClick);
        }
        this._resetTransformEventData();
        return;
      }

      if (this.isDrawingMode && this._isCurrentlyDrawing) {
        this._onMouseUpInDrawingMode(e);
        return;
      }

      if (transform) {
        this._finalizeCurrentTransform(e);
        shouldRender = transform.actionPerformed;
      }

      if (!isClick) {
        this._maybeGroupObjects(e);
        shouldRender || (shouldRender = this._shouldRender(target));
      }
      if (target) {
        target.isMoving = false;
      }
      this._setCursorFromEvent(e, target);
      this._handleEvent(e, 'up', LEFT_CLICK, isClick);
      this._groupSelector = null;
      this._currentTransform = null;
      // reset the target information about which corner is selected
      target && (target.__corner = 0);
      if (shouldRender) {
        this.requestRenderAll();
      }
      else if (!isClick) {
        this.renderTop();
      }
    },

    /**
     * @private
     * Handle event firing for target and subtargets
     * @param {Event} e event from mouse
     * @param {String} eventType event to fire (up, down or move)
     * @return {Fabric.Object} target return the the target found, for internal reasons.
     */
    _simpleEventHandler: function(eventType, e) {
      var target = this.findTarget(e),
          targets = this.targets,
          options = {
            e: e,
            target: target,
            subTargets: targets,
          };
      this.fire(eventType, options);
      target && target.fire(eventType, options);
      if (!targets) {
        return target;
      }
      for (var i = 0; i < targets.length; i++) {
        targets[i].fire(eventType, options);
      }
      return target;
    },

    /**
     * @private
     * Handle event firing for target and subtargets
     * @param {Event} e event from mouse
     * @param {String} eventType event to fire (up, down or move)
     * @param {fabric.Object} targetObj receiving event
     * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right
     * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.
     */
    _handleEvent: function(e, eventType, button, isClick) {
      var target = this._target,
          targets = this.targets || [],
          options = {
            e: e,
            target: target,
            subTargets: targets,
            button: button || LEFT_CLICK,
            isClick: isClick || false,
            pointer: this._pointer,
            absolutePointer: this._absolutePointer,
            transform: this._currentTransform
          };
      this.fire('mouse:' + eventType, options);
      target && target.fire('mouse' + eventType, options);
      for (var i = 0; i < targets.length; i++) {
        targets[i].fire('mouse' + eventType, options);
      }
    },

    /**
     * @private
     * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event
     */
    _finalizeCurrentTransform: function(e) {

      var transform = this._currentTransform,
          target = transform.target,
          eventName,
          options = {
            e: e,
            target: target,
            transform: transform,
          };

      if (target._scaling) {
        target._scaling = false;
      }

      target.setCoords();

      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {
        if (transform.actionPerformed) {
          eventName = this._addEventOptions(options, transform);
          this._fire(eventName, options);
        }
        this._fire('modified', options);
      }
    },

    /**
     * Mutate option object in order to add by property and give back the event name.
     * @private
     * @param {Object} options to mutate
     * @param {Object} transform to inspect action from
     */
    _addEventOptions: function(options, transform) {
      // we can probably add more details at low cost
      // scale change, rotation changes, translation changes
      var eventName, by;
      switch (transform.action) {
        case 'scaleX':
          eventName = 'scaled';
          by = 'x';
          break;
        case 'scaleY':
          eventName = 'scaled';
          by = 'y';
          break;
        case 'skewX':
          eventName = 'skewed';
          by = 'x';
          break;
        case 'skewY':
          eventName = 'skewed';
          by = 'y';
          break;
        case 'scale':
          eventName = 'scaled';
          by = 'equally';
          break;
        case 'rotate':
          eventName = 'rotated';
          break;
        case 'drag':
          eventName = 'moved';
          break;
      }
      options.by = by;
      return eventName;
    },

    /**
     * @private
     * @param {Event} e Event object fired on mousedown
     */
    _onMouseDownInDrawingMode: function(e) {
      this._isCurrentlyDrawing = true;
      if (this.getActiveObject()) {
        this.discardActiveObject(e).requestRenderAll();
      }
      if (this.clipTo) {
        fabric.util.clipContext(this, this.contextTop);
      }
      var pointer = this.getPointer(e);
      this.freeDrawingBrush.onMouseDown(pointer);
      this._handleEvent(e, 'down');
    },

    /**
     * @private
     * @param {Event} e Event object fired on mousemove
     */
    _onMouseMoveInDrawingMode: function(e) {
      if (this._isCurrentlyDrawing) {
        var pointer = this.getPointer(e);
        this.freeDrawingBrush.onMouseMove(pointer);
      }
      this.setCursor(this.freeDrawingCursor);
      this._handleEvent(e, 'move');
    },

    /**
     * @private
     * @param {Event} e Event object fired on mouseup
     */
    _onMouseUpInDrawingMode: function(e) {
      this._isCurrentlyDrawing = false;
      if (this.clipTo) {
        this.contextTop.restore();
      }
      this.freeDrawingBrush.onMouseUp();
      this._handleEvent(e, 'up');
    },

    /**
     * Method that defines the actions when mouse is clicked on canvas.
     * The method inits the currentTransform parameters and renders all the
     * canvas so the current image can be placed on the top canvas and the rest
     * in on the container one.
     * @private
     * @param {Event} e Event object fired on mousedown
     */
    __onMouseDown: function (e) {
      this._cacheTransformEventData(e);
      this._handleEvent(e, 'down:before');
      var target = this._target;
      // if right click just fire events
      if (checkClick(e, RIGHT_CLICK)) {
        if (this.fireRightClick) {
          this._handleEvent(e, 'down', RIGHT_CLICK);
        }
        return;
      }

      if (checkClick(e, MIDDLE_CLICK)) {
        if (this.fireMiddleClick) {
          this._handleEvent(e, 'down', MIDDLE_CLICK);
        }
        return;
      }

      if (this.isDrawingMode) {
        this._onMouseDownInDrawingMode(e);
        return;
      }

      // ignore if some object is being transformed at this moment
      if (this._currentTransform) {
        return;
      }

      var pointer = this._pointer;
      // save pointer for check in __onMouseUp event
      this._previousPointer = pointer;
      var shouldRender = this._shouldRender(target),
          shouldGroup = this._shouldGroup(e, target);
      if (this._shouldClearSelection(e, target)) {
        this.discardActiveObject(e);
      }
      else if (shouldGroup) {
        this._handleGrouping(e, target);
        target = this._activeObject;
      }

      if (this.selection && (!target ||
        (!target.selectable && !target.isEditing && target !== this._activeObject))) {
        this._groupSelector = {
          ex: pointer.x,
          ey: pointer.y,
          top: 0,
          left: 0
        };
      }

      if (target) {
        var alreadySelected = target === this._activeObject;
        if (target.selectable) {
          this.setActiveObject(target, e);
        }
        if (target === this._activeObject && (target.__corner || !shouldGroup)) {
          this._setupCurrentTransform(e, target, alreadySelected);
        }
      }
      this._handleEvent(e, 'down');
      // we must renderAll so that we update the visuals
      (shouldRender || shouldGroup) && this.requestRenderAll();
    },

    /**
     * reset cache form common information needed during event processing
     * @private
     */
    _resetTransformEventData: function() {
      this._target = null;
      this._pointer = null;
      this._absolutePointer = null;
    },

    /**
     * Cache common information needed during event processing
     * @private
     * @param {Event} e Event object fired on event
     */
    _cacheTransformEventData: function(e) {
      // reset in order to avoid stale caching
      this._resetTransformEventData();
      this._pointer = this.getPointer(e, true);
      this._absolutePointer = this.restorePointerVpt(this._pointer);
      this._target = this._currentTransform ? this._currentTransform.target : this.findTarget(e) || null;
    },

    /**
     * @private
     */
    _beforeTransform: function(e) {
      var t = this._currentTransform;
      this.stateful && t.target.saveState();
      this.fire('before:transform', {
        e: e,
        transform: t,
      });
      // determine if it's a drag or rotate case
      if (t.corner) {
        this.onBeforeScaleRotate(t.target);
      }
    },

    /**
     * Method that defines the actions when mouse is hovering the canvas.
     * The currentTransform parameter will definde whether the user is rotating/scaling/translating
     * an image or neither of them (only hovering). A group selection is also possible and would cancel
     * all any other type of action.
     * In case of an image transformation only the top canvas will be rendered.
     * @private
     * @param {Event} e Event object fired on mousemove
     */
    __onMouseMove: function (e) {
      this._handleEvent(e, 'move:before');
      this._cacheTransformEventData(e);
      var target, pointer;

      if (this.isDrawingMode) {
        this._onMouseMoveInDrawingMode(e);
        return;
      }
      if (typeof e.touches !== 'undefined' && e.touches.length > 1) {
        return;
      }

      var groupSelector = this._groupSelector;

      // We initially clicked in an empty area, so we draw a box for multiple selection
      if (groupSelector) {
        pointer = this._pointer;

        groupSelector.left = pointer.x - groupSelector.ex;
        groupSelector.top = pointer.y - groupSelector.ey;

        this.renderTop();
      }
      else if (!this._currentTransform) {
        target = this.findTarget(e) || null;
        this._setCursorFromEvent(e, target);
        this._fireOverOutEvents(target, e);
      }
      else {
        this._transformObject(e);
      }
      this._handleEvent(e, 'move');
      this._resetTransformEventData();
    },

    /**
     * Manage the mouseout, mouseover events for the fabric object on the canvas
     * @param {Fabric.Object} target the target where the target from the mousemove event
     * @param {Event} e Event object fired on mousemove
     * @private
     */
    _fireOverOutEvents: function(target, e) {
      this.fireSynteticInOutEvents(target, e, {
        targetName: '_hoveredTarget',
        canvasEvtOut: 'mouse:out',
        evtOut: 'mouseout',
        canvasEvtIn: 'mouse:over',
        evtIn: 'mouseover',
      });
    },

    /**
     * Manage the dragEnter, dragLeave events for the fabric objects on the canvas
     * @param {Fabric.Object} target the target where the target from the onDrag event
     * @param {Event} e Event object fired on ondrag
     * @private
     */
    _fireEnterLeaveEvents: function(target, e) {
      this.fireSynteticInOutEvents(target, e, {
        targetName: '_draggedoverTarget',
        evtOut: 'dragleave',
        evtIn: 'dragenter',
      });
    },

    /**
     * Manage the syntetic in/out events for the fabric objects on the canvas
     * @param {Fabric.Object} target the target where the target from the supported events
     * @param {Event} e Event object fired
     * @param {Object} config configuration for the function to work
     * @param {String} config.targetName property on the canvas where the old target is stored
     * @param {String} [config.canvasEvtOut] name of the event to fire at canvas level for out
     * @param {String} config.evtOut name of the event to fire for out
     * @param {String} [config.canvasEvtIn] name of the event to fire at canvas level for in
     * @param {String} config.evtIn name of the event to fire for in
     * @private
     */
    fireSynteticInOutEvents: function(target, e, config) {
      var inOpt, outOpt, oldTarget = this[config.targetName], outFires, inFires,
          targetChanged = oldTarget !== target, canvasEvtIn = config.canvasEvtIn, canvasEvtOut = config.canvasEvtOut;
      if (targetChanged) {
        inOpt = { e: e, target: target, previousTarget: oldTarget };
        outOpt = { e: e, target: oldTarget, nextTarget: target };
        this[config.targetName] = target;
      }
      inFires = target && targetChanged;
      outFires = oldTarget && targetChanged;
      if (outFires) {
        canvasEvtOut && this.fire(canvasEvtOut, outOpt);
        oldTarget.fire(config.evtOut, outOpt);
      }
      if (inFires) {
        canvasEvtIn && this.fire(canvasEvtIn, inOpt);
        target.fire(config.evtIn, inOpt);
      }
    },

    /**
     * Method that defines actions when an Event Mouse Wheel
     * @param {Event} e Event object fired on mouseup
     */
    __onMouseWheel: function(e) {
      this._cacheTransformEventData(e);
      this._handleEvent(e, 'wheel');
      this._resetTransformEventData();
    },

    /**
     * @private
     * @param {Event} e Event fired on mousemove
     */
    _transformObject: function(e) {
      var pointer = this.getPointer(e),
          transform = this._currentTransform;

      transform.reset = false;
      transform.target.isMoving = true;
      transform.shiftKey = e.shiftKey;
      transform.altKey = e[this.centeredKey];

      this._beforeScaleTransform(e, transform);
      this._performTransformAction(e, transform, pointer);

      transform.actionPerformed && this.requestRenderAll();
    },

    /**
     * @private
     */
    _performTransformAction: function(e, transform, pointer) {
      var x = pointer.x,
          y = pointer.y,
          action = transform.action,
          actionPerformed = false,
          options = {
            target: transform.target,
            e: e,
            transform: transform,
            pointer: pointer
          };

      if (action === 'rotate') {
        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', options);
      }
      else if (action === 'scale') {
        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', options);
      }
      else if (action === 'scaleX') {
        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', options);
      }
      else if (action === 'scaleY') {
        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', options);
      }
      else if (action === 'skewX') {
        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', options);
      }
      else if (action === 'skewY') {
        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', options);
      }
      else {
        actionPerformed = this._translateObject(x, y);
        if (actionPerformed) {
          this._fire('moving', options);
          this.setCursor(options.target.moveCursor || this.moveCursor);
        }
      }
      transform.actionPerformed = transform.actionPerformed || actionPerformed;
    },

    /**
     * @private
     */
    _fire: function(eventName, options) {
      this.fire('object:' + eventName, options);
      options.target.fire(eventName, options);
    },

    /**
     * @private
     */
    _beforeScaleTransform: function(e, transform) {
      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {
        var centerTransform = this._shouldCenterTransform(transform.target);

        // Switch from a normal resize to center-based
        if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||
           // Switch from center-based resize to normal one
           (!centerTransform && transform.originX === 'center' && transform.originY === 'center')
        ) {
          this._resetCurrentTransform();
          transform.reset = true;
        }
      }
    },

    /**
     * @private
     * @param {Event} e Event object
     * @param {Object} transform current tranform
     * @param {Number} x mouse position x from origin
     * @param {Number} y mouse poistion y from origin
     * @return {Boolean} true if the scaling occurred
     */
    _onScale: function(e, transform, x, y) {
      if (this._isUniscalePossible(e, transform.target)) {
        transform.currentAction = 'scale';
        return this._scaleObject(x, y);
      }
      else {
        // Switch from a normal resize to proportional
        if (!transform.reset && transform.currentAction === 'scale') {
          this._resetCurrentTransform();
        }

        transform.currentAction = 'scaleEqually';
        return this._scaleObject(x, y, 'equally');
      }
    },

    /**
     * @private
     * @param {Event} e Event object
     * @param {fabric.Object} target current target
     * @return {Boolean} true if unproportional scaling is possible
     */
    _isUniscalePossible: function(e, target) {
      return (e[this.uniScaleKey] || this.uniScaleTransform) && !target.get('lockUniScaling');
    },

    /**
     * Sets the cursor depending on where the canvas is being hovered.
     * Note: very buggy in Opera
     * @param {Event} e Event object
     * @param {Object} target Object that the mouse is hovering, if so.
     */
    _setCursorFromEvent: function (e, target) {
      if (!target) {
        this.setCursor(this.defaultCursor);
        return false;
      }

      var hoverCursor = target.hoverCursor || this.hoverCursor,
          activeSelection = this._activeObject && this._activeObject.type === 'activeSelection' ?
            this._activeObject : null,
          // only show proper corner when group selection is not active
          corner = (!activeSelection || !activeSelection.contains(target))
                    && target._findTargetCorner(this.getPointer(e, true));

      if (!corner) {
        this.setCursor(hoverCursor);
      }
      else {
        this.setCursor(this.getCornerCursor(corner, target, e));
      }
    },

    /**
     * @private
     */
    getCornerCursor: function(corner, target, e) {
      if (this.actionIsDisabled(corner, target, e)) {
        return this.notAllowedCursor;
      }
      else if (corner in cursorOffset) {
        return this._getRotatedCornerCursor(corner, target, e);
      }
      else if (corner === 'mtr' && target.hasRotatingPoint) {
        return this.rotationCursor;
      }
      else {
        return this.defaultCursor;
      }
    },

    actionIsDisabled: function(corner, target, e) {
      if (corner === 'mt' || corner === 'mb') {
        return e[this.altActionKey] ? target.lockSkewingX : target.lockScalingY;
      }
      else if (corner === 'ml' || corner === 'mr') {
        return e[this.altActionKey] ? target.lockSkewingY : target.lockScalingX;
      }
      else if (corner === 'mtr') {
        return target.lockRotation;
      }
      else {
        return this._isUniscalePossible(e, target) ?
          target.lockScalingX && target.lockScalingY : target.lockScalingX || target.lockScalingY;
      }
    },

    /**
     * @private
     */
    _getRotatedCornerCursor: function(corner, target, e) {
      var n = Math.round((target.angle % 360) / 45);

      if (n < 0) {
        n += 8; // full circle ahead
      }
      n += cursorOffset[corner];
      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {
        //if we are holding shift and we are on a mx corner...
        n += 2;
      }
      // normalize n to be from 0 to 7
      n %= 8;

      return this.cursorMap[n];
    }
  });
})();


(function() {

  var min = Math.min,
      max = Math.max;

  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {

    /**
     * @private
     * @param {Event} e Event object
     * @param {fabric.Object} target
     * @return {Boolean}
     */
    _shouldGroup: function(e, target) {
      var activeObject = this._activeObject;
      return activeObject && this._isSelectionKeyPressed(e) && target && target.selectable && this.selection &&
            (activeObject !== target || activeObject.type === 'activeSelection') && !target.onSelect({ e: e });
    },

    /**
     * @private
     * @param {Event} e Event object
     * @param {fabric.Object} target
     */
    _handleGrouping: function (e, target) {
      var activeObject = this._activeObject;
      // avoid multi select when shift click on a corner
      if (activeObject.__corner) {
        return;
      }
      if (target === activeObject) {
        // if it's a group, find target again, using activeGroup objects
        target = this.findTarget(e, true);
        // if even object is not found or we are on activeObjectCorner, bail out
        if (!target || !target.selectable) {
          return;
        }
      }
      if (activeObject && activeObject.type === 'activeSelection') {
        this._updateActiveSelection(target, e);
      }
      else {
        this._createActiveSelection(target, e);
      }
    },

    /**
     * @private
     */
    _updateActiveSelection: function(target, e) {
      var activeSelection = this._activeObject,
          currentActiveObjects = activeSelection._objects.slice(0);
      if (activeSelection.contains(target)) {
        activeSelection.removeWithUpdate(target);
        this._hoveredTarget = target;
        if (activeSelection.size() === 1) {
          // activate last remaining object
          this._setActiveObject(activeSelection.item(0), e);
        }
      }
      else {
        activeSelection.addWithUpdate(target);
        this._hoveredTarget = activeSelection;
      }
      this._fireSelectionEvents(currentActiveObjects, e);
    },

    /**
     * @private
     */
    _createActiveSelection: function(target, e) {
      var currentActives = this.getActiveObjects(), group = this._createGroup(target);
      this._hoveredTarget = group;
      this._setActiveObject(group, e);
      this._fireSelectionEvents(currentActives, e);
    },

    /**
     * @private
     * @param {Object} target
     */
    _createGroup: function(target) {
      var objects = this._objects,
          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),
          groupObjects = isActiveLower
            ? [this._activeObject, target]
            : [target, this._activeObject];
      this._activeObject.isEditing && this._activeObject.exitEditing();
      return new fabric.ActiveSelection(groupObjects, {
        canvas: this
      });
    },

    /**
     * @private
     * @param {Event} e mouse event
     */
    _groupSelectedObjects: function (e) {

      var group = this._collectObjects(e),
          aGroup;

      // do not create group for 1 element only
      if (group.length === 1) {
        this.setActiveObject(group[0], e);
      }
      else if (group.length > 1) {
        aGroup = new fabric.ActiveSelection(group.reverse(), {
          canvas: this
        });
        this.setActiveObject(aGroup, e);
      }
    },

    /**
     * @private
     */
    _collectObjects: function(e) {
      var group = [],
          currentObject,
          x1 = this._groupSelector.ex,
          y1 = this._groupSelector.ey,
          x2 = x1 + this._groupSelector.left,
          y2 = y1 + this._groupSelector.top,
          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),
          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),
          allowIntersect = !this.selectionFullyContained,
          isClick = x1 === x2 && y1 === y2;
      // we iterate reverse order to collect top first in case of click.
      for (var i = this._objects.length; i--; ) {
        currentObject = this._objects[i];

        if (!currentObject || !currentObject.selectable || !currentObject.visible || currentObject.onSelect({ e: e })) {
          continue;
        }

        if ((allowIntersect && currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2)) ||
            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||
            (allowIntersect && currentObject.containsPoint(selectionX1Y1)) ||
            (allowIntersect && currentObject.containsPoint(selectionX2Y2))
        ) {
          group.push(currentObject);

          // only add one object if it's a click
          if (isClick) {
            break;
          }
        }
      }

      return group;
    },

    /**
     * @private
     */
    _maybeGroupObjects: function(e) {
      if (this.selection && this._groupSelector) {
        this._groupSelectedObjects(e);
      }
      this.setCursor(this.defaultCursor);
      // clear selection and current transformation
      this._groupSelector = null;
    }
  });

})();


(function () {
  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {

    /**
     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately
     * @param {Object} [options] Options object
     * @param {String} [options.format=png] The format of the output image. Either "jpeg" or "png"
     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.
     * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent
     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14
     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14
     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14
     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14
     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0
     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format
     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}
     * @example <caption>Generate jpeg dataURL with lower quality</caption>
     * var dataURL = canvas.toDataURL({
     *   format: 'jpeg',
     *   quality: 0.8
     * });
     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>
     * var dataURL = canvas.toDataURL({
     *   format: 'png',
     *   left: 100,
     *   top: 100,
     *   width: 200,
     *   height: 200
     * });
     * @example <caption>Generate double scaled png dataURL</caption>
     * var dataURL = canvas.toDataURL({
     *   format: 'png',
     *   multiplier: 2
     * });
     */
    toDataURL: function (options) {
      options || (options = { });

      var format = options.format || 'png',
          quality = options.quality || 1,
          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? this.getRetinaScaling() : 1),
          canvasEl = this.toCanvasElement(multiplier, options);
      return fabric.util.toDataURL(canvasEl, format, quality);
    },

    /**
     * Create a new HTMLCanvas element painted with the current canvas content.
     * No need to resize the actual one or repaint it.
     * Will transfer object ownership to a new canvas, paint it, and set everything back.
     * This is an intermediary step used to get to a dataUrl but also it is usefull to
     * create quick image copies of a canvas without passing for the dataUrl string
     * @param {Number} [multiplier] a zoom factor.
     * @param {Object} [cropping] Cropping informations
     * @param {Number} [cropping.left] Cropping left offset.
     * @param {Number} [cropping.top] Cropping top offset.
     * @param {Number} [cropping.width] Cropping width.
     * @param {Number} [cropping.height] Cropping height.
     */
    toCanvasElement: function(multiplier, cropping) {
      multiplier = multiplier || 1;
      cropping = cropping || { };
      var scaledWidth = (cropping.width || this.width) * multiplier,
          scaledHeight = (cropping.height || this.height) * multiplier,
          zoom = this.getZoom(),
          originalWidth = this.width,
          originalHeight = this.height,
          newZoom = zoom * multiplier,
          vp = this.viewportTransform,
          translateX = (vp[4] - (cropping.left || 0)) * multiplier,
          translateY = (vp[5] - (cropping.top || 0)) * multiplier,
          originalInteractive = this.interactive,
          originalContext = this.contextContainer,
          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],
          canvasEl = fabric.util.createCanvasElement();
      canvasEl.width = scaledWidth;
      canvasEl.height = scaledHeight;
      this.interactive = false;
      this.viewportTransform = newVp;
      this.width = scaledWidth;
      this.height = scaledHeight;
      this.calcViewportBoundaries();
      this.contextContainer = canvasEl.getContext('2d');
      // will be renderAllExport();
      this.renderAll();
      this.viewportTransform = vp;
      this.width = originalWidth;
      this.height = originalHeight;
      this.calcViewportBoundaries();
      this.contextContainer = originalContext;
      this.interactive = originalInteractive;
      return canvasEl;
    },
  });

})();


fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {

  /**
   * Populates canvas with data from the specified dataless JSON.
   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}
   * @deprecated since 1.2.2
   * @param {String|Object} json JSON string or object
   * @param {Function} callback Callback, invoked when json is parsed
   *                            and corresponding objects (e.g: {@link fabric.Image})
   *                            are initialized
   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.
   * @return {fabric.Canvas} instance
   * @chainable
   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}
   */
  loadFromDatalessJSON: function (json, callback, reviver) {
    return this.loadFromJSON(json, callback, reviver);
  },

  /**
   * Populates canvas with data from the specified JSON.
   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}
   * @param {String|Object} json JSON string or object
   * @param {Function} callback Callback, invoked when json is parsed
   *                            and corresponding objects (e.g: {@link fabric.Image})
   *                            are initialized
   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.
   * @return {fabric.Canvas} instance
   * @chainable
   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}
   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}
   * @example <caption>loadFromJSON</caption>
   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));
   * @example <caption>loadFromJSON with reviver</caption>
   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {
   *   // `o` = json object
   *   // `object` = fabric.Object instance
   *   // ... do some stuff ...
   * });
   */
  loadFromJSON: function (json, callback, reviver) {
    if (!json) {
      return;
    }

    // serialize if it wasn't already
    var serialized = (typeof json === 'string')
      ? JSON.parse(json)
      : fabric.util.object.clone(json);

    var _this = this,
        renderOnAddRemove = this.renderOnAddRemove;
    this.renderOnAddRemove = false;

    this._enlivenObjects(serialized.objects, function (enlivenedObjects) {
      _this.clear();
      _this._setBgOverlay(serialized, function () {
        enlivenedObjects.forEach(function(obj, index) {
          // we splice the array just in case some custom classes restored from JSON
          // will add more object to canvas at canvas init.
          _this.insertAt(obj, index);
        });
        _this.renderOnAddRemove = renderOnAddRemove;
        // remove parts i cannot set as options
        delete serialized.objects;
        delete serialized.backgroundImage;
        delete serialized.overlayImage;
        delete serialized.background;
        delete serialized.overlay;
        // this._initOptions does too many things to just
        // call it. Normally loading an Object from JSON
        // create the Object instance. Here the Canvas is
        // already an instance and we are just loading things over it
        _this._setOptions(serialized);
        _this.renderAll();
        callback && callback();
      });
    }, reviver);
    return this;
  },

  /**
   * @private
   * @param {Object} serialized Object with background and overlay information
   * @param {Function} callback Invoked after all background and overlay images/patterns loaded
   */
  _setBgOverlay: function(serialized, callback) {
    var loaded = {
      backgroundColor: false,
      overlayColor: false,
      backgroundImage: false,
      overlayImage: false
    };

    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {
      callback && callback();
      return;
    }

    var cbIfLoaded = function () {
      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {
        callback && callback();
      }
    };

    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);
    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);
    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);
    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);
  },

  /**
   * @private
   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)
   * @param {(Object|String)} value Value to set
   * @param {Object} loaded Set loaded property to true if property is set
   * @param {Object} callback Callback function to invoke after property is set
   */
  __setBgOverlay: function(property, value, loaded, callback) {
    var _this = this;

    if (!value) {
      loaded[property] = true;
      callback && callback();
      return;
    }

    if (property === 'backgroundImage' || property === 'overlayImage') {
      fabric.util.enlivenObjects([value], function(enlivedObject){
        _this[property] = enlivedObject[0];
        loaded[property] = true;
        callback && callback();
      });
    }
    else {
      this['set' + fabric.util.string.capitalize(property, true)](value, function() {
        loaded[property] = true;
        callback && callback();
      });
    }
  },

  /**
   * @private
   * @param {Array} objects
   * @param {Function} callback
   * @param {Function} [reviver]
   */
  _enlivenObjects: function (objects, callback, reviver) {
    if (!objects || objects.length === 0) {
      callback && callback([]);
      return;
    }

    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {
      callback && callback(enlivenedObjects);
    }, null, reviver);
  },

  /**
   * @private
   * @param {String} format
   * @param {Function} callback
   */
  _toDataURL: function (format, callback) {
    this.clone(function (clone) {
      callback(clone.toDataURL(format));
    });
  },

  /**
   * @private
   * @param {String} format
   * @param {Number} multiplier
   * @param {Function} callback
   */
  _toDataURLWithMultiplier: function (format, multiplier, callback) {
    this.clone(function (clone) {
      callback(clone.toDataURLWithMultiplier(format, multiplier));
    });
  },

  /**
   * Clones canvas instance
   * @param {Object} [callback] Receives cloned instance as a first argument
   * @param {Array} [properties] Array of properties to include in the cloned canvas and children
   */
  clone: function (callback, properties) {
    var data = JSON.stringify(this.toJSON(properties));
    this.cloneWithoutData(function(clone) {
      clone.loadFromJSON(data, function() {
        callback && callback(clone);
      });
    });
  },

  /**
   * Clones canvas instance without cloning existing data.
   * This essentially copies canvas dimensions, clipping properties, etc.
   * but leaves data empty (so that you can populate it with your own)
   * @param {Object} [callback] Receives cloned instance as a first argument
   */
  cloneWithoutData: function(callback) {
    var el = fabric.util.createCanvasElement();

    el.width = this.width;
    el.height = this.height;

    var clone = new fabric.Canvas(el);
    clone.clipTo = this.clipTo;
    if (this.backgroundImage) {
      clone.setBackgroundImage(this.backgroundImage.src, function() {
        clone.renderAll();
        callback && callback(clone);
      });
      clone.backgroundImageOpacity = this.backgroundImageOpacity;
      clone.backgroundImageStretch = this.backgroundImageStretch;
    }
    else {
      callback && callback(clone);
    }
  }
});


(function(global) {

  'use strict';

  var fabric = global.fabric || (global.fabric = { }),
      extend = fabric.util.object.extend,
      clone = fabric.util.object.clone,
      toFixed = fabric.util.toFixed,
      capitalize = fabric.util.string.capitalize,
      degreesToRadians = fabric.util.degreesToRadians,
      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),
      objectCaching = !fabric.isLikelyNode,
      ALIASING_LIMIT = 2;

  if (fabric.Object) {
    return;
  }

  /**
   * Root object class from which all 2d shape classes inherit from
   * @class fabric.Object
   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}
   * @see {@link fabric.Object#initialize} for constructor definition
   *
   * @fires added
   * @fires removed
   *
   * @fires selected
   * @fires deselected
   * @fires modified
   * @fires modified
   * @fires moved
   * @fires scaled
   * @fires rotated
   * @fires skewed
   *
   * @fires rotating
   * @fires scaling
   * @fires moving
   * @fires skewing
   *
   * @fires mousedown
   * @fires mouseup
   * @fires mouseover
   * @fires mouseout
   * @fires mousewheel
   * @fires mousedblclick
   *
   * @fires dragover
   * @fires dragenter
   * @fires dragleave
   * @fires drop
   */
  fabric.Object = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.Object.prototype */ {

    /**
     * Type of an object (rect, circle, path, etc.).
     * Note that this property is meant to be read-only and not meant to be modified.
     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.
     * @type String
     * @default
     */
    type:                     'object',

    /**
     * Horizontal origin of transformation of an object (one of "left", "right", "center")
     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups
     * @type String
     * @default
     */
    originX:                  'left',

    /**
     * Vertical origin of transformation of an object (one of "top", "bottom", "center")
     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups
     * @type String
     * @default
     */
    originY:                  'top',

    /**
     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}
     * @type Number
     * @default
     */
    top:                      0,

    /**
     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}
     * @type Number
     * @default
     */
    left:                     0,

    /**
     * Object width
     * @type Number
     * @default
     */
    width:                    0,

    /**
     * Object height
     * @type Number
     * @default
     */
    height:                   0,

    /**
     * Object scale factor (horizontal)
     * @type Number
     * @default
     */
    scaleX:                   1,

    /**
     * Object scale factor (vertical)
     * @type Number
     * @default
     */
    scaleY:                   1,

    /**
     * When true, an object is rendered as flipped horizontally
     * @type Boolean
     * @default
     */
    flipX:                    false,

    /**
     * When true, an object is rendered as flipped vertically
     * @type Boolean
     * @default
     */
    flipY:                    false,

    /**
     * Opacity of an object
     * @type Number
     * @default
     */
    opacity:                  1,

    /**
     * Angle of rotation of an object (in degrees)
     * @type Number
     * @default
     */
    angle:                    0,

    /**
     * Angle of skew on x axes of an object (in degrees)
     * @type Number
     * @default
     */
    skewX:                    0,

    /**
     * Angle of skew on y axes of an object (in degrees)
     * @type Number
     * @default
     */
    skewY:                    0,

    /**
     * Size of object's controlling corners (in pixels)
     * @type Number
     * @default
     */
    cornerSize:               13,

    /**
     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)
     * @type Boolean
     * @default
     */
    transparentCorners:       true,

    /**
     * Default cursor value used when hovering over this object on canvas
     * @type String
     * @default
     */
    hoverCursor:              null,

    /**
     * Default cursor value used when moving this object on canvas
     * @type String
     * @default
     */
    moveCursor:               null,

    /**
     * Padding between object and its controlling borders (in pixels)
     * @type Number
     * @default
     */
    padding:                  0,

    /**
     * Color of controlling borders of an object (when it's active)
     * @type String
     * @default
     */
    borderColor:              'rgba(102,153,255,0.75)',

    /**
     * Array specifying dash pattern of an object's borders (hasBorder must be true)
     * @since 1.6.2
     * @type Array
     */
    borderDashArray:          null,

    /**
     * Color of controlling corners of an object (when it's active)
     * @type String
     * @default
     */
    cornerColor:              'rgba(102,153,255,0.5)',

    /**
     * Color of controlling corners of an object (when it's active and transparentCorners false)
     * @since 1.6.2
     * @type String
     * @default
     */
    cornerStrokeColor:        null,

    /**
     * Specify style of control, 'rect' or 'circle'
     * @since 1.6.2
     * @type String
     */
    cornerStyle:          'rect',

    /**
     * Array specifying dash pattern of an object's control (hasBorder must be true)
     * @since 1.6.2
     * @type Array
     */
    cornerDashArray:          null,

    /**
     * When true, this object will use center point as the origin of transformation
     * when being scaled via the controls.
     * <b>Backwards incompatibility note:</b> This property replaces "centerTransform" (Boolean).
     * @since 1.3.4
     * @type Boolean
     * @default
     */
    centeredScaling:          false,

    /**
     * When true, this object will use center point as the origin of transformation
     * when being rotated via the controls.
     * <b>Backwards incompatibility note:</b> This property replaces "centerTransform" (Boolean).
     * @since 1.3.4
     * @type Boolean
     * @default
     */
    centeredRotation:         true,

    /**
     * Color of object's fill
     * takes css colors https://www.w3.org/TR/css-color-3/
     * @type String
     * @default
     */
    fill:                     'rgb(0,0,0)',

    /**
     * Fill rule used to fill an object
     * accepted values are nonzero, evenodd
     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)
     * @type String
     * @default
     */
    fillRule:                 'nonzero',

    /**
     * Composite rule used for canvas globalCompositeOperation
     * @type String
     * @default
     */
    globalCompositeOperation: 'source-over',

    /**
     * Background color of an object.
     * takes css colors https://www.w3.org/TR/css-color-3/
     * @type String
     * @default
     */
    backgroundColor:          '',

    /**
     * Selection Background color of an object. colored layer behind the object when it is active.
     * does not mix good with globalCompositeOperation methods.
     * @type String
     * @default
     */
    selectionBackgroundColor:          '',

    /**
     * When defined, an object is rendered via stroke and this property specifies its color
     * takes css colors https://www.w3.org/TR/css-color-3/
     * @type String
     * @default
     */
    stroke:                   null,

    /**
     * Width of a stroke used to render this object
     * @type Number
     * @default
     */
    strokeWidth:              1,

    /**
     * Array specifying dash pattern of an object's stroke (stroke must be defined)
     * @type Array
     */
    strokeDashArray:          null,

    /**
     * Line offset of an object's stroke
     * @type Number
     * @default
     */
    strokeDashOffset: 0,

    /**
     * Line endings style of an object's stroke (one of "butt", "round", "square")
     * @type String
     * @default
     */
    strokeLineCap:            'butt',

    /**
     * Corner style of an object's stroke (one of "bevil", "round", "miter")
     * @type String
     * @default
     */
    strokeLineJoin:           'miter',

    /**
     * Maximum miter length (used for strokeLineJoin = "miter") of an object's stroke
     * @type Number
     * @default
     */
    strokeMiterLimit:         4,

    /**
     * Shadow object representing shadow of this shape
     * @type fabric.Shadow
     * @default
     */
    shadow:                   null,

    /**
     * Opacity of object's controlling borders when object is active and moving
     * @type Number
     * @default
     */
    borderOpacityWhenMoving:  0.4,

    /**
     * Scale factor of object's controlling borders
     * @type Number
     * @default
     */
    borderScaleFactor:        1,

    /**
     * Transform matrix (similar to SVG's transform matrix)
     * @type Array
     */
    transformMatrix:          null,

    /**
     * Minimum allowed scale value of an object
     * @type Number
     * @default
     */
    minScaleLimit:            0,

    /**
     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).
     * But events still fire on it.
     * @type Boolean
     * @default
     */
    selectable:               true,

    /**
     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4
     * @type Boolean
     * @default
     */
    evented:                  true,

    /**
     * When set to `false`, an object is not rendered on canvas
     * @type Boolean
     * @default
     */
    visible:                  true,

    /**
     * When set to `false`, object's controls are not displayed and can not be used to manipulate object
     * @type Boolean
     * @default
     */
    hasControls:              true,

    /**
     * When set to `false`, object's controlling borders are not rendered
     * @type Boolean
     * @default
     */
    hasBorders:               true,

    /**
     * When set to `false`, object's controlling rotating point will not be visible or selectable
     * @type Boolean
     * @default
     */
    hasRotatingPoint:         true,

    /**
     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)
     * @type Number
     * @default
     */
    rotatingPointOffset:      40,

    /**
     * When set to `true`, objects are "found" on canvas on per-pixel basis rather than according to bounding box
     * @type Boolean
     * @default
     */
    perPixelTargetFind:       false,

    /**
     * When `false`, default object's values are not included in its serialization
     * @type Boolean
     * @default
     */
    includeDefaultValues:     true,

    /**
     * Function that determines clipping of an object (context is passed as a first argument).
     * If you are using code minification, ctx argument can be minified/manglied you should use
     * as a workaround `var ctx = arguments[0];` in the function;
     * Note that context origin is at the object's center point (not left/top corner)
     * @deprecated since 2.0.0
     * @type Function
     */
    clipTo:                   null,

    /**
     * When `true`, object horizontal movement is locked
     * @type Boolean
     * @default
     */
    lockMovementX:            false,

    /**
     * When `true`, object vertical movement is locked
     * @type Boolean
     * @default
     */
    lockMovementY:            false,

    /**
     * When `true`, object rotation is locked
     * @type Boolean
     * @default
     */
    lockRotation:             false,

    /**
     * When `true`, object horizontal scaling is locked
     * @type Boolean
     * @default
     */
    lockScalingX:             false,

    /**
     * When `true`, object vertical scaling is locked
     * @type Boolean
     * @default
     */
    lockScalingY:             false,

    /**
     * When `true`, object non-uniform scaling is locked
     * @type Boolean
     * @default
     */
    lockUniScaling:           false,

    /**
     * When `true`, object horizontal skewing is locked
     * @type Boolean
     * @default
     */
    lockSkewingX:             false,

    /**
     * When `true`, object vertical skewing is locked
     * @type Boolean
     * @default
     */
    lockSkewingY:             false,

    /**
     * When `true`, object cannot be flipped by scaling into negative values
     * @type Boolean
     * @default
     */
    lockScalingFlip:          false,

    /**
     * When `true`, object is not exported in OBJECT/JSON
     * since 1.6.3
     * @type Boolean
     * @default
     */
    excludeFromExport:        false,

    /**
     * When `true`, object is cached on an additional canvas.
     * default to true
     * since 1.7.0
     * @type Boolean
     * @default true
     */
    objectCaching:            objectCaching,

    /**
     * When `true`, object properties are checked for cache invalidation. In some particular
     * situation you may want this to be disabled ( spray brush, very big, groups)
     * or if your application does not allow you to modify properties for groups child you want
     * to disable it for groups.
     * default to false
     * since 1.7.0
     * @type Boolean
     * @default false
     */
    statefullCache:            false,

    /**
     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled
     * too much and will be redrawn with correct details at the end of scaling.
     * this setting is performance and application dependant.
     * default to true
     * since 1.7.0
     * @type Boolean
     * @default true
     */
    noScaleCache:              true,

    /**
     * When `false`, the stoke width will scale with the object.
     * When `true`, the stroke will always match the exact pixel size entered for stroke width.
     * default to false
     * @since 2.6.0
     * @type Boolean
     * @default false
     * @type Boolean
     * @default false
     */
    strokeUniform:              false,

    /**
     * When set to `true`, object's cache will be rerendered next render call.
     * since 1.7.0
     * @type Boolean
     * @default true
     */
    dirty:                true,

    /**
     * keeps the value of the last hovered corner during mouse move.
     * 0 is no corner, or 'mt', 'ml', 'mtr' etc..
     * It should be private, but there is no harm in using it as
     * a read-only property.
     * @type number|string|any
     * @default 0
     */
    __corner: 0,

    /**
     * Determines if the fill or the stroke is drawn first (one of "fill" or "stroke")
     * @type String
     * @default
     */
    paintFirst:           'fill',

    /**
     * List of properties to consider when checking if state
     * of an object is changed (fabric.Object#hasStateChanged)
     * as well as for history (undo/redo) purposes
     * @type Array
     */
    stateProperties: (
      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +
      'stroke strokeWidth strokeDashArray strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit ' +
      'angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor ' +
      'skewX skewY fillRule paintFirst clipPath strokeUniform'
    ).split(' '),

    /**
     * List of properties to consider when checking if cache needs refresh
     * Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single
     * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty
     * and refreshed at the next render
     * @type Array
     */
    cacheProperties: (
      'fill stroke strokeWidth strokeDashArray width height paintFirst strokeUniform' +
      ' strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit backgroundColor clipPath'
    ).split(' '),

    /**
     * a fabricObject that, without stroke define a clipping area with their shape. filled in black
     * the clipPath object gets used when the object has rendered, and the context is placed in the center
     * of the object cacheCanvas.
     * If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'
     * @type fabric.Object
     */
    clipPath: undefined,

    /**
     * Meaningful ONLY when the object is used as clipPath.
     * if true, the clipPath will make the object clip to the outside of the clipPath
     * since 2.4.0
     * @type boolean
     * @default false
     */
    inverted: false,

    /**
     * Meaningful ONLY when the object is used as clipPath.
     * if true, the clipPath will have its top and left relative to canvas, and will
     * not be influenced by the object transform. This will make the clipPath relative
     * to the canvas, but clipping just a particular object.
     * WARNING this is beta, this feature may change or be renamed.
     * since 2.4.0
     * @type boolean
     * @default false
     */
    absolutePositioned: false,

    /**
     * Constructor
     * @param {Object} [options] Options object
     */
    initialize: function(options) {
      if (options) {
        this.setOptions(options);
      }
    },

    /**
     * Create a the canvas used to keep the cached copy of the object
     * @private
     */
    _createCacheCanvas: function() {
      this._cacheProperties = {};
      this._cacheCanvas = fabric.util.createCanvasElement();
      this._cacheContext = this._cacheCanvas.getContext('2d');
      this._updateCacheCanvas();
      // if canvas gets created, is empty, so dirty.
      this.dirty = true;
    },

    /**
     * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal
     * and each side do not cross fabric.cacheSideLimit
     * those numbers are configurable so that you can get as much detail as you want
     * making bargain with performances.
     * @param {Object} dims
     * @param {Object} dims.width width of canvas
     * @param {Object} dims.height height of canvas
     * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache
     * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache
     * @return {Object}.width width of canvas
     * @return {Object}.height height of canvas
     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache
     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache
     */
    _limitCacheSize: function(dims) {
      var perfLimitSizeTotal = fabric.perfLimitSizeTotal,
          width = dims.width, height = dims.height,
          max = fabric.maxCacheSideLimit, min = fabric.minCacheSideLimit;
      if (width <= max && height <= max && width * height <= perfLimitSizeTotal) {
        if (width < min) {
          dims.width = min;
        }
        if (height < min) {
          dims.height = min;
        }
        return dims;
      }
      var ar = width / height, limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal),
          capValue = fabric.util.capValue,
          x = capValue(min, limitedDims.x, max),
          y = capValue(min, limitedDims.y, max);
      if (width > x) {
        dims.zoomX /= width / x;
        dims.width = x;
        dims.capped = true;
      }
      if (height > y) {
        dims.zoomY /= height / y;
        dims.height = y;
        dims.capped = true;
      }
      return dims;
    },

    /**
     * Return the dimension and the zoom level needed to create a cache canvas
     * big enough to host the object to be cached.
     * @private
     * @return {Object}.x width of object to be cached
     * @return {Object}.y height of object to be cached
     * @return {Object}.width width of canvas
     * @return {Object}.height height of canvas
     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache
     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache
     */
    _getCacheCanvasDimensions: function() {
      var objectScale = this.getTotalObjectScaling(),
          dim = this._getNonTransformedDimensions(),
          zoomX = objectScale.scaleX,
          zoomY = objectScale.scaleY,
          width = dim.x * zoomX,
          height = dim.y * zoomY;
      return {
        // for sure this ALIASING_LIMIT is slightly crating problem
        // in situation in wich the cache canvas gets an upper limit
        width: width + ALIASING_LIMIT,
        height: height + ALIASING_LIMIT,
        zoomX: zoomX,
        zoomY: zoomY,
        x: dim.x,
        y: dim.y
      };
    },

    /**
     * Update width and height of the canvas for cache
     * returns true or false if canvas needed resize.
     * @private
     * @return {Boolean} true if the canvas has been resized
     */
    _updateCacheCanvas: function() {
      var targetCanvas = this.canvas;
      if (this.noScaleCache && targetCanvas && targetCanvas._currentTransform) {
        var target = targetCanvas._currentTransform.target,
            action = targetCanvas._currentTransform.action;
        if (this === target && action.slice && action.slice(0, 5) === 'scale') {
          return false;
        }
      }
      var canvas = this._cacheCanvas,
          dims = this._limitCacheSize(this._getCacheCanvasDimensions()),
          minCacheSize = fabric.minCacheSideLimit,
          width = dims.width, height = dims.height, drawingWidth, drawingHeight,
          zoomX = dims.zoomX, zoomY = dims.zoomY,
          dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight,
          zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY,
          shouldRedraw = dimensionsChanged || zoomChanged,
          additionalWidth = 0, additionalHeight = 0, shouldResizeCanvas = false;
      if (dimensionsChanged) {
        var canvasWidth = this._cacheCanvas.width,
            canvasHeight = this._cacheCanvas.height,
            sizeGrowing = width > canvasWidth || height > canvasHeight,
            sizeShrinking = (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) &&
              canvasWidth > minCacheSize && canvasHeight > minCacheSize;
        shouldResizeCanvas = sizeGrowing || sizeShrinking;
        if (sizeGrowing && !dims.capped && (width > minCacheSize || height > minCacheSize)) {
          additionalWidth = width * 0.1;
          additionalHeight = height * 0.1;
        }
      }
      if (shouldRedraw) {
        if (shouldResizeCanvas) {
          canvas.width = Math.ceil(width + additionalWidth);
          canvas.height = Math.ceil(height + additionalHeight);
        }
        else {
          this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);
          this._cacheContext.clearRect(0, 0, canvas.width, canvas.height);
        }
        drawingWidth = dims.x * zoomX / 2;
        drawingHeight = dims.y * zoomY / 2;
        this.cacheTranslationX = Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;
        this.cacheTranslationY = Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;
        this.cacheWidth = width;
        this.cacheHeight = height;
        this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);
        this._cacheContext.scale(zoomX, zoomY);
        this.zoomX = zoomX;
        this.zoomY = zoomY;
        return true;
      }
      return false;
    },

    /**
     * Sets object's properties from options
     * @param {Object} [options] Options object
     */
    setOptions: function(options) {
      this._setOptions(options);
      this._initGradient(options.fill, 'fill');
      this._initGradient(options.stroke, 'stroke');
      this._initClipping(options);
      this._initPattern(options.fill, 'fill');
      this._initPattern(options.stroke, 'stroke');
    },

    /**
     * Transforms context when rendering an object
     * @param {CanvasRenderingContext2D} ctx Context
     */
    transform: function(ctx) {
      var m;
      if (this.group && !this.group._transformDone) {
        m = this.calcTransformMatrix();
      }
      else {
        m = this.calcOwnMatrix();
      }
      ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);
    },

    /**
     * Returns an object representation of an instance
     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
     * @return {Object} Object representation of an instance
     */
    toObject: function(propertiesToInclude) {
      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,

          object = {
            type:                     this.type,
            version:                  fabric.version,
            originX:                  this.originX,
            originY:                  this.originY,
            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),
            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),
            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),
            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),
            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,
            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,
            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),
            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,
            strokeLineCap:            this.strokeLineCap,
            strokeDashOffset:         this.strokeDashOffset,
            strokeLineJoin:           this.strokeLineJoin,
            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),
            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),
            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),
            angle:                    toFixed(this.angle, NUM_FRACTION_DIGITS),
            flipX:                    this.flipX,
            flipY:                    this.flipY,
            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),
            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,
            visible:                  this.visible,
            clipTo:                   this.clipTo && String(this.clipTo),
            backgroundColor:          this.backgroundColor,
            fillRule:                 this.fillRule,
            paintFirst:               this.paintFirst,
            globalCompositeOperation: this.globalCompositeOperation,
            transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : null,
            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),
            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS),
          };

      if (this.clipPath) {
        object.clipPath = this.clipPath.toObject(propertiesToInclude);
        object.clipPath.inverted = this.clipPath.inverted;
        object.clipPath.absolutePositioned = this.clipPath.absolutePositioned;
      }

      fabric.util.populateWithProperties(this, object, propertiesToInclude);
      if (!this.includeDefaultValues) {
        object = this._removeDefaultValues(object);
      }

      return object;
    },

    /**
     * Returns (dataless) object representation of an instance
     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
     * @return {Object} Object representation of an instance
     */
    toDatalessObject: function(propertiesToInclude) {
      // will be overwritten by subclasses
      return this.toObject(propertiesToInclude);
    },

    /**
     * @private
     * @param {Object} object
     */
    _removeDefaultValues: function(object) {
      var prototype = fabric.util.getKlass(object.type).prototype,
          stateProperties = prototype.stateProperties;
      stateProperties.forEach(function(prop) {
        if (object[prop] === prototype[prop]) {
          delete object[prop];
        }
        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&
                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';

        // basically a check for [] === []
        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {
          delete object[prop];
        }
      });

      return object;
    },

    /**
     * Returns a string representation of an instance
     * @return {String}
     */
    toString: function() {
      return '#<fabric.' + capitalize(this.type) + '>';
    },

    /**
     * Return the object scale factor counting also the group scaling
     * @return {Object} object with scaleX and scaleY properties
     */
    getObjectScaling: function() {
      var scaleX = this.scaleX, scaleY = this.scaleY;
      if (this.group) {
        var scaling = this.group.getObjectScaling();
        scaleX *= scaling.scaleX;
        scaleY *= scaling.scaleY;
      }
      return { scaleX: scaleX, scaleY: scaleY };
    },

    /**
     * Return the object scale factor counting also the group scaling, zoom and retina
     * @return {Object} object with scaleX and scaleY properties
     */
    getTotalObjectScaling: function() {
      var scale = this.getObjectScaling(), scaleX = scale.scaleX, scaleY = scale.scaleY;
      if (this.canvas) {
        var zoom = this.canvas.getZoom();
        var retina = this.canvas.getRetinaScaling();
        scaleX *= zoom * retina;
        scaleY *= zoom * retina;
      }
      return { scaleX: scaleX, scaleY: scaleY };
    },

    /**
     * Return the object opacity counting also the group property
     * @return {Number}
     */
    getObjectOpacity: function() {
      var opacity = this.opacity;
      if (this.group) {
        opacity *= this.group.getObjectOpacity();
      }
      return opacity;
    },

    /**
     * @private
     * @param {String} key
     * @param {*} value
     * @return {fabric.Object} thisArg
     */
    _set: function(key, value) {
      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY'),
          isChanged = this[key] !== value, groupNeedsUpdate = false;

      if (shouldConstrainValue) {
        value = this._constrainScale(value);
      }
      if (key === 'scaleX' && value < 0) {
        this.flipX = !this.flipX;
        value *= -1;
      }
      else if (key === 'scaleY' && value < 0) {
        this.flipY = !this.flipY;
        value *= -1;
      }
      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {
        value = new fabric.Shadow(value);
      }
      else if (key === 'dirty' && this.group) {
        this.group.set('dirty', value);
      }

      this[key] = value;

      if (isChanged) {
        groupNeedsUpdate = this.group && this.group.isOnACache();
        if (this.cacheProperties.indexOf(key) > -1) {
          this.dirty = true;
          groupNeedsUpdate && this.group.set('dirty', true);
        }
        else if (groupNeedsUpdate && this.stateProperties.indexOf(key) > -1) {
          this.group.set('dirty', true);
        }
      }

      return this;
    },

    /**
     * This callback function is called by the parent group of an object every
     * time a non-delegated property changes on the group. It is passed the key
     * and value as parameters. Not adding in this function's signature to avoid
     * Travis build error about unused variables.
     */
    setOnGroup: function() {
      // implemented by sub-classes, as needed.
    },

    /**
     * Retrieves viewportTransform from Object's canvas if possible
     * @method getViewportTransform
     * @memberOf fabric.Object.prototype
     * @return {Array}
     */
    getViewportTransform: function() {
      if (this.canvas && this.canvas.viewportTransform) {
        return this.canvas.viewportTransform;
      }
      return fabric.iMatrix.concat();
    },

    /*
     * @private
     * return if the object would be visible in rendering
     * @memberOf fabric.Object.prototype
     * @return {Boolean}
     */
    isNotVisible: function() {
      return this.opacity === 0 ||
        (this.width === 0 && this.height === 0 && this.strokeWidth === 0) ||
        !this.visible;
    },

    /**
     * Renders an object on a specified context
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    render: function(ctx) {
      // do not render if width/height are zeros or object is not visible
      if (this.isNotVisible()) {
        return;
      }
      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {
        return;
      }
      ctx.save();
      this._setupCompositeOperation(ctx);
      this.drawSelectionBackground(ctx);
      this.transform(ctx);
      this._setOpacity(ctx);
      this._setShadow(ctx, this);
      if (this.transformMatrix) {
        ctx.transform.apply(ctx, this.transformMatrix);
      }
      this.clipTo && fabric.util.clipContext(this, ctx);
      if (this.shouldCache()) {
        this.renderCache();
        this.drawCacheOnCanvas(ctx);
      }
      else {
        this._removeCacheCanvas();
        this.dirty = false;
        this.drawObject(ctx);
        if (this.objectCaching && this.statefullCache) {
          this.saveState({ propertySet: 'cacheProperties' });
        }
      }
      this.clipTo && ctx.restore();
      ctx.restore();
    },

    renderCache: function(options) {
      options = options || {};
      if (!this._cacheCanvas) {
        this._createCacheCanvas();
      }
      if (this.isCacheDirty()) {
        this.statefullCache && this.saveState({ propertySet: 'cacheProperties' });
        this.drawObject(this._cacheContext, options.forClipping);
        this.dirty = false;
      }
    },

    /**
     * Remove cacheCanvas and its dimensions from the objects
     */
    _removeCacheCanvas: function() {
      this._cacheCanvas = null;
      this.cacheWidth = 0;
      this.cacheHeight = 0;
    },

    /**
     * When set to `true`, force the object to have its own cache, even if it is inside a group
     * it may be needed when your object behave in a particular way on the cache and always needs
     * its own isolated canvas to render correctly.
     * Created to be overridden
     * since 1.7.12
     * @returns false
     */
    needsItsOwnCache: function() {
      if (this.paintFirst === 'stroke' && typeof this.shadow === 'object') {
        return true;
      }
      if (this.clipPath) {
        return true;
      }
      return false;
    },

    /**
     * Decide if the object should cache or not. Create its own cache level
     * objectCaching is a global flag, wins over everything
     * needsItsOwnCache should be used when the object drawing method requires
     * a cache step. None of the fabric classes requires it.
     * Generally you do not cache objects in groups because the group outside is cached.
     * @return {Boolean}
     */
    shouldCache: function() {
      this.ownCaching = this.objectCaching &&
      (!this.group || this.needsItsOwnCache() || !this.group.isOnACache());
      return this.ownCaching;
    },

    /**
     * Check if this object or a child object will cast a shadow
     * used by Group.shouldCache to know if child has a shadow recursively
     * @return {Boolean}
     */
    willDrawShadow: function() {
      return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);
    },

    /**
     * Execute the drawing operation for an object clipPath
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    drawClipPathOnCache: function(ctx) {
      var path = this.clipPath;
      ctx.save();
      // DEBUG: uncomment this line, comment the following
      // ctx.globalAlpha = 0.4
      if (path.inverted) {
        ctx.globalCompositeOperation = 'destination-out';
      }
      else {
        ctx.globalCompositeOperation = 'destination-in';
      }
      //ctx.scale(1 / 2, 1 / 2);
      if (path.absolutePositioned) {
        var m = fabric.util.invertTransform(this.calcTransformMatrix());
        ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);
      }
      path.transform(ctx);
      ctx.scale(1 / path.zoomX, 1 / path.zoomY);
      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);
      ctx.restore();
    },

    /**
     * Execute the drawing operation for an object on a specified context
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    drawObject: function(ctx, forClipping) {
      var originalFill = this.fill, originalStroke = this.stroke;
      if (forClipping) {
        this.fill = 'black';
        this.stroke = '';
        this._setClippingProperties(ctx);
      }
      else {
        this._renderBackground(ctx);
        this._setStrokeStyles(ctx, this);
        this._setFillStyles(ctx, this);
      }
      this._render(ctx);
      this._drawClipPath(ctx);
      this.fill = originalFill;
      this.stroke = originalStroke;
    },

    _drawClipPath: function(ctx) {
      var path = this.clipPath;
      if (!path) { return; }
      // needed to setup a couple of variables
      // path canvas gets overridden with this one.
      // TODO find a better solution?
      path.canvas = this.canvas;
      path.shouldCache();
      path._transformDone = true;
      path.renderCache({ forClipping: true });
      this.drawClipPathOnCache(ctx);
    },

    /**
     * Paint the cached copy of the object on the target context.
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    drawCacheOnCanvas: function(ctx) {
      ctx.scale(1 / this.zoomX, 1 / this.zoomY);
      ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);
    },

    /**
     * Check if cache is dirty
     * @param {Boolean} skipCanvas skip canvas checks because this object is painted
     * on parent canvas.
     */
    isCacheDirty: function(skipCanvas) {
      if (this.isNotVisible()) {
        return false;
      }
      if (this._cacheCanvas && !skipCanvas && this._updateCacheCanvas()) {
        // in this case the context is already cleared.
        return true;
      }
      else {
        if (this.dirty ||
          (this.clipPath && this.clipPath.absolutePositioned) ||
          (this.statefullCache && this.hasStateChanged('cacheProperties'))
        ) {
          if (this._cacheCanvas && !skipCanvas) {
            var width = this.cacheWidth / this.zoomX;
            var height = this.cacheHeight / this.zoomY;
            this._cacheContext.clearRect(-width / 2, -height / 2, width, height);
          }
          return true;
        }
      }
      return false;
    },

    /**
     * Draws a background for the object big as its untransformed dimensions
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    _renderBackground: function(ctx) {
      if (!this.backgroundColor) {
        return;
      }
      var dim = this._getNonTransformedDimensions();
      ctx.fillStyle = this.backgroundColor;

      ctx.fillRect(
        -dim.x / 2,
        -dim.y / 2,
        dim.x,
        dim.y
      );
      // if there is background color no other shadows
      // should be casted
      this._removeShadow(ctx);
    },

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    _setOpacity: function(ctx) {
      if (this.group && !this.group._transformDone) {
        ctx.globalAlpha = this.getObjectOpacity();
      }
      else {
        ctx.globalAlpha *= this.opacity;
      }
    },

    _setStrokeStyles: function(ctx, decl) {
      if (decl.stroke) {
        ctx.lineWidth = decl.strokeWidth;
        ctx.lineCap = decl.strokeLineCap;
        ctx.lineDashOffset = decl.strokeDashOffset;
        ctx.lineJoin = decl.strokeLineJoin;
        ctx.miterLimit = decl.strokeMiterLimit;
        ctx.strokeStyle = decl.stroke.toLive
          ? decl.stroke.toLive(ctx, this)
          : decl.stroke;
      }
    },

    _setFillStyles: function(ctx, decl) {
      if (decl.fill) {
        ctx.fillStyle = decl.fill.toLive
          ? decl.fill.toLive(ctx, this)
          : decl.fill;
      }
    },

    _setClippingProperties: function(ctx) {
      ctx.globalAlpha = 1;
      ctx.strokeStyle = 'transparent';
      ctx.fillStyle = '#000000';
    },

    /**
     * @private
     * Sets line dash
     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on
     * @param {Array} dashArray array representing dashes
     * @param {Function} alternative function to call if browser does not support lineDash
     */
    _setLineDash: function(ctx, dashArray, alternative) {
      if (!dashArray) {
        return;
      }
      // Spec requires the concatenation of two copies the dash list when the number of elements is odd
      if (1 & dashArray.length) {
        dashArray.push.apply(dashArray, dashArray);
      }
      if (supportsLineDash) {
        ctx.setLineDash(dashArray);
      }
      else {
        alternative && alternative(ctx);
      }
      if (this.strokeUniform) {
        ctx.setLineDash(ctx.getLineDash().map(function(value) { return value * ctx.lineWidth; }));
      }
    },

    /**
     * Renders controls and borders for the object
     * @param {CanvasRenderingContext2D} ctx Context to render on
     * @param {Object} [styleOverride] properties to override the object style
     */
    _renderControls: function(ctx, styleOverride) {
      var vpt = this.getViewportTransform(),
          matrix = this.calcTransformMatrix(),
          options, drawBorders, drawControls;
      styleOverride = styleOverride || { };
      drawBorders = typeof styleOverride.hasBorders !== 'undefined' ? styleOverride.hasBorders : this.hasBorders;
      drawControls = typeof styleOverride.hasControls !== 'undefined' ? styleOverride.hasControls : this.hasControls;
      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);
      options = fabric.util.qrDecompose(matrix);
      ctx.save();
      ctx.translate(options.translateX, options.translateY);
      ctx.lineWidth = 1 * this.borderScaleFactor;
      if (!this.group) {
        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;
      }
      if (styleOverride.forActiveSelection) {
        ctx.rotate(degreesToRadians(options.angle));
        drawBorders && this.drawBordersInGroup(ctx, options, styleOverride);
      }
      else {
        ctx.rotate(degreesToRadians(this.angle));
        drawBorders && this.drawBorders(ctx, styleOverride);
      }
      drawControls && this.drawControls(ctx, styleOverride);
      ctx.restore();
    },

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    _setShadow: function(ctx) {
      if (!this.shadow) {
        return;
      }

      var shadow = this.shadow, canvas = this.canvas,
          multX = (canvas && canvas.viewportTransform[0]) || 1,
          multY = (canvas && canvas.viewportTransform[3]) || 1,
          scaling = this.getObjectScaling();
      if (canvas && canvas._isRetinaScaling()) {
        multX *= fabric.devicePixelRatio;
        multY *= fabric.devicePixelRatio;
      }
      ctx.shadowColor = shadow.color;
      ctx.shadowBlur = shadow.blur * fabric.browserShadowBlurConstant *
        (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;
      ctx.shadowOffsetX = shadow.offsetX * multX * scaling.scaleX;
      ctx.shadowOffsetY = shadow.offsetY * multY * scaling.scaleY;
    },

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    _removeShadow: function(ctx) {
      if (!this.shadow) {
        return;
      }

      ctx.shadowColor = '';
      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;
    },

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     * @param {Object} filler fabric.Pattern or fabric.Gradient
     * @return {Object} offset.offsetX offset for text rendering
     * @return {Object} offset.offsetY offset for text rendering
     */
    _applyPatternGradientTransform: function(ctx, filler) {
      if (!filler || !filler.toLive) {
        return { offsetX: 0, offsetY: 0 };
      }
      var t = filler.gradientTransform || filler.patternTransform;
      var offsetX = -this.width / 2 + filler.offsetX || 0,
          offsetY = -this.height / 2 + filler.offsetY || 0;
      ctx.translate(offsetX, offsetY);
      if (t) {
        ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);
      }
      return { offsetX: offsetX, offsetY: offsetY };
    },

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    _renderPaintInOrder: function(ctx) {
      if (this.paintFirst === 'stroke') {
        this._renderStroke(ctx);
        this._renderFill(ctx);
      }
      else {
        this._renderFill(ctx);
        this._renderStroke(ctx);
      }
    },

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    _renderFill: function(ctx) {
      if (!this.fill) {
        return;
      }

      ctx.save();
      this._applyPatternGradientTransform(ctx, this.fill);
      if (this.fillRule === 'evenodd') {
        ctx.fill('evenodd');
      }
      else {
        ctx.fill();
      }
      ctx.restore();
    },

    _renderStroke: function(ctx) {
      if (!this.stroke || this.strokeWidth === 0) {
        return;
      }

      if (this.shadow && !this.shadow.affectStroke) {
        this._removeShadow(ctx);
      }

      ctx.save();
      if (this.strokeUniform) {
        ctx.scale(1 / this.scaleX, 1 / this.scaleY);
      }
      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);
      this._applyPatternGradientTransform(ctx, this.stroke);
      ctx.stroke();
      ctx.restore();
    },

    /**
     * This function is an helper for svg import. it returns the center of the object in the svg
     * untransformed coordinates
     * @private
     * @return {Object} center point from element coordinates
     */
    _findCenterFromElement: function() {
      return { x: this.left + this.width / 2, y: this.top + this.height / 2 };
    },

    /**
     * This function is an helper for svg import. it decompose the transformMatrix
     * and assign properties to object.
     * untransformed coordinates
     * @private
     * @chainable
     */
    _assignTransformMatrixProps: function() {
      if (this.transformMatrix) {
        var options = fabric.util.qrDecompose(this.transformMatrix);
        this.flipX = false;
        this.flipY = false;
        this.set('scaleX', options.scaleX);
        this.set('scaleY', options.scaleY);
        this.angle = options.angle;
        this.skewX = options.skewX;
        this.skewY = 0;
      }
    },

    /**
     * This function is an helper for svg import. it removes the transform matrix
     * and set to object properties that fabricjs can handle
     * @private
     * @param {Object} preserveAspectRatioOptions
     * @return {thisArg}
     */
    _removeTransformMatrix: function(preserveAspectRatioOptions) {
      var center = this._findCenterFromElement();
      if (this.transformMatrix) {
        this._assignTransformMatrixProps();
        center = fabric.util.transformPoint(center, this.transformMatrix);
      }
      this.transformMatrix = null;
      if (preserveAspectRatioOptions) {
        this.scaleX *= preserveAspectRatioOptions.scaleX;
        this.scaleY *= preserveAspectRatioOptions.scaleY;
        this.cropX = preserveAspectRatioOptions.cropX;
        this.cropY = preserveAspectRatioOptions.cropY;
        center.x += preserveAspectRatioOptions.offsetLeft;
        center.y += preserveAspectRatioOptions.offsetTop;
        this.width = preserveAspectRatioOptions.width;
        this.height = preserveAspectRatioOptions.height;
      }
      this.setPositionByOrigin(center, 'center', 'center');
    },

    /**
     * Clones an instance, using a callback method will work for every object.
     * @param {Function} callback Callback is invoked with a clone as a first argument
     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
     */
    clone: function(callback, propertiesToInclude) {
      var objectForm = this.toObject(propertiesToInclude);
      if (this.constructor.fromObject) {
        this.constructor.fromObject(objectForm, callback);
      }
      else {
        fabric.Object._fromObject('Object', objectForm, callback);
      }
    },

    /**
     * Creates an instance of fabric.Image out of an object
     * could make use of both toDataUrl or toCanvasElement.
     * @param {Function} callback callback, invoked with an instance as a first argument
     * @param {Object} [options] for clone as image, passed to toDataURL
     * @param {String} [options.format=png] The format of the output image. Either "jpeg" or "png"
     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.
     * @param {Number} [options.multiplier=1] Multiplier to scale by
     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14
     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14
     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14
     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14
     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4
     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4
     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2
     * @return {fabric.Object} thisArg
     */
    cloneAsImage: function(callback, options) {
      var canvasEl = this.toCanvasElement(options);
      if (callback) {
        callback(new fabric.Image(canvasEl));
      }
      return this;
    },

    /**
     * Converts an object into a HTMLCanvas element
     * @param {Object} options Options object
     * @param {Number} [options.multiplier=1] Multiplier to scale by
     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14
     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14
     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14
     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14
     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4
     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4
     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2
     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format
     */
    toCanvasElement: function(options) {
      options || (options = { });

      var utils = fabric.util, origParams = utils.saveObjectTransform(this),
          originalShadow = this.shadow, abs = Math.abs,
          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? fabric.devicePixelRatio : 1);

      if (options.withoutTransform) {
        utils.resetObjectTransform(this);
      }
      if (options.withoutShadow) {
        this.shadow = null;
      }

      var el = fabric.util.createCanvasElement(),
          // skip canvas zoom and calculate with setCoords now.
          boundingRect = this.getBoundingRect(true, true),
          shadow = this.shadow, scaling,
          shadowOffset = { x: 0, y: 0 }, shadowBlur;

      if (shadow) {
        shadowBlur = shadow.blur;
        scaling = this.getObjectScaling();
        shadowOffset.x = 2 * Math.round((abs(shadow.offsetX) + shadowBlur) * abs(scaling.scaleX));
        shadowOffset.y = 2 * Math.round((abs(shadow.offsetY) + shadowBlur) * abs(scaling.scaleY));
      }
      el.width = boundingRect.width + shadowOffset.x;
      el.height = boundingRect.height + shadowOffset.y;
      el.width += el.width % 2 ? 2 - el.width % 2 : 0;
      el.height += el.height % 2 ? 2 - el.height % 2 : 0;
      var canvas = new fabric.StaticCanvas(el, {
        enableRetinaScaling: false,
        renderOnAddRemove: false,
        skipOffscreen: false,
      });
      if (options.format === 'jpeg') {
        canvas.backgroundColor = '#fff';
      }
      this.setPositionByOrigin(new fabric.Point(canvas.width / 2, canvas.height / 2), 'center', 'center');

      var originalCanvas = this.canvas;
      canvas.add(this);
      var canvasEl = canvas.toCanvasElement(multiplier || 1, options);
      this.shadow = originalShadow;
      this.canvas = originalCanvas;
      this.set(origParams).setCoords();
      // canvas.dispose will call image.dispose that will nullify the elements
      // since this canvas is a simple element for the process, we remove references
      // to objects in this way in order to avoid object trashing.
      canvas._objects = [];
      canvas.dispose();
      canvas = null;

      return canvasEl;
    },

    /**
     * Converts an object into a data-url-like string
     * @param {Object} options Options object
     * @param {String} [options.format=png] The format of the output image. Either "jpeg" or "png"
     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.
     * @param {Number} [options.multiplier=1] Multiplier to scale by
     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14
     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14
     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14
     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14
     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4
     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4
     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2
     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format
     */
    toDataURL: function(options) {
      options || (options = { });
      return fabric.util.toDataURL(this.toCanvasElement(options), options.format || 'png', options.quality || 1);
    },

    /**
     * Returns true if specified type is identical to the type of an instance
     * @param {String} type Type to check against
     * @return {Boolean}
     */
    isType: function(type) {
      return this.type === type;
    },

    /**
     * Returns complexity of an instance
     * @return {Number} complexity of this instance (is 1 unless subclassed)
     */
    complexity: function() {
      return 1;
    },

    /**
     * Returns a JSON representation of an instance
     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
     * @return {Object} JSON
     */
    toJSON: function(propertiesToInclude) {
      // delegate, not alias
      return this.toObject(propertiesToInclude);
    },

    /**
     * Sets gradient (fill or stroke) of an object
     * <b>Backwards incompatibility note:</b> This method was named "setGradientFill" until v1.1.0
     * @param {String} property Property name 'stroke' or 'fill'
     * @param {Object} [options] Options object
     * @param {String} [options.type] Type of gradient 'radial' or 'linear'
     * @param {Number} [options.x1=0] x-coordinate of start point
     * @param {Number} [options.y1=0] y-coordinate of start point
     * @param {Number} [options.x2=0] x-coordinate of end point
     * @param {Number} [options.y2=0] y-coordinate of end point
     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)
     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)
     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}
     * @param {Object} [options.gradientTransform] transformMatrix for gradient
     * @return {fabric.Object} thisArg
     * @chainable
     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}
     * @example <caption>Set linear gradient</caption>
     * object.setGradient('fill', {
     *   type: 'linear',
     *   x1: -object.width / 2,
     *   y1: 0,
     *   x2: object.width / 2,
     *   y2: 0,
     *   colorStops: {
     *     0: 'red',
     *     0.5: '#005555',
     *     1: 'rgba(0,0,255,0.5)'
     *   }
     * });
     * canvas.renderAll();
     * @example <caption>Set radial gradient</caption>
     * object.setGradient('fill', {
     *   type: 'radial',
     *   x1: 0,
     *   y1: 0,
     *   x2: 0,
     *   y2: 0,
     *   r1: object.width / 2,
     *   r2: 10,
     *   colorStops: {
     *     0: 'red',
     *     0.5: '#005555',
     *     1: 'rgba(0,0,255,0.5)'
     *   }
     * });
     * canvas.renderAll();
     */
    setGradient: function(property, options) {
      options || (options = { });

      var gradient = { colorStops: [] };

      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');
      gradient.coords = {
        x1: options.x1,
        y1: options.y1,
        x2: options.x2,
        y2: options.y2
      };

      if (options.r1 || options.r2) {
        gradient.coords.r1 = options.r1;
        gradient.coords.r2 = options.r2;
      }

      gradient.gradientTransform = options.gradientTransform;
      fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);

      return this.set(property, fabric.Gradient.forObject(this, gradient));
    },

    /**
     * Sets pattern fill of an object
     * @param {Object} options Options object
     * @param {(String|HTMLImageElement)} options.source Pattern source
     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)
     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner
     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner
     * @param {Function} [callback] Callback to invoke when image set as a pattern
     * @return {fabric.Object} thisArg
     * @chainable
     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}
     * @example <caption>Set pattern</caption>
     * object.setPatternFill({
     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',
     *   repeat: 'repeat'
     * },canvas.renderAll.bind(canvas));
     */
    setPatternFill: function(options, callback) {
      return this.set('fill', new fabric.Pattern(options, callback));
    },

    /**
     * Sets {@link fabric.Object#shadow|shadow} of an object
     * @param {Object|String} [options] Options object or string (e.g. "2px 2px 10px rgba(0,0,0,0.2)")
     * @param {String} [options.color=rgb(0,0,0)] Shadow color
     * @param {Number} [options.blur=0] Shadow blur
     * @param {Number} [options.offsetX=0] Shadow horizontal offset
     * @param {Number} [options.offsetY=0] Shadow vertical offset
     * @return {fabric.Object} thisArg
     * @chainable
     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}
     * @example <caption>Set shadow with string notation</caption>
     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');
     * canvas.renderAll();
     * @example <caption>Set shadow with object notation</caption>
     * object.setShadow({
     *   color: 'red',
     *   blur: 10,
     *   offsetX: 20,
     *   offsetY: 20
     * });
     * canvas.renderAll();
     */
    setShadow: function(options) {
      return this.set('shadow', options ? new fabric.Shadow(options) : null);
    },

    /**
     * Sets "color" of an instance (alias of `set('fill', &hellip;)`)
     * @param {String} color Color value
     * @return {fabric.Object} thisArg
     * @chainable
     */
    setColor: function(color) {
      this.set('fill', color);
      return this;
    },

    /**
     * Sets "angle" of an instance with centered rotation
     * @param {Number} angle Angle value (in degrees)
     * @return {fabric.Object} thisArg
     * @chainable
     */
    rotate: function(angle) {
      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;

      if (shouldCenterOrigin) {
        this._setOriginToCenter();
      }

      this.set('angle', angle);

      if (shouldCenterOrigin) {
        this._resetOrigin();
      }

      return this;
    },

    /**
     * Centers object horizontally on canvas to which it was added last.
     * You might need to call `setCoords` on an object after centering, to update controls area.
     * @return {fabric.Object} thisArg
     * @chainable
     */
    centerH: function () {
      this.canvas && this.canvas.centerObjectH(this);
      return this;
    },

    /**
     * Centers object horizontally on current viewport of canvas to which it was added last.
     * You might need to call `setCoords` on an object after centering, to update controls area.
     * @return {fabric.Object} thisArg
     * @chainable
     */
    viewportCenterH: function () {
      this.canvas && this.canvas.viewportCenterObjectH(this);
      return this;
    },

    /**
     * Centers object vertically on canvas to which it was added last.
     * You might need to call `setCoords` on an object after centering, to update controls area.
     * @return {fabric.Object} thisArg
     * @chainable
     */
    centerV: function () {
      this.canvas && this.canvas.centerObjectV(this);
      return this;
    },

    /**
     * Centers object vertically on current viewport of canvas to which it was added last.
     * You might need to call `setCoords` on an object after centering, to update controls area.
     * @return {fabric.Object} thisArg
     * @chainable
     */
    viewportCenterV: function () {
      this.canvas && this.canvas.viewportCenterObjectV(this);
      return this;
    },

    /**
     * Centers object vertically and horizontally on canvas to which is was added last
     * You might need to call `setCoords` on an object after centering, to update controls area.
     * @return {fabric.Object} thisArg
     * @chainable
     */
    center: function () {
      this.canvas && this.canvas.centerObject(this);
      return this;
    },

    /**
     * Centers object on current viewport of canvas to which it was added last.
     * You might need to call `setCoords` on an object after centering, to update controls area.
     * @return {fabric.Object} thisArg
     * @chainable
     */
    viewportCenter: function () {
      this.canvas && this.canvas.viewportCenterObject(this);
      return this;
    },

    /**
     * Returns coordinates of a pointer relative to an object
     * @param {Event} e Event to operate upon
     * @param {Object} [pointer] Pointer to operate upon (instead of event)
     * @return {Object} Coordinates of a pointer (x, y)
     */
    getLocalPointer: function(e, pointer) {
      pointer = pointer || this.canvas.getPointer(e);
      var pClicked = new fabric.Point(pointer.x, pointer.y),
          objectLeftTop = this._getLeftTopCoords();
      if (this.angle) {
        pClicked = fabric.util.rotatePoint(
          pClicked, objectLeftTop, degreesToRadians(-this.angle));
      }
      return {
        x: pClicked.x - objectLeftTop.x,
        y: pClicked.y - objectLeftTop.y
      };
    },

    /**
     * Sets canvas globalCompositeOperation for specific object
     * custom composition operation for the particular object can be specified using globalCompositeOperation property
     * @param {CanvasRenderingContext2D} ctx Rendering canvas context
     */
    _setupCompositeOperation: function (ctx) {
      if (this.globalCompositeOperation) {
        ctx.globalCompositeOperation = this.globalCompositeOperation;
      }
    }
  });

  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Object);

  extend(fabric.Object.prototype, fabric.Observable);

  /**
   * Defines the number of fraction digits to use when serializing object values.
   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.
   * @static
   * @memberOf fabric.Object
   * @constant
   * @type Number
   */
  fabric.Object.NUM_FRACTION_DIGITS = 2;

  fabric.Object._fromObject = function(className, object, callback, extraParam) {
    var klass = fabric[className];
    object = clone(object, true);
    fabric.util.enlivenPatterns([object.fill, object.stroke], function(patterns) {
      if (typeof patterns[0] !== 'undefined') {
        object.fill = patterns[0];
      }
      if (typeof patterns[1] !== 'undefined') {
        object.stroke = patterns[1];
      }
      fabric.util.enlivenObjects([object.clipPath], function(enlivedProps) {
        object.clipPath = enlivedProps[0];
        var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);
        callback && callback(instance);
      });
    });
  };

  /**
   * Unique id used internally when creating SVG elements
   * @static
   * @memberOf fabric.Object
   * @type Number
   */
  fabric.Object.__uid = 0;

})( true ? exports : undefined);


(function() {

  var degreesToRadians = fabric.util.degreesToRadians,
      originXOffset = {
        left: -0.5,
        center: 0,
        right: 0.5
      },
      originYOffset = {
        top: -0.5,
        center: 0,
        bottom: 0.5
      };

  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {

    /**
     * Translates the coordinates from a set of origin to another (based on the object's dimensions)
     * @param {fabric.Point} point The point which corresponds to the originX and originY params
     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'
     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'
     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'
     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'
     * @return {fabric.Point}
     */
    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {
      var x = point.x,
          y = point.y,
          offsetX, offsetY, dim;

      if (typeof fromOriginX === 'string') {
        fromOriginX = originXOffset[fromOriginX];
      }
      else {
        fromOriginX -= 0.5;
      }

      if (typeof toOriginX === 'string') {
        toOriginX = originXOffset[toOriginX];
      }
      else {
        toOriginX -= 0.5;
      }

      offsetX = toOriginX - fromOriginX;

      if (typeof fromOriginY === 'string') {
        fromOriginY = originYOffset[fromOriginY];
      }
      else {
        fromOriginY -= 0.5;
      }

      if (typeof toOriginY === 'string') {
        toOriginY = originYOffset[toOriginY];
      }
      else {
        toOriginY -= 0.5;
      }

      offsetY = toOriginY - fromOriginY;

      if (offsetX || offsetY) {
        dim = this._getTransformedDimensions();
        x = point.x + offsetX * dim.x;
        y = point.y + offsetY * dim.y;
      }

      return new fabric.Point(x, y);
    },

    /**
     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)
     * @param {fabric.Point} point The point which corresponds to the originX and originY params
     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'
     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'
     * @return {fabric.Point}
     */
    translateToCenterPoint: function(point, originX, originY) {
      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');
      if (this.angle) {
        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));
      }
      return p;
    },

    /**
     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)
     * @param {fabric.Point} center The point which corresponds to center of the object
     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'
     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'
     * @return {fabric.Point}
     */
    translateToOriginPoint: function(center, originX, originY) {
      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);
      if (this.angle) {
        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));
      }
      return p;
    },

    /**
     * Returns the real center coordinates of the object
     * @return {fabric.Point}
     */
    getCenterPoint: function() {
      var leftTop = new fabric.Point(this.left, this.top);
      return this.translateToCenterPoint(leftTop, this.originX, this.originY);
    },

    /**
     * Returns the coordinates of the object based on center coordinates
     * @param {fabric.Point} point The point which corresponds to the originX and originY params
     * @return {fabric.Point}
     */
    // getOriginPoint: function(center) {
    //   return this.translateToOriginPoint(center, this.originX, this.originY);
    // },

    /**
     * Returns the coordinates of the object as if it has a different origin
     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'
     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'
     * @return {fabric.Point}
     */
    getPointByOrigin: function(originX, originY) {
      var center = this.getCenterPoint();
      return this.translateToOriginPoint(center, originX, originY);
    },

    /**
     * Returns the point in local coordinates
     * @param {fabric.Point} point The point relative to the global coordinate system
     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'
     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'
     * @return {fabric.Point}
     */
    toLocalPoint: function(point, originX, originY) {
      var center = this.getCenterPoint(),
          p, p2;

      if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {
        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);
      }
      else {
        p = new fabric.Point(this.left, this.top);
      }

      p2 = new fabric.Point(point.x, point.y);
      if (this.angle) {
        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));
      }
      return p2.subtractEquals(p);
    },

    /**
     * Returns the point in global coordinates
     * @param {fabric.Point} The point relative to the local coordinate system
     * @return {fabric.Point}
     */
    // toGlobalPoint: function(point) {
    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));
    // },

    /**
     * Sets the position of the object taking into consideration the object's origin
     * @param {fabric.Point} pos The new position of the object
     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'
     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'
     * @return {void}
     */
    setPositionByOrigin: function(pos, originX, originY) {
      var center = this.translateToCenterPoint(pos, originX, originY),
          position = this.translateToOriginPoint(center, this.originX, this.originY);
      this.set('left', position.x);
      this.set('top', position.y);
    },

    /**
     * @param {String} to One of 'left', 'center', 'right'
     */
    adjustPosition: function(to) {
      var angle = degreesToRadians(this.angle),
          hypotFull = this.getScaledWidth(),
          xFull = fabric.util.cos(angle) * hypotFull,
          yFull = fabric.util.sin(angle) * hypotFull,
          offsetFrom, offsetTo;

      //TODO: this function does not consider mixed situation like top, center.
      if (typeof this.originX === 'string') {
        offsetFrom = originXOffset[this.originX];
      }
      else {
        offsetFrom = this.originX - 0.5;
      }
      if (typeof to === 'string') {
        offsetTo = originXOffset[to];
      }
      else {
        offsetTo = to - 0.5;
      }
      this.left += xFull * (offsetTo - offsetFrom);
      this.top += yFull * (offsetTo - offsetFrom);
      this.setCoords();
      this.originX = to;
    },

    /**
     * Sets the origin/position of the object to it's center point
     * @private
     * @return {void}
     */
    _setOriginToCenter: function() {
      this._originalOriginX = this.originX;
      this._originalOriginY = this.originY;

      var center = this.getCenterPoint();

      this.originX = 'center';
      this.originY = 'center';

      this.left = center.x;
      this.top = center.y;
    },

    /**
     * Resets the origin/position of the object to it's original origin
     * @private
     * @return {void}
     */
    _resetOrigin: function() {
      var originPoint = this.translateToOriginPoint(
        this.getCenterPoint(),
        this._originalOriginX,
        this._originalOriginY);

      this.originX = this._originalOriginX;
      this.originY = this._originalOriginY;

      this.left = originPoint.x;
      this.top = originPoint.y;

      this._originalOriginX = null;
      this._originalOriginY = null;
    },

    /**
     * @private
     */
    _getLeftTopCoords: function() {
      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');
    },
  });

})();


(function() {

  function getCoords(coords) {
    return [
      new fabric.Point(coords.tl.x, coords.tl.y),
      new fabric.Point(coords.tr.x, coords.tr.y),
      new fabric.Point(coords.br.x, coords.br.y),
      new fabric.Point(coords.bl.x, coords.bl.y)
    ];
  }

  var degreesToRadians = fabric.util.degreesToRadians,
      multiplyMatrices = fabric.util.multiplyTransformMatrices,
      transformPoint = fabric.util.transformPoint;

  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {

    /**
     * Describe object's corner position in canvas element coordinates.
     * properties are tl,mt,tr,ml,mr,bl,mb,br,mtr for the main controls.
     * each property is an object with x, y and corner.
     * The `corner` property contains in a similar manner the 4 points of the
     * interactive area of the corner.
     * The coordinates depends from this properties: width, height, scaleX, scaleY
     * skewX, skewY, angle, strokeWidth, viewportTransform, top, left, padding.
     * The coordinates get updated with @method setCoords.
     * You can calculate them without updating with @method calcCoords;
     * @memberOf fabric.Object.prototype
     */
    oCoords: null,

    /**
     * Describe object's corner position in canvas object absolute coordinates
     * properties are tl,tr,bl,br and describe the four main corner.
     * each property is an object with x, y, instance of Fabric.Point.
     * The coordinates depends from this properties: width, height, scaleX, scaleY
     * skewX, skewY, angle, strokeWidth, top, left.
     * Those coordinates are usefull to understand where an object is. They get updated
     * with oCoords but they do not need to be updated when zoom or panning change.
     * The coordinates get updated with @method setCoords.
     * You can calculate them without updating with @method calcCoords(true);
     * @memberOf fabric.Object.prototype
     */
    aCoords: null,

    /**
     * storage for object transform matrix
     */
    ownMatrixCache: null,

    /**
     * storage for object full transform matrix
     */
    matrixCache: null,

    /**
     * return correct set of coordinates for intersection
     */
    getCoords: function(absolute, calculate) {
      if (!this.oCoords) {
        this.setCoords();
      }
      var coords = absolute ? this.aCoords : this.oCoords;
      return getCoords(calculate ? this.calcCoords(absolute) : coords);
    },

    /**
     * Checks if object intersects with an area formed by 2 points
     * @param {Object} pointTL top-left point of area
     * @param {Object} pointBR bottom-right point of area
     * @param {Boolean} [absolute] use coordinates without viewportTransform
     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords
     * @return {Boolean} true if object intersects with an area formed by 2 points
     */
    intersectsWithRect: function(pointTL, pointBR, absolute, calculate) {
      var coords = this.getCoords(absolute, calculate),
          intersection = fabric.Intersection.intersectPolygonRectangle(
            coords,
            pointTL,
            pointBR
          );
      return intersection.status === 'Intersection';
    },

    /**
     * Checks if object intersects with another object
     * @param {Object} other Object to test
     * @param {Boolean} [absolute] use coordinates without viewportTransform
     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords
     * @return {Boolean} true if object intersects with another object
     */
    intersectsWithObject: function(other, absolute, calculate) {
      var intersection = fabric.Intersection.intersectPolygonPolygon(
        this.getCoords(absolute, calculate),
        other.getCoords(absolute, calculate)
      );

      return intersection.status === 'Intersection'
        || other.isContainedWithinObject(this, absolute, calculate)
        || this.isContainedWithinObject(other, absolute, calculate);
    },

    /**
     * Checks if object is fully contained within area of another object
     * @param {Object} other Object to test
     * @param {Boolean} [absolute] use coordinates without viewportTransform
     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords
     * @return {Boolean} true if object is fully contained within area of another object
     */
    isContainedWithinObject: function(other, absolute, calculate) {
      var points = this.getCoords(absolute, calculate),
          i = 0, lines = other._getImageLines(
            calculate ? other.calcCoords(absolute) : absolute ? other.aCoords : other.oCoords
          );
      for (; i < 4; i++) {
        if (!other.containsPoint(points[i], lines)) {
          return false;
        }
      }
      return true;
    },

    /**
     * Checks if object is fully contained within area formed by 2 points
     * @param {Object} pointTL top-left point of area
     * @param {Object} pointBR bottom-right point of area
     * @param {Boolean} [absolute] use coordinates without viewportTransform
     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords
     * @return {Boolean} true if object is fully contained within area formed by 2 points
     */
    isContainedWithinRect: function(pointTL, pointBR, absolute, calculate) {
      var boundingRect = this.getBoundingRect(absolute, calculate);

      return (
        boundingRect.left >= pointTL.x &&
        boundingRect.left + boundingRect.width <= pointBR.x &&
        boundingRect.top >= pointTL.y &&
        boundingRect.top + boundingRect.height <= pointBR.y
      );
    },

    /**
     * Checks if point is inside the object
     * @param {fabric.Point} point Point to check against
     * @param {Object} [lines] object returned from @method _getImageLines
     * @param {Boolean} [absolute] use coordinates without viewportTransform
     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords
     * @return {Boolean} true if point is inside the object
     */
    containsPoint: function(point, lines, absolute, calculate) {
      var lines = lines || this._getImageLines(
            calculate ? this.calcCoords(absolute) : absolute ? this.aCoords : this.oCoords
          ),
          xPoints = this._findCrossPoints(point, lines);

      // if xPoints is odd then point is inside the object
      return (xPoints !== 0 && xPoints % 2 === 1);
    },

    /**
     * Checks if object is contained within the canvas with current viewportTransform
     * the check is done stopping at first point that appears on screen
     * @param {Boolean} [calculate] use coordinates of current position instead of .aCoords
     * @return {Boolean} true if object is fully or partially contained within canvas
     */
    isOnScreen: function(calculate) {
      if (!this.canvas) {
        return false;
      }
      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;
      var points = this.getCoords(true, calculate), point;
      for (var i = 0; i < 4; i++) {
        point = points[i];
        if (point.x <= pointBR.x && point.x >= pointTL.x && point.y <= pointBR.y && point.y >= pointTL.y) {
          return true;
        }
      }
      // no points on screen, check intersection with absolute coordinates
      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {
        return true;
      }
      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);
    },

    /**
     * Checks if the object contains the midpoint between canvas extremities
     * Does not make sense outside the context of isOnScreen and isPartiallyOnScreen
     * @private
     * @param {Fabric.Point} pointTL Top Left point
     * @param {Fabric.Point} pointBR Top Right point
     * @param {Boolean} calculate use coordinates of current position instead of .oCoords
     * @return {Boolean} true if the objects containe the point
     */
    _containsCenterOfCanvas: function(pointTL, pointBR, calculate) {
      // worst case scenario the object is so big that contains the screen
      var centerPoint = { x: (pointTL.x + pointBR.x) / 2, y: (pointTL.y + pointBR.y) / 2 };
      if (this.containsPoint(centerPoint, null, true, calculate)) {
        return true;
      }
      return false;
    },

    /**
     * Checks if object is partially contained within the canvas with current viewportTransform
     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords
     * @return {Boolean} true if object is partially contained within canvas
     */
    isPartiallyOnScreen: function(calculate) {
      if (!this.canvas) {
        return false;
      }
      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;
      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {
        return true;
      }
      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);
    },

    /**
     * Method that returns an object with the object edges in it, given the coordinates of the corners
     * @private
     * @param {Object} oCoords Coordinates of the object corners
     */
    _getImageLines: function(oCoords) {
      return {
        topline: {
          o: oCoords.tl,
          d: oCoords.tr
        },
        rightline: {
          o: oCoords.tr,
          d: oCoords.br
        },
        bottomline: {
          o: oCoords.br,
          d: oCoords.bl
        },
        leftline: {
          o: oCoords.bl,
          d: oCoords.tl
        }
      };
    },

    /**
     * Helper method to determine how many cross points are between the 4 object edges
     * and the horizontal line determined by a point on canvas
     * @private
     * @param {fabric.Point} point Point to check
     * @param {Object} lines Coordinates of the object being evaluated
     */
    // remove yi, not used but left code here just in case.
    _findCrossPoints: function(point, lines) {
      var b1, b2, a1, a2, xi, // yi,
          xcount = 0,
          iLine;

      for (var lineKey in lines) {
        iLine = lines[lineKey];
        // optimisation 1: line below point. no cross
        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {
          continue;
        }
        // optimisation 2: line above point. no cross
        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {
          continue;
        }
        // optimisation 3: vertical line case
        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {
          xi = iLine.o.x;
          // yi = point.y;
        }
        // calculate the intersection point
        else {
          b1 = 0;
          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);
          a1 = point.y - b1 * point.x;
          a2 = iLine.o.y - b2 * iLine.o.x;

          xi = -(a1 - a2) / (b1 - b2);
          // yi = a1 + b1 * xi;
        }
        // dont count xi < point.x cases
        if (xi >= point.x) {
          xcount += 1;
        }
        // optimisation 4: specific for square images
        if (xcount === 2) {
          break;
        }
      }
      return xcount;
    },

    /**
     * Returns coordinates of object's bounding rectangle (left, top, width, height)
     * the box is intented as aligned to axis of canvas.
     * @param {Boolean} [absolute] use coordinates without viewportTransform
     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords / .aCoords
     * @return {Object} Object with left, top, width, height properties
     */
    getBoundingRect: function(absolute, calculate) {
      var coords = this.getCoords(absolute, calculate);
      return fabric.util.makeBoundingBoxFromPoints(coords);
    },

    /**
     * Returns width of an object bounding box counting transformations
     * before 2.0 it was named getWidth();
     * @return {Number} width value
     */
    getScaledWidth: function() {
      return this._getTransformedDimensions().x;
    },

    /**
     * Returns height of an object bounding box counting transformations
     * before 2.0 it was named getHeight();
     * @return {Number} height value
     */
    getScaledHeight: function() {
      return this._getTransformedDimensions().y;
    },

    /**
     * Makes sure the scale is valid and modifies it if necessary
     * @private
     * @param {Number} value
     * @return {Number}
     */
    _constrainScale: function(value) {
      if (Math.abs(value) < this.minScaleLimit) {
        if (value < 0) {
          return -this.minScaleLimit;
        }
        else {
          return this.minScaleLimit;
        }
      }
      else if (value === 0) {
        return 0.0001;
      }
      return value;
    },

    /**
     * Scales an object (equally by x and y)
     * @param {Number} value Scale factor
     * @return {fabric.Object} thisArg
     * @chainable
     */
    scale: function(value) {
      this._set('scaleX', value);
      this._set('scaleY', value);
      return this.setCoords();
    },

    /**
     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)
     * @param {Number} value New width value
     * @param {Boolean} absolute ignore viewport
     * @return {fabric.Object} thisArg
     * @chainable
     */
    scaleToWidth: function(value, absolute) {
      // adjust to bounding rect factor so that rotated shapes would fit as well
      var boundingRectFactor = this.getBoundingRect(absolute).width / this.getScaledWidth();
      return this.scale(value / this.width / boundingRectFactor);
    },

    /**
     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)
     * @param {Number} value New height value
     * @param {Boolean} absolute ignore viewport
     * @return {fabric.Object} thisArg
     * @chainable
     */
    scaleToHeight: function(value, absolute) {
      // adjust to bounding rect factor so that rotated shapes would fit as well
      var boundingRectFactor = this.getBoundingRect(absolute).height / this.getScaledHeight();
      return this.scale(value / this.height / boundingRectFactor);
    },

    /**
     * Calculate and returns the .coords of an object.
     * @return {Object} Object with tl, tr, br, bl ....
     * @chainable
     */
    calcCoords: function(absolute) {
      var rotateMatrix = this._calcRotateMatrix(),
          translateMatrix = this._calcTranslateMatrix(),
          startMatrix = multiplyMatrices(translateMatrix, rotateMatrix),
          vpt = this.getViewportTransform(),
          finalMatrix = absolute ? startMatrix : multiplyMatrices(vpt, startMatrix),
          dim = this._getTransformedDimensions(),
          w = dim.x / 2, h = dim.y / 2,
          tl = transformPoint({ x: -w, y: -h }, finalMatrix),
          tr = transformPoint({ x: w, y: -h }, finalMatrix),
          bl = transformPoint({ x: -w, y: h }, finalMatrix),
          br = transformPoint({ x: w, y: h }, finalMatrix);
      if (!absolute) {
        var padding = this.padding, angle = degreesToRadians(this.angle),
            cos = fabric.util.cos(angle), sin = fabric.util.sin(angle),
            cosP = cos * padding, sinP = sin * padding, cosPSinP = cosP + sinP,
            cosPMinusSinP = cosP - sinP;
        if (padding) {
          tl.x -= cosPMinusSinP;
          tl.y -= cosPSinP;
          tr.x += cosPSinP;
          tr.y -= cosPMinusSinP;
          bl.x -= cosPSinP;
          bl.y += cosPMinusSinP;
          br.x += cosPMinusSinP;
          br.y += cosPSinP;
        }
        var ml  = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),
            mt  = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),
            mr  = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),
            mb  = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),
            mtr = new fabric.Point(mt.x + sin * this.rotatingPointOffset, mt.y - cos * this.rotatingPointOffset);
      }

      // if (!absolute) {
      //   var canvas = this.canvas;
      //   setTimeout(function() {
      //     canvas.contextTop.clearRect(0, 0, 700, 700);
      //     canvas.contextTop.fillStyle = 'green';
      //     canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);
      //     canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);
      //     canvas.contextTop.fillRect(br.x, br.y, 3, 3);
      //     canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);
      //     canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);
      //     canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);
      //     canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);
      //     canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);
      //     canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);
      //   }, 50);
      // }

      var coords = {
        // corners
        tl: tl, tr: tr, br: br, bl: bl,
      };
      if (!absolute) {
        // middle
        coords.ml = ml;
        coords.mt = mt;
        coords.mr = mr;
        coords.mb = mb;
        // rotating point
        coords.mtr = mtr;
      }
      return coords;
    },

    /**
     * Sets corner position coordinates based on current angle, width and height.
     * See {@link https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords|When-to-call-setCoords}
     * @param {Boolean} [ignoreZoom] set oCoords with or without the viewport transform.
     * @param {Boolean} [skipAbsolute] skip calculation of aCoords, usefull in setViewportTransform
     * @return {fabric.Object} thisArg
     * @chainable
     */
    setCoords: function(ignoreZoom, skipAbsolute) {
      this.oCoords = this.calcCoords(ignoreZoom);
      if (!skipAbsolute) {
        this.aCoords = this.calcCoords(true);
      }

      // set coordinates of the draggable boxes in the corners used to scale/rotate the image
      ignoreZoom || (this._setCornerCoords && this._setCornerCoords());

      return this;
    },

    /**
     * calculate rotation matrix of an object
     * @return {Array} rotation matrix for the object
     */
    _calcRotateMatrix: function() {
      if (this.angle) {
        var theta = degreesToRadians(this.angle), cos = fabric.util.cos(theta), sin = fabric.util.sin(theta);
        return [cos, sin, -sin, cos, 0, 0];
      }
      return fabric.iMatrix.concat();
    },

    /**
     * calculate the translation matrix for an object transform
     * @return {Array} rotation matrix for the object
     */
    _calcTranslateMatrix: function() {
      var center = this.getCenterPoint();
      return [1, 0, 0, 1, center.x, center.y];
    },

    transformMatrixKey: function(skipGroup) {
      var sep = '_', prefix = '';
      if (!skipGroup && this.group) {
        prefix = this.group.transformMatrixKey(skipGroup) + sep;
      };
      return prefix + this.top + sep + this.left + sep + this.scaleX + sep + this.scaleY +
        sep + this.skewX + sep + this.skewY + sep + this.angle + sep + this.originX + sep + this.originY +
        sep + this.width + sep + this.height + sep + this.strokeWidth + this.flipX + this.flipY;
    },

    /**
     * calculate trasform Matrix that represent current transformation from
     * object properties.
     * @param {Boolean} [skipGroup] return transformMatrix for object and not go upward with parents
     * @return {Array} matrix Transform Matrix for the object
     */
    calcTransformMatrix: function(skipGroup) {
      if (skipGroup) {
        return this.calcOwnMatrix();
      }
      var key = this.transformMatrixKey(), cache = this.matrixCache || (this.matrixCache = {});
      if (cache.key === key) {
        return cache.value;
      }
      var matrix = this.calcOwnMatrix();
      if (this.group) {
        matrix = multiplyMatrices(this.group.calcTransformMatrix(), matrix);
      }
      cache.key = key;
      cache.value = matrix;
      return matrix;
    },

    calcOwnMatrix: function() {
      var key = this.transformMatrixKey(true), cache = this.ownMatrixCache || (this.ownMatrixCache = {});
      if (cache.key === key) {
        return cache.value;
      }
      var matrix = this._calcTranslateMatrix(),
          rotateMatrix,
          dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true);
      if (this.angle) {
        rotateMatrix = this._calcRotateMatrix();
        matrix = multiplyMatrices(matrix, rotateMatrix);
      }
      matrix = multiplyMatrices(matrix, dimensionMatrix);
      cache.key = key;
      cache.value = matrix;
      return matrix;
    },

    _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {
      var skewMatrix,
          scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1),
          scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1),
          scaleMatrix = [scaleX, 0, 0, scaleY, 0, 0];
      if (skewX) {
        skewMatrix = [1, 0, Math.tan(degreesToRadians(skewX)), 1];
        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);
      }
      if (skewY) {
        skewMatrix = [1, Math.tan(degreesToRadians(skewY)), 0, 1];
        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);
      }
      return scaleMatrix;
    },


    /*
     * Calculate object dimensions from its properties
     * @private
     * @return {Object} .x width dimension
     * @return {Object} .y height dimension
     */
    _getNonTransformedDimensions: function() {
      var strokeWidth = this.strokeWidth,
          w = this.width + strokeWidth,
          h = this.height + strokeWidth;
      return { x: w, y: h };
    },

    /*
     * Calculate object bounding boxdimensions from its properties scale, skew.
     * @private
     * @return {Object} .x width dimension
     * @return {Object} .y height dimension
     */
    _getTransformedDimensions: function(skewX, skewY) {
      if (typeof skewX === 'undefined') {
        skewX = this.skewX;
      }
      if (typeof skewY === 'undefined') {
        skewY = this.skewY;
      }
      var dimensions = this._getNonTransformedDimensions(), dimX, dimY,
          noSkew = skewX === 0 && skewY === 0;

      if (this.strokeUniform) {
        dimX = this.width;
        dimY = this.height;
      }
      else {
        dimX = dimensions.x;
        dimY = dimensions.y;
      }
      if (noSkew) {
        return this._finalizeDiemensions(dimX * this.scaleX, dimY * this.scaleY);
      }
      else {
        dimX /= 2;
        dimY /= 2;
      }
      var points = [
            {
              x: -dimX,
              y: -dimY
            },
            {
              x: dimX,
              y: -dimY
            },
            {
              x: -dimX,
              y: dimY
            },
            {
              x: dimX,
              y: dimY
            }],
          i, transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false),
          bbox;
      for (i = 0; i < points.length; i++) {
        points[i] = fabric.util.transformPoint(points[i], transformMatrix);
      }
      bbox = fabric.util.makeBoundingBoxFromPoints(points);
      return this._finalizeDiemensions(bbox.width, bbox.height);
    },

    /*
     * Calculate object bounding boxdimensions from its properties scale, skew.
     * @param Number width width of the bbox
     * @param Number height height of the bbox
     * @private
     * @return {Object} .x finalized width dimension
     * @return {Object} .y finalized height dimension
     */
    _finalizeDiemensions: function(width, height) {
      return this.strokeUniform ?
        { x: width + this.strokeWidth, y: height + this.strokeWidth }
        :
        { x: width, y: height };
    },
    /*
     * Calculate object dimensions for controls. include padding and canvas zoom
     * private
     */
    _calculateCurrentDimensions: function()  {
      var vpt = this.getViewportTransform(),
          dim = this._getTransformedDimensions(),
          p = fabric.util.transformPoint(dim, vpt, true);

      return p.scalarAdd(2 * this.padding);
    },
  });
})();


fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {

  /**
   * Moves an object to the bottom of the stack of drawn objects
   * @return {fabric.Object} thisArg
   * @chainable
   */
  sendToBack: function() {
    if (this.group) {
      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);
    }
    else {
      this.canvas.sendToBack(this);
    }
    return this;
  },

  /**
   * Moves an object to the top of the stack of drawn objects
   * @return {fabric.Object} thisArg
   * @chainable
   */
  bringToFront: function() {
    if (this.group) {
      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);
    }
    else {
      this.canvas.bringToFront(this);
    }
    return this;
  },

  /**
   * Moves an object down in stack of drawn objects
   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object
   * @return {fabric.Object} thisArg
   * @chainable
   */
  sendBackwards: function(intersecting) {
    if (this.group) {
      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);
    }
    else {
      this.canvas.sendBackwards(this, intersecting);
    }
    return this;
  },

  /**
   * Moves an object up in stack of drawn objects
   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object
   * @return {fabric.Object} thisArg
   * @chainable
   */
  bringForward: function(intersecting) {
    if (this.group) {
      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);
    }
    else {
      this.canvas.bringForward(this, intersecting);
    }
    return this;
  },

  /**
   * Moves an object to specified level in stack of drawn objects
   * @param {Number} index New position of object
   * @return {fabric.Object} thisArg
   * @chainable
   */
  moveTo: function(index) {
    if (this.group && this.group.type !== 'activeSelection') {
      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);
    }
    else {
      this.canvas.moveTo(this, index);
    }
    return this;
  }
});


/* _TO_SVG_START_ */
(function() {
  function getSvgColorString(prop, value) {
    if (!value) {
      return prop + ': none; ';
    }
    else if (value.toLive) {
      return prop + ': url(#SVGID_' + value.id + '); ';
    }
    else {
      var color = new fabric.Color(value),
          str = prop + ': ' + color.toRgb() + '; ',
          opacity = color.getAlpha();
      if (opacity !== 1) {
        //change the color in rgb + opacity
        str += prop + '-opacity: ' + opacity.toString() + '; ';
      }
      return str;
    }
  }

  var toFixed = fabric.util.toFixed;

  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {
    /**
     * Returns styles-string for svg-export
     * @param {Boolean} skipShadow a boolean to skip shadow filter output
     * @return {String}
     */
    getSvgStyles: function(skipShadow) {

      var fillRule = this.fillRule ? this.fillRule : 'nonzero',
          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',
          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',
          strokeDashOffset = this.strokeDashOffset ? this.strokeDashOffset : '0',
          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',
          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',
          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',
          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',
          visibility = this.visible ? '' : ' visibility: hidden;',
          filter = skipShadow ? '' : this.getSvgFilter(),
          fill = getSvgColorString('fill', this.fill),
          stroke = getSvgColorString('stroke', this.stroke);

      return [
        stroke,
        'stroke-width: ', strokeWidth, '; ',
        'stroke-dasharray: ', strokeDashArray, '; ',
        'stroke-linecap: ', strokeLineCap, '; ',
        'stroke-dashoffset: ', strokeDashOffset, '; ',
        'stroke-linejoin: ', strokeLineJoin, '; ',
        'stroke-miterlimit: ', strokeMiterLimit, '; ',
        fill,
        'fill-rule: ', fillRule, '; ',
        'opacity: ', opacity, ';',
        filter,
        visibility
      ].join('');
    },

    /**
     * Returns styles-string for svg-export
     * @param {Object} style the object from which to retrieve style properties
     * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.
     * @return {String}
     */
    getSvgSpanStyles: function(style, useWhiteSpace) {
      var term = '; ';
      var fontFamily = style.fontFamily ?
        'font-family: ' + (((style.fontFamily.indexOf('\'') === -1 && style.fontFamily.indexOf('"') === -1) ?
          '\'' + style.fontFamily  + '\'' : style.fontFamily)) + term : '';
      var strokeWidth = style.strokeWidth ? 'stroke-width: ' + style.strokeWidth + term : '',
          fontFamily = fontFamily,
          fontSize = style.fontSize ? 'font-size: ' + style.fontSize + 'px' + term : '',
          fontStyle = style.fontStyle ? 'font-style: ' + style.fontStyle + term : '',
          fontWeight = style.fontWeight ? 'font-weight: ' + style.fontWeight + term : '',
          fill = style.fill ? getSvgColorString('fill', style.fill) : '',
          stroke = style.stroke ? getSvgColorString('stroke', style.stroke) : '',
          textDecoration = this.getSvgTextDecoration(style),
          deltaY = style.deltaY ? 'baseline-shift: ' + (-style.deltaY) + '; ' : '';
      if (textDecoration) {
        textDecoration = 'text-decoration: ' + textDecoration + term;
      }

      return [
        stroke,
        strokeWidth,
        fontFamily,
        fontSize,
        fontStyle,
        fontWeight,
        textDecoration,
        fill,
        deltaY,
        useWhiteSpace ? 'white-space: pre; ' : ''
      ].join('');
    },

    /**
     * Returns text-decoration property for svg-export
     * @param {Object} style the object from which to retrieve style properties
     * @return {String}
     */
    getSvgTextDecoration: function(style) {
      if ('overline' in style || 'underline' in style || 'linethrough' in style) {
        return (style.overline ? 'overline ' : '') +
          (style.underline ? 'underline ' : '') + (style.linethrough ? 'line-through ' : '');
      }
      return '';
    },

    /**
     * Returns filter for svg shadow
     * @return {String}
     */
    getSvgFilter: function() {
      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';
    },

    /**
     * Returns id attribute for svg output
     * @return {String}
     */
    getSvgCommons: function() {
      return [
        this.id ? 'id="' + this.id + '" ' : '',
        this.clipPath ? 'clip-path="url(#' + this.clipPath.clipPathId + ')" ' : '',
      ].join('');
    },

    /**
     * Returns transform-string for svg-export
     * @param {Boolean} use the full transform or the single object one.
     * @return {String}
     */
    getSvgTransform: function(full, additionalTransform) {
      var transform = full ? this.calcTransformMatrix() : this.calcOwnMatrix(),
          svgTransform = transform.map(function(value) {
            return toFixed(value, fabric.Object.NUM_FRACTION_DIGITS);
          }).join(' ');
      return 'transform="matrix(' + svgTransform + ')' +
        (additionalTransform || '') + this.getSvgTransformMatrix() + '" ';
    },

    /**
     * Returns transform-string for svg-export from the transform matrix of single elements
     * @return {String}
     */
    getSvgTransformMatrix: function() {
      return this.transformMatrix ? ' matrix(' + this.transformMatrix.join(' ') + ')' : '';
    },

    _setSVGBg: function(textBgRects) {
      if (this.backgroundColor) {
        var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;
        textBgRects.push(
          '\t\t<rect ',
          this._getFillAttributes(this.backgroundColor),
          ' x="',
          toFixed(-this.width / 2, NUM_FRACTION_DIGITS),
          '" y="',
          toFixed(-this.height / 2, NUM_FRACTION_DIGITS),
          '" width="',
          toFixed(this.width, NUM_FRACTION_DIGITS),
          '" height="',
          toFixed(this.height, NUM_FRACTION_DIGITS),
          '"></rect>\n');
      }
    },

    /**
     * Returns svg representation of an instance
     * @param {Function} [reviver] Method for further parsing of svg representation.
     * @return {String} svg representation of an instance
     */
    toSVG: function(reviver) {
      return this._createBaseSVGMarkup(this._toSVG(), { reviver: reviver });
    },

    /**
     * Returns svg clipPath representation of an instance
     * @param {Function} [reviver] Method for further parsing of svg representation.
     * @return {String} svg representation of an instance
     */
    toClipPathSVG: function(reviver) {
      return '\t' + this._createBaseClipPathSVGMarkup(this._toSVG(), { reviver: reviver });
    },

    /**
     * @private
     */
    _createBaseClipPathSVGMarkup: function(objectMarkup, options) {
      options = options || {};
      var reviver = options.reviver,
          additionalTransform = options.additionalTransform || '',
          commonPieces = [
            this.getSvgTransform(true, additionalTransform),
            this.getSvgCommons(),
          ].join(''),
          // insert commons in the markup, style and svgCommons
          index = objectMarkup.indexOf('COMMON_PARTS');
      objectMarkup[index] = commonPieces;
      return reviver ? reviver(objectMarkup.join('')) : objectMarkup.join('');
    },

    /**
     * @private
     */
    _createBaseSVGMarkup: function(objectMarkup, options) {
      options = options || {};
      var noStyle = options.noStyle, withShadow = options.withShadow,
          reviver = options.reviver,
          styleInfo = noStyle ? '' : 'style="' + this.getSvgStyles() + '" ',
          shadowInfo = withShadow ? 'style="' + this.getSvgFilter() + '" ' : '',
          clipPath = this.clipPath,
          vectorEffect = this.strokeUniform ? 'vector-effect="non-scaling-stroke" ' : '',
          absoluteClipPath = this.clipPath && this.clipPath.absolutePositioned,
          commonPieces, markup = [], clipPathMarkup,
          // insert commons in the markup, style and svgCommons
          index = objectMarkup.indexOf('COMMON_PARTS'),
          additionalTransform = options.additionalTransform;
      if (clipPath) {
        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;
        clipPathMarkup = '<clipPath id="' + clipPath.clipPathId + '" >\n' +
          this.clipPath.toClipPathSVG(reviver) +
          '</clipPath>\n';
      }
      if (absoluteClipPath) {
        markup.push(
          '<g ', shadowInfo, this.getSvgCommons(), ' >\n'
        );
      }
      markup.push(
        '<g ',
        this.getSvgTransform(false),
        !absoluteClipPath ? shadowInfo + this.getSvgCommons() : '',
        ' >\n'
      );
      commonPieces = [
        styleInfo,
        vectorEffect,
        noStyle ? '' : this.addPaintOrder(), ' ',
        additionalTransform ? 'transform="' + additionalTransform + '" ' : '',
      ].join('');
      objectMarkup[index] = commonPieces;
      if (this.fill && this.fill.toLive) {
        markup.push(this.fill.toSVG(this, false));
      }
      if (this.stroke && this.stroke.toLive) {
        markup.push(this.stroke.toSVG(this, false));
      }
      if (this.shadow) {
        markup.push(this.shadow.toSVG(this));
      }
      if (clipPath) {
        markup.push(clipPathMarkup);
      }
      markup.push(objectMarkup.join(''));
      markup.push('</g>\n');
      absoluteClipPath && markup.push('</g>\n');
      return reviver ? reviver(markup.join('')) : markup.join('');
    },

    addPaintOrder: function() {
      return this.paintFirst !== 'fill' ? ' paint-order="' + this.paintFirst + '" ' : '';
    }
  });
})();
/* _TO_SVG_END_ */


(function() {

  var extend = fabric.util.object.extend,
      originalSet = 'stateProperties';

  /*
    Depends on `stateProperties`
  */
  function saveProps(origin, destination, props) {
    var tmpObj = { }, deep = true;
    props.forEach(function(prop) {
      tmpObj[prop] = origin[prop];
    });
    extend(origin[destination], tmpObj, deep);
  }

  function _isEqual(origValue, currentValue, firstPass) {
    if (origValue === currentValue) {
      // if the objects are identical, return
      return true;
    }
    else if (Array.isArray(origValue)) {
      if (!Array.isArray(currentValue) || origValue.length !== currentValue.length) {
        return false;
      }
      for (var i = 0, len = origValue.length; i < len; i++) {
        if (!_isEqual(origValue[i], currentValue[i])) {
          return false;
        }
      }
      return true;
    }
    else if (origValue && typeof origValue === 'object') {
      var keys = Object.keys(origValue), key;
      if (!currentValue ||
          typeof currentValue !== 'object' ||
          (!firstPass && keys.length !== Object.keys(currentValue).length)
      ) {
        return false;
      }
      for (var i = 0, len = keys.length; i < len; i++) {
        key = keys[i];
        // since clipPath is in the statefull cache list and the clipPath objects
        // would be iterated as an object, this would lead to possible infinite recursion
        if (key === 'canvas') {
          continue;
        }
        if (!_isEqual(origValue[key], currentValue[key])) {
          return false;
        }
      }
      return true;
    }
  }


  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {

    /**
     * Returns true if object state (one of its state properties) was changed
     * @param {String} [propertySet] optional name for the set of property we want to save
     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called
     */
    hasStateChanged: function(propertySet) {
      propertySet = propertySet || originalSet;
      var dashedPropertySet = '_' + propertySet;
      if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {
        return true;
      }
      return !_isEqual(this[dashedPropertySet], this, true);
    },

    /**
     * Saves state of an object
     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state
     * @return {fabric.Object} thisArg
     */
    saveState: function(options) {
      var propertySet = options && options.propertySet || originalSet,
          destination = '_' + propertySet;
      if (!this[destination]) {
        return this.setupState(options);
      }
      saveProps(this, destination, this[propertySet]);
      if (options && options.stateProperties) {
        saveProps(this, destination, options.stateProperties);
      }
      return this;
    },

    /**
     * Setups state of an object
     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state
     * @return {fabric.Object} thisArg
     */
    setupState: function(options) {
      options = options || { };
      var propertySet = options.propertySet || originalSet;
      options.propertySet = propertySet;
      this['_' + propertySet] = { };
      this.saveState(options);
      return this;
    }
  });
})();


(function() {

  var degreesToRadians = fabric.util.degreesToRadians;

  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {

    /**
     * The object interactivity controls.
     * @private
     */
    _controlsVisibility: null,

    /**
     * Determines which corner has been clicked
     * @private
     * @param {Object} pointer The pointer indicating the mouse position
     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found
     */
    _findTargetCorner: function(pointer) {
      // objects in group, anykind, are not self modificable,
      // must not return an hovered corner.
      if (!this.hasControls || this.group || (!this.canvas || this.canvas._activeObject !== this)) {
        return false;
      }

      var ex = pointer.x,
          ey = pointer.y,
          xPoints,
          lines;
      this.__corner = 0;
      for (var i in this.oCoords) {

        if (!this.isControlVisible(i)) {
          continue;
        }

        if (i === 'mtr' && !this.hasRotatingPoint) {
          continue;
        }

        if (this.get('lockUniScaling') &&
           (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {
          continue;
        }

        lines = this._getImageLines(this.oCoords[i].corner);

        // debugging

        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);
        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);

        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);
        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);

        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);
        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);

        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);
        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);

        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);
        if (xPoints !== 0 && xPoints % 2 === 1) {
          this.__corner = i;
          return i;
        }
      }
      return false;
    },

    /**
     * Sets the coordinates of the draggable boxes in the corners of
     * the image used to scale/rotate it.
     * @private
     */
    _setCornerCoords: function() {
      var coords = this.oCoords,
          newTheta = degreesToRadians(45 - this.angle),
          /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */
          /* 0.707106 stands for sqrt(2)/2 */
          cornerHypotenuse = this.cornerSize * 0.707106,
          cosHalfOffset = cornerHypotenuse * fabric.util.cos(newTheta),
          sinHalfOffset = cornerHypotenuse * fabric.util.sin(newTheta),
          x, y;

      for (var point in coords) {
        x = coords[point].x;
        y = coords[point].y;
        coords[point].corner = {
          tl: {
            x: x - sinHalfOffset,
            y: y - cosHalfOffset
          },
          tr: {
            x: x + cosHalfOffset,
            y: y - sinHalfOffset
          },
          bl: {
            x: x - cosHalfOffset,
            y: y + sinHalfOffset
          },
          br: {
            x: x + sinHalfOffset,
            y: y + cosHalfOffset
          }
        };
      }
    },

    /**
     * Draws a colored layer behind the object, inside its selection borders.
     * Requires public options: padding, selectionBackgroundColor
     * this function is called when the context is transformed
     * has checks to be skipped when the object is on a staticCanvas
     * @param {CanvasRenderingContext2D} ctx Context to draw on
     * @return {fabric.Object} thisArg
     * @chainable
     */
    drawSelectionBackground: function(ctx) {
      if (!this.selectionBackgroundColor ||
        (this.canvas && !this.canvas.interactive) ||
        (this.canvas && this.canvas._activeObject !== this)
      ) {
        return this;
      }
      ctx.save();
      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),
          vpt = this.canvas.viewportTransform;
      ctx.translate(center.x, center.y);
      ctx.scale(1 / vpt[0], 1 / vpt[3]);
      ctx.rotate(degreesToRadians(this.angle));
      ctx.fillStyle = this.selectionBackgroundColor;
      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);
      ctx.restore();
      return this;
    },

    /**
     * Draws borders of an object's bounding box.
     * Requires public properties: width, height
     * Requires public options: padding, borderColor
     * @param {CanvasRenderingContext2D} ctx Context to draw on
     * @param {Object} styleOverride object to override the object style
     * @return {fabric.Object} thisArg
     * @chainable
     */
    drawBorders: function(ctx, styleOverride) {
      styleOverride = styleOverride || {};
      var wh = this._calculateCurrentDimensions(),
          strokeWidth = 1 / this.borderScaleFactor,
          width = wh.x + strokeWidth,
          height = wh.y + strokeWidth,
          drawRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?
            styleOverride.hasRotatingPoint : this.hasRotatingPoint,
          hasControls = typeof styleOverride.hasControls !== 'undefined' ?
            styleOverride.hasControls : this.hasControls,
          rotatingPointOffset = typeof styleOverride.rotatingPointOffset !== 'undefined' ?
            styleOverride.rotatingPointOffset : this.rotatingPointOffset;

      ctx.save();
      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;
      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);

      ctx.strokeRect(
        -width / 2,
        -height / 2,
        width,
        height
      );

      if (drawRotatingPoint && this.isControlVisible('mtr') && hasControls) {

        var rotateHeight = -height / 2;

        ctx.beginPath();
        ctx.moveTo(0, rotateHeight);
        ctx.lineTo(0, rotateHeight - rotatingPointOffset);
        ctx.stroke();
      }

      ctx.restore();
      return this;
    },

    /**
     * Draws borders of an object's bounding box when it is inside a group.
     * Requires public properties: width, height
     * Requires public options: padding, borderColor
     * @param {CanvasRenderingContext2D} ctx Context to draw on
     * @param {object} options object representing current object parameters
     * @param {Object} styleOverride object to override the object style
     * @return {fabric.Object} thisArg
     * @chainable
     */
    drawBordersInGroup: function(ctx, options, styleOverride) {
      styleOverride = styleOverride || {};
      var p = this._getNonTransformedDimensions(),
          matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX),
          wh = fabric.util.transformPoint(p, matrix),
          strokeWidth = 1 / this.borderScaleFactor,
          width = wh.x + strokeWidth,
          height = wh.y + strokeWidth;

      ctx.save();
      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);
      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;

      ctx.strokeRect(
        -width / 2,
        -height / 2,
        width,
        height
      );

      ctx.restore();
      return this;
    },

    /**
     * Draws corners of an object's bounding box.
     * Requires public properties: width, height
     * Requires public options: cornerSize, padding
     * @param {CanvasRenderingContext2D} ctx Context to draw on
     * @param {Object} styleOverride object to override the object style
     * @return {fabric.Object} thisArg
     * @chainable
     */
    drawControls: function(ctx, styleOverride) {
      styleOverride = styleOverride || {};
      var wh = this._calculateCurrentDimensions(),
          width = wh.x,
          height = wh.y,
          scaleOffset = styleOverride.cornerSize || this.cornerSize,
          left = -(width + scaleOffset) / 2,
          top = -(height + scaleOffset) / 2,
          transparentCorners = typeof styleOverride.transparentCorners !== 'undefined' ?
            styleOverride.transparentCorners : this.transparentCorners,
          hasRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?
            styleOverride.hasRotatingPoint : this.hasRotatingPoint,
          methodName = transparentCorners ? 'stroke' : 'fill';

      ctx.save();
      ctx.strokeStyle = ctx.fillStyle = styleOverride.cornerColor || this.cornerColor;
      if (!this.transparentCorners) {
        ctx.strokeStyle = styleOverride.cornerStrokeColor || this.cornerStrokeColor;
      }
      this._setLineDash(ctx, styleOverride.cornerDashArray || this.cornerDashArray, null);

      // top-left
      this._drawControl('tl', ctx, methodName,
        left,
        top, styleOverride);

      // top-right
      this._drawControl('tr', ctx, methodName,
        left + width,
        top, styleOverride);

      // bottom-left
      this._drawControl('bl', ctx, methodName,
        left,
        top + height, styleOverride);

      // bottom-right
      this._drawControl('br', ctx, methodName,
        left + width,
        top + height, styleOverride);

      if (!this.get('lockUniScaling')) {

        // middle-top
        this._drawControl('mt', ctx, methodName,
          left + width / 2,
          top, styleOverride);

        // middle-bottom
        this._drawControl('mb', ctx, methodName,
          left + width / 2,
          top + height, styleOverride);

        // middle-right
        this._drawControl('mr', ctx, methodName,
          left + width,
          top + height / 2, styleOverride);

        // middle-left
        this._drawControl('ml', ctx, methodName,
          left,
          top + height / 2, styleOverride);
      }

      // middle-top-rotate
      if (hasRotatingPoint) {
        this._drawControl('mtr', ctx, methodName,
          left + width / 2,
          top - this.rotatingPointOffset, styleOverride);
      }

      ctx.restore();

      return this;
    },

    /**
     * @private
     */
    _drawControl: function(control, ctx, methodName, left, top, styleOverride) {
      styleOverride = styleOverride || {};
      if (!this.isControlVisible(control)) {
        return;
      }
      var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;
      switch (styleOverride.cornerStyle || this.cornerStyle) {
        case 'circle':
          ctx.beginPath();
          ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);
          ctx[methodName]();
          if (stroke) {
            ctx.stroke();
          }
          break;
        default:
          this.transparentCorners || ctx.clearRect(left, top, size, size);
          ctx[methodName + 'Rect'](left, top, size, size);
          if (stroke) {
            ctx.strokeRect(left, top, size, size);
          }
      }
    },

    /**
     * Returns true if the specified control is visible, false otherwise.
     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.
     * @returns {Boolean} true if the specified control is visible, false otherwise
     */
    isControlVisible: function(controlName) {
      return this._getControlsVisibility()[controlName];
    },

    /**
     * Sets the visibility of the specified control.
     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.
     * @param {Boolean} visible true to set the specified control visible, false otherwise
     * @return {fabric.Object} thisArg
     * @chainable
     */
    setControlVisible: function(controlName, visible) {
      this._getControlsVisibility()[controlName] = visible;
      return this;
    },

    /**
     * Sets the visibility state of object controls.
     * @param {Object} [options] Options object
     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it
     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it
     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it
     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it
     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it
     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it
     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it
     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it
     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it
     * @return {fabric.Object} thisArg
     * @chainable
     */
    setControlsVisibility: function(options) {
      options || (options = { });

      for (var p in options) {
        this.setControlVisible(p, options[p]);
      }
      return this;
    },

    /**
     * Returns the instance of the control visibility set for this object.
     * @private
     * @returns {Object}
     */
    _getControlsVisibility: function() {
      if (!this._controlsVisibility) {
        this._controlsVisibility = {
          tl: true,
          tr: true,
          br: true,
          bl: true,
          ml: true,
          mt: true,
          mr: true,
          mb: true,
          mtr: true
        };
      }
      return this._controlsVisibility;
    },

    /**
     * This callback function is called every time _discardActiveObject or _setActiveObject
     * try to to deselect this object. If the function returns true, the process is cancelled
     * @param {Object} [options] options sent from the upper functions
     * @param {Event} [options.e] event if the process is generated by an event
     */
    onDeselect: function() {
      // implemented by sub-classes, as needed.
    },


    /**
     * This callback function is called every time _discardActiveObject or _setActiveObject
     * try to to select this object. If the function returns true, the process is cancelled
     * @param {Object} [options] options sent from the upper functions
     * @param {Event} [options.e] event if the process is generated by an event
     */
    onSelect: function() {
      // implemented by sub-classes, as needed.
    }
  });
})();


fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {

  /**
   * Animation duration (in ms) for fx* methods
   * @type Number
   * @default
   */
  FX_DURATION: 500,

  /**
   * Centers object horizontally with animation.
   * @param {fabric.Object} object Object to center
   * @param {Object} [callbacks] Callbacks object with optional "onComplete" and/or "onChange" properties
   * @param {Function} [callbacks.onComplete] Invoked on completion
   * @param {Function} [callbacks.onChange] Invoked on every step of animation
   * @return {fabric.Canvas} thisArg
   * @chainable
   */
  fxCenterObjectH: function (object, callbacks) {
    callbacks = callbacks || { };

    var empty = function() { },
        onComplete = callbacks.onComplete || empty,
        onChange = callbacks.onChange || empty,
        _this = this;

    fabric.util.animate({
      startValue: object.left,
      endValue: this.getCenter().left,
      duration: this.FX_DURATION,
      onChange: function(value) {
        object.set('left', value);
        _this.requestRenderAll();
        onChange();
      },
      onComplete: function() {
        object.setCoords();
        onComplete();
      }
    });

    return this;
  },

  /**
   * Centers object vertically with animation.
   * @param {fabric.Object} object Object to center
   * @param {Object} [callbacks] Callbacks object with optional "onComplete" and/or "onChange" properties
   * @param {Function} [callbacks.onComplete] Invoked on completion
   * @param {Function} [callbacks.onChange] Invoked on every step of animation
   * @return {fabric.Canvas} thisArg
   * @chainable
   */
  fxCenterObjectV: function (object, callbacks) {
    callbacks = callbacks || { };

    var empty = function() { },
        onComplete = callbacks.onComplete || empty,
        onChange = callbacks.onChange || empty,
        _this = this;

    fabric.util.animate({
      startValue: object.top,
      endValue: this.getCenter().top,
      duration: this.FX_DURATION,
      onChange: function(value) {
        object.set('top', value);
        _this.requestRenderAll();
        onChange();
      },
      onComplete: function() {
        object.setCoords();
        onComplete();
      }
    });

    return this;
  },

  /**
   * Same as `fabric.Canvas#remove` but animated
   * @param {fabric.Object} object Object to remove
   * @param {Object} [callbacks] Callbacks object with optional "onComplete" and/or "onChange" properties
   * @param {Function} [callbacks.onComplete] Invoked on completion
   * @param {Function} [callbacks.onChange] Invoked on every step of animation
   * @return {fabric.Canvas} thisArg
   * @chainable
   */
  fxRemove: function (object, callbacks) {
    callbacks = callbacks || { };

    var empty = function() { },
        onComplete = callbacks.onComplete || empty,
        onChange = callbacks.onChange || empty,
        _this = this;

    fabric.util.animate({
      startValue: object.opacity,
      endValue: 0,
      duration: this.FX_DURATION,
      onChange: function(value) {
        object.set('opacity', value);
        _this.requestRenderAll();
        onChange();
      },
      onComplete: function () {
        _this.remove(object);
        onComplete();
      }
    });

    return this;
  }
});

fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {
  /**
   * Animates object's properties
   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)
   * @param {Number|Object} value Value to animate property to (if string was given first) or options object
   * @return {fabric.Object} thisArg
   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}
   * @chainable
   *
   * As object — multiple properties
   *
   * object.animate({ left: ..., top: ... });
   * object.animate({ left: ..., top: ... }, { duration: ... });
   *
   * As string — one property
   *
   * object.animate('left', ...);
   * object.animate('left', { duration: ... });
   *
   */
  animate: function() {
    if (arguments[0] && typeof arguments[0] === 'object') {
      var propsToAnimate = [], prop, skipCallbacks;
      for (prop in arguments[0]) {
        propsToAnimate.push(prop);
      }
      for (var i = 0, len = propsToAnimate.length; i < len; i++) {
        prop = propsToAnimate[i];
        skipCallbacks = i !== len - 1;
        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);
      }
    }
    else {
      this._animate.apply(this, arguments);
    }
    return this;
  },

  /**
   * @private
   * @param {String} property Property to animate
   * @param {String} to Value to animate to
   * @param {Object} [options] Options object
   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked
   */
  _animate: function(property, to, options, skipCallbacks) {
    var _this = this, propPair;

    to = to.toString();

    if (!options) {
      options = { };
    }
    else {
      options = fabric.util.object.clone(options);
    }

    if (~property.indexOf('.')) {
      propPair = property.split('.');
    }

    var currentValue = propPair
      ? this.get(propPair[0])[propPair[1]]
      : this.get(property);

    if (!('from' in options)) {
      options.from = currentValue;
    }

    if (~to.indexOf('=')) {
      to = currentValue + parseFloat(to.replace('=', ''));
    }
    else {
      to = parseFloat(to);
    }

    fabric.util.animate({
      startValue: options.from,
      endValue: to,
      byValue: options.by,
      easing: options.easing,
      duration: options.duration,
      abort: options.abort && function() {
        return options.abort.call(_this);
      },
      onChange: function(value, valueProgress, timeProgress) {
        if (propPair) {
          _this[propPair[0]][propPair[1]] = value;
        }
        else {
          _this.set(property, value);
        }
        if (skipCallbacks) {
          return;
        }
        options.onChange && options.onChange(value, valueProgress, timeProgress);
      },
      onComplete: function(value, valueProgress, timeProgress) {
        if (skipCallbacks) {
          return;
        }

        _this.setCoords();
        options.onComplete && options.onComplete(value, valueProgress, timeProgress);
      }
    });
  }
});


(function(global) {

  'use strict';

  var fabric = global.fabric || (global.fabric = { }),
      extend = fabric.util.object.extend,
      clone = fabric.util.object.clone,
      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },
      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');

  if (fabric.Line) {
    fabric.warn('fabric.Line is already defined');
    return;
  }

  /**
   * Line class
   * @class fabric.Line
   * @extends fabric.Object
   * @see {@link fabric.Line#initialize} for constructor definition
   */
  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {

    /**
     * Type of an object
     * @type String
     * @default
     */
    type: 'line',

    /**
     * x value or first line edge
     * @type Number
     * @default
     */
    x1: 0,

    /**
     * y value or first line edge
     * @type Number
     * @default
     */
    y1: 0,

    /**
     * x value or second line edge
     * @type Number
     * @default
     */
    x2: 0,

    /**
     * y value or second line edge
     * @type Number
     * @default
     */
    y2: 0,

    cacheProperties: fabric.Object.prototype.cacheProperties.concat('x1', 'x2', 'y1', 'y2'),

    /**
     * Constructor
     * @param {Array} [points] Array of points
     * @param {Object} [options] Options object
     * @return {fabric.Line} thisArg
     */
    initialize: function(points, options) {
      if (!points) {
        points = [0, 0, 0, 0];
      }

      this.callSuper('initialize', options);

      this.set('x1', points[0]);
      this.set('y1', points[1]);
      this.set('x2', points[2]);
      this.set('y2', points[3]);

      this._setWidthHeight(options);
    },

    /**
     * @private
     * @param {Object} [options] Options
     */
    _setWidthHeight: function(options) {
      options || (options = { });

      this.width = Math.abs(this.x2 - this.x1);
      this.height = Math.abs(this.y2 - this.y1);

      this.left = 'left' in options
        ? options.left
        : this._getLeftToOriginX();

      this.top = 'top' in options
        ? options.top
        : this._getTopToOriginY();
    },

    /**
     * @private
     * @param {String} key
     * @param {*} value
     */
    _set: function(key, value) {
      this.callSuper('_set', key, value);
      if (typeof coordProps[key] !== 'undefined') {
        this._setWidthHeight();
      }
      return this;
    },

    /**
     * @private
     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.
     */
    _getLeftToOriginX: makeEdgeToOriginGetter(
      { // property names
        origin: 'originX',
        axis1: 'x1',
        axis2: 'x2',
        dimension: 'width'
      },
      { // possible values of origin
        nearest: 'left',
        center: 'center',
        farthest: 'right'
      }
    ),

    /**
     * @private
     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.
     */
    _getTopToOriginY: makeEdgeToOriginGetter(
      { // property names
        origin: 'originY',
        axis1: 'y1',
        axis2: 'y2',
        dimension: 'height'
      },
      { // possible values of origin
        nearest: 'top',
        center: 'center',
        farthest: 'bottom'
      }
    ),

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    _render: function(ctx) {
      ctx.beginPath();

      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {
        // move from center (of virtual box) to its left/top corner
        // we can't assume x1, y1 is top left and x2, y2 is bottom right
        var p = this.calcLinePoints();
        ctx.moveTo(p.x1, p.y1);
        ctx.lineTo(p.x2, p.y2);
      }

      ctx.lineWidth = this.strokeWidth;

      // TODO: test this
      // make sure setting "fill" changes color of a line
      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)
      var origStrokeStyle = ctx.strokeStyle;
      ctx.strokeStyle = this.stroke || ctx.fillStyle;
      this.stroke && this._renderStroke(ctx);
      ctx.strokeStyle = origStrokeStyle;
    },

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    _renderDashedStroke: function(ctx) {
      var p = this.calcLinePoints();

      ctx.beginPath();
      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);
      ctx.closePath();
    },

    /**
     * This function is an helper for svg import. it returns the center of the object in the svg
     * untransformed coordinates
     * @private
     * @return {Object} center point from element coordinates
     */
    _findCenterFromElement: function() {
      return {
        x: (this.x1 + this.x2) / 2,
        y: (this.y1 + this.y2) / 2,
      };
    },

    /**
     * Returns object representation of an instance
     * @methd toObject
     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
     * @return {Object} object representation of an instance
     */
    toObject: function(propertiesToInclude) {
      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());
    },

    /*
     * Calculate object dimensions from its properties
     * @private
     */
    _getNonTransformedDimensions: function() {
      var dim = this.callSuper('_getNonTransformedDimensions');
      if (this.strokeLineCap === 'butt') {
        if (this.width === 0) {
          dim.y -= this.strokeWidth;
        }
        if (this.height === 0) {
          dim.x -= this.strokeWidth;
        }
      }
      return dim;
    },

    /**
     * Recalculates line points given width and height
     * @private
     */
    calcLinePoints: function() {
      var xMult = this.x1 <= this.x2 ? -1 : 1,
          yMult = this.y1 <= this.y2 ? -1 : 1,
          x1 = (xMult * this.width * 0.5),
          y1 = (yMult * this.height * 0.5),
          x2 = (xMult * this.width * -0.5),
          y2 = (yMult * this.height * -0.5);

      return {
        x1: x1,
        x2: x2,
        y1: y1,
        y2: y2
      };
    },

    /* _TO_SVG_START_ */
    /**
     * Returns svg representation of an instance
     * @return {Array} an array of strings with the specific svg representation
     * of the instance
     */
    _toSVG: function() {
      var p = this.calcLinePoints();
      return [
        '<line ', 'COMMON_PARTS',
        'x1="', p.x1,
        '" y1="', p.y1,
        '" x2="', p.x2,
        '" y2="', p.y2,
        '" />\n'
      ];
    },
    /* _TO_SVG_END_ */
  });

  /* _FROM_SVG_START_ */
  /**
   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})
   * @static
   * @memberOf fabric.Line
   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement
   */
  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));

  /**
   * Returns fabric.Line instance from an SVG element
   * @static
   * @memberOf fabric.Line
   * @param {SVGElement} element Element to parse
   * @param {Object} [options] Options object
   * @param {Function} [callback] callback function invoked after parsing
   */
  fabric.Line.fromElement = function(element, callback, options) {
    options = options || { };
    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),
        points = [
          parsedAttributes.x1 || 0,
          parsedAttributes.y1 || 0,
          parsedAttributes.x2 || 0,
          parsedAttributes.y2 || 0
        ];
    callback(new fabric.Line(points, extend(parsedAttributes, options)));
  };
  /* _FROM_SVG_END_ */

  /**
   * Returns fabric.Line instance from an object representation
   * @static
   * @memberOf fabric.Line
   * @param {Object} object Object to create an instance from
   * @param {function} [callback] invoked with new instance as first argument
   */
  fabric.Line.fromObject = function(object, callback) {
    function _callback(instance) {
      delete instance.points;
      callback && callback(instance);
    };
    var options = clone(object, true);
    options.points = [object.x1, object.y1, object.x2, object.y2];
    fabric.Object._fromObject('Line', options, _callback, 'points');
  };

  /**
   * Produces a function that calculates distance from canvas edge to Line origin.
   */
  function makeEdgeToOriginGetter(propertyNames, originValues) {
    var origin = propertyNames.origin,
        axis1 = propertyNames.axis1,
        axis2 = propertyNames.axis2,
        dimension = propertyNames.dimension,
        nearest = originValues.nearest,
        center = originValues.center,
        farthest = originValues.farthest;

    return function() {
      switch (this.get(origin)) {
        case nearest:
          return Math.min(this.get(axis1), this.get(axis2));
        case center:
          return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));
        case farthest:
          return Math.max(this.get(axis1), this.get(axis2));
      }
    };

  }

})( true ? exports : undefined);


(function(global) {

  'use strict';

  var fabric = global.fabric || (global.fabric = { }),
      pi = Math.PI;

  if (fabric.Circle) {
    fabric.warn('fabric.Circle is already defined.');
    return;
  }

  /**
   * Circle class
   * @class fabric.Circle
   * @extends fabric.Object
   * @see {@link fabric.Circle#initialize} for constructor definition
   */
  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {

    /**
     * Type of an object
     * @type String
     * @default
     */
    type: 'circle',

    /**
     * Radius of this circle
     * @type Number
     * @default
     */
    radius: 0,

    /**
     * Start angle of the circle, moving clockwise
     * deprectated type, this should be in degree, this was an oversight.
     * probably will change to degrees in next major version
     * @type Number
     * @default 0
     */
    startAngle: 0,

    /**
     * End angle of the circle
     * deprectated type, this should be in degree, this was an oversight.
     * probably will change to degrees in next major version
     * @type Number
     * @default 2Pi
     */
    endAngle: pi * 2,

    cacheProperties: fabric.Object.prototype.cacheProperties.concat('radius', 'startAngle', 'endAngle'),

    /**
     * @private
     * @param {String} key
     * @param {*} value
     * @return {fabric.Circle} thisArg
     */
    _set: function(key, value) {
      this.callSuper('_set', key, value);

      if (key === 'radius') {
        this.setRadius(value);
      }

      return this;
    },

    /**
     * Returns object representation of an instance
     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
     * @return {Object} object representation of an instance
     */
    toObject: function(propertiesToInclude) {
      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));
    },

    /* _TO_SVG_START_ */

    /**
     * Returns svg representation of an instance
     * @return {Array} an array of strings with the specific svg representation
     * of the instance
     */
    _toSVG: function() {
      var svgString, x = 0, y = 0,
          angle = (this.endAngle - this.startAngle) % ( 2 * pi);

      if (angle === 0) {
        svgString = [
          '<circle ', 'COMMON_PARTS',
          'cx="' + x + '" cy="' + y + '" ',
          'r="', this.radius,
          '" />\n'
        ];
      }
      else {
        var startX = fabric.util.cos(this.startAngle) * this.radius,
            startY = fabric.util.sin(this.startAngle) * this.radius,
            endX = fabric.util.cos(this.endAngle) * this.radius,
            endY = fabric.util.sin(this.endAngle) * this.radius,
            largeFlag = angle > pi ? '1' : '0';
        svgString = [
          '<path d="M ' + startX + ' ' + startY,
          ' A ' + this.radius + ' ' + this.radius,
          ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,
          '" ', 'COMMON_PARTS', ' />\n'
        ];
      }
      return svgString;
    },
    /* _TO_SVG_END_ */

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx context to render on
     */
    _render: function(ctx) {
      ctx.beginPath();
      ctx.arc(
        0,
        0,
        this.radius,
        this.startAngle,
        this.endAngle, false);
      this._renderPaintInOrder(ctx);
    },

    /**
     * Returns horizontal radius of an object (according to how an object is scaled)
     * @return {Number}
     */
    getRadiusX: function() {
      return this.get('radius') * this.get('scaleX');
    },

    /**
     * Returns vertical radius of an object (according to how an object is scaled)
     * @return {Number}
     */
    getRadiusY: function() {
      return this.get('radius') * this.get('scaleY');
    },

    /**
     * Sets radius of an object (and updates width accordingly)
     * @return {fabric.Circle} thisArg
     */
    setRadius: function(value) {
      this.radius = value;
      return this.set('width', value * 2).set('height', value * 2);
    },
  });

  /* _FROM_SVG_START_ */
  /**
   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})
   * @static
   * @memberOf fabric.Circle
   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement
   */
  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));

  /**
   * Returns {@link fabric.Circle} instance from an SVG element
   * @static
   * @memberOf fabric.Circle
   * @param {SVGElement} element Element to parse
   * @param {Function} [callback] Options callback invoked after parsing is finished
   * @param {Object} [options] Options object
   * @throws {Error} If value of `r` attribute is missing or invalid
   */
  fabric.Circle.fromElement = function(element, callback) {
    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);

    if (!isValidRadius(parsedAttributes)) {
      throw new Error('value of `r` attribute is required and can not be negative');
    }

    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.radius;
    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.radius;
    callback(new fabric.Circle(parsedAttributes));
  };

  /**
   * @private
   */
  function isValidRadius(attributes) {
    return (('radius' in attributes) && (attributes.radius >= 0));
  }
  /* _FROM_SVG_END_ */

  /**
   * Returns {@link fabric.Circle} instance from an object representation
   * @static
   * @memberOf fabric.Circle
   * @param {Object} object Object to create an instance from
   * @param {function} [callback] invoked with new instance as first argument
   * @return {Object} Instance of fabric.Circle
   */
  fabric.Circle.fromObject = function(object, callback) {
    return fabric.Object._fromObject('Circle', object, callback);
  };

})( true ? exports : undefined);


(function(global) {

  'use strict';

  var fabric = global.fabric || (global.fabric = { });

  if (fabric.Triangle) {
    fabric.warn('fabric.Triangle is already defined');
    return;
  }

  /**
   * Triangle class
   * @class fabric.Triangle
   * @extends fabric.Object
   * @return {fabric.Triangle} thisArg
   * @see {@link fabric.Triangle#initialize} for constructor definition
   */
  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {

    /**
     * Type of an object
     * @type String
     * @default
     */
    type: 'triangle',

    /**
     * Width is set to 100 to compensate the old initialize code that was setting it to 100
     * @type Number
     * @default
     */
    width: 100,

    /**
     * Height is set to 100 to compensate the old initialize code that was setting it to 100
     * @type Number
     * @default
     */
    height: 100,

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    _render: function(ctx) {
      var widthBy2 = this.width / 2,
          heightBy2 = this.height / 2;

      ctx.beginPath();
      ctx.moveTo(-widthBy2, heightBy2);
      ctx.lineTo(0, -heightBy2);
      ctx.lineTo(widthBy2, heightBy2);
      ctx.closePath();

      this._renderPaintInOrder(ctx);
    },

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    _renderDashedStroke: function(ctx) {
      var widthBy2 = this.width / 2,
          heightBy2 = this.height / 2;

      ctx.beginPath();
      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);
      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);
      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);
      ctx.closePath();
    },

    /* _TO_SVG_START_ */
    /**
     * Returns svg representation of an instance
     * @return {Array} an array of strings with the specific svg representation
     * of the instance
     */
    _toSVG: function() {
      var widthBy2 = this.width / 2,
          heightBy2 = this.height / 2,
          points = [
            -widthBy2 + ' ' + heightBy2,
            '0 ' + -heightBy2,
            widthBy2 + ' ' + heightBy2
          ].join(',');
      return [
        '<polygon ', 'COMMON_PARTS',
        'points="', points,
        '" />'
      ];
    },
    /* _TO_SVG_END_ */
  });

  /**
   * Returns {@link fabric.Triangle} instance from an object representation
   * @static
   * @memberOf fabric.Triangle
   * @param {Object} object Object to create an instance from
   * @param {function} [callback] invoked with new instance as first argument
   */
  fabric.Triangle.fromObject = function(object, callback) {
    return fabric.Object._fromObject('Triangle', object, callback);
  };

})( true ? exports : undefined);


(function(global) {

  'use strict';

  var fabric = global.fabric || (global.fabric = { }),
      piBy2   = Math.PI * 2;

  if (fabric.Ellipse) {
    fabric.warn('fabric.Ellipse is already defined.');
    return;
  }

  /**
   * Ellipse class
   * @class fabric.Ellipse
   * @extends fabric.Object
   * @return {fabric.Ellipse} thisArg
   * @see {@link fabric.Ellipse#initialize} for constructor definition
   */
  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {

    /**
     * Type of an object
     * @type String
     * @default
     */
    type: 'ellipse',

    /**
     * Horizontal radius
     * @type Number
     * @default
     */
    rx:   0,

    /**
     * Vertical radius
     * @type Number
     * @default
     */
    ry:   0,

    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),

    /**
     * Constructor
     * @param {Object} [options] Options object
     * @return {fabric.Ellipse} thisArg
     */
    initialize: function(options) {
      this.callSuper('initialize', options);
      this.set('rx', options && options.rx || 0);
      this.set('ry', options && options.ry || 0);
    },

    /**
     * @private
     * @param {String} key
     * @param {*} value
     * @return {fabric.Ellipse} thisArg
     */
    _set: function(key, value) {
      this.callSuper('_set', key, value);
      switch (key) {

        case 'rx':
          this.rx = value;
          this.set('width', value * 2);
          break;

        case 'ry':
          this.ry = value;
          this.set('height', value * 2);
          break;

      }
      return this;
    },

    /**
     * Returns horizontal radius of an object (according to how an object is scaled)
     * @return {Number}
     */
    getRx: function() {
      return this.get('rx') * this.get('scaleX');
    },

    /**
     * Returns Vertical radius of an object (according to how an object is scaled)
     * @return {Number}
     */
    getRy: function() {
      return this.get('ry') * this.get('scaleY');
    },

    /**
     * Returns object representation of an instance
     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
     * @return {Object} object representation of an instance
     */
    toObject: function(propertiesToInclude) {
      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));
    },

    /* _TO_SVG_START_ */
    /**
     * Returns svg representation of an instance
     * @return {Array} an array of strings with the specific svg representation
     * of the instance
     */
    _toSVG: function() {
      return [
        '<ellipse ', 'COMMON_PARTS',
        'cx="0" cy="0" ',
        'rx="', this.rx,
        '" ry="', this.ry,
        '" />\n'
      ];
    },
    /* _TO_SVG_END_ */

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx context to render on
     */
    _render: function(ctx) {
      ctx.beginPath();
      ctx.save();
      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);
      ctx.arc(
        0,
        0,
        this.rx,
        0,
        piBy2,
        false);
      ctx.restore();
      this._renderPaintInOrder(ctx);
    },
  });

  /* _FROM_SVG_START_ */
  /**
   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})
   * @static
   * @memberOf fabric.Ellipse
   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement
   */
  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));

  /**
   * Returns {@link fabric.Ellipse} instance from an SVG element
   * @static
   * @memberOf fabric.Ellipse
   * @param {SVGElement} element Element to parse
   * @param {Function} [callback] Options callback invoked after parsing is finished
   * @return {fabric.Ellipse}
   */
  fabric.Ellipse.fromElement = function(element, callback) {

    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);

    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;
    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;
    callback(new fabric.Ellipse(parsedAttributes));
  };
  /* _FROM_SVG_END_ */

  /**
   * Returns {@link fabric.Ellipse} instance from an object representation
   * @static
   * @memberOf fabric.Ellipse
   * @param {Object} object Object to create an instance from
   * @param {function} [callback] invoked with new instance as first argument
   * @return {fabric.Ellipse}
   */
  fabric.Ellipse.fromObject = function(object, callback) {
    return fabric.Object._fromObject('Ellipse', object, callback);
  };

})( true ? exports : undefined);


(function(global) {

  'use strict';

  var fabric = global.fabric || (global.fabric = { }),
      extend = fabric.util.object.extend;

  if (fabric.Rect) {
    fabric.warn('fabric.Rect is already defined');
    return;
  }

  /**
   * Rectangle class
   * @class fabric.Rect
   * @extends fabric.Object
   * @return {fabric.Rect} thisArg
   * @see {@link fabric.Rect#initialize} for constructor definition
   */
  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {

    /**
     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})
     * as well as for history (undo/redo) purposes
     * @type Array
     */
    stateProperties: fabric.Object.prototype.stateProperties.concat('rx', 'ry'),

    /**
     * Type of an object
     * @type String
     * @default
     */
    type: 'rect',

    /**
     * Horizontal border radius
     * @type Number
     * @default
     */
    rx:   0,

    /**
     * Vertical border radius
     * @type Number
     * @default
     */
    ry:   0,

    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),

    /**
     * Constructor
     * @param {Object} [options] Options object
     * @return {Object} thisArg
     */
    initialize: function(options) {
      this.callSuper('initialize', options);
      this._initRxRy();
    },

    /**
     * Initializes rx/ry attributes
     * @private
     */
    _initRxRy: function() {
      if (this.rx && !this.ry) {
        this.ry = this.rx;
      }
      else if (this.ry && !this.rx) {
        this.rx = this.ry;
      }
    },

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    _render: function(ctx) {

      // 1x1 case (used in spray brush) optimization was removed because
      // with caching and higher zoom level this makes more damage than help

      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,
          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,
          w = this.width,
          h = this.height,
          x = -this.width / 2,
          y = -this.height / 2,
          isRounded = rx !== 0 || ry !== 0,
          /* "magic number" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */
          k = 1 - 0.5522847498;
      ctx.beginPath();

      ctx.moveTo(x + rx, y);

      ctx.lineTo(x + w - rx, y);
      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);

      ctx.lineTo(x + w, y + h - ry);
      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);

      ctx.lineTo(x + rx, y + h);
      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);

      ctx.lineTo(x, y + ry);
      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);

      ctx.closePath();

      this._renderPaintInOrder(ctx);
    },

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    _renderDashedStroke: function(ctx) {
      var x = -this.width / 2,
          y = -this.height / 2,
          w = this.width,
          h = this.height;

      ctx.beginPath();
      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);
      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);
      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);
      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);
      ctx.closePath();
    },

    /**
     * Returns object representation of an instance
     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
     * @return {Object} object representation of an instance
     */
    toObject: function(propertiesToInclude) {
      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));
    },

    /* _TO_SVG_START_ */
    /**
     * Returns svg representation of an instance
     * @return {Array} an array of strings with the specific svg representation
     * of the instance
     */
    _toSVG: function() {
      var x = -this.width / 2, y = -this.height / 2;
      return [
        '<rect ', 'COMMON_PARTS',
        'x="', x, '" y="', y,
        '" rx="', this.rx, '" ry="', this.ry,
        '" width="', this.width, '" height="', this.height,
        '" />\n'
      ];
    },
    /* _TO_SVG_END_ */
  });

  /* _FROM_SVG_START_ */
  /**
   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)
   * @static
   * @memberOf fabric.Rect
   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement
   */
  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));

  /**
   * Returns {@link fabric.Rect} instance from an SVG element
   * @static
   * @memberOf fabric.Rect
   * @param {SVGElement} element Element to parse
   * @param {Function} callback callback function invoked after parsing
   * @param {Object} [options] Options object
   */
  fabric.Rect.fromElement = function(element, callback, options) {
    if (!element) {
      return callback(null);
    }
    options = options || { };

    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);

    parsedAttributes.left = parsedAttributes.left || 0;
    parsedAttributes.top  = parsedAttributes.top  || 0;
    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));
    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;
    callback(rect);
  };
  /* _FROM_SVG_END_ */

  /**
   * Returns {@link fabric.Rect} instance from an object representation
   * @static
   * @memberOf fabric.Rect
   * @param {Object} object Object to create an instance from
   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created
   */
  fabric.Rect.fromObject = function(object, callback) {
    return fabric.Object._fromObject('Rect', object, callback);
  };

})( true ? exports : undefined);


(function(global) {

  'use strict';

  var fabric = global.fabric || (global.fabric = { }),
      extend = fabric.util.object.extend,
      min = fabric.util.array.min,
      max = fabric.util.array.max,
      toFixed = fabric.util.toFixed;

  if (fabric.Polyline) {
    fabric.warn('fabric.Polyline is already defined');
    return;
  }

  /**
   * Polyline class
   * @class fabric.Polyline
   * @extends fabric.Object
   * @see {@link fabric.Polyline#initialize} for constructor definition
   */
  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {

    /**
     * Type of an object
     * @type String
     * @default
     */
    type: 'polyline',

    /**
     * Points array
     * @type Array
     * @default
     */
    points: null,

    cacheProperties: fabric.Object.prototype.cacheProperties.concat('points'),

    /**
     * Constructor
     * @param {Array} points Array of points (where each point is an object with x and y)
     * @param {Object} [options] Options object
     * @return {fabric.Polyline} thisArg
     * @example
     * var poly = new fabric.Polyline([
     *     { x: 10, y: 10 },
     *     { x: 50, y: 30 },
     *     { x: 40, y: 70 },
     *     { x: 60, y: 50 },
     *     { x: 100, y: 150 },
     *     { x: 40, y: 100 }
     *   ], {
     *   stroke: 'red',
     *   left: 100,
     *   top: 100
     * });
     */
    initialize: function(points, options) {
      options = options || {};
      this.points = points || [];
      this.callSuper('initialize', options);
      var calcDim = this._calcDimensions();
      if (typeof options.left === 'undefined') {
        this.left = calcDim.left;
      }
      if (typeof options.top === 'undefined') {
        this.top = calcDim.top;
      }
      this.width = calcDim.width;
      this.height = calcDim.height;
      this.pathOffset = {
        x: calcDim.left + this.width / 2,
        y: calcDim.top + this.height / 2
      };
    },

    /**
     * Calculate the polygon min and max point from points array,
     * returning an object with left, top, widht, height to measure the
     * polygon size
     * @return {Object} object.left X coordinate of the polygon leftmost point
     * @return {Object} object.top Y coordinate of the polygon topmost point
     * @return {Object} object.width distance between X coordinates of the polygon leftmost and rightmost point
     * @return {Object} object.height distance between Y coordinates of the polygon topmost and bottommost point
     * @private
     */
    _calcDimensions: function() {

      var points = this.points,
          minX = min(points, 'x') || 0,
          minY = min(points, 'y') || 0,
          maxX = max(points, 'x') || 0,
          maxY = max(points, 'y') || 0,
          width = (maxX - minX),
          height = (maxY - minY);

      return {
        left: minX,
        top: minY,
        width: width,
        height: height
      };
    },

    /**
     * Returns object representation of an instance
     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
     * @return {Object} Object representation of an instance
     */
    toObject: function(propertiesToInclude) {
      return extend(this.callSuper('toObject', propertiesToInclude), {
        points: this.points.concat()
      });
    },

    /* _TO_SVG_START_ */
    /**
     * Returns svg representation of an instance
     * @return {Array} an array of strings with the specific svg representation
     * of the instance
     */
    _toSVG: function() {
      var points = [], diffX = this.pathOffset.x, diffY = this.pathOffset.y,
          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;

      for (var i = 0, len = this.points.length; i < len; i++) {
        points.push(
          toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), ',',
          toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), ' '
        );
      }
      return [
        '<' + this.type + ' ', 'COMMON_PARTS',
        'points="', points.join(''),
        '" />\n'
      ];
    },
    /* _TO_SVG_END_ */


    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    commonRender: function(ctx) {
      var point, len = this.points.length,
          x = this.pathOffset.x,
          y = this.pathOffset.y;

      if (!len || isNaN(this.points[len - 1].y)) {
        // do not draw if no points or odd points
        // NaN comes from parseFloat of a empty string in parser
        return false;
      }
      ctx.beginPath();
      ctx.moveTo(this.points[0].x - x, this.points[0].y - y);
      for (var i = 0; i < len; i++) {
        point = this.points[i];
        ctx.lineTo(point.x - x, point.y - y);
      }
      return true;
    },

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    _render: function(ctx) {
      if (!this.commonRender(ctx)) {
        return;
      }
      this._renderPaintInOrder(ctx);
    },

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    _renderDashedStroke: function(ctx) {
      var p1, p2;

      ctx.beginPath();
      for (var i = 0, len = this.points.length; i < len; i++) {
        p1 = this.points[i];
        p2 = this.points[i + 1] || p1;
        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);
      }
    },

    /**
     * Returns complexity of an instance
     * @return {Number} complexity of this instance
     */
    complexity: function() {
      return this.get('points').length;
    }
  });

  /* _FROM_SVG_START_ */
  /**
   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})
   * @static
   * @memberOf fabric.Polyline
   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement
   */
  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();

  /**
   * Returns fabric.Polyline instance from an SVG element
   * @static
   * @memberOf fabric.Polyline
   * @param {SVGElement} element Element to parser
   * @param {Function} callback callback function invoked after parsing
   * @param {Object} [options] Options object
   */
  fabric.Polyline.fromElement = function(element, callback, options) {
    if (!element) {
      return callback(null);
    }
    options || (options = { });

    var points = fabric.parsePointsAttribute(element.getAttribute('points')),
        parsedAttributes = fabric.parseAttributes(element, fabric.Polyline.ATTRIBUTE_NAMES);

    callback(new fabric.Polyline(points, fabric.util.object.extend(parsedAttributes, options)));
  };
  /* _FROM_SVG_END_ */

  /**
   * Returns fabric.Polyline instance from an object representation
   * @static
   * @memberOf fabric.Polyline
   * @param {Object} object Object to create an instance from
   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created
   */
  fabric.Polyline.fromObject = function(object, callback) {
    return fabric.Object._fromObject('Polyline', object, callback, 'points');
  };

})( true ? exports : undefined);


(function(global) {

  'use strict';

  var fabric = global.fabric || (global.fabric = { }),
      extend = fabric.util.object.extend;

  if (fabric.Polygon) {
    fabric.warn('fabric.Polygon is already defined');
    return;
  }

  /**
   * Polygon class
   * @class fabric.Polygon
   * @extends fabric.Polyline
   * @see {@link fabric.Polygon#initialize} for constructor definition
   */
  fabric.Polygon = fabric.util.createClass(fabric.Polyline, /** @lends fabric.Polygon.prototype */ {

    /**
     * Type of an object
     * @type String
     * @default
     */
    type: 'polygon',

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    _render: function(ctx) {
      if (!this.commonRender(ctx)) {
        return;
      }
      ctx.closePath();
      this._renderPaintInOrder(ctx);
    },

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    _renderDashedStroke: function(ctx) {
      this.callSuper('_renderDashedStroke', ctx);
      ctx.closePath();
    },
  });

  /* _FROM_SVG_START_ */
  /**
   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)
   * @static
   * @memberOf fabric.Polygon
   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement
   */
  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();

  /**
   * Returns {@link fabric.Polygon} instance from an SVG element
   * @static
   * @memberOf fabric.Polygon
   * @param {SVGElement} element Element to parse
   * @param {Function} callback callback function invoked after parsing
   * @param {Object} [options] Options object
   */
  fabric.Polygon.fromElement = function(element, callback, options) {
    if (!element) {
      return callback(null);
    }

    options || (options = { });

    var points = fabric.parsePointsAttribute(element.getAttribute('points')),
        parsedAttributes = fabric.parseAttributes(element, fabric.Polygon.ATTRIBUTE_NAMES);

    callback(new fabric.Polygon(points, extend(parsedAttributes, options)));
  };
  /* _FROM_SVG_END_ */

  /**
   * Returns fabric.Polygon instance from an object representation
   * @static
   * @memberOf fabric.Polygon
   * @param {Object} object Object to create an instance from
   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created
   */
  fabric.Polygon.fromObject = function(object, callback) {
    return fabric.Object._fromObject('Polygon', object, callback, 'points');
  };

})( true ? exports : undefined);


(function(global) {

  'use strict';

  var fabric = global.fabric || (global.fabric = { }),
      min = fabric.util.array.min,
      max = fabric.util.array.max,
      extend = fabric.util.object.extend,
      _toString = Object.prototype.toString,
      drawArc = fabric.util.drawArc,
      toFixed = fabric.util.toFixed,
      commandLengths = {
        m: 2,
        l: 2,
        h: 1,
        v: 1,
        c: 6,
        s: 4,
        q: 4,
        t: 2,
        a: 7
      },
      repeatedCommands = {
        m: 'l',
        M: 'L'
      };

  if (fabric.Path) {
    fabric.warn('fabric.Path is already defined');
    return;
  }

  /**
   * Path class
   * @class fabric.Path
   * @extends fabric.Object
   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}
   * @see {@link fabric.Path#initialize} for constructor definition
   */
  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {

    /**
     * Type of an object
     * @type String
     * @default
     */
    type: 'path',

    /**
     * Array of path points
     * @type Array
     * @default
     */
    path: null,

    cacheProperties: fabric.Object.prototype.cacheProperties.concat('path', 'fillRule'),

    stateProperties: fabric.Object.prototype.stateProperties.concat('path'),

    /**
     * Constructor
     * @param {Array|String} path Path data (sequence of coordinates and corresponding "command" tokens)
     * @param {Object} [options] Options object
     * @return {fabric.Path} thisArg
     */
    initialize: function(path, options) {
      options = options || { };
      this.callSuper('initialize', options);

      if (!path) {
        path = [];
      }

      var fromArray = _toString.call(path) === '[object Array]';

      this.path = fromArray
        ? path
        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)
        : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);

      if (!this.path) {
        return;
      }

      if (!fromArray) {
        this.path = this._parsePath();
      }

      this._setPositionDimensions(options);
    },

    /**
     * @private
     * @param {Object} options Options object
     */
    _setPositionDimensions: function(options) {
      var calcDim = this._parseDimensions();

      this.width = calcDim.width;
      this.height = calcDim.height;

      if (typeof options.left === 'undefined') {
        this.left = calcDim.left;
      }

      if (typeof options.top === 'undefined') {
        this.top = calcDim.top;
      }

      this.pathOffset = this.pathOffset || {
        x: calcDim.left + this.width / 2,
        y: calcDim.top + this.height / 2
      };
    },

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx context to render path on
     */
    _renderPathCommands: function(ctx) {
      var current, // current instruction
          previous = null,
          subpathStartX = 0,
          subpathStartY = 0,
          x = 0, // current x
          y = 0, // current y
          controlX = 0, // current control point x
          controlY = 0, // current control point y
          tempX,
          tempY,
          l = -this.pathOffset.x,
          t = -this.pathOffset.y;

      ctx.beginPath();

      for (var i = 0, len = this.path.length; i < len; ++i) {

        current = this.path[i];

        switch (current[0]) { // first letter

          case 'l': // lineto, relative
            x += current[1];
            y += current[2];
            ctx.lineTo(x + l, y + t);
            break;

          case 'L': // lineto, absolute
            x = current[1];
            y = current[2];
            ctx.lineTo(x + l, y + t);
            break;

          case 'h': // horizontal lineto, relative
            x += current[1];
            ctx.lineTo(x + l, y + t);
            break;

          case 'H': // horizontal lineto, absolute
            x = current[1];
            ctx.lineTo(x + l, y + t);
            break;

          case 'v': // vertical lineto, relative
            y += current[1];
            ctx.lineTo(x + l, y + t);
            break;

          case 'V': // verical lineto, absolute
            y = current[1];
            ctx.lineTo(x + l, y + t);
            break;

          case 'm': // moveTo, relative
            x += current[1];
            y += current[2];
            subpathStartX = x;
            subpathStartY = y;
            ctx.moveTo(x + l, y + t);
            break;

          case 'M': // moveTo, absolute
            x = current[1];
            y = current[2];
            subpathStartX = x;
            subpathStartY = y;
            ctx.moveTo(x + l, y + t);
            break;

          case 'c': // bezierCurveTo, relative
            tempX = x + current[5];
            tempY = y + current[6];
            controlX = x + current[3];
            controlY = y + current[4];
            ctx.bezierCurveTo(
              x + current[1] + l, // x1
              y + current[2] + t, // y1
              controlX + l, // x2
              controlY + t, // y2
              tempX + l,
              tempY + t
            );
            x = tempX;
            y = tempY;
            break;

          case 'C': // bezierCurveTo, absolute
            x = current[5];
            y = current[6];
            controlX = current[3];
            controlY = current[4];
            ctx.bezierCurveTo(
              current[1] + l,
              current[2] + t,
              controlX + l,
              controlY + t,
              x + l,
              y + t
            );
            break;

          case 's': // shorthand cubic bezierCurveTo, relative

            // transform to absolute x,y
            tempX = x + current[3];
            tempY = y + current[4];

            if (previous[0].match(/[CcSs]/) === null) {
              // If there is no previous command or if the previous command was not a C, c, S, or s,
              // the control point is coincident with the current point
              controlX = x;
              controlY = y;
            }
            else {
              // calculate reflection of previous control points
              controlX = 2 * x - controlX;
              controlY = 2 * y - controlY;
            }

            ctx.bezierCurveTo(
              controlX + l,
              controlY + t,
              x + current[1] + l,
              y + current[2] + t,
              tempX + l,
              tempY + t
            );
            // set control point to 2nd one of this command
            // "... the first control point is assumed to be
            // the reflection of the second control point on
            // the previous command relative to the current point."
            controlX = x + current[1];
            controlY = y + current[2];

            x = tempX;
            y = tempY;
            break;

          case 'S': // shorthand cubic bezierCurveTo, absolute
            tempX = current[3];
            tempY = current[4];
            if (previous[0].match(/[CcSs]/) === null) {
              // If there is no previous command or if the previous command was not a C, c, S, or s,
              // the control point is coincident with the current point
              controlX = x;
              controlY = y;
            }
            else {
              // calculate reflection of previous control points
              controlX = 2 * x - controlX;
              controlY = 2 * y - controlY;
            }
            ctx.bezierCurveTo(
              controlX + l,
              controlY + t,
              current[1] + l,
              current[2] + t,
              tempX + l,
              tempY + t
            );
            x = tempX;
            y = tempY;

            // set control point to 2nd one of this command
            // "... the first control point is assumed to be
            // the reflection of the second control point on
            // the previous command relative to the current point."
            controlX = current[1];
            controlY = current[2];

            break;

          case 'q': // quadraticCurveTo, relative
            // transform to absolute x,y
            tempX = x + current[3];
            tempY = y + current[4];

            controlX = x + current[1];
            controlY = y + current[2];

            ctx.quadraticCurveTo(
              controlX + l,
              controlY + t,
              tempX + l,
              tempY + t
            );
            x = tempX;
            y = tempY;
            break;

          case 'Q': // quadraticCurveTo, absolute
            tempX = current[3];
            tempY = current[4];

            ctx.quadraticCurveTo(
              current[1] + l,
              current[2] + t,
              tempX + l,
              tempY + t
            );
            x = tempX;
            y = tempY;
            controlX = current[1];
            controlY = current[2];
            break;

          case 't': // shorthand quadraticCurveTo, relative

            // transform to absolute x,y
            tempX = x + current[1];
            tempY = y + current[2];

            if (previous[0].match(/[QqTt]/) === null) {
              // If there is no previous command or if the previous command was not a Q, q, T or t,
              // assume the control point is coincident with the current point
              controlX = x;
              controlY = y;
            }
            else {
              // calculate reflection of previous control point
              controlX = 2 * x - controlX;
              controlY = 2 * y - controlY;
            }

            ctx.quadraticCurveTo(
              controlX + l,
              controlY + t,
              tempX + l,
              tempY + t
            );
            x = tempX;
            y = tempY;

            break;

          case 'T':
            tempX = current[1];
            tempY = current[2];

            if (previous[0].match(/[QqTt]/) === null) {
              // If there is no previous command or if the previous command was not a Q, q, T or t,
              // assume the control point is coincident with the current point
              controlX = x;
              controlY = y;
            }
            else {
              // calculate reflection of previous control point
              controlX = 2 * x - controlX;
              controlY = 2 * y - controlY;
            }
            ctx.quadraticCurveTo(
              controlX + l,
              controlY + t,
              tempX + l,
              tempY + t
            );
            x = tempX;
            y = tempY;
            break;

          case 'a':
            // TODO: optimize this
            drawArc(ctx, x + l, y + t, [
              current[1],
              current[2],
              current[3],
              current[4],
              current[5],
              current[6] + x + l,
              current[7] + y + t
            ]);
            x += current[6];
            y += current[7];
            break;

          case 'A':
            // TODO: optimize this
            drawArc(ctx, x + l, y + t, [
              current[1],
              current[2],
              current[3],
              current[4],
              current[5],
              current[6] + l,
              current[7] + t
            ]);
            x = current[6];
            y = current[7];
            break;

          case 'z':
          case 'Z':
            x = subpathStartX;
            y = subpathStartY;
            ctx.closePath();
            break;
        }
        previous = current;
      }
    },

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx context to render path on
     */
    _render: function(ctx) {
      this._renderPathCommands(ctx);
      this._renderPaintInOrder(ctx);
    },

    /**
     * Returns string representation of an instance
     * @return {String} string representation of an instance
     */
    toString: function() {
      return '#<fabric.Path (' + this.complexity() +
        '): { "top": ' + this.top + ', "left": ' + this.left + ' }>';
    },

    /**
     * Returns object representation of an instance
     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
     * @return {Object} object representation of an instance
     */
    toObject: function(propertiesToInclude) {
      var o = extend(this.callSuper('toObject', propertiesToInclude), {
        path: this.path.map(function(item) { return item.slice(); }),
        top: this.top,
        left: this.left,
      });
      return o;
    },

    /**
     * Returns dataless object representation of an instance
     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
     * @return {Object} object representation of an instance
     */
    toDatalessObject: function(propertiesToInclude) {
      var o = this.toObject(['sourcePath'].concat(propertiesToInclude));
      if (o.sourcePath) {
        delete o.path;
      }
      return o;
    },

    /* _TO_SVG_START_ */
    /**
     * Returns svg representation of an instance
     * @return {Array} an array of strings with the specific svg representation
     * of the instance
     */
    _toSVG: function() {
      var path = this.path.map(function(path) {
        return path.join(' ');
      }).join(' ');
      return [
        '<path ', 'COMMON_PARTS',
        'd="', path,
        '" stroke-linecap="round" ',
        '/>\n'
      ];
    },

    _getOffsetTransform: function() {
      var digits = fabric.Object.NUM_FRACTION_DIGITS;
      return ' translate(' + toFixed(-this.pathOffset.x, digits) + ', ' +
          toFixed(-this.pathOffset.y, digits) + ')';
    },

    /**
     * Returns svg clipPath representation of an instance
     * @param {Function} [reviver] Method for further parsing of svg representation.
     * @return {String} svg representation of an instance
     */
    toClipPathSVG: function(reviver) {
      var additionalTransform = this._getOffsetTransform();
      return '\t' + this._createBaseClipPathSVGMarkup(
        this._toSVG(), { reviver: reviver, additionalTransform: additionalTransform }
      );
    },

    /**
     * Returns svg representation of an instance
     * @param {Function} [reviver] Method for further parsing of svg representation.
     * @return {String} svg representation of an instance
     */
    toSVG: function(reviver) {
      var additionalTransform = this._getOffsetTransform();
      return this._createBaseSVGMarkup(this._toSVG(), { reviver: reviver, additionalTransform: additionalTransform  });
    },
    /* _TO_SVG_END_ */

    /**
     * Returns number representation of an instance complexity
     * @return {Number} complexity of this instance
     */
    complexity: function() {
      return this.path.length;
    },

    /**
     * @private
     */
    _parsePath: function() {
      var result = [],
          coords = [],
          currentPath,
          parsed,
          re = /([-+]?((\d+\.\d+)|((\d+)|(\.\d+)))(?:e[-+]?\d+)?)/ig,
          match,
          coordsStr;

      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {
        currentPath = this.path[i];

        coordsStr = currentPath.slice(1).trim();
        coords.length = 0;

        while ((match = re.exec(coordsStr))) {
          coords.push(match[0]);
        }

        coordsParsed = [currentPath.charAt(0)];

        for (var j = 0, jlen = coords.length; j < jlen; j++) {
          parsed = parseFloat(coords[j]);
          if (!isNaN(parsed)) {
            coordsParsed.push(parsed);
          }
        }

        var command = coordsParsed[0],
            commandLength = commandLengths[command.toLowerCase()],
            repeatedCommand = repeatedCommands[command] || command;

        if (coordsParsed.length - 1 > commandLength) {
          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {
            result.push([command].concat(coordsParsed.slice(k, k + commandLength)));
            command = repeatedCommand;
          }
        }
        else {
          result.push(coordsParsed);
        }
      }

      return result;
    },

    /**
     * @private
     */
    _parseDimensions: function() {

      var aX = [],
          aY = [],
          current, // current instruction
          previous = null,
          subpathStartX = 0,
          subpathStartY = 0,
          x = 0, // current x
          y = 0, // current y
          controlX = 0, // current control point x
          controlY = 0, // current control point y
          tempX,
          tempY,
          bounds;

      for (var i = 0, len = this.path.length; i < len; ++i) {

        current = this.path[i];

        switch (current[0]) { // first letter

          case 'l': // lineto, relative
            x += current[1];
            y += current[2];
            bounds = [];
            break;

          case 'L': // lineto, absolute
            x = current[1];
            y = current[2];
            bounds = [];
            break;

          case 'h': // horizontal lineto, relative
            x += current[1];
            bounds = [];
            break;

          case 'H': // horizontal lineto, absolute
            x = current[1];
            bounds = [];
            break;

          case 'v': // vertical lineto, relative
            y += current[1];
            bounds = [];
            break;

          case 'V': // verical lineto, absolute
            y = current[1];
            bounds = [];
            break;

          case 'm': // moveTo, relative
            x += current[1];
            y += current[2];
            subpathStartX = x;
            subpathStartY = y;
            bounds = [];
            break;

          case 'M': // moveTo, absolute
            x = current[1];
            y = current[2];
            subpathStartX = x;
            subpathStartY = y;
            bounds = [];
            break;

          case 'c': // bezierCurveTo, relative
            tempX = x + current[5];
            tempY = y + current[6];
            controlX = x + current[3];
            controlY = y + current[4];
            bounds = fabric.util.getBoundsOfCurve(x, y,
              x + current[1], // x1
              y + current[2], // y1
              controlX, // x2
              controlY, // y2
              tempX,
              tempY
            );
            x = tempX;
            y = tempY;
            break;

          case 'C': // bezierCurveTo, absolute
            controlX = current[3];
            controlY = current[4];
            bounds = fabric.util.getBoundsOfCurve(x, y,
              current[1],
              current[2],
              controlX,
              controlY,
              current[5],
              current[6]
            );
            x = current[5];
            y = current[6];
            break;

          case 's': // shorthand cubic bezierCurveTo, relative

            // transform to absolute x,y
            tempX = x + current[3];
            tempY = y + current[4];

            if (previous[0].match(/[CcSs]/) === null) {
              // If there is no previous command or if the previous command was not a C, c, S, or s,
              // the control point is coincident with the current point
              controlX = x;
              controlY = y;
            }
            else {
              // calculate reflection of previous control points
              controlX = 2 * x - controlX;
              controlY = 2 * y - controlY;
            }

            bounds = fabric.util.getBoundsOfCurve(x, y,
              controlX,
              controlY,
              x + current[1],
              y + current[2],
              tempX,
              tempY
            );
            // set control point to 2nd one of this command
            // "... the first control point is assumed to be
            // the reflection of the second control point on
            // the previous command relative to the current point."
            controlX = x + current[1];
            controlY = y + current[2];
            x = tempX;
            y = tempY;
            break;

          case 'S': // shorthand cubic bezierCurveTo, absolute
            tempX = current[3];
            tempY = current[4];
            if (previous[0].match(/[CcSs]/) === null) {
              // If there is no previous command or if the previous command was not a C, c, S, or s,
              // the control point is coincident with the current point
              controlX = x;
              controlY = y;
            }
            else {
              // calculate reflection of previous control points
              controlX = 2 * x - controlX;
              controlY = 2 * y - controlY;
            }
            bounds = fabric.util.getBoundsOfCurve(x, y,
              controlX,
              controlY,
              current[1],
              current[2],
              tempX,
              tempY
            );
            x = tempX;
            y = tempY;
            // set control point to 2nd one of this command
            // "... the first control point is assumed to be
            // the reflection of the second control point on
            // the previous command relative to the current point."
            controlX = current[1];
            controlY = current[2];
            break;

          case 'q': // quadraticCurveTo, relative
            // transform to absolute x,y
            tempX = x + current[3];
            tempY = y + current[4];
            controlX = x + current[1];
            controlY = y + current[2];
            bounds = fabric.util.getBoundsOfCurve(x, y,
              controlX,
              controlY,
              controlX,
              controlY,
              tempX,
              tempY
            );
            x = tempX;
            y = tempY;
            break;

          case 'Q': // quadraticCurveTo, absolute
            controlX = current[1];
            controlY = current[2];
            bounds = fabric.util.getBoundsOfCurve(x, y,
              controlX,
              controlY,
              controlX,
              controlY,
              current[3],
              current[4]
            );
            x = current[3];
            y = current[4];
            break;

          case 't': // shorthand quadraticCurveTo, relative
            // transform to absolute x,y
            tempX = x + current[1];
            tempY = y + current[2];
            if (previous[0].match(/[QqTt]/) === null) {
              // If there is no previous command or if the previous command was not a Q, q, T or t,
              // assume the control point is coincident with the current point
              controlX = x;
              controlY = y;
            }
            else {
              // calculate reflection of previous control point
              controlX = 2 * x - controlX;
              controlY = 2 * y - controlY;
            }

            bounds = fabric.util.getBoundsOfCurve(x, y,
              controlX,
              controlY,
              controlX,
              controlY,
              tempX,
              tempY
            );
            x = tempX;
            y = tempY;

            break;

          case 'T':
            tempX = current[1];
            tempY = current[2];

            if (previous[0].match(/[QqTt]/) === null) {
              // If there is no previous command or if the previous command was not a Q, q, T or t,
              // assume the control point is coincident with the current point
              controlX = x;
              controlY = y;
            }
            else {
              // calculate reflection of previous control point
              controlX = 2 * x - controlX;
              controlY = 2 * y - controlY;
            }
            bounds = fabric.util.getBoundsOfCurve(x, y,
              controlX,
              controlY,
              controlX,
              controlY,
              tempX,
              tempY
            );
            x = tempX;
            y = tempY;
            break;

          case 'a':
            // TODO: optimize this
            bounds = fabric.util.getBoundsOfArc(x, y,
              current[1],
              current[2],
              current[3],
              current[4],
              current[5],
              current[6] + x,
              current[7] + y
            );
            x += current[6];
            y += current[7];
            break;

          case 'A':
            // TODO: optimize this
            bounds = fabric.util.getBoundsOfArc(x, y,
              current[1],
              current[2],
              current[3],
              current[4],
              current[5],
              current[6],
              current[7]
            );
            x = current[6];
            y = current[7];
            break;

          case 'z':
          case 'Z':
            x = subpathStartX;
            y = subpathStartY;
            break;
        }
        previous = current;
        bounds.forEach(function (point) {
          aX.push(point.x);
          aY.push(point.y);
        });
        aX.push(x);
        aY.push(y);
      }

      var minX = min(aX) || 0,
          minY = min(aY) || 0,
          maxX = max(aX) || 0,
          maxY = max(aY) || 0,
          deltaX = maxX - minX,
          deltaY = maxY - minY,

          o = {
            left: minX,
            top: minY,
            width: deltaX,
            height: deltaY
          };

      return o;
    }
  });

  /**
   * Creates an instance of fabric.Path from an object
   * @static
   * @memberOf fabric.Path
   * @param {Object} object
   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created
   */
  fabric.Path.fromObject = function(object, callback) {
    if (typeof object.sourcePath === 'string') {
      var pathUrl = object.sourcePath;
      fabric.loadSVGFromURL(pathUrl, function (elements) {
        var path = elements[0];
        path.setOptions(object);
        callback && callback(path);
      });
    }
    else {
      fabric.Object._fromObject('Path', object, callback, 'path');
    }
  };

  /* _FROM_SVG_START_ */
  /**
   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)
   * @static
   * @memberOf fabric.Path
   * @see http://www.w3.org/TR/SVG/paths.html#PathElement
   */
  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);

  /**
   * Creates an instance of fabric.Path from an SVG <path> element
   * @static
   * @memberOf fabric.Path
   * @param {SVGElement} element to parse
   * @param {Function} callback Callback to invoke when an fabric.Path instance is created
   * @param {Object} [options] Options object
   * @param {Function} [callback] Options callback invoked after parsing is finished
   */
  fabric.Path.fromElement = function(element, callback, options) {
    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);
    callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));
  };
  /* _FROM_SVG_END_ */

})( true ? exports : undefined);


(function(global) {

  'use strict';

  var fabric = global.fabric || (global.fabric = { }),
      min = fabric.util.array.min,
      max = fabric.util.array.max;

  if (fabric.Group) {
    return;
  }

  /**
   * Group class
   * @class fabric.Group
   * @extends fabric.Object
   * @mixes fabric.Collection
   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}
   * @see {@link fabric.Group#initialize} for constructor definition
   */
  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {

    /**
     * Type of an object
     * @type String
     * @default
     */
    type: 'group',

    /**
     * Width of stroke
     * @type Number
     * @default
     */
    strokeWidth: 0,

    /**
     * Indicates if click events should also check for subtargets
     * @type Boolean
     * @default
     */
    subTargetCheck: false,

    /**
     * Groups are container, do not render anything on theyr own, ence no cache properties
     * @type Array
     * @default
     */
    cacheProperties: [],

    /**
     * setOnGroup is a method used for TextBox that is no more used since 2.0.0 The behavior is still
     * available setting this boolean to true.
     * @type Boolean
     * @since 2.0.0
     * @default
     */
    useSetOnGroup: false,

    /**
     * Constructor
     * @param {Object} objects Group objects
     * @param {Object} [options] Options object
     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.
     * @return {Object} thisArg
     */
    initialize: function(objects, options, isAlreadyGrouped) {
      options = options || {};
      this._objects = [];
      // if objects enclosed in a group have been grouped already,
      // we cannot change properties of objects.
      // Thus we need to set options to group without objects,
      isAlreadyGrouped && this.callSuper('initialize', options);
      this._objects = objects || [];
      for (var i = this._objects.length; i--; ) {
        this._objects[i].group = this;
      }

      if (!isAlreadyGrouped) {
        var center = options && options.centerPoint;
        // we want to set origins before calculating the bounding box.
        // so that the topleft can be set with that in mind.
        // if specific top and left are passed, are overwritten later
        // with the callSuper('initialize', options)
        if (options.originX !== undefined) {
          this.originX = options.originX;
        }
        if (options.originY !== undefined) {
          this.originY = options.originY;
        }
        // if coming from svg i do not want to calc bounds.
        // i assume width and height are passed along options
        center || this._calcBounds();
        this._updateObjectsCoords(center);
        delete options.centerPoint;
        this.callSuper('initialize', options);
      }
      else {
        this._updateObjectsACoords();
      }

      this.setCoords();
    },

    /**
     * @private
     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change
     */
    _updateObjectsACoords: function() {
      var ignoreZoom = true, skipAbsolute = true;
      for (var i = this._objects.length; i--; ){
        this._objects[i].setCoords(ignoreZoom, skipAbsolute);
      }
    },

    /**
     * @private
     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change
     */
    _updateObjectsCoords: function(center) {
      var center = center || this.getCenterPoint();
      for (var i = this._objects.length; i--; ){
        this._updateObjectCoords(this._objects[i], center);
      }
    },

    /**
     * @private
     * @param {Object} object
     * @param {fabric.Point} center, current center of group.
     */
    _updateObjectCoords: function(object, center) {
      var objectLeft = object.left,
          objectTop = object.top,
          ignoreZoom = true, skipAbsolute = true;

      object.set({
        left: objectLeft - center.x,
        top: objectTop - center.y
      });
      object.group = this;
      object.setCoords(ignoreZoom, skipAbsolute);
    },

    /**
     * Returns string represenation of a group
     * @return {String}
     */
    toString: function() {
      return '#<fabric.Group: (' + this.complexity() + ')>';
    },

    /**
     * Adds an object to a group; Then recalculates group's dimension, position.
     * @param {Object} object
     * @return {fabric.Group} thisArg
     * @chainable
     */
    addWithUpdate: function(object) {
      this._restoreObjectsState();
      fabric.util.resetObjectTransform(this);
      if (object) {
        this._objects.push(object);
        object.group = this;
        object._set('canvas', this.canvas);
      }
      this._calcBounds();
      this._updateObjectsCoords();
      this.setCoords();
      this.dirty = true;
      return this;
    },

    /**
     * Removes an object from a group; Then recalculates group's dimension, position.
     * @param {Object} object
     * @return {fabric.Group} thisArg
     * @chainable
     */
    removeWithUpdate: function(object) {
      this._restoreObjectsState();
      fabric.util.resetObjectTransform(this);

      this.remove(object);
      this._calcBounds();
      this._updateObjectsCoords();
      this.setCoords();
      this.dirty = true;
      return this;
    },

    /**
     * @private
     */
    _onObjectAdded: function(object) {
      this.dirty = true;
      object.group = this;
      object._set('canvas', this.canvas);
    },

    /**
     * @private
     */
    _onObjectRemoved: function(object) {
      this.dirty = true;
      delete object.group;
    },

    /**
     * @private
     */
    _set: function(key, value) {
      var i = this._objects.length;
      if (this.useSetOnGroup) {
        while (i--) {
          this._objects[i].setOnGroup(key, value);
        }
      }
      if (key === 'canvas') {
        while (i--) {
          this._objects[i]._set(key, value);
        }
      }
      fabric.Object.prototype._set.call(this, key, value);
    },

    /**
     * Returns object representation of an instance
     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
     * @return {Object} object representation of an instance
     */
    toObject: function(propertiesToInclude) {
      var _includeDefaultValues = this.includeDefaultValues;
      var objsToObject = this._objects.map(function(obj) {
        var originalDefaults = obj.includeDefaultValues;
        obj.includeDefaultValues = _includeDefaultValues;
        var _obj = obj.toObject(propertiesToInclude);
        obj.includeDefaultValues = originalDefaults;
        return _obj;
      });
      var obj = fabric.Object.prototype.toObject.call(this, propertiesToInclude);
      obj.objects = objsToObject;
      return obj;
    },

    /**
     * Returns object representation of an instance, in dataless mode.
     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
     * @return {Object} object representation of an instance
     */
    toDatalessObject: function(propertiesToInclude) {
      var objsToObject, sourcePath = this.sourcePath;
      if (sourcePath) {
        objsToObject = sourcePath;
      }
      else {
        var _includeDefaultValues = this.includeDefaultValues;
        objsToObject = this._objects.map(function(obj) {
          var originalDefaults = obj.includeDefaultValues;
          obj.includeDefaultValues = _includeDefaultValues;
          var _obj = obj.toDatalessObject(propertiesToInclude);
          obj.includeDefaultValues = originalDefaults;
          return _obj;
        });
      }
      var obj = fabric.Object.prototype.toDatalessObject.call(this, propertiesToInclude);
      obj.objects = objsToObject;
      return obj;
    },

    /**
     * Renders instance on a given context
     * @param {CanvasRenderingContext2D} ctx context to render instance on
     */
    render: function(ctx) {
      this._transformDone = true;
      this.callSuper('render', ctx);
      this._transformDone = false;
    },

    /**
     * Decide if the object should cache or not. Create its own cache level
     * objectCaching is a global flag, wins over everything
     * needsItsOwnCache should be used when the object drawing method requires
     * a cache step. None of the fabric classes requires it.
     * Generally you do not cache objects in groups because the group outside is cached.
     * @return {Boolean}
     */
    shouldCache: function() {
      var ownCache = this.objectCaching && (!this.group || this.needsItsOwnCache() || !this.group.isOnACache());
      this.ownCaching = ownCache;
      if (ownCache) {
        for (var i = 0, len = this._objects.length; i < len; i++) {
          if (this._objects[i].willDrawShadow()) {
            this.ownCaching = false;
            return false;
          }
        }
      }
      return ownCache;
    },

    /**
     * Check if this object or a child object will cast a shadow
     * @return {Boolean}
     */
    willDrawShadow: function() {
      if (this.shadow) {
        return fabric.Object.prototype.willDrawShadow.call(this);
      }
      for (var i = 0, len = this._objects.length; i < len; i++) {
        if (this._objects[i].willDrawShadow()) {
          return true;
        }
      }
      return false;
    },

    /**
     * Check if this group or its parent group are caching, recursively up
     * @return {Boolean}
     */
    isOnACache: function() {
      return this.ownCaching || (this.group && this.group.isOnACache());
    },

    /**
     * Execute the drawing operation for an object on a specified context
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    drawObject: function(ctx) {
      for (var i = 0, len = this._objects.length; i < len; i++) {
        this._objects[i].render(ctx);
      }
      this._drawClipPath(ctx);
    },

    /**
     * Check if cache is dirty
     */
    isCacheDirty: function(skipCanvas) {
      if (this.callSuper('isCacheDirty', skipCanvas)) {
        return true;
      }
      if (!this.statefullCache) {
        return false;
      }
      for (var i = 0, len = this._objects.length; i < len; i++) {
        if (this._objects[i].isCacheDirty(true)) {
          if (this._cacheCanvas) {
            // if this group has not a cache canvas there is nothing to clean
            var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;
            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);
          }
          return true;
        }
      }
      return false;
    },

    /**
     * Retores original state of each of group objects (original state is that which was before group was created).
     * @private
     * @return {fabric.Group} thisArg
     * @chainable
     */
    _restoreObjectsState: function() {
      this._objects.forEach(this._restoreObjectState, this);
      return this;
    },

    /**
     * Realises the transform from this group onto the supplied object
     * i.e. it tells you what would happen if the supplied object was in
     * the group, and then the group was destroyed. It mutates the supplied
     * object.
     * @param {fabric.Object} object
     * @return {fabric.Object} transformedObject
     */
    realizeTransform: function(object) {
      var matrix = object.calcTransformMatrix(),
          options = fabric.util.qrDecompose(matrix),
          center = new fabric.Point(options.translateX, options.translateY);
      object.flipX = false;
      object.flipY = false;
      object.set('scaleX', options.scaleX);
      object.set('scaleY', options.scaleY);
      object.skewX = options.skewX;
      object.skewY = options.skewY;
      object.angle = options.angle;
      object.setPositionByOrigin(center, 'center', 'center');
      return object;
    },

    /**
     * Restores original state of a specified object in group
     * @private
     * @param {fabric.Object} object
     * @return {fabric.Group} thisArg
     */
    _restoreObjectState: function(object) {
      this.realizeTransform(object);
      object.setCoords();
      delete object.group;
      return this;
    },

    /**
     * Destroys a group (restoring state of its objects)
     * @return {fabric.Group} thisArg
     * @chainable
     */
    destroy: function() {
      // when group is destroyed objects needs to get a repaint to be eventually
      // displayed on canvas.
      this._objects.forEach(function(object) {
        object.set('dirty', true);
      });
      return this._restoreObjectsState();
    },

    /**
     * make a group an active selection, remove the group from canvas
     * the group has to be on canvas for this to work.
     * @return {fabric.ActiveSelection} thisArg
     * @chainable
     */
    toActiveSelection: function() {
      if (!this.canvas) {
        return;
      }
      var objects = this._objects, canvas = this.canvas;
      this._objects = [];
      var options = this.toObject();
      delete options.objects;
      var activeSelection = new fabric.ActiveSelection([]);
      activeSelection.set(options);
      activeSelection.type = 'activeSelection';
      canvas.remove(this);
      objects.forEach(function(object) {
        object.group = activeSelection;
        object.dirty = true;
        canvas.add(object);
      });
      activeSelection.canvas = canvas;
      activeSelection._objects = objects;
      canvas._activeObject = activeSelection;
      activeSelection.setCoords();
      return activeSelection;
    },

    /**
     * Destroys a group (restoring state of its objects)
     * @return {fabric.Group} thisArg
     * @chainable
     */
    ungroupOnCanvas: function() {
      return this._restoreObjectsState();
    },

    /**
     * Sets coordinates of all objects inside group
     * @return {fabric.Group} thisArg
     * @chainable
     */
    setObjectsCoords: function() {
      var ignoreZoom = true, skipAbsolute = true;
      this.forEachObject(function(object) {
        object.setCoords(ignoreZoom, skipAbsolute);
      });
      return this;
    },

    /**
     * @private
     */
    _calcBounds: function(onlyWidthHeight) {
      var aX = [],
          aY = [],
          o, prop,
          props = ['tr', 'br', 'bl', 'tl'],
          i = 0, iLen = this._objects.length,
          j, jLen = props.length,
          ignoreZoom = true;

      for ( ; i < iLen; ++i) {
        o = this._objects[i];
        o.setCoords(ignoreZoom);
        for (j = 0; j < jLen; j++) {
          prop = props[j];
          aX.push(o.oCoords[prop].x);
          aY.push(o.oCoords[prop].y);
        }
      }

      this._getBounds(aX, aY, onlyWidthHeight);
    },

    /**
     * @private
     */
    _getBounds: function(aX, aY, onlyWidthHeight) {
      var minXY = new fabric.Point(min(aX), min(aY)),
          maxXY = new fabric.Point(max(aX), max(aY)),
          top = minXY.y || 0, left = minXY.x || 0,
          width = (maxXY.x - minXY.x) || 0,
          height = (maxXY.y - minXY.y) || 0;
      this.width = width;
      this.height = height;
      if (!onlyWidthHeight) {
        // the bounding box always finds the topleft most corner.
        // whatever is the group origin, we set up here the left/top position.
        this.setPositionByOrigin({ x: left, y: top }, 'left', 'top');
      }
    },

    /* _TO_SVG_START_ */
    /**
     * Returns svg representation of an instance
     * @param {Function} [reviver] Method for further parsing of svg representation.
     * @return {String} svg representation of an instance
     */
    toSVG: function(reviver) {
      var svgString = [];

      for (var i = 0, len = this._objects.length; i < len; i++) {
        svgString.push('\t', this._objects[i].toSVG(reviver));
      }

      return this._createBaseSVGMarkup(
        svgString,
        { reviver: reviver, noStyle: true, withShadow: true });
    },

    /**
     * Returns svg clipPath representation of an instance
     * @param {Function} [reviver] Method for further parsing of svg representation.
     * @return {String} svg representation of an instance
     */
    toClipPathSVG: function(reviver) {
      var svgString = [];

      for (var i = 0, len = this._objects.length; i < len; i++) {
        svgString.push('\t', this._objects[i].toClipPathSVG(reviver));
      }

      return this._createBaseClipPathSVGMarkup(svgString, { reviver: reviver });
    },
    /* _TO_SVG_END_ */
  });

  /**
   * Returns {@link fabric.Group} instance from an object representation
   * @static
   * @memberOf fabric.Group
   * @param {Object} object Object to create a group from
   * @param {Function} [callback] Callback to invoke when an group instance is created
   */
  fabric.Group.fromObject = function(object, callback) {
    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {
      fabric.util.enlivenObjects([object.clipPath], function(enlivedClipPath) {
        var options = fabric.util.object.clone(object, true);
        options.clipPath = enlivedClipPath[0];
        delete options.objects;
        callback && callback(new fabric.Group(enlivenedObjects, options, true));
      });
    });
  };

})( true ? exports : undefined);


(function(global) {

  'use strict';

  var fabric = global.fabric || (global.fabric = { });

  if (fabric.ActiveSelection) {
    return;
  }

  /**
   * Group class
   * @class fabric.ActiveSelection
   * @extends fabric.Group
   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}
   * @see {@link fabric.ActiveSelection#initialize} for constructor definition
   */
  fabric.ActiveSelection = fabric.util.createClass(fabric.Group, /** @lends fabric.ActiveSelection.prototype */ {

    /**
     * Type of an object
     * @type String
     * @default
     */
    type: 'activeSelection',

    /**
     * Constructor
     * @param {Object} objects ActiveSelection objects
     * @param {Object} [options] Options object
     * @return {Object} thisArg
     */
    initialize: function(objects, options) {
      options = options || {};
      this._objects = objects || [];
      for (var i = this._objects.length; i--; ) {
        this._objects[i].group = this;
      }

      if (options.originX) {
        this.originX = options.originX;
      }
      if (options.originY) {
        this.originY = options.originY;
      }
      this._calcBounds();
      this._updateObjectsCoords();
      fabric.Object.prototype.initialize.call(this, options);
      this.setCoords();
    },

    /**
     * Change te activeSelection to a normal group,
     * High level function that automatically adds it to canvas as
     * active object. no events fired.
     * @since 2.0.0
     * @return {fabric.Group}
     */
    toGroup: function() {
      var objects = this._objects.concat();
      this._objects = [];
      var options = fabric.Object.prototype.toObject.call(this);
      var newGroup = new fabric.Group([]);
      delete options.type;
      newGroup.set(options);
      objects.forEach(function(object) {
        object.canvas.remove(object);
        object.group = newGroup;
      });
      newGroup._objects = objects;
      if (!this.canvas) {
        return newGroup;
      }
      var canvas = this.canvas;
      canvas.add(newGroup);
      canvas._activeObject = newGroup;
      newGroup.setCoords();
      return newGroup;
    },

    /**
     * If returns true, deselection is cancelled.
     * @since 2.0.0
     * @return {Boolean} [cancel]
     */
    onDeselect: function() {
      this.destroy();
      return false;
    },

    /**
     * Returns string representation of a group
     * @return {String}
     */
    toString: function() {
      return '#<fabric.ActiveSelection: (' + this.complexity() + ')>';
    },

    /**
     * Decide if the object should cache or not. Create its own cache level
     * objectCaching is a global flag, wins over everything
     * needsItsOwnCache should be used when the object drawing method requires
     * a cache step. None of the fabric classes requires it.
     * Generally you do not cache objects in groups because the group outside is cached.
     * @return {Boolean}
     */
    shouldCache: function() {
      return false;
    },

    /**
     * Check if this group or its parent group are caching, recursively up
     * @return {Boolean}
     */
    isOnACache: function() {
      return false;
    },

    /**
     * Renders controls and borders for the object
     * @param {CanvasRenderingContext2D} ctx Context to render on
     * @param {Object} [styleOverride] properties to override the object style
     * @param {Object} [childrenOverride] properties to override the children overrides
     */
    _renderControls: function(ctx, styleOverride, childrenOverride) {
      ctx.save();
      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;
      this.callSuper('_renderControls', ctx, styleOverride);
      childrenOverride = childrenOverride || { };
      if (typeof childrenOverride.hasControls === 'undefined') {
        childrenOverride.hasControls = false;
      }
      if (typeof childrenOverride.hasRotatingPoint === 'undefined') {
        childrenOverride.hasRotatingPoint = false;
      }
      childrenOverride.forActiveSelection = true;
      for (var i = 0, len = this._objects.length; i < len; i++) {
        this._objects[i]._renderControls(ctx, childrenOverride);
      }
      ctx.restore();
    },
  });

  /**
   * Returns {@link fabric.ActiveSelection} instance from an object representation
   * @static
   * @memberOf fabric.ActiveSelection
   * @param {Object} object Object to create a group from
   * @param {Function} [callback] Callback to invoke when an ActiveSelection instance is created
   */
  fabric.ActiveSelection.fromObject = function(object, callback) {
    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {
      delete object.objects;
      callback && callback(new fabric.ActiveSelection(enlivenedObjects, object, true));
    });
  };

})( true ? exports : undefined);


(function(global) {

  'use strict';

  var extend = fabric.util.object.extend;

  if (!global.fabric) {
    global.fabric = { };
  }

  if (global.fabric.Image) {
    fabric.warn('fabric.Image is already defined.');
    return;
  }

  /**
   * Image class
   * @class fabric.Image
   * @extends fabric.Object
   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}
   * @see {@link fabric.Image#initialize} for constructor definition
   */
  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {

    /**
     * Type of an object
     * @type String
     * @default
     */
    type: 'image',

    /**
     * crossOrigin value (one of "", "anonymous", "use-credentials")
     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes
     * @type String
     * @default
     */
    crossOrigin: '',

    /**
     * Width of a stroke.
     * For image quality a stroke multiple of 2 gives better results.
     * @type Number
     * @default
     */
    strokeWidth: 0,

    /**
     * When calling {@link fabric.Image.getSrc}, return value from element src with `element.getAttribute('src')`.
     * This allows for relative urls as image src.
     * @since 2.7.0
     * @type Boolean
     * @default
     */
    srcFromAttribute: false,

    /**
     * private
     * contains last value of scaleX to detect
     * if the Image got resized after the last Render
     * @type Number
     */
    _lastScaleX: 1,

    /**
     * private
     * contains last value of scaleY to detect
     * if the Image got resized after the last Render
     * @type Number
     */
    _lastScaleY: 1,

    /**
     * private
     * contains last value of scaling applied by the apply filter chain
     * @type Number
     */
    _filterScalingX: 1,

    /**
     * private
     * contains last value of scaling applied by the apply filter chain
     * @type Number
     */
    _filterScalingY: 1,

    /**
     * minimum scale factor under which any resizeFilter is triggered to resize the image
     * 0 will disable the automatic resize. 1 will trigger automatically always.
     * number bigger than 1 are not implemented yet.
     * @type Number
     */
    minimumScaleTrigger: 0.5,

    /**
     * List of properties to consider when checking if
     * state of an object is changed ({@link fabric.Object#hasStateChanged})
     * as well as for history (undo/redo) purposes
     * @type Array
     */
    stateProperties: fabric.Object.prototype.stateProperties.concat('cropX', 'cropY'),

    /**
     * key used to retrieve the texture representing this image
     * @since 2.0.0
     * @type String
     * @default
     */
    cacheKey: '',

    /**
     * Image crop in pixels from original image size.
     * @since 2.0.0
     * @type Number
     * @default
     */
    cropX: 0,

    /**
     * Image crop in pixels from original image size.
     * @since 2.0.0
     * @type Number
     * @default
     */
    cropY: 0,

    /**
     * Constructor
     * @param {HTMLImageElement | String} element Image element
     * @param {Object} [options] Options object
     * @param {function} [callback] callback function to call after eventual filters applied.
     * @return {fabric.Image} thisArg
     */
    initialize: function(element, options) {
      options || (options = { });
      this.filters = [];
      this.cacheKey = 'texture' + fabric.Object.__uid++;
      this.callSuper('initialize', options);
      this._initElement(element, options);
    },

    /**
     * Returns image element which this instance if based on
     * @return {HTMLImageElement} Image element
     */
    getElement: function() {
      return this._element || {};
    },

    /**
     * Sets image element for this instance to a specified one.
     * If filters defined they are applied to new image.
     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.
     * @param {HTMLImageElement} element
     * @param {Object} [options] Options object
     * @return {fabric.Image} thisArg
     * @chainable
     */
    setElement: function(element, options) {
      this.removeTexture(this.cacheKey);
      this.removeTexture(this.cacheKey + '_filtered');
      this._element = element;
      this._originalElement = element;
      this._initConfig(options);
      if (this.filters.length !== 0) {
        this.applyFilters();
      }
      // resizeFilters work on the already filtered copy.
      // we need to apply resizeFilters AFTER normal filters.
      // applyResizeFilters is run more often than normal fiters
      // and is triggered by user interactions rather than dev code
      if (this.resizeFilter) {
        this.applyResizeFilters();
      }
      return this;
    },

    /**
     * Delete a single texture if in webgl mode
     */
    removeTexture: function(key) {
      var backend = fabric.filterBackend;
      if (backend && backend.evictCachesForKey) {
        backend.evictCachesForKey(key);
      }
    },

    /**
     * Delete textures, reference to elements and eventually JSDOM cleanup
     */
    dispose: function() {
      this.removeTexture(this.cacheKey);
      this.removeTexture(this.cacheKey + '_filtered');
      this._cacheContext = undefined;
      ['_originalElement', '_element', '_filteredEl', '_cacheCanvas'].forEach((function(element) {
        fabric.util.cleanUpJsdomNode(this[element]);
        this[element] = undefined;
      }).bind(this));
    },

    /**
     * Sets crossOrigin value (on an instance and corresponding image element)
     * @return {fabric.Image} thisArg
     * @chainable
     */
    setCrossOrigin: function(value) {
      this.crossOrigin = value;
      this._element.crossOrigin = value;

      return this;
    },

    /**
     * Returns original size of an image
     * @return {Object} Object with "width" and "height" properties
     */
    getOriginalSize: function() {
      var element = this.getElement();
      return {
        width: element.naturalWidth || element.width,
        height: element.naturalHeight || element.height
      };
    },

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    _stroke: function(ctx) {
      if (!this.stroke || this.strokeWidth === 0) {
        return;
      }
      var w = this.width / 2, h = this.height / 2;
      ctx.beginPath();
      ctx.moveTo(-w, -h);
      ctx.lineTo(w, -h);
      ctx.lineTo(w, h);
      ctx.lineTo(-w, h);
      ctx.lineTo(-w, -h);
      ctx.closePath();
    },

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    _renderDashedStroke: function(ctx) {
      var x = -this.width / 2,
          y = -this.height / 2,
          w = this.width,
          h = this.height;

      ctx.save();
      this._setStrokeStyles(ctx, this);

      ctx.beginPath();
      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);
      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);
      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);
      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);
      ctx.closePath();
      ctx.restore();
    },

    /**
     * Returns object representation of an instance
     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
     * @return {Object} Object representation of an instance
     */
    toObject: function(propertiesToInclude) {
      var filters = [];

      this.filters.forEach(function(filterObj) {
        if (filterObj) {
          filters.push(filterObj.toObject());
        }
      });
      var object = extend(
        this.callSuper(
          'toObject',
          ['crossOrigin', 'cropX', 'cropY'].concat(propertiesToInclude)
        ), {
          src: this.getSrc(),
          filters: filters,
        });
      if (this.resizeFilter) {
        object.resizeFilter = this.resizeFilter.toObject();
      }
      return object;
    },

    /**
     * Returns true if an image has crop applied, inspecting values of cropX,cropY,width,hight.
     * @return {Boolean}
     */
    hasCrop: function() {
      return this.cropX || this.cropY || this.width < this._element.width || this.height < this._element.height;
    },

    /* _TO_SVG_START_ */
    /**
     * Returns svg representation of an instance
     * @return {Array} an array of strings with the specific svg representation
     * of the instance
     */
    _toSVG: function() {
      var svgString = [], imageMarkup = [], strokeSvg,
          x = -this.width / 2, y = -this.height / 2, clipPath = '';
      if (this.hasCrop()) {
        var clipPathId = fabric.Object.__uid++;
        svgString.push(
          '<clipPath id="imageCrop_' + clipPathId + '">\n',
          '\t<rect x="' + x + '" y="' + y + '" width="' + this.width + '" height="' + this.height + '" />\n',
          '</clipPath>\n'
        );
        clipPath = ' clip-path="url(#imageCrop_' + clipPathId + ')" ';
      }
      imageMarkup.push('\t<image ', 'COMMON_PARTS', 'xlink:href="', this.getSvgSrc(true),
        '" x="', x - this.cropX, '" y="', y - this.cropY,
        // we're essentially moving origin of transformation from top/left corner to the center of the shape
        // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left
        // so that object's center aligns with container's left/top
        '" width="', this._element.width || this._element.naturalWidth,
        '" height="', this._element.height || this._element.height,
        '"', clipPath,
        '></image>\n');

      if (this.stroke || this.strokeDashArray) {
        var origFill = this.fill;
        this.fill = null;
        strokeSvg = [
          '\t<rect ',
          'x="', x, '" y="', y,
          '" width="', this.width, '" height="', this.height,
          '" style="', this.getSvgStyles(),
          '"/>\n'
        ];
        this.fill = origFill;
      }
      if (this.paintFirst !== 'fill') {
        svgString = svgString.concat(strokeSvg, imageMarkup);
      }
      else {
        svgString = svgString.concat(imageMarkup, strokeSvg);
      }
      return svgString;
    },
    /* _TO_SVG_END_ */

    /**
     * Returns source of an image
     * @param {Boolean} filtered indicates if the src is needed for svg
     * @return {String} Source of an image
     */
    getSrc: function(filtered) {
      var element = filtered ? this._element : this._originalElement;
      if (element) {
        if (element.toDataURL) {
          return element.toDataURL();
        }

        if (this.srcFromAttribute) {
          return element.getAttribute('src');
        }
        else {
          return element.src;
        }
      }
      else {
        return this.src || '';
      }
    },

    /**
     * Sets source of an image
     * @param {String} src Source string (URL)
     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)
     * @param {Object} [options] Options object
     * @return {fabric.Image} thisArg
     * @chainable
     */
    setSrc: function(src, callback, options) {
      fabric.util.loadImage(src, function(img) {
        this.setElement(img, options);
        this._setWidthHeight();
        callback && callback(this);
      }, this, options && options.crossOrigin);
      return this;
    },

    /**
     * Returns string representation of an instance
     * @return {String} String representation of an instance
     */
    toString: function() {
      return '#<fabric.Image: { src: "' + this.getSrc() + '" }>';
    },

    applyResizeFilters: function() {
      var filter = this.resizeFilter,
          minimumScale = this.minimumScaleTrigger,
          objectScale = this.getTotalObjectScaling(),
          scaleX = objectScale.scaleX,
          scaleY = objectScale.scaleY,
          elementToFilter = this._filteredEl || this._originalElement;
      if (this.group) {
        this.set('dirty', true);
      }
      if (!filter || (scaleX > minimumScale && scaleY > minimumScale)) {
        this._element = elementToFilter;
        this._filterScalingX = 1;
        this._filterScalingY = 1;
        this._lastScaleX = scaleX;
        this._lastScaleY = scaleY;
        return;
      }
      if (!fabric.filterBackend) {
        fabric.filterBackend = fabric.initFilterBackend();
      }
      var canvasEl = fabric.util.createCanvasElement(),
          cacheKey = this._filteredEl ? (this.cacheKey + '_filtered') : this.cacheKey,
          sourceWidth = elementToFilter.width, sourceHeight = elementToFilter.height;
      canvasEl.width = sourceWidth;
      canvasEl.height = sourceHeight;
      this._element = canvasEl;
      this._lastScaleX = filter.scaleX = scaleX;
      this._lastScaleY = filter.scaleY = scaleY;
      fabric.filterBackend.applyFilters(
        [filter], elementToFilter, sourceWidth, sourceHeight, this._element, cacheKey);
      this._filterScalingX = canvasEl.width / this._originalElement.width;
      this._filterScalingY = canvasEl.height / this._originalElement.height;
    },

    /**
     * Applies filters assigned to this image (from "filters" array) or from filter param
     * @method applyFilters
     * @param {Array} filters to be applied
     * @param {Boolean} forResizing specify if the filter operation is a resize operation
     * @return {thisArg} return the fabric.Image object
     * @chainable
     */
    applyFilters: function(filters) {

      filters = filters || this.filters || [];
      filters = filters.filter(function(filter) { return filter && !filter.isNeutralState(); });
      this.set('dirty', true);

      // needs to clear out or WEBGL will not resize correctly
      this.removeTexture(this.cacheKey + '_filtered');

      if (filters.length === 0) {
        this._element = this._originalElement;
        this._filteredEl = null;
        this._filterScalingX = 1;
        this._filterScalingY = 1;
        return this;
      }

      var imgElement = this._originalElement,
          sourceWidth = imgElement.naturalWidth || imgElement.width,
          sourceHeight = imgElement.naturalHeight || imgElement.height;

      if (this._element === this._originalElement) {
        // if the element is the same we need to create a new element
        var canvasEl = fabric.util.createCanvasElement();
        canvasEl.width = sourceWidth;
        canvasEl.height = sourceHeight;
        this._element = canvasEl;
        this._filteredEl = canvasEl;
      }
      else {
        // clear the existing element to get new filter data
        // also dereference the eventual resized _element
        this._element = this._filteredEl;
        this._filteredEl.getContext('2d').clearRect(0, 0, sourceWidth, sourceHeight);
        // we also need to resize again at next renderAll, so remove saved _lastScaleX/Y
        this._lastScaleX = 1;
        this._lastScaleY = 1;
      }
      if (!fabric.filterBackend) {
        fabric.filterBackend = fabric.initFilterBackend();
      }
      fabric.filterBackend.applyFilters(
        filters, this._originalElement, sourceWidth, sourceHeight, this._element, this.cacheKey);
      if (this._originalElement.width !== this._element.width ||
        this._originalElement.height !== this._element.height) {
        this._filterScalingX = this._element.width / this._originalElement.width;
        this._filterScalingY = this._element.height / this._originalElement.height;
      }
      return this;
    },

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    _render: function(ctx) {
      if (this.isMoving !== true && this.resizeFilter && this._needsResize()) {
        this.applyResizeFilters();
      }
      this._stroke(ctx);
      this._renderPaintInOrder(ctx);
    },

    /**
     * Decide if the object should cache or not. Create its own cache level
     * objectCaching is a global flag, wins over everything
     * needsItsOwnCache should be used when the object drawing method requires
     * a cache step. None of the fabric classes requires it.
     * Generally you do not cache objects in groups because the group outside is cached.
     * This is the special image version where we would like to avoid caching where possible.
     * Essentially images do not benefit from caching. They may require caching, and in that
     * case we do it. Also caching an image usually ends in a loss of details.
     * A full performance audit should be done.
     * @return {Boolean}
     */
    shouldCache: function() {
      this.ownCaching = this.objectCaching && this.needsItsOwnCache();
      return this.ownCaching;
    },

    _renderFill: function(ctx) {
      var elementToDraw = this._element,
          w = this.width, h = this.height,
          sW = Math.min(elementToDraw.naturalWidth || elementToDraw.width, w * this._filterScalingX),
          sH = Math.min(elementToDraw.naturalHeight || elementToDraw.height, h * this._filterScalingY),
          x = -w / 2, y = -h / 2,
          sX = Math.max(0, this.cropX * this._filterScalingX),
          sY = Math.max(0, this.cropY * this._filterScalingY);

      elementToDraw && ctx.drawImage(elementToDraw, sX, sY, sW, sH, x, y, w, h);
    },

    /**
     * @private, needed to check if image needs resize
     */
    _needsResize: function() {
      var scale = this.getTotalObjectScaling();
      return (scale.scaleX !== this._lastScaleX || scale.scaleY !== this._lastScaleY);
    },

    /**
     * @private
     */
    _resetWidthHeight: function() {
      this.set(this.getOriginalSize());
    },

    /**
     * The Image class's initialization method. This method is automatically
     * called by the constructor.
     * @private
     * @param {HTMLImageElement|String} element The element representing the image
     * @param {Object} [options] Options object
     */
    _initElement: function(element, options) {
      this.setElement(fabric.util.getById(element), options);
      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);
    },

    /**
     * @private
     * @param {Object} [options] Options object
     */
    _initConfig: function(options) {
      options || (options = { });
      this.setOptions(options);
      this._setWidthHeight(options);
      if (this._element && this.crossOrigin) {
        this._element.crossOrigin = this.crossOrigin;
      }
    },

    /**
     * @private
     * @param {Array} filters to be initialized
     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created
     */
    _initFilters: function(filters, callback) {
      if (filters && filters.length) {
        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {
          callback && callback(enlivenedObjects);
        }, 'fabric.Image.filters');
      }
      else {
        callback && callback();
      }
    },

    /**
     * @private
     * Set the width and the height of the image object, using the element or the
     * options.
     * @param {Object} [options] Object with width/height properties
     */
    _setWidthHeight: function(options) {
      options || (options = { });
      var el = this.getElement();
      this.width = options.width || el.naturalWidth || el.width || 0;
      this.height = options.height || el.naturalHeight || el.height || 0;
    },

    /**
     * Calculate offset for center and scale factor for the image in order to respect
     * the preserveAspectRatio attribute
     * @private
     * @return {Object}
     */
    parsePreserveAspectRatioAttribute: function() {
      var pAR = fabric.util.parsePreserveAspectRatioAttribute(this.preserveAspectRatio || ''),
          rWidth = this._element.width, rHeight = this._element.height,
          scaleX = 1, scaleY = 1, offsetLeft = 0, offsetTop = 0, cropX = 0, cropY = 0,
          offset, pWidth = this.width, pHeight = this.height, parsedAttributes = { width: pWidth, height: pHeight };
      if (pAR && (pAR.alignX !== 'none' || pAR.alignY !== 'none')) {
        if (pAR.meetOrSlice === 'meet') {
          scaleX = scaleY = fabric.util.findScaleToFit(this._element, parsedAttributes);
          offset = (pWidth - rWidth * scaleX) / 2;
          if (pAR.alignX === 'Min') {
            offsetLeft = -offset;
          }
          if (pAR.alignX === 'Max') {
            offsetLeft = offset;
          }
          offset = (pHeight - rHeight * scaleY) / 2;
          if (pAR.alignY === 'Min') {
            offsetTop = -offset;
          }
          if (pAR.alignY === 'Max') {
            offsetTop = offset;
          }
        }
        if (pAR.meetOrSlice === 'slice') {
          scaleX = scaleY = fabric.util.findScaleToCover(this._element, parsedAttributes);
          offset = rWidth - pWidth / scaleX;
          if (pAR.alignX === 'Mid') {
            cropX = offset / 2;
          }
          if (pAR.alignX === 'Max') {
            cropX = offset;
          }
          offset = rHeight - pHeight / scaleY;
          if (pAR.alignY === 'Mid') {
            cropY = offset / 2;
          }
          if (pAR.alignY === 'Max') {
            cropY = offset;
          }
          rWidth = pWidth / scaleX;
          rHeight = pHeight / scaleY;
        }
      }
      else {
        scaleX = pWidth / rWidth;
        scaleY = pHeight / rHeight;
      }
      return {
        width: rWidth,
        height: rHeight,
        scaleX: scaleX,
        scaleY: scaleY,
        offsetLeft: offsetLeft,
        offsetTop: offsetTop,
        cropX: cropX,
        cropY: cropY
      };
    }
  });

  /**
   * Default CSS class name for canvas
   * @static
   * @type String
   * @default
   */
  fabric.Image.CSS_CANVAS = 'canvas-img';

  /**
   * Alias for getSrc
   * @static
   */
  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;

  /**
   * Creates an instance of fabric.Image from its object representation
   * @static
   * @param {Object} object Object to create an instance from
   * @param {Function} callback Callback to invoke when an image instance is created
   */
  fabric.Image.fromObject = function(_object, callback) {
    var object = fabric.util.object.clone(_object);
    fabric.util.loadImage(object.src, function(img, error) {
      if (error) {
        callback && callback(null, error);
        return;
      }
      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {
        object.filters = filters || [];
        fabric.Image.prototype._initFilters.call(object, [object.resizeFilter], function(resizeFilters) {
          object.resizeFilter = resizeFilters[0];
          fabric.util.enlivenObjects([object.clipPath], function(enlivedProps) {
            object.clipPath = enlivedProps[0];
            var image = new fabric.Image(img, object);
            callback(image);
          });
        });
      });
    }, null, object.crossOrigin);
  };

  /**
   * Creates an instance of fabric.Image from an URL string
   * @static
   * @param {String} url URL to create an image from
   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)
   * @param {Object} [imgOptions] Options object
   */
  fabric.Image.fromURL = function(url, callback, imgOptions) {
    fabric.util.loadImage(url, function(img) {
      callback && callback(new fabric.Image(img, imgOptions));
    }, null, imgOptions && imgOptions.crossOrigin);
  };

  /* _FROM_SVG_START_ */
  /**
   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})
   * @static
   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}
   */
  fabric.Image.ATTRIBUTE_NAMES =
    fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href crossOrigin'.split(' '));

  /**
   * Returns {@link fabric.Image} instance from an SVG element
   * @static
   * @param {SVGElement} element Element to parse
   * @param {Object} [options] Options object
   * @param {Function} callback Callback to execute when fabric.Image object is created
   * @return {fabric.Image} Instance of fabric.Image
   */
  fabric.Image.fromElement = function(element, callback, options) {
    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES);
    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,
      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));
  };
  /* _FROM_SVG_END_ */

})( true ? exports : undefined);


fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {

  /**
   * @private
   * @return {Number} angle value
   */
  _getAngleValueForStraighten: function() {
    var angle = this.angle % 360;
    if (angle > 0) {
      return Math.round((angle - 1) / 90) * 90;
    }
    return Math.round(angle / 90) * 90;
  },

  /**
   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)
   * @return {fabric.Object} thisArg
   * @chainable
   */
  straighten: function() {
    this.rotate(this._getAngleValueForStraighten());
    return this;
  },

  /**
   * Same as {@link fabric.Object.prototype.straighten} but with animation
   * @param {Object} callbacks Object with callback functions
   * @param {Function} [callbacks.onComplete] Invoked on completion
   * @param {Function} [callbacks.onChange] Invoked on every step of animation
   * @return {fabric.Object} thisArg
   * @chainable
   */
  fxStraighten: function(callbacks) {
    callbacks = callbacks || { };

    var empty = function() { },
        onComplete = callbacks.onComplete || empty,
        onChange = callbacks.onChange || empty,
        _this = this;

    fabric.util.animate({
      startValue: this.get('angle'),
      endValue: this._getAngleValueForStraighten(),
      duration: this.FX_DURATION,
      onChange: function(value) {
        _this.rotate(value);
        onChange();
      },
      onComplete: function() {
        _this.setCoords();
        onComplete();
      },
    });

    return this;
  }
});

fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {

  /**
   * Straightens object, then rerenders canvas
   * @param {fabric.Object} object Object to straighten
   * @return {fabric.Canvas} thisArg
   * @chainable
   */
  straightenObject: function (object) {
    object.straighten();
    this.requestRenderAll();
    return this;
  },

  /**
   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated
   * @param {fabric.Object} object Object to straighten
   * @return {fabric.Canvas} thisArg
   * @chainable
   */
  fxStraightenObject: function (object) {
    object.fxStraighten({
      onChange: this.requestRenderAllBound
    });
    return this;
  }
});


(function() {

  'use strict';

  /**
   * Tests if webgl supports certain precision
   * @param {WebGL} Canvas WebGL context to test on
   * @param {String} Precision to test can be any of following: 'lowp', 'mediump', 'highp'
   * @returns {Boolean} Whether the user's browser WebGL supports given precision.
   */
  function testPrecision(gl, precision){
    var fragmentSource = 'precision ' + precision + ' float;\nvoid main(){}';
    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);
    gl.shaderSource(fragmentShader, fragmentSource);
    gl.compileShader(fragmentShader);
    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {
      return false;
    }
    return true;
  }

  /**
   * Indicate whether this filtering backend is supported by the user's browser.
   * @param {Number} tileSize check if the tileSize is supported
   * @returns {Boolean} Whether the user's browser supports WebGL.
   */
  fabric.isWebglSupported = function(tileSize) {
    if (fabric.isLikelyNode) {
      return false;
    }
    tileSize = tileSize || fabric.WebglFilterBackend.prototype.tileSize;
    var canvas = document.createElement('canvas');
    var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');
    var isSupported = false;
    // eslint-disable-next-line
    if (gl) {
      fabric.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);
      isSupported = fabric.maxTextureSize >= tileSize;
      var precisions = ['highp', 'mediump', 'lowp'];
      for (var i = 0; i < 3; i++){
        if (testPrecision(gl, precisions[i])){
          fabric.webGlPrecision = precisions[i];
          break;
        };
      }
    }
    this.isSupported = isSupported;
    return isSupported;
  };

  fabric.WebglFilterBackend = WebglFilterBackend;

  /**
   * WebGL filter backend.
   */
  function WebglFilterBackend(options) {
    if (options && options.tileSize) {
      this.tileSize = options.tileSize;
    }
    this.setupGLContext(this.tileSize, this.tileSize);
    this.captureGPUInfo();
  };

  WebglFilterBackend.prototype = /** @lends fabric.WebglFilterBackend.prototype */ {

    tileSize: 2048,

    /**
     * Experimental. This object is a sort of repository of help layers used to avoid
     * of recreating them during frequent filtering. If you are previewing a filter with
     * a slider you problably do not want to create help layers every filter step.
     * in this object there will be appended some canvases, created once, resized sometimes
     * cleared never. Clearing is left to the developer.
     **/
    resources: {

    },

    /**
     * Setup a WebGL context suitable for filtering, and bind any needed event handlers.
     */
    setupGLContext: function(width, height) {
      this.dispose();
      this.createWebGLCanvas(width, height);
      // eslint-disable-next-line
      this.aPosition = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);
      this.chooseFastestCopyGLTo2DMethod(width, height);
    },

    /**
     * Pick a method to copy data from GL context to 2d canvas.  In some browsers using
     * putImageData is faster than drawImage for that specific operation.
     */
    chooseFastestCopyGLTo2DMethod: function(width, height) {
      var canMeasurePerf = typeof window.performance !== 'undefined';
      var canUseImageData;
      try {
        new ImageData(1, 1);
        canUseImageData = true;
      }
      catch (e) {
        canUseImageData = false;
      }
      // eslint-disable-next-line no-undef
      var canUseArrayBuffer = typeof ArrayBuffer !== 'undefined';
      // eslint-disable-next-line no-undef
      var canUseUint8Clamped = typeof Uint8ClampedArray !== 'undefined';

      if (!(canMeasurePerf && canUseImageData && canUseArrayBuffer && canUseUint8Clamped)) {
        return;
      }

      var targetCanvas = fabric.util.createCanvasElement();
      // eslint-disable-next-line no-undef
      var imageBuffer = new ArrayBuffer(width * height * 4);
      var testContext = {
        imageBuffer: imageBuffer,
        destinationWidth: width,
        destinationHeight: height,
        targetCanvas: targetCanvas
      };
      var startTime, drawImageTime, putImageDataTime;
      targetCanvas.width = width;
      targetCanvas.height = height;

      startTime = window.performance.now();
      copyGLTo2DDrawImage.call(testContext, this.gl, testContext);
      drawImageTime = window.performance.now() - startTime;

      startTime = window.performance.now();
      copyGLTo2DPutImageData.call(testContext, this.gl, testContext);
      putImageDataTime = window.performance.now() - startTime;

      if (drawImageTime > putImageDataTime) {
        this.imageBuffer = imageBuffer;
        this.copyGLTo2D = copyGLTo2DPutImageData;
      }
      else {
        this.copyGLTo2D = copyGLTo2DDrawImage;
      }
    },

    /**
     * Create a canvas element and associated WebGL context and attaches them as
     * class properties to the GLFilterBackend class.
     */
    createWebGLCanvas: function(width, height) {
      var canvas = fabric.util.createCanvasElement();
      canvas.width = width;
      canvas.height = height;
      var glOptions = {
            alpha: true,
            premultipliedAlpha: false,
            depth: false,
            stencil: false,
            antialias: false
          },
          gl = canvas.getContext('webgl', glOptions);
      if (!gl) {
        gl = canvas.getContext('experimental-webgl', glOptions);
      }
      if (!gl) {
        return;
      }
      gl.clearColor(0, 0, 0, 0);
      // this canvas can fire webglcontextlost and webglcontextrestored
      this.canvas = canvas;
      this.gl = gl;
    },

    /**
     * Attempts to apply the requested filters to the source provided, drawing the filtered output
     * to the provided target canvas.
     *
     * @param {Array} filters The filters to apply.
     * @param {HTMLImageElement|HTMLCanvasElement} source The source to be filtered.
     * @param {Number} width The width of the source input.
     * @param {Number} height The height of the source input.
     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.
     * @param {String|undefined} cacheKey A key used to cache resources related to the source. If
     * omitted, caching will be skipped.
     */
    applyFilters: function(filters, source, width, height, targetCanvas, cacheKey) {
      var gl = this.gl;
      var cachedTexture;
      if (cacheKey) {
        cachedTexture = this.getCachedTexture(cacheKey, source);
      }
      var pipelineState = {
        originalWidth: source.width || source.originalWidth,
        originalHeight: source.height || source.originalHeight,
        sourceWidth: width,
        sourceHeight: height,
        destinationWidth: width,
        destinationHeight: height,
        context: gl,
        sourceTexture: this.createTexture(gl, width, height, !cachedTexture && source),
        targetTexture: this.createTexture(gl, width, height),
        originalTexture: cachedTexture ||
          this.createTexture(gl, width, height, !cachedTexture && source),
        passes: filters.length,
        webgl: true,
        aPosition: this.aPosition,
        programCache: this.programCache,
        pass: 0,
        filterBackend: this,
        targetCanvas: targetCanvas
      };
      var tempFbo = gl.createFramebuffer();
      gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);
      filters.forEach(function(filter) { filter && filter.applyTo(pipelineState); });
      resizeCanvasIfNeeded(pipelineState);
      this.copyGLTo2D(gl, pipelineState);
      gl.bindTexture(gl.TEXTURE_2D, null);
      gl.deleteTexture(pipelineState.sourceTexture);
      gl.deleteTexture(pipelineState.targetTexture);
      gl.deleteFramebuffer(tempFbo);
      targetCanvas.getContext('2d').setTransform(1, 0, 0, 1, 0, 0);
      return pipelineState;
    },

    /**
     * Detach event listeners, remove references, and clean up caches.
     */
    dispose: function() {
      if (this.canvas) {
        this.canvas = null;
        this.gl = null;
      }
      this.clearWebGLCaches();
    },

    /**
     * Wipe out WebGL-related caches.
     */
    clearWebGLCaches: function() {
      this.programCache = {};
      this.textureCache = {};
    },

    /**
     * Create a WebGL texture object.
     *
     * Accepts specific dimensions to initialize the textuer to or a source image.
     *
     * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.
     * @param {Number} width The width to initialize the texture at.
     * @param {Number} height The height to initialize the texture.
     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source for the texture data.
     * @returns {WebGLTexture}
     */
    createTexture: function(gl, width, height, textureImageSource) {
      var texture = gl.createTexture();
      gl.bindTexture(gl.TEXTURE_2D, texture);
      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
      if (textureImageSource) {
        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, textureImageSource);
      }
      else {
        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);
      }
      return texture;
    },

    /**
     * Can be optionally used to get a texture from the cache array
     *
     * If an existing texture is not found, a new texture is created and cached.
     *
     * @param {String} uniqueId A cache key to use to find an existing texture.
     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the
     * texture cache entry if one does not already exist.
     */
    getCachedTexture: function(uniqueId, textureImageSource) {
      if (this.textureCache[uniqueId]) {
        return this.textureCache[uniqueId];
      }
      else {
        var texture = this.createTexture(
          this.gl, textureImageSource.width, textureImageSource.height, textureImageSource);
        this.textureCache[uniqueId] = texture;
        return texture;
      }
    },

    /**
     * Clear out cached resources related to a source image that has been
     * filtered previously.
     *
     * @param {String} cacheKey The cache key provided when the source image was filtered.
     */
    evictCachesForKey: function(cacheKey) {
      if (this.textureCache[cacheKey]) {
        this.gl.deleteTexture(this.textureCache[cacheKey]);
        delete this.textureCache[cacheKey];
      }
    },

    copyGLTo2D: copyGLTo2DDrawImage,

    /**
     * Attempt to extract GPU information strings from a WebGL context.
     *
     * Useful information when debugging or blacklisting specific GPUs.
     *
     * @returns {Object} A GPU info object with renderer and vendor strings.
     */
    captureGPUInfo: function() {
      if (this.gpuInfo) {
        return this.gpuInfo;
      }
      var gl = this.gl, gpuInfo = { renderer: '', vendor: '' };
      if (!gl) {
        return gpuInfo;
      }
      var ext = gl.getExtension('WEBGL_debug_renderer_info');
      if (ext) {
        var renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);
        var vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);
        if (renderer) {
          gpuInfo.renderer = renderer.toLowerCase();
        }
        if (vendor) {
          gpuInfo.vendor = vendor.toLowerCase();
        }
      }
      this.gpuInfo = gpuInfo;
      return gpuInfo;
    },
  };
})();

function resizeCanvasIfNeeded(pipelineState) {
  var targetCanvas = pipelineState.targetCanvas,
      width = targetCanvas.width, height = targetCanvas.height,
      dWidth = pipelineState.destinationWidth,
      dHeight = pipelineState.destinationHeight;

  if (width !== dWidth || height !== dHeight) {
    targetCanvas.width = dWidth;
    targetCanvas.height = dHeight;
  }
}

/**
 * Copy an input WebGL canvas on to an output 2D canvas.
 *
 * The WebGL canvas is assumed to be upside down, with the top-left pixel of the
 * desired output image appearing in the bottom-left corner of the WebGL canvas.
 *
 * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.
 * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.
 * @param {Object} pipelineState The 2D target canvas to copy on to.
 */
function copyGLTo2DDrawImage(gl, pipelineState) {
  var glCanvas = gl.canvas, targetCanvas = pipelineState.targetCanvas,
      ctx = targetCanvas.getContext('2d');
  ctx.translate(0, targetCanvas.height); // move it down again
  ctx.scale(1, -1); // vertical flip
  // where is my image on the big glcanvas?
  var sourceY = glCanvas.height - targetCanvas.height;
  ctx.drawImage(glCanvas, 0, sourceY, targetCanvas.width, targetCanvas.height, 0, 0,
    targetCanvas.width, targetCanvas.height);
}

/**
 * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData
 * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).
 *
 * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.
 * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.
 * @param {Object} pipelineState The 2D target canvas to copy on to.
 */
function copyGLTo2DPutImageData(gl, pipelineState) {
  var targetCanvas = pipelineState.targetCanvas, ctx = targetCanvas.getContext('2d'),
      dWidth = pipelineState.destinationWidth,
      dHeight = pipelineState.destinationHeight,
      numBytes = dWidth * dHeight * 4;

  // eslint-disable-next-line no-undef
  var u8 = new Uint8Array(this.imageBuffer, 0, numBytes);
  // eslint-disable-next-line no-undef
  var u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);

  gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);
  var imgData = new ImageData(u8Clamped, dWidth, dHeight);
  ctx.putImageData(imgData, 0, 0);
}


(function() {

  'use strict';

  var noop = function() {};

  fabric.Canvas2dFilterBackend = Canvas2dFilterBackend;

  /**
   * Canvas 2D filter backend.
   */
  function Canvas2dFilterBackend() {};

  Canvas2dFilterBackend.prototype = /** @lends fabric.Canvas2dFilterBackend.prototype */ {
    evictCachesForKey: noop,
    dispose: noop,
    clearWebGLCaches: noop,

    /**
     * Experimental. This object is a sort of repository of help layers used to avoid
     * of recreating them during frequent filtering. If you are previewing a filter with
     * a slider you probably do not want to create help layers every filter step.
     * in this object there will be appended some canvases, created once, resized sometimes
     * cleared never. Clearing is left to the developer.
     **/
    resources: {

    },

    /**
     * Apply a set of filters against a source image and draw the filtered output
     * to the provided destination canvas.
     *
     * @param {EnhancedFilter} filters The filter to apply.
     * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.
     * @param {Number} sourceWidth The width of the source input.
     * @param {Number} sourceHeight The height of the source input.
     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.
     */
    applyFilters: function(filters, sourceElement, sourceWidth, sourceHeight, targetCanvas) {
      var ctx = targetCanvas.getContext('2d');
      ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);
      var imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);
      var originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);
      var pipelineState = {
        sourceWidth: sourceWidth,
        sourceHeight: sourceHeight,
        imageData: imageData,
        originalEl: sourceElement,
        originalImageData: originalImageData,
        canvasEl: targetCanvas,
        ctx: ctx,
        filterBackend: this,
      };
      filters.forEach(function(filter) { filter.applyTo(pipelineState); });
      if (pipelineState.imageData.width !== sourceWidth || pipelineState.imageData.height !== sourceHeight) {
        targetCanvas.width = pipelineState.imageData.width;
        targetCanvas.height = pipelineState.imageData.height;
      }
      ctx.putImageData(pipelineState.imageData, 0, 0);
      return pipelineState;
    },

  };
})();


/**
 * @namespace fabric.Image.filters
 * @memberOf fabric.Image
 * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}
 * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}
 */
fabric.Image = fabric.Image || { };
fabric.Image.filters = fabric.Image.filters || { };

/**
 * Root filter class from which all filter classes inherit from
 * @class fabric.Image.filters.BaseFilter
 * @memberOf fabric.Image.filters
 */
fabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {

  /**
   * Filter type
   * @param {String} type
   * @default
   */
  type: 'BaseFilter',

  /**
   * Array of attributes to send with buffers. do not modify
   * @private
   */

  vertexSource: 'attribute vec2 aPosition;\n' +
    'varying vec2 vTexCoord;\n' +
    'void main() {\n' +
      'vTexCoord = aPosition;\n' +
      'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\n' +
    '}',

  fragmentSource: 'precision highp float;\n' +
    'varying vec2 vTexCoord;\n' +
    'uniform sampler2D uTexture;\n' +
    'void main() {\n' +
      'gl_FragColor = texture2D(uTexture, vTexCoord);\n' +
    '}',

  /**
   * Constructor
   * @param {Object} [options] Options object
   */
  initialize: function(options) {
    if (options) {
      this.setOptions(options);
    }
  },

  /**
   * Sets filter's properties from options
   * @param {Object} [options] Options object
   */
  setOptions: function(options) {
    for (var prop in options) {
      this[prop] = options[prop];
    }
  },

  /**
   * Compile this filter's shader program.
   *
   * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.
   * @param {String} fragmentSource fragmentShader source for compilation
   * @param {String} vertexSource vertexShader source for compilation
   */
  createProgram: function(gl, fragmentSource, vertexSource) {
    fragmentSource = fragmentSource || this.fragmentSource;
    vertexSource = vertexSource || this.vertexSource;
    if (fabric.webGlPrecision !== 'highp'){
      fragmentSource = fragmentSource.replace(
        /precision highp float/g,
        'precision ' + fabric.webGlPrecision + ' float'
      );
    }
    var vertexShader = gl.createShader(gl.VERTEX_SHADER);
    gl.shaderSource(vertexShader, vertexSource);
    gl.compileShader(vertexShader);
    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {
      throw new Error(
        // eslint-disable-next-line prefer-template
        'Vertex shader compile error for ' + this.type + ': ' +
        gl.getShaderInfoLog(vertexShader)
      );
    }

    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);
    gl.shaderSource(fragmentShader, fragmentSource);
    gl.compileShader(fragmentShader);
    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {
      throw new Error(
        // eslint-disable-next-line prefer-template
        'Fragment shader compile error for ' + this.type + ': ' +
        gl.getShaderInfoLog(fragmentShader)
      );
    }

    var program = gl.createProgram();
    gl.attachShader(program, vertexShader);
    gl.attachShader(program, fragmentShader);
    gl.linkProgram(program);
    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {
      throw new Error(
        // eslint-disable-next-line prefer-template
        'Shader link error for "${this.type}" ' +
        gl.getProgramInfoLog(program)
      );
    }

    var attributeLocations = this.getAttributeLocations(gl, program);
    var uniformLocations = this.getUniformLocations(gl, program) || { };
    uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');
    uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');
    return {
      program: program,
      attributeLocations: attributeLocations,
      uniformLocations: uniformLocations
    };
  },

  /**
   * Return a map of attribute names to WebGLAttributeLocation objects.
   *
   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.
   * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.
   * @returns {Object} A map of attribute names to attribute locations.
   */
  getAttributeLocations: function(gl, program) {
    return {
      aPosition: gl.getAttribLocation(program, 'aPosition'),
    };
  },

  /**
   * Return a map of uniform names to WebGLUniformLocation objects.
   *
   * Intended to be overridden by subclasses.
   *
   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.
   * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.
   * @returns {Object} A map of uniform names to uniform locations.
   */
  getUniformLocations: function (/* gl, program */) {
    // in case i do not need any special uniform i need to return an empty object
    return { };
  },

  /**
   * Send attribute data from this filter to its shader program on the GPU.
   *
   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.
   * @param {Object} attributeLocations A map of shader attribute names to their locations.
   */
  sendAttributeData: function(gl, attributeLocations, aPositionData) {
    var attributeLocation = attributeLocations.aPosition;
    var buffer = gl.createBuffer();
    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);
    gl.enableVertexAttribArray(attributeLocation);
    gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);
    gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);
  },

  _setupFrameBuffer: function(options) {
    var gl = options.context, width, height;
    if (options.passes > 1) {
      width = options.destinationWidth;
      height = options.destinationHeight;
      if (options.sourceWidth !== width || options.sourceHeight !== height) {
        gl.deleteTexture(options.targetTexture);
        options.targetTexture = options.filterBackend.createTexture(gl, width, height);
      }
      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D,
        options.targetTexture, 0);
    }
    else {
      // draw last filter on canvas and not to framebuffer.
      gl.bindFramebuffer(gl.FRAMEBUFFER, null);
      gl.finish();
    }
  },

  _swapTextures: function(options) {
    options.passes--;
    options.pass++;
    var temp = options.targetTexture;
    options.targetTexture = options.sourceTexture;
    options.sourceTexture = temp;
  },

  /**
   * Generic isNeutral implementation for one parameter based filters.
   * Used only in image applyFilters to discard filters that will not have an effect
   * on the image
   * Other filters may need their own verison ( ColorMatrix, HueRotation, gamma, ComposedFilter )
   * @param {Object} options
   **/
  isNeutralState: function(/* options */) {
    var main = this.mainParameter,
        _class = fabric.Image.filters[this.type].prototype;
    if (main) {
      if (Array.isArray(_class[main])) {
        for (var i = _class[main].length; i--;) {
          if (this[main][i] !== _class[main][i]) {
            return false;
          }
        }
        return true;
      }
      else {
        return _class[main] === this[main];
      }
    }
    else {
      return false;
    }
  },

  /**
   * Apply this filter to the input image data provided.
   *
   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.
   *
   * @param {Object} options
   * @param {Number} options.passes The number of filters remaining to be executed
   * @param {Boolean} options.webgl Whether to use webgl to render the filter.
   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.
   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.
   * @param {WebGLRenderingContext} options.context The GL context used for rendering.
   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.
   */
  applyTo: function(options) {
    if (options.webgl) {
      this._setupFrameBuffer(options);
      this.applyToWebGL(options);
      this._swapTextures(options);
    }
    else {
      this.applyTo2d(options);
    }
  },

  /**
   * Retrieves the cached shader.
   * @param {Object} options
   * @param {WebGLRenderingContext} options.context The GL context used for rendering.
   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.
   */
  retrieveShader: function(options) {
    if (!options.programCache.hasOwnProperty(this.type)) {
      options.programCache[this.type] = this.createProgram(options.context);
    }
    return options.programCache[this.type];
  },

  /**
   * Apply this filter using webgl.
   *
   * @param {Object} options
   * @param {Number} options.passes The number of filters remaining to be executed
   * @param {Boolean} options.webgl Whether to use webgl to render the filter.
   * @param {WebGLTexture} options.originalTexture The texture of the original input image.
   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.
   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.
   * @param {WebGLRenderingContext} options.context The GL context used for rendering.
   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.
   */
  applyToWebGL: function(options) {
    var gl = options.context;
    var shader = this.retrieveShader(options);
    if (options.pass === 0 && options.originalTexture) {
      gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);
    }
    else {
      gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);
    }
    gl.useProgram(shader.program);
    this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);

    gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);
    gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);

    this.sendUniformData(gl, shader.uniformLocations);
    gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);
    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);
  },

  bindAdditionalTexture: function(gl, texture, textureUnit) {
    gl.activeTexture(textureUnit);
    gl.bindTexture(gl.TEXTURE_2D, texture);
    // reset active texture to 0 as usual
    gl.activeTexture(gl.TEXTURE0);
  },

  unbindAdditionalTexture: function(gl, textureUnit) {
    gl.activeTexture(textureUnit);
    gl.bindTexture(gl.TEXTURE_2D, null);
    gl.activeTexture(gl.TEXTURE0);
  },

  getMainParameter: function() {
    return this[this.mainParameter];
  },

  setMainParameter: function(value) {
    this[this.mainParameter] = value;
  },

  /**
   * Send uniform data from this filter to its shader program on the GPU.
   *
   * Intended to be overridden by subclasses.
   *
   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.
   * @param {Object} uniformLocations A map of shader uniform names to their locations.
   */
  sendUniformData: function(/* gl, uniformLocations */) {
    // Intentionally left blank.  Override me in subclasses.
  },

  /**
   * If needed by a 2d filter, this functions can create an helper canvas to be used
   * remember that options.targetCanvas is available for use till end of chain.
   */
  createHelpLayer: function(options) {
    if (!options.helpLayer) {
      var helpLayer = document.createElement('canvas');
      helpLayer.width = options.sourceWidth;
      helpLayer.height = options.sourceHeight;
      options.helpLayer = helpLayer;
    }
  },

  /**
   * Returns object representation of an instance
   * @return {Object} Object representation of an instance
   */
  toObject: function() {
    var object = { type: this.type }, mainP = this.mainParameter;
    if (mainP) {
      object[mainP] = this[mainP];
    }
    return object;
  },

  /**
   * Returns a JSON representation of an instance
   * @return {Object} JSON
   */
  toJSON: function() {
    // delegate, not alias
    return this.toObject();
  }
});

fabric.Image.filters.BaseFilter.fromObject = function(object, callback) {
  var filter = new fabric.Image.filters[object.type](object);
  callback && callback(filter);
  return filter;
};


(function(global) {

  'use strict';

  var fabric  = global.fabric || (global.fabric = { }),
      filters = fabric.Image.filters,
      createClass = fabric.util.createClass;

  /**
   * Color Matrix filter class
   * @class fabric.Image.filters.ColorMatrix
   * @memberOf fabric.Image.filters
   * @extends fabric.Image.filters.BaseFilter
   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition
   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}
   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}
   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}
   * @example <caption>Kodachrome filter</caption>
   * var filter = new fabric.Image.filters.ColorMatrix({
   *  matrix: [
       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,
       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,
       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,
       0, 0, 0, 1, 0
      ]
   * });
   * object.filters.push(filter);
   * object.applyFilters();
   */
  filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {

    /**
     * Filter type
     * @param {String} type
     * @default
     */
    type: 'ColorMatrix',

    fragmentSource: 'precision highp float;\n' +
      'uniform sampler2D uTexture;\n' +
      'varying vec2 vTexCoord;\n' +
      'uniform mat4 uColorMatrix;\n' +
      'uniform vec4 uConstants;\n' +
      'void main() {\n' +
        'vec4 color = texture2D(uTexture, vTexCoord);\n' +
        'color *= uColorMatrix;\n' +
        'color += uConstants;\n' +
        'gl_FragColor = color;\n' +
      '}',

    /**
     * Colormatrix for pixels.
     * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning
     * outside the -1, 1 range.
     * 0.0039215686 is the part of 1 that get translated to 1 in 2d
     * @param {Array} matrix array of 20 numbers.
     * @default
     */
    matrix: [
      1, 0, 0, 0, 0,
      0, 1, 0, 0, 0,
      0, 0, 1, 0, 0,
      0, 0, 0, 1, 0
    ],

    mainParameter: 'matrix',

    /**
     * Lock the colormatrix on the color part, skipping alpha, manly for non webgl scenario
     * to save some calculation
     */
    colorsOnly: true,

    /**
     * Constructor
     * @param {Object} [options] Options object
     */
    initialize: function(options) {
      this.callSuper('initialize', options);
      // create a new array instead mutating the prototype with push
      this.matrix = this.matrix.slice(0);
    },

    /**
     * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.
     *
     * @param {Object} options
     * @param {ImageData} options.imageData The Uint8Array to be filtered.
     */
    applyTo2d: function(options) {
      var imageData = options.imageData,
          data = imageData.data,
          iLen = data.length,
          m = this.matrix,
          r, g, b, a, i, colorsOnly = this.colorsOnly;

      for (i = 0; i < iLen; i += 4) {
        r = data[i];
        g = data[i + 1];
        b = data[i + 2];
        if (colorsOnly) {
          data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;
          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;
          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;
        }
        else {
          a = data[i + 3];
          data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;
          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;
          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;
          data[i + 3] = r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;
        }
      }
    },

    /**
     * Return WebGL uniform locations for this filter's shader.
     *
     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
     * @param {WebGLShaderProgram} program This filter's compiled shader program.
     */
    getUniformLocations: function(gl, program) {
      return {
        uColorMatrix: gl.getUniformLocation(program, 'uColorMatrix'),
        uConstants: gl.getUniformLocation(program, 'uConstants'),
      };
    },

    /**
     * Send data from this filter to its shader program's uniforms.
     *
     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects
     */
    sendUniformData: function(gl, uniformLocations) {
      var m = this.matrix,
          matrix = [
            m[0], m[1], m[2], m[3],
            m[5], m[6], m[7], m[8],
            m[10], m[11], m[12], m[13],
            m[15], m[16], m[17], m[18]
          ],
          constants = [m[4], m[9], m[14], m[19]];
      gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);
      gl.uniform4fv(uniformLocations.uConstants, constants);
    },
  });

  /**
   * Returns filter instance from an object representation
   * @static
   * @param {Object} object Object to create an instance from
   * @param {function} [callback] function to invoke after filter creation
   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix
   */
  fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;
})( true ? exports : undefined);


(function(global) {

  'use strict';

  var fabric  = global.fabric || (global.fabric = { }),
      filters = fabric.Image.filters,
      createClass = fabric.util.createClass;

  /**
   * Brightness filter class
   * @class fabric.Image.filters.Brightness
   * @memberOf fabric.Image.filters
   * @extends fabric.Image.filters.BaseFilter
   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition
   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}
   * @example
   * var filter = new fabric.Image.filters.Brightness({
   *   brightness: 0.05
   * });
   * object.filters.push(filter);
   * object.applyFilters();
   */
  filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {

    /**
     * Filter type
     * @param {String} type
     * @default
     */
    type: 'Brightness',

    /**
     * Fragment source for the brightness program
     */
    fragmentSource: 'precision highp float;\n' +
      'uniform sampler2D uTexture;\n' +
      'uniform float uBrightness;\n' +
      'varying vec2 vTexCoord;\n' +
      'void main() {\n' +
        'vec4 color = texture2D(uTexture, vTexCoord);\n' +
        'color.rgb += uBrightness;\n' +
        'gl_FragColor = color;\n' +
      '}',

    /**
     * Brightness value, from -1 to 1.
     * translated to -255 to 255 for 2d
     * 0.0039215686 is the part of 1 that get translated to 1 in 2d
     * @param {Number} brightness
     * @default
     */
    brightness: 0,

    /**
     * Describe the property that is the filter parameter
     * @param {String} m
     * @default
     */
    mainParameter: 'brightness',

    /**
    * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.
    *
    * @param {Object} options
    * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.
    */
    applyTo2d: function(options) {
      if (this.brightness === 0) {
        return;
      }
      var imageData = options.imageData,
          data = imageData.data, i, len = data.length,
          brightness = Math.round(this.brightness * 255);
      for (i = 0; i < len; i += 4) {
        data[i] = data[i] + brightness;
        data[i + 1] = data[i + 1] + brightness;
        data[i + 2] = data[i + 2] + brightness;
      }
    },

    /**
     * Return WebGL uniform locations for this filter's shader.
     *
     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
     * @param {WebGLShaderProgram} program This filter's compiled shader program.
     */
    getUniformLocations: function(gl, program) {
      return {
        uBrightness: gl.getUniformLocation(program, 'uBrightness'),
      };
    },

    /**
     * Send data from this filter to its shader program's uniforms.
     *
     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects
     */
    sendUniformData: function(gl, uniformLocations) {
      gl.uniform1f(uniformLocations.uBrightness, this.brightness);
    },
  });

  /**
   * Returns filter instance from an object representation
   * @static
   * @param {Object} object Object to create an instance from
   * @param {function} [callback] to be invoked after filter creation
   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness
   */
  fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;

})( true ? exports : undefined);


(function(global) {

  'use strict';

  var fabric  = global.fabric || (global.fabric = { }),
      extend = fabric.util.object.extend,
      filters = fabric.Image.filters,
      createClass = fabric.util.createClass;

  /**
   * Adapted from <a href="http://www.html5rocks.com/en/tutorials/canvas/imagefilters/">html5rocks article</a>
   * @class fabric.Image.filters.Convolute
   * @memberOf fabric.Image.filters
   * @extends fabric.Image.filters.BaseFilter
   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition
   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}
   * @example <caption>Sharpen filter</caption>
   * var filter = new fabric.Image.filters.Convolute({
   *   matrix: [ 0, -1,  0,
   *            -1,  5, -1,
   *             0, -1,  0 ]
   * });
   * object.filters.push(filter);
   * object.applyFilters();
   * canvas.renderAll();
   * @example <caption>Blur filter</caption>
   * var filter = new fabric.Image.filters.Convolute({
   *   matrix: [ 1/9, 1/9, 1/9,
   *             1/9, 1/9, 1/9,
   *             1/9, 1/9, 1/9 ]
   * });
   * object.filters.push(filter);
   * object.applyFilters();
   * canvas.renderAll();
   * @example <caption>Emboss filter</caption>
   * var filter = new fabric.Image.filters.Convolute({
   *   matrix: [ 1,   1,  1,
   *             1, 0.7, -1,
   *            -1,  -1, -1 ]
   * });
   * object.filters.push(filter);
   * object.applyFilters();
   * canvas.renderAll();
   * @example <caption>Emboss filter with opaqueness</caption>
   * var filter = new fabric.Image.filters.Convolute({
   *   opaque: true,
   *   matrix: [ 1,   1,  1,
   *             1, 0.7, -1,
   *            -1,  -1, -1 ]
   * });
   * object.filters.push(filter);
   * object.applyFilters();
   * canvas.renderAll();
   */
  filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {

    /**
     * Filter type
     * @param {String} type
     * @default
     */
    type: 'Convolute',

    /*
     * Opaque value (true/false)
     */
    opaque: false,

    /*
     * matrix for the filter, max 9x9
     */
    matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],

    /**
     * Fragment source for the brightness program
     */
    fragmentSource: {
      Convolute_3_1: 'precision highp float;\n' +
        'uniform sampler2D uTexture;\n' +
        'uniform float uMatrix[9];\n' +
        'uniform float uStepW;\n' +
        'uniform float uStepH;\n' +
        'varying vec2 vTexCoord;\n' +
        'void main() {\n' +
          'vec4 color = vec4(0, 0, 0, 0);\n' +
          'for (float h = 0.0; h < 3.0; h+=1.0) {\n' +
            'for (float w = 0.0; w < 3.0; w+=1.0) {\n' +
              'vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\n' +
              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\n' +
            '}\n' +
          '}\n' +
          'gl_FragColor = color;\n' +
        '}',
      Convolute_3_0: 'precision highp float;\n' +
        'uniform sampler2D uTexture;\n' +
        'uniform float uMatrix[9];\n' +
        'uniform float uStepW;\n' +
        'uniform float uStepH;\n' +
        'varying vec2 vTexCoord;\n' +
        'void main() {\n' +
          'vec4 color = vec4(0, 0, 0, 1);\n' +
          'for (float h = 0.0; h < 3.0; h+=1.0) {\n' +
            'for (float w = 0.0; w < 3.0; w+=1.0) {\n' +
              'vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\n' +
              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\n' +
            '}\n' +
          '}\n' +
          'float alpha = texture2D(uTexture, vTexCoord).a;\n' +
          'gl_FragColor = color;\n' +
          'gl_FragColor.a = alpha;\n' +
        '}',
      Convolute_5_1: 'precision highp float;\n' +
        'uniform sampler2D uTexture;\n' +
        'uniform float uMatrix[25];\n' +
        'uniform float uStepW;\n' +
        'uniform float uStepH;\n' +
        'varying vec2 vTexCoord;\n' +
        'void main() {\n' +
          'vec4 color = vec4(0, 0, 0, 0);\n' +
          'for (float h = 0.0; h < 5.0; h+=1.0) {\n' +
            'for (float w = 0.0; w < 5.0; w+=1.0) {\n' +
              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\n' +
              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\n' +
            '}\n' +
          '}\n' +
          'gl_FragColor = color;\n' +
        '}',
      Convolute_5_0: 'precision highp float;\n' +
        'uniform sampler2D uTexture;\n' +
        'uniform float uMatrix[25];\n' +
        'uniform float uStepW;\n' +
        'uniform float uStepH;\n' +
        'varying vec2 vTexCoord;\n' +
        'void main() {\n' +
          'vec4 color = vec4(0, 0, 0, 1);\n' +
          'for (float h = 0.0; h < 5.0; h+=1.0) {\n' +
            'for (float w = 0.0; w < 5.0; w+=1.0) {\n' +
              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\n' +
              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\n' +
            '}\n' +
          '}\n' +
          'float alpha = texture2D(uTexture, vTexCoord).a;\n' +
          'gl_FragColor = color;\n' +
          'gl_FragColor.a = alpha;\n' +
        '}',
      Convolute_7_1: 'precision highp float;\n' +
        'uniform sampler2D uTexture;\n' +
        'uniform float uMatrix[49];\n' +
        'uniform float uStepW;\n' +
        'uniform float uStepH;\n' +
        'varying vec2 vTexCoord;\n' +
        'void main() {\n' +
          'vec4 color = vec4(0, 0, 0, 0);\n' +
          'for (float h = 0.0; h < 7.0; h+=1.0) {\n' +
            'for (float w = 0.0; w < 7.0; w+=1.0) {\n' +
              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\n' +
              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\n' +
            '}\n' +
          '}\n' +
          'gl_FragColor = color;\n' +
        '}',
      Convolute_7_0: 'precision highp float;\n' +
        'uniform sampler2D uTexture;\n' +
        'uniform float uMatrix[49];\n' +
        'uniform float uStepW;\n' +
        'uniform float uStepH;\n' +
        'varying vec2 vTexCoord;\n' +
        'void main() {\n' +
          'vec4 color = vec4(0, 0, 0, 1);\n' +
          'for (float h = 0.0; h < 7.0; h+=1.0) {\n' +
            'for (float w = 0.0; w < 7.0; w+=1.0) {\n' +
              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\n' +
              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\n' +
            '}\n' +
          '}\n' +
          'float alpha = texture2D(uTexture, vTexCoord).a;\n' +
          'gl_FragColor = color;\n' +
          'gl_FragColor.a = alpha;\n' +
        '}',
      Convolute_9_1: 'precision highp float;\n' +
        'uniform sampler2D uTexture;\n' +
        'uniform float uMatrix[81];\n' +
        'uniform float uStepW;\n' +
        'uniform float uStepH;\n' +
        'varying vec2 vTexCoord;\n' +
        'void main() {\n' +
          'vec4 color = vec4(0, 0, 0, 0);\n' +
          'for (float h = 0.0; h < 9.0; h+=1.0) {\n' +
            'for (float w = 0.0; w < 9.0; w+=1.0) {\n' +
              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\n' +
              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\n' +
            '}\n' +
          '}\n' +
          'gl_FragColor = color;\n' +
        '}',
      Convolute_9_0: 'precision highp float;\n' +
        'uniform sampler2D uTexture;\n' +
        'uniform float uMatrix[81];\n' +
        'uniform float uStepW;\n' +
        'uniform float uStepH;\n' +
        'varying vec2 vTexCoord;\n' +
        'void main() {\n' +
          'vec4 color = vec4(0, 0, 0, 1);\n' +
          'for (float h = 0.0; h < 9.0; h+=1.0) {\n' +
            'for (float w = 0.0; w < 9.0; w+=1.0) {\n' +
              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\n' +
              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\n' +
            '}\n' +
          '}\n' +
          'float alpha = texture2D(uTexture, vTexCoord).a;\n' +
          'gl_FragColor = color;\n' +
          'gl_FragColor.a = alpha;\n' +
        '}',
    },

    /**
     * Constructor
     * @memberOf fabric.Image.filters.Convolute.prototype
     * @param {Object} [options] Options object
     * @param {Boolean} [options.opaque=false] Opaque value (true/false)
     * @param {Array} [options.matrix] Filter matrix
     */


    /**
    * Retrieves the cached shader.
    * @param {Object} options
    * @param {WebGLRenderingContext} options.context The GL context used for rendering.
    * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.
    */
    retrieveShader: function(options) {
      var size = Math.sqrt(this.matrix.length);
      var cacheKey = this.type + '_' + size + '_' + (this.opaque ? 1 : 0);
      var shaderSource = this.fragmentSource[cacheKey];
      if (!options.programCache.hasOwnProperty(cacheKey)) {
        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);
      }
      return options.programCache[cacheKey];
    },

    /**
     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.
     *
     * @param {Object} options
     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.
     */
    applyTo2d: function(options) {
      var imageData = options.imageData,
          data = imageData.data,
          weights = this.matrix,
          side = Math.round(Math.sqrt(weights.length)),
          halfSide = Math.floor(side / 2),
          sw = imageData.width,
          sh = imageData.height,
          output = options.ctx.createImageData(sw, sh),
          dst = output.data,
          // go through the destination image pixels
          alphaFac = this.opaque ? 1 : 0,
          r, g, b, a, dstOff,
          scx, scy, srcOff, wt,
          x, y, cx, cy;

      for (y = 0; y < sh; y++) {
        for (x = 0; x < sw; x++) {
          dstOff = (y * sw + x) * 4;
          // calculate the weighed sum of the source image pixels that
          // fall under the convolution matrix
          r = 0; g = 0; b = 0; a = 0;

          for (cy = 0; cy < side; cy++) {
            for (cx = 0; cx < side; cx++) {
              scy = y + cy - halfSide;
              scx = x + cx - halfSide;

              // eslint-disable-next-line max-depth
              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {
                continue;
              }

              srcOff = (scy * sw + scx) * 4;
              wt = weights[cy * side + cx];

              r += data[srcOff] * wt;
              g += data[srcOff + 1] * wt;
              b += data[srcOff + 2] * wt;
              // eslint-disable-next-line max-depth
              if (!alphaFac) {
                a += data[srcOff + 3] * wt;
              }
            }
          }
          dst[dstOff] = r;
          dst[dstOff + 1] = g;
          dst[dstOff + 2] = b;
          if (!alphaFac) {
            dst[dstOff + 3] = a;
          }
          else {
            dst[dstOff + 3] = data[dstOff + 3];
          }
        }
      }
      options.imageData = output;
    },

    /**
     * Return WebGL uniform locations for this filter's shader.
     *
     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
     * @param {WebGLShaderProgram} program This filter's compiled shader program.
     */
    getUniformLocations: function(gl, program) {
      return {
        uMatrix: gl.getUniformLocation(program, 'uMatrix'),
        uOpaque: gl.getUniformLocation(program, 'uOpaque'),
        uHalfSize: gl.getUniformLocation(program, 'uHalfSize'),
        uSize: gl.getUniformLocation(program, 'uSize'),
      };
    },

    /**
     * Send data from this filter to its shader program's uniforms.
     *
     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects
     */
    sendUniformData: function(gl, uniformLocations) {
      gl.uniform1fv(uniformLocations.uMatrix, this.matrix);
    },

    /**
     * Returns object representation of an instance
     * @return {Object} Object representation of an instance
     */
    toObject: function() {
      return extend(this.callSuper('toObject'), {
        opaque: this.opaque,
        matrix: this.matrix
      });
    }
  });

  /**
   * Returns filter instance from an object representation
   * @static
   * @param {Object} object Object to create an instance from
   * @param {function} [callback] to be invoked after filter creation
   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute
   */
  fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;

})( true ? exports : undefined);


(function(global) {

  'use strict';

  var fabric  = global.fabric || (global.fabric = { }),
      filters = fabric.Image.filters,
      createClass = fabric.util.createClass;

  /**
   * Grayscale image filter class
   * @class fabric.Image.filters.Grayscale
   * @memberOf fabric.Image.filters
   * @extends fabric.Image.filters.BaseFilter
   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}
   * @example
   * var filter = new fabric.Image.filters.Grayscale();
   * object.filters.push(filter);
   * object.applyFilters();
   */
  filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {

    /**
     * Filter type
     * @param {String} type
     * @default
     */
    type: 'Grayscale',

    fragmentSource: {
      average: 'precision highp float;\n' +
        'uniform sampler2D uTexture;\n' +
        'varying vec2 vTexCoord;\n' +
        'void main() {\n' +
          'vec4 color = texture2D(uTexture, vTexCoord);\n' +
          'float average = (color.r + color.b + color.g) / 3.0;\n' +
          'gl_FragColor = vec4(average, average, average, color.a);\n' +
        '}',
      lightness: 'precision highp float;\n' +
        'uniform sampler2D uTexture;\n' +
        'uniform int uMode;\n' +
        'varying vec2 vTexCoord;\n' +
        'void main() {\n' +
          'vec4 col = texture2D(uTexture, vTexCoord);\n' +
          'float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\n' +
          'gl_FragColor = vec4(average, average, average, col.a);\n' +
        '}',
      luminosity: 'precision highp float;\n' +
        'uniform sampler2D uTexture;\n' +
        'uniform int uMode;\n' +
        'varying vec2 vTexCoord;\n' +
        'void main() {\n' +
          'vec4 col = texture2D(uTexture, vTexCoord);\n' +
          'float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\n' +
          'gl_FragColor = vec4(average, average, average, col.a);\n' +
        '}',
    },


    /**
     * Grayscale mode, between 'average', 'lightness', 'luminosity'
     * @param {String} type
     * @default
     */
    mode: 'average',

    mainParameter: 'mode',

    /**
     * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.
     *
     * @param {Object} options
     * @param {ImageData} options.imageData The Uint8Array to be filtered.
     */
    applyTo2d: function(options) {
      var imageData = options.imageData,
          data = imageData.data, i,
          len = data.length, value,
          mode = this.mode;
      for (i = 0; i < len; i += 4) {
        if (mode === 'average') {
          value = (data[i] + data[i + 1] + data[i + 2]) / 3;
        }
        else if (mode === 'lightness') {
          value = (Math.min(data[i], data[i + 1], data[i + 2]) +
            Math.max(data[i], data[i + 1], data[i + 2])) / 2;
        }
        else if (mode === 'luminosity') {
          value = 0.21 * data[i] + 0.72 * data[i + 1] + 0.07 * data[i + 2];
        }
        data[i] = value;
        data[i + 1] = value;
        data[i + 2] = value;
      }
    },

    /**
     * Retrieves the cached shader.
     * @param {Object} options
     * @param {WebGLRenderingContext} options.context The GL context used for rendering.
     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.
     */
    retrieveShader: function(options) {
      var cacheKey = this.type + '_' + this.mode;
      if (!options.programCache.hasOwnProperty(cacheKey)) {
        var shaderSource = this.fragmentSource[this.mode];
        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);
      }
      return options.programCache[cacheKey];
    },

    /**
     * Return WebGL uniform locations for this filter's shader.
     *
     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
     * @param {WebGLShaderProgram} program This filter's compiled shader program.
     */
    getUniformLocations: function(gl, program) {
      return {
        uMode: gl.getUniformLocation(program, 'uMode'),
      };
    },

    /**
     * Send data from this filter to its shader program's uniforms.
     *
     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects
     */
    sendUniformData: function(gl, uniformLocations) {
      // default average mode.
      var mode = 1;
      gl.uniform1i(uniformLocations.uMode, mode);
    },

    /**
     * Grayscale filter isNeutralState implementation
     * The filter is never neutral
     * on the image
     **/
    isNeutralState: function() {
      return false;
    },
  });

  /**
   * Returns filter instance from an object representation
   * @static
   * @param {Object} object Object to create an instance from
   * @param {function} [callback] to be invoked after filter creation
   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale
   */
  fabric.Image.filters.Grayscale.fromObject = fabric.Image.filters.BaseFilter.fromObject;

})( true ? exports : undefined);


(function(global) {

  'use strict';

  var fabric  = global.fabric || (global.fabric = { }),
      filters = fabric.Image.filters,
      createClass = fabric.util.createClass;

  /**
   * Invert filter class
   * @class fabric.Image.filters.Invert
   * @memberOf fabric.Image.filters
   * @extends fabric.Image.filters.BaseFilter
   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}
   * @example
   * var filter = new fabric.Image.filters.Invert();
   * object.filters.push(filter);
   * object.applyFilters(canvas.renderAll.bind(canvas));
   */
  filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {

    /**
     * Filter type
     * @param {String} type
     * @default
     */
    type: 'Invert',

    fragmentSource: 'precision highp float;\n' +
      'uniform sampler2D uTexture;\n' +
      'uniform int uInvert;\n' +
      'varying vec2 vTexCoord;\n' +
      'void main() {\n' +
        'vec4 color = texture2D(uTexture, vTexCoord);\n' +
        'if (uInvert == 1) {\n' +
          'gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\n' +
        '} else {\n' +
          'gl_FragColor = color;\n' +
        '}\n' +
      '}',

    /**
     * Filter invert. if false, does nothing
     * @param {Boolean} invert
     * @default
     */
    invert: true,

    mainParameter: 'invert',

    /**
     * Apply the Invert operation to a Uint8Array representing the pixels of an image.
     *
     * @param {Object} options
     * @param {ImageData} options.imageData The Uint8Array to be filtered.
     */
    applyTo2d: function(options) {
      var imageData = options.imageData,
          data = imageData.data, i,
          len = data.length;
      for (i = 0; i < len; i += 4) {
        data[i] = 255 - data[i];
        data[i + 1] = 255 - data[i + 1];
        data[i + 2] = 255 - data[i + 2];
      }
    },

    /**
     * Invert filter isNeutralState implementation
     * Used only in image applyFilters to discard filters that will not have an effect
     * on the image
     * @param {Object} options
     **/
    isNeutralState: function() {
      return !this.invert;
    },

    /**
     * Return WebGL uniform locations for this filter's shader.
     *
     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
     * @param {WebGLShaderProgram} program This filter's compiled shader program.
     */
    getUniformLocations: function(gl, program) {
      return {
        uInvert: gl.getUniformLocation(program, 'uInvert'),
      };
    },

    /**
     * Send data from this filter to its shader program's uniforms.
     *
     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects
     */
    sendUniformData: function(gl, uniformLocations) {
      gl.uniform1i(uniformLocations.uInvert, this.invert);
    },
  });

  /**
   * Returns filter instance from an object representation
   * @static
   * @param {Object} object Object to create an instance from
   * @param {function} [callback] to be invoked after filter creation
   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert
   */
  fabric.Image.filters.Invert.fromObject = fabric.Image.filters.BaseFilter.fromObject;


})( true ? exports : undefined);


(function(global) {

  'use strict';

  var fabric  = global.fabric || (global.fabric = { }),
      extend = fabric.util.object.extend,
      filters = fabric.Image.filters,
      createClass = fabric.util.createClass;

  /**
   * Noise filter class
   * @class fabric.Image.filters.Noise
   * @memberOf fabric.Image.filters
   * @extends fabric.Image.filters.BaseFilter
   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition
   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}
   * @example
   * var filter = new fabric.Image.filters.Noise({
   *   noise: 700
   * });
   * object.filters.push(filter);
   * object.applyFilters();
   * canvas.renderAll();
   */
  filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {

    /**
     * Filter type
     * @param {String} type
     * @default
     */
    type: 'Noise',

    /**
     * Fragment source for the noise program
     */
    fragmentSource: 'precision highp float;\n' +
      'uniform sampler2D uTexture;\n' +
      'uniform float uStepH;\n' +
      'uniform float uNoise;\n' +
      'uniform float uSeed;\n' +
      'varying vec2 vTexCoord;\n' +
      'float rand(vec2 co, float seed, float vScale) {\n' +
        'return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\n' +
      '}\n' +
      'void main() {\n' +
        'vec4 color = texture2D(uTexture, vTexCoord);\n' +
        'color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\n' +
        'gl_FragColor = color;\n' +
      '}',

    /**
     * Describe the property that is the filter parameter
     * @param {String} m
     * @default
     */
    mainParameter: 'noise',

    /**
     * Noise value, from
     * @param {Number} noise
     * @default
     */
    noise: 0,

    /**
     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.
     *
     * @param {Object} options
     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.
     */
    applyTo2d: function(options) {
      if (this.noise === 0) {
        return;
      }
      var imageData = options.imageData,
          data = imageData.data, i, len = data.length,
          noise = this.noise, rand;

      for (i = 0, len = data.length; i < len; i += 4) {

        rand = (0.5 - Math.random()) * noise;

        data[i] += rand;
        data[i + 1] += rand;
        data[i + 2] += rand;
      }
    },

    /**
     * Return WebGL uniform locations for this filter's shader.
     *
     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
     * @param {WebGLShaderProgram} program This filter's compiled shader program.
     */
    getUniformLocations: function(gl, program) {
      return {
        uNoise: gl.getUniformLocation(program, 'uNoise'),
        uSeed: gl.getUniformLocation(program, 'uSeed'),
      };
    },

    /**
     * Send data from this filter to its shader program's uniforms.
     *
     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects
     */
    sendUniformData: function(gl, uniformLocations) {
      gl.uniform1f(uniformLocations.uNoise, this.noise / 255);
      gl.uniform1f(uniformLocations.uSeed, Math.random());
    },

    /**
     * Returns object representation of an instance
     * @return {Object} Object representation of an instance
     */
    toObject: function() {
      return extend(this.callSuper('toObject'), {
        noise: this.noise
      });
    }
  });

  /**
   * Returns filter instance from an object representation
   * @static
   * @param {Object} object Object to create an instance from
   * @param {Function} [callback] to be invoked after filter creation
   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise
   */
  fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;

})( true ? exports : undefined);


(function(global) {

  'use strict';

  var fabric  = global.fabric || (global.fabric = { }),
      filters = fabric.Image.filters,
      createClass = fabric.util.createClass;

  /**
   * Pixelate filter class
   * @class fabric.Image.filters.Pixelate
   * @memberOf fabric.Image.filters
   * @extends fabric.Image.filters.BaseFilter
   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition
   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}
   * @example
   * var filter = new fabric.Image.filters.Pixelate({
   *   blocksize: 8
   * });
   * object.filters.push(filter);
   * object.applyFilters();
   */
  filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {

    /**
     * Filter type
     * @param {String} type
     * @default
     */
    type: 'Pixelate',

    blocksize: 4,

    mainParameter: 'blocksize',

    /**
     * Fragment source for the Pixelate program
     */
    fragmentSource: 'precision highp float;\n' +
      'uniform sampler2D uTexture;\n' +
      'uniform float uBlocksize;\n' +
      'uniform float uStepW;\n' +
      'uniform float uStepH;\n' +
      'varying vec2 vTexCoord;\n' +
      'void main() {\n' +
        'float blockW = uBlocksize * uStepW;\n' +
        'float blockH = uBlocksize * uStepW;\n' +
        'int posX = int(vTexCoord.x / blockW);\n' +
        'int posY = int(vTexCoord.y / blockH);\n' +
        'float fposX = float(posX);\n' +
        'float fposY = float(posY);\n' +
        'vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\n' +
        'vec4 color = texture2D(uTexture, squareCoords);\n' +
        'gl_FragColor = color;\n' +
      '}',

    /**
     * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.
     *
     * @param {Object} options
     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.
     */
    applyTo2d: function(options) {
      var imageData = options.imageData,
          data = imageData.data,
          iLen = imageData.height,
          jLen = imageData.width,
          index, i, j, r, g, b, a,
          _i, _j, _iLen, _jLen;

      for (i = 0; i < iLen; i += this.blocksize) {
        for (j = 0; j < jLen; j += this.blocksize) {

          index = (i * 4) * jLen + (j * 4);

          r = data[index];
          g = data[index + 1];
          b = data[index + 2];
          a = data[index + 3];

          _iLen = Math.min(i + this.blocksize, iLen);
          _jLen = Math.min(j + this.blocksize, jLen);
          for (_i = i; _i < _iLen; _i++) {
            for (_j = j; _j < _jLen; _j++) {
              index = (_i * 4) * jLen + (_j * 4);
              data[index] = r;
              data[index + 1] = g;
              data[index + 2] = b;
              data[index + 3] = a;
            }
          }
        }
      }
    },

    /**
     * Indicate when the filter is not gonna apply changes to the image
     **/
    isNeutralState: function() {
      return this.blocksize === 1;
    },

    /**
     * Return WebGL uniform locations for this filter's shader.
     *
     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
     * @param {WebGLShaderProgram} program This filter's compiled shader program.
     */
    getUniformLocations: function(gl, program) {
      return {
        uBlocksize: gl.getUniformLocation(program, 'uBlocksize'),
        uStepW: gl.getUniformLocation(program, 'uStepW'),
        uStepH: gl.getUniformLocation(program, 'uStepH'),
      };
    },

    /**
     * Send data from this filter to its shader program's uniforms.
     *
     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects
     */
    sendUniformData: function(gl, uniformLocations) {
      gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);
    },
  });

  /**
   * Returns filter instance from an object representation
   * @static
   * @param {Object} object Object to create an instance from
   * @param {Function} [callback] to be invoked after filter creation
   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate
   */
  fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;

})( true ? exports : undefined);


(function(global) {

  'use strict';

  var fabric  = global.fabric || (global.fabric = { }),
      extend = fabric.util.object.extend,
      filters = fabric.Image.filters,
      createClass = fabric.util.createClass;

  /**
   * Remove white filter class
   * @class fabric.Image.filters.RemoveColor
   * @memberOf fabric.Image.filters
   * @extends fabric.Image.filters.BaseFilter
   * @see {@link fabric.Image.filters.RemoveColor#initialize} for constructor definition
   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}
   * @example
   * var filter = new fabric.Image.filters.RemoveColor({
   *   threshold: 0.2,
   * });
   * object.filters.push(filter);
   * object.applyFilters();
   * canvas.renderAll();
   */
  filters.RemoveColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveColor.prototype */ {

    /**
     * Filter type
     * @param {String} type
     * @default
     */
    type: 'RemoveColor',

    /**
     * Color to remove, in any format understood by fabric.Color.
     * @param {String} type
     * @default
     */
    color: '#FFFFFF',

    /**
     * Fragment source for the brightness program
     */
    fragmentSource: 'precision highp float;\n' +
      'uniform sampler2D uTexture;\n' +
      'uniform vec4 uLow;\n' +
      'uniform vec4 uHigh;\n' +
      'varying vec2 vTexCoord;\n' +
      'void main() {\n' +
        'gl_FragColor = texture2D(uTexture, vTexCoord);\n' +
        'if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\n' +
          'gl_FragColor.a = 0.0;\n' +
        '}\n' +
      '}',

    /**
     * distance to actual color, as value up or down from each r,g,b
     * between 0 and 1
     **/
    distance: 0.02,

    /**
     * For color to remove inside distance, use alpha channel for a smoother deletion
     * NOT IMPLEMENTED YET
     **/
    useAlpha: false,

    /**
     * Constructor
     * @memberOf fabric.Image.filters.RemoveWhite.prototype
     * @param {Object} [options] Options object
     * @param {Number} [options.color=#RRGGBB] Threshold value
     * @param {Number} [options.distance=10] Distance value
     */

    /**
     * Applies filter to canvas element
     * @param {Object} canvasEl Canvas element to apply filter to
     */
    applyTo2d: function(options) {
      var imageData = options.imageData,
          data = imageData.data, i,
          distance = this.distance * 255,
          r, g, b,
          source = new fabric.Color(this.color).getSource(),
          lowC = [
            source[0] - distance,
            source[1] - distance,
            source[2] - distance,
          ],
          highC = [
            source[0] + distance,
            source[1] + distance,
            source[2] + distance,
          ];


      for (i = 0; i < data.length; i += 4) {
        r = data[i];
        g = data[i + 1];
        b = data[i + 2];

        if (r > lowC[0] &&
            g > lowC[1] &&
            b > lowC[2] &&
            r < highC[0] &&
            g < highC[1] &&
            b < highC[2]) {
          data[i + 3] = 0;
        }
      }
    },

    /**
     * Return WebGL uniform locations for this filter's shader.
     *
     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
     * @param {WebGLShaderProgram} program This filter's compiled shader program.
     */
    getUniformLocations: function(gl, program) {
      return {
        uLow: gl.getUniformLocation(program, 'uLow'),
        uHigh: gl.getUniformLocation(program, 'uHigh'),
      };
    },

    /**
     * Send data from this filter to its shader program's uniforms.
     *
     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects
     */
    sendUniformData: function(gl, uniformLocations) {
      var source = new fabric.Color(this.color).getSource(),
          distance = parseFloat(this.distance),
          lowC = [
            0 + source[0] / 255 - distance,
            0 + source[1] / 255 - distance,
            0 + source[2] / 255 - distance,
            1
          ],
          highC = [
            source[0] / 255 + distance,
            source[1] / 255 + distance,
            source[2] / 255 + distance,
            1
          ];
      gl.uniform4fv(uniformLocations.uLow, lowC);
      gl.uniform4fv(uniformLocations.uHigh, highC);
    },

    /**
     * Returns object representation of an instance
     * @return {Object} Object representation of an instance
     */
    toObject: function() {
      return extend(this.callSuper('toObject'), {
        color: this.color,
        distance: this.distance
      });
    }
  });

  /**
   * Returns filter instance from an object representation
   * @static
   * @param {Object} object Object to create an instance from
   * @param {Function} [callback] to be invoked after filter creation
   * @return {fabric.Image.filters.RemoveColor} Instance of fabric.Image.filters.RemoveWhite
   */
  fabric.Image.filters.RemoveColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;

})( true ? exports : undefined);


(function(global) {

  'use strict';

  var fabric  = global.fabric || (global.fabric = { }),
      filters = fabric.Image.filters,
      createClass = fabric.util.createClass;

  var matrices = {
    Brownie: [
      0.59970,0.34553,-0.27082,0,0.186,
      -0.03770,0.86095,0.15059,0,-0.1449,
      0.24113,-0.07441,0.44972,0,-0.02965,
      0,0,0,1,0
    ],
    Vintage: [
      0.62793,0.32021,-0.03965,0,0.03784,
      0.02578,0.64411,0.03259,0,0.02926,
      0.04660,-0.08512,0.52416,0,0.02023,
      0,0,0,1,0
    ],
    Kodachrome: [
      1.12855,-0.39673,-0.03992,0,0.24991,
      -0.16404,1.08352,-0.05498,0,0.09698,
      -0.16786,-0.56034,1.60148,0,0.13972,
      0,0,0,1,0
    ],
    Technicolor: [
      1.91252,-0.85453,-0.09155,0,0.04624,
      -0.30878,1.76589,-0.10601,0,-0.27589,
      -0.23110,-0.75018,1.84759,0,0.12137,
      0,0,0,1,0
    ],
    Polaroid: [
      1.438,-0.062,-0.062,0,0,
      -0.122,1.378,-0.122,0,0,
      -0.016,-0.016,1.483,0,0,
      0,0,0,1,0
    ],
    Sepia: [
      0.393, 0.769, 0.189, 0, 0,
      0.349, 0.686, 0.168, 0, 0,
      0.272, 0.534, 0.131, 0, 0,
      0, 0, 0, 1, 0
    ],
    BlackWhite: [
      1.5, 1.5, 1.5, 0, -1,
      1.5, 1.5, 1.5, 0, -1,
      1.5, 1.5, 1.5, 0, -1,
      0, 0, 0, 1, 0,
    ]
  };

  for (var key in matrices) {
    filters[key] = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.Sepia.prototype */ {

      /**
       * Filter type
       * @param {String} type
       * @default
       */
      type: key,

      /**
       * Colormatrix for the effect
       * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning
       * outside the -1, 1 range.
       * @param {Array} matrix array of 20 numbers.
       * @default
       */
      matrix: matrices[key],

      /**
       * Lock the matrix export for this kind of static, parameter less filters.
       */
      mainParameter: false,
      /**
       * Lock the colormatrix on the color part, skipping alpha
       */
      colorsOnly: true,

    });
    fabric.Image.filters[key].fromObject = fabric.Image.filters.BaseFilter.fromObject;
  }
})( true ? exports : undefined);


(function(global) {
  'use strict';

  var fabric = global.fabric,
      filters = fabric.Image.filters,
      createClass = fabric.util.createClass;

  /**
   * Color Blend filter class
   * @class fabric.Image.filter.BlendColor
   * @memberOf fabric.Image.filters
   * @extends fabric.Image.filters.BaseFilter
   * @example
   * var filter = new fabric.Image.filters.BlendColor({
   *  color: '#000',
   *  mode: 'multiply'
   * });
   *
   * var filter = new fabric.Image.filters.BlendImage({
   *  image: fabricImageObject,
   *  mode: 'multiply',
   *  alpha: 0.5
   * });
   * object.filters.push(filter);
   * object.applyFilters();
   * canvas.renderAll();
   */

  filters.BlendColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {
    type: 'BlendColor',

    /**
     * Color to make the blend operation with. default to a reddish color since black or white
     * gives always strong result.
     **/
    color: '#F95C63',

    /**
     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,
     * darken, lighten, overlay, exclusion, tint.
     **/
    mode: 'multiply',

    /**
     * alpha value. represent the strength of the blend color operation.
     **/
    alpha: 1,

    /**
     * Fragment source for the Multiply program
     */
    fragmentSource: {
      multiply: 'gl_FragColor.rgb *= uColor.rgb;\n',
      screen: 'gl_FragColor.rgb = 1.0 - (1.0 - gl_FragColor.rgb) * (1.0 - uColor.rgb);\n',
      add: 'gl_FragColor.rgb += uColor.rgb;\n',
      diff: 'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\n',
      subtract: 'gl_FragColor.rgb -= uColor.rgb;\n',
      lighten: 'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\n',
      darken: 'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\n',
      exclusion: 'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\n',
      overlay: 'if (uColor.r < 0.5) {\n' +
          'gl_FragColor.r *= 2.0 * uColor.r;\n' +
        '} else {\n' +
          'gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\n' +
        '}\n' +
        'if (uColor.g < 0.5) {\n' +
          'gl_FragColor.g *= 2.0 * uColor.g;\n' +
        '} else {\n' +
          'gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\n' +
        '}\n' +
        'if (uColor.b < 0.5) {\n' +
          'gl_FragColor.b *= 2.0 * uColor.b;\n' +
        '} else {\n' +
          'gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\n' +
        '}\n',
      tint: 'gl_FragColor.rgb *= (1.0 - uColor.a);\n' +
        'gl_FragColor.rgb += uColor.rgb;\n',
    },

    /**
     * build the fragment source for the filters, joining the common part with
     * the specific one.
     * @param {String} mode the mode of the filter, a key of this.fragmentSource
     * @return {String} the source to be compiled
     * @private
     */
    buildSource: function(mode) {
      return 'precision highp float;\n' +
        'uniform sampler2D uTexture;\n' +
        'uniform vec4 uColor;\n' +
        'varying vec2 vTexCoord;\n' +
        'void main() {\n' +
          'vec4 color = texture2D(uTexture, vTexCoord);\n' +
          'gl_FragColor = color;\n' +
          'if (color.a > 0.0) {\n' +
            this.fragmentSource[mode] +
          '}\n' +
        '}';
    },

    /**
     * Retrieves the cached shader.
     * @param {Object} options
     * @param {WebGLRenderingContext} options.context The GL context used for rendering.
     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.
     */
    retrieveShader: function(options) {
      var cacheKey = this.type + '_' + this.mode, shaderSource;
      if (!options.programCache.hasOwnProperty(cacheKey)) {
        shaderSource = this.buildSource(this.mode);
        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);
      }
      return options.programCache[cacheKey];
    },

    /**
     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.
     *
     * @param {Object} options
     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.
     */
    applyTo2d: function(options) {
      var imageData = options.imageData,
          data = imageData.data, iLen = data.length,
          tr, tg, tb,
          r, g, b,
          source, alpha1 = 1 - this.alpha;

      source = new fabric.Color(this.color).getSource();
      tr = source[0] * this.alpha;
      tg = source[1] * this.alpha;
      tb = source[2] * this.alpha;

      for (var i = 0; i < iLen; i += 4) {

        r = data[i];
        g = data[i + 1];
        b = data[i + 2];

        switch (this.mode) {
          case 'multiply':
            data[i] = r * tr / 255;
            data[i + 1] = g * tg / 255;
            data[i + 2] = b * tb / 255;
            break;
          case 'screen':
            data[i] = 255 - (255 - r) * (255 - tr) / 255;
            data[i + 1] = 255 - (255 - g) * (255 - tg) / 255;
            data[i + 2] = 255 - (255 - b) * (255 - tb) / 255;
            break;
          case 'add':
            data[i] = r + tr;
            data[i + 1] = g + tg;
            data[i + 2] = b + tb;
            break;
          case 'diff':
          case 'difference':
            data[i] = Math.abs(r - tr);
            data[i + 1] = Math.abs(g - tg);
            data[i + 2] = Math.abs(b - tb);
            break;
          case 'subtract':
            data[i] = r - tr;
            data[i + 1] = g - tg;
            data[i + 2] = b - tb;
            break;
          case 'darken':
            data[i] = Math.min(r, tr);
            data[i + 1] = Math.min(g, tg);
            data[i + 2] = Math.min(b, tb);
            break;
          case 'lighten':
            data[i] = Math.max(r, tr);
            data[i + 1] = Math.max(g, tg);
            data[i + 2] = Math.max(b, tb);
            break;
          case 'overlay':
            data[i] = tr < 128 ? (2 * r * tr / 255) : (255 - 2 * (255 - r) * (255 - tr) / 255);
            data[i + 1] = tg < 128 ? (2 * g * tg / 255) : (255 - 2 * (255 - g) * (255 - tg) / 255);
            data[i + 2] = tb < 128 ? (2 * b * tb / 255) : (255 - 2 * (255 - b) * (255 - tb) / 255);
            break;
          case 'exclusion':
            data[i] = tr + r - ((2 * tr * r) / 255);
            data[i + 1] = tg + g - ((2 * tg * g) / 255);
            data[i + 2] = tb + b - ((2 * tb * b) / 255);
            break;
          case 'tint':
            data[i] = tr + r * alpha1;
            data[i + 1] = tg + g * alpha1;
            data[i + 2] = tb + b * alpha1;
        }
      }
    },

    /**
     * Return WebGL uniform locations for this filter's shader.
     *
     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
     * @param {WebGLShaderProgram} program This filter's compiled shader program.
     */
    getUniformLocations: function(gl, program) {
      return {
        uColor: gl.getUniformLocation(program, 'uColor'),
      };
    },

    /**
     * Send data from this filter to its shader program's uniforms.
     *
     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects
     */
    sendUniformData: function(gl, uniformLocations) {
      var source = new fabric.Color(this.color).getSource();
      source[0] = this.alpha * source[0] / 255;
      source[1] = this.alpha * source[1] / 255;
      source[2] = this.alpha * source[2] / 255;
      source[3] = this.alpha;
      gl.uniform4fv(uniformLocations.uColor, source);
    },

    /**
     * Returns object representation of an instance
     * @return {Object} Object representation of an instance
     */
    toObject: function() {
      return {
        type: this.type,
        color: this.color,
        mode: this.mode,
        alpha: this.alpha
      };
    }
  });

  /**
   * Returns filter instance from an object representation
   * @static
   * @param {Object} object Object to create an instance from
   * @param {function} [callback] to be invoked after filter creation
   * @return {fabric.Image.filters.BlendColor} Instance of fabric.Image.filters.BlendColor
   */
  fabric.Image.filters.BlendColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;

})( true ? exports : undefined);


(function(global) {
  'use strict';

  var fabric = global.fabric,
      filters = fabric.Image.filters,
      createClass = fabric.util.createClass;

  /**
   * Image Blend filter class
   * @class fabric.Image.filter.BlendImage
   * @memberOf fabric.Image.filters
   * @extends fabric.Image.filters.BaseFilter
   * @example
   * var filter = new fabric.Image.filters.BlendColor({
   *  color: '#000',
   *  mode: 'multiply'
   * });
   *
   * var filter = new fabric.Image.filters.BlendImage({
   *  image: fabricImageObject,
   *  mode: 'multiply',
   *  alpha: 0.5
   * });
   * object.filters.push(filter);
   * object.applyFilters();
   * canvas.renderAll();
   */

  filters.BlendImage = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.BlendImage.prototype */ {
    type: 'BlendImage',

    /**
     * Color to make the blend operation with. default to a reddish color since black or white
     * gives always strong result.
     **/
    image: null,

    /**
     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,
     * darken, lighten, overlay, exclusion, tint.
     **/
    mode: 'multiply',

    /**
     * alpha value. represent the strength of the blend image operation.
     * not implemented.
     **/
    alpha: 1,

    vertexSource: 'attribute vec2 aPosition;\n' +
      'varying vec2 vTexCoord;\n' +
      'varying vec2 vTexCoord2;\n' +
      'uniform mat3 uTransformMatrix;\n' +
      'void main() {\n' +
        'vTexCoord = aPosition;\n' +
        'vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\n' +
        'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\n' +
      '}',

    /**
     * Fragment source for the Multiply program
     */
    fragmentSource: {
      multiply: 'precision highp float;\n' +
        'uniform sampler2D uTexture;\n' +
        'uniform sampler2D uImage;\n' +
        'uniform vec4 uColor;\n' +
        'varying vec2 vTexCoord;\n' +
        'varying vec2 vTexCoord2;\n' +
        'void main() {\n' +
          'vec4 color = texture2D(uTexture, vTexCoord);\n' +
          'vec4 color2 = texture2D(uImage, vTexCoord2);\n' +
          'color.rgba *= color2.rgba;\n' +
          'gl_FragColor = color;\n' +
        '}',
      mask: 'precision highp float;\n' +
        'uniform sampler2D uTexture;\n' +
        'uniform sampler2D uImage;\n' +
        'uniform vec4 uColor;\n' +
        'varying vec2 vTexCoord;\n' +
        'varying vec2 vTexCoord2;\n' +
        'void main() {\n' +
          'vec4 color = texture2D(uTexture, vTexCoord);\n' +
          'vec4 color2 = texture2D(uImage, vTexCoord2);\n' +
          'color.a = color2.a;\n' +
          'gl_FragColor = color;\n' +
        '}',
    },

    /**
     * Retrieves the cached shader.
     * @param {Object} options
     * @param {WebGLRenderingContext} options.context The GL context used for rendering.
     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.
     */
    retrieveShader: function(options) {
      var cacheKey = this.type + '_' + this.mode;
      var shaderSource = this.fragmentSource[this.mode];
      if (!options.programCache.hasOwnProperty(cacheKey)) {
        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);
      }
      return options.programCache[cacheKey];
    },

    applyToWebGL: function(options) {
      // load texture to blend.
      var gl = options.context,
          texture = this.createTexture(options.filterBackend, this.image);
      this.bindAdditionalTexture(gl, texture, gl.TEXTURE1);
      this.callSuper('applyToWebGL', options);
      this.unbindAdditionalTexture(gl, gl.TEXTURE1);
    },

    createTexture: function(backend, image) {
      return backend.getCachedTexture(image.cacheKey, image._element);
    },

    /**
     * Calculate a transformMatrix to adapt the image to blend over
     * @param {Object} options
     * @param {WebGLRenderingContext} options.context The GL context used for rendering.
     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.
     */
    calculateMatrix: function() {
      var image = this.image,
          width = image._element.width,
          height = image._element.height;
      return [
        1 / image.scaleX, 0, 0,
        0, 1 / image.scaleY, 0,
        -image.left / width, -image.top / height, 1
      ];
    },

    /**
     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.
     *
     * @param {Object} options
     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.
     */
    applyTo2d: function(options) {
      var imageData = options.imageData,
          resources = options.filterBackend.resources,
          data = imageData.data, iLen = data.length,
          width = imageData.width,
          height = imageData.height,
          tr, tg, tb, ta,
          r, g, b, a,
          canvas1, context, image = this.image, blendData;

      if (!resources.blendImage) {
        resources.blendImage = fabric.util.createCanvasElement();
      }
      canvas1 = resources.blendImage;
      context = canvas1.getContext('2d');
      if (canvas1.width !== width || canvas1.height !== height) {
        canvas1.width = width;
        canvas1.height = height;
      }
      else {
        context.clearRect(0, 0, width, height);
      }
      context.setTransform(image.scaleX, 0, 0, image.scaleY, image.left, image.top);
      context.drawImage(image._element, 0, 0, width, height);
      blendData = context.getImageData(0, 0, width, height).data;
      for (var i = 0; i < iLen; i += 4) {

        r = data[i];
        g = data[i + 1];
        b = data[i + 2];
        a = data[i + 3];

        tr = blendData[i];
        tg = blendData[i + 1];
        tb = blendData[i + 2];
        ta = blendData[i + 3];

        switch (this.mode) {
          case 'multiply':
            data[i] = r * tr / 255;
            data[i + 1] = g * tg / 255;
            data[i + 2] = b * tb / 255;
            data[i + 3] = a * ta / 255;
            break;
          case 'mask':
            data[i + 3] = ta;
            break;
        }
      }
    },

    /**
     * Return WebGL uniform locations for this filter's shader.
     *
     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
     * @param {WebGLShaderProgram} program This filter's compiled shader program.
     */
    getUniformLocations: function(gl, program) {
      return {
        uTransformMatrix: gl.getUniformLocation(program, 'uTransformMatrix'),
        uImage: gl.getUniformLocation(program, 'uImage'),
      };
    },

    /**
     * Send data from this filter to its shader program's uniforms.
     *
     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects
     */
    sendUniformData: function(gl, uniformLocations) {
      var matrix = this.calculateMatrix();
      gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.
      gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);
    },

    /**
     * Returns object representation of an instance
     * @return {Object} Object representation of an instance
     */
    toObject: function() {
      return {
        type: this.type,
        image: this.image && this.image.toObject(),
        mode: this.mode,
        alpha: this.alpha
      };
    }
  });

  /**
   * Returns filter instance from an object representation
   * @static
   * @param {Object} object Object to create an instance from
   * @param {function} callback to be invoked after filter creation
   * @return {fabric.Image.filters.BlendImage} Instance of fabric.Image.filters.BlendImage
   */
  fabric.Image.filters.BlendImage.fromObject = function(object, callback) {
    fabric.Image.fromObject(object.image, function(image) {
      var options = fabric.util.object.clone(object);
      options.image = image;
      callback(new fabric.Image.filters.BlendImage(options));
    });
  };

})( true ? exports : undefined);


(function(global) {

  'use strict';

  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,
      sqrt = Math.sqrt, abs = Math.abs, round = Math.round, sin = Math.sin,
      ceil = Math.ceil,
      filters = fabric.Image.filters,
      createClass = fabric.util.createClass;

  /**
   * Resize image filter class
   * @class fabric.Image.filters.Resize
   * @memberOf fabric.Image.filters
   * @extends fabric.Image.filters.BaseFilter
   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}
   * @example
   * var filter = new fabric.Image.filters.Resize();
   * object.filters.push(filter);
   * object.applyFilters(canvas.renderAll.bind(canvas));
   */
  filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {

    /**
     * Filter type
     * @param {String} type
     * @default
     */
    type: 'Resize',

    /**
     * Resize type
     * for webgl resizeType is just lanczos, for canvas2d can be:
     * bilinear, hermite, sliceHack, lanczos.
     * @param {String} resizeType
     * @default
     */
    resizeType: 'hermite',

    /**
     * Scale factor for resizing, x axis
     * @param {Number} scaleX
     * @default
     */
    scaleX: 1,

    /**
     * Scale factor for resizing, y axis
     * @param {Number} scaleY
     * @default
     */
    scaleY: 1,

    /**
     * LanczosLobes parameter for lanczos filter, valid for resizeType lanczos
     * @param {Number} lanczosLobes
     * @default
     */
    lanczosLobes: 3,


    /**
     * Return WebGL uniform locations for this filter's shader.
     *
     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
     * @param {WebGLShaderProgram} program This filter's compiled shader program.
     */
    getUniformLocations: function(gl, program) {
      return {
        uDelta: gl.getUniformLocation(program, 'uDelta'),
        uTaps: gl.getUniformLocation(program, 'uTaps'),
      };
    },

    /**
     * Send data from this filter to its shader program's uniforms.
     *
     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects
     */
    sendUniformData: function(gl, uniformLocations) {
      gl.uniform2fv(uniformLocations.uDelta, this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height]);
      gl.uniform1fv(uniformLocations.uTaps, this.taps);
    },

    /**
     * Retrieves the cached shader.
     * @param {Object} options
     * @param {WebGLRenderingContext} options.context The GL context used for rendering.
     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.
     */
    retrieveShader: function(options) {
      var filterWindow = this.getFilterWindow(), cacheKey = this.type + '_' + filterWindow;
      if (!options.programCache.hasOwnProperty(cacheKey)) {
        var fragmentShader = this.generateShader(filterWindow);
        options.programCache[cacheKey] = this.createProgram(options.context, fragmentShader);
      }
      return options.programCache[cacheKey];
    },

    getFilterWindow: function() {
      var scale = this.tempScale;
      return Math.ceil(this.lanczosLobes / scale);
    },

    getTaps: function() {
      var lobeFunction = this.lanczosCreate(this.lanczosLobes), scale = this.tempScale,
          filterWindow = this.getFilterWindow(), taps = new Array(filterWindow);
      for (var i = 1; i <= filterWindow; i++) {
        taps[i - 1] = lobeFunction(i * scale);
      }
      return taps;
    },

    /**
     * Generate vertex and shader sources from the necessary steps numbers
     * @param {Number} filterWindow
     */
    generateShader: function(filterWindow) {
      var offsets = new Array(filterWindow),
          fragmentShader = this.fragmentSourceTOP, filterWindow;

      for (var i = 1; i <= filterWindow; i++) {
        offsets[i - 1] = i + '.0 * uDelta';
      }

      fragmentShader += 'uniform float uTaps[' + filterWindow + '];\n';
      fragmentShader += 'void main() {\n';
      fragmentShader += '  vec4 color = texture2D(uTexture, vTexCoord);\n';
      fragmentShader += '  float sum = 1.0;\n';

      offsets.forEach(function(offset, i) {
        fragmentShader += '  color += texture2D(uTexture, vTexCoord + ' + offset + ') * uTaps[' + i + '];\n';
        fragmentShader += '  color += texture2D(uTexture, vTexCoord - ' + offset + ') * uTaps[' + i + '];\n';
        fragmentShader += '  sum += 2.0 * uTaps[' + i + '];\n';
      });
      fragmentShader += '  gl_FragColor = color / sum;\n';
      fragmentShader += '}';
      return fragmentShader;
    },

    fragmentSourceTOP: 'precision highp float;\n' +
      'uniform sampler2D uTexture;\n' +
      'uniform vec2 uDelta;\n' +
      'varying vec2 vTexCoord;\n',

    /**
     * Apply the resize filter to the image
     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.
     *
     * @param {Object} options
     * @param {Number} options.passes The number of filters remaining to be executed
     * @param {Boolean} options.webgl Whether to use webgl to render the filter.
     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.
     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.
     * @param {WebGLRenderingContext} options.context The GL context used for rendering.
     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.
     */
    applyTo: function(options) {
      if (options.webgl) {
        options.passes++;
        this.width = options.sourceWidth;
        this.horizontal = true;
        this.dW = Math.round(this.width * this.scaleX);
        this.dH = options.sourceHeight;
        this.tempScale = this.dW / this.width;
        this.taps = this.getTaps();
        options.destinationWidth = this.dW;
        this._setupFrameBuffer(options);
        this.applyToWebGL(options);
        this._swapTextures(options);
        options.sourceWidth = options.destinationWidth;

        this.height = options.sourceHeight;
        this.horizontal = false;
        this.dH = Math.round(this.height * this.scaleY);
        this.tempScale = this.dH / this.height;
        this.taps = this.getTaps();
        options.destinationHeight = this.dH;
        this._setupFrameBuffer(options);
        this.applyToWebGL(options);
        this._swapTextures(options);
        options.sourceHeight = options.destinationHeight;
      }
      else {
        this.applyTo2d(options);
      }
    },

    isNeutralState: function() {
      return this.scaleX === 1 && this.scaleY === 1;
    },

    lanczosCreate: function(lobes) {
      return function(x) {
        if (x >= lobes || x <= -lobes) {
          return 0.0;
        }
        if (x < 1.19209290E-07 && x > -1.19209290E-07) {
          return 1.0;
        }
        x *= Math.PI;
        var xx = x / lobes;
        return (sin(x) / x) * sin(xx) / xx;
      };
    },

    /**
     * Applies filter to canvas element
     * @memberOf fabric.Image.filters.Resize.prototype
     * @param {Object} canvasEl Canvas element to apply filter to
     * @param {Number} scaleX
     * @param {Number} scaleY
     */
    applyTo2d: function(options) {
      var imageData = options.imageData,
          scaleX = this.scaleX,
          scaleY = this.scaleY;

      this.rcpScaleX = 1 / scaleX;
      this.rcpScaleY = 1 / scaleY;

      var oW = imageData.width, oH = imageData.height,
          dW = round(oW * scaleX), dH = round(oH * scaleY),
          newData;

      if (this.resizeType === 'sliceHack') {
        newData = this.sliceByTwo(options, oW, oH, dW, dH);
      }
      else if (this.resizeType === 'hermite') {
        newData = this.hermiteFastResize(options, oW, oH, dW, dH);
      }
      else if (this.resizeType === 'bilinear') {
        newData = this.bilinearFiltering(options, oW, oH, dW, dH);
      }
      else if (this.resizeType === 'lanczos') {
        newData = this.lanczosResize(options, oW, oH, dW, dH);
      }
      options.imageData = newData;
    },

    /**
     * Filter sliceByTwo
     * @param {Object} canvasEl Canvas element to apply filter to
     * @param {Number} oW Original Width
     * @param {Number} oH Original Height
     * @param {Number} dW Destination Width
     * @param {Number} dH Destination Height
     * @returns {ImageData}
     */
    sliceByTwo: function(options, oW, oH, dW, dH) {
      var imageData = options.imageData,
          mult = 0.5, doneW = false, doneH = false, stepW = oW * mult,
          stepH = oH * mult, resources = fabric.filterBackend.resources,
          tmpCanvas, ctx, sX = 0, sY = 0, dX = oW, dY = 0;
      if (!resources.sliceByTwo) {
        resources.sliceByTwo = document.createElement('canvas');
      }
      tmpCanvas = resources.sliceByTwo;
      if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {
        tmpCanvas.width = oW * 1.5;
        tmpCanvas.height = oH;
      }
      ctx = tmpCanvas.getContext('2d');
      ctx.clearRect(0, 0, oW * 1.5, oH);
      ctx.putImageData(imageData, 0, 0);

      dW = floor(dW);
      dH = floor(dH);

      while (!doneW || !doneH) {
        oW = stepW;
        oH = stepH;
        if (dW < floor(stepW * mult)) {
          stepW = floor(stepW * mult);
        }
        else {
          stepW = dW;
          doneW = true;
        }
        if (dH < floor(stepH * mult)) {
          stepH = floor(stepH * mult);
        }
        else {
          stepH = dH;
          doneH = true;
        }
        ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);
        sX = dX;
        sY = dY;
        dY += stepH;
      }
      return ctx.getImageData(sX, sY, dW, dH);
    },

    /**
     * Filter lanczosResize
     * @param {Object} canvasEl Canvas element to apply filter to
     * @param {Number} oW Original Width
     * @param {Number} oH Original Height
     * @param {Number} dW Destination Width
     * @param {Number} dH Destination Height
     * @returns {ImageData}
     */
    lanczosResize: function(options, oW, oH, dW, dH) {

      function process(u) {
        var v, i, weight, idx, a, red, green,
            blue, alpha, fX, fY;
        center.x = (u + 0.5) * ratioX;
        icenter.x = floor(center.x);
        for (v = 0; v < dH; v++) {
          center.y = (v + 0.5) * ratioY;
          icenter.y = floor(center.y);
          a = 0; red = 0; green = 0; blue = 0; alpha = 0;
          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {
            if (i < 0 || i >= oW) {
              continue;
            }
            fX = floor(1000 * abs(i - center.x));
            if (!cacheLanc[fX]) {
              cacheLanc[fX] = { };
            }
            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {
              if (j < 0 || j >= oH) {
                continue;
              }
              fY = floor(1000 * abs(j - center.y));
              if (!cacheLanc[fX][fY]) {
                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);
              }
              weight = cacheLanc[fX][fY];
              if (weight > 0) {
                idx = (j * oW + i) * 4;
                a += weight;
                red += weight * srcData[idx];
                green += weight * srcData[idx + 1];
                blue += weight * srcData[idx + 2];
                alpha += weight * srcData[idx + 3];
              }
            }
          }
          idx = (v * dW + u) * 4;
          destData[idx] = red / a;
          destData[idx + 1] = green / a;
          destData[idx + 2] = blue / a;
          destData[idx + 3] = alpha / a;
        }

        if (++u < dW) {
          return process(u);
        }
        else {
          return destImg;
        }
      }

      var srcData = options.imageData.data,
          destImg = options.ctx.createImageData(dW, dH),
          destData = destImg.data,
          lanczos = this.lanczosCreate(this.lanczosLobes),
          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,
          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,
          range2X = ceil(ratioX * this.lanczosLobes / 2),
          range2Y = ceil(ratioY * this.lanczosLobes / 2),
          cacheLanc = { }, center = { }, icenter = { };

      return process(0);
    },

    /**
     * bilinearFiltering
     * @param {Object} canvasEl Canvas element to apply filter to
     * @param {Number} oW Original Width
     * @param {Number} oH Original Height
     * @param {Number} dW Destination Width
     * @param {Number} dH Destination Height
     * @returns {ImageData}
     */
    bilinearFiltering: function(options, oW, oH, dW, dH) {
      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,
          color, offset = 0, origPix, ratioX = this.rcpScaleX,
          ratioY = this.rcpScaleY,
          w4 = 4 * (oW - 1), img = options.imageData,
          pixels = img.data, destImage = options.ctx.createImageData(dW, dH),
          destPixels = destImage.data;
      for (i = 0; i < dH; i++) {
        for (j = 0; j < dW; j++) {
          x = floor(ratioX * j);
          y = floor(ratioY * i);
          xDiff = ratioX * j - x;
          yDiff = ratioY * i - y;
          origPix = 4 * (y * oW + x);

          for (chnl = 0; chnl < 4; chnl++) {
            a = pixels[origPix + chnl];
            b = pixels[origPix + 4 + chnl];
            c = pixels[origPix + w4 + chnl];
            d = pixels[origPix + w4 + 4 + chnl];
            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +
                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;
            destPixels[offset++] = color;
          }
        }
      }
      return destImage;
    },

    /**
     * hermiteFastResize
     * @param {Object} canvasEl Canvas element to apply filter to
     * @param {Number} oW Original Width
     * @param {Number} oH Original Height
     * @param {Number} dW Destination Width
     * @param {Number} dH Destination Height
     * @returns {ImageData}
     */
    hermiteFastResize: function(options, oW, oH, dW, dH) {
      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,
          ratioWHalf = ceil(ratioW / 2),
          ratioHHalf = ceil(ratioH / 2),
          img = options.imageData, data = img.data,
          img2 = options.ctx.createImageData(dW, dH), data2 = img2.data;
      for (var j = 0; j < dH; j++) {
        for (var i = 0; i < dW; i++) {
          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,
              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;
          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {
            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,
                centerX = (i + 0.5) * ratioW, w0 = dy * dy;
            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {
              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,
                  w = sqrt(w0 + dx * dx);
              /* eslint-disable max-depth */
              if (w > 1 && w < -1) {
                continue;
              }
              //hermite filter
              weight = 2 * w * w * w - 3 * w * w + 1;
              if (weight > 0) {
                dx = 4 * (xx + yy * oW);
                //alpha
                gxA += weight * data[dx + 3];
                weightsAlpha += weight;
                //colors
                if (data[dx + 3] < 255) {
                  weight = weight * data[dx + 3] / 250;
                }
                gxR += weight * data[dx];
                gxG += weight * data[dx + 1];
                gxB += weight * data[dx + 2];
                weights += weight;
              }
              /* eslint-enable max-depth */
            }
          }
          data2[x2] = gxR / weights;
          data2[x2 + 1] = gxG / weights;
          data2[x2 + 2] = gxB / weights;
          data2[x2 + 3] = gxA / weightsAlpha;
        }
      }
      return img2;
    },

    /**
     * Returns object representation of an instance
     * @return {Object} Object representation of an instance
     */
    toObject: function() {
      return {
        type: this.type,
        scaleX: this.scaleX,
        scaleY: this.scaleY,
        resizeType: this.resizeType,
        lanczosLobes: this.lanczosLobes
      };
    }
  });

  /**
   * Returns filter instance from an object representation
   * @static
   * @param {Object} object Object to create an instance from
   * @param {Function} [callback] to be invoked after filter creation
   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize
   */
  fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;

})( true ? exports : undefined);


(function(global) {

  'use strict';

  var fabric  = global.fabric || (global.fabric = { }),
      filters = fabric.Image.filters,
      createClass = fabric.util.createClass;

  /**
   * Contrast filter class
   * @class fabric.Image.filters.Contrast
   * @memberOf fabric.Image.filters
   * @extends fabric.Image.filters.BaseFilter
   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition
   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}
   * @example
   * var filter = new fabric.Image.filters.Contrast({
   *   contrast: 40
   * });
   * object.filters.push(filter);
   * object.applyFilters();
   */
  filters.Contrast = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Contrast.prototype */ {

    /**
     * Filter type
     * @param {String} type
     * @default
     */
    type: 'Contrast',

    fragmentSource: 'precision highp float;\n' +
      'uniform sampler2D uTexture;\n' +
      'uniform float uContrast;\n' +
      'varying vec2 vTexCoord;\n' +
      'void main() {\n' +
        'vec4 color = texture2D(uTexture, vTexCoord);\n' +
        'float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\n' +
        'color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\n' +
        'gl_FragColor = color;\n' +
      '}',

    contrast: 0,

    mainParameter: 'contrast',

    /**
     * Constructor
     * @memberOf fabric.Image.filters.Contrast.prototype
     * @param {Object} [options] Options object
     * @param {Number} [options.contrast=0] Value to contrast the image up (-1...1)
     */

    /**
      * Apply the Contrast operation to a Uint8Array representing the pixels of an image.
      *
      * @param {Object} options
      * @param {ImageData} options.imageData The Uint8Array to be filtered.
      */
    applyTo2d: function(options) {
      if (this.contrast === 0) {
        return;
      }
      var imageData = options.imageData, i, len,
          data = imageData.data, len = data.length,
          contrast = Math.floor(this.contrast * 255),
          contrastF = 259 * (contrast + 255) / (255 * (259 - contrast));

      for (i = 0; i < len; i += 4) {
        data[i] = contrastF * (data[i] - 128) + 128;
        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;
        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;
      }
    },

    /**
     * Return WebGL uniform locations for this filter's shader.
     *
     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
     * @param {WebGLShaderProgram} program This filter's compiled shader program.
     */
    getUniformLocations: function(gl, program) {
      return {
        uContrast: gl.getUniformLocation(program, 'uContrast'),
      };
    },

    /**
     * Send data from this filter to its shader program's uniforms.
     *
     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects
     */
    sendUniformData: function(gl, uniformLocations) {
      gl.uniform1f(uniformLocations.uContrast, this.contrast);
    },
  });

  /**
   * Returns filter instance from an object representation
   * @static
   * @param {Object} object Object to create an instance from
   * @param {function} [callback] to be invoked after filter creation
   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast
   */
  fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;

})( true ? exports : undefined);


(function(global) {

  'use strict';

  var fabric  = global.fabric || (global.fabric = { }),
      filters = fabric.Image.filters,
      createClass = fabric.util.createClass;

  /**
   * Saturate filter class
   * @class fabric.Image.filters.Saturation
   * @memberOf fabric.Image.filters
   * @extends fabric.Image.filters.BaseFilter
   * @see {@link fabric.Image.filters.Saturation#initialize} for constructor definition
   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}
   * @example
   * var filter = new fabric.Image.filters.Saturation({
   *   saturation: 100
   * });
   * object.filters.push(filter);
   * object.applyFilters();
   */
  filters.Saturation = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Saturation.prototype */ {

    /**
     * Filter type
     * @param {String} type
     * @default
     */
    type: 'Saturation',

    fragmentSource: 'precision highp float;\n' +
      'uniform sampler2D uTexture;\n' +
      'uniform float uSaturation;\n' +
      'varying vec2 vTexCoord;\n' +
      'void main() {\n' +
        'vec4 color = texture2D(uTexture, vTexCoord);\n' +
        'float rgMax = max(color.r, color.g);\n' +
        'float rgbMax = max(rgMax, color.b);\n' +
        'color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\n' +
        'color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\n' +
        'color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\n' +
        'gl_FragColor = color;\n' +
      '}',

    saturation: 0,

    mainParameter: 'saturation',

    /**
     * Constructor
     * @memberOf fabric.Image.filters.Saturate.prototype
     * @param {Object} [options] Options object
     * @param {Number} [options.saturate=0] Value to saturate the image (-1...1)
     */

    /**
     * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.
     *
     * @param {Object} options
     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.
     */
    applyTo2d: function(options) {
      if (this.saturation === 0) {
        return;
      }
      var imageData = options.imageData,
          data = imageData.data, len = data.length,
          adjust = -this.saturation, i, max;

      for (i = 0; i < len; i += 4) {
        max = Math.max(data[i], data[i + 1], data[i + 2]);
        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;
        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;
        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;
      }
    },

    /**
     * Return WebGL uniform locations for this filter's shader.
     *
     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
     * @param {WebGLShaderProgram} program This filter's compiled shader program.
     */
    getUniformLocations: function(gl, program) {
      return {
        uSaturation: gl.getUniformLocation(program, 'uSaturation'),
      };
    },

    /**
     * Send data from this filter to its shader program's uniforms.
     *
     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects
     */
    sendUniformData: function(gl, uniformLocations) {
      gl.uniform1f(uniformLocations.uSaturation, -this.saturation);
    },
  });

  /**
   * Returns filter instance from an object representation
   * @static
   * @param {Object} object Object to create an instance from
   * @param {Function} [callback] to be invoked after filter creation
   * @return {fabric.Image.filters.Saturation} Instance of fabric.Image.filters.Saturate
   */
  fabric.Image.filters.Saturation.fromObject = fabric.Image.filters.BaseFilter.fromObject;

})( true ? exports : undefined);


(function(global) {

  'use strict';

  var fabric  = global.fabric || (global.fabric = { }),
      filters = fabric.Image.filters,
      createClass = fabric.util.createClass;

  /**
   * Blur filter class
   * @class fabric.Image.filters.Blur
   * @memberOf fabric.Image.filters
   * @extends fabric.Image.filters.BaseFilter
   * @see {@link fabric.Image.filters.Blur#initialize} for constructor definition
   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}
   * @example
   * var filter = new fabric.Image.filters.Blur({
   *   blur: 0.5
   * });
   * object.filters.push(filter);
   * object.applyFilters();
   * canvas.renderAll();
   */
  filters.Blur = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blur.prototype */ {

    type: 'Blur',

    /*
'gl_FragColor = vec4(0.0);',
'gl_FragColor += texture2D(texture, vTexCoord + -7 * uDelta)*0.0044299121055113265;',
'gl_FragColor += texture2D(texture, vTexCoord + -6 * uDelta)*0.00895781211794;',
'gl_FragColor += texture2D(texture, vTexCoord + -5 * uDelta)*0.0215963866053;',
'gl_FragColor += texture2D(texture, vTexCoord + -4 * uDelta)*0.0443683338718;',
'gl_FragColor += texture2D(texture, vTexCoord + -3 * uDelta)*0.0776744219933;',
'gl_FragColor += texture2D(texture, vTexCoord + -2 * uDelta)*0.115876621105;',
'gl_FragColor += texture2D(texture, vTexCoord + -1 * uDelta)*0.147308056121;',
'gl_FragColor += texture2D(texture, vTexCoord              )*0.159576912161;',
'gl_FragColor += texture2D(texture, vTexCoord + 1 * uDelta)*0.147308056121;',
'gl_FragColor += texture2D(texture, vTexCoord + 2 * uDelta)*0.115876621105;',
'gl_FragColor += texture2D(texture, vTexCoord + 3 * uDelta)*0.0776744219933;',
'gl_FragColor += texture2D(texture, vTexCoord + 4 * uDelta)*0.0443683338718;',
'gl_FragColor += texture2D(texture, vTexCoord + 5 * uDelta)*0.0215963866053;',
'gl_FragColor += texture2D(texture, vTexCoord + 6 * uDelta)*0.00895781211794;',
'gl_FragColor += texture2D(texture, vTexCoord + 7 * uDelta)*0.0044299121055113265;',
*/

    /* eslint-disable max-len */
    fragmentSource: 'precision highp float;\n' +
      'uniform sampler2D uTexture;\n' +
      'uniform vec2 uDelta;\n' +
      'varying vec2 vTexCoord;\n' +
      'const float nSamples = 15.0;\n' +
      'vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\n' +
      'float random(vec3 scale) {\n' +
        /* use the fragment position for a different seed per-pixel */
        'return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\n' +
      '}\n' +
      'void main() {\n' +
        'vec4 color = vec4(0.0);\n' +
        'float total = 0.0;\n' +
        'float offset = random(v3offset);\n' +
        'for (float t = -nSamples; t <= nSamples; t++) {\n' +
          'float percent = (t + offset - 0.5) / nSamples;\n' +
          'float weight = 1.0 - abs(percent);\n' +
          'color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\n' +
          'total += weight;\n' +
        '}\n' +
        'gl_FragColor = color / total;\n' +
      '}',
    /* eslint-enable max-len */

    /**
     * blur value, in percentage of image dimensions.
     * specific to keep the image blur constant at different resolutions
     * range bewteen 0 and 1.
     */
    blur: 0,

    mainParameter: 'blur',

    applyTo: function(options) {
      if (options.webgl) {
        // this aspectRatio is used to give the same blur to vertical and horizontal
        this.aspectRatio = options.sourceWidth / options.sourceHeight;
        options.passes++;
        this._setupFrameBuffer(options);
        this.horizontal = true;
        this.applyToWebGL(options);
        this._swapTextures(options);
        this._setupFrameBuffer(options);
        this.horizontal = false;
        this.applyToWebGL(options);
        this._swapTextures(options);
      }
      else {
        this.applyTo2d(options);
      }
    },

    applyTo2d: function(options) {
      // paint canvasEl with current image data.
      //options.ctx.putImageData(options.imageData, 0, 0);
      options.imageData = this.simpleBlur(options);
    },

    simpleBlur: function(options) {
      var resources = options.filterBackend.resources, canvas1, canvas2,
          width = options.imageData.width,
          height = options.imageData.height;

      if (!resources.blurLayer1) {
        resources.blurLayer1 = fabric.util.createCanvasElement();
        resources.blurLayer2 = fabric.util.createCanvasElement();
      }
      canvas1 = resources.blurLayer1;
      canvas2 = resources.blurLayer2;
      if (canvas1.width !== width || canvas1.height !== height) {
        canvas2.width = canvas1.width = width;
        canvas2.height = canvas1.height = height;
      }
      var ctx1 = canvas1.getContext('2d'),
          ctx2 = canvas2.getContext('2d'),
          nSamples = 15,
          random, percent, j, i,
          blur = this.blur * 0.06 * 0.5;

      // load first canvas
      ctx1.putImageData(options.imageData, 0, 0);
      ctx2.clearRect(0, 0, width, height);

      for (i = -nSamples; i <= nSamples; i++) {
        random = (Math.random() - 0.5) / 4;
        percent = i / nSamples;
        j = blur * percent * width + random;
        ctx2.globalAlpha = 1 - Math.abs(percent);
        ctx2.drawImage(canvas1, j, random);
        ctx1.drawImage(canvas2, 0, 0);
        ctx2.globalAlpha = 1;
        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);
      }
      for (i = -nSamples; i <= nSamples; i++) {
        random = (Math.random() - 0.5) / 4;
        percent = i / nSamples;
        j = blur * percent * height + random;
        ctx2.globalAlpha = 1 - Math.abs(percent);
        ctx2.drawImage(canvas1, random, j);
        ctx1.drawImage(canvas2, 0, 0);
        ctx2.globalAlpha = 1;
        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);
      }
      options.ctx.drawImage(canvas1, 0, 0);
      var newImageData = options.ctx.getImageData(0, 0, canvas1.width, canvas1.height);
      ctx1.globalAlpha = 1;
      ctx1.clearRect(0, 0, canvas1.width, canvas1.height);
      return newImageData;
    },

    /**
     * Return WebGL uniform locations for this filter's shader.
     *
     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
     * @param {WebGLShaderProgram} program This filter's compiled shader program.
     */
    getUniformLocations: function(gl, program) {
      return {
        delta: gl.getUniformLocation(program, 'uDelta'),
      };
    },

    /**
     * Send data from this filter to its shader program's uniforms.
     *
     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects
     */
    sendUniformData: function(gl, uniformLocations) {
      var delta = this.chooseRightDelta();
      gl.uniform2fv(uniformLocations.delta, delta);
    },

    /**
     * choose right value of image percentage to blur with
     * @returns {Array} a numeric array with delta values
     */
    chooseRightDelta: function() {
      var blurScale = 1, delta = [0, 0], blur;
      if (this.horizontal) {
        if (this.aspectRatio > 1) {
          // image is wide, i want to shrink radius horizontal
          blurScale = 1 / this.aspectRatio;
        }
      }
      else {
        if (this.aspectRatio < 1) {
          // image is tall, i want to shrink radius vertical
          blurScale = this.aspectRatio;
        }
      }
      blur = blurScale * this.blur * 0.12;
      if (this.horizontal) {
        delta[0] = blur;
      }
      else {
        delta[1] = blur;
      }
      return delta;
    },
  });

  /**
   * Deserialize a JSON definition of a BlurFilter into a concrete instance.
   */
  filters.Blur.fromObject = fabric.Image.filters.BaseFilter.fromObject;

})( true ? exports : undefined);


(function(global) {

  'use strict';

  var fabric  = global.fabric || (global.fabric = { }),
      filters = fabric.Image.filters,
      createClass = fabric.util.createClass;

  /**
   * Gamma filter class
   * @class fabric.Image.filters.Gamma
   * @memberOf fabric.Image.filters
   * @extends fabric.Image.filters.BaseFilter
   * @see {@link fabric.Image.filters.Gamma#initialize} for constructor definition
   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}
   * @example
   * var filter = new fabric.Image.filters.Gamma({
   *   brightness: 200
   * });
   * object.filters.push(filter);
   * object.applyFilters();
   */
  filters.Gamma = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Gamma.prototype */ {

    /**
     * Filter type
     * @param {String} type
     * @default
     */
    type: 'Gamma',

    fragmentSource: 'precision highp float;\n' +
      'uniform sampler2D uTexture;\n' +
      'uniform vec3 uGamma;\n' +
      'varying vec2 vTexCoord;\n' +
      'void main() {\n' +
        'vec4 color = texture2D(uTexture, vTexCoord);\n' +
        'vec3 correction = (1.0 / uGamma);\n' +
        'color.r = pow(color.r, correction.r);\n' +
        'color.g = pow(color.g, correction.g);\n' +
        'color.b = pow(color.b, correction.b);\n' +
        'gl_FragColor = color;\n' +
        'gl_FragColor.rgb *= color.a;\n' +
      '}',

    /**
     * Gamma array value, from 0.01 to 2.2.
     * @param {Array} gamma
     * @default
     */
    gamma: [1, 1, 1],

    /**
     * Describe the property that is the filter parameter
     * @param {String} m
     * @default
     */
    mainParameter: 'gamma',

    /**
     * Constructor
     * @param {Object} [options] Options object
     */
    initialize: function(options) {
      this.gamma = [1, 1, 1];
      filters.BaseFilter.prototype.initialize.call(this, options);
    },

    /**
     * Apply the Gamma operation to a Uint8Array representing the pixels of an image.
     *
     * @param {Object} options
     * @param {ImageData} options.imageData The Uint8Array to be filtered.
     */
    applyTo2d: function(options) {
      var imageData = options.imageData, data = imageData.data,
          gamma = this.gamma, len = data.length,
          rInv = 1 / gamma[0], gInv = 1 / gamma[1],
          bInv = 1 / gamma[2], i;

      if (!this.rVals) {
        // eslint-disable-next-line
        this.rVals = new Uint8Array(256);
        // eslint-disable-next-line
        this.gVals = new Uint8Array(256);
        // eslint-disable-next-line
        this.bVals = new Uint8Array(256);
      }

      // This is an optimization - pre-compute a look-up table for each color channel
      // instead of performing these pow calls for each pixel in the image.
      for (i = 0, len = 256; i < len; i++) {
        this.rVals[i] = Math.pow(i / 255, rInv) * 255;
        this.gVals[i] = Math.pow(i / 255, gInv) * 255;
        this.bVals[i] = Math.pow(i / 255, bInv) * 255;
      }
      for (i = 0, len = data.length; i < len; i += 4) {
        data[i] = this.rVals[data[i]];
        data[i + 1] = this.gVals[data[i + 1]];
        data[i + 2] = this.bVals[data[i + 2]];
      }
    },

    /**
     * Return WebGL uniform locations for this filter's shader.
     *
     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
     * @param {WebGLShaderProgram} program This filter's compiled shader program.
     */
    getUniformLocations: function(gl, program) {
      return {
        uGamma: gl.getUniformLocation(program, 'uGamma'),
      };
    },

    /**
     * Send data from this filter to its shader program's uniforms.
     *
     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.
     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects
     */
    sendUniformData: function(gl, uniformLocations) {
      gl.uniform3fv(uniformLocations.uGamma, this.gamma);
    },
  });

  /**
   * Returns filter instance from an object representation
   * @static
   * @param {Object} object Object to create an instance from
   * @param {function} [callback] to be invoked after filter creation
   * @return {fabric.Image.filters.Gamma} Instance of fabric.Image.filters.Gamma
   */
  fabric.Image.filters.Gamma.fromObject = fabric.Image.filters.BaseFilter.fromObject;

})( true ? exports : undefined);


(function(global) {

  'use strict';

  var fabric  = global.fabric || (global.fabric = { }),
      filters = fabric.Image.filters,
      createClass = fabric.util.createClass;

  /**
   * A container class that knows how to apply a sequence of filters to an input image.
   */
  filters.Composed = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Composed.prototype */ {

    type: 'Composed',

    /**
     * A non sparse array of filters to apply
     */
    subFilters: [],

    /**
     * Constructor
     * @param {Object} [options] Options object
     */
    initialize: function(options) {
      this.callSuper('initialize', options);
      // create a new array instead mutating the prototype with push
      this.subFilters = this.subFilters.slice(0);
    },

    /**
     * Apply this container's filters to the input image provided.
     *
     * @param {Object} options
     * @param {Number} options.passes The number of filters remaining to be applied.
     */
    applyTo: function(options) {
      options.passes += this.subFilters.length - 1;
      this.subFilters.forEach(function(filter) {
        filter.applyTo(options);
      });
    },

    /**
     * Serialize this filter into JSON.
     *
     * @returns {Object} A JSON representation of this filter.
     */
    toObject: function() {
      return fabric.util.object.extend(this.callSuper('toObject'), {
        subFilters: this.subFilters.map(function(filter) { return filter.toObject(); }),
      });
    },

    isNeutralState: function() {
      return !this.subFilters.some(function(filter) { return !filter.isNeutralState(); });
    }
  });

  /**
   * Deserialize a JSON definition of a ComposedFilter into a concrete instance.
   */
  fabric.Image.filters.Composed.fromObject = function(object, callback) {
    var filters = object.subFilters || [],
        subFilters = filters.map(function(filter) {
          return new fabric.Image.filters[filter.type](filter);
        }),
        instance = new fabric.Image.filters.Composed({ subFilters: subFilters });
    callback && callback(instance);
    return instance;
  };
})( true ? exports : undefined);


(function(global) {

  'use strict';

  var fabric  = global.fabric || (global.fabric = { }),
      filters = fabric.Image.filters,
      createClass = fabric.util.createClass;

  /**
   * HueRotation filter class
   * @class fabric.Image.filters.HueRotation
   * @memberOf fabric.Image.filters
   * @extends fabric.Image.filters.BaseFilter
   * @see {@link fabric.Image.filters.HueRotation#initialize} for constructor definition
   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}
   * @example
   * var filter = new fabric.Image.filters.HueRotation({
   *   rotation: -0.5
   * });
   * object.filters.push(filter);
   * object.applyFilters();
   */
  filters.HueRotation = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.HueRotation.prototype */ {

    /**
     * Filter type
     * @param {String} type
     * @default
     */
    type: 'HueRotation',

    /**
     * HueRotation value, from -1 to 1.
     * the unit is radians
     * @param {Number} myParameter
     * @default
     */
    rotation: 0,

    /**
     * Describe the property that is the filter parameter
     * @param {String} m
     * @default
     */
    mainParameter: 'rotation',

    calculateMatrix: function() {
      var rad = this.rotation * Math.PI, cos = fabric.util.cos(rad), sin = fabric.util.sin(rad),
          aThird = 1 / 3, aThirdSqtSin = Math.sqrt(aThird) * sin, OneMinusCos = 1 - cos;
      this.matrix = [
        1, 0, 0, 0, 0,
        0, 1, 0, 0, 0,
        0, 0, 1, 0, 0,
        0, 0, 0, 1, 0
      ];
      this.matrix[0] = cos + OneMinusCos / 3;
      this.matrix[1] = aThird * OneMinusCos - aThirdSqtSin;
      this.matrix[2] = aThird * OneMinusCos + aThirdSqtSin;
      this.matrix[5] = aThird * OneMinusCos + aThirdSqtSin;
      this.matrix[6] = cos + aThird * OneMinusCos;
      this.matrix[7] = aThird * OneMinusCos - aThirdSqtSin;
      this.matrix[10] = aThird * OneMinusCos - aThirdSqtSin;
      this.matrix[11] = aThird * OneMinusCos + aThirdSqtSin;
      this.matrix[12] = cos + aThird * OneMinusCos;
    },

    /**
     * HueRotation isNeutralState implementation
     * Used only in image applyFilters to discard filters that will not have an effect
     * on the image
     * @param {Object} options
     **/
    isNeutralState: function(options) {
      this.calculateMatrix();
      return filters.BaseFilter.prototype.isNeutralState.call(this, options);
    },

    /**
     * Apply this filter to the input image data provided.
     *
     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.
     *
     * @param {Object} options
     * @param {Number} options.passes The number of filters remaining to be executed
     * @param {Boolean} options.webgl Whether to use webgl to render the filter.
     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.
     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.
     * @param {WebGLRenderingContext} options.context The GL context used for rendering.
     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.
     */
    applyTo: function(options) {
      this.calculateMatrix();
      filters.BaseFilter.prototype.applyTo.call(this, options);
    },

  });

  /**
   * Returns filter instance from an object representation
   * @static
   * @param {Object} object Object to create an instance from
   * @param {function} [callback] to be invoked after filter creation
   * @return {fabric.Image.filters.HueRotation} Instance of fabric.Image.filters.HueRotation
   */
  fabric.Image.filters.HueRotation.fromObject = fabric.Image.filters.BaseFilter.fromObject;

})( true ? exports : undefined);


(function(global) {

  'use strict';

  var fabric = global.fabric || (global.fabric = { }),
      clone = fabric.util.object.clone;

  if (fabric.Text) {
    fabric.warn('fabric.Text is already defined');
    return;
  }

  /**
   * Text class
   * @class fabric.Text
   * @extends fabric.Object
   * @return {fabric.Text} thisArg
   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}
   * @see {@link fabric.Text#initialize} for constructor definition
   */
  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {

    /**
     * Properties which when set cause object to change dimensions
     * @type Array
     * @private
     */
    _dimensionAffectingProps: [
      'fontSize',
      'fontWeight',
      'fontFamily',
      'fontStyle',
      'lineHeight',
      'text',
      'charSpacing',
      'textAlign',
      'styles',
    ],

    /**
     * @private
     */
    _reNewline: /\r?\n/,

    /**
     * Use this regular expression to filter for whitespaces that is not a new line.
     * Mostly used when text is 'justify' aligned.
     * @private
     */
    _reSpacesAndTabs: /[ \t\r]/g,

    /**
     * Use this regular expression to filter for whitespace that is not a new line.
     * Mostly used when text is 'justify' aligned.
     * @private
     */
    _reSpaceAndTab: /[ \t\r]/,

    /**
     * Use this regular expression to filter consecutive groups of non spaces.
     * Mostly used when text is 'justify' aligned.
     * @private
     */
    _reWords: /\S+/g,

    /**
     * Type of an object
     * @type String
     * @default
     */
    type:                 'text',

    /**
     * Font size (in pixels)
     * @type Number
     * @default
     */
    fontSize:             40,

    /**
     * Font weight (e.g. bold, normal, 400, 600, 800)
     * @type {(Number|String)}
     * @default
     */
    fontWeight:           'normal',

    /**
     * Font family
     * @type String
     * @default
     */
    fontFamily:           'Times New Roman',

    /**
     * Text decoration underline.
     * @type Boolean
     * @default
     */
    underline:       false,

    /**
     * Text decoration overline.
     * @type Boolean
     * @default
     */
    overline:       false,

    /**
     * Text decoration linethrough.
     * @type Boolean
     * @default
     */
    linethrough:       false,

    /**
     * Text alignment. Possible values: "left", "center", "right", "justify",
     * "justify-left", "justify-center" or "justify-right".
     * @type String
     * @default
     */
    textAlign:            'left',

    /**
     * Font style . Possible values: "", "normal", "italic" or "oblique".
     * @type String
     * @default
     */
    fontStyle:            'normal',

    /**
     * Line height
     * @type Number
     * @default
     */
    lineHeight:           1.16,

    /**
     * Superscript schema object (minimum overlap)
     * @type {Object}
     * @default
     */
    superscript: {
      size:      0.60, // fontSize factor
      baseline: -0.35  // baseline-shift factor (upwards)
    },

    /**
     * Subscript schema object (minimum overlap)
     * @type {Object}
     * @default
     */
    subscript: {
      size:      0.60, // fontSize factor
      baseline:  0.11  // baseline-shift factor (downwards)
    },

    /**
     * Background color of text lines
     * @type String
     * @default
     */
    textBackgroundColor:  '',

    /**
     * List of properties to consider when checking if
     * state of an object is changed ({@link fabric.Object#hasStateChanged})
     * as well as for history (undo/redo) purposes
     * @type Array
     */
    stateProperties: fabric.Object.prototype.stateProperties.concat('fontFamily',
      'fontWeight',
      'fontSize',
      'text',
      'underline',
      'overline',
      'linethrough',
      'textAlign',
      'fontStyle',
      'lineHeight',
      'textBackgroundColor',
      'charSpacing',
      'styles'),

    /**
     * List of properties to consider when checking if cache needs refresh
     * @type Array
     */
    cacheProperties: fabric.Object.prototype.cacheProperties.concat('fontFamily',
      'fontWeight',
      'fontSize',
      'text',
      'underline',
      'overline',
      'linethrough',
      'textAlign',
      'fontStyle',
      'lineHeight',
      'textBackgroundColor',
      'charSpacing',
      'styles'),

    /**
     * When defined, an object is rendered via stroke and this property specifies its color.
     * <b>Backwards incompatibility note:</b> This property was named "strokeStyle" until v1.1.6
     * @type String
     * @default
     */
    stroke:               null,

    /**
     * Shadow object representing shadow of this shape.
     * <b>Backwards incompatibility note:</b> This property was named "textShadow" (String) until v1.2.11
     * @type fabric.Shadow
     * @default
     */
    shadow:               null,

    /**
     * @private
     */
    _fontSizeFraction: 0.222,

    /**
     * @private
     */
    offsets: {
      underline: 0.10,
      linethrough: -0.315,
      overline: -0.88
    },

    /**
     * Text Line proportion to font Size (in pixels)
     * @type Number
     * @default
     */
    _fontSizeMult:             1.13,

    /**
     * additional space between characters
     * expressed in thousands of em unit
     * @type Number
     * @default
     */
    charSpacing:             0,

    /**
     * Object containing character styles - top-level properties -> line numbers,
     * 2nd-level properties - charater numbers
     * @type Object
     * @default
     */
    styles: null,

    /**
     * Reference to a context to measure text char or couple of chars
     * the cacheContext of the canvas will be used or a freshly created one if the object is not on canvas
     * once created it will be referenced on fabric._measuringContext to avoide creating a canvas for every
     * text object created.
     * @type {CanvasRenderingContext2D}
     * @default
     */
    _measuringContext: null,

    /**
     * Baseline shift, stlyes only, keep at 0 for the main text object
     * @type {Number}
     * @default
     */
    deltaY: 0,

    /**
     * Array of properties that define a style unit (of 'styles').
     * @type {Array}
     * @default
     */
    _styleProperties: [
      'stroke',
      'strokeWidth',
      'fill',
      'fontFamily',
      'fontSize',
      'fontWeight',
      'fontStyle',
      'underline',
      'overline',
      'linethrough',
      'deltaY',
      'textBackgroundColor',
    ],

    /**
     * contains characters bounding boxes
     */
    __charBounds: [],

    /**
     * use this size when measuring text. To avoid IE11 rounding errors
     * @type {Number}
     * @default
     * @readonly
     * @private
     */
    CACHE_FONT_SIZE: 400,

    /**
     * contains the min text width to avoid getting 0
     * @type {Number}
     * @default
     */
    MIN_TEXT_WIDTH: 2,

    /**
     * Constructor
     * @param {String} text Text string
     * @param {Object} [options] Options object
     * @return {fabric.Text} thisArg
     */
    initialize: function(text, options) {
      this.styles = options ? (options.styles || { }) : { };
      this.text = text;
      this.__skipDimension = true;
      this.callSuper('initialize', options);
      this.__skipDimension = false;
      this.initDimensions();
      this.setCoords();
      this.setupState({ propertySet: '_dimensionAffectingProps' });
    },

    /**
     * Return a contex for measurement of text string.
     * if created it gets stored for reuse
     * @param {String} text Text string
     * @param {Object} [options] Options object
     * @return {fabric.Text} thisArg
     */
    getMeasuringContext: function() {
      // if we did not return we have to measure something.
      if (!fabric._measuringContext) {
        fabric._measuringContext = this.canvas && this.canvas.contextCache ||
          fabric.util.createCanvasElement().getContext('2d');
      }
      return fabric._measuringContext;
    },

    /**
     * @private
     * Divides text into lines of text and lines of graphemes.
     */
    _splitText: function() {
      var newLines = this._splitTextIntoLines(this.text);
      this.textLines = newLines.lines;
      this._textLines = newLines.graphemeLines;
      this._unwrappedTextLines = newLines._unwrappedLines;
      this._text = newLines.graphemeText;
      return newLines;
    },

    /**
     * Initialize or update text dimensions.
     * Updates this.width and this.height with the proper values.
     * Does not return dimensions.
     */
    initDimensions: function() {
      if (this.__skipDimension) {
        return;
      }
      this._splitText();
      this._clearCache();
      this.width = this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH;
      if (this.textAlign.indexOf('justify') !== -1) {
        // once text is measured we need to make space fatter to make justified text.
        this.enlargeSpaces();
      }
      this.height = this.calcTextHeight();
      this.saveState({ propertySet: '_dimensionAffectingProps' });
    },

    /**
     * Enlarge space boxes and shift the others
     */
    enlargeSpaces: function() {
      var diffSpace, currentLineWidth, numberOfSpaces, accumulatedSpace, line, charBound, spaces;
      for (var i = 0, len = this._textLines.length; i < len; i++) {
        if (this.textAlign !== 'justify' && (i === len - 1 || this.isEndOfWrapping(i))) {
          continue;
        }
        accumulatedSpace = 0;
        line = this._textLines[i];
        currentLineWidth = this.getLineWidth(i);
        if (currentLineWidth < this.width && (spaces = this.textLines[i].match(this._reSpacesAndTabs))) {
          numberOfSpaces = spaces.length;
          diffSpace = (this.width - currentLineWidth) / numberOfSpaces;
          for (var j = 0, jlen = line.length; j <= jlen; j++) {
            charBound = this.__charBounds[i][j];
            if (this._reSpaceAndTab.test(line[j])) {
              charBound.width += diffSpace;
              charBound.kernedWidth += diffSpace;
              charBound.left += accumulatedSpace;
              accumulatedSpace += diffSpace;
            }
            else {
              charBound.left += accumulatedSpace;
            }
          }
        }
      }
    },

    /**
     * Detect if the text line is ended with an hard break
     * text and itext do not have wrapping, return false
     * @return {Boolean}
     */
    isEndOfWrapping: function(lineIndex) {
      return lineIndex === this._textLines.length - 1;
    },

    /**
     * Returns string representation of an instance
     * @return {String} String representation of text object
     */
    toString: function() {
      return '#<fabric.Text (' + this.complexity() +
        '): { "text": "' + this.text + '", "fontFamily": "' + this.fontFamily + '" }>';
    },

    /**
     * Return the dimension and the zoom level needed to create a cache canvas
     * big enough to host the object to be cached.
     * @private
     * @param {Object} dim.x width of object to be cached
     * @param {Object} dim.y height of object to be cached
     * @return {Object}.width width of canvas
     * @return {Object}.height height of canvas
     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache
     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache
     */
    _getCacheCanvasDimensions: function() {
      var dims = this.callSuper('_getCacheCanvasDimensions');
      var fontSize = this.fontSize;
      dims.width += fontSize * dims.zoomX;
      dims.height += fontSize * dims.zoomY;
      return dims;
    },

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    _render: function(ctx) {
      this._setTextStyles(ctx);
      this._renderTextLinesBackground(ctx);
      this._renderTextDecoration(ctx, 'underline');
      this._renderText(ctx);
      this._renderTextDecoration(ctx, 'overline');
      this._renderTextDecoration(ctx, 'linethrough');
    },

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    _renderText: function(ctx) {
      if (this.paintFirst === 'stroke') {
        this._renderTextStroke(ctx);
        this._renderTextFill(ctx);
      }
      else {
        this._renderTextFill(ctx);
        this._renderTextStroke(ctx);
      }
    },

    /**
     * Set the font parameter of the context with the object properties or with charStyle
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     * @param {Object} [charStyle] object with font style properties
     * @param {String} [charStyle.fontFamily] Font Family
     * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )
     * @param {String} [charStyle.fontWeight] Font weight
     * @param {String} [charStyle.fontStyle] Font style (italic|normal)
     */
    _setTextStyles: function(ctx, charStyle, forMeasuring) {
      ctx.textBaseline = 'alphabetic';
      ctx.font = this._getFontDeclaration(charStyle, forMeasuring);
    },

    /**
     * calculate and return the text Width measuring each line.
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     * @return {Number} Maximum width of fabric.Text object
     */
    calcTextWidth: function() {
      var maxWidth = this.getLineWidth(0);

      for (var i = 1, len = this._textLines.length; i < len; i++) {
        var currentLineWidth = this.getLineWidth(i);
        if (currentLineWidth > maxWidth) {
          maxWidth = currentLineWidth;
        }
      }
      return maxWidth;
    },

    /**
     * @private
     * @param {String} method Method name ("fillText" or "strokeText")
     * @param {CanvasRenderingContext2D} ctx Context to render on
     * @param {String} line Text to render
     * @param {Number} left Left position of text
     * @param {Number} top Top position of text
     * @param {Number} lineIndex Index of a line in a text
     */
    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {
      this._renderChars(method, ctx, line, left, top, lineIndex);
    },

    /**
     * Renders the text background for lines, taking care of style
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    _renderTextLinesBackground: function(ctx) {
      if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {
        return;
      }
      var lineTopOffset = 0, heightOfLine,
          lineLeftOffset, originalFill = ctx.fillStyle,
          line, lastColor,
          leftOffset = this._getLeftOffset(),
          topOffset = this._getTopOffset(),
          boxStart = 0, boxWidth = 0, charBox, currentColor;

      for (var i = 0, len = this._textLines.length; i < len; i++) {
        heightOfLine = this.getHeightOfLine(i);
        if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor', i)) {
          lineTopOffset += heightOfLine;
          continue;
        }
        line = this._textLines[i];
        lineLeftOffset = this._getLineLeftOffset(i);
        boxWidth = 0;
        boxStart = 0;
        lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');
        for (var j = 0, jlen = line.length; j < jlen; j++) {
          charBox = this.__charBounds[i][j];
          currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');
          if (currentColor !== lastColor) {
            ctx.fillStyle = lastColor;
            lastColor && ctx.fillRect(
              leftOffset + lineLeftOffset + boxStart,
              topOffset + lineTopOffset,
              boxWidth,
              heightOfLine / this.lineHeight
            );
            boxStart = charBox.left;
            boxWidth = charBox.width;
            lastColor = currentColor;
          }
          else {
            boxWidth += charBox.kernedWidth;
          }
        }
        if (currentColor) {
          ctx.fillStyle = currentColor;
          ctx.fillRect(
            leftOffset + lineLeftOffset + boxStart,
            topOffset + lineTopOffset,
            boxWidth,
            heightOfLine / this.lineHeight
          );
        }
        lineTopOffset += heightOfLine;
      }
      ctx.fillStyle = originalFill;
      // if there is text background color no
      // other shadows should be casted
      this._removeShadow(ctx);
    },

    /**
     * @private
     * @param {Object} decl style declaration for cache
     * @param {String} decl.fontFamily fontFamily
     * @param {String} decl.fontStyle fontStyle
     * @param {String} decl.fontWeight fontWeight
     * @return {Object} reference to cache
     */
    getFontCache: function(decl) {
      var fontFamily = decl.fontFamily.toLowerCase();
      if (!fabric.charWidthsCache[fontFamily]) {
        fabric.charWidthsCache[fontFamily] = { };
      }
      var cache = fabric.charWidthsCache[fontFamily],
          cacheProp = decl.fontStyle.toLowerCase() + '_' + (decl.fontWeight + '').toLowerCase();
      if (!cache[cacheProp]) {
        cache[cacheProp] = { };
      }
      return cache[cacheProp];
    },

    /**
     * apply all the character style to canvas for rendering
     * @private
     * @param {String} _char
     * @param {Number} lineIndex
     * @param {Number} charIndex
     * @param {Object} [decl]
     */
    _applyCharStyles: function(method, ctx, lineIndex, charIndex, styleDeclaration) {

      this._setFillStyles(ctx, styleDeclaration);
      this._setStrokeStyles(ctx, styleDeclaration);

      ctx.font = this._getFontDeclaration(styleDeclaration);
    },

    /**
     * measure and return the width of a single character.
     * possibly overridden to accommodate different measure logic or
     * to hook some external lib for character measurement
     * @private
     * @param {String} char to be measured
     * @param {Object} charStyle style of char to be measured
     * @param {String} [previousChar] previous char
     * @param {Object} [prevCharStyle] style of previous char
     */
    _measureChar: function(_char, charStyle, previousChar, prevCharStyle) {
      // first i try to return from cache
      var fontCache = this.getFontCache(charStyle), fontDeclaration = this._getFontDeclaration(charStyle),
          previousFontDeclaration = this._getFontDeclaration(prevCharStyle), couple = previousChar + _char,
          stylesAreEqual = fontDeclaration === previousFontDeclaration, width, coupleWidth, previousWidth,
          fontMultiplier = charStyle.fontSize / this.CACHE_FONT_SIZE, kernedWidth;

      if (previousChar && fontCache[previousChar] !== undefined) {
        previousWidth = fontCache[previousChar];
      }
      if (fontCache[_char] !== undefined) {
        kernedWidth = width = fontCache[_char];
      }
      if (stylesAreEqual && fontCache[couple] !== undefined) {
        coupleWidth = fontCache[couple];
        kernedWidth = coupleWidth - previousWidth;
      }
      if (width === undefined || previousWidth === undefined || coupleWidth === undefined) {
        var ctx = this.getMeasuringContext();
        // send a TRUE to specify measuring font size CACHE_FONT_SIZE
        this._setTextStyles(ctx, charStyle, true);
      }
      if (width === undefined) {
        kernedWidth = width = ctx.measureText(_char).width;
        fontCache[_char] = width;
      }
      if (previousWidth === undefined && stylesAreEqual && previousChar) {
        previousWidth = ctx.measureText(previousChar).width;
        fontCache[previousChar] = previousWidth;
      }
      if (stylesAreEqual && coupleWidth === undefined) {
        // we can measure the kerning couple and subtract the width of the previous character
        coupleWidth = ctx.measureText(couple).width;
        fontCache[couple] = coupleWidth;
        kernedWidth = coupleWidth - previousWidth;
      }
      return { width: width * fontMultiplier, kernedWidth: kernedWidth * fontMultiplier };
    },

    /**
     * Computes height of character at given position
     * @param {Number} line the line number
     * @param {Number} char the character number
     * @return {Number} fontSize of the character
     */
    getHeightOfChar: function(line, char) {
      return this.getValueOfPropertyAt(line, char, 'fontSize');
    },

    /**
     * measure a text line measuring all characters.
     * @param {Number} lineIndex line number
     * @return {Number} Line width
     */
    measureLine: function(lineIndex) {
      var lineInfo = this._measureLine(lineIndex);
      if (this.charSpacing !== 0) {
        lineInfo.width -= this._getWidthOfCharSpacing();
      }
      if (lineInfo.width < 0) {
        lineInfo.width = 0;
      }
      return lineInfo;
    },

    /**
     * measure every grapheme of a line, populating __charBounds
     * @param {Number} lineIndex
     * @return {Object} object.width total width of characters
     * @return {Object} object.widthOfSpaces length of chars that match this._reSpacesAndTabs
     */
    _measureLine: function(lineIndex) {
      var width = 0, i, grapheme, line = this._textLines[lineIndex], prevGrapheme,
          graphemeInfo, numOfSpaces = 0, lineBounds = new Array(line.length);

      this.__charBounds[lineIndex] = lineBounds;
      for (i = 0; i < line.length; i++) {
        grapheme = line[i];
        graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);
        lineBounds[i] = graphemeInfo;
        width += graphemeInfo.kernedWidth;
        prevGrapheme = grapheme;
      }
      // this latest bound box represent the last character of the line
      // to simplify cursor handling in interactive mode.
      lineBounds[i] = {
        left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,
        width: 0,
        kernedWidth: 0,
        height: this.fontSize
      };
      return { width: width, numOfSpaces: numOfSpaces };
    },

    /**
     * Measure and return the info of a single grapheme.
     * needs the the info of previous graphemes already filled
     * @private
     * @param {String} grapheme to be measured
     * @param {Number} lineIndex index of the line where the char is
     * @param {Number} charIndex position in the line
     * @param {String} [prevGrapheme] character preceding the one to be measured
     */
    _getGraphemeBox: function(grapheme, lineIndex, charIndex, prevGrapheme, skipLeft) {
      var style = this.getCompleteStyleDeclaration(lineIndex, charIndex),
          prevStyle = prevGrapheme ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1) : { },
          info = this._measureChar(grapheme, style, prevGrapheme, prevStyle),
          kernedWidth = info.kernedWidth,
          width = info.width, charSpacing;

      if (this.charSpacing !== 0) {
        charSpacing = this._getWidthOfCharSpacing();
        width += charSpacing;
        kernedWidth += charSpacing;
      }

      var box = {
        width: width,
        left: 0,
        height: style.fontSize,
        kernedWidth: kernedWidth,
        deltaY: style.deltaY,
      };
      if (charIndex > 0 && !skipLeft) {
        var previousBox = this.__charBounds[lineIndex][charIndex - 1];
        box.left = previousBox.left + previousBox.width + info.kernedWidth - info.width;
      }
      return box;
    },

    /**
     * Calculate height of line at 'lineIndex'
     * @param {Number} lineIndex index of line to calculate
     * @return {Number}
     */
    getHeightOfLine: function(lineIndex) {
      if (this.__lineHeights[lineIndex]) {
        return this.__lineHeights[lineIndex];
      }

      var line = this._textLines[lineIndex],
          // char 0 is measured before the line cycle because it nneds to char
          // emptylines
          maxHeight = this.getHeightOfChar(lineIndex, 0);
      for (var i = 1, len = line.length; i < len; i++) {
        maxHeight = Math.max(this.getHeightOfChar(lineIndex, i), maxHeight);
      }

      return this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;
    },

    /**
     * Calculate text box height
     */
    calcTextHeight: function() {
      var lineHeight, height = 0;
      for (var i = 0, len = this._textLines.length; i < len; i++) {
        lineHeight = this.getHeightOfLine(i);
        height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);
      }
      return height;
    },

    /**
     * @private
     * @return {Number} Left offset
     */
    _getLeftOffset: function() {
      return -this.width / 2;
    },

    /**
     * @private
     * @return {Number} Top offset
     */
    _getTopOffset: function() {
      return -this.height / 2;
    },

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     * @param {String} method Method name ("fillText" or "strokeText")
     */
    _renderTextCommon: function(ctx, method) {
      ctx.save();
      var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset(),
          offsets = this._applyPatternGradientTransform(ctx, method === 'fillText' ? this.fill : this.stroke);
      for (var i = 0, len = this._textLines.length; i < len; i++) {
        var heightOfLine = this.getHeightOfLine(i),
            maxHeight = heightOfLine / this.lineHeight,
            leftOffset = this._getLineLeftOffset(i);
        this._renderTextLine(
          method,
          ctx,
          this._textLines[i],
          left + leftOffset - offsets.offsetX,
          top + lineHeights + maxHeight - offsets.offsetY,
          i
        );
        lineHeights += heightOfLine;
      }
      ctx.restore();
    },

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    _renderTextFill: function(ctx) {
      if (!this.fill && !this.styleHas('fill')) {
        return;
      }

      this._renderTextCommon(ctx, 'fillText');
    },

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    _renderTextStroke: function(ctx) {
      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {
        return;
      }

      if (this.shadow && !this.shadow.affectStroke) {
        this._removeShadow(ctx);
      }

      ctx.save();
      this._setLineDash(ctx, this.strokeDashArray);
      ctx.beginPath();
      this._renderTextCommon(ctx, 'strokeText');
      ctx.closePath();
      ctx.restore();
    },

    /**
     * @private
     * @param {String} method
     * @param {CanvasRenderingContext2D} ctx Context to render on
     * @param {String} line Content of the line
     * @param {Number} left
     * @param {Number} top
     * @param {Number} lineIndex
     * @param {Number} charOffset
     */
    _renderChars: function(method, ctx, line, left, top, lineIndex) {
      // set proper line offset
      var lineHeight = this.getHeightOfLine(lineIndex),
          isJustify = this.textAlign.indexOf('justify') !== -1,
          actualStyle,
          nextStyle,
          charsToRender = '',
          charBox,
          boxWidth = 0,
          timeToRender,
          shortCut = !isJustify && this.charSpacing === 0 && this.isEmptyStyles(lineIndex);

      ctx.save();
      top -= lineHeight * this._fontSizeFraction / this.lineHeight;
      if (shortCut) {
        // render all the line in one pass without checking
        this._renderChar(method, ctx, lineIndex, 0, this.textLines[lineIndex], left, top, lineHeight);
        ctx.restore();
        return;
      }
      for (var i = 0, len = line.length - 1; i <= len; i++) {
        timeToRender = i === len || this.charSpacing;
        charsToRender += line[i];
        charBox = this.__charBounds[lineIndex][i];
        if (boxWidth === 0) {
          left += charBox.kernedWidth - charBox.width;
          boxWidth += charBox.width;
        }
        else {
          boxWidth += charBox.kernedWidth;
        }
        if (isJustify && !timeToRender) {
          if (this._reSpaceAndTab.test(line[i])) {
            timeToRender = true;
          }
        }
        if (!timeToRender) {
          // if we have charSpacing, we render char by char
          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);
          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);
          timeToRender = this._hasStyleChanged(actualStyle, nextStyle);
        }
        if (timeToRender) {
          this._renderChar(method, ctx, lineIndex, i, charsToRender, left, top, lineHeight);
          charsToRender = '';
          actualStyle = nextStyle;
          left += boxWidth;
          boxWidth = 0;
        }
      }
      ctx.restore();
    },

    /**
     * @private
     * @param {String} method
     * @param {CanvasRenderingContext2D} ctx Context to render on
     * @param {Number} lineIndex
     * @param {Number} charIndex
     * @param {String} _char
     * @param {Number} left Left coordinate
     * @param {Number} top Top coordinate
     * @param {Number} lineHeight Height of the line
     */
    _renderChar: function(method, ctx, lineIndex, charIndex, _char, left, top) {
      var decl = this._getStyleDeclaration(lineIndex, charIndex),
          fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),
          shouldFill = method === 'fillText' && fullDecl.fill,
          shouldStroke = method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth;

      if (!shouldStroke && !shouldFill) {
        return;
      }
      decl && ctx.save();

      this._applyCharStyles(method, ctx, lineIndex, charIndex, fullDecl);

      if (decl && decl.textBackgroundColor) {
        this._removeShadow(ctx);
      }
      if (decl && decl.deltaY) {
        top += decl.deltaY;
      }

      shouldFill && ctx.fillText(_char, left, top);
      shouldStroke && ctx.strokeText(_char, left, top);
      decl && ctx.restore();
    },

    /**
     * Turns the character into a 'superior figure' (i.e. 'superscript')
     * @param {Number} start selection start
     * @param {Number} end selection end
     * @returns {fabric.Text} thisArg
     * @chainable
     */
    setSuperscript: function(start, end) {
      return this._setScript(start, end, this.superscript);
    },

    /**
     * Turns the character into an 'inferior figure' (i.e. 'subscript')
     * @param {Number} start selection start
     * @param {Number} end selection end
     * @returns {fabric.Text} thisArg
     * @chainable
     */
    setSubscript: function(start, end) {
      return this._setScript(start, end, this.subscript);
    },

    /**
     * Applies 'schema' at given position
     * @private
     * @param {Number} start selection start
     * @param {Number} end selection end
     * @param {Number} schema
     * @returns {fabric.Text} thisArg
     * @chainable
     */
    _setScript: function(start, end, schema) {
      var loc = this.get2DCursorLocation(start, true),
          fontSize = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'fontSize'),
          dy = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'deltaY'),
          style = { fontSize: fontSize * schema.size, deltaY: dy + fontSize * schema.baseline };
      this.setSelectionStyles(style, start, end);
      return this;
    },

    /**
     * @private
     * @param {Object} prevStyle
     * @param {Object} thisStyle
     */
    _hasStyleChanged: function(prevStyle, thisStyle) {
      return prevStyle.fill !== thisStyle.fill ||
              prevStyle.stroke !== thisStyle.stroke ||
              prevStyle.strokeWidth !== thisStyle.strokeWidth ||
              prevStyle.fontSize !== thisStyle.fontSize ||
              prevStyle.fontFamily !== thisStyle.fontFamily ||
              prevStyle.fontWeight !== thisStyle.fontWeight ||
              prevStyle.fontStyle !== thisStyle.fontStyle ||
              prevStyle.deltaY !== thisStyle.deltaY;
    },

    /**
     * @private
     * @param {Object} prevStyle
     * @param {Object} thisStyle
     */
    _hasStyleChangedForSvg: function(prevStyle, thisStyle) {
      return this._hasStyleChanged(prevStyle, thisStyle) ||
        prevStyle.overline !== thisStyle.overline ||
        prevStyle.underline !== thisStyle.underline ||
        prevStyle.linethrough !== thisStyle.linethrough;
    },

    /**
     * @private
     * @param {Number} lineIndex index text line
     * @return {Number} Line left offset
     */
    _getLineLeftOffset: function(lineIndex) {
      var lineWidth = this.getLineWidth(lineIndex);
      if (this.textAlign === 'center') {
        return (this.width - lineWidth) / 2;
      }
      if (this.textAlign === 'right') {
        return this.width - lineWidth;
      }
      if (this.textAlign === 'justify-center' && this.isEndOfWrapping(lineIndex)) {
        return (this.width - lineWidth) / 2;
      }
      if (this.textAlign === 'justify-right' && this.isEndOfWrapping(lineIndex)) {
        return this.width - lineWidth;
      }
      return 0;
    },

    /**
     * @private
     */
    _clearCache: function() {
      this.__lineWidths = [];
      this.__lineHeights = [];
      this.__charBounds = [];
    },

    /**
     * @private
     */
    _shouldClearDimensionCache: function() {
      var shouldClear = this._forceClearCache;
      shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));
      if (shouldClear) {
        this.dirty = true;
        this._forceClearCache = false;
      }
      return shouldClear;
    },

    /**
     * Measure a single line given its index. Used to calculate the initial
     * text bounding box. The values are calculated and stored in __lineWidths cache.
     * @private
     * @param {Number} lineIndex line number
     * @return {Number} Line width
     */
    getLineWidth: function(lineIndex) {
      if (this.__lineWidths[lineIndex]) {
        return this.__lineWidths[lineIndex];
      }

      var width, line = this._textLines[lineIndex], lineInfo;

      if (line === '') {
        width = 0;
      }
      else {
        lineInfo = this.measureLine(lineIndex);
        width = lineInfo.width;
      }
      this.__lineWidths[lineIndex] = width;
      return width;
    },

    _getWidthOfCharSpacing: function() {
      if (this.charSpacing !== 0) {
        return this.fontSize * this.charSpacing / 1000;
      }
      return 0;
    },

    /**
     * Retrieves the value of property at given character position
     * @param {Number} lineIndex the line number
     * @param {Number} charIndex the charater number
     * @param {String} property the property name
     * @returns the value of 'property'
     */
    getValueOfPropertyAt: function(lineIndex, charIndex, property) {
      var charStyle = this._getStyleDeclaration(lineIndex, charIndex);
      if (charStyle && typeof charStyle[property] !== 'undefined') {
        return charStyle[property];
      }
      return this[property];
    },

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    _renderTextDecoration: function(ctx, type) {
      if (!this[type] && !this.styleHas(type)) {
        return;
      }
      var heightOfLine, size, _size,
          lineLeftOffset, dy, _dy,
          line, lastDecoration,
          leftOffset = this._getLeftOffset(),
          topOffset = this._getTopOffset(), top,
          boxStart, boxWidth, charBox, currentDecoration,
          maxHeight, currentFill, lastFill,
          charSpacing = this._getWidthOfCharSpacing();

      for (var i = 0, len = this._textLines.length; i < len; i++) {
        heightOfLine = this.getHeightOfLine(i);
        if (!this[type] && !this.styleHas(type, i)) {
          topOffset += heightOfLine;
          continue;
        }
        line = this._textLines[i];
        maxHeight = heightOfLine / this.lineHeight;
        lineLeftOffset = this._getLineLeftOffset(i);
        boxStart = 0;
        boxWidth = 0;
        lastDecoration = this.getValueOfPropertyAt(i, 0, type);
        lastFill = this.getValueOfPropertyAt(i, 0, 'fill');
        top = topOffset + maxHeight * (1 - this._fontSizeFraction);
        size = this.getHeightOfChar(i, 0);
        dy = this.getValueOfPropertyAt(i, 0, 'deltaY');
        for (var j = 0, jlen = line.length; j < jlen; j++) {
          charBox = this.__charBounds[i][j];
          currentDecoration = this.getValueOfPropertyAt(i, j, type);
          currentFill = this.getValueOfPropertyAt(i, j, 'fill');
          _size = this.getHeightOfChar(i, j);
          _dy = this.getValueOfPropertyAt(i, j, 'deltaY');
          if ((currentDecoration !== lastDecoration || currentFill !== lastFill || _size !== size || _dy !== dy) &&
              boxWidth > 0) {
            ctx.fillStyle = lastFill;
            lastDecoration && lastFill && ctx.fillRect(
              leftOffset + lineLeftOffset + boxStart,
              top + this.offsets[type] * size + dy,
              boxWidth,
              this.fontSize / 15
            );
            boxStart = charBox.left;
            boxWidth = charBox.width;
            lastDecoration = currentDecoration;
            lastFill = currentFill;
            size = _size;
            dy = _dy;
          }
          else {
            boxWidth += charBox.kernedWidth;
          }
        }
        ctx.fillStyle = currentFill;
        currentDecoration && currentFill && ctx.fillRect(
          leftOffset + lineLeftOffset + boxStart,
          top + this.offsets[type] * size + dy,
          boxWidth - charSpacing,
          this.fontSize / 15
        );
        topOffset += heightOfLine;
      }
      // if there is text background color no
      // other shadows should be casted
      this._removeShadow(ctx);
    },

    /**
     * return font declaration string for canvas context
     * @param {Object} [styleObject] object
     * @returns {String} font declaration formatted for canvas context.
     */
    _getFontDeclaration: function(styleObject, forMeasuring) {
      var style = styleObject || this, family = this.fontFamily,
          fontIsGeneric = fabric.Text.genericFonts.indexOf(family.toLowerCase()) > -1;
      var fontFamily = family === undefined ||
      family.indexOf('\'') > -1 ||
      family.indexOf('"') > -1 || fontIsGeneric
        ? style.fontFamily : '"' + style.fontFamily + '"';
      return [
        // node-canvas needs "weight style", while browsers need "style weight"
        (fabric.isLikelyNode ? style.fontWeight : style.fontStyle),
        (fabric.isLikelyNode ? style.fontStyle : style.fontWeight),
        forMeasuring ? this.CACHE_FONT_SIZE + 'px' : style.fontSize + 'px',
        fontFamily
      ].join(' ');
    },

    /**
     * Renders text instance on a specified context
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    render: function(ctx) {
      // do not render if object is not visible
      if (!this.visible) {
        return;
      }
      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {
        return;
      }
      if (this._shouldClearDimensionCache()) {
        this.initDimensions();
      }
      this.callSuper('render', ctx);
    },

    /**
     * Returns the text as an array of lines.
     * @param {String} text text to split
     * @returns {Array} Lines in the text
     */
    _splitTextIntoLines: function(text) {
      var lines = text.split(this._reNewline),
          newLines = new Array(lines.length),
          newLine = ['\n'],
          newText = [];
      for (var i = 0; i < lines.length; i++) {
        newLines[i] = fabric.util.string.graphemeSplit(lines[i]);
        newText = newText.concat(newLines[i], newLine);
      }
      newText.pop();
      return { _unwrappedLines: newLines, lines: lines, graphemeText: newText, graphemeLines: newLines };
    },

    /**
     * Returns object representation of an instance
     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
     * @return {Object} Object representation of an instance
     */
    toObject: function(propertiesToInclude) {
      var additionalProperties = [
        'text',
        'fontSize',
        'fontWeight',
        'fontFamily',
        'fontStyle',
        'lineHeight',
        'underline',
        'overline',
        'linethrough',
        'textAlign',
        'textBackgroundColor',
        'charSpacing',
      ].concat(propertiesToInclude);
      var obj = this.callSuper('toObject', additionalProperties);
      obj.styles = clone(this.styles, true);
      return obj;
    },

    /**
     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.
     * @param {String|Object} key Property name or object (if object, iterate over the object properties)
     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)
     * @return {fabric.Object} thisArg
     * @chainable
     */
    set: function(key, value) {
      this.callSuper('set', key, value);
      var needsDims = false;
      if (typeof key === 'object') {
        for (var _key in key) {
          needsDims = needsDims || this._dimensionAffectingProps.indexOf(_key) !== -1;
        }
      }
      else {
        needsDims = this._dimensionAffectingProps.indexOf(key) !== -1;
      }
      if (needsDims) {
        this.initDimensions();
        this.setCoords();
      }
      return this;
    },

    /**
     * Returns complexity of an instance
     * @return {Number} complexity
     */
    complexity: function() {
      return 1;
    }
  });

  /* _FROM_SVG_START_ */
  /**
   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})
   * @static
   * @memberOf fabric.Text
   * @see: http://www.w3.org/TR/SVG/text.html#TextElement
   */
  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(
    'x y dx dy font-family font-style font-weight font-size letter-spacing text-decoration text-anchor'.split(' '));

  /**
   * Default SVG font size
   * @static
   * @memberOf fabric.Text
   */
  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;

  /**
   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)
   * @static
   * @memberOf fabric.Text
   * @param {SVGElement} element Element to parse
   * @param {Function} callback callback function invoked after parsing
   * @param {Object} [options] Options object
   */
  fabric.Text.fromElement = function(element, callback, options) {
    if (!element) {
      return callback(null);
    }

    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES),
        parsedAnchor = parsedAttributes.textAnchor || 'left';
    options = fabric.util.object.extend((options ? clone(options) : { }), parsedAttributes);

    options.top = options.top || 0;
    options.left = options.left || 0;
    if (parsedAttributes.textDecoration) {
      var textDecoration = parsedAttributes.textDecoration;
      if (textDecoration.indexOf('underline') !== -1) {
        options.underline = true;
      }
      if (textDecoration.indexOf('overline') !== -1) {
        options.overline = true;
      }
      if (textDecoration.indexOf('line-through') !== -1) {
        options.linethrough = true;
      }
      delete options.textDecoration;
    }
    if ('dx' in parsedAttributes) {
      options.left += parsedAttributes.dx;
    }
    if ('dy' in parsedAttributes) {
      options.top += parsedAttributes.dy;
    }
    if (!('fontSize' in options)) {
      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;
    }

    var textContent = '';

    // The XML is not properly parsed in IE9 so a workaround to get
    // textContent is through firstChild.data. Another workaround would be
    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)
    if (!('textContent' in element)) {
      if ('firstChild' in element && element.firstChild !== null) {
        if ('data' in element.firstChild && element.firstChild.data !== null) {
          textContent = element.firstChild.data;
        }
      }
    }
    else {
      textContent = element.textContent;
    }

    textContent = textContent.replace(/^\s+|\s+$|\n+/g, '').replace(/\s+/g, ' ');
    var originalStrokeWidth = options.strokeWidth;
    options.strokeWidth = 0;

    var text = new fabric.Text(textContent, options),
        textHeightScaleFactor = text.getScaledHeight() / text.height,
        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,
        scaledDiff = lineHeightDiff * textHeightScaleFactor,
        textHeight = text.getScaledHeight() + scaledDiff,
        offX = 0;
    /*
      Adjust positioning:
        x/y attributes in SVG correspond to the bottom-left corner of text bounding box
        fabric output by default at top, left.
    */
    if (parsedAnchor === 'center') {
      offX = text.getScaledWidth() / 2;
    }
    if (parsedAnchor === 'right') {
      offX = text.getScaledWidth();
    }
    text.set({
      left: text.left - offX,
      top: text.top - (textHeight - text.fontSize * (0.07 + text._fontSizeFraction)) / text.lineHeight,
      strokeWidth: typeof originalStrokeWidth !== 'undefined' ? originalStrokeWidth : 1,
    });
    callback(text);
  };
  /* _FROM_SVG_END_ */

  /**
   * Returns fabric.Text instance from an object representation
   * @static
   * @memberOf fabric.Text
   * @param {Object} object Object to create an instance from
   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created
   */
  fabric.Text.fromObject = function(object, callback) {
    return fabric.Object._fromObject('Text', object, callback, 'text');
  };

  fabric.Text.genericFonts = ['sans-serif', 'serif', 'cursive', 'fantasy', 'monospace'];

  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Text);

})( true ? exports : undefined);


(function() {
  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {
    /**
     * Returns true if object has no styling or no styling in a line
     * @param {Number} lineIndex , lineIndex is on wrapped lines.
     * @return {Boolean}
     */
    isEmptyStyles: function(lineIndex) {
      if (!this.styles) {
        return true;
      }
      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {
        return true;
      }
      var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };
      for (var p1 in obj) {
        for (var p2 in obj[p1]) {
          // eslint-disable-next-line no-unused-vars
          for (var p3 in obj[p1][p2]) {
            return false;
          }
        }
      }
      return true;
    },

    /**
     * Returns true if object has a style property or has it ina specified line
     * @param {Number} lineIndex
     * @return {Boolean}
     */
    styleHas: function(property, lineIndex) {
      if (!this.styles || !property || property === '') {
        return false;
      }
      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {
        return false;
      }
      var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };
      // eslint-disable-next-line
      for (var p1 in obj) {
        // eslint-disable-next-line
        for (var p2 in obj[p1]) {
          if (typeof obj[p1][p2][property] !== 'undefined') {
            return true;
          }
        }
      }
      return false;
    },

    /**
     * Check if characters in a text have a value for a property
     * whose value matches the textbox's value for that property.  If so,
     * the character-level property is deleted.  If the character
     * has no other properties, then it is also deleted.  Finally,
     * if the line containing that character has no other characters
     * then it also is deleted.
     *
     * @param {string} property The property to compare between characters and text.
     */
    cleanStyle: function(property) {
      if (!this.styles || !property || property === '') {
        return false;
      }
      var obj = this.styles, stylesCount = 0, letterCount, stylePropertyValue,
          allStyleObjectPropertiesMatch = true, graphemeCount = 0, styleObject;
      // eslint-disable-next-line
      for (var p1 in obj) {
        letterCount = 0;
        // eslint-disable-next-line
        for (var p2 in obj[p1]) {
          var styleObject = obj[p1][p2],
              stylePropertyHasBeenSet = styleObject.hasOwnProperty(property);

          stylesCount++;

          if (stylePropertyHasBeenSet) {
            if (!stylePropertyValue) {
              stylePropertyValue = styleObject[property];
            }
            else if (styleObject[property] !== stylePropertyValue) {
              allStyleObjectPropertiesMatch = false;
            }

            if (styleObject[property] === this[property]) {
              delete styleObject[property];
            }
          }
          else {
            allStyleObjectPropertiesMatch = false;
          }

          if (Object.keys(styleObject).length !== 0) {
            letterCount++;
          }
          else {
            delete obj[p1][p2];
          }
        }

        if (letterCount === 0) {
          delete obj[p1];
        }
      }
      // if every grapheme has the same style set then
      // delete those styles and set it on the parent
      for (var i = 0; i < this._textLines.length; i++) {
        graphemeCount += this._textLines[i].length;
      }
      if (allStyleObjectPropertiesMatch && stylesCount === graphemeCount) {
        this[property] = stylePropertyValue;
        this.removeStyle(property);
      }
    },

    /**
     * Remove a style property or properties from all individual character styles
     * in a text object.  Deletes the character style object if it contains no other style
     * props.  Deletes a line style object if it contains no other character styles.
     *
     * @param {String} props The property to remove from character styles.
     */
    removeStyle: function(property) {
      if (!this.styles || !property || property === '') {
        return;
      }
      var obj = this.styles, line, lineNum, charNum;
      for (lineNum in obj) {
        line = obj[lineNum];
        for (charNum in line) {
          delete line[charNum][property];
          if (Object.keys(line[charNum]).length === 0) {
            delete line[charNum];
          }
        }
        if (Object.keys(line).length === 0) {
          delete obj[lineNum];
        }
      }
    },

    /**
     * @private
     */
    _extendStyles: function(index, styles) {
      var loc = this.get2DCursorLocation(index);

      if (!this._getLineStyle(loc.lineIndex)) {
        this._setLineStyle(loc.lineIndex, {});
      }

      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {
        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});
      }

      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);
    },

    /**
     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)
     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.
     * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. usefull to manage styles.
     */
    get2DCursorLocation: function(selectionStart, skipWrapping) {
      if (typeof selectionStart === 'undefined') {
        selectionStart = this.selectionStart;
      }
      var lines = skipWrapping ? this._unwrappedTextLines : this._textLines;
      var len = lines.length;
      for (var i = 0; i < len; i++) {
        if (selectionStart <= lines[i].length) {
          return {
            lineIndex: i,
            charIndex: selectionStart
          };
        }
        selectionStart -= lines[i].length + 1;
      }
      return {
        lineIndex: i - 1,
        charIndex: lines[i - 1].length < selectionStart ? lines[i - 1].length : selectionStart
      };
    },

    /**
     * Gets style of a current selection/cursor (at the start position)
     * if startIndex or endIndex are not provided, slectionStart or selectionEnd will be used.
     * @param {Number} [startIndex] Start index to get styles at
     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1
     * @param {Boolean} [complete] get full style or not
     * @return {Array} styles an array with one, zero or more Style objects
     */
    getSelectionStyles: function(startIndex, endIndex, complete) {
      if (typeof startIndex === 'undefined') {
        startIndex = this.selectionStart || 0;
      }
      if (typeof endIndex === 'undefined') {
        endIndex = this.selectionEnd || startIndex;
      }
      var styles = [];
      for (var i = startIndex; i < endIndex; i++) {
        styles.push(this.getStyleAtPosition(i, complete));
      }
      return styles;
    },

    /**
     * Gets style of a current selection/cursor position
     * @param {Number} position  to get styles at
     * @param {Boolean} [complete] full style if true
     * @return {Object} style Style object at a specified index
     * @private
     */
    getStyleAtPosition: function(position, complete) {
      var loc = this.get2DCursorLocation(position),
          style = complete ? this.getCompleteStyleDeclaration(loc.lineIndex, loc.charIndex) :
            this._getStyleDeclaration(loc.lineIndex, loc.charIndex);
      return style || {};
    },

    /**
     * Sets style of a current selection, if no selection exist, do not set anything.
     * @param {Object} [styles] Styles object
     * @param {Number} [startIndex] Start index to get styles at
     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1
     * @return {fabric.IText} thisArg
     * @chainable
     */
    setSelectionStyles: function(styles, startIndex, endIndex) {
      if (typeof startIndex === 'undefined') {
        startIndex = this.selectionStart || 0;
      }
      if (typeof endIndex === 'undefined') {
        endIndex = this.selectionEnd || startIndex;
      }
      for (var i = startIndex; i < endIndex; i++) {
        this._extendStyles(i, styles);
      }
      /* not included in _extendStyles to avoid clearing cache more than once */
      this._forceClearCache = true;
      return this;
    },

    /**
     * get the reference, not a clone, of the style object for a given character
     * @param {Number} lineIndex
     * @param {Number} charIndex
     * @return {Object} style object
     */
    _getStyleDeclaration: function(lineIndex, charIndex) {
      var lineStyle = this.styles && this.styles[lineIndex];
      if (!lineStyle) {
        return null;
      }
      return lineStyle[charIndex];
    },

    /**
     * return a new object that contains all the style property for a character
     * the object returned is newly created
     * @param {Number} lineIndex of the line where the character is
     * @param {Number} charIndex position of the character on the line
     * @return {Object} style object
     */
    getCompleteStyleDeclaration: function(lineIndex, charIndex) {
      var style = this._getStyleDeclaration(lineIndex, charIndex) || { },
          styleObject = { }, prop;
      for (var i = 0; i < this._styleProperties.length; i++) {
        prop = this._styleProperties[i];
        styleObject[prop] = typeof style[prop] === 'undefined' ? this[prop] : style[prop];
      }
      return styleObject;
    },

    /**
     * @param {Number} lineIndex
     * @param {Number} charIndex
     * @param {Object} style
     * @private
     */
    _setStyleDeclaration: function(lineIndex, charIndex, style) {
      this.styles[lineIndex][charIndex] = style;
    },

    /**
     *
     * @param {Number} lineIndex
     * @param {Number} charIndex
     * @private
     */
    _deleteStyleDeclaration: function(lineIndex, charIndex) {
      delete this.styles[lineIndex][charIndex];
    },

    /**
     * @param {Number} lineIndex
     * @private
     */
    _getLineStyle: function(lineIndex) {
      return this.styles[lineIndex];
    },

    /**
     * @param {Number} lineIndex
     * @param {Object} style
     * @private
     */
    _setLineStyle: function(lineIndex, style) {
      this.styles[lineIndex] = style;
    },

    /**
     * @param {Number} lineIndex
     * @private
     */
    _deleteLineStyle: function(lineIndex) {
      delete this.styles[lineIndex];
    }
  });
})();


(function() {

  function parseDecoration(object) {
    if (object.textDecoration) {
      object.textDecoration.indexOf('underline') > -1 && (object.underline = true);
      object.textDecoration.indexOf('line-through') > -1 && (object.linethrough = true);
      object.textDecoration.indexOf('overline') > -1 && (object.overline = true);
      delete object.textDecoration;
    }
  }

  /**
   * IText class (introduced in <b>v1.4</b>) Events are also fired with "text:"
   * prefix when observing canvas.
   * @class fabric.IText
   * @extends fabric.Text
   * @mixes fabric.Observable
   *
   * @fires changed
   * @fires selection:changed
   * @fires editing:entered
   * @fires editing:exited
   *
   * @return {fabric.IText} thisArg
   * @see {@link fabric.IText#initialize} for constructor definition
   *
   * <p>Supported key combinations:</p>
   * <pre>
   *   Move cursor:                    left, right, up, down
   *   Select character:               shift + left, shift + right
   *   Select text vertically:         shift + up, shift + down
   *   Move cursor by word:            alt + left, alt + right
   *   Select words:                   shift + alt + left, shift + alt + right
   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end
   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end
   *   Jump to start/end of text:      cmd + up, cmd + down
   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown
   *   Delete character:               backspace
   *   Delete word:                    alt + backspace
   *   Delete line:                    cmd + backspace
   *   Forward delete:                 delete
   *   Copy text:                      ctrl/cmd + c
   *   Paste text:                     ctrl/cmd + v
   *   Cut text:                       ctrl/cmd + x
   *   Select entire text:             ctrl/cmd + a
   *   Quit editing                    tab or esc
   * </pre>
   *
   * <p>Supported mouse/touch combination</p>
   * <pre>
   *   Position cursor:                click/touch
   *   Create selection:               click/touch & drag
   *   Create selection:               click & shift + click
   *   Select word:                    double click
   *   Select line:                    triple click
   * </pre>
   */
  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {

    /**
     * Type of an object
     * @type String
     * @default
     */
    type: 'i-text',

    /**
     * Index where text selection starts (or where cursor is when there is no selection)
     * @type Number
     * @default
     */
    selectionStart: 0,

    /**
     * Index where text selection ends
     * @type Number
     * @default
     */
    selectionEnd: 0,

    /**
     * Color of text selection
     * @type String
     * @default
     */
    selectionColor: 'rgba(17,119,255,0.3)',

    /**
     * Indicates whether text is in editing mode
     * @type Boolean
     * @default
     */
    isEditing: false,

    /**
     * Indicates whether a text can be edited
     * @type Boolean
     * @default
     */
    editable: true,

    /**
     * Border color of text object while it's in editing mode
     * @type String
     * @default
     */
    editingBorderColor: 'rgba(102,153,255,0.25)',

    /**
     * Width of cursor (in px)
     * @type Number
     * @default
     */
    cursorWidth: 2,

    /**
     * Color of default cursor (when not overwritten by character style)
     * @type String
     * @default
     */
    cursorColor: '#333',

    /**
     * Delay between cursor blink (in ms)
     * @type Number
     * @default
     */
    cursorDelay: 1000,

    /**
     * Duration of cursor fadein (in ms)
     * @type Number
     * @default
     */
    cursorDuration: 600,

    /**
     * Indicates whether internal text char widths can be cached
     * @type Boolean
     * @default
     */
    caching: true,

    /**
     * @private
     */
    _reSpace: /\s|\n/,

    /**
     * @private
     */
    _currentCursorOpacity: 0,

    /**
     * @private
     */
    _selectionDirection: null,

    /**
     * @private
     */
    _abortCursorAnimation: false,

    /**
     * @private
     */
    __widthOfSpace: [],

    /**
     * Helps determining when the text is in composition, so that the cursor
     * rendering is altered.
     */
    inCompositionMode: false,

    /**
     * Constructor
     * @param {String} text Text string
     * @param {Object} [options] Options object
     * @return {fabric.IText} thisArg
     */
    initialize: function(text, options) {
      this.callSuper('initialize', text, options);
      this.initBehavior();
    },

    /**
     * Sets selection start (left boundary of a selection)
     * @param {Number} index Index to set selection start to
     */
    setSelectionStart: function(index) {
      index = Math.max(index, 0);
      this._updateAndFire('selectionStart', index);
    },

    /**
     * Sets selection end (right boundary of a selection)
     * @param {Number} index Index to set selection end to
     */
    setSelectionEnd: function(index) {
      index = Math.min(index, this.text.length);
      this._updateAndFire('selectionEnd', index);
    },

    /**
     * @private
     * @param {String} property 'selectionStart' or 'selectionEnd'
     * @param {Number} index new position of property
     */
    _updateAndFire: function(property, index) {
      if (this[property] !== index) {
        this._fireSelectionChanged();
        this[property] = index;
      }
      this._updateTextarea();
    },

    /**
     * Fires the even of selection changed
     * @private
     */
    _fireSelectionChanged: function() {
      this.fire('selection:changed');
      this.canvas && this.canvas.fire('text:selection:changed', { target: this });
    },

    /**
     * Initialize text dimensions. Render all text on given context
     * or on a offscreen canvas to get the text width with measureText.
     * Updates this.width and this.height with the proper values.
     * Does not return dimensions.
     * @private
     */
    initDimensions: function() {
      this.isEditing && this.initDelayedCursor();
      this.clearContextTop();
      this.callSuper('initDimensions');
    },

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    render: function(ctx) {
      this.clearContextTop();
      this.callSuper('render', ctx);
      // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor
      // the correct position but not at every cursor animation.
      this.cursorOffsetCache = { };
      this.renderCursorOrSelection();
    },

    /**
     * @private
     * @param {CanvasRenderingContext2D} ctx Context to render on
     */
    _render: function(ctx) {
      this.callSuper('_render', ctx);
    },

    /**
     * Prepare and clean the contextTop
     */
    clearContextTop: function(skipRestore) {
      if (!this.isEditing) {
        return;
      }
      if (this.canvas && this.canvas.contextTop) {
        var ctx = this.canvas.contextTop, v = this.canvas.viewportTransform;
        ctx.save();
        ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);
        this.transform(ctx);
        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);
        this._clearTextArea(ctx);
        skipRestore || ctx.restore();
      }
    },

    /**
     * Renders cursor or selection (depending on what exists)
     */
    renderCursorOrSelection: function() {
      if (!this.isEditing || !this.canvas) {
        return;
      }
      var boundaries = this._getCursorBoundaries(), ctx;
      if (this.canvas && this.canvas.contextTop) {
        ctx = this.canvas.contextTop;
        this.clearContextTop(true);
      }
      else {
        ctx = this.canvas.contextContainer;
        ctx.save();
      }
      if (this.selectionStart === this.selectionEnd) {
        this.renderCursor(boundaries, ctx);
      }
      else {
        this.renderSelection(boundaries, ctx);
      }
      ctx.restore();
    },

    _clearTextArea: function(ctx) {
      // we add 4 pixel, to be sure to do not leave any pixel out
      var width = this.width + 4, height = this.height + 4;
      ctx.clearRect(-width / 2, -height / 2, width, height);
    },

    /**
     * Returns cursor boundaries (left, top, leftOffset, topOffset)
     * @private
     * @param {Array} chars Array of characters
     * @param {String} typeOfBoundaries
     */
    _getCursorBoundaries: function(position) {

      // left/top are left/top of entire text box
      // leftOffset/topOffset are offset from that left/top point of a text box

      if (typeof position === 'undefined') {
        position = this.selectionStart;
      }

      var left = this._getLeftOffset(),
          top = this._getTopOffset(),
          offsets = this._getCursorBoundariesOffsets(position);

      return {
        left: left,
        top: top,
        leftOffset: offsets.left,
        topOffset: offsets.top
      };
    },

    /**
     * @private
     */
    _getCursorBoundariesOffsets: function(position) {
      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {
        return this.cursorOffsetCache;
      }
      var lineLeftOffset,
          lineIndex,
          charIndex,
          topOffset = 0,
          leftOffset = 0,
          boundaries,
          cursorPosition = this.get2DCursorLocation(position);
      charIndex = cursorPosition.charIndex;
      lineIndex = cursorPosition.lineIndex;
      for (var i = 0; i < lineIndex; i++) {
        topOffset += this.getHeightOfLine(i);
      }
      lineLeftOffset = this._getLineLeftOffset(lineIndex);
      var bound = this.__charBounds[lineIndex][charIndex];
      bound && (leftOffset = bound.left);
      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {
        leftOffset -= this._getWidthOfCharSpacing();
      }
      boundaries = {
        top: topOffset,
        left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0),
      };
      this.cursorOffsetCache = boundaries;
      return this.cursorOffsetCache;
    },

    /**
     * Renders cursor
     * @param {Object} boundaries
     * @param {CanvasRenderingContext2D} ctx transformed context to draw on
     */
    renderCursor: function(boundaries, ctx) {
      var cursorLocation = this.get2DCursorLocation(),
          lineIndex = cursorLocation.lineIndex,
          charIndex = cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,
          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),
          multiplier = this.scaleX * this.canvas.getZoom(),
          cursorWidth = this.cursorWidth / multiplier,
          topOffset = boundaries.topOffset,
          dy = this.getValueOfPropertyAt(lineIndex, charIndex, 'deltaY');

      topOffset += (1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex) / this.lineHeight
        - charHeight * (1 - this._fontSizeFraction);

      if (this.inCompositionMode) {
        this.renderSelection(boundaries, ctx);
      }

      ctx.fillStyle = this.getValueOfPropertyAt(lineIndex, charIndex, 'fill');
      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;
      ctx.fillRect(
        boundaries.left + boundaries.leftOffset - cursorWidth / 2,
        topOffset + boundaries.top + dy,
        cursorWidth,
        charHeight);
    },

    /**
     * Renders text selection
     * @param {Object} boundaries Object with left/top/leftOffset/topOffset
     * @param {CanvasRenderingContext2D} ctx transformed context to draw on
     */
    renderSelection: function(boundaries, ctx) {

      var selectionStart = this.inCompositionMode ? this.hiddenTextarea.selectionStart : this.selectionStart,
          selectionEnd = this.inCompositionMode ? this.hiddenTextarea.selectionEnd : this.selectionEnd,
          isJustify = this.textAlign.indexOf('justify') !== -1,
          start = this.get2DCursorLocation(selectionStart),
          end = this.get2DCursorLocation(selectionEnd),
          startLine = start.lineIndex,
          endLine = end.lineIndex,
          startChar = start.charIndex < 0 ? 0 : start.charIndex,
          endChar = end.charIndex < 0 ? 0 : end.charIndex;

      for (var i = startLine; i <= endLine; i++) {
        var lineOffset = this._getLineLeftOffset(i) || 0,
            lineHeight = this.getHeightOfLine(i),
            realLineHeight = 0, boxStart = 0, boxEnd = 0;

        if (i === startLine) {
          boxStart = this.__charBounds[startLine][startChar].left;
        }
        if (i >= startLine && i < endLine) {
          boxEnd = isJustify && !this.isEndOfWrapping(i) ? this.width : this.getLineWidth(i) || 5; // WTF is this 5?
        }
        else if (i === endLine) {
          if (endChar === 0) {
            boxEnd = this.__charBounds[endLine][endChar].left;
          }
          else {
            var charSpacing = this._getWidthOfCharSpacing();
            boxEnd = this.__charBounds[endLine][endChar - 1].left
              + this.__charBounds[endLine][endChar - 1].width - charSpacing;
          }
        }
        realLineHeight = lineHeight;
        if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {
          lineHeight /= this.lineHeight;
        }
        if (this.inCompositionMode) {
          ctx.fillStyle = this.compositionColor || 'black';
          ctx.fillRect(
            boundaries.left + lineOffset + boxStart,
            boundaries.top + boundaries.topOffset + lineHeight,
            boxEnd - boxStart,
            1);
        }
        else {
          ctx.fillStyle = this.selectionColor;
          ctx.fillRect(
            boundaries.left + lineOffset + boxStart,
            boundaries.top + boundaries.topOffset,
            boxEnd - boxStart,
            lineHeight);
        }


        boundaries.topOffset += realLineHeight;
      }
    },

    /**
     * High level function to know the height of the cursor.
     * the currentChar is the one that precedes the cursor
     * Returns fontSize of char at the current cursor
     * @return {Number} Character font size
     */
    getCurrentCharFontSize: function() {
      var cp = this._getCurrentCharIndex();
      return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');
    },

    /**
     * High level function to know the color of the cursor.
     * the currentChar is the one that precedes the cursor
     * Returns color (fill) of char at the current cursor
     * @return {String} Character color (fill)
     */
    getCurrentCharColor: function() {
      var cp = this._getCurrentCharIndex();
      return this.getValueOfPropertyAt(cp.l, cp.c, 'fill');
    },

    /**
     * Returns the cursor position for the getCurrent.. functions
     * @private
     */
    _getCurrentCharIndex: function() {
      var cursorPosition = this.get2DCursorLocation(this.selectionStart, true),
          charIndex = cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;
      return { l: cursorPosition.lineIndex, c: charIndex };
    }
  });

  /**
   * Returns fabric.IText instance from an object representation
   * @static
   * @memberOf fabric.IText
   * @param {Object} object Object to create an instance from
   * @param {function} [callback] invoked with new instance as argument
   */
  fabric.IText.fromObject = function(object, callback) {
    parseDecoration(object);
    if (object.styles) {
      for (var i in object.styles) {
        for (var j in object.styles[i]) {
          parseDecoration(object.styles[i][j]);
        }
      }
    }
    fabric.Object._fromObject('IText', object, callback, 'text');
  };
})();


(function() {

  var clone = fabric.util.object.clone;

  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {

    /**
     * Initializes all the interactive behavior of IText
     */
    initBehavior: function() {
      this.initAddedHandler();
      this.initRemovedHandler();
      this.initCursorSelectionHandlers();
      this.initDoubleClickSimulation();
      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);
    },

    onDeselect: function() {
      this.isEditing && this.exitEditing();
      this.selected = false;
    },

    /**
     * Initializes "added" event handler
     */
    initAddedHandler: function() {
      var _this = this;
      this.on('added', function() {
        var canvas = _this.canvas;
        if (canvas) {
          if (!canvas._hasITextHandlers) {
            canvas._hasITextHandlers = true;
            _this._initCanvasHandlers(canvas);
          }
          canvas._iTextInstances = canvas._iTextInstances || [];
          canvas._iTextInstances.push(_this);
        }
      });
    },

    initRemovedHandler: function() {
      var _this = this;
      this.on('removed', function() {
        var canvas = _this.canvas;
        if (canvas) {
          canvas._iTextInstances = canvas._iTextInstances || [];
          fabric.util.removeFromArray(canvas._iTextInstances, _this);
          if (canvas._iTextInstances.length === 0) {
            canvas._hasITextHandlers = false;
            _this._removeCanvasHandlers(canvas);
          }
        }
      });
    },

    /**
     * register canvas event to manage exiting on other instances
     * @private
     */
    _initCanvasHandlers: function(canvas) {
      canvas._mouseUpITextHandler = function() {
        if (canvas._iTextInstances) {
          canvas._iTextInstances.forEach(function(obj) {
            obj.__isMousedown = false;
          });
        }
      };
      canvas.on('mouse:up', canvas._mouseUpITextHandler);
    },

    /**
     * remove canvas event to manage exiting on other instances
     * @private
     */
    _removeCanvasHandlers: function(canvas) {
      canvas.off('mouse:up', canvas._mouseUpITextHandler);
    },

    /**
     * @private
     */
    _tick: function() {
      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');
    },

    /**
     * @private
     */
    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {

      var tickState;

      tickState = {
        isAborted: false,
        abort: function() {
          this.isAborted = true;
        },
      };

      obj.animate('_currentCursorOpacity', targetOpacity, {
        duration: duration,
        onComplete: function() {
          if (!tickState.isAborted) {
            obj[completeMethod]();
          }
        },
        onChange: function() {
          // we do not want to animate a selection, only cursor
          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {
            obj.renderCursorOrSelection();
          }
        },
        abort: function() {
          return tickState.isAborted;
        }
      });
      return tickState;
    },

    /**
     * @private
     */
    _onTickComplete: function() {

      var _this = this;

      if (this._cursorTimeout1) {
        clearTimeout(this._cursorTimeout1);
      }
      this._cursorTimeout1 = setTimeout(function() {
        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');
      }, 100);
    },

    /**
     * Initializes delayed cursor
     */
    initDelayedCursor: function(restart) {
      var _this = this,
          delay = restart ? 0 : this.cursorDelay;

      this.abortCursorAnimation();
      this._currentCursorOpacity = 1;
      this._cursorTimeout2 = setTimeout(function() {
        _this._tick();
      }, delay);
    },

    /**
     * Aborts cursor animation and clears all timeouts
     */
    abortCursorAnimation: function() {
      var shouldClear = this._currentTickState || this._currentTickCompleteState,
          canvas = this.canvas;
      this._currentTickState && this._currentTickState.abort();
      this._currentTickCompleteState && this._currentTickCompleteState.abort();

      clearTimeout(this._cursorTimeout1);
      clearTimeout(this._cursorTimeout2);

      this._currentCursorOpacity = 0;
      // to clear just itext area we need to transform the context
      // it may not be worth it
      if (shouldClear && canvas) {
        canvas.clearContext(canvas.contextTop || canvas.contextContainer);
      }

    },

    /**
     * Selects entire text
     * @return {fabric.IText} thisArg
     * @chainable
     */
    selectAll: function() {
      this.selectionStart = 0;
      this.selectionEnd = this._text.length;
      this._fireSelectionChanged();
      this._updateTextarea();
      return this;
    },

    /**
     * Returns selected text
     * @return {String}
     */
    getSelectedText: function() {
      return this._text.slice(this.selectionStart, this.selectionEnd).join('');
    },

    /**
     * Find new selection index representing start of current word according to current selection index
     * @param {Number} startFrom Surrent selection index
     * @return {Number} New selection index
     */
    findWordBoundaryLeft: function(startFrom) {
      var offset = 0, index = startFrom - 1;

      // remove space before cursor first
      if (this._reSpace.test(this._text[index])) {
        while (this._reSpace.test(this._text[index])) {
          offset++;
          index--;
        }
      }
      while (/\S/.test(this._text[index]) && index > -1) {
        offset++;
        index--;
      }

      return startFrom - offset;
    },

    /**
     * Find new selection index representing end of current word according to current selection index
     * @param {Number} startFrom Current selection index
     * @return {Number} New selection index
     */
    findWordBoundaryRight: function(startFrom) {
      var offset = 0, index = startFrom;

      // remove space after cursor first
      if (this._reSpace.test(this._text[index])) {
        while (this._reSpace.test(this._text[index])) {
          offset++;
          index++;
        }
      }
      while (/\S/.test(this._text[index]) && index < this.text.length) {
        offset++;
        index++;
      }

      return startFrom + offset;
    },

    /**
     * Find new selection index representing start of current line according to current selection index
     * @param {Number} startFrom Current selection index
     * @return {Number} New selection index
     */
    findLineBoundaryLeft: function(startFrom) {
      var offset = 0, index = startFrom - 1;

      while (!/\n/.test(this._text[index]) && index > -1) {
        offset++;
        index--;
      }

      return startFrom - offset;
    },

    /**
     * Find new selection index representing end of current line according to current selection index
     * @param {Number} startFrom Current selection index
     * @return {Number} New selection index
     */
    findLineBoundaryRight: function(startFrom) {
      var offset = 0, index = startFrom;

      while (!/\n/.test(this._text[index]) && index < this.text.length) {
        offset++;
        index++;
      }

      return startFrom + offset;
    },

    /**
     * Finds index corresponding to beginning or end of a word
     * @param {Number} selectionStart Index of a character
     * @param {Number} direction 1 or -1
     * @return {Number} Index of the beginning or end of a word
     */
    searchWordBoundary: function(selectionStart, direction) {
      var index     = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart,
          _char     = this.text.charAt(index),
          reNonWord = /[ \n\.,;!\?\-]/;

      while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {
        index += direction;
        _char = this.text.charAt(index);
      }
      if (reNonWord.test(_char) && _char !== '\n') {
        index += direction === 1 ? 0 : 1;
      }
      return index;
    },

    /**
     * Selects a word based on the index
     * @param {Number} selectionStart Index of a character
     */
    selectWord: function(selectionStart) {
      selectionStart = selectionStart || this.selectionStart;
      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */
          newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */

      this.selectionStart = newSelectionStart;
      this.selectionEnd = newSelectionEnd;
      this._fireSelectionChanged();
      this._updateTextarea();
      this.renderCursorOrSelection();
    },

    /**
     * Selects a line based on the index
     * @param {Number} selectionStart Index of a character
     * @return {fabric.IText} thisArg
     * @chainable
     */
    selectLine: function(selectionStart) {
      selectionStart = selectionStart || this.selectionStart;
      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),
          newSelectionEnd = this.findLineBoundaryRight(selectionStart);

      this.selectionStart = newSelectionStart;
      this.selectionEnd = newSelectionEnd;
      this._fireSelectionChanged();
      this._updateTextarea();
      return this;
    },

    /**
     * Enters editing state
     * @return {fabric.IText} thisArg
     * @chainable
     */
    enterEditing: function(e) {
      if (this.isEditing || !this.editable) {
        return;
      }

      if (this.canvas) {
        this.canvas.calcOffset();
        this.exitEditingOnOthers(this.canvas);
      }

      this.isEditing = true;

      this.initHiddenTextarea(e);
      this.hiddenTextarea.focus();
      this.hiddenTextarea.value = this.text;
      this._updateTextarea();
      this._saveEditingProps();
      this._setEditingProps();
      this._textBeforeEdit = this.text;

      this._tick();
      this.fire('editing:entered');
      this._fireSelectionChanged();
      if (!this.canvas) {
        return this;
      }
      this.canvas.fire('text:editing:entered', { target: this });
      this.initMouseMoveHandler();
      this.canvas.requestRenderAll();
      return this;
    },

    exitEditingOnOthers: function(canvas) {
      if (canvas._iTextInstances) {
        canvas._iTextInstances.forEach(function(obj) {
          obj.selected = false;
          if (obj.isEditing) {
            obj.exitEditing();
          }
        });
      }
    },

    /**
     * Initializes "mousemove" event handler
     */
    initMouseMoveHandler: function() {
      this.canvas.on('mouse:move', this.mouseMoveHandler);
    },

    /**
     * @private
     */
    mouseMoveHandler: function(options) {
      if (!this.__isMousedown || !this.isEditing) {
        return;
      }

      var newSelectionStart = this.getSelectionStartFromPointer(options.e),
          currentStart = this.selectionStart,
          currentEnd = this.selectionEnd;
      if (
        (newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd)
        &&
        (currentStart === newSelectionStart || currentEnd === newSelectionStart)
      ) {
        return;
      }
      if (newSelectionStart > this.__selectionStartOnMouseDown) {
        this.selectionStart = this.__selectionStartOnMouseDown;
        this.selectionEnd = newSelectionStart;
      }
      else {
        this.selectionStart = newSelectionStart;
        this.selectionEnd = this.__selectionStartOnMouseDown;
      }
      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {
        this.restartCursorIfNeeded();
        this._fireSelectionChanged();
        this._updateTextarea();
        this.renderCursorOrSelection();
      }
    },

    /**
     * @private
     */
    _setEditingProps: function() {
      this.hoverCursor = 'text';

      if (this.canvas) {
        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';
      }

      this.borderColor = this.editingBorderColor;

      this.hasControls = this.selectable = false;
      this.lockMovementX = this.lockMovementY = true;
    },

    /**
     * convert from textarea to grapheme indexes
     */
    fromStringToGraphemeSelection: function(start, end, text) {
      var smallerTextStart = text.slice(0, start),
          graphemeStart = fabric.util.string.graphemeSplit(smallerTextStart).length;
      if (start === end) {
        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };
      }
      var smallerTextEnd = text.slice(start, end),
          graphemeEnd = fabric.util.string.graphemeSplit(smallerTextEnd).length;
      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };
    },

    /**
     * convert from fabric to textarea values
     */
    fromGraphemeToStringSelection: function(start, end, _text) {
      var smallerTextStart = _text.slice(0, start),
          graphemeStart = smallerTextStart.join('').length;
      if (start === end) {
        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };
      }
      var smallerTextEnd = _text.slice(start, end),
          graphemeEnd = smallerTextEnd.join('').length;
      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };
    },

    /**
     * @private
     */
    _updateTextarea: function() {
      this.cursorOffsetCache = { };
      if (!this.hiddenTextarea) {
        return;
      }
      if (!this.inCompositionMode) {
        var newSelection = this.fromGraphemeToStringSelection(this.selectionStart, this.selectionEnd, this._text);
        this.hiddenTextarea.selectionStart = newSelection.selectionStart;
        this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;
      }
      this.updateTextareaPosition();
    },

    /**
     * @private
     */
    updateFromTextArea: function() {
      if (!this.hiddenTextarea) {
        return;
      }
      this.cursorOffsetCache = { };
      this.text = this.hiddenTextarea.value;
      if (this._shouldClearDimensionCache()) {
        this.initDimensions();
        this.setCoords();
      }
      var newSelection = this.fromStringToGraphemeSelection(
        this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);
      this.selectionEnd = this.selectionStart = newSelection.selectionEnd;
      if (!this.inCompositionMode) {
        this.selectionStart = newSelection.selectionStart;
      }
      this.updateTextareaPosition();
    },

    /**
     * @private
     */
    updateTextareaPosition: function() {
      if (this.selectionStart === this.selectionEnd) {
        var style = this._calcTextareaPosition();
        this.hiddenTextarea.style.left = style.left;
        this.hiddenTextarea.style.top = style.top;
      }
    },

    /**
     * @private
     * @return {Object} style contains style for hiddenTextarea
     */
    _calcTextareaPosition: function() {
      if (!this.canvas) {
        return { x: 1, y: 1 };
      }
      var desiredPostion = this.inCompositionMode ? this.compositionStart : this.selectionStart,
          boundaries = this._getCursorBoundaries(desiredPostion),
          cursorLocation = this.get2DCursorLocation(desiredPostion),
          lineIndex = cursorLocation.lineIndex,
          charIndex = cursorLocation.charIndex,
          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') * this.lineHeight,
          leftOffset = boundaries.leftOffset,
          m = this.calcTransformMatrix(),
          p = {
            x: boundaries.left + leftOffset,
            y: boundaries.top + boundaries.topOffset + charHeight
          },
          upperCanvas = this.canvas.upperCanvasEl,
          upperCanvasWidth = upperCanvas.width,
          upperCanvasHeight = upperCanvas.height,
          maxWidth = upperCanvasWidth - charHeight,
          maxHeight = upperCanvasHeight - charHeight,
          scaleX = upperCanvas.clientWidth / upperCanvasWidth,
          scaleY = upperCanvas.clientHeight / upperCanvasHeight;

      p = fabric.util.transformPoint(p, m);
      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);
      p.x *= scaleX;
      p.y *= scaleY;
      if (p.x < 0) {
        p.x = 0;
      }
      if (p.x > maxWidth) {
        p.x = maxWidth;
      }
      if (p.y < 0) {
        p.y = 0;
      }
      if (p.y > maxHeight) {
        p.y = maxHeight;
      }

      // add canvas offset on document
      p.x += this.canvas._offset.left;
      p.y += this.canvas._offset.top;

      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight + 'px', charHeight: charHeight };
    },

    /**
     * @private
     */
    _saveEditingProps: function() {
      this._savedProps = {
        hasControls: this.hasControls,
        borderColor: this.borderColor,
        lockMovementX: this.lockMovementX,
        lockMovementY: this.lockMovementY,
        hoverCursor: this.hoverCursor,
        defaultCursor: this.canvas && this.canvas.defaultCursor,
        moveCursor: this.canvas && this.canvas.moveCursor
      };
    },

    /**
     * @private
     */
    _restoreEditingProps: function() {
      if (!this._savedProps) {
        return;
      }

      this.hoverCursor = this._savedProps.hoverCursor;
      this.hasControls = this._savedProps.hasControls;
      this.borderColor = this._savedProps.borderColor;
      this.lockMovementX = this._savedProps.lockMovementX;
      this.lockMovementY = this._savedProps.lockMovementY;

      if (this.canvas) {
        this.canvas.defaultCursor = this._savedProps.defaultCursor;
        this.canvas.moveCursor = this._savedProps.moveCursor;
      }
    },

    /**
     * Exits from editing state
     * @return {fabric.IText} thisArg
     * @chainable
     */
    exitEditing: function() {
      var isTextChanged = (this._textBeforeEdit !== this.text);
      this.selected = false;
      this.isEditing = false;
      this.selectable = true;

      this.selectionEnd = this.selectionStart;

      if (this.hiddenTextarea) {
        this.hiddenTextarea.blur && this.hiddenTextarea.blur();
        this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);
        this.hiddenTextarea = null;
      }

      this.abortCursorAnimation();
      this._restoreEditingProps();
      this._currentCursorOpacity = 0;
      if (this._shouldClearDimensionCache()) {
        this.initDimensions();
        this.setCoords();
      }
      this.fire('editing:exited');
      isTextChanged && this.fire('modified');
      if (this.canvas) {
        this.canvas.off('mouse:move', this.mouseMoveHandler);
        this.canvas.fire('text:editing:exited', { target: this });
        isTextChanged && this.canvas.fire('object:modified', { target: this });
      }
      return this;
    },

    /**
     * @private
     */
    _removeExtraneousStyles: function() {
      for (var prop in this.styles) {
        if (!this._textLines[prop]) {
          delete this.styles[prop];
        }
      }
    },

    /**
     * remove and reflow a style block from start to end.
     * @param {Number} start linear start position for removal (included in removal)
     * @param {Number} end linear end position for removal ( excluded from removal )
     */
    removeStyleFromTo: function(start, end) {
      var cursorStart = this.get2DCursorLocation(start, true),
          cursorEnd = this.get2DCursorLocation(end, true),
          lineStart = cursorStart.lineIndex,
          charStart = cursorStart.charIndex,
          lineEnd = cursorEnd.lineIndex,
          charEnd = cursorEnd.charIndex,
          i, styleObj;
      if (lineStart !== lineEnd) {
        // step1 remove the trailing of lineStart
        if (this.styles[lineStart]) {
          for (i = charStart; i < this._unwrappedTextLines[lineStart].length; i++) {
            delete this.styles[lineStart][i];
          }
        }
        // step2 move the trailing of lineEnd to lineStart if needed
        if (this.styles[lineEnd]) {
          for (i = charEnd; i < this._unwrappedTextLines[lineEnd].length; i++) {
            styleObj = this.styles[lineEnd][i];
            if (styleObj) {
              this.styles[lineStart] || (this.styles[lineStart] = { });
              this.styles[lineStart][charStart + i - charEnd] = styleObj;
            }
          }
        }
        // step3 detects lines will be completely removed.
        for (i = lineStart + 1; i <= lineEnd; i++) {
          delete this.styles[i];
        }
        // step4 shift remaining lines.
        this.shiftLineStyles(lineEnd, lineStart - lineEnd);
      }
      else {
        // remove and shift left on the same line
        if (this.styles[lineStart]) {
          styleObj = this.styles[lineStart];
          var diff = charEnd - charStart, numericChar, _char;
          for (i = charStart; i < charEnd; i++) {
            delete styleObj[i];
          }
          for (_char in this.styles[lineStart]) {
            numericChar = parseInt(_char, 10);
            if (numericChar >= charEnd) {
              styleObj[numericChar - diff] = styleObj[_char];
              delete styleObj[_char];
            }
          }
        }
      }
    },

    /**
     * Shifts line styles up or down
     * @param {Number} lineIndex Index of a line
     * @param {Number} offset Can any number?
     */
    shiftLineStyles: function(lineIndex, offset) {
      // shift all line styles by offset upward or downward
      // do not clone deep. we need new array, not new style objects
      var clonedStyles = clone(this.styles);
      for (var line in this.styles) {
        var numericLine = parseInt(line, 10);
        if (numericLine > lineIndex) {
          this.styles[numericLine + offset] = clonedStyles[numericLine];
          if (!clonedStyles[numericLine - offset]) {
            delete this.styles[numericLine];
          }
        }
      }
    },

    restartCursorIfNeeded: function() {
      if (!this._currentTickState || this._currentTickState.isAborted
        || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted
      ) {
        this.initDelayedCursor();
      }
    },

    /**
     * Inserts new style object
     * @param {Number} lineIndex Index of a line
     * @param {Number} charIndex Index of a char
     * @param {Number} qty number of lines to add
     * @param {Array} copiedStyle Array of objects styles
     */
    insertNewlineStyleObject: function(lineIndex, charIndex, qty, copiedStyle) {
      var currentCharStyle,
          newLineStyles = {},
          somethingAdded = false;

      qty || (qty = 1);
      this.shiftLineStyles(lineIndex, qty);
      if (this.styles[lineIndex]) {
        currentCharStyle = this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1];
      }

      // we clone styles of all chars
      // after cursor onto the current line
      for (var index in this.styles[lineIndex]) {
        var numIndex = parseInt(index, 10);
        if (numIndex >= charIndex) {
          somethingAdded = true;
          newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];
          // remove lines from the previous line since they're on a new line now
          delete this.styles[lineIndex][index];
        }
      }
      if (somethingAdded) {
        this.styles[lineIndex + qty] = newLineStyles;
      }
      else {
        delete this.styles[lineIndex + qty];
      }
      // for the other lines
      // we clone current char style onto the next (otherwise empty) line
      while (qty > 1) {
        qty--;
        if (copiedStyle && copiedStyle[qty]) {
          this.styles[lineIndex + qty] = { 0: clone(copiedStyle[qty]) };
        }
        else if (currentCharStyle) {
          this.styles[lineIndex + qty] = { 0: clone(currentCharStyle) };
        }
        else {
          delete this.styles[lineIndex + qty];
        }
      }
      this._forceClearCache = true;
    },

    /**
     * Inserts style object for a given line/char index
     * @param {Number} lineIndex Index of a line
     * @param {Number} charIndex Index of a char
     * @param {Number} quantity number Style object to insert, if given
     * @param {Array} copiedStyle array of style objecs
     */
    insertCharStyleObject: function(lineIndex, charIndex, quantity, copiedStyle) {
      if (!this.styles) {
        this.styles = {};
      }
      var currentLineStyles       = this.styles[lineIndex],
          currentLineStylesCloned = currentLineStyles ? clone(currentLineStyles) : {};

      quantity || (quantity = 1);
      // shift all char styles by quantity forward
      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4
      for (var index in currentLineStylesCloned) {
        var numericIndex = parseInt(index, 10);
        if (numericIndex >= charIndex) {
          currentLineStyles[numericIndex + quantity] = currentLineStylesCloned[numericIndex];
          // only delete the style if there was nothing moved there
          if (!currentLineStylesCloned[numericIndex - quantity]) {
            delete currentLineStyles[numericIndex];
          }
        }
      }
      this._forceClearCache = true;
      if (copiedStyle) {
        while (quantity--) {
          if (!Object.keys(copiedStyle[quantity]).length) {
            continue;
          }
          if (!this.styles[lineIndex]) {
            this.styles[lineIndex] = {};
          }
          this.styles[lineIndex][charIndex + quantity] = clone(copiedStyle[quantity]);
        }
        return;
      }
      if (!currentLineStyles) {
        return;
      }
      var newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];
      while (newStyle && quantity--) {
        this.styles[lineIndex][charIndex + quantity] = clone(newStyle);
      }
    },

    /**
     * Inserts style object(s)
     * @param {Array} insertedText Characters at the location where style is inserted
     * @param {Number} start cursor index for inserting style
     * @param {Array} [copiedStyle] array of style objects to insert.
     */
    insertNewStyleBlock: function(insertedText, start, copiedStyle) {
      var cursorLoc = this.get2DCursorLocation(start, true),
          addedLines = [0], linesLenght = 0;
      for (var i = 0; i < insertedText.length; i++) {
        if (insertedText[i] === '\n') {
          linesLenght++;
          addedLines[linesLenght] = 0;
        }
        else {
          addedLines[linesLenght]++;
        }
      }
      if (addedLines[0] > 0) {
        this.insertCharStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex, addedLines[0], copiedStyle);
        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);
      }
      linesLenght && this.insertNewlineStyleObject(
        cursorLoc.lineIndex, cursorLoc.charIndex + addedLines[0], linesLenght);
      for (var i = 1; i < linesLenght; i++) {
        if (addedLines[i] > 0) {
          this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);
        }
        else if (copiedStyle) {
          this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];
        }
        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);
      }
      // we use i outside the loop to get it like linesLength
      if (addedLines[i] > 0) {
        this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);
      }
    },

    /**
     * Set the selectionStart and selectionEnd according to the ne postion of cursor
     * mimic the key - mouse navigation when shift is pressed.
     */
    setSelectionStartEndWithShift: function(start, end, newSelection) {
      if (newSelection <= start) {
        if (end === start) {
          this._selectionDirection = 'left';
        }
        else if (this._selectionDirection === 'right') {
          this._selectionDirection = 'left';
          this.selectionEnd = start;
        }
        this.selectionStart = newSelection;
      }
      else if (newSelection > start && newSelection < end) {
        if (this._selectionDirection === 'right') {
          this.selectionEnd = newSelection;
        }
        else {
          this.selectionStart = newSelection;
        }
      }
      else {
        // newSelection is > selection start and end
        if (end === start) {
          this._selectionDirection = 'right';
        }
        else if (this._selectionDirection === 'left') {
          this._selectionDirection = 'right';
          this.selectionStart = end;
        }
        this.selectionEnd = newSelection;
      }
    },

    setSelectionInBoundaries: function() {
      var length = this.text.length;
      if (this.selectionStart > length) {
        this.selectionStart = length;
      }
      else if (this.selectionStart < 0) {
        this.selectionStart = 0;
      }
      if (this.selectionEnd > length) {
        this.selectionEnd = length;
      }
      else if (this.selectionEnd < 0) {
        this.selectionEnd = 0;
      }
    }
  });
})();


fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {
  /**
   * Initializes "dbclick" event handler
   */
  initDoubleClickSimulation: function() {

    // for double click
    this.__lastClickTime = +new Date();

    // for triple click
    this.__lastLastClickTime = +new Date();

    this.__lastPointer = { };

    this.on('mousedown', this.onMouseDown);
  },

  /**
   * Default event handler to simulate triple click
   * @private
   */
  onMouseDown: function(options) {
    if (!this.canvas) {
      return;
    }
    this.__newClickTime = +new Date();
    var newPointer = options.pointer;
    if (this.isTripleClick(newPointer)) {
      this.fire('tripleclick', options);
      this._stopEvent(options.e);
    }
    this.__lastLastClickTime = this.__lastClickTime;
    this.__lastClickTime = this.__newClickTime;
    this.__lastPointer = newPointer;
    this.__lastIsEditing = this.isEditing;
    this.__lastSelected = this.selected;
  },

  isTripleClick: function(newPointer) {
    return this.__newClickTime - this.__lastClickTime < 500 &&
        this.__lastClickTime - this.__lastLastClickTime < 500 &&
        this.__lastPointer.x === newPointer.x &&
        this.__lastPointer.y === newPointer.y;
  },

  /**
   * @private
   */
  _stopEvent: function(e) {
    e.preventDefault && e.preventDefault();
    e.stopPropagation && e.stopPropagation();
  },

  /**
   * Initializes event handlers related to cursor or selection
   */
  initCursorSelectionHandlers: function() {
    this.initMousedownHandler();
    this.initMouseupHandler();
    this.initClicks();
  },

  /**
   * Initializes double and triple click event handlers
   */
  initClicks: function() {
    this.on('mousedblclick', function(options) {
      this.selectWord(this.getSelectionStartFromPointer(options.e));
    });
    this.on('tripleclick', function(options) {
      this.selectLine(this.getSelectionStartFromPointer(options.e));
    });
  },

  /**
   * Default event handler for the basic functionalities needed on _mouseDown
   * can be overridden to do something different.
   * Scope of this implementation is: find the click position, set selectionStart
   * find selectionEnd, initialize the drawing of either cursor or selection area
   */
  _mouseDownHandler: function(options) {
    if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {
      return;
    }

    this.__isMousedown = true;

    if (this.selected) {
      this.setCursorByClick(options.e);
    }

    if (this.isEditing) {
      this.__selectionStartOnMouseDown = this.selectionStart;
      if (this.selectionStart === this.selectionEnd) {
        this.abortCursorAnimation();
      }
      this.renderCursorOrSelection();
    }
  },

  /**
   * Default event handler for the basic functionalities needed on mousedown:before
   * can be overridden to do something different.
   * Scope of this implementation is: verify the object is already selected when mousing down
   */
  _mouseDownHandlerBefore: function(options) {
    if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {
      return;
    }
    if (this === this.canvas._activeObject) {
      this.selected = true;
    }
  },

  /**
   * Initializes "mousedown" event handler
   */
  initMousedownHandler: function() {
    this.on('mousedown', this._mouseDownHandler);
    this.on('mousedown:before', this._mouseDownHandlerBefore);
  },

  /**
   * Initializes "mouseup" event handler
   */
  initMouseupHandler: function() {
    this.on('mouseup', this.mouseUpHandler);
  },

  /**
   * standard hander for mouse up, overridable
   * @private
   */
  mouseUpHandler: function(options) {
    this.__isMousedown = false;
    if (!this.editable || this.group ||
      (options.transform && options.transform.actionPerformed) ||
      (options.e.button && options.e.button !== 1)) {
      return;
    }

    if (this.canvas) {
      var currentActive = this.canvas._activeObject;
      if (currentActive && currentActive !== this) {
        // avoid running this logic when there is an active object
        // this because is possible with shift click and fast clicks,
        // to rapidly deselect and reselect this object and trigger an enterEdit
        return;
      }
    }

    if (this.__lastSelected && !this.__corner) {
      this.selected = false;
      this.__lastSelected = false;
      this.enterEditing(options.e);
      if (this.selectionStart === this.selectionEnd) {
        this.initDelayedCursor(true);
      }
      else {
        this.renderCursorOrSelection();
      }
    }
    else {
      this.selected = true;
    }
  },

  /**
   * Changes cursor location in a text depending on passed pointer (x/y) object
   * @param {Event} e Event object
   */
  setCursorByClick: function(e) {
    var newSelection = this.getSelectionStartFromPointer(e),
        start = this.selectionStart, end = this.selectionEnd;
    if (e.shiftKey) {
      this.setSelectionStartEndWithShift(start, end, newSelection);
    }
    else {
      this.selectionStart = newSelection;
      this.selectionEnd = newSelection;
    }
    if (this.isEditing) {
      this._fireSelectionChanged();
      this._updateTextarea();
    }
  },

  /**
   * Returns index of a character corresponding to where an object was clicked
   * @param {Event} e Event object
   * @return {Number} Index of a character
   */
  getSelectionStartFromPointer: function(e) {
    var mouseOffset = this.getLocalPointer(e),
        prevWidth = 0,
        width = 0,
        height = 0,
        charIndex = 0,
        lineIndex = 0,
        lineLeftOffset,
        line;

    for (var i = 0, len = this._textLines.length; i < len; i++) {
      if (height <= mouseOffset.y) {
        height += this.getHeightOfLine(i) * this.scaleY;
        lineIndex = i;
        if (i > 0) {
          charIndex += this._textLines[i - 1].length + 1;
        }
      }
      else {
        break;
      }
    }
    lineLeftOffset = this._getLineLeftOffset(lineIndex);
    width = lineLeftOffset * this.scaleX;
    line = this._textLines[lineIndex];
    for (var j = 0, jlen = line.length; j < jlen; j++) {
      prevWidth = width;
      // i removed something about flipX here, check.
      width += this.__charBounds[lineIndex][j].kernedWidth * this.scaleX;
      if (width <= mouseOffset.x) {
        charIndex++;
      }
      else {
        break;
      }
    }
    return this._getNewSelectionStartFromOffset(mouseOffset, prevWidth, width, charIndex, jlen);
  },

  /**
   * @private
   */
  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {
    // we need Math.abs because when width is after the last char, the offset is given as 1, while is 0
    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,
        distanceBtwNextCharAndCursor = width - mouseOffset.x,
        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ||
          distanceBtwNextCharAndCursor < 0 ? 0 : 1,
        newSelectionStart = index + offset;
    // if object is horizontally flipped, mirror cursor location from the end
    if (this.flipX) {
      newSelectionStart = jlen - newSelectionStart;
    }

    if (newSelectionStart > this._text.length) {
      newSelectionStart = this._text.length;
    }

    return newSelectionStart;
  }
});


fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {

  /**
   * Initializes hidden textarea (needed to bring up keyboard in iOS)
   */
  initHiddenTextarea: function() {
    this.hiddenTextarea = fabric.document.createElement('textarea');
    this.hiddenTextarea.setAttribute('autocapitalize', 'off');
    this.hiddenTextarea.setAttribute('autocorrect', 'off');
    this.hiddenTextarea.setAttribute('autocomplete', 'off');
    this.hiddenTextarea.setAttribute('spellcheck', 'false');
    this.hiddenTextarea.setAttribute('data-fabric-hiddentextarea', '');
    this.hiddenTextarea.setAttribute('wrap', 'off');
    var style = this._calcTextareaPosition();
    // line-height: 1px; was removed from the style to fix this:
    // https://bugs.chromium.org/p/chromium/issues/detail?id=870966
    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top +
    '; left: ' + style.left + '; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;' +
    ' paddingｰtop: ' + style.fontSize + ';';
    fabric.document.body.appendChild(this.hiddenTextarea);

    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));
    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));
    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));
    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));
    fabric.util.addListener(this.hiddenTextarea, 'cut', this.copy.bind(this));
    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));
    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));
    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));
    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));

    if (!this._clickHandlerInitialized && this.canvas) {
      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));
      this._clickHandlerInitialized = true;
    }
  },

  /**
   * For functionalities on keyDown
   * Map a special key to a function of the instance/prototype
   * If you need different behaviour for ESC or TAB or arrows, you have to change
   * this map setting the name of a function that you build on the fabric.Itext or
   * your prototype.
   * the map change will affect all Instances unless you need for only some text Instances
   * in that case you have to clone this object and assign your Instance.
   * this.keysMap = fabric.util.object.clone(this.keysMap);
   * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]
   */
  keysMap: {
    9:  'exitEditing',
    27: 'exitEditing',
    33: 'moveCursorUp',
    34: 'moveCursorDown',
    35: 'moveCursorRight',
    36: 'moveCursorLeft',
    37: 'moveCursorLeft',
    38: 'moveCursorUp',
    39: 'moveCursorRight',
    40: 'moveCursorDown',
  },

  /**
   * For functionalities on keyUp + ctrl || cmd
   */
  ctrlKeysMapUp: {
    67: 'copy',
    88: 'cut'
  },

  /**
   * For functionalities on keyDown + ctrl || cmd
   */
  ctrlKeysMapDown: {
    65: 'selectAll'
  },

  onClick: function() {
    // No need to trigger click event here, focus is enough to have the keyboard appear on Android
    this.hiddenTextarea && this.hiddenTextarea.focus();
  },

  /**
   * Handles keyup event
   * @param {Event} e Event object
   */
  onKeyDown: function(e) {
    if (!this.isEditing || this.inCompositionMode) {
      return;
    }
    if (e.keyCode in this.keysMap) {
      this[this.keysMap[e.keyCode]](e);
    }
    else if ((e.keyCode in this.ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {
      this[this.ctrlKeysMapDown[e.keyCode]](e);
    }
    else {
      return;
    }
    e.stopImmediatePropagation();
    e.preventDefault();
    if (e.keyCode >= 33 && e.keyCode <= 40) {
      // if i press an arrow key just update selection
      this.clearContextTop();
      this.renderCursorOrSelection();
    }
    else {
      this.canvas && this.canvas.requestRenderAll();
    }
  },

  /**
   * Handles keyup event
   * We handle KeyUp because ie11 and edge have difficulties copy/pasting
   * if a copy/cut event fired, keyup is dismissed
   * @param {Event} e Event object
   */
  onKeyUp: function(e) {
    if (!this.isEditing || this._copyDone || this.inCompositionMode) {
      this._copyDone = false;
      return;
    }
    if ((e.keyCode in this.ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {
      this[this.ctrlKeysMapUp[e.keyCode]](e);
    }
    else {
      return;
    }
    e.stopImmediatePropagation();
    e.preventDefault();
    this.canvas && this.canvas.requestRenderAll();
  },

  /**
   * Handles onInput event
   * @param {Event} e Event object
   */
  onInput: function(e) {
    var fromPaste = this.fromPaste;
    this.fromPaste = false;
    e && e.stopPropagation();
    if (!this.isEditing) {
      return;
    }
    // decisions about style changes.
    var nextText = this._splitTextIntoLines(this.hiddenTextarea.value).graphemeText,
        charCount = this._text.length,
        nextCharCount = nextText.length,
        removedText, insertedText,
        charDiff = nextCharCount - charCount;
    if (this.hiddenTextarea.value === '') {
      this.styles = { };
      this.updateFromTextArea();
      this.fire('changed');
      if (this.canvas) {
        this.canvas.fire('text:changed', { target: this });
        this.canvas.requestRenderAll();
      }
      return;
    }

    var textareaSelection = this.fromStringToGraphemeSelection(
      this.hiddenTextarea.selectionStart,
      this.hiddenTextarea.selectionEnd,
      this.hiddenTextarea.value
    );
    var backDelete = this.selectionStart > textareaSelection.selectionStart;

    if (this.selectionStart !== this.selectionEnd) {
      removedText = this._text.slice(this.selectionStart, this.selectionEnd);
      charDiff += this.selectionEnd - this.selectionStart;
    }
    else if (nextCharCount < charCount) {
      if (backDelete) {
        removedText = this._text.slice(this.selectionEnd + charDiff, this.selectionEnd);
      }
      else {
        removedText = this._text.slice(this.selectionStart, this.selectionStart - charDiff);
      }
    }
    insertedText = nextText.slice(textareaSelection.selectionEnd - charDiff, textareaSelection.selectionEnd);
    if (removedText && removedText.length) {
      if (this.selectionStart !== this.selectionEnd) {
        this.removeStyleFromTo(this.selectionStart, this.selectionEnd);
      }
      else if (backDelete) {
        // detect differencies between forwardDelete and backDelete
        this.removeStyleFromTo(this.selectionEnd - removedText.length, this.selectionEnd);
      }
      else {
        this.removeStyleFromTo(this.selectionEnd, this.selectionEnd + removedText.length);
      }
    }
    if (insertedText.length) {
      if (fromPaste && insertedText.join('') === fabric.copiedText) {
        this.insertNewStyleBlock(insertedText, this.selectionStart, fabric.copiedTextStyle);
      }
      else {
        this.insertNewStyleBlock(insertedText, this.selectionStart);
      }
    }
    this.updateFromTextArea();
    this.fire('changed');
    if (this.canvas) {
      this.canvas.fire('text:changed', { target: this });
      this.canvas.requestRenderAll();
    }
  },
  /**
   * Composition start
   */
  onCompositionStart: function() {
    this.inCompositionMode = true;
  },

  /**
   * Composition end
   */
  onCompositionEnd: function() {
    this.inCompositionMode = false;
  },

  // /**
  //  * Composition update
  //  */
  onCompositionUpdate: function(e) {
    this.compositionStart = e.target.selectionStart;
    this.compositionEnd = e.target.selectionEnd;
    this.updateTextareaPosition();
  },

  /**
   * Copies selected text
   * @param {Event} e Event object
   */
  copy: function() {
    if (this.selectionStart === this.selectionEnd) {
      //do not cut-copy if no selection
      return;
    }

    fabric.copiedText = this.getSelectedText();
    fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd, true);
    this._copyDone = true;
  },

  /**
   * Pastes text
   * @param {Event} e Event object
   */
  paste: function() {
    this.fromPaste = true;
  },

  /**
   * @private
   * @param {Event} e Event object
   * @return {Object} Clipboard data object
   */
  _getClipboardData: function(e) {
    return (e && e.clipboardData) || fabric.window.clipboardData;
  },

  /**
   * Finds the width in pixels before the cursor on the same line
   * @private
   * @param {Number} lineIndex
   * @param {Number} charIndex
   * @return {Number} widthBeforeCursor width before cursor
   */
  _getWidthBeforeCursor: function(lineIndex, charIndex) {
    var widthBeforeCursor = this._getLineLeftOffset(lineIndex), bound;

    if (charIndex > 0) {
      bound = this.__charBounds[lineIndex][charIndex - 1];
      widthBeforeCursor += bound.left + bound.width;
    }
    return widthBeforeCursor;
  },

  /**
   * Gets start offset of a selection
   * @param {Event} e Event object
   * @param {Boolean} isRight
   * @return {Number}
   */
  getDownCursorOffset: function(e, isRight) {
    var selectionProp = this._getSelectionForOffset(e, isRight),
        cursorLocation = this.get2DCursorLocation(selectionProp),
        lineIndex = cursorLocation.lineIndex;
    // if on last line, down cursor goes to end of line
    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {
      // move to the end of a text
      return this._text.length - selectionProp;
    }
    var charIndex = cursorLocation.charIndex,
        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),
        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),
        textAfterCursor = this._textLines[lineIndex].slice(charIndex);
    return textAfterCursor.length + indexOnOtherLine + 2;
  },

  /**
   * private
   * Helps finding if the offset should be counted from Start or End
   * @param {Event} e Event object
   * @param {Boolean} isRight
   * @return {Number}
   */
  _getSelectionForOffset: function(e, isRight) {
    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {
      return this.selectionEnd;
    }
    else {
      return this.selectionStart;
    }
  },

  /**
   * @param {Event} e Event object
   * @param {Boolean} isRight
   * @return {Number}
   */
  getUpCursorOffset: function(e, isRight) {
    var selectionProp = this._getSelectionForOffset(e, isRight),
        cursorLocation = this.get2DCursorLocation(selectionProp),
        lineIndex = cursorLocation.lineIndex;
    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {
      // if on first line, up cursor goes to start of line
      return -selectionProp;
    }
    var charIndex = cursorLocation.charIndex,
        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),
        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),
        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex);
    // return a negative offset
    return -this._textLines[lineIndex - 1].length + indexOnOtherLine - textBeforeCursor.length;
  },

  /**
   * for a given width it founds the matching character.
   * @private
   */
  _getIndexOnLine: function(lineIndex, width) {

    var line = this._textLines[lineIndex],
        lineLeftOffset = this._getLineLeftOffset(lineIndex),
        widthOfCharsOnLine = lineLeftOffset,
        indexOnLine = 0, charWidth, foundMatch;

    for (var j = 0, jlen = line.length; j < jlen; j++) {
      charWidth = this.__charBounds[lineIndex][j].width;
      widthOfCharsOnLine += charWidth;
      if (widthOfCharsOnLine > width) {
        foundMatch = true;
        var leftEdge = widthOfCharsOnLine - charWidth,
            rightEdge = widthOfCharsOnLine,
            offsetFromLeftEdge = Math.abs(leftEdge - width),
            offsetFromRightEdge = Math.abs(rightEdge - width);

        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);
        break;
      }
    }

    // reached end
    if (!foundMatch) {
      indexOnLine = line.length - 1;
    }

    return indexOnLine;
  },


  /**
   * Moves cursor down
   * @param {Event} e Event object
   */
  moveCursorDown: function(e) {
    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {
      return;
    }
    this._moveCursorUpOrDown('Down', e);
  },

  /**
   * Moves cursor up
   * @param {Event} e Event object
   */
  moveCursorUp: function(e) {
    if (this.selectionStart === 0 && this.selectionEnd === 0) {
      return;
    }
    this._moveCursorUpOrDown('Up', e);
  },

  /**
   * Moves cursor up or down, fires the events
   * @param {String} direction 'Up' or 'Down'
   * @param {Event} e Event object
   */
  _moveCursorUpOrDown: function(direction, e) {
    // getUpCursorOffset
    // getDownCursorOffset
    var action = 'get' + direction + 'CursorOffset',
        offset = this[action](e, this._selectionDirection === 'right');
    if (e.shiftKey) {
      this.moveCursorWithShift(offset);
    }
    else {
      this.moveCursorWithoutShift(offset);
    }
    if (offset !== 0) {
      this.setSelectionInBoundaries();
      this.abortCursorAnimation();
      this._currentCursorOpacity = 1;
      this.initDelayedCursor();
      this._fireSelectionChanged();
      this._updateTextarea();
    }
  },

  /**
   * Moves cursor with shift
   * @param {Number} offset
   */
  moveCursorWithShift: function(offset) {
    var newSelection = this._selectionDirection === 'left'
      ? this.selectionStart + offset
      : this.selectionEnd + offset;
    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);
    return offset !== 0;
  },

  /**
   * Moves cursor up without shift
   * @param {Number} offset
   */
  moveCursorWithoutShift: function(offset) {
    if (offset < 0) {
      this.selectionStart += offset;
      this.selectionEnd = this.selectionStart;
    }
    else {
      this.selectionEnd += offset;
      this.selectionStart = this.selectionEnd;
    }
    return offset !== 0;
  },

  /**
   * Moves cursor left
   * @param {Event} e Event object
   */
  moveCursorLeft: function(e) {
    if (this.selectionStart === 0 && this.selectionEnd === 0) {
      return;
    }
    this._moveCursorLeftOrRight('Left', e);
  },

  /**
   * @private
   * @return {Boolean} true if a change happened
   */
  _move: function(e, prop, direction) {
    var newValue;
    if (e.altKey) {
      newValue = this['findWordBoundary' + direction](this[prop]);
    }
    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {
      newValue = this['findLineBoundary' + direction](this[prop]);
    }
    else {
      this[prop] += direction === 'Left' ? -1 : 1;
      return true;
    }
    if (typeof newValue !== undefined && this[prop] !== newValue) {
      this[prop] = newValue;
      return true;
    }
  },

  /**
   * @private
   */
  _moveLeft: function(e, prop) {
    return this._move(e, prop, 'Left');
  },

  /**
   * @private
   */
  _moveRight: function(e, prop) {
    return this._move(e, prop, 'Right');
  },

  /**
   * Moves cursor left without keeping selection
   * @param {Event} e
   */
  moveCursorLeftWithoutShift: function(e) {
    var change = true;
    this._selectionDirection = 'left';

    // only move cursor when there is no selection,
    // otherwise we discard it, and leave cursor on same place
    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {
      change = this._moveLeft(e, 'selectionStart');

    }
    this.selectionEnd = this.selectionStart;
    return change;
  },

  /**
   * Moves cursor left while keeping selection
   * @param {Event} e
   */
  moveCursorLeftWithShift: function(e) {
    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {
      return this._moveLeft(e, 'selectionEnd');
    }
    else if (this.selectionStart !== 0){
      this._selectionDirection = 'left';
      return this._moveLeft(e, 'selectionStart');
    }
  },

  /**
   * Moves cursor right
   * @param {Event} e Event object
   */
  moveCursorRight: function(e) {
    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {
      return;
    }
    this._moveCursorLeftOrRight('Right', e);
  },

  /**
   * Moves cursor right or Left, fires event
   * @param {String} direction 'Left', 'Right'
   * @param {Event} e Event object
   */
  _moveCursorLeftOrRight: function(direction, e) {
    var actionName = 'moveCursor' + direction + 'With';
    this._currentCursorOpacity = 1;

    if (e.shiftKey) {
      actionName += 'Shift';
    }
    else {
      actionName += 'outShift';
    }
    if (this[actionName](e)) {
      this.abortCursorAnimation();
      this.initDelayedCursor();
      this._fireSelectionChanged();
      this._updateTextarea();
    }
  },

  /**
   * Moves cursor right while keeping selection
   * @param {Event} e
   */
  moveCursorRightWithShift: function(e) {
    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {
      return this._moveRight(e, 'selectionStart');
    }
    else if (this.selectionEnd !== this._text.length) {
      this._selectionDirection = 'right';
      return this._moveRight(e, 'selectionEnd');
    }
  },

  /**
   * Moves cursor right without keeping selection
   * @param {Event} e Event object
   */
  moveCursorRightWithoutShift: function(e) {
    var changed = true;
    this._selectionDirection = 'right';

    if (this.selectionStart === this.selectionEnd) {
      changed = this._moveRight(e, 'selectionStart');
      this.selectionEnd = this.selectionStart;
    }
    else {
      this.selectionStart = this.selectionEnd;
    }
    return changed;
  },

  /**
   * Removes characters from start/end
   * start/end ar per grapheme position in _text array.
   *
   * @param {Number} start
   * @param {Number} end default to start + 1
   */
  removeChars: function(start, end) {
    if (typeof end === 'undefined') {
      end = start + 1;
    }
    this.removeStyleFromTo(start, end);
    this._text.splice(start, end - start);
    this.text = this._text.join('');
    this.set('dirty', true);
    if (this._shouldClearDimensionCache()) {
      this.initDimensions();
      this.setCoords();
    }
    this._removeExtraneousStyles();
  },

  /**
   * insert characters at start position, before start position.
   * start  equal 1 it means the text get inserted between actual grapheme 0 and 1
   * if style array is provided, it must be as the same length of text in graphemes
   * if end is provided and is bigger than start, old text is replaced.
   * start/end ar per grapheme position in _text array.
   *
   * @param {String} text text to insert
   * @param {Array} style array of style objects
   * @param {Number} start
   * @param {Number} end default to start + 1
   */
  insertChars: function(text, style, start, end) {
    if (typeof end === 'undefined') {
      end = start;
    }
    if (end > start) {
      this.removeStyleFromTo(start, end);
    }
    var graphemes = fabric.util.string.graphemeSplit(text);
    this.insertNewStyleBlock(graphemes, start, style);
    this._text = [].concat(this._text.slice(0, start), graphemes, this._text.slice(end));
    this.text = this._text.join('');
    this.set('dirty', true);
    if (this._shouldClearDimensionCache()) {
      this.initDimensions();
      this.setCoords();
    }
    this._removeExtraneousStyles();
  },

});


/* _TO_SVG_START_ */
(function() {
  var toFixed = fabric.util.toFixed,
      multipleSpacesRegex = /  +/g;

  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {

    /**
     * Returns SVG representation of an instance
     * @param {Function} [reviver] Method for further parsing of svg representation.
     * @return {String} svg representation of an instance
     */
    toSVG: function(reviver) {
      var offsets = this._getSVGLeftTopOffsets(),
          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft),
          internalMarkup = this._wrapSVGTextAndBg(textAndBg);
      return this._createBaseSVGMarkup(
        internalMarkup, { reviver: reviver, noStyle: true, withShadow: true });
    },

    /**
     * @private
     */
    _getSVGLeftTopOffsets: function() {
      return {
        textLeft: -this.width / 2,
        textTop: -this.height / 2,
        lineTop: this.getHeightOfLine(0)
      };
    },

    /**
     * @private
     */
    _wrapSVGTextAndBg: function(textAndBg) {
      var noShadow = true,
          textDecoration = this.getSvgTextDecoration(this);
      return [
        textAndBg.textBgRects.join(''),
        '\t\t<text xml:space="preserve" ',
        (this.fontFamily ? 'font-family="' + this.fontFamily.replace(/"/g, '\'') + '" ' : ''),
        (this.fontSize ? 'font-size="' + this.fontSize + '" ' : ''),
        (this.fontStyle ? 'font-style="' + this.fontStyle + '" ' : ''),
        (this.fontWeight ? 'font-weight="' + this.fontWeight + '" ' : ''),
        (textDecoration ? 'text-decoration="' + textDecoration + '" ' : ''),
        'style="', this.getSvgStyles(noShadow), '"', this.addPaintOrder(), ' >',
        textAndBg.textSpans.join(''),
        '</text>\n'
      ];
    },

    /**
     * @private
     * @param {Number} textTopOffset Text top offset
     * @param {Number} textLeftOffset Text left offset
     * @return {Object}
     */
    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {
      var textSpans = [],
          textBgRects = [],
          height = textTopOffset, lineOffset;
      // bounding-box background
      this._setSVGBg(textBgRects);

      // text and text-background
      for (var i = 0, len = this._textLines.length; i < len; i++) {
        lineOffset = this._getLineLeftOffset(i);
        if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {
          this._setSVGTextLineBg(textBgRects, i, textLeftOffset + lineOffset, height);
        }
        this._setSVGTextLineText(textSpans, i, textLeftOffset + lineOffset, height);
        height += this.getHeightOfLine(i);
      }

      return {
        textSpans: textSpans,
        textBgRects: textBgRects
      };
    },

    /**
     * @private
     */
    _createTextCharSpan: function(_char, styleDecl, left, top) {
      var shouldUseWhitespace = _char !== _char.trim() || _char.match(multipleSpacesRegex),
          styleProps = this.getSvgSpanStyles(styleDecl, shouldUseWhitespace),
          fillStyles = styleProps ? 'style="' + styleProps + '"' : '',
          dy = styleDecl.deltaY, dySpan = '',
          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;
      if (dy) {
        dySpan = ' dy="' + toFixed(dy, NUM_FRACTION_DIGITS) + '" ';
      }
      return [
        '<tspan x="', toFixed(left, NUM_FRACTION_DIGITS), '" y="',
        toFixed(top, NUM_FRACTION_DIGITS), '" ', dySpan,
        fillStyles, '>',
        fabric.util.string.escapeXml(_char),
        '</tspan>'
      ].join('');
    },

    _setSVGTextLineText: function(textSpans, lineIndex, textLeftOffset, textTopOffset) {
      // set proper line offset
      var lineHeight = this.getHeightOfLine(lineIndex),
          isJustify = this.textAlign.indexOf('justify') !== -1,
          actualStyle,
          nextStyle,
          charsToRender = '',
          charBox, style,
          boxWidth = 0,
          line = this._textLines[lineIndex],
          timeToRender;

      textTopOffset += lineHeight * (1 - this._fontSizeFraction) / this.lineHeight;
      for (var i = 0, len = line.length - 1; i <= len; i++) {
        timeToRender = i === len || this.charSpacing;
        charsToRender += line[i];
        charBox = this.__charBounds[lineIndex][i];
        if (boxWidth === 0) {
          textLeftOffset += charBox.kernedWidth - charBox.width;
          boxWidth += charBox.width;
        }
        else {
          boxWidth += charBox.kernedWidth;
        }
        if (isJustify && !timeToRender) {
          if (this._reSpaceAndTab.test(line[i])) {
            timeToRender = true;
          }
        }
        if (!timeToRender) {
          // if we have charSpacing, we render char by char
          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);
          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);
          timeToRender = this._hasStyleChangedForSvg(actualStyle, nextStyle);
        }
        if (timeToRender) {
          style = this._getStyleDeclaration(lineIndex, i) || { };
          textSpans.push(this._createTextCharSpan(charsToRender, style, textLeftOffset, textTopOffset));
          charsToRender = '';
          actualStyle = nextStyle;
          textLeftOffset += boxWidth;
          boxWidth = 0;
        }
      }
    },

    _pushTextBgRect: function(textBgRects, color, left, top, width, height) {
      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;
      textBgRects.push(
        '\t\t<rect ',
        this._getFillAttributes(color),
        ' x="',
        toFixed(left, NUM_FRACTION_DIGITS),
        '" y="',
        toFixed(top, NUM_FRACTION_DIGITS),
        '" width="',
        toFixed(width, NUM_FRACTION_DIGITS),
        '" height="',
        toFixed(height, NUM_FRACTION_DIGITS),
        '"></rect>\n');
    },

    _setSVGTextLineBg: function(textBgRects, i, leftOffset, textTopOffset) {
      var line = this._textLines[i],
          heightOfLine = this.getHeightOfLine(i) / this.lineHeight,
          boxWidth = 0,
          boxStart = 0,
          charBox, currentColor,
          lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');
      for (var j = 0, jlen = line.length; j < jlen; j++) {
        charBox = this.__charBounds[i][j];
        currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');
        if (currentColor !== lastColor) {
          lastColor && this._pushTextBgRect(textBgRects, lastColor, leftOffset + boxStart,
            textTopOffset, boxWidth, heightOfLine);
          boxStart = charBox.left;
          boxWidth = charBox.width;
          lastColor = currentColor;
        }
        else {
          boxWidth += charBox.kernedWidth;
        }
      }
      currentColor && this._pushTextBgRect(textBgRects, currentColor, leftOffset + boxStart,
        textTopOffset, boxWidth, heightOfLine);
    },

    /**
     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values
     * we work around it by "moving" alpha channel into opacity attribute and setting fill's alpha to 1
     *
     * @private
     * @param {*} value
     * @return {String}
     */
    _getFillAttributes: function(value) {
      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';
      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {
        return 'fill="' + value + '"';
      }
      return 'opacity="' + fillColor.getAlpha() + '" fill="' + fillColor.setAlpha(1).toRgb() + '"';
    },

    /**
     * @private
     */
    _getSVGLineTopOffset: function(lineIndex) {
      var lineTopOffset = 0, lastHeight = 0;
      for (var j = 0; j < lineIndex; j++) {
        lineTopOffset += this.getHeightOfLine(j);
      }
      lastHeight = this.getHeightOfLine(j);
      return {
        lineTop: lineTopOffset,
        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)
      };
    },

    /**
     * Returns styles-string for svg-export
     * @param {Boolean} skipShadow a boolean to skip shadow filter output
     * @return {String}
     */
    getSvgStyles: function(skipShadow) {
      var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);
      return svgStyle + ' white-space: pre;';
    },
  });
})();
/* _TO_SVG_END_ */


(function(global) {

  'use strict';

  var fabric = global.fabric || (global.fabric = {});

  /**
   * Textbox class, based on IText, allows the user to resize the text rectangle
   * and wraps lines automatically. Textboxes have their Y scaling locked, the
   * user can only change width. Height is adjusted automatically based on the
   * wrapping of lines.
   * @class fabric.Textbox
   * @extends fabric.IText
   * @mixes fabric.Observable
   * @return {fabric.Textbox} thisArg
   * @see {@link fabric.Textbox#initialize} for constructor definition
   */
  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {

    /**
     * Type of an object
     * @type String
     * @default
     */
    type: 'textbox',

    /**
     * Minimum width of textbox, in pixels.
     * @type Number
     * @default
     */
    minWidth: 20,

    /**
     * Minimum calculated width of a textbox, in pixels.
     * fixed to 2 so that an empty textbox cannot go to 0
     * and is still selectable without text.
     * @type Number
     * @default
     */
    dynamicMinWidth: 2,

    /**
     * Cached array of text wrapping.
     * @type Array
     */
    __cachedLines: null,

    /**
     * Override standard Object class values
     */
    lockScalingFlip: true,

    /**
     * Override standard Object class values
     * Textbox needs this on false
     */
    noScaleCache: false,

    /**
     * Properties which when set cause object to change dimensions
     * @type Object
     * @private
     */
    _dimensionAffectingProps: fabric.Text.prototype._dimensionAffectingProps.concat('width'),

    /**
     * Use this regular expression to split strings in breakable lines
     * @private
     */
    _wordJoiners: /[ \t\r]/,

    /**
     * Use this boolean property in order to split strings that have no white space concept.
     * this is a cheap way to help with chinese/japaense
     * @type Boolean
     * @since 2.6.0
     */
    splitByGrapheme: false,

    /**
     * Unlike superclass's version of this function, Textbox does not update
     * its width.
     * @private
     * @override
     */
    initDimensions: function() {
      if (this.__skipDimension) {
        return;
      }
      this.isEditing && this.initDelayedCursor();
      this.clearContextTop();
      this._clearCache();
      // clear dynamicMinWidth as it will be different after we re-wrap line
      this.dynamicMinWidth = 0;
      // wrap lines
      this._styleMap = this._generateStyleMap(this._splitText());
      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap
      if (this.dynamicMinWidth > this.width) {
        this._set('width', this.dynamicMinWidth);
      }
      if (this.textAlign.indexOf('justify') !== -1) {
        // once text is measured we need to make space fatter to make justified text.
        this.enlargeSpaces();
      }
      // clear cache and re-calculate height
      this.height = this.calcTextHeight();
      this.saveState({ propertySet: '_dimensionAffectingProps' });
    },

    /**
     * Generate an object that translates the style object so that it is
     * broken up by visual lines (new lines and automatic wrapping).
     * The original text styles object is broken up by actual lines (new lines only),
     * which is only sufficient for Text / IText
     * @private
     */
    _generateStyleMap: function(textInfo) {
      var realLineCount     = 0,
          realLineCharCount = 0,
          charCount         = 0,
          map               = {};

      for (var i = 0; i < textInfo.graphemeLines.length; i++) {
        if (textInfo.graphemeText[charCount] === '\n' && i > 0) {
          realLineCharCount = 0;
          charCount++;
          realLineCount++;
        }
        else if (!this.graphemeSplit && this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) && i > 0) {
          // this case deals with space's that are removed from end of lines when wrapping
          realLineCharCount++;
          charCount++;
        }

        map[i] = { line: realLineCount, offset: realLineCharCount };

        charCount += textInfo.graphemeLines[i].length;
        realLineCharCount += textInfo.graphemeLines[i].length;
      }

      return map;
    },

    /**
     * Returns true if object has a style property or has it ina specified line
     * @param {Number} lineIndex
     * @return {Boolean}
     */
    styleHas: function(property, lineIndex) {
      if (this._styleMap && !this.isWrapping) {
        var map = this._styleMap[lineIndex];
        if (map) {
          lineIndex = map.line;
        }
      }
      return fabric.Text.prototype.styleHas.call(this, property, lineIndex);
    },

    /**
     * Returns true if object has no styling or no styling in a line
     * @param {Number} lineIndex , lineIndex is on wrapped lines.
     * @return {Boolean}
     */
    isEmptyStyles: function(lineIndex) {
      var offset = 0, nextLineIndex = lineIndex + 1, nextOffset, obj, shouldLimit = false;
      var map = this._styleMap[lineIndex];
      var mapNextLine = this._styleMap[lineIndex + 1];
      if (map) {
        lineIndex = map.line;
        offset = map.offset;
      }
      if (mapNextLine) {
        nextLineIndex = mapNextLine.line;
        shouldLimit = nextLineIndex === lineIndex;
        nextOffset = mapNextLine.offset;
      }
      obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };
      for (var p1 in obj) {
        for (var p2 in obj[p1]) {
          if (p2 >= offset && (!shouldLimit || p2 < nextOffset)) {
            // eslint-disable-next-line no-unused-vars
            for (var p3 in obj[p1][p2]) {
              return false;
            }
          }
        }
      }
      return true;
    },

    /**
     * @param {Number} lineIndex
     * @param {Number} charIndex
     * @private
     */
    _getStyleDeclaration: function(lineIndex, charIndex) {
      if (this._styleMap && !this.isWrapping) {
        var map = this._styleMap[lineIndex];
        if (!map) {
          return null;
        }
        lineIndex = map.line;
        charIndex = map.offset + charIndex;
      }
      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex);
    },

    /**
     * @param {Number} lineIndex
     * @param {Number} charIndex
     * @param {Object} style
     * @private
     */
    _setStyleDeclaration: function(lineIndex, charIndex, style) {
      var map = this._styleMap[lineIndex];
      lineIndex = map.line;
      charIndex = map.offset + charIndex;

      this.styles[lineIndex][charIndex] = style;
    },

    /**
     * @param {Number} lineIndex
     * @param {Number} charIndex
     * @private
     */
    _deleteStyleDeclaration: function(lineIndex, charIndex) {
      var map = this._styleMap[lineIndex];
      lineIndex = map.line;
      charIndex = map.offset + charIndex;

      delete this.styles[lineIndex][charIndex];
    },

    /**
    * probably broken need a fix
     * @param {Number} lineIndex
     * @private
     */
    _getLineStyle: function(lineIndex) {
      var map = this._styleMap[lineIndex];
      return this.styles[map.line];
    },

    /**
     * probably broken need a fix
     * @param {Number} lineIndex
     * @param {Object} style
     * @private
     */
    _setLineStyle: function(lineIndex, style) {
      var map = this._styleMap[lineIndex];
      this.styles[map.line] = style;
    },

    /**
     * probably broken need a fix
     * @param {Number} lineIndex
     * @private
     */
    _deleteLineStyle: function(lineIndex) {
      var map = this._styleMap[lineIndex];
      delete this.styles[map.line];
    },

    /**
     * Wraps text using the 'width' property of Textbox. First this function
     * splits text on newlines, so we preserve newlines entered by the user.
     * Then it wraps each line using the width of the Textbox by calling
     * _wrapLine().
     * @param {Array} lines The string array of text that is split into lines
     * @param {Number} desiredWidth width you want to wrap to
     * @returns {Array} Array of lines
     */
    _wrapText: function(lines, desiredWidth) {
      var wrapped = [], i;
      this.isWrapping = true;
      for (i = 0; i < lines.length; i++) {
        wrapped = wrapped.concat(this._wrapLine(lines[i], i, desiredWidth));
      }
      this.isWrapping = false;
      return wrapped;
    },

    /**
     * Helper function to measure a string of text, given its lineIndex and charIndex offset
     * it gets called when charBounds are not available yet.
     * @param {CanvasRenderingContext2D} ctx
     * @param {String} text
     * @param {number} lineIndex
     * @param {number} charOffset
     * @returns {number}
     * @private
     */
    _measureWord: function(word, lineIndex, charOffset) {
      var width = 0, prevGrapheme, skipLeft = true;
      charOffset = charOffset || 0;
      for (var i = 0, len = word.length; i < len; i++) {
        var box = this._getGraphemeBox(word[i], lineIndex, i + charOffset, prevGrapheme, skipLeft);
        width += box.kernedWidth;
        prevGrapheme = word[i];
      }
      return width;
    },

    /**
     * Wraps a line of text using the width of the Textbox and a context.
     * @param {Array} line The grapheme array that represent the line
     * @param {Number} lineIndex
     * @param {Number} desiredWidth width you want to wrap the line to
     * @param {Number} reservedSpace space to remove from wrapping for custom functionalities
     * @returns {Array} Array of line(s) into which the given text is wrapped
     * to.
     */
    _wrapLine: function(_line, lineIndex, desiredWidth, reservedSpace) {
      var lineWidth = 0,
          splitByGrapheme = this.splitByGrapheme,
          graphemeLines = [],
          line = [],
          // spaces in different languges?
          words = splitByGrapheme ? fabric.util.string.graphemeSplit(_line) : _line.split(this._wordJoiners),
          word = '',
          offset = 0,
          infix = splitByGrapheme ? '' : ' ',
          wordWidth = 0,
          infixWidth = 0,
          largestWordWidth = 0,
          lineJustStarted = true,
          additionalSpace = splitByGrapheme ? 0 : this._getWidthOfCharSpacing(),
          reservedSpace = reservedSpace || 0;

      desiredWidth -= reservedSpace;
      for (var i = 0; i < words.length; i++) {
        // i would avoid resplitting the graphemes
        word = fabric.util.string.graphemeSplit(words[i]);
        wordWidth = this._measureWord(word, lineIndex, offset);
        offset += word.length;

        lineWidth += infixWidth + wordWidth - additionalSpace;

        if (lineWidth >= desiredWidth && !lineJustStarted) {
          graphemeLines.push(line);
          line = [];
          lineWidth = wordWidth;
          lineJustStarted = true;
        }
        else {
          lineWidth += additionalSpace;
        }

        if (!lineJustStarted && !splitByGrapheme) {
          line.push(infix);
        }
        line = line.concat(word);

        infixWidth = this._measureWord([infix], lineIndex, offset);
        offset++;
        lineJustStarted = false;
        // keep track of largest word
        if (wordWidth > largestWordWidth) {
          largestWordWidth = wordWidth;
        }
      }

      i && graphemeLines.push(line);

      if (largestWordWidth + reservedSpace > this.dynamicMinWidth) {
        this.dynamicMinWidth = largestWordWidth - additionalSpace + reservedSpace;
      }

      return graphemeLines;
    },

    /**
     * Detect if the text line is ended with an hard break
     * text and itext do not have wrapping, return false
     * @param {Number} lineIndex text to split
     * @return {Boolean}
     */
    isEndOfWrapping: function(lineIndex) {
      if (!this._styleMap[lineIndex + 1]) {
        // is last line, return true;
        return true;
      }
      if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {
        // this is last line before a line break, return true;
        return true;
      }
      return false;
    },

    /**
    * Gets lines of text to render in the Textbox. This function calculates
    * text wrapping on the fly every time it is called.
    * @param {String} text text to split
    * @returns {Array} Array of lines in the Textbox.
    * @override
    */
    _splitTextIntoLines: function(text) {
      var newText = fabric.Text.prototype._splitTextIntoLines.call(this, text),
          graphemeLines = this._wrapText(newText.lines, this.width),
          lines = new Array(graphemeLines.length);

      for (var i = 0; i < graphemeLines.length; i++) {
        lines[i] = graphemeLines[i].join('');
      }
      newText.lines = lines;
      newText.graphemeLines = graphemeLines;
      return newText;
    },

    getMinWidth: function() {
      return Math.max(this.minWidth, this.dynamicMinWidth);
    },

    /**
     * Returns object representation of an instance
     * @method toObject
     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
     * @return {Object} object representation of an instance
     */
    toObject: function(propertiesToInclude) {
      return this.callSuper('toObject', ['minWidth', 'splitByGrapheme'].concat(propertiesToInclude));
    }
  });

  /**
   * Returns fabric.Textbox instance from an object representation
   * @static
   * @memberOf fabric.Textbox
   * @param {Object} object Object to create an instance from
   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created
   */
  fabric.Textbox.fromObject = function(object, callback) {
    return fabric.Object._fromObject('Textbox', object, callback, 'text');
  };
})( true ? exports : undefined);


(function() {

  /**
   * Override _setObjectScale and add Textbox specific resizing behavior. Resizing
   * a Textbox doesn't scale text, it only changes width and makes text wrap automatically.
   */
  var setObjectScaleOverridden = fabric.Canvas.prototype._setObjectScale;

  fabric.Canvas.prototype._setObjectScale = function(localMouse, transform,
    lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {

    var t = transform.target, scaled,
        scaleX = localMouse.x * t.scaleX / _dim.x,
        scaleY = localMouse.y * t.scaleY / _dim.y;
    if (by === 'x' && t instanceof fabric.Textbox) {
      var tw = t._getTransformedDimensions().x;
      var w = t.width * (localMouse.x / tw);
      transform.newScaleX = scaleX;
      transform.newScaleY = scaleY;
      if (w >= t.getMinWidth()) {
        scaled = w !== t.width;
        t.set('width', w);
        return scaled;
      }
    }
    else {
      return setObjectScaleOverridden.call(fabric.Canvas.prototype, localMouse, transform,
        lockScalingX, lockScalingY, by, lockScalingFlip, _dim);
    }
  };

  fabric.util.object.extend(fabric.Textbox.prototype, /** @lends fabric.IText.prototype */ {
    /**
     * @private
     */
    _removeExtraneousStyles: function() {
      for (var prop in this._styleMap) {
        if (!this._textLines[prop]) {
          delete this.styles[this._styleMap[prop].line];
        }
      }
    },

  });
})();


/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../buffer/index.js */ "./node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),

/***/ "./node_modules/isarray/index.js":
/*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),

/***/ "./node_modules/jquery/dist/jquery.js":
/*!********************************************!*\
  !*** ./node_modules/jquery/dist/jquery.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * jQuery JavaScript Library v3.6.0
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2021-03-02T17:08Z
 */
( function( global, factory ) {

	"use strict";

	if (  true && typeof module.exports === "object" ) {

		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";

var arr = [];

var getProto = Object.getPrototypeOf;

var slice = arr.slice;

var flat = arr.flat ? function( array ) {
	return arr.flat.call( array );
} : function( array ) {
	return arr.concat.apply( [], array );
};


var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var fnToString = hasOwn.toString;

var ObjectFunctionString = fnToString.call( Object );

var support = {};

var isFunction = function isFunction( obj ) {

		// Support: Chrome <=57, Firefox <=52
		// In some browsers, typeof returns "function" for HTML <object> elements
		// (i.e., `typeof document.createElement( "object" ) === "function"`).
		// We don't want to classify *any* DOM node as a function.
		// Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5
		// Plus for old WebKit, typeof returns "function" for HTML collections
		// (e.g., `typeof document.getElementsByTagName("div") === "function"`). (gh-4756)
		return typeof obj === "function" && typeof obj.nodeType !== "number" &&
			typeof obj.item !== "function";
	};


var isWindow = function isWindow( obj ) {
		return obj != null && obj === obj.window;
	};


var document = window.document;



	var preservedScriptAttributes = {
		type: true,
		src: true,
		nonce: true,
		noModule: true
	};

	function DOMEval( code, node, doc ) {
		doc = doc || document;

		var i, val,
			script = doc.createElement( "script" );

		script.text = code;
		if ( node ) {
			for ( i in preservedScriptAttributes ) {

				// Support: Firefox 64+, Edge 18+
				// Some browsers don't support the "nonce" property on scripts.
				// On the other hand, just using `getAttribute` is not enough as
				// the `nonce` attribute is reset to an empty string whenever it
				// becomes browsing-context connected.
				// See https://github.com/whatwg/html/issues/2369
				// See https://html.spec.whatwg.org/#nonce-attributes
				// The `node.getAttribute` check was added for the sake of
				// `jQuery.globalEval` so that it can fake a nonce-containing node
				// via an object.
				val = node[ i ] || node.getAttribute && node.getAttribute( i );
				if ( val ) {
					script.setAttribute( i, val );
				}
			}
		}
		doc.head.appendChild( script ).parentNode.removeChild( script );
	}


function toType( obj ) {
	if ( obj == null ) {
		return obj + "";
	}

	// Support: Android <=2.3 only (functionish RegExp)
	return typeof obj === "object" || typeof obj === "function" ?
		class2type[ toString.call( obj ) ] || "object" :
		typeof obj;
}
/* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



var
	version = "3.6.0",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	};

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {

		// Return all the elements in a clean array
		if ( num == null ) {
			return slice.call( this );
		}

		// Return just the one element from the set
		return num < 0 ? this[ num + this.length ] : this[ num ];
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	even: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return ( i + 1 ) % 2;
		} ) );
	},

	odd: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return i % 2;
		} ) );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				copy = options[ name ];

				// Prevent Object.prototype pollution
				// Prevent never-ending loop
				if ( name === "__proto__" || target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = Array.isArray( copy ) ) ) ) {
					src = target[ name ];

					// Ensure proper type for the source value
					if ( copyIsArray && !Array.isArray( src ) ) {
						clone = [];
					} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {
						clone = {};
					} else {
						clone = src;
					}
					copyIsArray = false;

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isPlainObject: function( obj ) {
		var proto, Ctor;

		// Detect obvious negatives
		// Use toString instead of jQuery.type to catch host objects
		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
			return false;
		}

		proto = getProto( obj );

		// Objects with no prototype (e.g., `Object.create( null )`) are plain
		if ( !proto ) {
			return true;
		}

		// Objects with prototype are plain iff they were constructed by a global Object function
		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
	},

	isEmptyObject: function( obj ) {
		var name;

		for ( name in obj ) {
			return false;
		}
		return true;
	},

	// Evaluates a script in a provided context; falls back to the global one
	// if not specified.
	globalEval: function( code, options, doc ) {
		DOMEval( code, { nonce: options && options.nonce }, doc );
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
						[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	// Support: Android <=4.0 only, PhantomJS 1 only
	// push.apply(_, arraylike) throws on ancient WebKit
	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return flat( ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
	function( _i, name ) {
		class2type[ "[object " + name + "]" ] = name.toLowerCase();
	} );

function isArrayLike( obj ) {

	// Support: real iOS 8.2 only (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = toType( obj );

	if ( isFunction( obj ) || isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.3.6
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://js.foundation/
 *
 * Date: 2021-02-16
 */
( function( window ) {
var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	nonnativeSelectorCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// Instance methods
	hasOwn = ( {} ).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	pushNative = arr.push,
	push = arr.push,
	slice = arr.slice,

	// Use a stripped-down indexOf as it's faster than native
	// https://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[ i ] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|" +
		"ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram
	identifier = "(?:\\\\[\\da-fA-F]{1,6}" + whitespace +
		"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +

		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +

		// "Attribute values must be CSS identifiers [capture 5]
		// or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" +
		whitespace + "*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +

		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +

		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +

		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" +
		whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace +
		"*" ),
	rdescend = new RegExp( whitespace + "|>" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
			whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" +
			whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),

		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace +
			"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace +
			"*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rhtml = /HTML$/i,
	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,

	// CSS escapes
	// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\([^\\r\\n\\f])", "g" ),
	funescape = function( escape, nonHex ) {
		var high = "0x" + escape.slice( 1 ) - 0x10000;

		return nonHex ?

			// Strip the backslash prefix from a non-hex escape sequence
			nonHex :

			// Replace a hexadecimal escape sequence with the encoded Unicode code point
			// Support: IE <=11+
			// For values outside the Basic Multilingual Plane (BMP), manually construct a
			// surrogate pair
			high < 0 ?
				String.fromCharCode( high + 0x10000 ) :
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// CSS string/identifier serialization
	// https://drafts.csswg.org/cssom/#common-serializing-idioms
	rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
	fcssescape = function( ch, asCodePoint ) {
		if ( asCodePoint ) {

			// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
			if ( ch === "\0" ) {
				return "\uFFFD";
			}

			// Control characters and (dependent upon position) numbers get escaped as code points
			return ch.slice( 0, -1 ) + "\\" +
				ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
		}

		// Other potentially-special ASCII characters get backslash-escaped
		return "\\" + ch;
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	},

	inDisabledFieldset = addCombinator(
		function( elem ) {
			return elem.disabled === true && elem.nodeName.toLowerCase() === "fieldset";
		},
		{ dir: "parentNode", next: "legend" }
	);

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		( arr = slice.call( preferredDoc.childNodes ) ),
		preferredDoc.childNodes
	);

	// Support: Android<4.0
	// Detect silently failing push.apply
	// eslint-disable-next-line no-unused-expressions
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			pushNative.apply( target, slice.call( els ) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;

			// Can't trust NodeList.length
			while ( ( target[ j++ ] = els[ i++ ] ) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {
		setDocument( context );
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && ( match = rquickExpr.exec( selector ) ) ) {

				// ID selector
				if ( ( m = match[ 1 ] ) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( ( elem = context.getElementById( m ) ) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && ( elem = newContext.getElementById( m ) ) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[ 2 ] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( ( m = match[ 3 ] ) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!nonnativeSelectorCache[ selector + " " ] &&
				( !rbuggyQSA || !rbuggyQSA.test( selector ) ) &&

				// Support: IE 8 only
				// Exclude object elements
				( nodeType !== 1 || context.nodeName.toLowerCase() !== "object" ) ) {

				newSelector = selector;
				newContext = context;

				// qSA considers elements outside a scoping root when evaluating child or
				// descendant combinators, which is not what we want.
				// In such cases, we work around the behavior by prefixing every selector in the
				// list with an ID selector referencing the scope context.
				// The technique has to be used as well when a leading combinator is used
				// as such selectors are not recognized by querySelectorAll.
				// Thanks to Andrew Dupont for this technique.
				if ( nodeType === 1 &&
					( rdescend.test( selector ) || rcombinators.test( selector ) ) ) {

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;

					// We can use :scope instead of the ID hack if the browser
					// supports it & if we're not changing the context.
					if ( newContext !== context || !support.scope ) {

						// Capture the context ID, setting it first if necessary
						if ( ( nid = context.getAttribute( "id" ) ) ) {
							nid = nid.replace( rcssescape, fcssescape );
						} else {
							context.setAttribute( "id", ( nid = expando ) );
						}
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[ i ] = ( nid ? "#" + nid : ":scope" ) + " " +
							toSelector( groups[ i ] );
					}
					newSelector = groups.join( "," );
				}

				try {
					push.apply( results,
						newContext.querySelectorAll( newSelector )
					);
					return results;
				} catch ( qsaError ) {
					nonnativeSelectorCache( selector, true );
				} finally {
					if ( nid === expando ) {
						context.removeAttribute( "id" );
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {

		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {

			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return ( cache[ key + " " ] = value );
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement( "fieldset" );

	try {
		return !!fn( el );
	} catch ( e ) {
		return false;
	} finally {

		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}

		// release memory in IE
		el = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split( "|" ),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[ i ] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			a.sourceIndex - b.sourceIndex;

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( ( cur = cur.nextSibling ) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return ( name === "input" || name === "button" ) && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {

	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {

		// Only certain elements can match :enabled or :disabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
		if ( "form" in elem ) {

			// Check for inherited disabledness on relevant non-disabled elements:
			// * listed form-associated elements in a disabled fieldset
			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
			// * option elements in a disabled optgroup
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
			// All such elements have a "form" property.
			if ( elem.parentNode && elem.disabled === false ) {

				// Option elements defer to a parent optgroup if present
				if ( "label" in elem ) {
					if ( "label" in elem.parentNode ) {
						return elem.parentNode.disabled === disabled;
					} else {
						return elem.disabled === disabled;
					}
				}

				// Support: IE 6 - 11
				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
				return elem.isDisabled === disabled ||

					// Where there is no isDisabled, check manually
					/* jshint -W018 */
					elem.isDisabled !== !disabled &&
					inDisabledFieldset( elem ) === disabled;
			}

			return elem.disabled === disabled;

		// Try to winnow out elements that can't be disabled before trusting the disabled property.
		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
		// even exist on them, let alone have a boolean value.
		} else if ( "label" in elem ) {
			return elem.disabled === disabled;
		}

		// Remaining elements are neither :enabled nor :disabled
		return false;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction( function( argument ) {
		argument = +argument;
		return markFunction( function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ ( j = matchIndexes[ i ] ) ] ) {
					seed[ j ] = !( matches[ j ] = seed[ j ] );
				}
			}
		} );
	} );
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	var namespace = elem && elem.namespaceURI,
		docElem = elem && ( elem.ownerDocument || elem ).documentElement;

	// Support: IE <=8
	// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes
	// https://bugs.jquery.com/ticket/4833
	return !rhtml.test( namespace || docElem && docElem.nodeName || "HTML" );
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( doc == document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9 - 11+, Edge 12 - 18+
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( preferredDoc != document &&
		( subWindow = document.defaultView ) && subWindow.top !== subWindow ) {

		// Support: IE 11, Edge
		if ( subWindow.addEventListener ) {
			subWindow.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( subWindow.attachEvent ) {
			subWindow.attachEvent( "onunload", unloadHandler );
		}
	}

	// Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,
	// Safari 4 - 5 only, Opera <=11.6 - 12.x only
	// IE/Edge & older browsers don't support the :scope pseudo-class.
	// Support: Safari 6.0 only
	// Safari 6.0 supports :scope but it's an alias of :root there.
	support.scope = assert( function( el ) {
		docElem.appendChild( el ).appendChild( document.createElement( "div" ) );
		return typeof el.querySelectorAll !== "undefined" &&
			!el.querySelectorAll( ":scope fieldset div" ).length;
	} );

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert( function( el ) {
		el.className = "i";
		return !el.getAttribute( "className" );
	} );

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert( function( el ) {
		el.appendChild( document.createComment( "" ) );
		return !el.getElementsByTagName( "*" ).length;
	} );

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert( function( el ) {
		docElem.appendChild( el ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	} );

	// ID filter and find
	if ( support.getById ) {
		Expr.filter[ "ID" ] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute( "id" ) === attrId;
			};
		};
		Expr.find[ "ID" ] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var elem = context.getElementById( id );
				return elem ? [ elem ] : [];
			}
		};
	} else {
		Expr.filter[ "ID" ] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode( "id" );
				return node && node.value === attrId;
			};
		};

		// Support: IE 6 - 7 only
		// getElementById is not reliable as a find shortcut
		Expr.find[ "ID" ] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var node, i, elems,
					elem = context.getElementById( id );

				if ( elem ) {

					// Verify the id attribute
					node = elem.getAttributeNode( "id" );
					if ( node && node.value === id ) {
						return [ elem ];
					}

					// Fall back on getElementsByName
					elems = context.getElementsByName( id );
					i = 0;
					while ( ( elem = elems[ i++ ] ) ) {
						node = elem.getAttributeNode( "id" );
						if ( node && node.value === id ) {
							return [ elem ];
						}
					}
				}

				return [];
			}
		};
	}

	// Tag
	Expr.find[ "TAG" ] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,

				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( ( elem = results[ i++ ] ) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find[ "CLASS" ] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See https://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( ( support.qsa = rnative.test( document.querySelectorAll ) ) ) {

		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert( function( el ) {

			var input;

			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// https://bugs.jquery.com/ticket/12359
			docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( el.querySelectorAll( "[msallowcapture^='']" ).length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !el.querySelectorAll( "[selected]" ).length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push( "~=" );
			}

			// Support: IE 11+, Edge 15 - 18+
			// IE 11/Edge don't find elements on a `[name='']` query in some cases.
			// Adding a temporary attribute to the document before the selection works
			// around the issue.
			// Interestingly, IE 10 & older don't seem to have the issue.
			input = document.createElement( "input" );
			input.setAttribute( "name", "" );
			el.appendChild( input );
			if ( !el.querySelectorAll( "[name='']" ).length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*name" + whitespace + "*=" +
					whitespace + "*(?:''|\"\")" );
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !el.querySelectorAll( ":checked" ).length ) {
				rbuggyQSA.push( ":checked" );
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibling-combinator selector` fails
			if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push( ".#.+[+~]" );
			}

			// Support: Firefox <=3.6 - 5 only
			// Old Firefox doesn't throw on a badly-escaped identifier.
			el.querySelectorAll( "\\\f" );
			rbuggyQSA.push( "[\\r\\n\\f]" );
		} );

		assert( function( el ) {
			el.innerHTML = "<a href='' disabled='disabled'></a>" +
				"<select disabled='disabled'><option/></select>";

			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement( "input" );
			input.setAttribute( "type", "hidden" );
			el.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( el.querySelectorAll( "[name=d]" ).length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( el.querySelectorAll( ":enabled" ).length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: IE9-11+
			// IE's :disabled selector does not pick up the children of disabled fieldsets
			docElem.appendChild( el ).disabled = true;
			if ( el.querySelectorAll( ":disabled" ).length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: Opera 10 - 11 only
			// Opera 10-11 does not throw on post-comma invalid pseudos
			el.querySelectorAll( "*,:x" );
			rbuggyQSA.push( ",.*:" );
		} );
	}

	if ( ( support.matchesSelector = rnative.test( ( matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector ) ) ) ) {

		assert( function( el ) {

			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( el, "*" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( el, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		} );
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join( "|" ) );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join( "|" ) );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			) );
		} :
		function( a, b ) {
			if ( b ) {
				while ( ( b = b.parentNode ) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		// Support: IE 11+, Edge 17 - 18+
		// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
		// two documents; shallow comparisons work.
		// eslint-disable-next-line eqeqeq
		compare = ( a.ownerDocument || a ) == ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			( !support.sortDetached && b.compareDocumentPosition( a ) === compare ) ) {

			// Choose the first element that is related to our preferred document
			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( a == document || a.ownerDocument == preferredDoc &&
				contains( preferredDoc, a ) ) {
				return -1;
			}

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( b == document || b.ownerDocument == preferredDoc &&
				contains( preferredDoc, b ) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {

		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			/* eslint-disable eqeqeq */
			return a == document ? -1 :
				b == document ? 1 :
				/* eslint-enable eqeqeq */
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( ( cur = cur.parentNode ) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( ( cur = cur.parentNode ) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[ i ] === bp[ i ] ) {
			i++;
		}

		return i ?

			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[ i ], bp[ i ] ) :

			// Otherwise nodes in our document sort first
			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			/* eslint-disable eqeqeq */
			ap[ i ] == preferredDoc ? -1 :
			bp[ i ] == preferredDoc ? 1 :
			/* eslint-enable eqeqeq */
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	setDocument( elem );

	if ( support.matchesSelector && documentIsHTML &&
		!nonnativeSelectorCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||

				// As well, disconnected nodes are said to be in a document
				// fragment in IE 9
				elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch ( e ) {
			nonnativeSelectorCache( expr, true );
		}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( context.ownerDocument || context ) != document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( elem.ownerDocument || elem ) != document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],

		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			( val = elem.getAttributeNode( name ) ) && val.specified ?
				val.value :
				null;
};

Sizzle.escape = function( sel ) {
	return ( sel + "" ).replace( rcssescape, fcssescape );
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( ( elem = results[ i++ ] ) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {

		// If no nodeType, this is expected to be an array
		while ( ( node = elem[ i++ ] ) ) {

			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {

		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {

			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}

	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[ 1 ] = match[ 1 ].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[ 3 ] = ( match[ 3 ] || match[ 4 ] ||
				match[ 5 ] || "" ).replace( runescape, funescape );

			if ( match[ 2 ] === "~=" ) {
				match[ 3 ] = " " + match[ 3 ] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {

			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[ 1 ] = match[ 1 ].toLowerCase();

			if ( match[ 1 ].slice( 0, 3 ) === "nth" ) {

				// nth-* requires argument
				if ( !match[ 3 ] ) {
					Sizzle.error( match[ 0 ] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[ 4 ] = +( match[ 4 ] ?
					match[ 5 ] + ( match[ 6 ] || 1 ) :
					2 * ( match[ 3 ] === "even" || match[ 3 ] === "odd" ) );
				match[ 5 ] = +( ( match[ 7 ] + match[ 8 ] ) || match[ 3 ] === "odd" );

				// other types prohibit arguments
			} else if ( match[ 3 ] ) {
				Sizzle.error( match[ 0 ] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[ 6 ] && match[ 2 ];

			if ( matchExpr[ "CHILD" ].test( match[ 0 ] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[ 3 ] ) {
				match[ 2 ] = match[ 4 ] || match[ 5 ] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&

				// Get excess from tokenize (recursively)
				( excess = tokenize( unquoted, true ) ) &&

				// advance to the next closing parenthesis
				( excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length ) ) {

				// excess is a negative index
				match[ 0 ] = match[ 0 ].slice( 0, excess );
				match[ 2 ] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() {
					return true;
				} :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				( pattern = new RegExp( "(^|" + whitespace +
					")" + className + "(" + whitespace + "|$)" ) ) && classCache(
						className, function( elem ) {
							return pattern.test(
								typeof elem.className === "string" && elem.className ||
								typeof elem.getAttribute !== "undefined" &&
									elem.getAttribute( "class" ) ||
								""
							);
				} );
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				/* eslint-disable max-len */

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
				/* eslint-enable max-len */

			};
		},

		"CHILD": function( type, what, _argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, _context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( ( node = node[ dir ] ) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}

								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || ( node[ expando ] = {} );

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								( outerCache[ node.uniqueID ] = {} );

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( ( node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								( diff = nodeIndex = 0 ) || start.pop() ) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {

							// Use previously-cached element index if available
							if ( useCache ) {

								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || ( node[ expando ] = {} );

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									( outerCache[ node.uniqueID ] = {} );

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {

								// Use the same loop as above to seek `elem` from the start
								while ( ( node = ++nodeIndex && node && node[ dir ] ||
									( diff = nodeIndex = 0 ) || start.pop() ) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] ||
												( node[ expando ] = {} );

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												( outerCache[ node.uniqueID ] = {} );

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {

			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction( function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[ i ] );
							seed[ idx ] = !( matches[ idx ] = matched[ i ] );
						}
					} ) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {

		// Potentially complex pseudos
		"not": markFunction( function( selector ) {

			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction( function( seed, matches, _context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( ( elem = unmatched[ i ] ) ) {
							seed[ i ] = !( matches[ i ] = elem );
						}
					}
				} ) :
				function( elem, _context, xml ) {
					input[ 0 ] = elem;
					matcher( input, null, xml, results );

					// Don't keep the element (issue #299)
					input[ 0 ] = null;
					return !results.pop();
				};
		} ),

		"has": markFunction( function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		} ),

		"contains": markFunction( function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;
			};
		} ),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {

			// lang value must be a valid identifier
			if ( !ridentifier.test( lang || "" ) ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( ( elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute( "xml:lang" ) || elem.getAttribute( "lang" ) ) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( ( elem = elem.parentNode ) && elem.nodeType === 1 );
				return false;
			};
		} ),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement &&
				( !document.hasFocus || document.hasFocus() ) &&
				!!( elem.type || elem.href || ~elem.tabIndex );
		},

		// Boolean properties
		"enabled": createDisabledPseudo( false ),
		"disabled": createDisabledPseudo( true ),

		"checked": function( elem ) {

			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return ( nodeName === "input" && !!elem.checked ) ||
				( nodeName === "option" && !!elem.selected );
		},

		"selected": function( elem ) {

			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				// eslint-disable-next-line no-unused-expressions
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {

			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos[ "empty" ]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( ( attr = elem.getAttribute( "type" ) ) == null ||
					attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo( function() {
			return [ 0 ];
		} ),

		"last": createPositionalPseudo( function( _matchIndexes, length ) {
			return [ length - 1 ];
		} ),

		"eq": createPositionalPseudo( function( _matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		} ),

		"even": createPositionalPseudo( function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"odd": createPositionalPseudo( function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"lt": createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i = argument < 0 ?
				argument + length :
				argument > length ?
					length :
					argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"gt": createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} )
	}
};

Expr.pseudos[ "nth" ] = Expr.pseudos[ "eq" ];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || ( match = rcomma.exec( soFar ) ) ) {
			if ( match ) {

				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[ 0 ].length ) || soFar;
			}
			groups.push( ( tokens = [] ) );
		}

		matched = false;

		// Combinators
		if ( ( match = rcombinators.exec( soFar ) ) ) {
			matched = match.shift();
			tokens.push( {
				value: matched,

				// Cast descendant combinators to space
				type: match[ 0 ].replace( rtrim, " " )
			} );
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( ( match = matchExpr[ type ].exec( soFar ) ) && ( !preFilters[ type ] ||
				( match = preFilters[ type ]( match ) ) ) ) {
				matched = match.shift();
				tokens.push( {
					value: matched,
					type: type,
					matches: match
				} );
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :

			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[ i ].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;

	return combinator.first ?

		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( ( elem = elem[ dir ] ) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
			return false;
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || ( elem[ expando ] = {} );

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] ||
							( outerCache[ elem.uniqueID ] = {} );

						if ( skip && skip === elem.nodeName.toLowerCase() ) {
							elem = elem[ dir ] || elem;
						} else if ( ( oldCache = uniqueCache[ key ] ) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return ( newCache[ 2 ] = oldCache[ 2 ] );
						} else {

							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ key ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( ( newCache[ 2 ] = matcher( elem, context, xml ) ) ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[ i ]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[ 0 ];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[ i ], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( ( elem = unmatched[ i ] ) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction( function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts(
				selector || "*",
				context.nodeType ? [ context ] : context,
				[]
			),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?

				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( ( elem = temp[ i ] ) ) {
					matcherOut[ postMap[ i ] ] = !( matcherIn[ postMap[ i ] ] = elem );
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {

					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( ( elem = matcherOut[ i ] ) ) {

							// Restore matcherIn since elem is not yet a final match
							temp.push( ( matcherIn[ i ] = elem ) );
						}
					}
					postFinder( null, ( matcherOut = [] ), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( ( elem = matcherOut[ i ] ) &&
						( temp = postFinder ? indexOf( seed, elem ) : preMap[ i ] ) > -1 ) {

						seed[ temp ] = !( results[ temp ] = elem );
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	} );
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[ 0 ].type ],
		implicitRelative = leadingRelative || Expr.relative[ " " ],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				( checkContext = context ).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );

			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( ( matcher = Expr.relative[ tokens[ i ].type ] ) ) {
			matchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];
		} else {
			matcher = Expr.filter[ tokens[ i ].type ].apply( null, tokens[ i ].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {

				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[ j ].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(

					// If the preceding token was a descendant combinator, insert an implicit any-element `*`
					tokens
						.slice( 0, i - 1 )
						.concat( { value: tokens[ i - 2 ].type === " " ? "*" : "" } )
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( ( tokens = tokens.slice( j ) ) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,

				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find[ "TAG" ]( "*", outermost ),

				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = ( dirruns += contextBackup == null ? 1 : Math.random() || 0.1 ),
				len = elems.length;

			if ( outermost ) {

				// Support: IE 11+, Edge 17 - 18+
				// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
				// two documents; shallow comparisons work.
				// eslint-disable-next-line eqeqeq
				outermostContext = context == document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && ( elem = elems[ i ] ) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;

					// Support: IE 11+, Edge 17 - 18+
					// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
					// two documents; shallow comparisons work.
					// eslint-disable-next-line eqeqeq
					if ( !context && elem.ownerDocument != document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( ( matcher = elementMatchers[ j++ ] ) ) {
						if ( matcher( elem, context || document, xml ) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {

					// They will have gone through all possible matchers
					if ( ( elem = !matcher && elem ) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( ( matcher = setMatchers[ j++ ] ) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {

					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !( unmatched[ i ] || setMatched[ i ] ) ) {
								setMatched[ i ] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {

		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[ i ] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache(
			selector,
			matcherFromGroupMatchers( elementMatchers, setMatchers )
		);

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( ( selector = compiled.selector || selector ) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[ 0 ] = match[ 0 ].slice( 0 );
		if ( tokens.length > 2 && ( token = tokens[ 0 ] ).type === "ID" &&
			context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[ 1 ].type ] ) {

			context = ( Expr.find[ "ID" ]( token.matches[ 0 ]
				.replace( runescape, funescape ), context ) || [] )[ 0 ];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr[ "needsContext" ].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[ i ];

			// Abort if we hit a combinator
			if ( Expr.relative[ ( type = token.type ) ] ) {
				break;
			}
			if ( ( find = Expr.find[ type ] ) ) {

				// Search, expanding context for leading sibling combinators
				if ( ( seed = find(
					token.matches[ 0 ].replace( runescape, funescape ),
					rsibling.test( tokens[ 0 ].type ) && testContext( context.parentNode ) ||
						context
				) ) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split( "" ).sort( sortOrder ).join( "" ) === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert( function( el ) {

	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement( "fieldset" ) ) & 1;
} );

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert( function( el ) {
	el.innerHTML = "<a href='#'></a>";
	return el.firstChild.getAttribute( "href" ) === "#";
} ) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	} );
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert( function( el ) {
	el.innerHTML = "<input/>";
	el.firstChild.setAttribute( "value", "" );
	return el.firstChild.getAttribute( "value" ) === "";
} ) ) {
	addHandle( "value", function( elem, _name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	} );
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert( function( el ) {
	return el.getAttribute( "disabled" ) == null;
} ) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
				( val = elem.getAttributeNode( name ) ) && val.specified ?
					val.value :
					null;
		}
	} );
}

return Sizzle;

} )( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;

// Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;
jQuery.escapeSelector = Sizzle.escape;




var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;



function nodeName( elem, name ) {

	return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();

}
var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) !== not;
		} );
	}

	// Single element
	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );
	}

	// Arraylike of elements (jQuery, arguments, Array)
	if ( typeof qualifier !== "string" ) {
		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}

	// Filtered directly for both simple and complex selectors
	return jQuery.filter( qualifier, elements, not );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	if ( elems.length === 1 && elem.nodeType === 1 ) {
		return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
	}

	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
		return elem.nodeType === 1;
	} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i, ret,
			len = this.length,
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		ret = this.pushStack( [] );

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	// Shortcut simple #id case for speed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					if ( elem ) {

						// Inject the element directly into the jQuery object
						this[ 0 ] = elem;
						this.length = 1;
					}
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			targets = typeof selectors !== "string" && jQuery( selectors );

		// Positional selectors never match, since there's no _selection_ context
		if ( !rneedsContext.test( selectors ) ) {
			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( targets ?
						targets.index( cur ) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, _i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, _i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, _i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
		if ( elem.contentDocument != null &&

			// Support: IE 11+
			// <object> elements with no `data` attribute has an object
			// `contentDocument` with a `null` prototype.
			getProto( elem.contentDocument ) ) {

			return elem.contentDocument;
		}

		// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
		// Treat the template element as a regular one in browsers that
		// don't support it.
		if ( nodeName( elem, "template" ) ) {
			elem = elem.content || elem;
		}

		return jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = locked || options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && toType( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory && !firing ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}

function adoptValue( value, resolve, reject, noValue ) {
	var method;

	try {

		// Check for promise aspect first to privilege synchronous behavior
		if ( value && isFunction( ( method = value.promise ) ) ) {
			method.call( value ).done( resolve ).fail( reject );

		// Other thenables
		} else if ( value && isFunction( ( method = value.then ) ) ) {
			method.call( value, resolve, reject );

		// Other non-thenables
		} else {

			// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
			// * false: [ value ].slice( 0 ) => resolve( value )
			// * true: [ value ].slice( 1 ) => resolve()
			resolve.apply( undefined, [ value ].slice( noValue ) );
		}

	// For Promises/A+, convert exceptions into rejections
	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
	// Deferred#then to conditionally suppress rejection.
	} catch ( value ) {

		// Support: Android 4.0 only
		// Strict mode functions invoked without .call/.apply get global-object context
		reject.apply( undefined, [ value ] );
	}
}

jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				[ "notify", "progress", jQuery.Callbacks( "memory" ),
					jQuery.Callbacks( "memory" ), 2 ],
				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				"catch": function( fn ) {
					return promise.then( null, fn );
				},

				// Keep pipe for back-compat
				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;

					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( _i, tuple ) {

							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
							var fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

							// deferred.progress(function() { bind to newDefer or newDefer.notify })
							// deferred.done(function() { bind to newDefer or newDefer.resolve })
							// deferred.fail(function() { bind to newDefer or newDefer.reject })
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},
				then: function( onFulfilled, onRejected, onProgress ) {
					var maxDepth = 0;
					function resolve( depth, deferred, handler, special ) {
						return function() {
							var that = this,
								args = arguments,
								mightThrow = function() {
									var returned, then;

									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if ( depth < maxDepth ) {
										return;
									}

									returned = handler.apply( that, args );

									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if ( returned === deferred.promise() ) {
										throw new TypeError( "Thenable self-resolution" );
									}

									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned &&

										// Support: Promises/A+ section 2.3.4
										// https://promisesaplus.com/#point-64
										// Only check objects and functions for thenability
										( typeof returned === "object" ||
											typeof returned === "function" ) &&
										returned.then;

									// Handle a returned thenable
									if ( isFunction( then ) ) {

										// Special processors (notify) just wait for resolution
										if ( special ) {
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special )
											);

										// Normal processors (resolve) also hook into progress
										} else {

											// ...and disregard older resolution values
											maxDepth++;

											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special ),
												resolve( maxDepth, deferred, Identity,
													deferred.notifyWith )
											);
										}

									// Handle all other returned values
									} else {

										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if ( handler !== Identity ) {
											that = undefined;
											args = [ returned ];
										}

										// Process the value(s)
										// Default process is resolve
										( special || deferred.resolveWith )( that, args );
									}
								},

								// Only normal processors (resolve) catch and reject exceptions
								process = special ?
									mightThrow :
									function() {
										try {
											mightThrow();
										} catch ( e ) {

											if ( jQuery.Deferred.exceptionHook ) {
												jQuery.Deferred.exceptionHook( e,
													process.stackTrace );
											}

											// Support: Promises/A+ section 2.3.3.3.4.1
											// https://promisesaplus.com/#point-61
											// Ignore post-resolution exceptions
											if ( depth + 1 >= maxDepth ) {

												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Thrower ) {
													that = undefined;
													args = [ e ];
												}

												deferred.rejectWith( that, args );
											}
										}
									};

							// Support: Promises/A+ section 2.3.3.3.1
							// https://promisesaplus.com/#point-57
							// Re-resolve promises immediately to dodge false rejection from
							// subsequent errors
							if ( depth ) {
								process();
							} else {

								// Call an optional hook to record the stack, in case of exception
								// since it's otherwise lost when execution goes async
								if ( jQuery.Deferred.getStackHook ) {
									process.stackTrace = jQuery.Deferred.getStackHook();
								}
								window.setTimeout( process );
							}
						};
					}

					return jQuery.Deferred( function( newDefer ) {

						// progress_handlers.add( ... )
						tuples[ 0 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onProgress ) ?
									onProgress :
									Identity,
								newDefer.notifyWith
							)
						);

						// fulfilled_handlers.add( ... )
						tuples[ 1 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onFulfilled ) ?
									onFulfilled :
									Identity
							)
						);

						// rejected_handlers.add( ... )
						tuples[ 2 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onRejected ) ?
									onRejected :
									Thrower
							)
						);
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 5 ];

			// promise.progress = list.add
			// promise.done = list.add
			// promise.fail = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(
					function() {

						// state = "resolved" (i.e., fulfilled)
						// state = "rejected"
						state = stateString;
					},

					// rejected_callbacks.disable
					// fulfilled_callbacks.disable
					tuples[ 3 - i ][ 2 ].disable,

					// rejected_handlers.disable
					// fulfilled_handlers.disable
					tuples[ 3 - i ][ 3 ].disable,

					// progress_callbacks.lock
					tuples[ 0 ][ 2 ].lock,

					// progress_handlers.lock
					tuples[ 0 ][ 3 ].lock
				);
			}

			// progress_handlers.fire
			// fulfilled_handlers.fire
			// rejected_handlers.fire
			list.add( tuple[ 3 ].fire );

			// deferred.notify = function() { deferred.notifyWith(...) }
			// deferred.resolve = function() { deferred.resolveWith(...) }
			// deferred.reject = function() { deferred.rejectWith(...) }
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
				return this;
			};

			// deferred.notifyWith = list.fireWith
			// deferred.resolveWith = list.fireWith
			// deferred.rejectWith = list.fireWith
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( singleValue ) {
		var

			// count of uncompleted subordinates
			remaining = arguments.length,

			// count of unprocessed arguments
			i = remaining,

			// subordinate fulfillment data
			resolveContexts = Array( i ),
			resolveValues = slice.call( arguments ),

			// the primary Deferred
			primary = jQuery.Deferred(),

			// subordinate callback factory
			updateFunc = function( i ) {
				return function( value ) {
					resolveContexts[ i ] = this;
					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( !( --remaining ) ) {
						primary.resolveWith( resolveContexts, resolveValues );
					}
				};
			};

		// Single- and empty arguments are adopted like Promise.resolve
		if ( remaining <= 1 ) {
			adoptValue( singleValue, primary.done( updateFunc( i ) ).resolve, primary.reject,
				!remaining );

			// Use .then() to unwrap secondary thenables (cf. gh-3000)
			if ( primary.state() === "pending" ||
				isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

				return primary.then();
			}
		}

		// Multiple arguments are aggregated like Promise.all array elements
		while ( i-- ) {
			adoptValue( resolveValues[ i ], updateFunc( i ), primary.reject );
		}

		return primary.promise();
	}
} );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

jQuery.Deferred.exceptionHook = function( error, stack ) {

	// Support: IE 8 - 9 only
	// Console exists when dev tools are open, which can happen at any time
	if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
		window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
	}
};




jQuery.readyException = function( error ) {
	window.setTimeout( function() {
		throw error;
	} );
};




// The deferred used on DOM ready
var readyList = jQuery.Deferred();

jQuery.fn.ready = function( fn ) {

	readyList
		.then( fn )

		// Wrap jQuery.readyException in a function so that the lookup
		// happens at the time of error handling instead of callback
		// registration.
		.catch( function( error ) {
			jQuery.readyException( error );
		} );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );
	}
} );

jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if ( document.readyState === "complete" ||
	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

	// Handle it asynchronously to allow scripts the opportunity to delay ready
	window.setTimeout( jQuery.ready );

} else {

	// Use the handy event callback
	document.addEventListener( "DOMContentLoaded", completed );

	// A fallback to window.onload, that will always work
	window.addEventListener( "load", completed );
}




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( toType( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, _key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
						value :
						value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	if ( chainable ) {
		return elems;
	}

	// Gets
	if ( bulk ) {
		return fn.call( elems );
	}

	return len ? fn( elems[ 0 ], key ) : emptyGet;
};


// Matches dashed string for camelizing
var rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g;

// Used by camelCase as callback to replace()
function fcamelCase( _all, letter ) {
	return letter.toUpperCase();
}

// Convert dashed to camelCase; used by the css and data modules
// Support: IE <=9 - 11, Edge 12 - 15
// Microsoft forgot to hump their vendor prefix (#9572)
function camelCase( string ) {
	return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
}
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	cache: function( owner ) {

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		// Always use camelCase key (gh-2257)
		if ( typeof data === "string" ) {
			cache[ camelCase( data ) ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ camelCase( prop ) ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :

			// Always use camelCase key (gh-2257)
			owner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];
	},
	access: function( owner, key, value ) {

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			return this.get( owner, key );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key !== undefined ) {

			// Support array or space separated string of keys
			if ( Array.isArray( key ) ) {

				// If key is an array of keys...
				// We always set camelCase keys, so remove that.
				key = key.map( camelCase );
			} else {
				key = camelCase( key );

				// If a key with the spaces exists, use it.
				// Otherwise, create an array by matching non-whitespace
				key = key in cache ?
					[ key ] :
					( key.match( rnothtmlwhite ) || [] );
			}

			i = key.length;

			while ( i-- ) {
				delete cache[ key[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <=35 - 45
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function getData( data ) {
	if ( data === "true" ) {
		return true;
	}

	if ( data === "false" ) {
		return false;
	}

	if ( data === "null" ) {
		return null;
	}

	// Only convert to a number if it doesn't change the string
	if ( data === +data + "" ) {
		return +data;
	}

	if ( rbrace.test( data ) ) {
		return JSON.parse( data );
	}

	return data;
}

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = getData( data );
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE 11 only
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// The key will always be camelCased in Data
				data = dataUser.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each( function() {

				// We always store the camelCased key
				dataUser.set( this, key, value );
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || Array.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var documentElement = document.documentElement;



	var isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem );
		},
		composed = { composed: true };

	// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only
	// Check attachment across shadow DOM boundaries when possible (gh-3504)
	// Support: iOS 10.0-10.2 only
	// Early iOS 10 versions support `attachShadow` but not `getRootNode`,
	// leading to errors. We need to check for `getRootNode`.
	if ( documentElement.getRootNode ) {
		isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem ) ||
				elem.getRootNode( composed ) === elem.ownerDocument;
		};
	}
var isHiddenWithinTree = function( elem, el ) {

		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;

		// Inline style trumps all
		return elem.style.display === "none" ||
			elem.style.display === "" &&

			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			isAttached( elem ) &&

			jQuery.css( elem, "display" ) === "none";
	};



function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted, scale,
		maxIterations = 20,
		currentValue = tween ?
			function() {
				return tween.cur();
			} :
			function() {
				return jQuery.css( elem, prop, "" );
			},
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = elem.nodeType &&
			( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Support: Firefox <=54
		// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
		initial = initial / 2;

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		while ( maxIterations-- ) {

			// Evaluate and update our best guess (doubling guesses that zero out).
			// Finish if the scale equals or crosses 1 (making the old*new product non-positive).
			jQuery.style( elem, prop, initialInUnit + unit );
			if ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {
				maxIterations = 0;
			}
			initialInUnit = initialInUnit / scale;

		}

		initialInUnit = initialInUnit * 2;
		jQuery.style( elem, prop, initialInUnit + unit );

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


var defaultDisplayMap = {};

function getDefaultDisplay( elem ) {
	var temp,
		doc = elem.ownerDocument,
		nodeName = elem.nodeName,
		display = defaultDisplayMap[ nodeName ];

	if ( display ) {
		return display;
	}

	temp = doc.body.appendChild( doc.createElement( nodeName ) );
	display = jQuery.css( temp, "display" );

	temp.parentNode.removeChild( temp );

	if ( display === "none" ) {
		display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;

	return display;
}

function showHide( elements, show ) {
	var display, elem,
		values = [],
		index = 0,
		length = elements.length;

	// Determine new display value for elements that need to change
	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		display = elem.style.display;
		if ( show ) {

			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
			// check is required in this first loop unless we have a nonempty display value (either
			// inline or about-to-be-restored)
			if ( display === "none" ) {
				values[ index ] = dataPriv.get( elem, "display" ) || null;
				if ( !values[ index ] ) {
					elem.style.display = "";
				}
			}
			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
				values[ index ] = getDefaultDisplay( elem );
			}
		} else {
			if ( display !== "none" ) {
				values[ index ] = "none";

				// Remember what we're overwriting
				dataPriv.set( elem, "display", display );
			}
		}
	}

	// Set the display of the elements in a second loop to avoid constant reflow
	for ( index = 0; index < length; index++ ) {
		if ( values[ index ] != null ) {
			elements[ index ].style.display = values[ index ];
		}
	}

	return elements;
}

jQuery.fn.extend( {
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHiddenWithinTree( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]*)/i );

var rscriptType = ( /^$|^module$|\/(?:java|ecma)script/i );



( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0 - 4.3 only
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Android <=4.1 only
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE <=11 only
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;

	// Support: IE <=9 only
	// IE <=9 replaces <option> tags with their contents when inserted outside of
	// the select element.
	div.innerHTML = "<option></option>";
	support.option = !!div.lastChild;
} )();


// We have to close these tags to support XHTML (#13200)
var wrapMap = {

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

// Support: IE <=9 only
if ( !support.option ) {
	wrapMap.optgroup = wrapMap.option = [ 1, "<select multiple='multiple'>", "</select>" ];
}


function getAll( context, tag ) {

	// Support: IE <=9 - 11 only
	// Use typeof to avoid zero-argument method invocation on host objects (#15151)
	var ret;

	if ( typeof context.getElementsByTagName !== "undefined" ) {
		ret = context.getElementsByTagName( tag || "*" );

	} else if ( typeof context.querySelectorAll !== "undefined" ) {
		ret = context.querySelectorAll( tag || "*" );

	} else {
		ret = [];
	}

	if ( tag === undefined || tag && nodeName( context, tag ) ) {
		return jQuery.merge( [ context ], ret );
	}

	return ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, attached, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( toType( elem ) === "object" ) {

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (#12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		attached = isAttached( elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( attached ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


var rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE <=9 - 11+
// focus() and blur() are asynchronous, except when they are no-op.
// So expect focus to be synchronous when the element is already active,
// and blur to be synchronous when the element is not already active.
// (focus and blur are always synchronous in other supported browsers,
// this just defines when we can count on it).
function expectSync( elem, type ) {
	return ( elem === safeActiveElement() ) === ( type === "focus" );
}

// Support: IE <=9 only
// Accessing document.activeElement can throw unexpectedly
// https://bugs.jquery.com/ticket/13393
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Only attach events to objects that accept data
		if ( !acceptData( elem ) ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Ensure that invalid selectors throw exceptions at attach time
		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
		if ( selector ) {
			jQuery.find.matchesSelector( documentElement, selector );
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = Object.create( null );
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( nativeEvent ) {

		var i, j, ret, matched, handleObj, handlerQueue,
			args = new Array( arguments.length ),

			// Make a writable jQuery.Event from the native event object
			event = jQuery.event.fix( nativeEvent ),

			handlers = (
				dataPriv.get( this, "events" ) || Object.create( null )
			)[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;

		for ( i = 1; i < arguments.length; i++ ) {
			args[ i ] = arguments[ i ];
		}

		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// If the event is namespaced, then each handler is only invoked if it is
				// specially universal or its namespaces are a superset of the event's.
				if ( !event.rnamespace || handleObj.namespace === false ||
					event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, handleObj, sel, matchedHandlers, matchedSelectors,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		if ( delegateCount &&

			// Support: IE <=9
			// Black-hole SVG <use> instance trees (trac-13180)
			cur.nodeType &&

			// Support: Firefox <=42
			// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
			// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
			// Support: IE 11 only
			// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
			!( event.type === "click" && event.button >= 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
					matchedHandlers = [];
					matchedSelectors = {};
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matchedSelectors[ sel ] === undefined ) {
							matchedSelectors[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matchedSelectors[ sel ] ) {
							matchedHandlers.push( handleObj );
						}
					}
					if ( matchedHandlers.length ) {
						handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		cur = this;
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	addProp: function( name, hook ) {
		Object.defineProperty( jQuery.Event.prototype, name, {
			enumerable: true,
			configurable: true,

			get: isFunction( hook ) ?
				function() {
					if ( this.originalEvent ) {
						return hook( this.originalEvent );
					}
				} :
				function() {
					if ( this.originalEvent ) {
						return this.originalEvent[ name ];
					}
				},

			set: function( value ) {
				Object.defineProperty( this, name, {
					enumerable: true,
					configurable: true,
					writable: true,
					value: value
				} );
			}
		} );
	},

	fix: function( originalEvent ) {
		return originalEvent[ jQuery.expando ] ?
			originalEvent :
			new jQuery.Event( originalEvent );
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		click: {

			// Utilize native event to ensure correct state for checkable inputs
			setup: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Claim the first handler
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					// dataPriv.set( el, "click", ... )
					leverageNative( el, "click", returnTrue );
				}

				// Return false to allow normal processing in the caller
				return false;
			},
			trigger: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Force setup before triggering a click
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					leverageNative( el, "click" );
				}

				// Return non-false to allow normal event-path propagation
				return true;
			},

			// For cross-browser consistency, suppress native .click() on links
			// Also prevent it if we're currently inside a leveraged native-event stack
			_default: function( event ) {
				var target = event.target;
				return rcheckableType.test( target.type ) &&
					target.click && nodeName( target, "input" ) &&
					dataPriv.get( target, "click" ) ||
					nodeName( target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

// Ensure the presence of an event listener that handles manually-triggered
// synthetic events by interrupting progress until reinvoked in response to
// *native* events that it fires directly, ensuring that state changes have
// already occurred before other listeners are invoked.
function leverageNative( el, type, expectSync ) {

	// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add
	if ( !expectSync ) {
		if ( dataPriv.get( el, type ) === undefined ) {
			jQuery.event.add( el, type, returnTrue );
		}
		return;
	}

	// Register the controller as a special universal handler for all event namespaces
	dataPriv.set( el, type, false );
	jQuery.event.add( el, type, {
		namespace: false,
		handler: function( event ) {
			var notAsync, result,
				saved = dataPriv.get( this, type );

			if ( ( event.isTrigger & 1 ) && this[ type ] ) {

				// Interrupt processing of the outer synthetic .trigger()ed event
				// Saved data should be false in such cases, but might be a leftover capture object
				// from an async native handler (gh-4350)
				if ( !saved.length ) {

					// Store arguments for use when handling the inner native event
					// There will always be at least one argument (an event object), so this array
					// will not be confused with a leftover capture object.
					saved = slice.call( arguments );
					dataPriv.set( this, type, saved );

					// Trigger the native event and capture its result
					// Support: IE <=9 - 11+
					// focus() and blur() are asynchronous
					notAsync = expectSync( this, type );
					this[ type ]();
					result = dataPriv.get( this, type );
					if ( saved !== result || notAsync ) {
						dataPriv.set( this, type, false );
					} else {
						result = {};
					}
					if ( saved !== result ) {

						// Cancel the outer synthetic event
						event.stopImmediatePropagation();
						event.preventDefault();

						// Support: Chrome 86+
						// In Chrome, if an element having a focusout handler is blurred by
						// clicking outside of it, it invokes the handler synchronously. If
						// that handler calls `.remove()` on the element, the data is cleared,
						// leaving `result` undefined. We need to guard against this.
						return result && result.value;
					}

				// If this is an inner synthetic event for an event with a bubbling surrogate
				// (focus or blur), assume that the surrogate already propagated from triggering the
				// native event and prevent that from happening again here.
				// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the
				// bubbling surrogate propagates *after* the non-bubbling base), but that seems
				// less bad than duplication.
				} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {
					event.stopPropagation();
				}

			// If this is a native event triggered above, everything is now in order
			// Fire an inner synthetic event with the original arguments
			} else if ( saved.length ) {

				// ...and capture the result
				dataPriv.set( this, type, {
					value: jQuery.event.trigger(

						// Support: IE <=9 - 11+
						// Extend with the prototype to reset the above stopImmediatePropagation()
						jQuery.extend( saved[ 0 ], jQuery.Event.prototype ),
						saved.slice( 1 ),
						this
					)
				} );

				// Abort handling of the native event
				event.stopImmediatePropagation();
			}
		}
	} );
}

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android <=2.3 only
				src.returnValue === false ?
			returnTrue :
			returnFalse;

		// Create target properties
		// Support: Safari <=6 - 7 only
		// Target should not be a text node (#504, #13143)
		this.target = ( src.target && src.target.nodeType === 3 ) ?
			src.target.parentNode :
			src.target;

		this.currentTarget = src.currentTarget;
		this.relatedTarget = src.relatedTarget;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || Date.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bubbles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	code: true,
	charCode: true,
	key: true,
	keyCode: true,
	button: true,
	buttons: true,
	clientX: true,
	clientY: true,
	offsetX: true,
	offsetY: true,
	pointerId: true,
	pointerType: true,
	screenX: true,
	screenY: true,
	targetTouches: true,
	toElement: true,
	touches: true,
	which: true
}, jQuery.event.addProp );

jQuery.each( { focus: "focusin", blur: "focusout" }, function( type, delegateType ) {
	jQuery.event.special[ type ] = {

		// Utilize native event if possible so blur/focus sequence is correct
		setup: function() {

			// Claim the first handler
			// dataPriv.set( this, "focus", ... )
			// dataPriv.set( this, "blur", ... )
			leverageNative( this, type, expectSync );

			// Return false to allow normal processing in the caller
			return false;
		},
		trigger: function() {

			// Force setup before trigger
			leverageNative( this, type );

			// Return non-false to allow normal event-path propagation
			return true;
		},

		// Suppress native focus or blur as it's already being fired
		// in leverageNative.
		_default: function() {
			return true;
		},

		delegateType: delegateType
	};
} );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var

	// Support: IE <=10 - 11, Edge 12 - 13 only
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

// Prefer a tbody over its parent table for containing new rows
function manipulationTarget( elem, content ) {
	if ( nodeName( elem, "table" ) &&
		nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

		return jQuery( elem ).children( "tbody" )[ 0 ] || elem;
	}

	return elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	if ( ( elem.type || "" ).slice( 0, 5 ) === "true/" ) {
		elem.type = elem.type.slice( 5 );
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.get( src );
		events = pdataOld.events;

		if ( events ) {
			dataPriv.remove( dest, "handle events" );

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = flat( args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		valueIsFunction = isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( valueIsFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( valueIsFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src && ( node.type || "" ).toLowerCase()  !== "module" ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl && !node.noModule ) {
								jQuery._evalUrl( node.src, {
									nonce: node.nonce || node.getAttribute( "nonce" )
								}, doc );
							}
						} else {
							DOMEval( node.textContent.replace( rcleanScript, "" ), node, doc );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && isAttached( node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html;
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = isAttached( elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {
	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: Android <=4.0 only, PhantomJS 1 only
			// .get() because push.apply(_, arraylike) throws on ancient WebKit
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );
var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {

		// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};

var swap = function( elem, options, callback ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.call( elem );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};


var rboxStyle = new RegExp( cssExpand.join( "|" ), "i" );



( function() {

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {

		// This is a singleton, we need to execute it only once
		if ( !div ) {
			return;
		}

		container.style.cssText = "position:absolute;left:-11111px;width:60px;" +
			"margin-top:1px;padding:0;border:0";
		div.style.cssText =
			"position:relative;display:block;box-sizing:border-box;overflow:scroll;" +
			"margin:auto;border:1px;padding:1px;" +
			"width:60%;top:1%";
		documentElement.appendChild( container ).appendChild( div );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";

		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
		reliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;

		// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
		// Some styles come back with percentage values, even though they shouldn't
		div.style.right = "60%";
		pixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;

		// Support: IE 9 - 11 only
		// Detect misreporting of content dimensions for box-sizing:border-box elements
		boxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;

		// Support: IE 9 only
		// Detect overflow:scroll screwiness (gh-3699)
		// Support: Chrome <=64
		// Don't get tricked when zoom affects offsetWidth (gh-4029)
		div.style.position = "absolute";
		scrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;

		documentElement.removeChild( container );

		// Nullify the div so it wouldn't be stored in the memory and
		// it will also be a sign that checks already performed
		div = null;
	}

	function roundPixelMeasures( measure ) {
		return Math.round( parseFloat( measure ) );
	}

	var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,
		reliableTrDimensionsVal, reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE <=9 - 11 only
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	jQuery.extend( support, {
		boxSizingReliable: function() {
			computeStyleTests();
			return boxSizingReliableVal;
		},
		pixelBoxStyles: function() {
			computeStyleTests();
			return pixelBoxStylesVal;
		},
		pixelPosition: function() {
			computeStyleTests();
			return pixelPositionVal;
		},
		reliableMarginLeft: function() {
			computeStyleTests();
			return reliableMarginLeftVal;
		},
		scrollboxSize: function() {
			computeStyleTests();
			return scrollboxSizeVal;
		},

		// Support: IE 9 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Behavior in IE 9 is more subtle than in newer versions & it passes
		// some versions of this test; make sure not to make it pass there!
		//
		// Support: Firefox 70+
		// Only Firefox includes border widths
		// in computed dimensions. (gh-4529)
		reliableTrDimensions: function() {
			var table, tr, trChild, trStyle;
			if ( reliableTrDimensionsVal == null ) {
				table = document.createElement( "table" );
				tr = document.createElement( "tr" );
				trChild = document.createElement( "div" );

				table.style.cssText = "position:absolute;left:-11111px;border-collapse:separate";
				tr.style.cssText = "border:1px solid";

				// Support: Chrome 86+
				// Height set through cssText does not get applied.
				// Computed height then comes back as 0.
				tr.style.height = "1px";
				trChild.style.height = "9px";

				// Support: Android 8 Chrome 86+
				// In our bodyBackground.html iframe,
				// display for all div elements is set to "inline",
				// which causes a problem only in Android 8 Chrome 86.
				// Ensuring the div is display: block
				// gets around this issue.
				trChild.style.display = "block";

				documentElement
					.appendChild( table )
					.appendChild( tr )
					.appendChild( trChild );

				trStyle = window.getComputedStyle( tr );
				reliableTrDimensionsVal = ( parseInt( trStyle.height, 10 ) +
					parseInt( trStyle.borderTopWidth, 10 ) +
					parseInt( trStyle.borderBottomWidth, 10 ) ) === tr.offsetHeight;

				documentElement.removeChild( table );
			}
			return reliableTrDimensionsVal;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,

		// Support: Firefox 51+
		// Retrieving style before computed somehow
		// fixes an issue with getting wrong values
		// on detached elements
		style = elem.style;

	computed = computed || getStyles( elem );

	// getPropertyValue is needed for:
	//   .css('filter') (IE 9 only, #12537)
	//   .css('--customProperty) (#3144)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];

		if ( ret === "" && !isAttached( elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// https://drafts.csswg.org/cssom/#resolved-values
		if ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE <=9 - 11 only
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var cssPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style,
	vendorProps = {};

// Return a vendor-prefixed property or undefined
function vendorPropName( name ) {

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

// Return a potentially-mapped jQuery.cssProps or vendor prefixed property
function finalPropName( name ) {
	var final = jQuery.cssProps[ name ] || vendorProps[ name ];

	if ( final ) {
		return final;
	}
	if ( name in emptyStyle ) {
		return name;
	}
	return vendorProps[ name ] = vendorPropName( name ) || name;
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rcustomProp = /^--/,
	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	};

function setPositiveNumber( _elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {
	var i = dimension === "width" ? 1 : 0,
		extra = 0,
		delta = 0;

	// Adjustment may not be necessary
	if ( box === ( isBorderBox ? "border" : "content" ) ) {
		return 0;
	}

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin
		if ( box === "margin" ) {
			delta += jQuery.css( elem, box + cssExpand[ i ], true, styles );
		}

		// If we get here with a content-box, we're seeking "padding" or "border" or "margin"
		if ( !isBorderBox ) {

			// Add padding
			delta += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// For "border" or "margin", add border
			if ( box !== "padding" ) {
				delta += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );

			// But still keep track of it otherwise
			} else {
				extra += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}

		// If we get here with a border-box (content + padding + border), we're seeking "content" or
		// "padding" or "margin"
		} else {

			// For "content", subtract padding
			if ( box === "content" ) {
				delta -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// For "content" or "padding", subtract border
			if ( box !== "margin" ) {
				delta -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	// Account for positive content-box scroll gutter when requested by providing computedVal
	if ( !isBorderBox && computedVal >= 0 ) {

		// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
		// Assuming integer scroll gutter, subtract the rest and round down
		delta += Math.max( 0, Math.ceil(
			elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
			computedVal -
			delta -
			extra -
			0.5

		// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter
		// Use an explicit zero to avoid NaN (gh-3964)
		) ) || 0;
	}

	return delta;
}

function getWidthOrHeight( elem, dimension, extra ) {

	// Start with computed style
	var styles = getStyles( elem ),

		// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).
		// Fake content-box until we know it's needed to know the true value.
		boxSizingNeeded = !support.boxSizingReliable() || extra,
		isBorderBox = boxSizingNeeded &&
			jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
		valueIsBorderBox = isBorderBox,

		val = curCSS( elem, dimension, styles ),
		offsetProp = "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );

	// Support: Firefox <=54
	// Return a confounding non-pixel value or feign ignorance, as appropriate.
	if ( rnumnonpx.test( val ) ) {
		if ( !extra ) {
			return val;
		}
		val = "auto";
	}


	// Support: IE 9 - 11 only
	// Use offsetWidth/offsetHeight for when box sizing is unreliable.
	// In those cases, the computed value can be trusted to be border-box.
	if ( ( !support.boxSizingReliable() && isBorderBox ||

		// Support: IE 10 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Interestingly, in some cases IE 9 doesn't suffer from this issue.
		!support.reliableTrDimensions() && nodeName( elem, "tr" ) ||

		// Fall back to offsetWidth/offsetHeight when value is "auto"
		// This happens for inline elements with no explicit setting (gh-3571)
		val === "auto" ||

		// Support: Android <=4.1 - 4.3 only
		// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
		!parseFloat( val ) && jQuery.css( elem, "display", false, styles ) === "inline" ) &&

		// Make sure the element is visible & connected
		elem.getClientRects().length ) {

		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

		// Where available, offsetWidth/offsetHeight approximate border box dimensions.
		// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the
		// retrieved value as a content box dimension.
		valueIsBorderBox = offsetProp in elem;
		if ( valueIsBorderBox ) {
			val = elem[ offsetProp ];
		}
	}

	// Normalize "" and auto
	val = parseFloat( val ) || 0;

	// Adjust for the element's box model
	return ( val +
		boxModelAdjustment(
			elem,
			dimension,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles,

			// Provide the current computed size to request scroll gutter calculation (gh-3589)
			val
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"gridArea": true,
		"gridColumn": true,
		"gridColumnEnd": true,
		"gridColumnStart": true,
		"gridRow": true,
		"gridRowEnd": true,
		"gridRowStart": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name ),
			style = elem.style;

		// Make sure that we're working with the right name. We don't
		// want to query the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append
			// "px" to a few hardcoded values.
			if ( type === "number" && !isCustomProp ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				if ( isCustomProp ) {
					style.setProperty( name, value );
				} else {
					style[ name ] = value;
				}
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name );

		// Make sure that we're working with the right name. We don't
		// want to modify the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}

		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( _i, dimension ) {
	jQuery.cssHooks[ dimension ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

					// Support: Safari 8+
					// Table columns in Safari have non-zero offsetWidth & zero
					// getBoundingClientRect().width unless display is changed.
					// Support: IE <=11 only
					// Running getBoundingClientRect on a disconnected node
					// in IE throws an error.
					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
					swap( elem, cssShow, function() {
						return getWidthOrHeight( elem, dimension, extra );
					} ) :
					getWidthOrHeight( elem, dimension, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = getStyles( elem ),

				// Only read styles.position if the test has a chance to fail
				// to avoid forcing a reflow.
				scrollboxSizeBuggy = !support.scrollboxSize() &&
					styles.position === "absolute",

				// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)
				boxSizingNeeded = scrollboxSizeBuggy || extra,
				isBorderBox = boxSizingNeeded &&
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
				subtract = extra ?
					boxModelAdjustment(
						elem,
						dimension,
						extra,
						isBorderBox,
						styles
					) :
					0;

			// Account for unreliable border-box dimensions by comparing offset* to computed and
			// faking a content-box to get border and padding (gh-3699)
			if ( isBorderBox && scrollboxSizeBuggy ) {
				subtract -= Math.ceil(
					elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
					parseFloat( styles[ dimension ] ) -
					boxModelAdjustment( elem, dimension, "border", false, styles ) -
					0.5
				);
			}

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ dimension ] = value;
				value = jQuery.css( elem, dimension );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
			) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( prefix !== "margin" ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( Array.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 && (
				jQuery.cssHooks[ tween.prop ] ||
					tween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, inProgress,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

function schedule() {
	if ( inProgress ) {
		if ( document.hidden === false && window.requestAnimationFrame ) {
			window.requestAnimationFrame( schedule );
		} else {
			window.setTimeout( schedule, jQuery.fx.interval );
		}

		jQuery.fx.tick();
	}
}

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = Date.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
		isBox = "width" in props || "height" in props,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHiddenWithinTree( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Queue-skipping animations hijack the fx hooks
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Detect show/hide animations
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.test( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// Pretend to be hidden if this is a "show" and
				// there is still data from a stopped show/hide
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;

				// Ignore all other no-op show/hide data
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	// Bail out if this is a no-op like .hide().hide()
	propTween = !jQuery.isEmptyObject( props );
	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
		return;
	}

	// Restrict "overflow" and "display" styles during box animations
	if ( isBox && elem.nodeType === 1 ) {

		// Support: IE <=9 - 11, Edge 12 - 15
		// Record all 3 overflow attributes because IE does not infer the shorthand
		// from identically-valued overflowX and overflowY and Edge just mirrors
		// the overflowX value there.
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Identify a display type, preferring old show/hide data over the CSS cascade
		restoreDisplay = dataShow && dataShow.display;
		if ( restoreDisplay == null ) {
			restoreDisplay = dataPriv.get( elem, "display" );
		}
		display = jQuery.css( elem, "display" );
		if ( display === "none" ) {
			if ( restoreDisplay ) {
				display = restoreDisplay;
			} else {

				// Get nonempty value(s) by temporarily forcing visibility
				showHide( [ elem ], true );
				restoreDisplay = elem.style.display || restoreDisplay;
				display = jQuery.css( elem, "display" );
				showHide( [ elem ] );
			}
		}

		// Animate inline elements as inline-block
		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
			if ( jQuery.css( elem, "float" ) === "none" ) {

				// Restore the original display value at the end of pure show/hide animations
				if ( !propTween ) {
					anim.done( function() {
						style.display = restoreDisplay;
					} );
					if ( restoreDisplay == null ) {
						display = style.display;
						restoreDisplay = display === "none" ? "" : display;
					}
				}
				style.display = "inline-block";
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// Implement show/hide animations
	propTween = false;
	for ( prop in orig ) {

		// General show/hide setup for this element animation
		if ( !propTween ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
			}

			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}

			// Show elements before animating them
			if ( hidden ) {
				showHide( [ elem ], true );
			}

			/* eslint-disable no-loop-func */

			anim.done( function() {

				/* eslint-enable no-loop-func */

				// The final step of a "hide" animation is actually hiding the element
				if ( !hidden ) {
					showHide( [ elem ] );
				}
				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
		}

		// Per-property setup
		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
		if ( !( prop in dataShow ) ) {
			dataShow[ prop ] = propTween.start;
			if ( hidden ) {
				propTween.end = propTween.start;
				propTween.start = 0;
			}
		}
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( Array.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			// If there's more to do, yield
			if ( percent < 1 && length ) {
				return remaining;
			}

			// If this was an empty animation, synthesize a final progress notification
			if ( !length ) {
				deferred.notifyWith( elem, [ animation, 1, 0 ] );
			}

			// Resolve the animation and report its conclusion
			deferred.resolveWith( elem, [ animation ] );
			return false;
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
					animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					result.stop.bind( result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	// Attach callbacks from options
	animation
		.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	return animation;
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnothtmlwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !isFunction( easing ) && easing
	};

	// Go to the end state if fx are off
	if ( jQuery.fx.off ) {
		opt.duration = 0;

	} else {
		if ( typeof opt.duration !== "number" ) {
			if ( opt.duration in jQuery.fx.speeds ) {
				opt.duration = jQuery.fx.speeds[ opt.duration ];

			} else {
				opt.duration = jQuery.fx.speeds._default;
			}
		}
	}

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};

		doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( _i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = Date.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Run the timer and safely remove it when done (allowing for external removal)
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	jQuery.fx.start();
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( inProgress ) {
		return;
	}

	inProgress = true;
	schedule();
};

jQuery.fx.stop = function() {
	inProgress = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: Android <=4.3 only
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE <=11 only
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: IE <=11 only
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// Attribute hooks are determined by the lowercase version
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name,
			i = 0,

			// Attribute names can contain non-HTML whitespace characters
			// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
			attrNames = value && value.match( rnothtmlwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( _i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle,
			lowercaseName = name.toLowerCase();

		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ lowercaseName ];
			attrHandle[ lowercaseName ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				lowercaseName :
				null;
			attrHandle[ lowercaseName ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// Support: IE <=9 - 11 only
				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				if ( tabindex ) {
					return parseInt( tabindex, 10 );
				}

				if (
					rfocusable.test( elem.nodeName ) ||
					rclickable.test( elem.nodeName ) &&
					elem.href
				) {
					return 0;
				}

				return -1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




	// Strip and collapse whitespace according to HTML spec
	// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
	function stripAndCollapse( value ) {
		var tokens = value.match( rnothtmlwhite ) || [];
		return tokens.join( " " );
	}


function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

function classesToArray( value ) {
	if ( Array.isArray( value ) ) {
		return value;
	}
	if ( typeof value === "string" ) {
		return value.match( rnothtmlwhite ) || [];
	}
	return [];
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value,
			isValidValue = type === "string" || Array.isArray( value );

		if ( typeof stateVal === "boolean" && isValidValue ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( isValidValue ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = classesToArray( value );

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
							"" :
							dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
				return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, valueIsFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				// Handle most common string cases
				if ( typeof ret === "string" ) {
					return ret.replace( rreturn, "" );
				}

				// Handle cases where value is null/undef or number
				return ret == null ? "" : ret;
			}

			return;
		}

		valueIsFunction = isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( valueIsFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( Array.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE <=10 - 11 only
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					stripAndCollapse( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option, i,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one",
					values = one ? null : [],
					max = one ? index + 1 : options.length;

				if ( index < 0 ) {
					i = max;

				} else {
					i = one ? index : 0;
				}

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Support: IE <=9 only
					// IE8-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							( !option.parentNode.disabled ||
								!nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					/* eslint-disable no-cond-assign */

					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}

					/* eslint-enable no-cond-assign */
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( Array.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion


support.focusin = "onfocusin" in window;


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	stopPropagationCallback = function( e ) {
		e.stopPropagation();
	};

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special, lastElement,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = lastElement = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {
			lastElement = cur;
			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( dataPriv.get( cur, "events" ) || Object.create( null ) )[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;

					if ( event.isPropagationStopped() ) {
						lastElement.addEventListener( type, stopPropagationCallback );
					}

					elem[ type ]();

					if ( event.isPropagationStopped() ) {
						lastElement.removeEventListener( type, stopPropagationCallback );
					}

					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {

				// Handle: regular nodes (via `this.ownerDocument`), window
				// (via `this.document`) & document (via `this`).
				var doc = this.ownerDocument || this.document || this,
					attaches = dataPriv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this.document || this,
					attaches = dataPriv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					dataPriv.remove( doc, fix );

				} else {
					dataPriv.access( doc, fix, attaches );
				}
			}
		};
	} );
}
var location = window.location;

var nonce = { guid: Date.now() };

var rquery = ( /\?/ );



// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml, parserErrorElem;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE 9 - 11 only
	// IE throws on parseFromString with invalid input.
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {}

	parserErrorElem = xml && xml.getElementsByTagName( "parsererror" )[ 0 ];
	if ( !xml || parserErrorElem ) {
		jQuery.error( "Invalid XML: " + (
			parserErrorElem ?
				jQuery.map( parserErrorElem.childNodes, function( el ) {
					return el.textContent;
				} ).join( "\n" ) :
				data
		) );
	}
	return xml;
};


var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( Array.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && toType( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, valueOrFunction ) {

			// If value is a function, invoke it and use its return value
			var value = isFunction( valueOrFunction ) ?
				valueOrFunction() :
				valueOrFunction;

			s[ s.length ] = encodeURIComponent( key ) + "=" +
				encodeURIComponent( value == null ? "" : value );
		};

	if ( a == null ) {
		return "";
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} ).filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} ).map( function( _i, elem ) {
			var val = jQuery( this ).val();

			if ( val == null ) {
				return null;
			}

			if ( Array.isArray( val ) ) {
				return jQuery.map( val, function( val ) {
					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
				} );
			}

			return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


var
	r20 = /%20/g,
	rhash = /#.*$/,
	rantiCache = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );

originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

		if ( isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",

		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": JSON.parse,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// Request state (becomes false upon send and true upon completion)
			completed,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// uncached part of the url
			uncached,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
				jQuery( callbackContext ) :
				jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( completed ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() + " " ] =
									( responseHeaders[ match[ 1 ].toLowerCase() + " " ] || [] )
										.concat( match[ 2 ] );
							}
						}
						match = responseHeaders[ key.toLowerCase() + " " ];
					}
					return match == null ? null : match.join( ", " );
				},

				// Raw string
				getAllResponseHeaders: function() {
					return completed ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( completed == null ) {
						name = requestHeadersNames[ name.toLowerCase() ] =
							requestHeadersNames[ name.toLowerCase() ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( completed == null ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( completed ) {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						} else {

							// Lazy-add the new callbacks in a way that preserves old ones
							for ( code in map ) {
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR );

		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE <=8 - 11, Edge 12 - 15
			// IE throws exception on accessing the href property if url is malformed,
			// e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE <=8 - 11 only
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( completed ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		// Remove hash to simplify url manipulation
		cacheURL = s.url.replace( rhash, "" );

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// Remember the hash so we can put it back
			uncached = s.url.slice( cacheURL.length );

			// If data is available and should be processed, append data to url
			if ( s.data && ( s.processData || typeof s.data === "string" ) ) {
				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add or update anti-cache param if needed
			if ( s.cache === false ) {
				cacheURL = cacheURL.replace( rantiCache, "$1" );
				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce.guid++ ) +
					uncached;
			}

			// Put hash and anti-cache on the URL that will be requested (gh-1732)
			s.url = cacheURL + uncached;

		// Change '%20' to '+' if this is encoded form body content (gh-2658)
		} else if ( s.data && s.processData &&
			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
			s.data = s.data.replace( r20, "+" );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		completeDeferred.add( s.complete );
		jqXHR.done( s.success );
		jqXHR.fail( s.error );

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( completed ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				completed = false;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Rethrow post-completion exceptions
				if ( completed ) {
					throw e;
				}

				// Propagate others as results
				done( -1, e );
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Ignore repeat invocations
			if ( completed ) {
				return;
			}

			completed = true;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Use a noop converter for missing script but not if jsonp
			if ( !isSuccess &&
				jQuery.inArray( "script", s.dataTypes ) > -1 &&
				jQuery.inArray( "json", s.dataTypes ) < 0 ) {
				s.converters[ "text script" ] = function() {};
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( _i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );

jQuery.ajaxPrefilter( function( s ) {
	var i;
	for ( i in s.headers ) {
		if ( i.toLowerCase() === "content-type" ) {
			s.contentType = s.headers[ i ] || "";
		}
	}
} );


jQuery._evalUrl = function( url, options, doc ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,

		// Only evaluate the response if it is successful (gh-4126)
		// dataFilter is not invoked for failure responses, so using it instead
		// of the default converter is kludgy but it works.
		converters: {
			"text script": function() {}
		},
		dataFilter: function( response ) {
			jQuery.globalEval( response, options, doc );
		}
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( this[ 0 ] ) {
			if ( isFunction( html ) ) {
				html = html.call( this[ 0 ] );
			}

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var htmlIsFunction = isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function( selector ) {
		this.parent( selector ).not( "body" ).each( function() {
			jQuery( this ).replaceWith( this.childNodes );
		} );
		return this;
	}
} );


jQuery.expr.pseudos.hidden = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
};




jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE <=9 only
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.ontimeout =
									xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE <=9 only
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE <=9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = xhr.ontimeout = callback( "error" );

				// Support: IE 9 only
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.crossDomain ) {
		s.contents.script = false;
	}
} );

// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain or forced-by-attrs requests
	if ( s.crossDomain || s.scriptAttrs ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" )
					.attr( s.scriptAttrs || {} )
					.prop( { charset: s.scriptCharset, src: s.url } )
					.on( "load error", callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					} );

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce.guid++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( "" ).body;
	body.innerHTML = "<form></form><form></form>";
	return body.childNodes.length === 2;
} )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( typeof data !== "string" ) {
		return [];
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}

	var base, parsed, scripts;

	if ( !context ) {

		// Stop scripts or inline event handlers from being executed immediately
		// by using document.implementation
		if ( support.createHTMLDocument ) {
			context = document.implementation.createHTMLDocument( "" );

			// Set the base href for the created document
			// so any parsed elements with URLs
			// are based on the document's URL (gh-2965)
			base = context.createElement( "base" );
			base.href = document.location.href;
			context.head.appendChild( base );
		} else {
			context = document;
		}
	}

	parsed = rsingleTag.exec( data );
	scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = stripAndCollapse( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {

	// offset() relates an element's border box to the document origin
	offset: function( options ) {

		// Preserve chaining for setter
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var rect, win,
			elem = this[ 0 ];

		if ( !elem ) {
			return;
		}

		// Return zeros for disconnected and hidden (display: none) elements (gh-2310)
		// Support: IE <=11 only
		// Running getBoundingClientRect on a
		// disconnected node in IE throws an error
		if ( !elem.getClientRects().length ) {
			return { top: 0, left: 0 };
		}

		// Get document-relative position by adding viewport scroll to viewport-relative gBCR
		rect = elem.getBoundingClientRect();
		win = elem.ownerDocument.defaultView;
		return {
			top: rect.top + win.pageYOffset,
			left: rect.left + win.pageXOffset
		};
	},

	// position() relates an element's margin box to its offset parent's padding box
	// This corresponds to the behavior of CSS absolute positioning
	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset, doc,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// position:fixed elements are offset from the viewport, which itself always has zero offset
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume position:fixed implies availability of getBoundingClientRect
			offset = elem.getBoundingClientRect();

		} else {
			offset = this.offset();

			// Account for the *real* offset parent, which can be the document or its root element
			// when a statically positioned element is identified
			doc = elem.ownerDocument;
			offsetParent = elem.offsetParent || doc.documentElement;
			while ( offsetParent &&
				( offsetParent === doc.body || offsetParent === doc.documentElement ) &&
				jQuery.css( offsetParent, "position" ) === "static" ) {

				offsetParent = offsetParent.parentNode;
			}
			if ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {

				// Incorporate borders into its offset, since they are outside its content origin
				parentOffset = jQuery( offsetParent ).offset();
				parentOffset.top += jQuery.css( offsetParent, "borderTopWidth", true );
				parentOffset.left += jQuery.css( offsetParent, "borderLeftWidth", true );
			}
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {

			// Coalesce documents and windows
			var win;
			if ( isWindow( elem ) ) {
				win = elem;
			} else if ( elem.nodeType === 9 ) {
				win = elem.defaultView;
			}

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( _i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( {
		padding: "inner" + name,
		content: type,
		"": "outer" + name
	}, function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( isWindow( elem ) ) {

					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
					return funcName.indexOf( "outer" ) === 0 ?
						elem[ "inner" + name ] :
						elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable );
		};
	} );
} );


jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( _i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	},

	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );

jQuery.each(
	( "blur focus focusin focusout resize scroll click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
	function( _i, name ) {

		// Handle event binding
		jQuery.fn[ name ] = function( data, fn ) {
			return arguments.length > 0 ?
				this.on( name, null, data, fn ) :
				this.trigger( name );
		};
	}
);




// Support: Android <=4.0 only
// Make sure we trim BOM and NBSP
var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;

// Bind a function to a context, optionally partially applying any
// arguments.
// jQuery.proxy is deprecated to promote standards (specifically Function#bind)
// However, it is not slated for removal any time soon
jQuery.proxy = function( fn, context ) {
	var tmp, args, proxy;

	if ( typeof context === "string" ) {
		tmp = fn[ context ];
		context = fn;
		fn = tmp;
	}

	// Quick check to determine if target is callable, in the spec
	// this throws a TypeError, but we will just return undefined.
	if ( !isFunction( fn ) ) {
		return undefined;
	}

	// Simulated bind
	args = slice.call( arguments, 2 );
	proxy = function() {
		return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
	};

	// Set the guid of unique handler to the same of original handler, so it can be removed
	proxy.guid = fn.guid = fn.guid || jQuery.guid++;

	return proxy;
};

jQuery.holdReady = function( hold ) {
	if ( hold ) {
		jQuery.readyWait++;
	} else {
		jQuery.ready( true );
	}
};
jQuery.isArray = Array.isArray;
jQuery.parseJSON = JSON.parse;
jQuery.nodeName = nodeName;
jQuery.isFunction = isFunction;
jQuery.isWindow = isWindow;
jQuery.camelCase = camelCase;
jQuery.type = toType;

jQuery.now = Date.now;

jQuery.isNumeric = function( obj ) {

	// As of jQuery 3.0, isNumeric is limited to
	// strings and numbers (primitives or objects)
	// that can be coerced to finite numbers (gh-2662)
	var type = jQuery.type( obj );
	return ( type === "number" || type === "string" ) &&

		// parseFloat NaNs numeric-cast false positives ("")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		!isNaN( obj - parseFloat( obj ) );
};

jQuery.trim = function( text ) {
	return text == null ?
		"" :
		( text + "" ).replace( rtrim, "" );
};



// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( true ) {
	!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {
		return jQuery;
	}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
}




var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( typeof noGlobal === "undefined" ) {
	window.jQuery = window.$ = jQuery;
}




return jQuery;
} );


/***/ }),

/***/ "./node_modules/node-libs-browser/node_modules/punycode/punycode.js":
/*!**************************************************************************!*\
  !*** ./node_modules/node-libs-browser/node_modules/punycode/punycode.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/punycode v1.4.1 by @mathias */
;(function(root) {

	/** Detect free variables */
	var freeExports =  true && exports &&
		!exports.nodeType && exports;
	var freeModule =  true && module &&
		!module.nodeType && module;
	var freeGlobal = typeof global == 'object' && global;
	if (
		freeGlobal.global === freeGlobal ||
		freeGlobal.window === freeGlobal ||
		freeGlobal.self === freeGlobal
	) {
		root = freeGlobal;
	}

	/**
	 * The `punycode` object.
	 * @name punycode
	 * @type Object
	 */
	var punycode,

	/** Highest positive signed 32-bit float value */
	maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1

	/** Bootstring parameters */
	base = 36,
	tMin = 1,
	tMax = 26,
	skew = 38,
	damp = 700,
	initialBias = 72,
	initialN = 128, // 0x80
	delimiter = '-', // '\x2D'

	/** Regular expressions */
	regexPunycode = /^xn--/,
	regexNonASCII = /[^\x20-\x7E]/, // unprintable ASCII chars + non-ASCII chars
	regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, // RFC 3490 separators

	/** Error messages */
	errors = {
		'overflow': 'Overflow: input needs wider integers to process',
		'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
		'invalid-input': 'Invalid input'
	},

	/** Convenience shortcuts */
	baseMinusTMin = base - tMin,
	floor = Math.floor,
	stringFromCharCode = String.fromCharCode,

	/** Temporary variable */
	key;

	/*--------------------------------------------------------------------------*/

	/**
	 * A generic error utility function.
	 * @private
	 * @param {String} type The error type.
	 * @returns {Error} Throws a `RangeError` with the applicable error message.
	 */
	function error(type) {
		throw new RangeError(errors[type]);
	}

	/**
	 * A generic `Array#map` utility function.
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} callback The function that gets called for every array
	 * item.
	 * @returns {Array} A new array of values returned by the callback function.
	 */
	function map(array, fn) {
		var length = array.length;
		var result = [];
		while (length--) {
			result[length] = fn(array[length]);
		}
		return result;
	}

	/**
	 * A simple `Array#map`-like wrapper to work with domain name strings or email
	 * addresses.
	 * @private
	 * @param {String} domain The domain name or email address.
	 * @param {Function} callback The function that gets called for every
	 * character.
	 * @returns {Array} A new string of characters returned by the callback
	 * function.
	 */
	function mapDomain(string, fn) {
		var parts = string.split('@');
		var result = '';
		if (parts.length > 1) {
			// In email addresses, only the domain name should be punycoded. Leave
			// the local part (i.e. everything up to `@`) intact.
			result = parts[0] + '@';
			string = parts[1];
		}
		// Avoid `split(regex)` for IE8 compatibility. See #17.
		string = string.replace(regexSeparators, '\x2E');
		var labels = string.split('.');
		var encoded = map(labels, fn).join('.');
		return result + encoded;
	}

	/**
	 * Creates an array containing the numeric code points of each Unicode
	 * character in the string. While JavaScript uses UCS-2 internally,
	 * this function will convert a pair of surrogate halves (each of which
	 * UCS-2 exposes as separate characters) into a single code point,
	 * matching UTF-16.
	 * @see `punycode.ucs2.encode`
	 * @see <https://mathiasbynens.be/notes/javascript-encoding>
	 * @memberOf punycode.ucs2
	 * @name decode
	 * @param {String} string The Unicode input string (UCS-2).
	 * @returns {Array} The new array of code points.
	 */
	function ucs2decode(string) {
		var output = [],
		    counter = 0,
		    length = string.length,
		    value,
		    extra;
		while (counter < length) {
			value = string.charCodeAt(counter++);
			if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
				// high surrogate, and there is a next character
				extra = string.charCodeAt(counter++);
				if ((extra & 0xFC00) == 0xDC00) { // low surrogate
					output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
				} else {
					// unmatched surrogate; only append this code unit, in case the next
					// code unit is the high surrogate of a surrogate pair
					output.push(value);
					counter--;
				}
			} else {
				output.push(value);
			}
		}
		return output;
	}

	/**
	 * Creates a string based on an array of numeric code points.
	 * @see `punycode.ucs2.decode`
	 * @memberOf punycode.ucs2
	 * @name encode
	 * @param {Array} codePoints The array of numeric code points.
	 * @returns {String} The new Unicode string (UCS-2).
	 */
	function ucs2encode(array) {
		return map(array, function(value) {
			var output = '';
			if (value > 0xFFFF) {
				value -= 0x10000;
				output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
				value = 0xDC00 | value & 0x3FF;
			}
			output += stringFromCharCode(value);
			return output;
		}).join('');
	}

	/**
	 * Converts a basic code point into a digit/integer.
	 * @see `digitToBasic()`
	 * @private
	 * @param {Number} codePoint The basic numeric code point value.
	 * @returns {Number} The numeric value of a basic code point (for use in
	 * representing integers) in the range `0` to `base - 1`, or `base` if
	 * the code point does not represent a value.
	 */
	function basicToDigit(codePoint) {
		if (codePoint - 48 < 10) {
			return codePoint - 22;
		}
		if (codePoint - 65 < 26) {
			return codePoint - 65;
		}
		if (codePoint - 97 < 26) {
			return codePoint - 97;
		}
		return base;
	}

	/**
	 * Converts a digit/integer into a basic code point.
	 * @see `basicToDigit()`
	 * @private
	 * @param {Number} digit The numeric value of a basic code point.
	 * @returns {Number} The basic code point whose value (when used for
	 * representing integers) is `digit`, which needs to be in the range
	 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
	 * used; else, the lowercase form is used. The behavior is undefined
	 * if `flag` is non-zero and `digit` has no uppercase form.
	 */
	function digitToBasic(digit, flag) {
		//  0..25 map to ASCII a..z or A..Z
		// 26..35 map to ASCII 0..9
		return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
	}

	/**
	 * Bias adaptation function as per section 3.4 of RFC 3492.
	 * https://tools.ietf.org/html/rfc3492#section-3.4
	 * @private
	 */
	function adapt(delta, numPoints, firstTime) {
		var k = 0;
		delta = firstTime ? floor(delta / damp) : delta >> 1;
		delta += floor(delta / numPoints);
		for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {
			delta = floor(delta / baseMinusTMin);
		}
		return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
	}

	/**
	 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
	 * symbols.
	 * @memberOf punycode
	 * @param {String} input The Punycode string of ASCII-only symbols.
	 * @returns {String} The resulting string of Unicode symbols.
	 */
	function decode(input) {
		// Don't use UCS-2
		var output = [],
		    inputLength = input.length,
		    out,
		    i = 0,
		    n = initialN,
		    bias = initialBias,
		    basic,
		    j,
		    index,
		    oldi,
		    w,
		    k,
		    digit,
		    t,
		    /** Cached calculation results */
		    baseMinusT;

		// Handle the basic code points: let `basic` be the number of input code
		// points before the last delimiter, or `0` if there is none, then copy
		// the first basic code points to the output.

		basic = input.lastIndexOf(delimiter);
		if (basic < 0) {
			basic = 0;
		}

		for (j = 0; j < basic; ++j) {
			// if it's not a basic code point
			if (input.charCodeAt(j) >= 0x80) {
				error('not-basic');
			}
			output.push(input.charCodeAt(j));
		}

		// Main decoding loop: start just after the last delimiter if any basic code
		// points were copied; start at the beginning otherwise.

		for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {

			// `index` is the index of the next character to be consumed.
			// Decode a generalized variable-length integer into `delta`,
			// which gets added to `i`. The overflow checking is easier
			// if we increase `i` as we go, then subtract off its starting
			// value at the end to obtain `delta`.
			for (oldi = i, w = 1, k = base; /* no condition */; k += base) {

				if (index >= inputLength) {
					error('invalid-input');
				}

				digit = basicToDigit(input.charCodeAt(index++));

				if (digit >= base || digit > floor((maxInt - i) / w)) {
					error('overflow');
				}

				i += digit * w;
				t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);

				if (digit < t) {
					break;
				}

				baseMinusT = base - t;
				if (w > floor(maxInt / baseMinusT)) {
					error('overflow');
				}

				w *= baseMinusT;

			}

			out = output.length + 1;
			bias = adapt(i - oldi, out, oldi == 0);

			// `i` was supposed to wrap around from `out` to `0`,
			// incrementing `n` each time, so we'll fix that now:
			if (floor(i / out) > maxInt - n) {
				error('overflow');
			}

			n += floor(i / out);
			i %= out;

			// Insert `n` at position `i` of the output
			output.splice(i++, 0, n);

		}

		return ucs2encode(output);
	}

	/**
	 * Converts a string of Unicode symbols (e.g. a domain name label) to a
	 * Punycode string of ASCII-only symbols.
	 * @memberOf punycode
	 * @param {String} input The string of Unicode symbols.
	 * @returns {String} The resulting Punycode string of ASCII-only symbols.
	 */
	function encode(input) {
		var n,
		    delta,
		    handledCPCount,
		    basicLength,
		    bias,
		    j,
		    m,
		    q,
		    k,
		    t,
		    currentValue,
		    output = [],
		    /** `inputLength` will hold the number of code points in `input`. */
		    inputLength,
		    /** Cached calculation results */
		    handledCPCountPlusOne,
		    baseMinusT,
		    qMinusT;

		// Convert the input in UCS-2 to Unicode
		input = ucs2decode(input);

		// Cache the length
		inputLength = input.length;

		// Initialize the state
		n = initialN;
		delta = 0;
		bias = initialBias;

		// Handle the basic code points
		for (j = 0; j < inputLength; ++j) {
			currentValue = input[j];
			if (currentValue < 0x80) {
				output.push(stringFromCharCode(currentValue));
			}
		}

		handledCPCount = basicLength = output.length;

		// `handledCPCount` is the number of code points that have been handled;
		// `basicLength` is the number of basic code points.

		// Finish the basic string - if it is not empty - with a delimiter
		if (basicLength) {
			output.push(delimiter);
		}

		// Main encoding loop:
		while (handledCPCount < inputLength) {

			// All non-basic code points < n have been handled already. Find the next
			// larger one:
			for (m = maxInt, j = 0; j < inputLength; ++j) {
				currentValue = input[j];
				if (currentValue >= n && currentValue < m) {
					m = currentValue;
				}
			}

			// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
			// but guard against overflow
			handledCPCountPlusOne = handledCPCount + 1;
			if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
				error('overflow');
			}

			delta += (m - n) * handledCPCountPlusOne;
			n = m;

			for (j = 0; j < inputLength; ++j) {
				currentValue = input[j];

				if (currentValue < n && ++delta > maxInt) {
					error('overflow');
				}

				if (currentValue == n) {
					// Represent delta as a generalized variable-length integer
					for (q = delta, k = base; /* no condition */; k += base) {
						t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
						if (q < t) {
							break;
						}
						qMinusT = q - t;
						baseMinusT = base - t;
						output.push(
							stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))
						);
						q = floor(qMinusT / baseMinusT);
					}

					output.push(stringFromCharCode(digitToBasic(q, 0)));
					bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
					delta = 0;
					++handledCPCount;
				}
			}

			++delta;
			++n;

		}
		return output.join('');
	}

	/**
	 * Converts a Punycode string representing a domain name or an email address
	 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
	 * it doesn't matter if you call it on a string that has already been
	 * converted to Unicode.
	 * @memberOf punycode
	 * @param {String} input The Punycoded domain name or email address to
	 * convert to Unicode.
	 * @returns {String} The Unicode representation of the given Punycode
	 * string.
	 */
	function toUnicode(input) {
		return mapDomain(input, function(string) {
			return regexPunycode.test(string)
				? decode(string.slice(4).toLowerCase())
				: string;
		});
	}

	/**
	 * Converts a Unicode string representing a domain name or an email address to
	 * Punycode. Only the non-ASCII parts of the domain name will be converted,
	 * i.e. it doesn't matter if you call it with a domain that's already in
	 * ASCII.
	 * @memberOf punycode
	 * @param {String} input The domain name or email address to convert, as a
	 * Unicode string.
	 * @returns {String} The Punycode representation of the given domain name or
	 * email address.
	 */
	function toASCII(input) {
		return mapDomain(input, function(string) {
			return regexNonASCII.test(string)
				? 'xn--' + encode(string)
				: string;
		});
	}

	/*--------------------------------------------------------------------------*/

	/** Define the public API */
	punycode = {
		/**
		 * A string representing the current Punycode.js version number.
		 * @memberOf punycode
		 * @type String
		 */
		'version': '1.4.1',
		/**
		 * An object of methods to convert from JavaScript's internal character
		 * representation (UCS-2) to Unicode code points, and back.
		 * @see <https://mathiasbynens.be/notes/javascript-encoding>
		 * @memberOf punycode
		 * @type Object
		 */
		'ucs2': {
			'decode': ucs2decode,
			'encode': ucs2encode
		},
		'decode': decode,
		'encode': encode,
		'toASCII': toASCII,
		'toUnicode': toUnicode
	};

	/** Expose `punycode` */
	// Some AMD build optimizers, like r.js, check for specific condition patterns
	// like the following:
	if (
		true
	) {
		!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
			return punycode;
		}).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {}

}(this));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module), __webpack_require__(/*! ./../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/pdfjs-dist/build/pdf.js":
/*!**********************************************!*\
  !*** ./node_modules/pdfjs-dist/build/pdf.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer, global, process) {/**
 * @licstart The following is the entire license notice for the
 * Javascript code in this page
 *
 * Copyright 2018 Mozilla Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @licend The above is the entire license notice for the
 * Javascript code in this page
 */

(function webpackUniversalModuleDefinition(root, factory) {
	if(true)
		module.exports = factory();
	else {}
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __w_pdfjs_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__w_pdfjs_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__w_pdfjs_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__w_pdfjs_require__.d = function(exports, name, getter) {
/******/ 		if(!__w_pdfjs_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__w_pdfjs_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__w_pdfjs_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __w_pdfjs_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__w_pdfjs_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __w_pdfjs_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__w_pdfjs_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__w_pdfjs_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__w_pdfjs_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __w_pdfjs_require__(__w_pdfjs_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var pdfjsVersion = '2.0.943';
var pdfjsBuild = 'dc98bf76';
var pdfjsSharedUtil = __w_pdfjs_require__(1);
var pdfjsDisplayAPI = __w_pdfjs_require__(129);
var pdfjsDisplayTextLayer = __w_pdfjs_require__(145);
var pdfjsDisplayAnnotationLayer = __w_pdfjs_require__(146);
var pdfjsDisplayDOMUtils = __w_pdfjs_require__(130);
var pdfjsDisplaySVG = __w_pdfjs_require__(147);
var pdfjsDisplayWorkerOptions = __w_pdfjs_require__(135);
var pdfjsDisplayAPICompatibility = __w_pdfjs_require__(132);
{
  var isNodeJS = __w_pdfjs_require__(4);
  if (isNodeJS()) {
    var PDFNodeStream = __w_pdfjs_require__(148).PDFNodeStream;
    pdfjsDisplayAPI.setPDFNetworkStreamFactory(function (params) {
      return new PDFNodeStream(params);
    });
  } else if (typeof Response !== 'undefined' && 'body' in Response.prototype && typeof ReadableStream !== 'undefined') {
    var PDFFetchStream = __w_pdfjs_require__(151).PDFFetchStream;
    pdfjsDisplayAPI.setPDFNetworkStreamFactory(function (params) {
      return new PDFFetchStream(params);
    });
  } else {
    var PDFNetworkStream = __w_pdfjs_require__(152).PDFNetworkStream;
    pdfjsDisplayAPI.setPDFNetworkStreamFactory(function (params) {
      return new PDFNetworkStream(params);
    });
  }
}
exports.build = pdfjsDisplayAPI.build;
exports.version = pdfjsDisplayAPI.version;
exports.getDocument = pdfjsDisplayAPI.getDocument;
exports.LoopbackPort = pdfjsDisplayAPI.LoopbackPort;
exports.PDFDataRangeTransport = pdfjsDisplayAPI.PDFDataRangeTransport;
exports.PDFWorker = pdfjsDisplayAPI.PDFWorker;
exports.renderTextLayer = pdfjsDisplayTextLayer.renderTextLayer;
exports.AnnotationLayer = pdfjsDisplayAnnotationLayer.AnnotationLayer;
exports.createPromiseCapability = pdfjsSharedUtil.createPromiseCapability;
exports.PasswordResponses = pdfjsSharedUtil.PasswordResponses;
exports.InvalidPDFException = pdfjsSharedUtil.InvalidPDFException;
exports.MissingPDFException = pdfjsSharedUtil.MissingPDFException;
exports.SVGGraphics = pdfjsDisplaySVG.SVGGraphics;
exports.NativeImageDecoding = pdfjsSharedUtil.NativeImageDecoding;
exports.CMapCompressionType = pdfjsSharedUtil.CMapCompressionType;
exports.PermissionFlag = pdfjsSharedUtil.PermissionFlag;
exports.UnexpectedResponseException = pdfjsSharedUtil.UnexpectedResponseException;
exports.OPS = pdfjsSharedUtil.OPS;
exports.VerbosityLevel = pdfjsSharedUtil.VerbosityLevel;
exports.UNSUPPORTED_FEATURES = pdfjsSharedUtil.UNSUPPORTED_FEATURES;
exports.createValidAbsoluteUrl = pdfjsSharedUtil.createValidAbsoluteUrl;
exports.createObjectURL = pdfjsSharedUtil.createObjectURL;
exports.removeNullCharacters = pdfjsSharedUtil.removeNullCharacters;
exports.shadow = pdfjsSharedUtil.shadow;
exports.Util = pdfjsSharedUtil.Util;
exports.ReadableStream = pdfjsSharedUtil.ReadableStream;
exports.URL = pdfjsSharedUtil.URL;
exports.RenderingCancelledException = pdfjsDisplayDOMUtils.RenderingCancelledException;
exports.getFilenameFromUrl = pdfjsDisplayDOMUtils.getFilenameFromUrl;
exports.LinkTarget = pdfjsDisplayDOMUtils.LinkTarget;
exports.addLinkAttributes = pdfjsDisplayDOMUtils.addLinkAttributes;
exports.loadScript = pdfjsDisplayDOMUtils.loadScript;
exports.GlobalWorkerOptions = pdfjsDisplayWorkerOptions.GlobalWorkerOptions;
exports.apiCompatibilityParams = pdfjsDisplayAPICompatibility.apiCompatibilityParams;

/***/ }),
/* 1 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.unreachable = exports.warn = exports.utf8StringToString = exports.stringToUTF8String = exports.stringToPDFString = exports.stringToBytes = exports.string32 = exports.shadow = exports.setVerbosityLevel = exports.URL = exports.ReadableStream = exports.removeNullCharacters = exports.readUint32 = exports.readUint16 = exports.readInt8 = exports.log2 = exports.isEvalSupported = exports.isLittleEndian = exports.createValidAbsoluteUrl = exports.isSameOrigin = exports.isSpace = exports.isString = exports.isNum = exports.isEmptyObj = exports.isBool = exports.isArrayBuffer = exports.info = exports.getVerbosityLevel = exports.getLookupTableFactory = exports.getInheritableProperty = exports.deprecated = exports.createObjectURL = exports.createPromiseCapability = exports.bytesToString = exports.assert = exports.arraysToBytes = exports.arrayByteLength = exports.FormatError = exports.XRefParseException = exports.toRomanNumerals = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.PermissionFlag = exports.PasswordResponses = exports.PasswordException = exports.NativeImageDecoding = exports.MissingPDFException = exports.MissingDataException = exports.InvalidPDFException = exports.AbortException = exports.CMapCompressionType = exports.ImageKind = exports.FontType = exports.AnnotationType = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.UNSUPPORTED_FEATURES = exports.VerbosityLevel = exports.OPS = exports.IDENTITY_MATRIX = exports.FONT_IDENTITY_MATRIX = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

__w_pdfjs_require__(2);

var _streams_polyfill = __w_pdfjs_require__(125);

var _url_polyfill = __w_pdfjs_require__(127);

var IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];
var FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];
var NativeImageDecoding = {
  NONE: 'none',
  DECODE: 'decode',
  DISPLAY: 'display'
};
var PermissionFlag = {
  PRINT: 0x04,
  MODIFY_CONTENTS: 0x08,
  COPY: 0x10,
  MODIFY_ANNOTATIONS: 0x20,
  FILL_INTERACTIVE_FORMS: 0x100,
  COPY_FOR_ACCESSIBILITY: 0x200,
  ASSEMBLE: 0x400,
  PRINT_HIGH_QUALITY: 0x800
};
var TextRenderingMode = {
  FILL: 0,
  STROKE: 1,
  FILL_STROKE: 2,
  INVISIBLE: 3,
  FILL_ADD_TO_PATH: 4,
  STROKE_ADD_TO_PATH: 5,
  FILL_STROKE_ADD_TO_PATH: 6,
  ADD_TO_PATH: 7,
  FILL_STROKE_MASK: 3,
  ADD_TO_PATH_FLAG: 4
};
var ImageKind = {
  GRAYSCALE_1BPP: 1,
  RGB_24BPP: 2,
  RGBA_32BPP: 3
};
var AnnotationType = {
  TEXT: 1,
  LINK: 2,
  FREETEXT: 3,
  LINE: 4,
  SQUARE: 5,
  CIRCLE: 6,
  POLYGON: 7,
  POLYLINE: 8,
  HIGHLIGHT: 9,
  UNDERLINE: 10,
  SQUIGGLY: 11,
  STRIKEOUT: 12,
  STAMP: 13,
  CARET: 14,
  INK: 15,
  POPUP: 16,
  FILEATTACHMENT: 17,
  SOUND: 18,
  MOVIE: 19,
  WIDGET: 20,
  SCREEN: 21,
  PRINTERMARK: 22,
  TRAPNET: 23,
  WATERMARK: 24,
  THREED: 25,
  REDACT: 26
};
var AnnotationFlag = {
  INVISIBLE: 0x01,
  HIDDEN: 0x02,
  PRINT: 0x04,
  NOZOOM: 0x08,
  NOROTATE: 0x10,
  NOVIEW: 0x20,
  READONLY: 0x40,
  LOCKED: 0x80,
  TOGGLENOVIEW: 0x100,
  LOCKEDCONTENTS: 0x200
};
var AnnotationFieldFlag = {
  READONLY: 0x0000001,
  REQUIRED: 0x0000002,
  NOEXPORT: 0x0000004,
  MULTILINE: 0x0001000,
  PASSWORD: 0x0002000,
  NOTOGGLETOOFF: 0x0004000,
  RADIO: 0x0008000,
  PUSHBUTTON: 0x0010000,
  COMBO: 0x0020000,
  EDIT: 0x0040000,
  SORT: 0x0080000,
  FILESELECT: 0x0100000,
  MULTISELECT: 0x0200000,
  DONOTSPELLCHECK: 0x0400000,
  DONOTSCROLL: 0x0800000,
  COMB: 0x1000000,
  RICHTEXT: 0x2000000,
  RADIOSINUNISON: 0x2000000,
  COMMITONSELCHANGE: 0x4000000
};
var AnnotationBorderStyleType = {
  SOLID: 1,
  DASHED: 2,
  BEVELED: 3,
  INSET: 4,
  UNDERLINE: 5
};
var StreamType = {
  UNKNOWN: 0,
  FLATE: 1,
  LZW: 2,
  DCT: 3,
  JPX: 4,
  JBIG: 5,
  A85: 6,
  AHX: 7,
  CCF: 8,
  RL: 9
};
var FontType = {
  UNKNOWN: 0,
  TYPE1: 1,
  TYPE1C: 2,
  CIDFONTTYPE0: 3,
  CIDFONTTYPE0C: 4,
  TRUETYPE: 5,
  CIDFONTTYPE2: 6,
  TYPE3: 7,
  OPENTYPE: 8,
  TYPE0: 9,
  MMTYPE1: 10
};
var VerbosityLevel = {
  ERRORS: 0,
  WARNINGS: 1,
  INFOS: 5
};
var CMapCompressionType = {
  NONE: 0,
  BINARY: 1,
  STREAM: 2
};
var OPS = {
  dependency: 1,
  setLineWidth: 2,
  setLineCap: 3,
  setLineJoin: 4,
  setMiterLimit: 5,
  setDash: 6,
  setRenderingIntent: 7,
  setFlatness: 8,
  setGState: 9,
  save: 10,
  restore: 11,
  transform: 12,
  moveTo: 13,
  lineTo: 14,
  curveTo: 15,
  curveTo2: 16,
  curveTo3: 17,
  closePath: 18,
  rectangle: 19,
  stroke: 20,
  closeStroke: 21,
  fill: 22,
  eoFill: 23,
  fillStroke: 24,
  eoFillStroke: 25,
  closeFillStroke: 26,
  closeEOFillStroke: 27,
  endPath: 28,
  clip: 29,
  eoClip: 30,
  beginText: 31,
  endText: 32,
  setCharSpacing: 33,
  setWordSpacing: 34,
  setHScale: 35,
  setLeading: 36,
  setFont: 37,
  setTextRenderingMode: 38,
  setTextRise: 39,
  moveText: 40,
  setLeadingMoveText: 41,
  setTextMatrix: 42,
  nextLine: 43,
  showText: 44,
  showSpacedText: 45,
  nextLineShowText: 46,
  nextLineSetSpacingShowText: 47,
  setCharWidth: 48,
  setCharWidthAndBounds: 49,
  setStrokeColorSpace: 50,
  setFillColorSpace: 51,
  setStrokeColor: 52,
  setStrokeColorN: 53,
  setFillColor: 54,
  setFillColorN: 55,
  setStrokeGray: 56,
  setFillGray: 57,
  setStrokeRGBColor: 58,
  setFillRGBColor: 59,
  setStrokeCMYKColor: 60,
  setFillCMYKColor: 61,
  shadingFill: 62,
  beginInlineImage: 63,
  beginImageData: 64,
  endInlineImage: 65,
  paintXObject: 66,
  markPoint: 67,
  markPointProps: 68,
  beginMarkedContent: 69,
  beginMarkedContentProps: 70,
  endMarkedContent: 71,
  beginCompat: 72,
  endCompat: 73,
  paintFormXObjectBegin: 74,
  paintFormXObjectEnd: 75,
  beginGroup: 76,
  endGroup: 77,
  beginAnnotations: 78,
  endAnnotations: 79,
  beginAnnotation: 80,
  endAnnotation: 81,
  paintJpegXObject: 82,
  paintImageMaskXObject: 83,
  paintImageMaskXObjectGroup: 84,
  paintImageXObject: 85,
  paintInlineImageXObject: 86,
  paintInlineImageXObjectGroup: 87,
  paintImageXObjectRepeat: 88,
  paintImageMaskXObjectRepeat: 89,
  paintSolidColorImageMask: 90,
  constructPath: 91
};
var UNSUPPORTED_FEATURES = {
  unknown: 'unknown',
  forms: 'forms',
  javaScript: 'javaScript',
  smask: 'smask',
  shadingPattern: 'shadingPattern',
  font: 'font'
};
var PasswordResponses = {
  NEED_PASSWORD: 1,
  INCORRECT_PASSWORD: 2
};
var verbosity = VerbosityLevel.WARNINGS;
function setVerbosityLevel(level) {
  if (Number.isInteger(level)) {
    verbosity = level;
  }
}
function getVerbosityLevel() {
  return verbosity;
}
function info(msg) {
  if (verbosity >= VerbosityLevel.INFOS) {
    console.log('Info: ' + msg);
  }
}
function warn(msg) {
  if (verbosity >= VerbosityLevel.WARNINGS) {
    console.log('Warning: ' + msg);
  }
}
function deprecated(details) {
  console.log('Deprecated API usage: ' + details);
}
function unreachable(msg) {
  throw new Error(msg);
}
function assert(cond, msg) {
  if (!cond) {
    unreachable(msg);
  }
}
function isSameOrigin(baseUrl, otherUrl) {
  try {
    var base = new _url_polyfill.URL(baseUrl);
    if (!base.origin || base.origin === 'null') {
      return false;
    }
  } catch (e) {
    return false;
  }
  var other = new _url_polyfill.URL(otherUrl, base);
  return base.origin === other.origin;
}
function _isValidProtocol(url) {
  if (!url) {
    return false;
  }
  switch (url.protocol) {
    case 'http:':
    case 'https:':
    case 'ftp:':
    case 'mailto:':
    case 'tel:':
      return true;
    default:
      return false;
  }
}
function createValidAbsoluteUrl(url, baseUrl) {
  if (!url) {
    return null;
  }
  try {
    var absoluteUrl = baseUrl ? new _url_polyfill.URL(url, baseUrl) : new _url_polyfill.URL(url);
    if (_isValidProtocol(absoluteUrl)) {
      return absoluteUrl;
    }
  } catch (ex) {}
  return null;
}
function shadow(obj, prop, value) {
  Object.defineProperty(obj, prop, {
    value: value,
    enumerable: true,
    configurable: true,
    writable: false
  });
  return value;
}
function getLookupTableFactory(initializer) {
  var lookup;
  return function () {
    if (initializer) {
      lookup = Object.create(null);
      initializer(lookup);
      initializer = null;
    }
    return lookup;
  };
}
var PasswordException = function PasswordExceptionClosure() {
  function PasswordException(msg, code) {
    this.name = 'PasswordException';
    this.message = msg;
    this.code = code;
  }
  PasswordException.prototype = new Error();
  PasswordException.constructor = PasswordException;
  return PasswordException;
}();
var UnknownErrorException = function UnknownErrorExceptionClosure() {
  function UnknownErrorException(msg, details) {
    this.name = 'UnknownErrorException';
    this.message = msg;
    this.details = details;
  }
  UnknownErrorException.prototype = new Error();
  UnknownErrorException.constructor = UnknownErrorException;
  return UnknownErrorException;
}();
var InvalidPDFException = function InvalidPDFExceptionClosure() {
  function InvalidPDFException(msg) {
    this.name = 'InvalidPDFException';
    this.message = msg;
  }
  InvalidPDFException.prototype = new Error();
  InvalidPDFException.constructor = InvalidPDFException;
  return InvalidPDFException;
}();
var MissingPDFException = function MissingPDFExceptionClosure() {
  function MissingPDFException(msg) {
    this.name = 'MissingPDFException';
    this.message = msg;
  }
  MissingPDFException.prototype = new Error();
  MissingPDFException.constructor = MissingPDFException;
  return MissingPDFException;
}();
var UnexpectedResponseException = function UnexpectedResponseExceptionClosure() {
  function UnexpectedResponseException(msg, status) {
    this.name = 'UnexpectedResponseException';
    this.message = msg;
    this.status = status;
  }
  UnexpectedResponseException.prototype = new Error();
  UnexpectedResponseException.constructor = UnexpectedResponseException;
  return UnexpectedResponseException;
}();
var MissingDataException = function MissingDataExceptionClosure() {
  function MissingDataException(begin, end) {
    this.begin = begin;
    this.end = end;
    this.message = 'Missing data [' + begin + ', ' + end + ')';
  }
  MissingDataException.prototype = new Error();
  MissingDataException.prototype.name = 'MissingDataException';
  MissingDataException.constructor = MissingDataException;
  return MissingDataException;
}();
var XRefParseException = function XRefParseExceptionClosure() {
  function XRefParseException(msg) {
    this.message = msg;
  }
  XRefParseException.prototype = new Error();
  XRefParseException.prototype.name = 'XRefParseException';
  XRefParseException.constructor = XRefParseException;
  return XRefParseException;
}();
var FormatError = function FormatErrorClosure() {
  function FormatError(msg) {
    this.message = msg;
  }
  FormatError.prototype = new Error();
  FormatError.prototype.name = 'FormatError';
  FormatError.constructor = FormatError;
  return FormatError;
}();
var AbortException = function AbortExceptionClosure() {
  function AbortException(msg) {
    this.name = 'AbortException';
    this.message = msg;
  }
  AbortException.prototype = new Error();
  AbortException.constructor = AbortException;
  return AbortException;
}();
var NullCharactersRegExp = /\x00/g;
function removeNullCharacters(str) {
  if (typeof str !== 'string') {
    warn('The argument for removeNullCharacters must be a string.');
    return str;
  }
  return str.replace(NullCharactersRegExp, '');
}
function bytesToString(bytes) {
  assert(bytes !== null && (typeof bytes === 'undefined' ? 'undefined' : _typeof(bytes)) === 'object' && bytes.length !== undefined, 'Invalid argument for bytesToString');
  var length = bytes.length;
  var MAX_ARGUMENT_COUNT = 8192;
  if (length < MAX_ARGUMENT_COUNT) {
    return String.fromCharCode.apply(null, bytes);
  }
  var strBuf = [];
  for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {
    var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);
    var chunk = bytes.subarray(i, chunkEnd);
    strBuf.push(String.fromCharCode.apply(null, chunk));
  }
  return strBuf.join('');
}
function stringToBytes(str) {
  assert(typeof str === 'string', 'Invalid argument for stringToBytes');
  var length = str.length;
  var bytes = new Uint8Array(length);
  for (var i = 0; i < length; ++i) {
    bytes[i] = str.charCodeAt(i) & 0xFF;
  }
  return bytes;
}
function arrayByteLength(arr) {
  if (arr.length !== undefined) {
    return arr.length;
  }
  assert(arr.byteLength !== undefined);
  return arr.byteLength;
}
function arraysToBytes(arr) {
  if (arr.length === 1 && arr[0] instanceof Uint8Array) {
    return arr[0];
  }
  var resultLength = 0;
  var i,
      ii = arr.length;
  var item, itemLength;
  for (i = 0; i < ii; i++) {
    item = arr[i];
    itemLength = arrayByteLength(item);
    resultLength += itemLength;
  }
  var pos = 0;
  var data = new Uint8Array(resultLength);
  for (i = 0; i < ii; i++) {
    item = arr[i];
    if (!(item instanceof Uint8Array)) {
      if (typeof item === 'string') {
        item = stringToBytes(item);
      } else {
        item = new Uint8Array(item);
      }
    }
    itemLength = item.byteLength;
    data.set(item, pos);
    pos += itemLength;
  }
  return data;
}
function string32(value) {
  return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);
}
function log2(x) {
  if (x <= 0) {
    return 0;
  }
  return Math.ceil(Math.log2(x));
}
function readInt8(data, start) {
  return data[start] << 24 >> 24;
}
function readUint16(data, offset) {
  return data[offset] << 8 | data[offset + 1];
}
function readUint32(data, offset) {
  return (data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3]) >>> 0;
}
function isLittleEndian() {
  var buffer8 = new Uint8Array(4);
  buffer8[0] = 1;
  var view32 = new Uint32Array(buffer8.buffer, 0, 1);
  return view32[0] === 1;
}
function isEvalSupported() {
  try {
    new Function('');
    return true;
  } catch (e) {
    return false;
  }
}
function getInheritableProperty(_ref) {
  var dict = _ref.dict,
      key = _ref.key,
      _ref$getArray = _ref.getArray,
      getArray = _ref$getArray === undefined ? false : _ref$getArray,
      _ref$stopWhenFound = _ref.stopWhenFound,
      stopWhenFound = _ref$stopWhenFound === undefined ? true : _ref$stopWhenFound;

  var LOOP_LIMIT = 100;
  var loopCount = 0;
  var values = void 0;
  while (dict) {
    var value = getArray ? dict.getArray(key) : dict.get(key);
    if (value !== undefined) {
      if (stopWhenFound) {
        return value;
      }
      if (!values) {
        values = [];
      }
      values.push(value);
    }
    if (++loopCount > LOOP_LIMIT) {
      warn('getInheritableProperty: maximum loop count exceeded for "' + key + '"');
      break;
    }
    dict = dict.get('Parent');
  }
  return values;
}
var Util = function UtilClosure() {
  function Util() {}
  var rgbBuf = ['rgb(', 0, ',', 0, ',', 0, ')'];
  Util.makeCssRgb = function Util_makeCssRgb(r, g, b) {
    rgbBuf[1] = r;
    rgbBuf[3] = g;
    rgbBuf[5] = b;
    return rgbBuf.join('');
  };
  Util.transform = function Util_transform(m1, m2) {
    return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];
  };
  Util.applyTransform = function Util_applyTransform(p, m) {
    var xt = p[0] * m[0] + p[1] * m[2] + m[4];
    var yt = p[0] * m[1] + p[1] * m[3] + m[5];
    return [xt, yt];
  };
  Util.applyInverseTransform = function Util_applyInverseTransform(p, m) {
    var d = m[0] * m[3] - m[1] * m[2];
    var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;
    var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;
    return [xt, yt];
  };
  Util.getAxialAlignedBoundingBox = function Util_getAxialAlignedBoundingBox(r, m) {
    var p1 = Util.applyTransform(r, m);
    var p2 = Util.applyTransform(r.slice(2, 4), m);
    var p3 = Util.applyTransform([r[0], r[3]], m);
    var p4 = Util.applyTransform([r[2], r[1]], m);
    return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];
  };
  Util.inverseTransform = function Util_inverseTransform(m) {
    var d = m[0] * m[3] - m[1] * m[2];
    return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];
  };
  Util.apply3dTransform = function Util_apply3dTransform(m, v) {
    return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];
  };
  Util.singularValueDecompose2dScale = function Util_singularValueDecompose2dScale(m) {
    var transpose = [m[0], m[2], m[1], m[3]];
    var a = m[0] * transpose[0] + m[1] * transpose[2];
    var b = m[0] * transpose[1] + m[1] * transpose[3];
    var c = m[2] * transpose[0] + m[3] * transpose[2];
    var d = m[2] * transpose[1] + m[3] * transpose[3];
    var first = (a + d) / 2;
    var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;
    var sx = first + second || 1;
    var sy = first - second || 1;
    return [Math.sqrt(sx), Math.sqrt(sy)];
  };
  Util.normalizeRect = function Util_normalizeRect(rect) {
    var r = rect.slice(0);
    if (rect[0] > rect[2]) {
      r[0] = rect[2];
      r[2] = rect[0];
    }
    if (rect[1] > rect[3]) {
      r[1] = rect[3];
      r[3] = rect[1];
    }
    return r;
  };
  Util.intersect = function Util_intersect(rect1, rect2) {
    function compare(a, b) {
      return a - b;
    }
    var orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare),
        orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare),
        result = [];
    rect1 = Util.normalizeRect(rect1);
    rect2 = Util.normalizeRect(rect2);
    if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {
      result[0] = orderedX[1];
      result[2] = orderedX[2];
    } else {
      return false;
    }
    if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {
      result[1] = orderedY[1];
      result[3] = orderedY[2];
    } else {
      return false;
    }
    return result;
  };
  return Util;
}();
var ROMAN_NUMBER_MAP = ['', 'C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM', '', 'X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC', '', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX'];
function toRomanNumerals(number) {
  var lowerCase = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  assert(Number.isInteger(number) && number > 0, 'The number should be a positive integer.');
  var pos = void 0,
      romanBuf = [];
  while (number >= 1000) {
    number -= 1000;
    romanBuf.push('M');
  }
  pos = number / 100 | 0;
  number %= 100;
  romanBuf.push(ROMAN_NUMBER_MAP[pos]);
  pos = number / 10 | 0;
  number %= 10;
  romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);
  romanBuf.push(ROMAN_NUMBER_MAP[20 + number]);
  var romanStr = romanBuf.join('');
  return lowerCase ? romanStr.toLowerCase() : romanStr;
}
var PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];
function stringToPDFString(str) {
  var i,
      n = str.length,
      strBuf = [];
  if (str[0] === '\xFE' && str[1] === '\xFF') {
    for (i = 2; i < n; i += 2) {
      strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));
    }
  } else {
    for (i = 0; i < n; ++i) {
      var code = PDFStringTranslateTable[str.charCodeAt(i)];
      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));
    }
  }
  return strBuf.join('');
}
function stringToUTF8String(str) {
  return decodeURIComponent(escape(str));
}
function utf8StringToString(str) {
  return unescape(encodeURIComponent(str));
}
function isEmptyObj(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
}
function isBool(v) {
  return typeof v === 'boolean';
}
function isNum(v) {
  return typeof v === 'number';
}
function isString(v) {
  return typeof v === 'string';
}
function isArrayBuffer(v) {
  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.byteLength !== undefined;
}
function isSpace(ch) {
  return ch === 0x20 || ch === 0x09 || ch === 0x0D || ch === 0x0A;
}
function createPromiseCapability() {
  var capability = {};
  capability.promise = new Promise(function (resolve, reject) {
    capability.resolve = resolve;
    capability.reject = reject;
  });
  return capability;
}
var createObjectURL = function createObjectURLClosure() {
  var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
  return function createObjectURL(data, contentType) {
    var forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

    if (!forceDataSchema && _url_polyfill.URL.createObjectURL) {
      var blob = new Blob([data], { type: contentType });
      return _url_polyfill.URL.createObjectURL(blob);
    }
    var buffer = 'data:' + contentType + ';base64,';
    for (var i = 0, ii = data.length; i < ii; i += 3) {
      var b1 = data[i] & 0xFF;
      var b2 = data[i + 1] & 0xFF;
      var b3 = data[i + 2] & 0xFF;
      var d1 = b1 >> 2,
          d2 = (b1 & 3) << 4 | b2 >> 4;
      var d3 = i + 1 < ii ? (b2 & 0xF) << 2 | b3 >> 6 : 64;
      var d4 = i + 2 < ii ? b3 & 0x3F : 64;
      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];
    }
    return buffer;
  };
}();
exports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;
exports.IDENTITY_MATRIX = IDENTITY_MATRIX;
exports.OPS = OPS;
exports.VerbosityLevel = VerbosityLevel;
exports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;
exports.AnnotationBorderStyleType = AnnotationBorderStyleType;
exports.AnnotationFieldFlag = AnnotationFieldFlag;
exports.AnnotationFlag = AnnotationFlag;
exports.AnnotationType = AnnotationType;
exports.FontType = FontType;
exports.ImageKind = ImageKind;
exports.CMapCompressionType = CMapCompressionType;
exports.AbortException = AbortException;
exports.InvalidPDFException = InvalidPDFException;
exports.MissingDataException = MissingDataException;
exports.MissingPDFException = MissingPDFException;
exports.NativeImageDecoding = NativeImageDecoding;
exports.PasswordException = PasswordException;
exports.PasswordResponses = PasswordResponses;
exports.PermissionFlag = PermissionFlag;
exports.StreamType = StreamType;
exports.TextRenderingMode = TextRenderingMode;
exports.UnexpectedResponseException = UnexpectedResponseException;
exports.UnknownErrorException = UnknownErrorException;
exports.Util = Util;
exports.toRomanNumerals = toRomanNumerals;
exports.XRefParseException = XRefParseException;
exports.FormatError = FormatError;
exports.arrayByteLength = arrayByteLength;
exports.arraysToBytes = arraysToBytes;
exports.assert = assert;
exports.bytesToString = bytesToString;
exports.createPromiseCapability = createPromiseCapability;
exports.createObjectURL = createObjectURL;
exports.deprecated = deprecated;
exports.getInheritableProperty = getInheritableProperty;
exports.getLookupTableFactory = getLookupTableFactory;
exports.getVerbosityLevel = getVerbosityLevel;
exports.info = info;
exports.isArrayBuffer = isArrayBuffer;
exports.isBool = isBool;
exports.isEmptyObj = isEmptyObj;
exports.isNum = isNum;
exports.isString = isString;
exports.isSpace = isSpace;
exports.isSameOrigin = isSameOrigin;
exports.createValidAbsoluteUrl = createValidAbsoluteUrl;
exports.isLittleEndian = isLittleEndian;
exports.isEvalSupported = isEvalSupported;
exports.log2 = log2;
exports.readInt8 = readInt8;
exports.readUint16 = readUint16;
exports.readUint32 = readUint32;
exports.removeNullCharacters = removeNullCharacters;
exports.ReadableStream = _streams_polyfill.ReadableStream;
exports.URL = _url_polyfill.URL;
exports.setVerbosityLevel = setVerbosityLevel;
exports.shadow = shadow;
exports.string32 = string32;
exports.stringToBytes = stringToBytes;
exports.stringToPDFString = stringToPDFString;
exports.stringToUTF8String = stringToUTF8String;
exports.utf8StringToString = utf8StringToString;
exports.warn = warn;
exports.unreachable = unreachable;

/***/ }),
/* 2 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var globalScope = __w_pdfjs_require__(3);
if (!globalScope._pdfjsCompatibilityChecked) {
  globalScope._pdfjsCompatibilityChecked = true;
  var isNodeJS = __w_pdfjs_require__(4);
  var hasDOM = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && (typeof document === 'undefined' ? 'undefined' : _typeof(document)) === 'object';
  (function checkNodeBtoa() {
    if (globalScope.btoa || !isNodeJS()) {
      return;
    }
    globalScope.btoa = function (chars) {
      return Buffer.from(chars, 'binary').toString('base64');
    };
  })();
  (function checkNodeAtob() {
    if (globalScope.atob || !isNodeJS()) {
      return;
    }
    globalScope.atob = function (input) {
      return Buffer.from(input, 'base64').toString('binary');
    };
  })();
  (function checkCurrentScript() {
    if (!hasDOM) {
      return;
    }
    if ('currentScript' in document) {
      return;
    }
    Object.defineProperty(document, 'currentScript', {
      get: function get() {
        var scripts = document.getElementsByTagName('script');
        return scripts[scripts.length - 1];
      },

      enumerable: true,
      configurable: true
    });
  })();
  (function checkChildNodeRemove() {
    if (!hasDOM) {
      return;
    }
    if (typeof Element.prototype.remove !== 'undefined') {
      return;
    }
    Element.prototype.remove = function () {
      if (this.parentNode) {
        this.parentNode.removeChild(this);
      }
    };
  })();
  (function checkDOMTokenListToggle() {
    if (!hasDOM || isNodeJS()) {
      return;
    }
    var div = document.createElement('div');
    if (div.classList.toggle('test', 0) === false) {
      return;
    }
    var originalDOMTokenListToggle = DOMTokenList.prototype.toggle;
    DOMTokenList.prototype.toggle = function (token) {
      if (arguments.length > 1) {
        var force = !!arguments[1];
        return this[force ? 'add' : 'remove'](token), force;
      }
      return originalDOMTokenListToggle(token);
    };
  })();
  (function checkStringIncludes() {
    if (String.prototype.includes) {
      return;
    }
    __w_pdfjs_require__(5);
  })();
  (function checkArrayIncludes() {
    if (Array.prototype.includes) {
      return;
    }
    __w_pdfjs_require__(33);
  })();
  (function checkObjectAssign() {
    if (Object.assign) {
      return;
    }
    __w_pdfjs_require__(42);
  })();
  (function checkMathLog2() {
    if (Math.log2) {
      return;
    }
    Math.log2 = __w_pdfjs_require__(52);
  })();
  (function checkNumberIsNaN() {
    if (Number.isNaN) {
      return;
    }
    Number.isNaN = __w_pdfjs_require__(54);
  })();
  (function checkNumberIsInteger() {
    if (Number.isInteger) {
      return;
    }
    Number.isInteger = __w_pdfjs_require__(56);
  })();
  (function checkPromise() {
    if (globalScope.Promise) {
      return;
    }
    globalScope.Promise = __w_pdfjs_require__(59);
  })();
  (function checkWeakMap() {
    if (globalScope.WeakMap) {
      return;
    }
    globalScope.WeakMap = __w_pdfjs_require__(94);
  })();
  (function checkStringCodePointAt() {
    if (String.codePointAt) {
      return;
    }
    String.codePointAt = __w_pdfjs_require__(111);
  })();
  (function checkStringFromCodePoint() {
    if (String.fromCodePoint) {
      return;
    }
    String.fromCodePoint = __w_pdfjs_require__(113);
  })();
  (function checkSymbol() {
    if (globalScope.Symbol) {
      return;
    }
    __w_pdfjs_require__(115);
  })();
  (function checkObjectValues() {
    if (Object.values) {
      return;
    }
    Object.values = __w_pdfjs_require__(122);
  })();
}

/***/ }),
/* 3 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


module.exports = typeof window !== 'undefined' && window.Math === Math ? window : typeof global !== 'undefined' && global.Math === Math ? global : typeof self !== 'undefined' && self.Math === Math ? self : {};

/***/ }),
/* 4 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

module.exports = function isNodeJS() {
  return (typeof process === 'undefined' ? 'undefined' : _typeof(process)) === 'object' && process + '' === '[object process]';
};

/***/ }),
/* 5 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


__w_pdfjs_require__(6);
module.exports = __w_pdfjs_require__(9).String.includes;

/***/ }),
/* 6 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var $export = __w_pdfjs_require__(7);
var context = __w_pdfjs_require__(25);
var INCLUDES = 'includes';
$export($export.P + $export.F * __w_pdfjs_require__(32)(INCLUDES), 'String', {
  includes: function includes(searchString) {
    return !!~context(this, searchString, INCLUDES).indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
  }
});

/***/ }),
/* 7 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var global = __w_pdfjs_require__(8);
var core = __w_pdfjs_require__(9);
var hide = __w_pdfjs_require__(10);
var redefine = __w_pdfjs_require__(20);
var ctx = __w_pdfjs_require__(23);
var PROTOTYPE = 'prototype';
var $export = function $export(type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
  var key, own, out, exp;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    own = !IS_FORCED && target && target[key] !== undefined;
    out = (own ? target : source)[key];
    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    if (target) redefine(target, key, out, type & $export.U);
    if (exports[key] != out) hide(exports, key, exp);
    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
  }
};
global.core = core;
$export.F = 1;
$export.G = 2;
$export.S = 4;
$export.P = 8;
$export.B = 16;
$export.W = 32;
$export.U = 64;
$export.R = 128;
module.exports = $export;

/***/ }),
/* 8 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
if (typeof __g == 'number') __g = global;

/***/ }),
/* 9 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var core = module.exports = { version: '2.5.7' };
if (typeof __e == 'number') __e = core;

/***/ }),
/* 10 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var dP = __w_pdfjs_require__(11);
var createDesc = __w_pdfjs_require__(19);
module.exports = __w_pdfjs_require__(15) ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

/***/ }),
/* 11 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var anObject = __w_pdfjs_require__(12);
var IE8_DOM_DEFINE = __w_pdfjs_require__(14);
var toPrimitive = __w_pdfjs_require__(18);
var dP = Object.defineProperty;
exports.f = __w_pdfjs_require__(15) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) {}
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

/***/ }),
/* 12 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var isObject = __w_pdfjs_require__(13);
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};

/***/ }),
/* 13 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

module.exports = function (it) {
  return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) === 'object' ? it !== null : typeof it === 'function';
};

/***/ }),
/* 14 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


module.exports = !__w_pdfjs_require__(15) && !__w_pdfjs_require__(16)(function () {
  return Object.defineProperty(__w_pdfjs_require__(17)('div'), 'a', {
    get: function get() {
      return 7;
    }
  }).a != 7;
});

/***/ }),
/* 15 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


module.exports = !__w_pdfjs_require__(16)(function () {
  return Object.defineProperty({}, 'a', {
    get: function get() {
      return 7;
    }
  }).a != 7;
});

/***/ }),
/* 16 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};

/***/ }),
/* 17 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var isObject = __w_pdfjs_require__(13);
var document = __w_pdfjs_require__(8).document;
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};

/***/ }),
/* 18 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var isObject = __w_pdfjs_require__(13);
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};

/***/ }),
/* 19 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

/***/ }),
/* 20 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var global = __w_pdfjs_require__(8);
var hide = __w_pdfjs_require__(10);
var has = __w_pdfjs_require__(21);
var SRC = __w_pdfjs_require__(22)('src');
var TO_STRING = 'toString';
var $toString = Function[TO_STRING];
var TPL = ('' + $toString).split(TO_STRING);
__w_pdfjs_require__(9).inspectSource = function (it) {
  return $toString.call(it);
};
(module.exports = function (O, key, val, safe) {
  var isFunction = typeof val == 'function';
  if (isFunction) has(val, 'name') || hide(val, 'name', key);
  if (O[key] === val) return;
  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
  if (O === global) {
    O[key] = val;
  } else if (!safe) {
    delete O[key];
    hide(O, key, val);
  } else if (O[key]) {
    O[key] = val;
  } else {
    hide(O, key, val);
  }
})(Function.prototype, TO_STRING, function toString() {
  return typeof this == 'function' && this[SRC] || $toString.call(this);
});

/***/ }),
/* 21 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};

/***/ }),
/* 22 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};

/***/ }),
/* 23 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var aFunction = __w_pdfjs_require__(24);
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1:
      return function (a) {
        return fn.call(that, a);
      };
    case 2:
      return function (a, b) {
        return fn.call(that, a, b);
      };
    case 3:
      return function (a, b, c) {
        return fn.call(that, a, b, c);
      };
  }
  return function () {
    return fn.apply(that, arguments);
  };
};

/***/ }),
/* 24 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};

/***/ }),
/* 25 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var isRegExp = __w_pdfjs_require__(26);
var defined = __w_pdfjs_require__(31);
module.exports = function (that, searchString, NAME) {
  if (isRegExp(searchString)) throw TypeError('String#' + NAME + " doesn't accept regex!");
  return String(defined(that));
};

/***/ }),
/* 26 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var isObject = __w_pdfjs_require__(13);
var cof = __w_pdfjs_require__(27);
var MATCH = __w_pdfjs_require__(28)('match');
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
};

/***/ }),
/* 27 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var toString = {}.toString;
module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};

/***/ }),
/* 28 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var store = __w_pdfjs_require__(29)('wks');
var uid = __w_pdfjs_require__(22);
var _Symbol = __w_pdfjs_require__(8).Symbol;
var USE_SYMBOL = typeof _Symbol == 'function';
var $exports = module.exports = function (name) {
  return store[name] || (store[name] = USE_SYMBOL && _Symbol[name] || (USE_SYMBOL ? _Symbol : uid)('Symbol.' + name));
};
$exports.store = store;

/***/ }),
/* 29 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var core = __w_pdfjs_require__(9);
var global = __w_pdfjs_require__(8);
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});
(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __w_pdfjs_require__(30) ? 'pure' : 'global',
  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'
});

/***/ }),
/* 30 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


module.exports = false;

/***/ }),
/* 31 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};

/***/ }),
/* 32 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var MATCH = __w_pdfjs_require__(28)('match');
module.exports = function (KEY) {
  var re = /./;
  try {
    '/./'[KEY](re);
  } catch (e) {
    try {
      re[MATCH] = false;
      return !'/./'[KEY](re);
    } catch (f) {}
  }
  return true;
};

/***/ }),
/* 33 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


__w_pdfjs_require__(34);
module.exports = __w_pdfjs_require__(9).Array.includes;

/***/ }),
/* 34 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var $export = __w_pdfjs_require__(7);
var $includes = __w_pdfjs_require__(35)(true);
$export($export.P, 'Array', {
  includes: function includes(el) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});
__w_pdfjs_require__(41)('includes');

/***/ }),
/* 35 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var toIObject = __w_pdfjs_require__(36);
var toLength = __w_pdfjs_require__(38);
var toAbsoluteIndex = __w_pdfjs_require__(40);
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      if (value != value) return true;
    } else for (; length > index; index++) {
      if (IS_INCLUDES || index in O) {
        if (O[index] === el) return IS_INCLUDES || index || 0;
      }
    }return !IS_INCLUDES && -1;
  };
};

/***/ }),
/* 36 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var IObject = __w_pdfjs_require__(37);
var defined = __w_pdfjs_require__(31);
module.exports = function (it) {
  return IObject(defined(it));
};

/***/ }),
/* 37 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var cof = __w_pdfjs_require__(27);
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};

/***/ }),
/* 38 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var toInteger = __w_pdfjs_require__(39);
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0;
};

/***/ }),
/* 39 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};

/***/ }),
/* 40 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var toInteger = __w_pdfjs_require__(39);
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};

/***/ }),
/* 41 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var UNSCOPABLES = __w_pdfjs_require__(28)('unscopables');
var ArrayProto = Array.prototype;
if (ArrayProto[UNSCOPABLES] == undefined) __w_pdfjs_require__(10)(ArrayProto, UNSCOPABLES, {});
module.exports = function (key) {
  ArrayProto[UNSCOPABLES][key] = true;
};

/***/ }),
/* 42 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


__w_pdfjs_require__(43);
module.exports = __w_pdfjs_require__(9).Object.assign;

/***/ }),
/* 43 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var $export = __w_pdfjs_require__(7);
$export($export.S + $export.F, 'Object', { assign: __w_pdfjs_require__(44) });

/***/ }),
/* 44 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var getKeys = __w_pdfjs_require__(45);
var gOPS = __w_pdfjs_require__(49);
var pIE = __w_pdfjs_require__(50);
var toObject = __w_pdfjs_require__(51);
var IObject = __w_pdfjs_require__(37);
var $assign = Object.assign;
module.exports = !$assign || __w_pdfjs_require__(16)(function () {
  var A = {};
  var B = {};
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) {
    B[k] = k;
  });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) {
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
    }
  }
  return T;
} : $assign;

/***/ }),
/* 45 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var $keys = __w_pdfjs_require__(46);
var enumBugKeys = __w_pdfjs_require__(48);
module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};

/***/ }),
/* 46 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var has = __w_pdfjs_require__(21);
var toIObject = __w_pdfjs_require__(36);
var arrayIndexOf = __w_pdfjs_require__(35)(false);
var IE_PROTO = __w_pdfjs_require__(47)('IE_PROTO');
module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) {
    if (key != IE_PROTO) has(O, key) && result.push(key);
  }while (names.length > i) {
    if (has(O, key = names[i++])) {
      ~arrayIndexOf(result, key) || result.push(key);
    }
  }return result;
};

/***/ }),
/* 47 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var shared = __w_pdfjs_require__(29)('keys');
var uid = __w_pdfjs_require__(22);
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};

/***/ }),
/* 48 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


module.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');

/***/ }),
/* 49 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


exports.f = Object.getOwnPropertySymbols;

/***/ }),
/* 50 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


exports.f = {}.propertyIsEnumerable;

/***/ }),
/* 51 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var defined = __w_pdfjs_require__(31);
module.exports = function (it) {
  return Object(defined(it));
};

/***/ }),
/* 52 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


__w_pdfjs_require__(53);
module.exports = __w_pdfjs_require__(9).Math.log2;

/***/ }),
/* 53 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var $export = __w_pdfjs_require__(7);
$export($export.S, 'Math', {
  log2: function log2(x) {
    return Math.log(x) / Math.LN2;
  }
});

/***/ }),
/* 54 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


__w_pdfjs_require__(55);
module.exports = __w_pdfjs_require__(9).Number.isNaN;

/***/ }),
/* 55 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var $export = __w_pdfjs_require__(7);
$export($export.S, 'Number', {
  isNaN: function isNaN(number) {
    return number != number;
  }
});

/***/ }),
/* 56 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


__w_pdfjs_require__(57);
module.exports = __w_pdfjs_require__(9).Number.isInteger;

/***/ }),
/* 57 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var $export = __w_pdfjs_require__(7);
$export($export.S, 'Number', { isInteger: __w_pdfjs_require__(58) });

/***/ }),
/* 58 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var isObject = __w_pdfjs_require__(13);
var floor = Math.floor;
module.exports = function isInteger(it) {
  return !isObject(it) && isFinite(it) && floor(it) === it;
};

/***/ }),
/* 59 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


__w_pdfjs_require__(60);
__w_pdfjs_require__(62);
__w_pdfjs_require__(72);
__w_pdfjs_require__(75);
__w_pdfjs_require__(92);
__w_pdfjs_require__(93);
module.exports = __w_pdfjs_require__(9).Promise;

/***/ }),
/* 60 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var classof = __w_pdfjs_require__(61);
var test = {};
test[__w_pdfjs_require__(28)('toStringTag')] = 'z';
if (test + '' != '[object z]') {
  __w_pdfjs_require__(20)(Object.prototype, 'toString', function toString() {
    return '[object ' + classof(this) + ']';
  }, true);
}

/***/ }),
/* 61 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var cof = __w_pdfjs_require__(27);
var TAG = __w_pdfjs_require__(28)('toStringTag');
var ARG = cof(function () {
  return arguments;
}()) == 'Arguments';
var tryGet = function tryGet(it, key) {
  try {
    return it[key];
  } catch (e) {}
};
module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null' : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T : ARG ? cof(O) : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};

/***/ }),
/* 62 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var $at = __w_pdfjs_require__(63)(true);
__w_pdfjs_require__(64)(String, 'String', function (iterated) {
  this._t = String(iterated);
  this._i = 0;
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return {
    value: undefined,
    done: true
  };
  point = $at(O, index);
  this._i += point.length;
  return {
    value: point,
    done: false
  };
});

/***/ }),
/* 63 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var toInteger = __w_pdfjs_require__(39);
var defined = __w_pdfjs_require__(31);
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};

/***/ }),
/* 64 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var LIBRARY = __w_pdfjs_require__(30);
var $export = __w_pdfjs_require__(7);
var redefine = __w_pdfjs_require__(20);
var hide = __w_pdfjs_require__(10);
var Iterators = __w_pdfjs_require__(65);
var $iterCreate = __w_pdfjs_require__(66);
var setToStringTag = __w_pdfjs_require__(70);
var getPrototypeOf = __w_pdfjs_require__(71);
var ITERATOR = __w_pdfjs_require__(28)('iterator');
var BUGGY = !([].keys && 'next' in [].keys());
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';
var returnThis = function returnThis() {
  return this;
};
module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function getMethod(kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS:
        return function keys() {
          return new Constructor(this, kind);
        };
      case VALUES:
        return function values() {
          return new Constructor(this, kind);
        };
    }
    return function entries() {
      return new Constructor(this, kind);
    };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      setToStringTag(IteratorPrototype, TAG, true);
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() {
      return $native.call(this);
    };
  }
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};

/***/ }),
/* 65 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


module.exports = {};

/***/ }),
/* 66 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var create = __w_pdfjs_require__(67);
var descriptor = __w_pdfjs_require__(19);
var setToStringTag = __w_pdfjs_require__(70);
var IteratorPrototype = {};
__w_pdfjs_require__(10)(IteratorPrototype, __w_pdfjs_require__(28)('iterator'), function () {
  return this;
});
module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};

/***/ }),
/* 67 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var anObject = __w_pdfjs_require__(12);
var dPs = __w_pdfjs_require__(68);
var enumBugKeys = __w_pdfjs_require__(48);
var IE_PROTO = __w_pdfjs_require__(47)('IE_PROTO');
var Empty = function Empty() {};
var PROTOTYPE = 'prototype';
var _createDict = function createDict() {
  var iframe = __w_pdfjs_require__(17)('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __w_pdfjs_require__(69).appendChild(iframe);
  iframe.src = 'javascript:';
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  _createDict = iframeDocument.F;
  while (i--) {
    delete _createDict[PROTOTYPE][enumBugKeys[i]];
  }return _createDict();
};
module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    result[IE_PROTO] = O;
  } else result = _createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};

/***/ }),
/* 68 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var dP = __w_pdfjs_require__(11);
var anObject = __w_pdfjs_require__(12);
var getKeys = __w_pdfjs_require__(45);
module.exports = __w_pdfjs_require__(15) ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) {
    dP.f(O, P = keys[i++], Properties[P]);
  }return O;
};

/***/ }),
/* 69 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var document = __w_pdfjs_require__(8).document;
module.exports = document && document.documentElement;

/***/ }),
/* 70 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var def = __w_pdfjs_require__(11).f;
var has = __w_pdfjs_require__(21);
var TAG = __w_pdfjs_require__(28)('toStringTag');
module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {
    configurable: true,
    value: tag
  });
};

/***/ }),
/* 71 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var has = __w_pdfjs_require__(21);
var toObject = __w_pdfjs_require__(51);
var IE_PROTO = __w_pdfjs_require__(47)('IE_PROTO');
var ObjectProto = Object.prototype;
module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  }
  return O instanceof Object ? ObjectProto : null;
};

/***/ }),
/* 72 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var $iterators = __w_pdfjs_require__(73);
var getKeys = __w_pdfjs_require__(45);
var redefine = __w_pdfjs_require__(20);
var global = __w_pdfjs_require__(8);
var hide = __w_pdfjs_require__(10);
var Iterators = __w_pdfjs_require__(65);
var wks = __w_pdfjs_require__(28);
var ITERATOR = wks('iterator');
var TO_STRING_TAG = wks('toStringTag');
var ArrayValues = Iterators.Array;
var DOMIterables = {
  CSSRuleList: true,
  CSSStyleDeclaration: false,
  CSSValueList: false,
  ClientRectList: false,
  DOMRectList: false,
  DOMStringList: false,
  DOMTokenList: true,
  DataTransferItemList: false,
  FileList: false,
  HTMLAllCollection: false,
  HTMLCollection: false,
  HTMLFormElement: false,
  HTMLSelectElement: false,
  MediaList: true,
  MimeTypeArray: false,
  NamedNodeMap: false,
  NodeList: true,
  PaintRequestList: false,
  Plugin: false,
  PluginArray: false,
  SVGLengthList: false,
  SVGNumberList: false,
  SVGPathSegList: false,
  SVGPointList: false,
  SVGStringList: false,
  SVGTransformList: false,
  SourceBufferList: false,
  StyleSheetList: true,
  TextTrackCueList: false,
  TextTrackList: false,
  TouchList: false
};
for (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {
  var NAME = collections[i];
  var explicit = DOMIterables[NAME];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  var key;
  if (proto) {
    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
    Iterators[NAME] = ArrayValues;
    if (explicit) for (key in $iterators) {
      if (!proto[key]) redefine(proto, key, $iterators[key], true);
    }
  }
}

/***/ }),
/* 73 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var addToUnscopables = __w_pdfjs_require__(41);
var step = __w_pdfjs_require__(74);
var Iterators = __w_pdfjs_require__(65);
var toIObject = __w_pdfjs_require__(36);
module.exports = __w_pdfjs_require__(64)(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated);
  this._i = 0;
  this._k = kind;
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');
Iterators.Arguments = Iterators.Array;
addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');

/***/ }),
/* 74 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


module.exports = function (done, value) {
  return {
    value: value,
    done: !!done
  };
};

/***/ }),
/* 75 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var LIBRARY = __w_pdfjs_require__(30);
var global = __w_pdfjs_require__(8);
var ctx = __w_pdfjs_require__(23);
var classof = __w_pdfjs_require__(61);
var $export = __w_pdfjs_require__(7);
var isObject = __w_pdfjs_require__(13);
var aFunction = __w_pdfjs_require__(24);
var anInstance = __w_pdfjs_require__(76);
var forOf = __w_pdfjs_require__(77);
var speciesConstructor = __w_pdfjs_require__(81);
var task = __w_pdfjs_require__(82).set;
var microtask = __w_pdfjs_require__(84)();
var newPromiseCapabilityModule = __w_pdfjs_require__(85);
var perform = __w_pdfjs_require__(86);
var userAgent = __w_pdfjs_require__(87);
var promiseResolve = __w_pdfjs_require__(88);
var PROMISE = 'Promise';
var TypeError = global.TypeError;
var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8 || '';
var $Promise = global[PROMISE];
var isNode = classof(process) == 'process';
var empty = function empty() {};
var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;
var USE_NATIVE = !!function () {
  try {
    var promise = $Promise.resolve(1);
    var FakePromise = (promise.constructor = {})[__w_pdfjs_require__(28)('species')] = function (exec) {
      exec(empty, empty);
    };
    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise && v8.indexOf('6.6') !== 0 && userAgent.indexOf('Chrome/66') === -1;
  } catch (e) {}
}();
var isThenable = function isThenable(it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var notify = function notify(promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;
    var run = function run(reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled(promise);
            promise._h = 1;
          }
          if (handler === true) result = value;else {
            if (domain) domain.enter();
            result = handler(value);
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        if (domain && !exited) domain.exit();
        reject(e);
      }
    };
    while (chain.length > i) {
      run(chain[i++]);
    }promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled(promise);
  });
};
var onUnhandled = function onUnhandled(promise) {
  task.call(global, function () {
    var value = promise._v;
    var unhandled = isUnhandled(promise);
    var result, handler, console;
    if (unhandled) {
      result = perform(function () {
        if (isNode) {
          process.emit('unhandledRejection', value, promise);
        } else if (handler = global.onunhandledrejection) {
          handler({
            promise: promise,
            reason: value
          });
        } else if ((console = global.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      });
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    }
    promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};
var isUnhandled = function isUnhandled(promise) {
  return promise._h !== 1 && (promise._a || promise._c).length === 0;
};
var onHandleUnhandled = function onHandleUnhandled(promise) {
  task.call(global, function () {
    var handler;
    if (isNode) {
      process.emit('rejectionHandled', promise);
    } else if (handler = global.onrejectionhandled) {
      handler({
        promise: promise,
        reason: promise._v
      });
    }
  });
};
var $reject = function $reject(value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise;
  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function $resolve(value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise;
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    if (then = isThenable(value)) {
      microtask(function () {
        var wrapper = {
          _w: promise,
          _d: false
        };
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch (e) {
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch (e) {
    $reject.call({
      _w: promise,
      _d: false
    }, e);
  }
};
if (!USE_NATIVE) {
  $Promise = function Promise(executor) {
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch (err) {
      $reject.call(this, err);
    }
  };
  Internal = function Promise(executor) {
    this._c = [];
    this._a = undefined;
    this._s = 0;
    this._d = false;
    this._v = undefined;
    this._h = 0;
    this._n = false;
  };
  Internal.prototype = __w_pdfjs_require__(89)($Promise.prototype, {
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if (this._a) this._a.push(reaction);
      if (this._s) notify(this, false);
      return reaction.promise;
    },
    'catch': function _catch(onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function OwnPromiseCapability() {
    var promise = new Internal();
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject = ctx($reject, promise, 1);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function newPromiseCapability(C) {
    return C === $Promise || C === Wrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);
  };
}
$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
__w_pdfjs_require__(70)($Promise, PROMISE);
__w_pdfjs_require__(90)(PROMISE);
Wrapper = __w_pdfjs_require__(9)[PROMISE];
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  resolve: function resolve(x) {
    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
  }
});
$export($export.S + $export.F * !(USE_NATIVE && __w_pdfjs_require__(91)(function (iter) {
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      forOf(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      forOf(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});

/***/ }),
/* 76 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) {
    throw TypeError(name + ': incorrect invocation!');
  }
  return it;
};

/***/ }),
/* 77 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var ctx = __w_pdfjs_require__(23);
var call = __w_pdfjs_require__(78);
var isArrayIter = __w_pdfjs_require__(79);
var anObject = __w_pdfjs_require__(12);
var toLength = __w_pdfjs_require__(38);
var getIterFn = __w_pdfjs_require__(80);
var BREAK = {};
var RETURN = {};
var _exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () {
    return iterable;
  } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
_exports.BREAK = BREAK;
_exports.RETURN = RETURN;

/***/ }),
/* 78 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var anObject = __w_pdfjs_require__(12);
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};

/***/ }),
/* 79 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var Iterators = __w_pdfjs_require__(65);
var ITERATOR = __w_pdfjs_require__(28)('iterator');
var ArrayProto = Array.prototype;
module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};

/***/ }),
/* 80 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var classof = __w_pdfjs_require__(61);
var ITERATOR = __w_pdfjs_require__(28)('iterator');
var Iterators = __w_pdfjs_require__(65);
module.exports = __w_pdfjs_require__(9).getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];
};

/***/ }),
/* 81 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var anObject = __w_pdfjs_require__(12);
var aFunction = __w_pdfjs_require__(24);
var SPECIES = __w_pdfjs_require__(28)('species');
module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};

/***/ }),
/* 82 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var ctx = __w_pdfjs_require__(23);
var invoke = __w_pdfjs_require__(83);
var html = __w_pdfjs_require__(69);
var cel = __w_pdfjs_require__(17);
var global = __w_pdfjs_require__(8);
var process = global.process;
var setTask = global.setImmediate;
var clearTask = global.clearImmediate;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;
var run = function run() {
  var id = +this;
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function listener(event) {
  run.call(event.data);
};
if (!setTask || !clearTask) {
  setTask = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) {
      args.push(arguments[i++]);
    }queue[++counter] = function () {
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id) {
    delete queue[id];
  };
  if (__w_pdfjs_require__(27)(process) == 'process') {
    defer = function defer(id) {
      process.nextTick(ctx(run, id, 1));
    };
  } else if (Dispatch && Dispatch.now) {
    defer = function defer(id) {
      Dispatch.now(ctx(run, id, 1));
    };
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
    defer = function defer(id) {
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  } else if (ONREADYSTATECHANGE in cel('script')) {
    defer = function defer(id) {
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run.call(id);
      };
    };
  } else {
    defer = function defer(id) {
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set: setTask,
  clear: clearTask
};

/***/ }),
/* 83 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


module.exports = function (fn, args, that) {
  var un = that === undefined;
  switch (args.length) {
    case 0:
      return un ? fn() : fn.call(that);
    case 1:
      return un ? fn(args[0]) : fn.call(that, args[0]);
    case 2:
      return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);
    case 3:
      return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);
    case 4:
      return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);
  }
  return fn.apply(that, args);
};

/***/ }),
/* 84 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var global = __w_pdfjs_require__(8);
var macrotask = __w_pdfjs_require__(82).set;
var Observer = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var isNode = __w_pdfjs_require__(27)(process) == 'process';
module.exports = function () {
  var head, last, notify;
  var flush = function flush() {
    var parent, fn;
    if (isNode && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (e) {
        if (head) notify();else last = undefined;
        throw e;
      }
    }
    last = undefined;
    if (parent) parent.enter();
  };
  if (isNode) {
    notify = function notify() {
      process.nextTick(flush);
    };
  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer(flush).observe(node, { characterData: true });
    notify = function notify() {
      node.data = toggle = !toggle;
    };
  } else if (Promise && Promise.resolve) {
    var promise = Promise.resolve(undefined);
    notify = function notify() {
      promise.then(flush);
    };
  } else {
    notify = function notify() {
      macrotask.call(global, flush);
    };
  }
  return function (fn) {
    var task = {
      fn: fn,
      next: undefined
    };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify();
    }
    last = task;
  };
};

/***/ }),
/* 85 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var aFunction = __w_pdfjs_require__(24);
function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
}
module.exports.f = function (C) {
  return new PromiseCapability(C);
};

/***/ }),
/* 86 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


module.exports = function (exec) {
  try {
    return {
      e: false,
      v: exec()
    };
  } catch (e) {
    return {
      e: true,
      v: e
    };
  }
};

/***/ }),
/* 87 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var global = __w_pdfjs_require__(8);
var navigator = global.navigator;
module.exports = navigator && navigator.userAgent || '';

/***/ }),
/* 88 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var anObject = __w_pdfjs_require__(12);
var isObject = __w_pdfjs_require__(13);
var newPromiseCapability = __w_pdfjs_require__(85);
module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};

/***/ }),
/* 89 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var redefine = __w_pdfjs_require__(20);
module.exports = function (target, src, safe) {
  for (var key in src) {
    redefine(target, key, src[key], safe);
  }return target;
};

/***/ }),
/* 90 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var global = __w_pdfjs_require__(8);
var dP = __w_pdfjs_require__(11);
var DESCRIPTORS = __w_pdfjs_require__(15);
var SPECIES = __w_pdfjs_require__(28)('species');
module.exports = function (KEY) {
  var C = global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function get() {
      return this;
    }
  });
};

/***/ }),
/* 91 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var ITERATOR = __w_pdfjs_require__(28)('iterator');
var SAFE_CLOSING = false;
try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () {
    SAFE_CLOSING = true;
  };
  Array.from(riter, function () {
    throw 2;
  });
} catch (e) {}
module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () {
      return { done: safe = true };
    };
    arr[ITERATOR] = function () {
      return iter;
    };
    exec(arr);
  } catch (e) {}
  return safe;
};

/***/ }),
/* 92 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var $export = __w_pdfjs_require__(7);
var core = __w_pdfjs_require__(9);
var global = __w_pdfjs_require__(8);
var speciesConstructor = __w_pdfjs_require__(81);
var promiseResolve = __w_pdfjs_require__(88);
$export($export.P + $export.R, 'Promise', {
  'finally': function _finally(onFinally) {
    var C = speciesConstructor(this, core.Promise || global.Promise);
    var isFunction = typeof onFinally == 'function';
    return this.then(isFunction ? function (x) {
      return promiseResolve(C, onFinally()).then(function () {
        return x;
      });
    } : onFinally, isFunction ? function (e) {
      return promiseResolve(C, onFinally()).then(function () {
        throw e;
      });
    } : onFinally);
  }
});

/***/ }),
/* 93 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var $export = __w_pdfjs_require__(7);
var newPromiseCapability = __w_pdfjs_require__(85);
var perform = __w_pdfjs_require__(86);
$export($export.S, 'Promise', {
  'try': function _try(callbackfn) {
    var promiseCapability = newPromiseCapability.f(this);
    var result = perform(callbackfn);
    (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
    return promiseCapability.promise;
  }
});

/***/ }),
/* 94 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


__w_pdfjs_require__(60);
__w_pdfjs_require__(72);
__w_pdfjs_require__(95);
__w_pdfjs_require__(107);
__w_pdfjs_require__(109);
module.exports = __w_pdfjs_require__(9).WeakMap;

/***/ }),
/* 95 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var each = __w_pdfjs_require__(96)(0);
var redefine = __w_pdfjs_require__(20);
var meta = __w_pdfjs_require__(100);
var assign = __w_pdfjs_require__(44);
var weak = __w_pdfjs_require__(101);
var isObject = __w_pdfjs_require__(13);
var fails = __w_pdfjs_require__(16);
var validate = __w_pdfjs_require__(102);
var WEAK_MAP = 'WeakMap';
var getWeak = meta.getWeak;
var isExtensible = Object.isExtensible;
var uncaughtFrozenStore = weak.ufstore;
var tmp = {};
var InternalMap;
var wrapper = function wrapper(get) {
  return function WeakMap() {
    return get(this, arguments.length > 0 ? arguments[0] : undefined);
  };
};
var methods = {
  get: function get(key) {
    if (isObject(key)) {
      var data = getWeak(key);
      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);
      return data ? data[this._i] : undefined;
    }
  },
  set: function set(key, value) {
    return weak.def(validate(this, WEAK_MAP), key, value);
  }
};
var $WeakMap = module.exports = __w_pdfjs_require__(103)(WEAK_MAP, wrapper, methods, weak, true, true);
if (fails(function () {
  return new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7;
})) {
  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);
  assign(InternalMap.prototype, methods);
  meta.NEED = true;
  each(['delete', 'has', 'get', 'set'], function (key) {
    var proto = $WeakMap.prototype;
    var method = proto[key];
    redefine(proto, key, function (a, b) {
      if (isObject(a) && !isExtensible(a)) {
        if (!this._f) this._f = new InternalMap();
        var result = this._f[key](a, b);
        return key == 'set' ? this : result;
      }
      return method.call(this, a, b);
    });
  });
}

/***/ }),
/* 96 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var ctx = __w_pdfjs_require__(23);
var IObject = __w_pdfjs_require__(37);
var toObject = __w_pdfjs_require__(51);
var toLength = __w_pdfjs_require__(38);
var asc = __w_pdfjs_require__(97);
module.exports = function (TYPE, $create) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  var create = $create || asc;
  return function ($this, callbackfn, that) {
    var O = toObject($this);
    var self = IObject(O);
    var f = ctx(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var val, res;
    for (; length > index; index++) {
      if (NO_HOLES || index in self) {
        val = self[index];
        res = f(val, index, O);
        if (TYPE) {
          if (IS_MAP) result[index] = res;else if (res) switch (TYPE) {
            case 3:
              return true;
            case 5:
              return val;
            case 6:
              return index;
            case 2:
              result.push(val);
          } else if (IS_EVERY) return false;
        }
      }
    }return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
  };
};

/***/ }),
/* 97 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var speciesConstructor = __w_pdfjs_require__(98);
module.exports = function (original, length) {
  return new (speciesConstructor(original))(length);
};

/***/ }),
/* 98 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var isObject = __w_pdfjs_require__(13);
var isArray = __w_pdfjs_require__(99);
var SPECIES = __w_pdfjs_require__(28)('species');
module.exports = function (original) {
  var C;
  if (isArray(original)) {
    C = original.constructor;
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  }
  return C === undefined ? Array : C;
};

/***/ }),
/* 99 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var cof = __w_pdfjs_require__(27);
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};

/***/ }),
/* 100 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var META = __w_pdfjs_require__(22)('meta');
var isObject = __w_pdfjs_require__(13);
var has = __w_pdfjs_require__(21);
var setDesc = __w_pdfjs_require__(11).f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !__w_pdfjs_require__(16)(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function setMeta(it) {
  setDesc(it, META, {
    value: {
      i: 'O' + ++id,
      w: {}
    }
  });
};
var fastKey = function fastKey(it, create) {
  if (!isObject(it)) return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    if (!isExtensible(it)) return 'F';
    if (!create) return 'E';
    setMeta(it);
  }
  return it[META].i;
};
var getWeak = function getWeak(it, create) {
  if (!has(it, META)) {
    if (!isExtensible(it)) return true;
    if (!create) return false;
    setMeta(it);
  }
  return it[META].w;
};
var onFreeze = function onFreeze(it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};

/***/ }),
/* 101 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var redefineAll = __w_pdfjs_require__(89);
var getWeak = __w_pdfjs_require__(100).getWeak;
var anObject = __w_pdfjs_require__(12);
var isObject = __w_pdfjs_require__(13);
var anInstance = __w_pdfjs_require__(76);
var forOf = __w_pdfjs_require__(77);
var createArrayMethod = __w_pdfjs_require__(96);
var $has = __w_pdfjs_require__(21);
var validate = __w_pdfjs_require__(102);
var arrayFind = createArrayMethod(5);
var arrayFindIndex = createArrayMethod(6);
var id = 0;
var uncaughtFrozenStore = function uncaughtFrozenStore(that) {
  return that._l || (that._l = new UncaughtFrozenStore());
};
var UncaughtFrozenStore = function UncaughtFrozenStore() {
  this.a = [];
};
var findUncaughtFrozen = function findUncaughtFrozen(store, key) {
  return arrayFind(store.a, function (it) {
    return it[0] === key;
  });
};
UncaughtFrozenStore.prototype = {
  get: function get(key) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) return entry[1];
  },
  has: function has(key) {
    return !!findUncaughtFrozen(this, key);
  },
  set: function set(key, value) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) entry[1] = value;else this.a.push([key, value]);
  },
  'delete': function _delete(key) {
    var index = arrayFindIndex(this.a, function (it) {
      return it[0] === key;
    });
    if (~index) this.a.splice(index, 1);
    return !!~index;
  }
};
module.exports = {
  getConstructor: function getConstructor(wrapper, NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, NAME, '_i');
      that._t = NAME;
      that._i = id++;
      that._l = undefined;
      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      'delete': function _delete(key) {
        if (!isObject(key)) return false;
        var data = getWeak(key);
        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);
        return data && $has(data, this._i) && delete data[this._i];
      },
      has: function has(key) {
        if (!isObject(key)) return false;
        var data = getWeak(key);
        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);
        return data && $has(data, this._i);
      }
    });
    return C;
  },
  def: function def(that, key, value) {
    var data = getWeak(anObject(key), true);
    if (data === true) uncaughtFrozenStore(that).set(key, value);else data[that._i] = value;
    return that;
  },
  ufstore: uncaughtFrozenStore
};

/***/ }),
/* 102 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var isObject = __w_pdfjs_require__(13);
module.exports = function (it, TYPE) {
  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');
  return it;
};

/***/ }),
/* 103 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var global = __w_pdfjs_require__(8);
var $export = __w_pdfjs_require__(7);
var redefine = __w_pdfjs_require__(20);
var redefineAll = __w_pdfjs_require__(89);
var meta = __w_pdfjs_require__(100);
var forOf = __w_pdfjs_require__(77);
var anInstance = __w_pdfjs_require__(76);
var isObject = __w_pdfjs_require__(13);
var fails = __w_pdfjs_require__(16);
var $iterDetect = __w_pdfjs_require__(91);
var setToStringTag = __w_pdfjs_require__(70);
var inheritIfRequired = __w_pdfjs_require__(104);
module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
  var Base = global[NAME];
  var C = Base;
  var ADDER = IS_MAP ? 'set' : 'add';
  var proto = C && C.prototype;
  var O = {};
  var fixMethod = function fixMethod(KEY) {
    var fn = proto[KEY];
    redefine(proto, KEY, KEY == 'delete' ? function (a) {
      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
    } : KEY == 'has' ? function has(a) {
      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
    } : KEY == 'get' ? function get(a) {
      return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
    } : KEY == 'add' ? function add(a) {
      fn.call(this, a === 0 ? 0 : a);
      return this;
    } : function set(a, b) {
      fn.call(this, a === 0 ? 0 : a, b);
      return this;
    });
  };
  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
    new C().entries().next();
  }))) {
    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
    redefineAll(C.prototype, methods);
    meta.NEED = true;
  } else {
    var instance = new C();
    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
    var THROWS_ON_PRIMITIVES = fails(function () {
      instance.has(1);
    });
    var ACCEPT_ITERABLES = $iterDetect(function (iter) {
      new C(iter);
    });
    var BUGGY_ZERO = !IS_WEAK && fails(function () {
      var $instance = new C();
      var index = 5;
      while (index--) {
        $instance[ADDER](index, index);
      }return !$instance.has(-0);
    });
    if (!ACCEPT_ITERABLES) {
      C = wrapper(function (target, iterable) {
        anInstance(target, C, NAME);
        var that = inheritIfRequired(new Base(), target, C);
        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
        return that;
      });
      C.prototype = proto;
      proto.constructor = C;
    }
    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
      fixMethod('delete');
      fixMethod('has');
      IS_MAP && fixMethod('get');
    }
    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);
    if (IS_WEAK && proto.clear) delete proto.clear;
  }
  setToStringTag(C, NAME);
  O[NAME] = C;
  $export($export.G + $export.W + $export.F * (C != Base), O);
  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);
  return C;
};

/***/ }),
/* 104 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var isObject = __w_pdfjs_require__(13);
var setPrototypeOf = __w_pdfjs_require__(105).set;
module.exports = function (that, target, C) {
  var S = target.constructor;
  var P;
  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {
    setPrototypeOf(that, P);
  }
  return that;
};

/***/ }),
/* 105 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var isObject = __w_pdfjs_require__(13);
var anObject = __w_pdfjs_require__(12);
var check = function check(O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? function (test, buggy, set) {
    try {
      set = __w_pdfjs_require__(23)(Function.call, __w_pdfjs_require__(106).f(Object.prototype, '__proto__').set, 2);
      set(test, []);
      buggy = !(test instanceof Array);
    } catch (e) {
      buggy = true;
    }
    return function setPrototypeOf(O, proto) {
      check(O, proto);
      if (buggy) O.__proto__ = proto;else set(O, proto);
      return O;
    };
  }({}, false) : undefined),
  check: check
};

/***/ }),
/* 106 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var pIE = __w_pdfjs_require__(50);
var createDesc = __w_pdfjs_require__(19);
var toIObject = __w_pdfjs_require__(36);
var toPrimitive = __w_pdfjs_require__(18);
var has = __w_pdfjs_require__(21);
var IE8_DOM_DEFINE = __w_pdfjs_require__(14);
var gOPD = Object.getOwnPropertyDescriptor;
exports.f = __w_pdfjs_require__(15) ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) {}
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};

/***/ }),
/* 107 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


__w_pdfjs_require__(108)('WeakMap');

/***/ }),
/* 108 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var $export = __w_pdfjs_require__(7);
module.exports = function (COLLECTION) {
  $export($export.S, COLLECTION, {
    of: function of() {
      var length = arguments.length;
      var A = new Array(length);
      while (length--) {
        A[length] = arguments[length];
      }return new this(A);
    }
  });
};

/***/ }),
/* 109 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


__w_pdfjs_require__(110)('WeakMap');

/***/ }),
/* 110 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var $export = __w_pdfjs_require__(7);
var aFunction = __w_pdfjs_require__(24);
var ctx = __w_pdfjs_require__(23);
var forOf = __w_pdfjs_require__(77);
module.exports = function (COLLECTION) {
  $export($export.S, COLLECTION, {
    from: function from(source) {
      var mapFn = arguments[1];
      var mapping, A, n, cb;
      aFunction(this);
      mapping = mapFn !== undefined;
      if (mapping) aFunction(mapFn);
      if (source == undefined) return new this();
      A = [];
      if (mapping) {
        n = 0;
        cb = ctx(mapFn, arguments[2], 2);
        forOf(source, false, function (nextItem) {
          A.push(cb(nextItem, n++));
        });
      } else {
        forOf(source, false, A.push, A);
      }
      return new this(A);
    }
  });
};

/***/ }),
/* 111 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


__w_pdfjs_require__(112);
module.exports = __w_pdfjs_require__(9).String.codePointAt;

/***/ }),
/* 112 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var $export = __w_pdfjs_require__(7);
var $at = __w_pdfjs_require__(63)(false);
$export($export.P, 'String', {
  codePointAt: function codePointAt(pos) {
    return $at(this, pos);
  }
});

/***/ }),
/* 113 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


__w_pdfjs_require__(114);
module.exports = __w_pdfjs_require__(9).String.fromCodePoint;

/***/ }),
/* 114 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var $export = __w_pdfjs_require__(7);
var toAbsoluteIndex = __w_pdfjs_require__(40);
var fromCharCode = String.fromCharCode;
var $fromCodePoint = String.fromCodePoint;
$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
  fromCodePoint: function fromCodePoint(x) {
    var res = [];
    var aLen = arguments.length;
    var i = 0;
    var code;
    while (aLen > i) {
      code = +arguments[i++];
      if (toAbsoluteIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');
      res.push(code < 0x10000 ? fromCharCode(code) : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00));
    }
    return res.join('');
  }
});

/***/ }),
/* 115 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


__w_pdfjs_require__(116);
__w_pdfjs_require__(60);
module.exports = __w_pdfjs_require__(9).Symbol;

/***/ }),
/* 116 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var global = __w_pdfjs_require__(8);
var has = __w_pdfjs_require__(21);
var DESCRIPTORS = __w_pdfjs_require__(15);
var $export = __w_pdfjs_require__(7);
var redefine = __w_pdfjs_require__(20);
var META = __w_pdfjs_require__(100).KEY;
var $fails = __w_pdfjs_require__(16);
var shared = __w_pdfjs_require__(29);
var setToStringTag = __w_pdfjs_require__(70);
var uid = __w_pdfjs_require__(22);
var wks = __w_pdfjs_require__(28);
var wksExt = __w_pdfjs_require__(117);
var wksDefine = __w_pdfjs_require__(118);
var enumKeys = __w_pdfjs_require__(119);
var isArray = __w_pdfjs_require__(99);
var anObject = __w_pdfjs_require__(12);
var isObject = __w_pdfjs_require__(13);
var toIObject = __w_pdfjs_require__(36);
var toPrimitive = __w_pdfjs_require__(18);
var createDesc = __w_pdfjs_require__(19);
var _create = __w_pdfjs_require__(67);
var gOPNExt = __w_pdfjs_require__(120);
var $GOPD = __w_pdfjs_require__(106);
var $DP = __w_pdfjs_require__(11);
var $keys = __w_pdfjs_require__(45);
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function';
var QObject = global.QObject;
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function get() {
      return dP(this, 'a', { value: 7 }).a;
    }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;
var wrap = function wrap(tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};
var isSymbol = USE_NATIVE && _typeof($Symbol.iterator) == 'symbol' ? function (it) {
  return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};
var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    }
    return setSymbolDesc(it, key, D);
  }
  return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) {
    $defineProperty(it, key = keys[i++], P[key]);
  }return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  }
  return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  }
  return result;
};
if (!USE_NATIVE) {
  $Symbol = function _Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function $set(value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, {
      configurable: true,
      set: $set
    });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });
  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  __w_pdfjs_require__(121).f = gOPNExt.f = $getOwnPropertyNames;
  __w_pdfjs_require__(50).f = $propertyIsEnumerable;
  __w_pdfjs_require__(49).f = $getOwnPropertySymbols;
  if (DESCRIPTORS && !__w_pdfjs_require__(30)) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }
  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}
$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });
for (var es6Symbols = 'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'.split(','), j = 0; es6Symbols.length > j;) {
  wks(es6Symbols[j++]);
}for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) {
  wksDefine(wellKnownSymbols[k++]);
}$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  'for': function _for(key) {
    return has(SymbolRegistry, key += '') ? SymbolRegistry[key] : SymbolRegistry[key] = $Symbol(key);
  },
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) {
      if (SymbolRegistry[key] === sym) return key;
    }
  },
  useSetter: function useSetter() {
    setter = true;
  },
  useSimple: function useSimple() {
    setter = false;
  }
});
$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  create: $create,
  defineProperty: $defineProperty,
  defineProperties: $defineProperties,
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  getOwnPropertyNames: $getOwnPropertyNames,
  getOwnPropertySymbols: $getOwnPropertySymbols
});
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) {
      args.push(arguments[i++]);
    }$replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return;
    if (!isArray(replacer)) replacer = function replacer(key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __w_pdfjs_require__(10)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
setToStringTag($Symbol, 'Symbol');
setToStringTag(Math, 'Math', true);
setToStringTag(global.JSON, 'JSON', true);

/***/ }),
/* 117 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


exports.f = __w_pdfjs_require__(28);

/***/ }),
/* 118 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var global = __w_pdfjs_require__(8);
var core = __w_pdfjs_require__(9);
var LIBRARY = __w_pdfjs_require__(30);
var wksExt = __w_pdfjs_require__(117);
var defineProperty = __w_pdfjs_require__(11).f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};

/***/ }),
/* 119 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var getKeys = __w_pdfjs_require__(45);
var gOPS = __w_pdfjs_require__(49);
var pIE = __w_pdfjs_require__(50);
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) {
      if (isEnum.call(it, key = symbols[i++])) result.push(key);
    }
  }
  return result;
};

/***/ }),
/* 120 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var toIObject = __w_pdfjs_require__(36);
var gOPN = __w_pdfjs_require__(121).f;
var toString = {}.toString;
var windowNames = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) == 'object' && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
var getWindowNames = function getWindowNames(it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};
module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};

/***/ }),
/* 121 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var $keys = __w_pdfjs_require__(46);
var hiddenKeys = __w_pdfjs_require__(48).concat('length', 'prototype');
exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};

/***/ }),
/* 122 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


__w_pdfjs_require__(123);
module.exports = __w_pdfjs_require__(9).Object.values;

/***/ }),
/* 123 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var $export = __w_pdfjs_require__(7);
var $values = __w_pdfjs_require__(124)(false);
$export($export.S, 'Object', {
  values: function values(it) {
    return $values(it);
  }
});

/***/ }),
/* 124 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var getKeys = __w_pdfjs_require__(45);
var toIObject = __w_pdfjs_require__(36);
var isEnum = __w_pdfjs_require__(50).f;
module.exports = function (isEntries) {
  return function (it) {
    var O = toIObject(it);
    var keys = getKeys(O);
    var length = keys.length;
    var i = 0;
    var result = [];
    var key;
    while (length > i) {
      if (isEnum.call(O, key = keys[i++])) {
        result.push(isEntries ? [key, O[key]] : O[key]);
      }
    }return result;
  };
};

/***/ }),
/* 125 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var isReadableStreamSupported = false;
if (typeof ReadableStream !== 'undefined') {
  try {
    new ReadableStream({
      start: function start(controller) {
        controller.close();
      }
    });
    isReadableStreamSupported = true;
  } catch (e) {}
}
if (isReadableStreamSupported) {
  exports.ReadableStream = ReadableStream;
} else {
  exports.ReadableStream = __w_pdfjs_require__(126).ReadableStream;
}

/***/ }),
/* 126 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

(function (e, a) {
  for (var i in a) {
    e[i] = a[i];
  }
})(exports, function (modules) {
  var installedModules = {};
  function __w_pdfjs_require__(moduleId) {
    if (installedModules[moduleId]) return installedModules[moduleId].exports;
    var module = installedModules[moduleId] = {
      i: moduleId,
      l: false,
      exports: {}
    };
    modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);
    module.l = true;
    return module.exports;
  }
  __w_pdfjs_require__.m = modules;
  __w_pdfjs_require__.c = installedModules;
  __w_pdfjs_require__.i = function (value) {
    return value;
  };
  __w_pdfjs_require__.d = function (exports, name, getter) {
    if (!__w_pdfjs_require__.o(exports, name)) {
      Object.defineProperty(exports, name, {
        configurable: false,
        enumerable: true,
        get: getter
      });
    }
  };
  __w_pdfjs_require__.n = function (module) {
    var getter = module && module.__esModule ? function getDefault() {
      return module['default'];
    } : function getModuleExports() {
      return module;
    };
    __w_pdfjs_require__.d(getter, 'a', getter);
    return getter;
  };
  __w_pdfjs_require__.o = function (object, property) {
    return Object.prototype.hasOwnProperty.call(object, property);
  };
  __w_pdfjs_require__.p = "";
  return __w_pdfjs_require__(__w_pdfjs_require__.s = 7);
}([function (module, exports, __w_pdfjs_require__) {
  "use strict";

  var _typeof = typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol" ? function (obj) {
    return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);
  } : function (obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);
  };
  var _require = __w_pdfjs_require__(1),
      assert = _require.assert;
  function IsPropertyKey(argument) {
    return typeof argument === 'string' || (typeof argument === 'undefined' ? 'undefined' : _typeof(argument)) === 'symbol';
  }
  exports.typeIsObject = function (x) {
    return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && x !== null || typeof x === 'function';
  };
  exports.createDataProperty = function (o, p, v) {
    assert(exports.typeIsObject(o));
    Object.defineProperty(o, p, {
      value: v,
      writable: true,
      enumerable: true,
      configurable: true
    });
  };
  exports.createArrayFromList = function (elements) {
    return elements.slice();
  };
  exports.ArrayBufferCopy = function (dest, destOffset, src, srcOffset, n) {
    new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);
  };
  exports.CreateIterResultObject = function (value, done) {
    assert(typeof done === 'boolean');
    var obj = {};
    Object.defineProperty(obj, 'value', {
      value: value,
      enumerable: true,
      writable: true,
      configurable: true
    });
    Object.defineProperty(obj, 'done', {
      value: done,
      enumerable: true,
      writable: true,
      configurable: true
    });
    return obj;
  };
  exports.IsFiniteNonNegativeNumber = function (v) {
    if (Number.isNaN(v)) {
      return false;
    }
    if (v === Infinity) {
      return false;
    }
    if (v < 0) {
      return false;
    }
    return true;
  };
  function Call(F, V, args) {
    if (typeof F !== 'function') {
      throw new TypeError('Argument is not a function');
    }
    return Function.prototype.apply.call(F, V, args);
  }
  exports.InvokeOrNoop = function (O, P, args) {
    assert(O !== undefined);
    assert(IsPropertyKey(P));
    assert(Array.isArray(args));
    var method = O[P];
    if (method === undefined) {
      return undefined;
    }
    return Call(method, O, args);
  };
  exports.PromiseInvokeOrNoop = function (O, P, args) {
    assert(O !== undefined);
    assert(IsPropertyKey(P));
    assert(Array.isArray(args));
    try {
      return Promise.resolve(exports.InvokeOrNoop(O, P, args));
    } catch (returnValueE) {
      return Promise.reject(returnValueE);
    }
  };
  exports.PromiseInvokeOrPerformFallback = function (O, P, args, F, argsF) {
    assert(O !== undefined);
    assert(IsPropertyKey(P));
    assert(Array.isArray(args));
    assert(Array.isArray(argsF));
    var method = void 0;
    try {
      method = O[P];
    } catch (methodE) {
      return Promise.reject(methodE);
    }
    if (method === undefined) {
      return F.apply(null, argsF);
    }
    try {
      return Promise.resolve(Call(method, O, args));
    } catch (e) {
      return Promise.reject(e);
    }
  };
  exports.TransferArrayBuffer = function (O) {
    return O.slice();
  };
  exports.ValidateAndNormalizeHighWaterMark = function (highWaterMark) {
    highWaterMark = Number(highWaterMark);
    if (Number.isNaN(highWaterMark) || highWaterMark < 0) {
      throw new RangeError('highWaterMark property of a queuing strategy must be non-negative and non-NaN');
    }
    return highWaterMark;
  };
  exports.ValidateAndNormalizeQueuingStrategy = function (size, highWaterMark) {
    if (size !== undefined && typeof size !== 'function') {
      throw new TypeError('size property of a queuing strategy must be a function');
    }
    highWaterMark = exports.ValidateAndNormalizeHighWaterMark(highWaterMark);
    return {
      size: size,
      highWaterMark: highWaterMark
    };
  };
}, function (module, exports, __w_pdfjs_require__) {
  "use strict";

  function rethrowAssertionErrorRejection(e) {
    if (e && e.constructor === AssertionError) {
      setTimeout(function () {
        throw e;
      }, 0);
    }
  }
  function AssertionError(message) {
    this.name = 'AssertionError';
    this.message = message || '';
    this.stack = new Error().stack;
  }
  AssertionError.prototype = Object.create(Error.prototype);
  AssertionError.prototype.constructor = AssertionError;
  function assert(value, message) {
    if (!value) {
      throw new AssertionError(message);
    }
  }
  module.exports = {
    rethrowAssertionErrorRejection: rethrowAssertionErrorRejection,
    AssertionError: AssertionError,
    assert: assert
  };
}, function (module, exports, __w_pdfjs_require__) {
  "use strict";

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var _require = __w_pdfjs_require__(0),
      InvokeOrNoop = _require.InvokeOrNoop,
      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,
      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,
      typeIsObject = _require.typeIsObject;
  var _require2 = __w_pdfjs_require__(1),
      assert = _require2.assert,
      rethrowAssertionErrorRejection = _require2.rethrowAssertionErrorRejection;
  var _require3 = __w_pdfjs_require__(3),
      DequeueValue = _require3.DequeueValue,
      EnqueueValueWithSize = _require3.EnqueueValueWithSize,
      PeekQueueValue = _require3.PeekQueueValue,
      ResetQueue = _require3.ResetQueue;
  var WritableStream = function () {
    function WritableStream() {
      var underlyingSink = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          size = _ref.size,
          _ref$highWaterMark = _ref.highWaterMark,
          highWaterMark = _ref$highWaterMark === undefined ? 1 : _ref$highWaterMark;
      _classCallCheck(this, WritableStream);
      this._state = 'writable';
      this._storedError = undefined;
      this._writer = undefined;
      this._writableStreamController = undefined;
      this._writeRequests = [];
      this._inFlightWriteRequest = undefined;
      this._closeRequest = undefined;
      this._inFlightCloseRequest = undefined;
      this._pendingAbortRequest = undefined;
      this._backpressure = false;
      var type = underlyingSink.type;
      if (type !== undefined) {
        throw new RangeError('Invalid type is specified');
      }
      this._writableStreamController = new WritableStreamDefaultController(this, underlyingSink, size, highWaterMark);
      this._writableStreamController.__startSteps();
    }
    _createClass(WritableStream, [{
      key: 'abort',
      value: function abort(reason) {
        if (IsWritableStream(this) === false) {
          return Promise.reject(streamBrandCheckException('abort'));
        }
        if (IsWritableStreamLocked(this) === true) {
          return Promise.reject(new TypeError('Cannot abort a stream that already has a writer'));
        }
        return WritableStreamAbort(this, reason);
      }
    }, {
      key: 'getWriter',
      value: function getWriter() {
        if (IsWritableStream(this) === false) {
          throw streamBrandCheckException('getWriter');
        }
        return AcquireWritableStreamDefaultWriter(this);
      }
    }, {
      key: 'locked',
      get: function get() {
        if (IsWritableStream(this) === false) {
          throw streamBrandCheckException('locked');
        }
        return IsWritableStreamLocked(this);
      }
    }]);
    return WritableStream;
  }();
  module.exports = {
    AcquireWritableStreamDefaultWriter: AcquireWritableStreamDefaultWriter,
    IsWritableStream: IsWritableStream,
    IsWritableStreamLocked: IsWritableStreamLocked,
    WritableStream: WritableStream,
    WritableStreamAbort: WritableStreamAbort,
    WritableStreamDefaultControllerError: WritableStreamDefaultControllerError,
    WritableStreamDefaultWriterCloseWithErrorPropagation: WritableStreamDefaultWriterCloseWithErrorPropagation,
    WritableStreamDefaultWriterRelease: WritableStreamDefaultWriterRelease,
    WritableStreamDefaultWriterWrite: WritableStreamDefaultWriterWrite,
    WritableStreamCloseQueuedOrInFlight: WritableStreamCloseQueuedOrInFlight
  };
  function AcquireWritableStreamDefaultWriter(stream) {
    return new WritableStreamDefaultWriter(stream);
  }
  function IsWritableStream(x) {
    if (!typeIsObject(x)) {
      return false;
    }
    if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {
      return false;
    }
    return true;
  }
  function IsWritableStreamLocked(stream) {
    assert(IsWritableStream(stream) === true, 'IsWritableStreamLocked should only be used on known writable streams');
    if (stream._writer === undefined) {
      return false;
    }
    return true;
  }
  function WritableStreamAbort(stream, reason) {
    var state = stream._state;
    if (state === 'closed') {
      return Promise.resolve(undefined);
    }
    if (state === 'errored') {
      return Promise.reject(stream._storedError);
    }
    var error = new TypeError('Requested to abort');
    if (stream._pendingAbortRequest !== undefined) {
      return Promise.reject(error);
    }
    assert(state === 'writable' || state === 'erroring', 'state must be writable or erroring');
    var wasAlreadyErroring = false;
    if (state === 'erroring') {
      wasAlreadyErroring = true;
      reason = undefined;
    }
    var promise = new Promise(function (resolve, reject) {
      stream._pendingAbortRequest = {
        _resolve: resolve,
        _reject: reject,
        _reason: reason,
        _wasAlreadyErroring: wasAlreadyErroring
      };
    });
    if (wasAlreadyErroring === false) {
      WritableStreamStartErroring(stream, error);
    }
    return promise;
  }
  function WritableStreamAddWriteRequest(stream) {
    assert(IsWritableStreamLocked(stream) === true);
    assert(stream._state === 'writable');
    var promise = new Promise(function (resolve, reject) {
      var writeRequest = {
        _resolve: resolve,
        _reject: reject
      };
      stream._writeRequests.push(writeRequest);
    });
    return promise;
  }
  function WritableStreamDealWithRejection(stream, error) {
    var state = stream._state;
    if (state === 'writable') {
      WritableStreamStartErroring(stream, error);
      return;
    }
    assert(state === 'erroring');
    WritableStreamFinishErroring(stream);
  }
  function WritableStreamStartErroring(stream, reason) {
    assert(stream._storedError === undefined, 'stream._storedError === undefined');
    assert(stream._state === 'writable', 'state must be writable');
    var controller = stream._writableStreamController;
    assert(controller !== undefined, 'controller must not be undefined');
    stream._state = 'erroring';
    stream._storedError = reason;
    var writer = stream._writer;
    if (writer !== undefined) {
      WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);
    }
    if (WritableStreamHasOperationMarkedInFlight(stream) === false && controller._started === true) {
      WritableStreamFinishErroring(stream);
    }
  }
  function WritableStreamFinishErroring(stream) {
    assert(stream._state === 'erroring', 'stream._state === erroring');
    assert(WritableStreamHasOperationMarkedInFlight(stream) === false, 'WritableStreamHasOperationMarkedInFlight(stream) === false');
    stream._state = 'errored';
    stream._writableStreamController.__errorSteps();
    var storedError = stream._storedError;
    for (var i = 0; i < stream._writeRequests.length; i++) {
      var writeRequest = stream._writeRequests[i];
      writeRequest._reject(storedError);
    }
    stream._writeRequests = [];
    if (stream._pendingAbortRequest === undefined) {
      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
      return;
    }
    var abortRequest = stream._pendingAbortRequest;
    stream._pendingAbortRequest = undefined;
    if (abortRequest._wasAlreadyErroring === true) {
      abortRequest._reject(storedError);
      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
      return;
    }
    var promise = stream._writableStreamController.__abortSteps(abortRequest._reason);
    promise.then(function () {
      abortRequest._resolve();
      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
    }, function (reason) {
      abortRequest._reject(reason);
      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);
    });
  }
  function WritableStreamFinishInFlightWrite(stream) {
    assert(stream._inFlightWriteRequest !== undefined);
    stream._inFlightWriteRequest._resolve(undefined);
    stream._inFlightWriteRequest = undefined;
  }
  function WritableStreamFinishInFlightWriteWithError(stream, error) {
    assert(stream._inFlightWriteRequest !== undefined);
    stream._inFlightWriteRequest._reject(error);
    stream._inFlightWriteRequest = undefined;
    assert(stream._state === 'writable' || stream._state === 'erroring');
    WritableStreamDealWithRejection(stream, error);
  }
  function WritableStreamFinishInFlightClose(stream) {
    assert(stream._inFlightCloseRequest !== undefined);
    stream._inFlightCloseRequest._resolve(undefined);
    stream._inFlightCloseRequest = undefined;
    var state = stream._state;
    assert(state === 'writable' || state === 'erroring');
    if (state === 'erroring') {
      stream._storedError = undefined;
      if (stream._pendingAbortRequest !== undefined) {
        stream._pendingAbortRequest._resolve();
        stream._pendingAbortRequest = undefined;
      }
    }
    stream._state = 'closed';
    var writer = stream._writer;
    if (writer !== undefined) {
      defaultWriterClosedPromiseResolve(writer);
    }
    assert(stream._pendingAbortRequest === undefined, 'stream._pendingAbortRequest === undefined');
    assert(stream._storedError === undefined, 'stream._storedError === undefined');
  }
  function WritableStreamFinishInFlightCloseWithError(stream, error) {
    assert(stream._inFlightCloseRequest !== undefined);
    stream._inFlightCloseRequest._reject(error);
    stream._inFlightCloseRequest = undefined;
    assert(stream._state === 'writable' || stream._state === 'erroring');
    if (stream._pendingAbortRequest !== undefined) {
      stream._pendingAbortRequest._reject(error);
      stream._pendingAbortRequest = undefined;
    }
    WritableStreamDealWithRejection(stream, error);
  }
  function WritableStreamCloseQueuedOrInFlight(stream) {
    if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {
      return false;
    }
    return true;
  }
  function WritableStreamHasOperationMarkedInFlight(stream) {
    if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {
      return false;
    }
    return true;
  }
  function WritableStreamMarkCloseRequestInFlight(stream) {
    assert(stream._inFlightCloseRequest === undefined);
    assert(stream._closeRequest !== undefined);
    stream._inFlightCloseRequest = stream._closeRequest;
    stream._closeRequest = undefined;
  }
  function WritableStreamMarkFirstWriteRequestInFlight(stream) {
    assert(stream._inFlightWriteRequest === undefined, 'there must be no pending write request');
    assert(stream._writeRequests.length !== 0, 'writeRequests must not be empty');
    stream._inFlightWriteRequest = stream._writeRequests.shift();
  }
  function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {
    assert(stream._state === 'errored', '_stream_.[[state]] is `"errored"`');
    if (stream._closeRequest !== undefined) {
      assert(stream._inFlightCloseRequest === undefined);
      stream._closeRequest._reject(stream._storedError);
      stream._closeRequest = undefined;
    }
    var writer = stream._writer;
    if (writer !== undefined) {
      defaultWriterClosedPromiseReject(writer, stream._storedError);
      writer._closedPromise.catch(function () {});
    }
  }
  function WritableStreamUpdateBackpressure(stream, backpressure) {
    assert(stream._state === 'writable');
    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);
    var writer = stream._writer;
    if (writer !== undefined && backpressure !== stream._backpressure) {
      if (backpressure === true) {
        defaultWriterReadyPromiseReset(writer);
      } else {
        assert(backpressure === false);
        defaultWriterReadyPromiseResolve(writer);
      }
    }
    stream._backpressure = backpressure;
  }
  var WritableStreamDefaultWriter = function () {
    function WritableStreamDefaultWriter(stream) {
      _classCallCheck(this, WritableStreamDefaultWriter);
      if (IsWritableStream(stream) === false) {
        throw new TypeError('WritableStreamDefaultWriter can only be constructed with a WritableStream instance');
      }
      if (IsWritableStreamLocked(stream) === true) {
        throw new TypeError('This stream has already been locked for exclusive writing by another writer');
      }
      this._ownerWritableStream = stream;
      stream._writer = this;
      var state = stream._state;
      if (state === 'writable') {
        if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._backpressure === true) {
          defaultWriterReadyPromiseInitialize(this);
        } else {
          defaultWriterReadyPromiseInitializeAsResolved(this);
        }
        defaultWriterClosedPromiseInitialize(this);
      } else if (state === 'erroring') {
        defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);
        this._readyPromise.catch(function () {});
        defaultWriterClosedPromiseInitialize(this);
      } else if (state === 'closed') {
        defaultWriterReadyPromiseInitializeAsResolved(this);
        defaultWriterClosedPromiseInitializeAsResolved(this);
      } else {
        assert(state === 'errored', 'state must be errored');
        var storedError = stream._storedError;
        defaultWriterReadyPromiseInitializeAsRejected(this, storedError);
        this._readyPromise.catch(function () {});
        defaultWriterClosedPromiseInitializeAsRejected(this, storedError);
        this._closedPromise.catch(function () {});
      }
    }
    _createClass(WritableStreamDefaultWriter, [{
      key: 'abort',
      value: function abort(reason) {
        if (IsWritableStreamDefaultWriter(this) === false) {
          return Promise.reject(defaultWriterBrandCheckException('abort'));
        }
        if (this._ownerWritableStream === undefined) {
          return Promise.reject(defaultWriterLockException('abort'));
        }
        return WritableStreamDefaultWriterAbort(this, reason);
      }
    }, {
      key: 'close',
      value: function close() {
        if (IsWritableStreamDefaultWriter(this) === false) {
          return Promise.reject(defaultWriterBrandCheckException('close'));
        }
        var stream = this._ownerWritableStream;
        if (stream === undefined) {
          return Promise.reject(defaultWriterLockException('close'));
        }
        if (WritableStreamCloseQueuedOrInFlight(stream) === true) {
          return Promise.reject(new TypeError('cannot close an already-closing stream'));
        }
        return WritableStreamDefaultWriterClose(this);
      }
    }, {
      key: 'releaseLock',
      value: function releaseLock() {
        if (IsWritableStreamDefaultWriter(this) === false) {
          throw defaultWriterBrandCheckException('releaseLock');
        }
        var stream = this._ownerWritableStream;
        if (stream === undefined) {
          return;
        }
        assert(stream._writer !== undefined);
        WritableStreamDefaultWriterRelease(this);
      }
    }, {
      key: 'write',
      value: function write(chunk) {
        if (IsWritableStreamDefaultWriter(this) === false) {
          return Promise.reject(defaultWriterBrandCheckException('write'));
        }
        if (this._ownerWritableStream === undefined) {
          return Promise.reject(defaultWriterLockException('write to'));
        }
        return WritableStreamDefaultWriterWrite(this, chunk);
      }
    }, {
      key: 'closed',
      get: function get() {
        if (IsWritableStreamDefaultWriter(this) === false) {
          return Promise.reject(defaultWriterBrandCheckException('closed'));
        }
        return this._closedPromise;
      }
    }, {
      key: 'desiredSize',
      get: function get() {
        if (IsWritableStreamDefaultWriter(this) === false) {
          throw defaultWriterBrandCheckException('desiredSize');
        }
        if (this._ownerWritableStream === undefined) {
          throw defaultWriterLockException('desiredSize');
        }
        return WritableStreamDefaultWriterGetDesiredSize(this);
      }
    }, {
      key: 'ready',
      get: function get() {
        if (IsWritableStreamDefaultWriter(this) === false) {
          return Promise.reject(defaultWriterBrandCheckException('ready'));
        }
        return this._readyPromise;
      }
    }]);
    return WritableStreamDefaultWriter;
  }();
  function IsWritableStreamDefaultWriter(x) {
    if (!typeIsObject(x)) {
      return false;
    }
    if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {
      return false;
    }
    return true;
  }
  function WritableStreamDefaultWriterAbort(writer, reason) {
    var stream = writer._ownerWritableStream;
    assert(stream !== undefined);
    return WritableStreamAbort(stream, reason);
  }
  function WritableStreamDefaultWriterClose(writer) {
    var stream = writer._ownerWritableStream;
    assert(stream !== undefined);
    var state = stream._state;
    if (state === 'closed' || state === 'errored') {
      return Promise.reject(new TypeError('The stream (in ' + state + ' state) is not in the writable state and cannot be closed'));
    }
    assert(state === 'writable' || state === 'erroring');
    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);
    var promise = new Promise(function (resolve, reject) {
      var closeRequest = {
        _resolve: resolve,
        _reject: reject
      };
      stream._closeRequest = closeRequest;
    });
    if (stream._backpressure === true && state === 'writable') {
      defaultWriterReadyPromiseResolve(writer);
    }
    WritableStreamDefaultControllerClose(stream._writableStreamController);
    return promise;
  }
  function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {
    var stream = writer._ownerWritableStream;
    assert(stream !== undefined);
    var state = stream._state;
    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {
      return Promise.resolve();
    }
    if (state === 'errored') {
      return Promise.reject(stream._storedError);
    }
    assert(state === 'writable' || state === 'erroring');
    return WritableStreamDefaultWriterClose(writer);
  }
  function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {
    if (writer._closedPromiseState === 'pending') {
      defaultWriterClosedPromiseReject(writer, error);
    } else {
      defaultWriterClosedPromiseResetToRejected(writer, error);
    }
    writer._closedPromise.catch(function () {});
  }
  function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {
    if (writer._readyPromiseState === 'pending') {
      defaultWriterReadyPromiseReject(writer, error);
    } else {
      defaultWriterReadyPromiseResetToRejected(writer, error);
    }
    writer._readyPromise.catch(function () {});
  }
  function WritableStreamDefaultWriterGetDesiredSize(writer) {
    var stream = writer._ownerWritableStream;
    var state = stream._state;
    if (state === 'errored' || state === 'erroring') {
      return null;
    }
    if (state === 'closed') {
      return 0;
    }
    return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);
  }
  function WritableStreamDefaultWriterRelease(writer) {
    var stream = writer._ownerWritableStream;
    assert(stream !== undefined);
    assert(stream._writer === writer);
    var releasedError = new TypeError('Writer was released and can no longer be used to monitor the stream\'s closedness');
    WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);
    WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);
    stream._writer = undefined;
    writer._ownerWritableStream = undefined;
  }
  function WritableStreamDefaultWriterWrite(writer, chunk) {
    var stream = writer._ownerWritableStream;
    assert(stream !== undefined);
    var controller = stream._writableStreamController;
    var chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);
    if (stream !== writer._ownerWritableStream) {
      return Promise.reject(defaultWriterLockException('write to'));
    }
    var state = stream._state;
    if (state === 'errored') {
      return Promise.reject(stream._storedError);
    }
    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {
      return Promise.reject(new TypeError('The stream is closing or closed and cannot be written to'));
    }
    if (state === 'erroring') {
      return Promise.reject(stream._storedError);
    }
    assert(state === 'writable');
    var promise = WritableStreamAddWriteRequest(stream);
    WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);
    return promise;
  }
  var WritableStreamDefaultController = function () {
    function WritableStreamDefaultController(stream, underlyingSink, size, highWaterMark) {
      _classCallCheck(this, WritableStreamDefaultController);
      if (IsWritableStream(stream) === false) {
        throw new TypeError('WritableStreamDefaultController can only be constructed with a WritableStream instance');
      }
      if (stream._writableStreamController !== undefined) {
        throw new TypeError('WritableStreamDefaultController instances can only be created by the WritableStream constructor');
      }
      this._controlledWritableStream = stream;
      this._underlyingSink = underlyingSink;
      this._queue = undefined;
      this._queueTotalSize = undefined;
      ResetQueue(this);
      this._started = false;
      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);
      this._strategySize = normalizedStrategy.size;
      this._strategyHWM = normalizedStrategy.highWaterMark;
      var backpressure = WritableStreamDefaultControllerGetBackpressure(this);
      WritableStreamUpdateBackpressure(stream, backpressure);
    }
    _createClass(WritableStreamDefaultController, [{
      key: 'error',
      value: function error(e) {
        if (IsWritableStreamDefaultController(this) === false) {
          throw new TypeError('WritableStreamDefaultController.prototype.error can only be used on a WritableStreamDefaultController');
        }
        var state = this._controlledWritableStream._state;
        if (state !== 'writable') {
          return;
        }
        WritableStreamDefaultControllerError(this, e);
      }
    }, {
      key: '__abortSteps',
      value: function __abortSteps(reason) {
        return PromiseInvokeOrNoop(this._underlyingSink, 'abort', [reason]);
      }
    }, {
      key: '__errorSteps',
      value: function __errorSteps() {
        ResetQueue(this);
      }
    }, {
      key: '__startSteps',
      value: function __startSteps() {
        var _this = this;
        var startResult = InvokeOrNoop(this._underlyingSink, 'start', [this]);
        var stream = this._controlledWritableStream;
        Promise.resolve(startResult).then(function () {
          assert(stream._state === 'writable' || stream._state === 'erroring');
          _this._started = true;
          WritableStreamDefaultControllerAdvanceQueueIfNeeded(_this);
        }, function (r) {
          assert(stream._state === 'writable' || stream._state === 'erroring');
          _this._started = true;
          WritableStreamDealWithRejection(stream, r);
        }).catch(rethrowAssertionErrorRejection);
      }
    }]);
    return WritableStreamDefaultController;
  }();
  function WritableStreamDefaultControllerClose(controller) {
    EnqueueValueWithSize(controller, 'close', 0);
    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
  }
  function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {
    var strategySize = controller._strategySize;
    if (strategySize === undefined) {
      return 1;
    }
    try {
      return strategySize(chunk);
    } catch (chunkSizeE) {
      WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);
      return 1;
    }
  }
  function WritableStreamDefaultControllerGetDesiredSize(controller) {
    return controller._strategyHWM - controller._queueTotalSize;
  }
  function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {
    var writeRecord = { chunk: chunk };
    try {
      EnqueueValueWithSize(controller, writeRecord, chunkSize);
    } catch (enqueueE) {
      WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);
      return;
    }
    var stream = controller._controlledWritableStream;
    if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._state === 'writable') {
      var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
      WritableStreamUpdateBackpressure(stream, backpressure);
    }
    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
  }
  function IsWritableStreamDefaultController(x) {
    if (!typeIsObject(x)) {
      return false;
    }
    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSink')) {
      return false;
    }
    return true;
  }
  function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {
    var stream = controller._controlledWritableStream;
    if (controller._started === false) {
      return;
    }
    if (stream._inFlightWriteRequest !== undefined) {
      return;
    }
    var state = stream._state;
    if (state === 'closed' || state === 'errored') {
      return;
    }
    if (state === 'erroring') {
      WritableStreamFinishErroring(stream);
      return;
    }
    if (controller._queue.length === 0) {
      return;
    }
    var writeRecord = PeekQueueValue(controller);
    if (writeRecord === 'close') {
      WritableStreamDefaultControllerProcessClose(controller);
    } else {
      WritableStreamDefaultControllerProcessWrite(controller, writeRecord.chunk);
    }
  }
  function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {
    if (controller._controlledWritableStream._state === 'writable') {
      WritableStreamDefaultControllerError(controller, error);
    }
  }
  function WritableStreamDefaultControllerProcessClose(controller) {
    var stream = controller._controlledWritableStream;
    WritableStreamMarkCloseRequestInFlight(stream);
    DequeueValue(controller);
    assert(controller._queue.length === 0, 'queue must be empty once the final write record is dequeued');
    var sinkClosePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'close', []);
    sinkClosePromise.then(function () {
      WritableStreamFinishInFlightClose(stream);
    }, function (reason) {
      WritableStreamFinishInFlightCloseWithError(stream, reason);
    }).catch(rethrowAssertionErrorRejection);
  }
  function WritableStreamDefaultControllerProcessWrite(controller, chunk) {
    var stream = controller._controlledWritableStream;
    WritableStreamMarkFirstWriteRequestInFlight(stream);
    var sinkWritePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'write', [chunk, controller]);
    sinkWritePromise.then(function () {
      WritableStreamFinishInFlightWrite(stream);
      var state = stream._state;
      assert(state === 'writable' || state === 'erroring');
      DequeueValue(controller);
      if (WritableStreamCloseQueuedOrInFlight(stream) === false && state === 'writable') {
        var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);
        WritableStreamUpdateBackpressure(stream, backpressure);
      }
      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);
    }, function (reason) {
      WritableStreamFinishInFlightWriteWithError(stream, reason);
    }).catch(rethrowAssertionErrorRejection);
  }
  function WritableStreamDefaultControllerGetBackpressure(controller) {
    var desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);
    return desiredSize <= 0;
  }
  function WritableStreamDefaultControllerError(controller, error) {
    var stream = controller._controlledWritableStream;
    assert(stream._state === 'writable');
    WritableStreamStartErroring(stream, error);
  }
  function streamBrandCheckException(name) {
    return new TypeError('WritableStream.prototype.' + name + ' can only be used on a WritableStream');
  }
  function defaultWriterBrandCheckException(name) {
    return new TypeError('WritableStreamDefaultWriter.prototype.' + name + ' can only be used on a WritableStreamDefaultWriter');
  }
  function defaultWriterLockException(name) {
    return new TypeError('Cannot ' + name + ' a stream using a released writer');
  }
  function defaultWriterClosedPromiseInitialize(writer) {
    writer._closedPromise = new Promise(function (resolve, reject) {
      writer._closedPromise_resolve = resolve;
      writer._closedPromise_reject = reject;
      writer._closedPromiseState = 'pending';
    });
  }
  function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {
    writer._closedPromise = Promise.reject(reason);
    writer._closedPromise_resolve = undefined;
    writer._closedPromise_reject = undefined;
    writer._closedPromiseState = 'rejected';
  }
  function defaultWriterClosedPromiseInitializeAsResolved(writer) {
    writer._closedPromise = Promise.resolve(undefined);
    writer._closedPromise_resolve = undefined;
    writer._closedPromise_reject = undefined;
    writer._closedPromiseState = 'resolved';
  }
  function defaultWriterClosedPromiseReject(writer, reason) {
    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');
    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');
    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');
    writer._closedPromise_reject(reason);
    writer._closedPromise_resolve = undefined;
    writer._closedPromise_reject = undefined;
    writer._closedPromiseState = 'rejected';
  }
  function defaultWriterClosedPromiseResetToRejected(writer, reason) {
    assert(writer._closedPromise_resolve === undefined, 'writer._closedPromise_resolve === undefined');
    assert(writer._closedPromise_reject === undefined, 'writer._closedPromise_reject === undefined');
    assert(writer._closedPromiseState !== 'pending', 'writer._closedPromiseState is not pending');
    writer._closedPromise = Promise.reject(reason);
    writer._closedPromiseState = 'rejected';
  }
  function defaultWriterClosedPromiseResolve(writer) {
    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');
    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');
    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');
    writer._closedPromise_resolve(undefined);
    writer._closedPromise_resolve = undefined;
    writer._closedPromise_reject = undefined;
    writer._closedPromiseState = 'resolved';
  }
  function defaultWriterReadyPromiseInitialize(writer) {
    writer._readyPromise = new Promise(function (resolve, reject) {
      writer._readyPromise_resolve = resolve;
      writer._readyPromise_reject = reject;
    });
    writer._readyPromiseState = 'pending';
  }
  function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {
    writer._readyPromise = Promise.reject(reason);
    writer._readyPromise_resolve = undefined;
    writer._readyPromise_reject = undefined;
    writer._readyPromiseState = 'rejected';
  }
  function defaultWriterReadyPromiseInitializeAsResolved(writer) {
    writer._readyPromise = Promise.resolve(undefined);
    writer._readyPromise_resolve = undefined;
    writer._readyPromise_reject = undefined;
    writer._readyPromiseState = 'fulfilled';
  }
  function defaultWriterReadyPromiseReject(writer, reason) {
    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');
    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');
    writer._readyPromise_reject(reason);
    writer._readyPromise_resolve = undefined;
    writer._readyPromise_reject = undefined;
    writer._readyPromiseState = 'rejected';
  }
  function defaultWriterReadyPromiseReset(writer) {
    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');
    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');
    writer._readyPromise = new Promise(function (resolve, reject) {
      writer._readyPromise_resolve = resolve;
      writer._readyPromise_reject = reject;
    });
    writer._readyPromiseState = 'pending';
  }
  function defaultWriterReadyPromiseResetToRejected(writer, reason) {
    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');
    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');
    writer._readyPromise = Promise.reject(reason);
    writer._readyPromiseState = 'rejected';
  }
  function defaultWriterReadyPromiseResolve(writer) {
    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');
    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');
    writer._readyPromise_resolve(undefined);
    writer._readyPromise_resolve = undefined;
    writer._readyPromise_reject = undefined;
    writer._readyPromiseState = 'fulfilled';
  }
}, function (module, exports, __w_pdfjs_require__) {
  "use strict";

  var _require = __w_pdfjs_require__(0),
      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber;
  var _require2 = __w_pdfjs_require__(1),
      assert = _require2.assert;
  exports.DequeueValue = function (container) {
    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: DequeueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');
    assert(container._queue.length > 0, 'Spec-level failure: should never dequeue from an empty queue.');
    var pair = container._queue.shift();
    container._queueTotalSize -= pair.size;
    if (container._queueTotalSize < 0) {
      container._queueTotalSize = 0;
    }
    return pair.value;
  };
  exports.EnqueueValueWithSize = function (container, value, size) {
    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: EnqueueValueWithSize should only be used on containers with [[queue]] and ' + '[[queueTotalSize]].');
    size = Number(size);
    if (!IsFiniteNonNegativeNumber(size)) {
      throw new RangeError('Size must be a finite, non-NaN, non-negative number.');
    }
    container._queue.push({
      value: value,
      size: size
    });
    container._queueTotalSize += size;
  };
  exports.PeekQueueValue = function (container) {
    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: PeekQueueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');
    assert(container._queue.length > 0, 'Spec-level failure: should never peek at an empty queue.');
    var pair = container._queue[0];
    return pair.value;
  };
  exports.ResetQueue = function (container) {
    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: ResetQueue should only be used on containers with [[queue]] and [[queueTotalSize]].');
    container._queue = [];
    container._queueTotalSize = 0;
  };
}, function (module, exports, __w_pdfjs_require__) {
  "use strict";

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var _require = __w_pdfjs_require__(0),
      ArrayBufferCopy = _require.ArrayBufferCopy,
      CreateIterResultObject = _require.CreateIterResultObject,
      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber,
      InvokeOrNoop = _require.InvokeOrNoop,
      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,
      TransferArrayBuffer = _require.TransferArrayBuffer,
      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,
      ValidateAndNormalizeHighWaterMark = _require.ValidateAndNormalizeHighWaterMark;
  var _require2 = __w_pdfjs_require__(0),
      createArrayFromList = _require2.createArrayFromList,
      createDataProperty = _require2.createDataProperty,
      typeIsObject = _require2.typeIsObject;
  var _require3 = __w_pdfjs_require__(1),
      assert = _require3.assert,
      rethrowAssertionErrorRejection = _require3.rethrowAssertionErrorRejection;
  var _require4 = __w_pdfjs_require__(3),
      DequeueValue = _require4.DequeueValue,
      EnqueueValueWithSize = _require4.EnqueueValueWithSize,
      ResetQueue = _require4.ResetQueue;
  var _require5 = __w_pdfjs_require__(2),
      AcquireWritableStreamDefaultWriter = _require5.AcquireWritableStreamDefaultWriter,
      IsWritableStream = _require5.IsWritableStream,
      IsWritableStreamLocked = _require5.IsWritableStreamLocked,
      WritableStreamAbort = _require5.WritableStreamAbort,
      WritableStreamDefaultWriterCloseWithErrorPropagation = _require5.WritableStreamDefaultWriterCloseWithErrorPropagation,
      WritableStreamDefaultWriterRelease = _require5.WritableStreamDefaultWriterRelease,
      WritableStreamDefaultWriterWrite = _require5.WritableStreamDefaultWriterWrite,
      WritableStreamCloseQueuedOrInFlight = _require5.WritableStreamCloseQueuedOrInFlight;
  var ReadableStream = function () {
    function ReadableStream() {
      var underlyingSource = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          size = _ref.size,
          highWaterMark = _ref.highWaterMark;
      _classCallCheck(this, ReadableStream);
      this._state = 'readable';
      this._reader = undefined;
      this._storedError = undefined;
      this._disturbed = false;
      this._readableStreamController = undefined;
      var type = underlyingSource.type;
      var typeString = String(type);
      if (typeString === 'bytes') {
        if (highWaterMark === undefined) {
          highWaterMark = 0;
        }
        this._readableStreamController = new ReadableByteStreamController(this, underlyingSource, highWaterMark);
      } else if (type === undefined) {
        if (highWaterMark === undefined) {
          highWaterMark = 1;
        }
        this._readableStreamController = new ReadableStreamDefaultController(this, underlyingSource, size, highWaterMark);
      } else {
        throw new RangeError('Invalid type is specified');
      }
    }
    _createClass(ReadableStream, [{
      key: 'cancel',
      value: function cancel(reason) {
        if (IsReadableStream(this) === false) {
          return Promise.reject(streamBrandCheckException('cancel'));
        }
        if (IsReadableStreamLocked(this) === true) {
          return Promise.reject(new TypeError('Cannot cancel a stream that already has a reader'));
        }
        return ReadableStreamCancel(this, reason);
      }
    }, {
      key: 'getReader',
      value: function getReader() {
        var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            mode = _ref2.mode;
        if (IsReadableStream(this) === false) {
          throw streamBrandCheckException('getReader');
        }
        if (mode === undefined) {
          return AcquireReadableStreamDefaultReader(this);
        }
        mode = String(mode);
        if (mode === 'byob') {
          return AcquireReadableStreamBYOBReader(this);
        }
        throw new RangeError('Invalid mode is specified');
      }
    }, {
      key: 'pipeThrough',
      value: function pipeThrough(_ref3, options) {
        var writable = _ref3.writable,
            readable = _ref3.readable;
        var promise = this.pipeTo(writable, options);
        ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise);
        return readable;
      }
    }, {
      key: 'pipeTo',
      value: function pipeTo(dest) {
        var _this = this;
        var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
            preventClose = _ref4.preventClose,
            preventAbort = _ref4.preventAbort,
            preventCancel = _ref4.preventCancel;
        if (IsReadableStream(this) === false) {
          return Promise.reject(streamBrandCheckException('pipeTo'));
        }
        if (IsWritableStream(dest) === false) {
          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo\'s first argument must be a WritableStream'));
        }
        preventClose = Boolean(preventClose);
        preventAbort = Boolean(preventAbort);
        preventCancel = Boolean(preventCancel);
        if (IsReadableStreamLocked(this) === true) {
          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));
        }
        if (IsWritableStreamLocked(dest) === true) {
          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));
        }
        var reader = AcquireReadableStreamDefaultReader(this);
        var writer = AcquireWritableStreamDefaultWriter(dest);
        var shuttingDown = false;
        var currentWrite = Promise.resolve();
        return new Promise(function (resolve, reject) {
          function pipeLoop() {
            currentWrite = Promise.resolve();
            if (shuttingDown === true) {
              return Promise.resolve();
            }
            return writer._readyPromise.then(function () {
              return ReadableStreamDefaultReaderRead(reader).then(function (_ref5) {
                var value = _ref5.value,
                    done = _ref5.done;
                if (done === true) {
                  return;
                }
                currentWrite = WritableStreamDefaultWriterWrite(writer, value).catch(function () {});
              });
            }).then(pipeLoop);
          }
          isOrBecomesErrored(_this, reader._closedPromise, function (storedError) {
            if (preventAbort === false) {
              shutdownWithAction(function () {
                return WritableStreamAbort(dest, storedError);
              }, true, storedError);
            } else {
              shutdown(true, storedError);
            }
          });
          isOrBecomesErrored(dest, writer._closedPromise, function (storedError) {
            if (preventCancel === false) {
              shutdownWithAction(function () {
                return ReadableStreamCancel(_this, storedError);
              }, true, storedError);
            } else {
              shutdown(true, storedError);
            }
          });
          isOrBecomesClosed(_this, reader._closedPromise, function () {
            if (preventClose === false) {
              shutdownWithAction(function () {
                return WritableStreamDefaultWriterCloseWithErrorPropagation(writer);
              });
            } else {
              shutdown();
            }
          });
          if (WritableStreamCloseQueuedOrInFlight(dest) === true || dest._state === 'closed') {
            var destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');
            if (preventCancel === false) {
              shutdownWithAction(function () {
                return ReadableStreamCancel(_this, destClosed);
              }, true, destClosed);
            } else {
              shutdown(true, destClosed);
            }
          }
          pipeLoop().catch(function (err) {
            currentWrite = Promise.resolve();
            rethrowAssertionErrorRejection(err);
          });
          function waitForWritesToFinish() {
            var oldCurrentWrite = currentWrite;
            return currentWrite.then(function () {
              return oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined;
            });
          }
          function isOrBecomesErrored(stream, promise, action) {
            if (stream._state === 'errored') {
              action(stream._storedError);
            } else {
              promise.catch(action).catch(rethrowAssertionErrorRejection);
            }
          }
          function isOrBecomesClosed(stream, promise, action) {
            if (stream._state === 'closed') {
              action();
            } else {
              promise.then(action).catch(rethrowAssertionErrorRejection);
            }
          }
          function shutdownWithAction(action, originalIsError, originalError) {
            if (shuttingDown === true) {
              return;
            }
            shuttingDown = true;
            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {
              waitForWritesToFinish().then(doTheRest);
            } else {
              doTheRest();
            }
            function doTheRest() {
              action().then(function () {
                return finalize(originalIsError, originalError);
              }, function (newError) {
                return finalize(true, newError);
              }).catch(rethrowAssertionErrorRejection);
            }
          }
          function shutdown(isError, error) {
            if (shuttingDown === true) {
              return;
            }
            shuttingDown = true;
            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {
              waitForWritesToFinish().then(function () {
                return finalize(isError, error);
              }).catch(rethrowAssertionErrorRejection);
            } else {
              finalize(isError, error);
            }
          }
          function finalize(isError, error) {
            WritableStreamDefaultWriterRelease(writer);
            ReadableStreamReaderGenericRelease(reader);
            if (isError) {
              reject(error);
            } else {
              resolve(undefined);
            }
          }
        });
      }
    }, {
      key: 'tee',
      value: function tee() {
        if (IsReadableStream(this) === false) {
          throw streamBrandCheckException('tee');
        }
        var branches = ReadableStreamTee(this, false);
        return createArrayFromList(branches);
      }
    }, {
      key: 'locked',
      get: function get() {
        if (IsReadableStream(this) === false) {
          throw streamBrandCheckException('locked');
        }
        return IsReadableStreamLocked(this);
      }
    }]);
    return ReadableStream;
  }();
  module.exports = {
    ReadableStream: ReadableStream,
    IsReadableStreamDisturbed: IsReadableStreamDisturbed,
    ReadableStreamDefaultControllerClose: ReadableStreamDefaultControllerClose,
    ReadableStreamDefaultControllerEnqueue: ReadableStreamDefaultControllerEnqueue,
    ReadableStreamDefaultControllerError: ReadableStreamDefaultControllerError,
    ReadableStreamDefaultControllerGetDesiredSize: ReadableStreamDefaultControllerGetDesiredSize
  };
  function AcquireReadableStreamBYOBReader(stream) {
    return new ReadableStreamBYOBReader(stream);
  }
  function AcquireReadableStreamDefaultReader(stream) {
    return new ReadableStreamDefaultReader(stream);
  }
  function IsReadableStream(x) {
    if (!typeIsObject(x)) {
      return false;
    }
    if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {
      return false;
    }
    return true;
  }
  function IsReadableStreamDisturbed(stream) {
    assert(IsReadableStream(stream) === true, 'IsReadableStreamDisturbed should only be used on known readable streams');
    return stream._disturbed;
  }
  function IsReadableStreamLocked(stream) {
    assert(IsReadableStream(stream) === true, 'IsReadableStreamLocked should only be used on known readable streams');
    if (stream._reader === undefined) {
      return false;
    }
    return true;
  }
  function ReadableStreamTee(stream, cloneForBranch2) {
    assert(IsReadableStream(stream) === true);
    assert(typeof cloneForBranch2 === 'boolean');
    var reader = AcquireReadableStreamDefaultReader(stream);
    var teeState = {
      closedOrErrored: false,
      canceled1: false,
      canceled2: false,
      reason1: undefined,
      reason2: undefined
    };
    teeState.promise = new Promise(function (resolve) {
      teeState._resolve = resolve;
    });
    var pull = create_ReadableStreamTeePullFunction();
    pull._reader = reader;
    pull._teeState = teeState;
    pull._cloneForBranch2 = cloneForBranch2;
    var cancel1 = create_ReadableStreamTeeBranch1CancelFunction();
    cancel1._stream = stream;
    cancel1._teeState = teeState;
    var cancel2 = create_ReadableStreamTeeBranch2CancelFunction();
    cancel2._stream = stream;
    cancel2._teeState = teeState;
    var underlyingSource1 = Object.create(Object.prototype);
    createDataProperty(underlyingSource1, 'pull', pull);
    createDataProperty(underlyingSource1, 'cancel', cancel1);
    var branch1Stream = new ReadableStream(underlyingSource1);
    var underlyingSource2 = Object.create(Object.prototype);
    createDataProperty(underlyingSource2, 'pull', pull);
    createDataProperty(underlyingSource2, 'cancel', cancel2);
    var branch2Stream = new ReadableStream(underlyingSource2);
    pull._branch1 = branch1Stream._readableStreamController;
    pull._branch2 = branch2Stream._readableStreamController;
    reader._closedPromise.catch(function (r) {
      if (teeState.closedOrErrored === true) {
        return;
      }
      ReadableStreamDefaultControllerError(pull._branch1, r);
      ReadableStreamDefaultControllerError(pull._branch2, r);
      teeState.closedOrErrored = true;
    });
    return [branch1Stream, branch2Stream];
  }
  function create_ReadableStreamTeePullFunction() {
    function f() {
      var reader = f._reader,
          branch1 = f._branch1,
          branch2 = f._branch2,
          teeState = f._teeState;
      return ReadableStreamDefaultReaderRead(reader).then(function (result) {
        assert(typeIsObject(result));
        var value = result.value;
        var done = result.done;
        assert(typeof done === 'boolean');
        if (done === true && teeState.closedOrErrored === false) {
          if (teeState.canceled1 === false) {
            ReadableStreamDefaultControllerClose(branch1);
          }
          if (teeState.canceled2 === false) {
            ReadableStreamDefaultControllerClose(branch2);
          }
          teeState.closedOrErrored = true;
        }
        if (teeState.closedOrErrored === true) {
          return;
        }
        var value1 = value;
        var value2 = value;
        if (teeState.canceled1 === false) {
          ReadableStreamDefaultControllerEnqueue(branch1, value1);
        }
        if (teeState.canceled2 === false) {
          ReadableStreamDefaultControllerEnqueue(branch2, value2);
        }
      });
    }
    return f;
  }
  function create_ReadableStreamTeeBranch1CancelFunction() {
    function f(reason) {
      var stream = f._stream,
          teeState = f._teeState;
      teeState.canceled1 = true;
      teeState.reason1 = reason;
      if (teeState.canceled2 === true) {
        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);
        var cancelResult = ReadableStreamCancel(stream, compositeReason);
        teeState._resolve(cancelResult);
      }
      return teeState.promise;
    }
    return f;
  }
  function create_ReadableStreamTeeBranch2CancelFunction() {
    function f(reason) {
      var stream = f._stream,
          teeState = f._teeState;
      teeState.canceled2 = true;
      teeState.reason2 = reason;
      if (teeState.canceled1 === true) {
        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);
        var cancelResult = ReadableStreamCancel(stream, compositeReason);
        teeState._resolve(cancelResult);
      }
      return teeState.promise;
    }
    return f;
  }
  function ReadableStreamAddReadIntoRequest(stream) {
    assert(IsReadableStreamBYOBReader(stream._reader) === true);
    assert(stream._state === 'readable' || stream._state === 'closed');
    var promise = new Promise(function (resolve, reject) {
      var readIntoRequest = {
        _resolve: resolve,
        _reject: reject
      };
      stream._reader._readIntoRequests.push(readIntoRequest);
    });
    return promise;
  }
  function ReadableStreamAddReadRequest(stream) {
    assert(IsReadableStreamDefaultReader(stream._reader) === true);
    assert(stream._state === 'readable');
    var promise = new Promise(function (resolve, reject) {
      var readRequest = {
        _resolve: resolve,
        _reject: reject
      };
      stream._reader._readRequests.push(readRequest);
    });
    return promise;
  }
  function ReadableStreamCancel(stream, reason) {
    stream._disturbed = true;
    if (stream._state === 'closed') {
      return Promise.resolve(undefined);
    }
    if (stream._state === 'errored') {
      return Promise.reject(stream._storedError);
    }
    ReadableStreamClose(stream);
    var sourceCancelPromise = stream._readableStreamController.__cancelSteps(reason);
    return sourceCancelPromise.then(function () {
      return undefined;
    });
  }
  function ReadableStreamClose(stream) {
    assert(stream._state === 'readable');
    stream._state = 'closed';
    var reader = stream._reader;
    if (reader === undefined) {
      return undefined;
    }
    if (IsReadableStreamDefaultReader(reader) === true) {
      for (var i = 0; i < reader._readRequests.length; i++) {
        var _resolve = reader._readRequests[i]._resolve;
        _resolve(CreateIterResultObject(undefined, true));
      }
      reader._readRequests = [];
    }
    defaultReaderClosedPromiseResolve(reader);
    return undefined;
  }
  function ReadableStreamError(stream, e) {
    assert(IsReadableStream(stream) === true, 'stream must be ReadableStream');
    assert(stream._state === 'readable', 'state must be readable');
    stream._state = 'errored';
    stream._storedError = e;
    var reader = stream._reader;
    if (reader === undefined) {
      return undefined;
    }
    if (IsReadableStreamDefaultReader(reader) === true) {
      for (var i = 0; i < reader._readRequests.length; i++) {
        var readRequest = reader._readRequests[i];
        readRequest._reject(e);
      }
      reader._readRequests = [];
    } else {
      assert(IsReadableStreamBYOBReader(reader), 'reader must be ReadableStreamBYOBReader');
      for (var _i = 0; _i < reader._readIntoRequests.length; _i++) {
        var readIntoRequest = reader._readIntoRequests[_i];
        readIntoRequest._reject(e);
      }
      reader._readIntoRequests = [];
    }
    defaultReaderClosedPromiseReject(reader, e);
    reader._closedPromise.catch(function () {});
  }
  function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {
    var reader = stream._reader;
    assert(reader._readIntoRequests.length > 0);
    var readIntoRequest = reader._readIntoRequests.shift();
    readIntoRequest._resolve(CreateIterResultObject(chunk, done));
  }
  function ReadableStreamFulfillReadRequest(stream, chunk, done) {
    var reader = stream._reader;
    assert(reader._readRequests.length > 0);
    var readRequest = reader._readRequests.shift();
    readRequest._resolve(CreateIterResultObject(chunk, done));
  }
  function ReadableStreamGetNumReadIntoRequests(stream) {
    return stream._reader._readIntoRequests.length;
  }
  function ReadableStreamGetNumReadRequests(stream) {
    return stream._reader._readRequests.length;
  }
  function ReadableStreamHasBYOBReader(stream) {
    var reader = stream._reader;
    if (reader === undefined) {
      return false;
    }
    if (IsReadableStreamBYOBReader(reader) === false) {
      return false;
    }
    return true;
  }
  function ReadableStreamHasDefaultReader(stream) {
    var reader = stream._reader;
    if (reader === undefined) {
      return false;
    }
    if (IsReadableStreamDefaultReader(reader) === false) {
      return false;
    }
    return true;
  }
  var ReadableStreamDefaultReader = function () {
    function ReadableStreamDefaultReader(stream) {
      _classCallCheck(this, ReadableStreamDefaultReader);
      if (IsReadableStream(stream) === false) {
        throw new TypeError('ReadableStreamDefaultReader can only be constructed with a ReadableStream instance');
      }
      if (IsReadableStreamLocked(stream) === true) {
        throw new TypeError('This stream has already been locked for exclusive reading by another reader');
      }
      ReadableStreamReaderGenericInitialize(this, stream);
      this._readRequests = [];
    }
    _createClass(ReadableStreamDefaultReader, [{
      key: 'cancel',
      value: function cancel(reason) {
        if (IsReadableStreamDefaultReader(this) === false) {
          return Promise.reject(defaultReaderBrandCheckException('cancel'));
        }
        if (this._ownerReadableStream === undefined) {
          return Promise.reject(readerLockException('cancel'));
        }
        return ReadableStreamReaderGenericCancel(this, reason);
      }
    }, {
      key: 'read',
      value: function read() {
        if (IsReadableStreamDefaultReader(this) === false) {
          return Promise.reject(defaultReaderBrandCheckException('read'));
        }
        if (this._ownerReadableStream === undefined) {
          return Promise.reject(readerLockException('read from'));
        }
        return ReadableStreamDefaultReaderRead(this);
      }
    }, {
      key: 'releaseLock',
      value: function releaseLock() {
        if (IsReadableStreamDefaultReader(this) === false) {
          throw defaultReaderBrandCheckException('releaseLock');
        }
        if (this._ownerReadableStream === undefined) {
          return;
        }
        if (this._readRequests.length > 0) {
          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');
        }
        ReadableStreamReaderGenericRelease(this);
      }
    }, {
      key: 'closed',
      get: function get() {
        if (IsReadableStreamDefaultReader(this) === false) {
          return Promise.reject(defaultReaderBrandCheckException('closed'));
        }
        return this._closedPromise;
      }
    }]);
    return ReadableStreamDefaultReader;
  }();
  var ReadableStreamBYOBReader = function () {
    function ReadableStreamBYOBReader(stream) {
      _classCallCheck(this, ReadableStreamBYOBReader);
      if (!IsReadableStream(stream)) {
        throw new TypeError('ReadableStreamBYOBReader can only be constructed with a ReadableStream instance given a ' + 'byte source');
      }
      if (IsReadableByteStreamController(stream._readableStreamController) === false) {
        throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' + 'source');
      }
      if (IsReadableStreamLocked(stream)) {
        throw new TypeError('This stream has already been locked for exclusive reading by another reader');
      }
      ReadableStreamReaderGenericInitialize(this, stream);
      this._readIntoRequests = [];
    }
    _createClass(ReadableStreamBYOBReader, [{
      key: 'cancel',
      value: function cancel(reason) {
        if (!IsReadableStreamBYOBReader(this)) {
          return Promise.reject(byobReaderBrandCheckException('cancel'));
        }
        if (this._ownerReadableStream === undefined) {
          return Promise.reject(readerLockException('cancel'));
        }
        return ReadableStreamReaderGenericCancel(this, reason);
      }
    }, {
      key: 'read',
      value: function read(view) {
        if (!IsReadableStreamBYOBReader(this)) {
          return Promise.reject(byobReaderBrandCheckException('read'));
        }
        if (this._ownerReadableStream === undefined) {
          return Promise.reject(readerLockException('read from'));
        }
        if (!ArrayBuffer.isView(view)) {
          return Promise.reject(new TypeError('view must be an array buffer view'));
        }
        if (view.byteLength === 0) {
          return Promise.reject(new TypeError('view must have non-zero byteLength'));
        }
        return ReadableStreamBYOBReaderRead(this, view);
      }
    }, {
      key: 'releaseLock',
      value: function releaseLock() {
        if (!IsReadableStreamBYOBReader(this)) {
          throw byobReaderBrandCheckException('releaseLock');
        }
        if (this._ownerReadableStream === undefined) {
          return;
        }
        if (this._readIntoRequests.length > 0) {
          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');
        }
        ReadableStreamReaderGenericRelease(this);
      }
    }, {
      key: 'closed',
      get: function get() {
        if (!IsReadableStreamBYOBReader(this)) {
          return Promise.reject(byobReaderBrandCheckException('closed'));
        }
        return this._closedPromise;
      }
    }]);
    return ReadableStreamBYOBReader;
  }();
  function IsReadableStreamBYOBReader(x) {
    if (!typeIsObject(x)) {
      return false;
    }
    if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {
      return false;
    }
    return true;
  }
  function IsReadableStreamDefaultReader(x) {
    if (!typeIsObject(x)) {
      return false;
    }
    if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {
      return false;
    }
    return true;
  }
  function ReadableStreamReaderGenericInitialize(reader, stream) {
    reader._ownerReadableStream = stream;
    stream._reader = reader;
    if (stream._state === 'readable') {
      defaultReaderClosedPromiseInitialize(reader);
    } else if (stream._state === 'closed') {
      defaultReaderClosedPromiseInitializeAsResolved(reader);
    } else {
      assert(stream._state === 'errored', 'state must be errored');
      defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);
      reader._closedPromise.catch(function () {});
    }
  }
  function ReadableStreamReaderGenericCancel(reader, reason) {
    var stream = reader._ownerReadableStream;
    assert(stream !== undefined);
    return ReadableStreamCancel(stream, reason);
  }
  function ReadableStreamReaderGenericRelease(reader) {
    assert(reader._ownerReadableStream !== undefined);
    assert(reader._ownerReadableStream._reader === reader);
    if (reader._ownerReadableStream._state === 'readable') {
      defaultReaderClosedPromiseReject(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\'s closedness'));
    } else {
      defaultReaderClosedPromiseResetToRejected(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\'s closedness'));
    }
    reader._closedPromise.catch(function () {});
    reader._ownerReadableStream._reader = undefined;
    reader._ownerReadableStream = undefined;
  }
  function ReadableStreamBYOBReaderRead(reader, view) {
    var stream = reader._ownerReadableStream;
    assert(stream !== undefined);
    stream._disturbed = true;
    if (stream._state === 'errored') {
      return Promise.reject(stream._storedError);
    }
    return ReadableByteStreamControllerPullInto(stream._readableStreamController, view);
  }
  function ReadableStreamDefaultReaderRead(reader) {
    var stream = reader._ownerReadableStream;
    assert(stream !== undefined);
    stream._disturbed = true;
    if (stream._state === 'closed') {
      return Promise.resolve(CreateIterResultObject(undefined, true));
    }
    if (stream._state === 'errored') {
      return Promise.reject(stream._storedError);
    }
    assert(stream._state === 'readable');
    return stream._readableStreamController.__pullSteps();
  }
  var ReadableStreamDefaultController = function () {
    function ReadableStreamDefaultController(stream, underlyingSource, size, highWaterMark) {
      _classCallCheck(this, ReadableStreamDefaultController);
      if (IsReadableStream(stream) === false) {
        throw new TypeError('ReadableStreamDefaultController can only be constructed with a ReadableStream instance');
      }
      if (stream._readableStreamController !== undefined) {
        throw new TypeError('ReadableStreamDefaultController instances can only be created by the ReadableStream constructor');
      }
      this._controlledReadableStream = stream;
      this._underlyingSource = underlyingSource;
      this._queue = undefined;
      this._queueTotalSize = undefined;
      ResetQueue(this);
      this._started = false;
      this._closeRequested = false;
      this._pullAgain = false;
      this._pulling = false;
      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);
      this._strategySize = normalizedStrategy.size;
      this._strategyHWM = normalizedStrategy.highWaterMark;
      var controller = this;
      var startResult = InvokeOrNoop(underlyingSource, 'start', [this]);
      Promise.resolve(startResult).then(function () {
        controller._started = true;
        assert(controller._pulling === false);
        assert(controller._pullAgain === false);
        ReadableStreamDefaultControllerCallPullIfNeeded(controller);
      }, function (r) {
        ReadableStreamDefaultControllerErrorIfNeeded(controller, r);
      }).catch(rethrowAssertionErrorRejection);
    }
    _createClass(ReadableStreamDefaultController, [{
      key: 'close',
      value: function close() {
        if (IsReadableStreamDefaultController(this) === false) {
          throw defaultControllerBrandCheckException('close');
        }
        if (this._closeRequested === true) {
          throw new TypeError('The stream has already been closed; do not close it again!');
        }
        var state = this._controlledReadableStream._state;
        if (state !== 'readable') {
          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');
        }
        ReadableStreamDefaultControllerClose(this);
      }
    }, {
      key: 'enqueue',
      value: function enqueue(chunk) {
        if (IsReadableStreamDefaultController(this) === false) {
          throw defaultControllerBrandCheckException('enqueue');
        }
        if (this._closeRequested === true) {
          throw new TypeError('stream is closed or draining');
        }
        var state = this._controlledReadableStream._state;
        if (state !== 'readable') {
          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');
        }
        return ReadableStreamDefaultControllerEnqueue(this, chunk);
      }
    }, {
      key: 'error',
      value: function error(e) {
        if (IsReadableStreamDefaultController(this) === false) {
          throw defaultControllerBrandCheckException('error');
        }
        var stream = this._controlledReadableStream;
        if (stream._state !== 'readable') {
          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');
        }
        ReadableStreamDefaultControllerError(this, e);
      }
    }, {
      key: '__cancelSteps',
      value: function __cancelSteps(reason) {
        ResetQueue(this);
        return PromiseInvokeOrNoop(this._underlyingSource, 'cancel', [reason]);
      }
    }, {
      key: '__pullSteps',
      value: function __pullSteps() {
        var stream = this._controlledReadableStream;
        if (this._queue.length > 0) {
          var chunk = DequeueValue(this);
          if (this._closeRequested === true && this._queue.length === 0) {
            ReadableStreamClose(stream);
          } else {
            ReadableStreamDefaultControllerCallPullIfNeeded(this);
          }
          return Promise.resolve(CreateIterResultObject(chunk, false));
        }
        var pendingPromise = ReadableStreamAddReadRequest(stream);
        ReadableStreamDefaultControllerCallPullIfNeeded(this);
        return pendingPromise;
      }
    }, {
      key: 'desiredSize',
      get: function get() {
        if (IsReadableStreamDefaultController(this) === false) {
          throw defaultControllerBrandCheckException('desiredSize');
        }
        return ReadableStreamDefaultControllerGetDesiredSize(this);
      }
    }]);
    return ReadableStreamDefaultController;
  }();
  function IsReadableStreamDefaultController(x) {
    if (!typeIsObject(x)) {
      return false;
    }
    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSource')) {
      return false;
    }
    return true;
  }
  function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {
    var shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);
    if (shouldPull === false) {
      return undefined;
    }
    if (controller._pulling === true) {
      controller._pullAgain = true;
      return undefined;
    }
    assert(controller._pullAgain === false);
    controller._pulling = true;
    var pullPromise = PromiseInvokeOrNoop(controller._underlyingSource, 'pull', [controller]);
    pullPromise.then(function () {
      controller._pulling = false;
      if (controller._pullAgain === true) {
        controller._pullAgain = false;
        return ReadableStreamDefaultControllerCallPullIfNeeded(controller);
      }
      return undefined;
    }, function (e) {
      ReadableStreamDefaultControllerErrorIfNeeded(controller, e);
    }).catch(rethrowAssertionErrorRejection);
    return undefined;
  }
  function ReadableStreamDefaultControllerShouldCallPull(controller) {
    var stream = controller._controlledReadableStream;
    if (stream._state === 'closed' || stream._state === 'errored') {
      return false;
    }
    if (controller._closeRequested === true) {
      return false;
    }
    if (controller._started === false) {
      return false;
    }
    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {
      return true;
    }
    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);
    if (desiredSize > 0) {
      return true;
    }
    return false;
  }
  function ReadableStreamDefaultControllerClose(controller) {
    var stream = controller._controlledReadableStream;
    assert(controller._closeRequested === false);
    assert(stream._state === 'readable');
    controller._closeRequested = true;
    if (controller._queue.length === 0) {
      ReadableStreamClose(stream);
    }
  }
  function ReadableStreamDefaultControllerEnqueue(controller, chunk) {
    var stream = controller._controlledReadableStream;
    assert(controller._closeRequested === false);
    assert(stream._state === 'readable');
    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {
      ReadableStreamFulfillReadRequest(stream, chunk, false);
    } else {
      var chunkSize = 1;
      if (controller._strategySize !== undefined) {
        var strategySize = controller._strategySize;
        try {
          chunkSize = strategySize(chunk);
        } catch (chunkSizeE) {
          ReadableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);
          throw chunkSizeE;
        }
      }
      try {
        EnqueueValueWithSize(controller, chunk, chunkSize);
      } catch (enqueueE) {
        ReadableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);
        throw enqueueE;
      }
    }
    ReadableStreamDefaultControllerCallPullIfNeeded(controller);
    return undefined;
  }
  function ReadableStreamDefaultControllerError(controller, e) {
    var stream = controller._controlledReadableStream;
    assert(stream._state === 'readable');
    ResetQueue(controller);
    ReadableStreamError(stream, e);
  }
  function ReadableStreamDefaultControllerErrorIfNeeded(controller, e) {
    if (controller._controlledReadableStream._state === 'readable') {
      ReadableStreamDefaultControllerError(controller, e);
    }
  }
  function ReadableStreamDefaultControllerGetDesiredSize(controller) {
    var stream = controller._controlledReadableStream;
    var state = stream._state;
    if (state === 'errored') {
      return null;
    }
    if (state === 'closed') {
      return 0;
    }
    return controller._strategyHWM - controller._queueTotalSize;
  }
  var ReadableStreamBYOBRequest = function () {
    function ReadableStreamBYOBRequest(controller, view) {
      _classCallCheck(this, ReadableStreamBYOBRequest);
      this._associatedReadableByteStreamController = controller;
      this._view = view;
    }
    _createClass(ReadableStreamBYOBRequest, [{
      key: 'respond',
      value: function respond(bytesWritten) {
        if (IsReadableStreamBYOBRequest(this) === false) {
          throw byobRequestBrandCheckException('respond');
        }
        if (this._associatedReadableByteStreamController === undefined) {
          throw new TypeError('This BYOB request has been invalidated');
        }
        ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);
      }
    }, {
      key: 'respondWithNewView',
      value: function respondWithNewView(view) {
        if (IsReadableStreamBYOBRequest(this) === false) {
          throw byobRequestBrandCheckException('respond');
        }
        if (this._associatedReadableByteStreamController === undefined) {
          throw new TypeError('This BYOB request has been invalidated');
        }
        if (!ArrayBuffer.isView(view)) {
          throw new TypeError('You can only respond with array buffer views');
        }
        ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);
      }
    }, {
      key: 'view',
      get: function get() {
        return this._view;
      }
    }]);
    return ReadableStreamBYOBRequest;
  }();
  var ReadableByteStreamController = function () {
    function ReadableByteStreamController(stream, underlyingByteSource, highWaterMark) {
      _classCallCheck(this, ReadableByteStreamController);
      if (IsReadableStream(stream) === false) {
        throw new TypeError('ReadableByteStreamController can only be constructed with a ReadableStream instance given ' + 'a byte source');
      }
      if (stream._readableStreamController !== undefined) {
        throw new TypeError('ReadableByteStreamController instances can only be created by the ReadableStream constructor given a byte ' + 'source');
      }
      this._controlledReadableStream = stream;
      this._underlyingByteSource = underlyingByteSource;
      this._pullAgain = false;
      this._pulling = false;
      ReadableByteStreamControllerClearPendingPullIntos(this);
      this._queue = this._queueTotalSize = undefined;
      ResetQueue(this);
      this._closeRequested = false;
      this._started = false;
      this._strategyHWM = ValidateAndNormalizeHighWaterMark(highWaterMark);
      var autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;
      if (autoAllocateChunkSize !== undefined) {
        if (Number.isInteger(autoAllocateChunkSize) === false || autoAllocateChunkSize <= 0) {
          throw new RangeError('autoAllocateChunkSize must be a positive integer');
        }
      }
      this._autoAllocateChunkSize = autoAllocateChunkSize;
      this._pendingPullIntos = [];
      var controller = this;
      var startResult = InvokeOrNoop(underlyingByteSource, 'start', [this]);
      Promise.resolve(startResult).then(function () {
        controller._started = true;
        assert(controller._pulling === false);
        assert(controller._pullAgain === false);
        ReadableByteStreamControllerCallPullIfNeeded(controller);
      }, function (r) {
        if (stream._state === 'readable') {
          ReadableByteStreamControllerError(controller, r);
        }
      }).catch(rethrowAssertionErrorRejection);
    }
    _createClass(ReadableByteStreamController, [{
      key: 'close',
      value: function close() {
        if (IsReadableByteStreamController(this) === false) {
          throw byteStreamControllerBrandCheckException('close');
        }
        if (this._closeRequested === true) {
          throw new TypeError('The stream has already been closed; do not close it again!');
        }
        var state = this._controlledReadableStream._state;
        if (state !== 'readable') {
          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');
        }
        ReadableByteStreamControllerClose(this);
      }
    }, {
      key: 'enqueue',
      value: function enqueue(chunk) {
        if (IsReadableByteStreamController(this) === false) {
          throw byteStreamControllerBrandCheckException('enqueue');
        }
        if (this._closeRequested === true) {
          throw new TypeError('stream is closed or draining');
        }
        var state = this._controlledReadableStream._state;
        if (state !== 'readable') {
          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');
        }
        if (!ArrayBuffer.isView(chunk)) {
          throw new TypeError('You can only enqueue array buffer views when using a ReadableByteStreamController');
        }
        ReadableByteStreamControllerEnqueue(this, chunk);
      }
    }, {
      key: 'error',
      value: function error(e) {
        if (IsReadableByteStreamController(this) === false) {
          throw byteStreamControllerBrandCheckException('error');
        }
        var stream = this._controlledReadableStream;
        if (stream._state !== 'readable') {
          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');
        }
        ReadableByteStreamControllerError(this, e);
      }
    }, {
      key: '__cancelSteps',
      value: function __cancelSteps(reason) {
        if (this._pendingPullIntos.length > 0) {
          var firstDescriptor = this._pendingPullIntos[0];
          firstDescriptor.bytesFilled = 0;
        }
        ResetQueue(this);
        return PromiseInvokeOrNoop(this._underlyingByteSource, 'cancel', [reason]);
      }
    }, {
      key: '__pullSteps',
      value: function __pullSteps() {
        var stream = this._controlledReadableStream;
        assert(ReadableStreamHasDefaultReader(stream) === true);
        if (this._queueTotalSize > 0) {
          assert(ReadableStreamGetNumReadRequests(stream) === 0);
          var entry = this._queue.shift();
          this._queueTotalSize -= entry.byteLength;
          ReadableByteStreamControllerHandleQueueDrain(this);
          var view = void 0;
          try {
            view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);
          } catch (viewE) {
            return Promise.reject(viewE);
          }
          return Promise.resolve(CreateIterResultObject(view, false));
        }
        var autoAllocateChunkSize = this._autoAllocateChunkSize;
        if (autoAllocateChunkSize !== undefined) {
          var buffer = void 0;
          try {
            buffer = new ArrayBuffer(autoAllocateChunkSize);
          } catch (bufferE) {
            return Promise.reject(bufferE);
          }
          var pullIntoDescriptor = {
            buffer: buffer,
            byteOffset: 0,
            byteLength: autoAllocateChunkSize,
            bytesFilled: 0,
            elementSize: 1,
            ctor: Uint8Array,
            readerType: 'default'
          };
          this._pendingPullIntos.push(pullIntoDescriptor);
        }
        var promise = ReadableStreamAddReadRequest(stream);
        ReadableByteStreamControllerCallPullIfNeeded(this);
        return promise;
      }
    }, {
      key: 'byobRequest',
      get: function get() {
        if (IsReadableByteStreamController(this) === false) {
          throw byteStreamControllerBrandCheckException('byobRequest');
        }
        if (this._byobRequest === undefined && this._pendingPullIntos.length > 0) {
          var firstDescriptor = this._pendingPullIntos[0];
          var view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);
          this._byobRequest = new ReadableStreamBYOBRequest(this, view);
        }
        return this._byobRequest;
      }
    }, {
      key: 'desiredSize',
      get: function get() {
        if (IsReadableByteStreamController(this) === false) {
          throw byteStreamControllerBrandCheckException('desiredSize');
        }
        return ReadableByteStreamControllerGetDesiredSize(this);
      }
    }]);
    return ReadableByteStreamController;
  }();
  function IsReadableByteStreamController(x) {
    if (!typeIsObject(x)) {
      return false;
    }
    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingByteSource')) {
      return false;
    }
    return true;
  }
  function IsReadableStreamBYOBRequest(x) {
    if (!typeIsObject(x)) {
      return false;
    }
    if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {
      return false;
    }
    return true;
  }
  function ReadableByteStreamControllerCallPullIfNeeded(controller) {
    var shouldPull = ReadableByteStreamControllerShouldCallPull(controller);
    if (shouldPull === false) {
      return undefined;
    }
    if (controller._pulling === true) {
      controller._pullAgain = true;
      return undefined;
    }
    assert(controller._pullAgain === false);
    controller._pulling = true;
    var pullPromise = PromiseInvokeOrNoop(controller._underlyingByteSource, 'pull', [controller]);
    pullPromise.then(function () {
      controller._pulling = false;
      if (controller._pullAgain === true) {
        controller._pullAgain = false;
        ReadableByteStreamControllerCallPullIfNeeded(controller);
      }
    }, function (e) {
      if (controller._controlledReadableStream._state === 'readable') {
        ReadableByteStreamControllerError(controller, e);
      }
    }).catch(rethrowAssertionErrorRejection);
    return undefined;
  }
  function ReadableByteStreamControllerClearPendingPullIntos(controller) {
    ReadableByteStreamControllerInvalidateBYOBRequest(controller);
    controller._pendingPullIntos = [];
  }
  function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {
    assert(stream._state !== 'errored', 'state must not be errored');
    var done = false;
    if (stream._state === 'closed') {
      assert(pullIntoDescriptor.bytesFilled === 0);
      done = true;
    }
    var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);
    if (pullIntoDescriptor.readerType === 'default') {
      ReadableStreamFulfillReadRequest(stream, filledView, done);
    } else {
      assert(pullIntoDescriptor.readerType === 'byob');
      ReadableStreamFulfillReadIntoRequest(stream, filledView, done);
    }
  }
  function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {
    var bytesFilled = pullIntoDescriptor.bytesFilled;
    var elementSize = pullIntoDescriptor.elementSize;
    assert(bytesFilled <= pullIntoDescriptor.byteLength);
    assert(bytesFilled % elementSize === 0);
    return new pullIntoDescriptor.ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);
  }
  function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {
    controller._queue.push({
      buffer: buffer,
      byteOffset: byteOffset,
      byteLength: byteLength
    });
    controller._queueTotalSize += byteLength;
  }
  function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {
    var elementSize = pullIntoDescriptor.elementSize;
    var currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;
    var maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);
    var maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;
    var maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;
    var totalBytesToCopyRemaining = maxBytesToCopy;
    var ready = false;
    if (maxAlignedBytes > currentAlignedBytes) {
      totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;
      ready = true;
    }
    var queue = controller._queue;
    while (totalBytesToCopyRemaining > 0) {
      var headOfQueue = queue[0];
      var bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);
      var destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;
      ArrayBufferCopy(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);
      if (headOfQueue.byteLength === bytesToCopy) {
        queue.shift();
      } else {
        headOfQueue.byteOffset += bytesToCopy;
        headOfQueue.byteLength -= bytesToCopy;
      }
      controller._queueTotalSize -= bytesToCopy;
      ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);
      totalBytesToCopyRemaining -= bytesToCopy;
    }
    if (ready === false) {
      assert(controller._queueTotalSize === 0, 'queue must be empty');
      assert(pullIntoDescriptor.bytesFilled > 0);
      assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize);
    }
    return ready;
  }
  function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {
    assert(controller._pendingPullIntos.length === 0 || controller._pendingPullIntos[0] === pullIntoDescriptor);
    ReadableByteStreamControllerInvalidateBYOBRequest(controller);
    pullIntoDescriptor.bytesFilled += size;
  }
  function ReadableByteStreamControllerHandleQueueDrain(controller) {
    assert(controller._controlledReadableStream._state === 'readable');
    if (controller._queueTotalSize === 0 && controller._closeRequested === true) {
      ReadableStreamClose(controller._controlledReadableStream);
    } else {
      ReadableByteStreamControllerCallPullIfNeeded(controller);
    }
  }
  function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {
    if (controller._byobRequest === undefined) {
      return;
    }
    controller._byobRequest._associatedReadableByteStreamController = undefined;
    controller._byobRequest._view = undefined;
    controller._byobRequest = undefined;
  }
  function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {
    assert(controller._closeRequested === false);
    while (controller._pendingPullIntos.length > 0) {
      if (controller._queueTotalSize === 0) {
        return;
      }
      var pullIntoDescriptor = controller._pendingPullIntos[0];
      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {
        ReadableByteStreamControllerShiftPendingPullInto(controller);
        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);
      }
    }
  }
  function ReadableByteStreamControllerPullInto(controller, view) {
    var stream = controller._controlledReadableStream;
    var elementSize = 1;
    if (view.constructor !== DataView) {
      elementSize = view.constructor.BYTES_PER_ELEMENT;
    }
    var ctor = view.constructor;
    var pullIntoDescriptor = {
      buffer: view.buffer,
      byteOffset: view.byteOffset,
      byteLength: view.byteLength,
      bytesFilled: 0,
      elementSize: elementSize,
      ctor: ctor,
      readerType: 'byob'
    };
    if (controller._pendingPullIntos.length > 0) {
      pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);
      controller._pendingPullIntos.push(pullIntoDescriptor);
      return ReadableStreamAddReadIntoRequest(stream);
    }
    if (stream._state === 'closed') {
      var emptyView = new view.constructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);
      return Promise.resolve(CreateIterResultObject(emptyView, true));
    }
    if (controller._queueTotalSize > 0) {
      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {
        var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);
        ReadableByteStreamControllerHandleQueueDrain(controller);
        return Promise.resolve(CreateIterResultObject(filledView, false));
      }
      if (controller._closeRequested === true) {
        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');
        ReadableByteStreamControllerError(controller, e);
        return Promise.reject(e);
      }
    }
    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);
    controller._pendingPullIntos.push(pullIntoDescriptor);
    var promise = ReadableStreamAddReadIntoRequest(stream);
    ReadableByteStreamControllerCallPullIfNeeded(controller);
    return promise;
  }
  function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {
    firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);
    assert(firstDescriptor.bytesFilled === 0, 'bytesFilled must be 0');
    var stream = controller._controlledReadableStream;
    if (ReadableStreamHasBYOBReader(stream) === true) {
      while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {
        var pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);
        ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);
      }
    }
  }
  function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {
    if (pullIntoDescriptor.bytesFilled + bytesWritten > pullIntoDescriptor.byteLength) {
      throw new RangeError('bytesWritten out of range');
    }
    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);
    if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {
      return;
    }
    ReadableByteStreamControllerShiftPendingPullInto(controller);
    var remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;
    if (remainderSize > 0) {
      var end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;
      var remainder = pullIntoDescriptor.buffer.slice(end - remainderSize, end);
      ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);
    }
    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);
    pullIntoDescriptor.bytesFilled -= remainderSize;
    ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);
    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);
  }
  function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {
    var firstDescriptor = controller._pendingPullIntos[0];
    var stream = controller._controlledReadableStream;
    if (stream._state === 'closed') {
      if (bytesWritten !== 0) {
        throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');
      }
      ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);
    } else {
      assert(stream._state === 'readable');
      ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);
    }
  }
  function ReadableByteStreamControllerShiftPendingPullInto(controller) {
    var descriptor = controller._pendingPullIntos.shift();
    ReadableByteStreamControllerInvalidateBYOBRequest(controller);
    return descriptor;
  }
  function ReadableByteStreamControllerShouldCallPull(controller) {
    var stream = controller._controlledReadableStream;
    if (stream._state !== 'readable') {
      return false;
    }
    if (controller._closeRequested === true) {
      return false;
    }
    if (controller._started === false) {
      return false;
    }
    if (ReadableStreamHasDefaultReader(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {
      return true;
    }
    if (ReadableStreamHasBYOBReader(stream) === true && ReadableStreamGetNumReadIntoRequests(stream) > 0) {
      return true;
    }
    if (ReadableByteStreamControllerGetDesiredSize(controller) > 0) {
      return true;
    }
    return false;
  }
  function ReadableByteStreamControllerClose(controller) {
    var stream = controller._controlledReadableStream;
    assert(controller._closeRequested === false);
    assert(stream._state === 'readable');
    if (controller._queueTotalSize > 0) {
      controller._closeRequested = true;
      return;
    }
    if (controller._pendingPullIntos.length > 0) {
      var firstPendingPullInto = controller._pendingPullIntos[0];
      if (firstPendingPullInto.bytesFilled > 0) {
        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');
        ReadableByteStreamControllerError(controller, e);
        throw e;
      }
    }
    ReadableStreamClose(stream);
  }
  function ReadableByteStreamControllerEnqueue(controller, chunk) {
    var stream = controller._controlledReadableStream;
    assert(controller._closeRequested === false);
    assert(stream._state === 'readable');
    var buffer = chunk.buffer;
    var byteOffset = chunk.byteOffset;
    var byteLength = chunk.byteLength;
    var transferredBuffer = TransferArrayBuffer(buffer);
    if (ReadableStreamHasDefaultReader(stream) === true) {
      if (ReadableStreamGetNumReadRequests(stream) === 0) {
        ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);
      } else {
        assert(controller._queue.length === 0);
        var transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);
        ReadableStreamFulfillReadRequest(stream, transferredView, false);
      }
    } else if (ReadableStreamHasBYOBReader(stream) === true) {
      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);
      ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);
    } else {
      assert(IsReadableStreamLocked(stream) === false, 'stream must not be locked');
      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);
    }
  }
  function ReadableByteStreamControllerError(controller, e) {
    var stream = controller._controlledReadableStream;
    assert(stream._state === 'readable');
    ReadableByteStreamControllerClearPendingPullIntos(controller);
    ResetQueue(controller);
    ReadableStreamError(stream, e);
  }
  function ReadableByteStreamControllerGetDesiredSize(controller) {
    var stream = controller._controlledReadableStream;
    var state = stream._state;
    if (state === 'errored') {
      return null;
    }
    if (state === 'closed') {
      return 0;
    }
    return controller._strategyHWM - controller._queueTotalSize;
  }
  function ReadableByteStreamControllerRespond(controller, bytesWritten) {
    bytesWritten = Number(bytesWritten);
    if (IsFiniteNonNegativeNumber(bytesWritten) === false) {
      throw new RangeError('bytesWritten must be a finite');
    }
    assert(controller._pendingPullIntos.length > 0);
    ReadableByteStreamControllerRespondInternal(controller, bytesWritten);
  }
  function ReadableByteStreamControllerRespondWithNewView(controller, view) {
    assert(controller._pendingPullIntos.length > 0);
    var firstDescriptor = controller._pendingPullIntos[0];
    if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {
      throw new RangeError('The region specified by view does not match byobRequest');
    }
    if (firstDescriptor.byteLength !== view.byteLength) {
      throw new RangeError('The buffer of view has different capacity than byobRequest');
    }
    firstDescriptor.buffer = view.buffer;
    ReadableByteStreamControllerRespondInternal(controller, view.byteLength);
  }
  function streamBrandCheckException(name) {
    return new TypeError('ReadableStream.prototype.' + name + ' can only be used on a ReadableStream');
  }
  function readerLockException(name) {
    return new TypeError('Cannot ' + name + ' a stream using a released reader');
  }
  function defaultReaderBrandCheckException(name) {
    return new TypeError('ReadableStreamDefaultReader.prototype.' + name + ' can only be used on a ReadableStreamDefaultReader');
  }
  function defaultReaderClosedPromiseInitialize(reader) {
    reader._closedPromise = new Promise(function (resolve, reject) {
      reader._closedPromise_resolve = resolve;
      reader._closedPromise_reject = reject;
    });
  }
  function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {
    reader._closedPromise = Promise.reject(reason);
    reader._closedPromise_resolve = undefined;
    reader._closedPromise_reject = undefined;
  }
  function defaultReaderClosedPromiseInitializeAsResolved(reader) {
    reader._closedPromise = Promise.resolve(undefined);
    reader._closedPromise_resolve = undefined;
    reader._closedPromise_reject = undefined;
  }
  function defaultReaderClosedPromiseReject(reader, reason) {
    assert(reader._closedPromise_resolve !== undefined);
    assert(reader._closedPromise_reject !== undefined);
    reader._closedPromise_reject(reason);
    reader._closedPromise_resolve = undefined;
    reader._closedPromise_reject = undefined;
  }
  function defaultReaderClosedPromiseResetToRejected(reader, reason) {
    assert(reader._closedPromise_resolve === undefined);
    assert(reader._closedPromise_reject === undefined);
    reader._closedPromise = Promise.reject(reason);
  }
  function defaultReaderClosedPromiseResolve(reader) {
    assert(reader._closedPromise_resolve !== undefined);
    assert(reader._closedPromise_reject !== undefined);
    reader._closedPromise_resolve(undefined);
    reader._closedPromise_resolve = undefined;
    reader._closedPromise_reject = undefined;
  }
  function byobReaderBrandCheckException(name) {
    return new TypeError('ReadableStreamBYOBReader.prototype.' + name + ' can only be used on a ReadableStreamBYOBReader');
  }
  function defaultControllerBrandCheckException(name) {
    return new TypeError('ReadableStreamDefaultController.prototype.' + name + ' can only be used on a ReadableStreamDefaultController');
  }
  function byobRequestBrandCheckException(name) {
    return new TypeError('ReadableStreamBYOBRequest.prototype.' + name + ' can only be used on a ReadableStreamBYOBRequest');
  }
  function byteStreamControllerBrandCheckException(name) {
    return new TypeError('ReadableByteStreamController.prototype.' + name + ' can only be used on a ReadableByteStreamController');
  }
  function ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise) {
    try {
      Promise.prototype.then.call(promise, undefined, function () {});
    } catch (e) {}
  }
}, function (module, exports, __w_pdfjs_require__) {
  "use strict";

  var transformStream = __w_pdfjs_require__(6);
  var readableStream = __w_pdfjs_require__(4);
  var writableStream = __w_pdfjs_require__(2);
  exports.TransformStream = transformStream.TransformStream;
  exports.ReadableStream = readableStream.ReadableStream;
  exports.IsReadableStreamDisturbed = readableStream.IsReadableStreamDisturbed;
  exports.ReadableStreamDefaultControllerClose = readableStream.ReadableStreamDefaultControllerClose;
  exports.ReadableStreamDefaultControllerEnqueue = readableStream.ReadableStreamDefaultControllerEnqueue;
  exports.ReadableStreamDefaultControllerError = readableStream.ReadableStreamDefaultControllerError;
  exports.ReadableStreamDefaultControllerGetDesiredSize = readableStream.ReadableStreamDefaultControllerGetDesiredSize;
  exports.AcquireWritableStreamDefaultWriter = writableStream.AcquireWritableStreamDefaultWriter;
  exports.IsWritableStream = writableStream.IsWritableStream;
  exports.IsWritableStreamLocked = writableStream.IsWritableStreamLocked;
  exports.WritableStream = writableStream.WritableStream;
  exports.WritableStreamAbort = writableStream.WritableStreamAbort;
  exports.WritableStreamDefaultControllerError = writableStream.WritableStreamDefaultControllerError;
  exports.WritableStreamDefaultWriterCloseWithErrorPropagation = writableStream.WritableStreamDefaultWriterCloseWithErrorPropagation;
  exports.WritableStreamDefaultWriterRelease = writableStream.WritableStreamDefaultWriterRelease;
  exports.WritableStreamDefaultWriterWrite = writableStream.WritableStreamDefaultWriterWrite;
}, function (module, exports, __w_pdfjs_require__) {
  "use strict";

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var _require = __w_pdfjs_require__(1),
      assert = _require.assert;
  var _require2 = __w_pdfjs_require__(0),
      InvokeOrNoop = _require2.InvokeOrNoop,
      PromiseInvokeOrPerformFallback = _require2.PromiseInvokeOrPerformFallback,
      PromiseInvokeOrNoop = _require2.PromiseInvokeOrNoop,
      typeIsObject = _require2.typeIsObject;
  var _require3 = __w_pdfjs_require__(4),
      ReadableStream = _require3.ReadableStream,
      ReadableStreamDefaultControllerClose = _require3.ReadableStreamDefaultControllerClose,
      ReadableStreamDefaultControllerEnqueue = _require3.ReadableStreamDefaultControllerEnqueue,
      ReadableStreamDefaultControllerError = _require3.ReadableStreamDefaultControllerError,
      ReadableStreamDefaultControllerGetDesiredSize = _require3.ReadableStreamDefaultControllerGetDesiredSize;
  var _require4 = __w_pdfjs_require__(2),
      WritableStream = _require4.WritableStream,
      WritableStreamDefaultControllerError = _require4.WritableStreamDefaultControllerError;
  function TransformStreamCloseReadable(transformStream) {
    if (transformStream._errored === true) {
      throw new TypeError('TransformStream is already errored');
    }
    if (transformStream._readableClosed === true) {
      throw new TypeError('Readable side is already closed');
    }
    TransformStreamCloseReadableInternal(transformStream);
  }
  function TransformStreamEnqueueToReadable(transformStream, chunk) {
    if (transformStream._errored === true) {
      throw new TypeError('TransformStream is already errored');
    }
    if (transformStream._readableClosed === true) {
      throw new TypeError('Readable side is already closed');
    }
    var controller = transformStream._readableController;
    try {
      ReadableStreamDefaultControllerEnqueue(controller, chunk);
    } catch (e) {
      transformStream._readableClosed = true;
      TransformStreamErrorIfNeeded(transformStream, e);
      throw transformStream._storedError;
    }
    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);
    var maybeBackpressure = desiredSize <= 0;
    if (maybeBackpressure === true && transformStream._backpressure === false) {
      TransformStreamSetBackpressure(transformStream, true);
    }
  }
  function TransformStreamError(transformStream, e) {
    if (transformStream._errored === true) {
      throw new TypeError('TransformStream is already errored');
    }
    TransformStreamErrorInternal(transformStream, e);
  }
  function TransformStreamCloseReadableInternal(transformStream) {
    assert(transformStream._errored === false);
    assert(transformStream._readableClosed === false);
    try {
      ReadableStreamDefaultControllerClose(transformStream._readableController);
    } catch (e) {
      assert(false);
    }
    transformStream._readableClosed = true;
  }
  function TransformStreamErrorIfNeeded(transformStream, e) {
    if (transformStream._errored === false) {
      TransformStreamErrorInternal(transformStream, e);
    }
  }
  function TransformStreamErrorInternal(transformStream, e) {
    assert(transformStream._errored === false);
    transformStream._errored = true;
    transformStream._storedError = e;
    if (transformStream._writableDone === false) {
      WritableStreamDefaultControllerError(transformStream._writableController, e);
    }
    if (transformStream._readableClosed === false) {
      ReadableStreamDefaultControllerError(transformStream._readableController, e);
    }
  }
  function TransformStreamReadableReadyPromise(transformStream) {
    assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');
    if (transformStream._backpressure === false) {
      return Promise.resolve();
    }
    assert(transformStream._backpressure === true, '_backpressure should have been initialized');
    return transformStream._backpressureChangePromise;
  }
  function TransformStreamSetBackpressure(transformStream, backpressure) {
    assert(transformStream._backpressure !== backpressure, 'TransformStreamSetBackpressure() should be called only when backpressure is changed');
    if (transformStream._backpressureChangePromise !== undefined) {
      transformStream._backpressureChangePromise_resolve(backpressure);
    }
    transformStream._backpressureChangePromise = new Promise(function (resolve) {
      transformStream._backpressureChangePromise_resolve = resolve;
    });
    transformStream._backpressureChangePromise.then(function (resolution) {
      assert(resolution !== backpressure, '_backpressureChangePromise should be fulfilled only when backpressure is changed');
    });
    transformStream._backpressure = backpressure;
  }
  function TransformStreamDefaultTransform(chunk, transformStreamController) {
    var transformStream = transformStreamController._controlledTransformStream;
    TransformStreamEnqueueToReadable(transformStream, chunk);
    return Promise.resolve();
  }
  function TransformStreamTransform(transformStream, chunk) {
    assert(transformStream._errored === false);
    assert(transformStream._transforming === false);
    assert(transformStream._backpressure === false);
    transformStream._transforming = true;
    var transformer = transformStream._transformer;
    var controller = transformStream._transformStreamController;
    var transformPromise = PromiseInvokeOrPerformFallback(transformer, 'transform', [chunk, controller], TransformStreamDefaultTransform, [chunk, controller]);
    return transformPromise.then(function () {
      transformStream._transforming = false;
      return TransformStreamReadableReadyPromise(transformStream);
    }, function (e) {
      TransformStreamErrorIfNeeded(transformStream, e);
      return Promise.reject(e);
    });
  }
  function IsTransformStreamDefaultController(x) {
    if (!typeIsObject(x)) {
      return false;
    }
    if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {
      return false;
    }
    return true;
  }
  function IsTransformStream(x) {
    if (!typeIsObject(x)) {
      return false;
    }
    if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {
      return false;
    }
    return true;
  }
  var TransformStreamSink = function () {
    function TransformStreamSink(transformStream, startPromise) {
      _classCallCheck(this, TransformStreamSink);
      this._transformStream = transformStream;
      this._startPromise = startPromise;
    }
    _createClass(TransformStreamSink, [{
      key: 'start',
      value: function start(c) {
        var transformStream = this._transformStream;
        transformStream._writableController = c;
        return this._startPromise.then(function () {
          return TransformStreamReadableReadyPromise(transformStream);
        });
      }
    }, {
      key: 'write',
      value: function write(chunk) {
        var transformStream = this._transformStream;
        return TransformStreamTransform(transformStream, chunk);
      }
    }, {
      key: 'abort',
      value: function abort() {
        var transformStream = this._transformStream;
        transformStream._writableDone = true;
        TransformStreamErrorInternal(transformStream, new TypeError('Writable side aborted'));
      }
    }, {
      key: 'close',
      value: function close() {
        var transformStream = this._transformStream;
        assert(transformStream._transforming === false);
        transformStream._writableDone = true;
        var flushPromise = PromiseInvokeOrNoop(transformStream._transformer, 'flush', [transformStream._transformStreamController]);
        return flushPromise.then(function () {
          if (transformStream._errored === true) {
            return Promise.reject(transformStream._storedError);
          }
          if (transformStream._readableClosed === false) {
            TransformStreamCloseReadableInternal(transformStream);
          }
          return Promise.resolve();
        }).catch(function (r) {
          TransformStreamErrorIfNeeded(transformStream, r);
          return Promise.reject(transformStream._storedError);
        });
      }
    }]);
    return TransformStreamSink;
  }();
  var TransformStreamSource = function () {
    function TransformStreamSource(transformStream, startPromise) {
      _classCallCheck(this, TransformStreamSource);
      this._transformStream = transformStream;
      this._startPromise = startPromise;
    }
    _createClass(TransformStreamSource, [{
      key: 'start',
      value: function start(c) {
        var transformStream = this._transformStream;
        transformStream._readableController = c;
        return this._startPromise.then(function () {
          assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');
          if (transformStream._backpressure === true) {
            return Promise.resolve();
          }
          assert(transformStream._backpressure === false, '_backpressure should have been initialized');
          return transformStream._backpressureChangePromise;
        });
      }
    }, {
      key: 'pull',
      value: function pull() {
        var transformStream = this._transformStream;
        assert(transformStream._backpressure === true, 'pull() should be never called while _backpressure is false');
        assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');
        TransformStreamSetBackpressure(transformStream, false);
        return transformStream._backpressureChangePromise;
      }
    }, {
      key: 'cancel',
      value: function cancel() {
        var transformStream = this._transformStream;
        transformStream._readableClosed = true;
        TransformStreamErrorInternal(transformStream, new TypeError('Readable side canceled'));
      }
    }]);
    return TransformStreamSource;
  }();
  var TransformStreamDefaultController = function () {
    function TransformStreamDefaultController(transformStream) {
      _classCallCheck(this, TransformStreamDefaultController);
      if (IsTransformStream(transformStream) === false) {
        throw new TypeError('TransformStreamDefaultController can only be ' + 'constructed with a TransformStream instance');
      }
      if (transformStream._transformStreamController !== undefined) {
        throw new TypeError('TransformStreamDefaultController instances can ' + 'only be created by the TransformStream constructor');
      }
      this._controlledTransformStream = transformStream;
    }
    _createClass(TransformStreamDefaultController, [{
      key: 'enqueue',
      value: function enqueue(chunk) {
        if (IsTransformStreamDefaultController(this) === false) {
          throw defaultControllerBrandCheckException('enqueue');
        }
        TransformStreamEnqueueToReadable(this._controlledTransformStream, chunk);
      }
    }, {
      key: 'close',
      value: function close() {
        if (IsTransformStreamDefaultController(this) === false) {
          throw defaultControllerBrandCheckException('close');
        }
        TransformStreamCloseReadable(this._controlledTransformStream);
      }
    }, {
      key: 'error',
      value: function error(reason) {
        if (IsTransformStreamDefaultController(this) === false) {
          throw defaultControllerBrandCheckException('error');
        }
        TransformStreamError(this._controlledTransformStream, reason);
      }
    }, {
      key: 'desiredSize',
      get: function get() {
        if (IsTransformStreamDefaultController(this) === false) {
          throw defaultControllerBrandCheckException('desiredSize');
        }
        var transformStream = this._controlledTransformStream;
        var readableController = transformStream._readableController;
        return ReadableStreamDefaultControllerGetDesiredSize(readableController);
      }
    }]);
    return TransformStreamDefaultController;
  }();
  var TransformStream = function () {
    function TransformStream() {
      var transformer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      _classCallCheck(this, TransformStream);
      this._transformer = transformer;
      var readableStrategy = transformer.readableStrategy,
          writableStrategy = transformer.writableStrategy;
      this._transforming = false;
      this._errored = false;
      this._storedError = undefined;
      this._writableController = undefined;
      this._readableController = undefined;
      this._transformStreamController = undefined;
      this._writableDone = false;
      this._readableClosed = false;
      this._backpressure = undefined;
      this._backpressureChangePromise = undefined;
      this._backpressureChangePromise_resolve = undefined;
      this._transformStreamController = new TransformStreamDefaultController(this);
      var startPromise_resolve = void 0;
      var startPromise = new Promise(function (resolve) {
        startPromise_resolve = resolve;
      });
      var source = new TransformStreamSource(this, startPromise);
      this._readable = new ReadableStream(source, readableStrategy);
      var sink = new TransformStreamSink(this, startPromise);
      this._writable = new WritableStream(sink, writableStrategy);
      assert(this._writableController !== undefined);
      assert(this._readableController !== undefined);
      var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(this._readableController);
      TransformStreamSetBackpressure(this, desiredSize <= 0);
      var transformStream = this;
      var startResult = InvokeOrNoop(transformer, 'start', [transformStream._transformStreamController]);
      startPromise_resolve(startResult);
      startPromise.catch(function (e) {
        if (transformStream._errored === false) {
          transformStream._errored = true;
          transformStream._storedError = e;
        }
      });
    }
    _createClass(TransformStream, [{
      key: 'readable',
      get: function get() {
        if (IsTransformStream(this) === false) {
          throw streamBrandCheckException('readable');
        }
        return this._readable;
      }
    }, {
      key: 'writable',
      get: function get() {
        if (IsTransformStream(this) === false) {
          throw streamBrandCheckException('writable');
        }
        return this._writable;
      }
    }]);
    return TransformStream;
  }();
  module.exports = { TransformStream: TransformStream };
  function defaultControllerBrandCheckException(name) {
    return new TypeError('TransformStreamDefaultController.prototype.' + name + ' can only be used on a TransformStreamDefaultController');
  }
  function streamBrandCheckException(name) {
    return new TypeError('TransformStream.prototype.' + name + ' can only be used on a TransformStream');
  }
}, function (module, exports, __w_pdfjs_require__) {
  module.exports = __w_pdfjs_require__(5);
}]));

/***/ }),
/* 127 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

{
  var isURLSupported = false;
  try {
    if (typeof URL === 'function' && _typeof(URL.prototype) === 'object' && 'origin' in URL.prototype) {
      var u = new URL('b', 'http://a');
      u.pathname = 'c%20d';
      isURLSupported = u.href === 'http://a/c%20d';
    }
  } catch (ex) {}
  if (isURLSupported) {
    exports.URL = URL;
  } else {
    var PolyfillURL = __w_pdfjs_require__(128).URL;
    var OriginalURL = __w_pdfjs_require__(3).URL;
    if (OriginalURL) {
      PolyfillURL.createObjectURL = function (blob) {
        return OriginalURL.createObjectURL.apply(OriginalURL, arguments);
      };
      PolyfillURL.revokeObjectURL = function (url) {
        OriginalURL.revokeObjectURL(url);
      };
    }
    exports.URL = PolyfillURL;
  }
}

/***/ }),
/* 128 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


(function URLConstructorClosure() {
  'use strict';

  var relative = Object.create(null);
  relative['ftp'] = 21;
  relative['file'] = 0;
  relative['gopher'] = 70;
  relative['http'] = 80;
  relative['https'] = 443;
  relative['ws'] = 80;
  relative['wss'] = 443;
  var relativePathDotMapping = Object.create(null);
  relativePathDotMapping['%2e'] = '.';
  relativePathDotMapping['.%2e'] = '..';
  relativePathDotMapping['%2e.'] = '..';
  relativePathDotMapping['%2e%2e'] = '..';
  function isRelativeScheme(scheme) {
    return relative[scheme] !== undefined;
  }
  function invalid() {
    clear.call(this);
    this._isInvalid = true;
  }
  function IDNAToASCII(h) {
    if (h === '') {
      invalid.call(this);
    }
    return h.toLowerCase();
  }
  function percentEscape(c) {
    var unicode = c.charCodeAt(0);
    if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x3F, 0x60].indexOf(unicode) === -1) {
      return c;
    }
    return encodeURIComponent(c);
  }
  function percentEscapeQuery(c) {
    var unicode = c.charCodeAt(0);
    if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x60].indexOf(unicode) === -1) {
      return c;
    }
    return encodeURIComponent(c);
  }
  var EOF,
      ALPHA = /[a-zA-Z]/,
      ALPHANUMERIC = /[a-zA-Z0-9\+\-\.]/;
  function parse(input, stateOverride, base) {
    function err(message) {
      errors.push(message);
    }
    var state = stateOverride || 'scheme start',
        cursor = 0,
        buffer = '',
        seenAt = false,
        seenBracket = false,
        errors = [];
    loop: while ((input[cursor - 1] !== EOF || cursor === 0) && !this._isInvalid) {
      var c = input[cursor];
      switch (state) {
        case 'scheme start':
          if (c && ALPHA.test(c)) {
            buffer += c.toLowerCase();
            state = 'scheme';
          } else if (!stateOverride) {
            buffer = '';
            state = 'no scheme';
            continue;
          } else {
            err('Invalid scheme.');
            break loop;
          }
          break;
        case 'scheme':
          if (c && ALPHANUMERIC.test(c)) {
            buffer += c.toLowerCase();
          } else if (c === ':') {
            this._scheme = buffer;
            buffer = '';
            if (stateOverride) {
              break loop;
            }
            if (isRelativeScheme(this._scheme)) {
              this._isRelative = true;
            }
            if (this._scheme === 'file') {
              state = 'relative';
            } else if (this._isRelative && base && base._scheme === this._scheme) {
              state = 'relative or authority';
            } else if (this._isRelative) {
              state = 'authority first slash';
            } else {
              state = 'scheme data';
            }
          } else if (!stateOverride) {
            buffer = '';
            cursor = 0;
            state = 'no scheme';
            continue;
          } else if (c === EOF) {
            break loop;
          } else {
            err('Code point not allowed in scheme: ' + c);
            break loop;
          }
          break;
        case 'scheme data':
          if (c === '?') {
            this._query = '?';
            state = 'query';
          } else if (c === '#') {
            this._fragment = '#';
            state = 'fragment';
          } else {
            if (c !== EOF && c !== '\t' && c !== '\n' && c !== '\r') {
              this._schemeData += percentEscape(c);
            }
          }
          break;
        case 'no scheme':
          if (!base || !isRelativeScheme(base._scheme)) {
            err('Missing scheme.');
            invalid.call(this);
          } else {
            state = 'relative';
            continue;
          }
          break;
        case 'relative or authority':
          if (c === '/' && input[cursor + 1] === '/') {
            state = 'authority ignore slashes';
          } else {
            err('Expected /, got: ' + c);
            state = 'relative';
            continue;
          }
          break;
        case 'relative':
          this._isRelative = true;
          if (this._scheme !== 'file') {
            this._scheme = base._scheme;
          }
          if (c === EOF) {
            this._host = base._host;
            this._port = base._port;
            this._path = base._path.slice();
            this._query = base._query;
            this._username = base._username;
            this._password = base._password;
            break loop;
          } else if (c === '/' || c === '\\') {
            if (c === '\\') {
              err('\\ is an invalid code point.');
            }
            state = 'relative slash';
          } else if (c === '?') {
            this._host = base._host;
            this._port = base._port;
            this._path = base._path.slice();
            this._query = '?';
            this._username = base._username;
            this._password = base._password;
            state = 'query';
          } else if (c === '#') {
            this._host = base._host;
            this._port = base._port;
            this._path = base._path.slice();
            this._query = base._query;
            this._fragment = '#';
            this._username = base._username;
            this._password = base._password;
            state = 'fragment';
          } else {
            var nextC = input[cursor + 1];
            var nextNextC = input[cursor + 2];
            if (this._scheme !== 'file' || !ALPHA.test(c) || nextC !== ':' && nextC !== '|' || nextNextC !== EOF && nextNextC !== '/' && nextNextC !== '\\' && nextNextC !== '?' && nextNextC !== '#') {
              this._host = base._host;
              this._port = base._port;
              this._username = base._username;
              this._password = base._password;
              this._path = base._path.slice();
              this._path.pop();
            }
            state = 'relative path';
            continue;
          }
          break;
        case 'relative slash':
          if (c === '/' || c === '\\') {
            if (c === '\\') {
              err('\\ is an invalid code point.');
            }
            if (this._scheme === 'file') {
              state = 'file host';
            } else {
              state = 'authority ignore slashes';
            }
          } else {
            if (this._scheme !== 'file') {
              this._host = base._host;
              this._port = base._port;
              this._username = base._username;
              this._password = base._password;
            }
            state = 'relative path';
            continue;
          }
          break;
        case 'authority first slash':
          if (c === '/') {
            state = 'authority second slash';
          } else {
            err('Expected \'/\', got: ' + c);
            state = 'authority ignore slashes';
            continue;
          }
          break;
        case 'authority second slash':
          state = 'authority ignore slashes';
          if (c !== '/') {
            err('Expected \'/\', got: ' + c);
            continue;
          }
          break;
        case 'authority ignore slashes':
          if (c !== '/' && c !== '\\') {
            state = 'authority';
            continue;
          } else {
            err('Expected authority, got: ' + c);
          }
          break;
        case 'authority':
          if (c === '@') {
            if (seenAt) {
              err('@ already seen.');
              buffer += '%40';
            }
            seenAt = true;
            for (var i = 0; i < buffer.length; i++) {
              var cp = buffer[i];
              if (cp === '\t' || cp === '\n' || cp === '\r') {
                err('Invalid whitespace in authority.');
                continue;
              }
              if (cp === ':' && this._password === null) {
                this._password = '';
                continue;
              }
              var tempC = percentEscape(cp);
              if (this._password !== null) {
                this._password += tempC;
              } else {
                this._username += tempC;
              }
            }
            buffer = '';
          } else if (c === EOF || c === '/' || c === '\\' || c === '?' || c === '#') {
            cursor -= buffer.length;
            buffer = '';
            state = 'host';
            continue;
          } else {
            buffer += c;
          }
          break;
        case 'file host':
          if (c === EOF || c === '/' || c === '\\' || c === '?' || c === '#') {
            if (buffer.length === 2 && ALPHA.test(buffer[0]) && (buffer[1] === ':' || buffer[1] === '|')) {
              state = 'relative path';
            } else if (buffer.length === 0) {
              state = 'relative path start';
            } else {
              this._host = IDNAToASCII.call(this, buffer);
              buffer = '';
              state = 'relative path start';
            }
            continue;
          } else if (c === '\t' || c === '\n' || c === '\r') {
            err('Invalid whitespace in file host.');
          } else {
            buffer += c;
          }
          break;
        case 'host':
        case 'hostname':
          if (c === ':' && !seenBracket) {
            this._host = IDNAToASCII.call(this, buffer);
            buffer = '';
            state = 'port';
            if (stateOverride === 'hostname') {
              break loop;
            }
          } else if (c === EOF || c === '/' || c === '\\' || c === '?' || c === '#') {
            this._host = IDNAToASCII.call(this, buffer);
            buffer = '';
            state = 'relative path start';
            if (stateOverride) {
              break loop;
            }
            continue;
          } else if (c !== '\t' && c !== '\n' && c !== '\r') {
            if (c === '[') {
              seenBracket = true;
            } else if (c === ']') {
              seenBracket = false;
            }
            buffer += c;
          } else {
            err('Invalid code point in host/hostname: ' + c);
          }
          break;
        case 'port':
          if (/[0-9]/.test(c)) {
            buffer += c;
          } else if (c === EOF || c === '/' || c === '\\' || c === '?' || c === '#' || stateOverride) {
            if (buffer !== '') {
              var temp = parseInt(buffer, 10);
              if (temp !== relative[this._scheme]) {
                this._port = temp + '';
              }
              buffer = '';
            }
            if (stateOverride) {
              break loop;
            }
            state = 'relative path start';
            continue;
          } else if (c === '\t' || c === '\n' || c === '\r') {
            err('Invalid code point in port: ' + c);
          } else {
            invalid.call(this);
          }
          break;
        case 'relative path start':
          if (c === '\\') {
            err('\'\\\' not allowed in path.');
          }
          state = 'relative path';
          if (c !== '/' && c !== '\\') {
            continue;
          }
          break;
        case 'relative path':
          if (c === EOF || c === '/' || c === '\\' || !stateOverride && (c === '?' || c === '#')) {
            if (c === '\\') {
              err('\\ not allowed in relative path.');
            }
            var tmp;
            if (tmp = relativePathDotMapping[buffer.toLowerCase()]) {
              buffer = tmp;
            }
            if (buffer === '..') {
              this._path.pop();
              if (c !== '/' && c !== '\\') {
                this._path.push('');
              }
            } else if (buffer === '.' && c !== '/' && c !== '\\') {
              this._path.push('');
            } else if (buffer !== '.') {
              if (this._scheme === 'file' && this._path.length === 0 && buffer.length === 2 && ALPHA.test(buffer[0]) && buffer[1] === '|') {
                buffer = buffer[0] + ':';
              }
              this._path.push(buffer);
            }
            buffer = '';
            if (c === '?') {
              this._query = '?';
              state = 'query';
            } else if (c === '#') {
              this._fragment = '#';
              state = 'fragment';
            }
          } else if (c !== '\t' && c !== '\n' && c !== '\r') {
            buffer += percentEscape(c);
          }
          break;
        case 'query':
          if (!stateOverride && c === '#') {
            this._fragment = '#';
            state = 'fragment';
          } else if (c !== EOF && c !== '\t' && c !== '\n' && c !== '\r') {
            this._query += percentEscapeQuery(c);
          }
          break;
        case 'fragment':
          if (c !== EOF && c !== '\t' && c !== '\n' && c !== '\r') {
            this._fragment += c;
          }
          break;
      }
      cursor++;
    }
  }
  function clear() {
    this._scheme = '';
    this._schemeData = '';
    this._username = '';
    this._password = null;
    this._host = '';
    this._port = '';
    this._path = [];
    this._query = '';
    this._fragment = '';
    this._isInvalid = false;
    this._isRelative = false;
  }
  function JURL(url, base) {
    if (base !== undefined && !(base instanceof JURL)) {
      base = new JURL(String(base));
    }
    this._url = url;
    clear.call(this);
    var input = url.replace(/^[ \t\r\n\f]+|[ \t\r\n\f]+$/g, '');
    parse.call(this, input, null, base);
  }
  JURL.prototype = {
    toString: function toString() {
      return this.href;
    },

    get href() {
      if (this._isInvalid) {
        return this._url;
      }
      var authority = '';
      if (this._username !== '' || this._password !== null) {
        authority = this._username + (this._password !== null ? ':' + this._password : '') + '@';
      }
      return this.protocol + (this._isRelative ? '//' + authority + this.host : '') + this.pathname + this._query + this._fragment;
    },
    set href(value) {
      clear.call(this);
      parse.call(this, value);
    },
    get protocol() {
      return this._scheme + ':';
    },
    set protocol(value) {
      if (this._isInvalid) {
        return;
      }
      parse.call(this, value + ':', 'scheme start');
    },
    get host() {
      return this._isInvalid ? '' : this._port ? this._host + ':' + this._port : this._host;
    },
    set host(value) {
      if (this._isInvalid || !this._isRelative) {
        return;
      }
      parse.call(this, value, 'host');
    },
    get hostname() {
      return this._host;
    },
    set hostname(value) {
      if (this._isInvalid || !this._isRelative) {
        return;
      }
      parse.call(this, value, 'hostname');
    },
    get port() {
      return this._port;
    },
    set port(value) {
      if (this._isInvalid || !this._isRelative) {
        return;
      }
      parse.call(this, value, 'port');
    },
    get pathname() {
      return this._isInvalid ? '' : this._isRelative ? '/' + this._path.join('/') : this._schemeData;
    },
    set pathname(value) {
      if (this._isInvalid || !this._isRelative) {
        return;
      }
      this._path = [];
      parse.call(this, value, 'relative path start');
    },
    get search() {
      return this._isInvalid || !this._query || this._query === '?' ? '' : this._query;
    },
    set search(value) {
      if (this._isInvalid || !this._isRelative) {
        return;
      }
      this._query = '?';
      if (value[0] === '?') {
        value = value.slice(1);
      }
      parse.call(this, value, 'query');
    },
    get hash() {
      return this._isInvalid || !this._fragment || this._fragment === '#' ? '' : this._fragment;
    },
    set hash(value) {
      if (this._isInvalid) {
        return;
      }
      this._fragment = '#';
      if (value[0] === '#') {
        value = value.slice(1);
      }
      parse.call(this, value, 'fragment');
    },
    get origin() {
      var host;
      if (this._isInvalid || !this._scheme) {
        return '';
      }
      switch (this._scheme) {
        case 'data':
        case 'file':
        case 'javascript':
        case 'mailto':
          return 'null';
        case 'blob':
          try {
            return new JURL(this._schemeData).origin || 'null';
          } catch (_) {}
          return 'null';
      }
      host = this.host;
      if (!host) {
        return '';
      }
      return this._scheme + '://' + host;
    }
  };
  exports.URL = JURL;
})();

/***/ }),
/* 129 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.build = exports.version = exports.setPDFNetworkStreamFactory = exports.PDFPageProxy = exports.PDFDocumentProxy = exports.PDFWorker = exports.PDFDataRangeTransport = exports.LoopbackPort = exports.getDocument = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _util = __w_pdfjs_require__(1);

var _dom_utils = __w_pdfjs_require__(130);

var _font_loader = __w_pdfjs_require__(131);

var _api_compatibility = __w_pdfjs_require__(132);

var _canvas = __w_pdfjs_require__(133);

var _global_scope = __w_pdfjs_require__(3);

var _global_scope2 = _interopRequireDefault(_global_scope);

var _worker_options = __w_pdfjs_require__(135);

var _message_handler = __w_pdfjs_require__(136);

var _metadata = __w_pdfjs_require__(141);

var _transport_stream = __w_pdfjs_require__(143);

var _webgl = __w_pdfjs_require__(144);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var DEFAULT_RANGE_CHUNK_SIZE = 65536;
var isWorkerDisabled = false;
var fallbackWorkerSrc = void 0;
var fakeWorkerFilesLoader = null;
{
  var useRequireEnsure = false;
  if (typeof window === 'undefined') {
    isWorkerDisabled = true;
    if (false) {}
    useRequireEnsure = true;
  } else if (true) {
    useRequireEnsure = true;
  }
  if (typeof requirejs !== 'undefined' && requirejs.toUrl) {
    fallbackWorkerSrc = requirejs.toUrl('pdfjs-dist/build/pdf.worker.js');
  }
  var dynamicLoaderSupported = typeof requirejs !== 'undefined' && requirejs.load;
  fakeWorkerFilesLoader = useRequireEnsure ? function () {
    return new Promise(function (resolve, reject) {
      Promise.resolve(/*! require.ensure */).then((function () {
        try {
          var worker = void 0;
          worker = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module './pdf.worker.js'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));
          resolve(worker.WorkerMessageHandler);
        } catch (ex) {
          reject(ex);
        }
      }).bind(null, __webpack_require__)).catch(reject);
    });
  } : dynamicLoaderSupported ? function () {
    return new Promise(function (resolve, reject) {
      requirejs(['pdfjs-dist/build/pdf.worker'], function (worker) {
        try {
          resolve(worker.WorkerMessageHandler);
        } catch (ex) {
          reject(ex);
        }
      }, reject);
    });
  } : null;
  if (!fallbackWorkerSrc && typeof document !== 'undefined') {
    var pdfjsFilePath = document.currentScript && document.currentScript.src;
    if (pdfjsFilePath) {
      fallbackWorkerSrc = pdfjsFilePath.replace(/(\.(?:min\.)?js)(\?.*)?$/i, '.worker$1$2');
    }
  }
}
var createPDFNetworkStream;
function setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {
  createPDFNetworkStream = pdfNetworkStreamFactory;
}
function getDocument(src) {
  var task = new PDFDocumentLoadingTask();
  var source;
  if (typeof src === 'string') {
    source = { url: src };
  } else if ((0, _util.isArrayBuffer)(src)) {
    source = { data: src };
  } else if (src instanceof PDFDataRangeTransport) {
    source = { range: src };
  } else {
    if ((typeof src === 'undefined' ? 'undefined' : _typeof(src)) !== 'object') {
      throw new Error('Invalid parameter in getDocument, ' + 'need either Uint8Array, string or a parameter object');
    }
    if (!src.url && !src.data && !src.range) {
      throw new Error('Invalid parameter object: need either .data, .range or .url');
    }
    source = src;
  }
  var params = Object.create(null);
  var rangeTransport = null;
  var worker = null;
  for (var key in source) {
    if (key === 'url' && typeof window !== 'undefined') {
      params[key] = new _util.URL(source[key], window.location).href;
      continue;
    } else if (key === 'range') {
      rangeTransport = source[key];
      continue;
    } else if (key === 'worker') {
      worker = source[key];
      continue;
    } else if (key === 'data' && !(source[key] instanceof Uint8Array)) {
      var pdfBytes = source[key];
      if (typeof pdfBytes === 'string') {
        params[key] = (0, _util.stringToBytes)(pdfBytes);
      } else if ((typeof pdfBytes === 'undefined' ? 'undefined' : _typeof(pdfBytes)) === 'object' && pdfBytes !== null && !isNaN(pdfBytes.length)) {
        params[key] = new Uint8Array(pdfBytes);
      } else if ((0, _util.isArrayBuffer)(pdfBytes)) {
        params[key] = new Uint8Array(pdfBytes);
      } else {
        throw new Error('Invalid PDF binary data: either typed array, ' + 'string or array-like object is expected in the ' + 'data property.');
      }
      continue;
    }
    params[key] = source[key];
  }
  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;
  params.CMapReaderFactory = params.CMapReaderFactory || _dom_utils.DOMCMapReaderFactory;
  params.ignoreErrors = params.stopAtErrors !== true;
  params.pdfBug = params.pdfBug === true;
  var NativeImageDecoderValues = Object.values(_util.NativeImageDecoding);
  if (params.nativeImageDecoderSupport === undefined || !NativeImageDecoderValues.includes(params.nativeImageDecoderSupport)) {
    params.nativeImageDecoderSupport = _api_compatibility.apiCompatibilityParams.nativeImageDecoderSupport || _util.NativeImageDecoding.DECODE;
  }
  if (!Number.isInteger(params.maxImageSize)) {
    params.maxImageSize = -1;
  }
  if (typeof params.isEvalSupported !== 'boolean') {
    params.isEvalSupported = true;
  }
  if (typeof params.disableFontFace !== 'boolean') {
    params.disableFontFace = _api_compatibility.apiCompatibilityParams.disableFontFace || false;
  }
  if (typeof params.disableRange !== 'boolean') {
    params.disableRange = false;
  }
  if (typeof params.disableStream !== 'boolean') {
    params.disableStream = false;
  }
  if (typeof params.disableAutoFetch !== 'boolean') {
    params.disableAutoFetch = false;
  }
  if (typeof params.disableCreateObjectURL !== 'boolean') {
    params.disableCreateObjectURL = _api_compatibility.apiCompatibilityParams.disableCreateObjectURL || false;
  }
  (0, _util.setVerbosityLevel)(params.verbosity);
  if (!worker) {
    var workerParams = {
      postMessageTransfers: params.postMessageTransfers,
      verbosity: params.verbosity
    };
    var workerPort = _worker_options.GlobalWorkerOptions.workerPort;
    if (workerPort) {
      workerParams.port = workerPort;
      worker = PDFWorker.fromPort(workerParams);
    } else {
      worker = new PDFWorker(workerParams);
    }
    task._worker = worker;
  }
  var docId = task.docId;
  worker.promise.then(function () {
    if (task.destroyed) {
      throw new Error('Loading aborted');
    }
    return _fetchDocument(worker, params, rangeTransport, docId).then(function (workerId) {
      if (task.destroyed) {
        throw new Error('Loading aborted');
      }
      var networkStream = void 0;
      if (rangeTransport) {
        networkStream = new _transport_stream.PDFDataTransportStream({
          length: params.length,
          initialData: params.initialData,
          disableRange: params.disableRange,
          disableStream: params.disableStream
        }, rangeTransport);
      } else if (!params.data) {
        networkStream = createPDFNetworkStream({
          url: params.url,
          length: params.length,
          httpHeaders: params.httpHeaders,
          withCredentials: params.withCredentials,
          rangeChunkSize: params.rangeChunkSize,
          disableRange: params.disableRange,
          disableStream: params.disableStream
        });
      }
      var messageHandler = new _message_handler.MessageHandler(docId, workerId, worker.port);
      messageHandler.postMessageTransfers = worker.postMessageTransfers;
      var transport = new WorkerTransport(messageHandler, task, networkStream, params);
      task._transport = transport;
      messageHandler.send('Ready', null);
    });
  }).catch(task._capability.reject);
  return task;
}
function _fetchDocument(worker, source, pdfDataRangeTransport, docId) {
  if (worker.destroyed) {
    return Promise.reject(new Error('Worker was destroyed'));
  }
  if (pdfDataRangeTransport) {
    source.length = pdfDataRangeTransport.length;
    source.initialData = pdfDataRangeTransport.initialData;
  }
  return worker.messageHandler.sendWithPromise('GetDocRequest', {
    docId: docId,
    apiVersion: '2.0.943',
    source: {
      data: source.data,
      url: source.url,
      password: source.password,
      disableAutoFetch: source.disableAutoFetch,
      rangeChunkSize: source.rangeChunkSize,
      length: source.length
    },
    maxImageSize: source.maxImageSize,
    disableFontFace: source.disableFontFace,
    disableCreateObjectURL: source.disableCreateObjectURL,
    postMessageTransfers: worker.postMessageTransfers,
    docBaseUrl: source.docBaseUrl,
    nativeImageDecoderSupport: source.nativeImageDecoderSupport,
    ignoreErrors: source.ignoreErrors,
    isEvalSupported: source.isEvalSupported
  }).then(function (workerId) {
    if (worker.destroyed) {
      throw new Error('Worker was destroyed');
    }
    return workerId;
  });
}
var PDFDocumentLoadingTask = function PDFDocumentLoadingTaskClosure() {
  var nextDocumentId = 0;
  function PDFDocumentLoadingTask() {
    this._capability = (0, _util.createPromiseCapability)();
    this._transport = null;
    this._worker = null;
    this.docId = 'd' + nextDocumentId++;
    this.destroyed = false;
    this.onPassword = null;
    this.onProgress = null;
    this.onUnsupportedFeature = null;
  }
  PDFDocumentLoadingTask.prototype = {
    get promise() {
      return this._capability.promise;
    },
    destroy: function destroy() {
      var _this = this;

      this.destroyed = true;
      var transportDestroyed = !this._transport ? Promise.resolve() : this._transport.destroy();
      return transportDestroyed.then(function () {
        _this._transport = null;
        if (_this._worker) {
          _this._worker.destroy();
          _this._worker = null;
        }
      });
    },

    then: function PDFDocumentLoadingTask_then(onFulfilled, onRejected) {
      return this.promise.then.apply(this.promise, arguments);
    }
  };
  return PDFDocumentLoadingTask;
}();

var PDFDataRangeTransport = function () {
  function PDFDataRangeTransport(length, initialData) {
    _classCallCheck(this, PDFDataRangeTransport);

    this.length = length;
    this.initialData = initialData;
    this._rangeListeners = [];
    this._progressListeners = [];
    this._progressiveReadListeners = [];
    this._readyCapability = (0, _util.createPromiseCapability)();
  }

  _createClass(PDFDataRangeTransport, [{
    key: 'addRangeListener',
    value: function addRangeListener(listener) {
      this._rangeListeners.push(listener);
    }
  }, {
    key: 'addProgressListener',
    value: function addProgressListener(listener) {
      this._progressListeners.push(listener);
    }
  }, {
    key: 'addProgressiveReadListener',
    value: function addProgressiveReadListener(listener) {
      this._progressiveReadListeners.push(listener);
    }
  }, {
    key: 'onDataRange',
    value: function onDataRange(begin, chunk) {
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = this._rangeListeners[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var listener = _step.value;

          listener(begin, chunk);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }
  }, {
    key: 'onDataProgress',
    value: function onDataProgress(loaded) {
      var _this2 = this;

      this._readyCapability.promise.then(function () {
        var _iteratorNormalCompletion2 = true;
        var _didIteratorError2 = false;
        var _iteratorError2 = undefined;

        try {
          for (var _iterator2 = _this2._progressListeners[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
            var listener = _step2.value;

            listener(loaded);
          }
        } catch (err) {
          _didIteratorError2 = true;
          _iteratorError2 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion2 && _iterator2.return) {
              _iterator2.return();
            }
          } finally {
            if (_didIteratorError2) {
              throw _iteratorError2;
            }
          }
        }
      });
    }
  }, {
    key: 'onDataProgressiveRead',
    value: function onDataProgressiveRead(chunk) {
      var _this3 = this;

      this._readyCapability.promise.then(function () {
        var _iteratorNormalCompletion3 = true;
        var _didIteratorError3 = false;
        var _iteratorError3 = undefined;

        try {
          for (var _iterator3 = _this3._progressiveReadListeners[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
            var listener = _step3.value;

            listener(chunk);
          }
        } catch (err) {
          _didIteratorError3 = true;
          _iteratorError3 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion3 && _iterator3.return) {
              _iterator3.return();
            }
          } finally {
            if (_didIteratorError3) {
              throw _iteratorError3;
            }
          }
        }
      });
    }
  }, {
    key: 'transportReady',
    value: function transportReady() {
      this._readyCapability.resolve();
    }
  }, {
    key: 'requestDataRange',
    value: function requestDataRange(begin, end) {
      (0, _util.unreachable)('Abstract method PDFDataRangeTransport.requestDataRange');
    }
  }, {
    key: 'abort',
    value: function abort() {}
  }]);

  return PDFDataRangeTransport;
}();

var PDFDocumentProxy = function () {
  function PDFDocumentProxy(pdfInfo, transport, loadingTask) {
    _classCallCheck(this, PDFDocumentProxy);

    this.loadingTask = loadingTask;
    this._pdfInfo = pdfInfo;
    this._transport = transport;
  }

  _createClass(PDFDocumentProxy, [{
    key: 'getPage',
    value: function getPage(pageNumber) {
      return this._transport.getPage(pageNumber);
    }
  }, {
    key: 'getPageIndex',
    value: function getPageIndex(ref) {
      return this._transport.getPageIndex(ref);
    }
  }, {
    key: 'getDestinations',
    value: function getDestinations() {
      return this._transport.getDestinations();
    }
  }, {
    key: 'getDestination',
    value: function getDestination(id) {
      return this._transport.getDestination(id);
    }
  }, {
    key: 'getPageLabels',
    value: function getPageLabels() {
      return this._transport.getPageLabels();
    }
  }, {
    key: 'getPageMode',
    value: function getPageMode() {
      return this._transport.getPageMode();
    }
  }, {
    key: 'getAttachments',
    value: function getAttachments() {
      return this._transport.getAttachments();
    }
  }, {
    key: 'getJavaScript',
    value: function getJavaScript() {
      return this._transport.getJavaScript();
    }
  }, {
    key: 'getOutline',
    value: function getOutline() {
      return this._transport.getOutline();
    }
  }, {
    key: 'getPermissions',
    value: function getPermissions() {
      return this._transport.getPermissions();
    }
  }, {
    key: 'getMetadata',
    value: function getMetadata() {
      return this._transport.getMetadata();
    }
  }, {
    key: 'getData',
    value: function getData() {
      return this._transport.getData();
    }
  }, {
    key: 'getDownloadInfo',
    value: function getDownloadInfo() {
      return this._transport.downloadInfoCapability.promise;
    }
  }, {
    key: 'getStats',
    value: function getStats() {
      return this._transport.getStats();
    }
  }, {
    key: 'cleanup',
    value: function cleanup() {
      this._transport.startCleanup();
    }
  }, {
    key: 'destroy',
    value: function destroy() {
      return this.loadingTask.destroy();
    }
  }, {
    key: 'numPages',
    get: function get() {
      return this._pdfInfo.numPages;
    }
  }, {
    key: 'fingerprint',
    get: function get() {
      return this._pdfInfo.fingerprint;
    }
  }, {
    key: 'loadingParams',
    get: function get() {
      return this._transport.loadingParams;
    }
  }]);

  return PDFDocumentProxy;
}();

var PDFPageProxy = function PDFPageProxyClosure() {
  function PDFPageProxy(pageIndex, pageInfo, transport) {
    var pdfBug = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

    this.pageIndex = pageIndex;
    this._pageInfo = pageInfo;
    this.transport = transport;
    this._stats = pdfBug ? new _dom_utils.StatTimer() : _dom_utils.DummyStatTimer;
    this._pdfBug = pdfBug;
    this.commonObjs = transport.commonObjs;
    this.objs = new PDFObjects();
    this.cleanupAfterRender = false;
    this.pendingCleanup = false;
    this.intentStates = Object.create(null);
    this.destroyed = false;
  }
  PDFPageProxy.prototype = {
    get pageNumber() {
      return this.pageIndex + 1;
    },
    get rotate() {
      return this._pageInfo.rotate;
    },
    get ref() {
      return this._pageInfo.ref;
    },
    get userUnit() {
      return this._pageInfo.userUnit;
    },
    get view() {
      return this._pageInfo.view;
    },
    getViewport: function getViewport(scale) {
      var rotate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.rotate;
      var dontFlip = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

      return new _dom_utils.PageViewport({
        viewBox: this.view,
        scale: scale,
        rotation: rotate,
        dontFlip: dontFlip
      });
    },

    getAnnotations: function PDFPageProxy_getAnnotations(params) {
      var intent = params && params.intent || null;
      if (!this.annotationsPromise || this.annotationsIntent !== intent) {
        this.annotationsPromise = this.transport.getAnnotations(this.pageIndex, intent);
        this.annotationsIntent = intent;
      }
      return this.annotationsPromise;
    },
    render: function PDFPageProxy_render(params) {
      var _this4 = this;

      var stats = this._stats;
      stats.time('Overall');
      this.pendingCleanup = false;
      var renderingIntent = params.intent === 'print' ? 'print' : 'display';
      var canvasFactory = params.canvasFactory || new _dom_utils.DOMCanvasFactory();
      var webGLContext = new _webgl.WebGLContext({ enable: params.enableWebGL });
      if (!this.intentStates[renderingIntent]) {
        this.intentStates[renderingIntent] = Object.create(null);
      }
      var intentState = this.intentStates[renderingIntent];
      if (!intentState.displayReadyCapability) {
        intentState.receivingOperatorList = true;
        intentState.displayReadyCapability = (0, _util.createPromiseCapability)();
        intentState.operatorList = {
          fnArray: [],
          argsArray: [],
          lastChunk: false
        };
        stats.time('Page Request');
        this.transport.messageHandler.send('RenderPageRequest', {
          pageIndex: this.pageNumber - 1,
          intent: renderingIntent,
          renderInteractiveForms: params.renderInteractiveForms === true
        });
      }
      var complete = function complete(error) {
        var i = intentState.renderTasks.indexOf(internalRenderTask);
        if (i >= 0) {
          intentState.renderTasks.splice(i, 1);
        }
        if (_this4.cleanupAfterRender) {
          _this4.pendingCleanup = true;
        }
        _this4._tryCleanup();
        if (error) {
          internalRenderTask.capability.reject(error);
        } else {
          internalRenderTask.capability.resolve();
        }
        stats.timeEnd('Rendering');
        stats.timeEnd('Overall');
      };
      var internalRenderTask = new InternalRenderTask(complete, params, this.objs, this.commonObjs, intentState.operatorList, this.pageNumber, canvasFactory, webGLContext, this._pdfBug);
      internalRenderTask.useRequestAnimationFrame = renderingIntent !== 'print';
      if (!intentState.renderTasks) {
        intentState.renderTasks = [];
      }
      intentState.renderTasks.push(internalRenderTask);
      var renderTask = internalRenderTask.task;
      intentState.displayReadyCapability.promise.then(function (transparency) {
        if (_this4.pendingCleanup) {
          complete();
          return;
        }
        stats.time('Rendering');
        internalRenderTask.initializeGraphics(transparency);
        internalRenderTask.operatorListChanged();
      }).catch(complete);
      return renderTask;
    },
    getOperatorList: function PDFPageProxy_getOperatorList() {
      function operatorListChanged() {
        if (intentState.operatorList.lastChunk) {
          intentState.opListReadCapability.resolve(intentState.operatorList);
          var i = intentState.renderTasks.indexOf(opListTask);
          if (i >= 0) {
            intentState.renderTasks.splice(i, 1);
          }
        }
      }
      var renderingIntent = 'oplist';
      if (!this.intentStates[renderingIntent]) {
        this.intentStates[renderingIntent] = Object.create(null);
      }
      var intentState = this.intentStates[renderingIntent];
      var opListTask;
      if (!intentState.opListReadCapability) {
        opListTask = {};
        opListTask.operatorListChanged = operatorListChanged;
        intentState.receivingOperatorList = true;
        intentState.opListReadCapability = (0, _util.createPromiseCapability)();
        intentState.renderTasks = [];
        intentState.renderTasks.push(opListTask);
        intentState.operatorList = {
          fnArray: [],
          argsArray: [],
          lastChunk: false
        };
        this._stats.time('Page Request');
        this.transport.messageHandler.send('RenderPageRequest', {
          pageIndex: this.pageIndex,
          intent: renderingIntent
        });
      }
      return intentState.opListReadCapability.promise;
    },
    streamTextContent: function streamTextContent() {
      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      var TEXT_CONTENT_CHUNK_SIZE = 100;
      return this.transport.messageHandler.sendWithStream('GetTextContent', {
        pageIndex: this.pageNumber - 1,
        normalizeWhitespace: params.normalizeWhitespace === true,
        combineTextItems: params.disableCombineTextItems !== true
      }, {
        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,
        size: function size(textContent) {
          return textContent.items.length;
        }
      });
    },

    getTextContent: function PDFPageProxy_getTextContent(params) {
      params = params || {};
      var readableStream = this.streamTextContent(params);
      return new Promise(function (resolve, reject) {
        function pump() {
          reader.read().then(function (_ref) {
            var _textContent$items;

            var value = _ref.value,
                done = _ref.done;

            if (done) {
              resolve(textContent);
              return;
            }
            Object.assign(textContent.styles, value.styles);
            (_textContent$items = textContent.items).push.apply(_textContent$items, _toConsumableArray(value.items));
            pump();
          }, reject);
        }
        var reader = readableStream.getReader();
        var textContent = {
          items: [],
          styles: Object.create(null)
        };
        pump();
      });
    },
    _destroy: function PDFPageProxy_destroy() {
      this.destroyed = true;
      this.transport.pageCache[this.pageIndex] = null;
      var waitOn = [];
      Object.keys(this.intentStates).forEach(function (intent) {
        if (intent === 'oplist') {
          return;
        }
        var intentState = this.intentStates[intent];
        intentState.renderTasks.forEach(function (renderTask) {
          var renderCompleted = renderTask.capability.promise.catch(function () {});
          waitOn.push(renderCompleted);
          renderTask.cancel();
        });
      }, this);
      this.objs.clear();
      this.annotationsPromise = null;
      this.pendingCleanup = false;
      return Promise.all(waitOn);
    },
    cleanup: function cleanup() {
      var resetStats = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

      this.pendingCleanup = true;
      this._tryCleanup(resetStats);
    },
    _tryCleanup: function _tryCleanup() {
      var resetStats = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

      if (!this.pendingCleanup || Object.keys(this.intentStates).some(function (intent) {
        var intentState = this.intentStates[intent];
        return intentState.renderTasks.length !== 0 || intentState.receivingOperatorList;
      }, this)) {
        return;
      }
      Object.keys(this.intentStates).forEach(function (intent) {
        delete this.intentStates[intent];
      }, this);
      this.objs.clear();
      this.annotationsPromise = null;
      if (resetStats && this._stats instanceof _dom_utils.StatTimer) {
        this._stats = new _dom_utils.StatTimer();
      }
      this.pendingCleanup = false;
    },

    _startRenderPage: function PDFPageProxy_startRenderPage(transparency, intent) {
      var intentState = this.intentStates[intent];
      if (intentState.displayReadyCapability) {
        intentState.displayReadyCapability.resolve(transparency);
      }
    },
    _renderPageChunk: function PDFPageProxy_renderPageChunk(operatorListChunk, intent) {
      var intentState = this.intentStates[intent];
      var i, ii;
      for (i = 0, ii = operatorListChunk.length; i < ii; i++) {
        intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);
        intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);
      }
      intentState.operatorList.lastChunk = operatorListChunk.lastChunk;
      for (i = 0; i < intentState.renderTasks.length; i++) {
        intentState.renderTasks[i].operatorListChanged();
      }
      if (operatorListChunk.lastChunk) {
        intentState.receivingOperatorList = false;
        this._tryCleanup();
      }
    },
    get stats() {
      return this._stats instanceof _dom_utils.StatTimer ? this._stats : null;
    }
  };
  return PDFPageProxy;
}();

var LoopbackPort = function () {
  function LoopbackPort() {
    var defer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

    _classCallCheck(this, LoopbackPort);

    this._listeners = [];
    this._defer = defer;
    this._deferred = Promise.resolve(undefined);
  }

  _createClass(LoopbackPort, [{
    key: 'postMessage',
    value: function postMessage(obj, transfers) {
      var _this5 = this;

      function cloneValue(value) {
        if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object' || value === null) {
          return value;
        }
        if (cloned.has(value)) {
          return cloned.get(value);
        }
        var result;
        var buffer;
        if ((buffer = value.buffer) && (0, _util.isArrayBuffer)(buffer)) {
          var transferable = transfers && transfers.includes(buffer);
          if (value === buffer) {
            result = value;
          } else if (transferable) {
            result = new value.constructor(buffer, value.byteOffset, value.byteLength);
          } else {
            result = new value.constructor(value);
          }
          cloned.set(value, result);
          return result;
        }
        result = Array.isArray(value) ? [] : {};
        cloned.set(value, result);
        for (var i in value) {
          var desc,
              p = value;
          while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {
            p = Object.getPrototypeOf(p);
          }
          if (typeof desc.value === 'undefined' || typeof desc.value === 'function') {
            continue;
          }
          result[i] = cloneValue(desc.value);
        }
        return result;
      }
      if (!this._defer) {
        this._listeners.forEach(function (listener) {
          listener.call(this, { data: obj });
        }, this);
        return;
      }
      var cloned = new WeakMap();
      var e = { data: cloneValue(obj) };
      this._deferred.then(function () {
        _this5._listeners.forEach(function (listener) {
          listener.call(this, e);
        }, _this5);
      });
    }
  }, {
    key: 'addEventListener',
    value: function addEventListener(name, listener) {
      this._listeners.push(listener);
    }
  }, {
    key: 'removeEventListener',
    value: function removeEventListener(name, listener) {
      var i = this._listeners.indexOf(listener);
      this._listeners.splice(i, 1);
    }
  }, {
    key: 'terminate',
    value: function terminate() {
      this._listeners = [];
    }
  }]);

  return LoopbackPort;
}();

var PDFWorker = function PDFWorkerClosure() {
  var nextFakeWorkerId = 0;
  function getWorkerSrc() {
    if (_worker_options.GlobalWorkerOptions.workerSrc) {
      return _worker_options.GlobalWorkerOptions.workerSrc;
    }
    if (typeof fallbackWorkerSrc !== 'undefined') {
      return fallbackWorkerSrc;
    }
    throw new Error('No "GlobalWorkerOptions.workerSrc" specified.');
  }
  function getMainThreadWorkerMessageHandler() {
    try {
      if (typeof window !== 'undefined') {
        return window.pdfjsWorker && window.pdfjsWorker.WorkerMessageHandler;
      }
    } catch (ex) {}
    return null;
  }
  var fakeWorkerFilesLoadedCapability = void 0;
  function setupFakeWorkerGlobal() {
    if (fakeWorkerFilesLoadedCapability) {
      return fakeWorkerFilesLoadedCapability.promise;
    }
    fakeWorkerFilesLoadedCapability = (0, _util.createPromiseCapability)();
    var mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();
    if (mainWorkerMessageHandler) {
      fakeWorkerFilesLoadedCapability.resolve(mainWorkerMessageHandler);
      return fakeWorkerFilesLoadedCapability.promise;
    }
    var loader = fakeWorkerFilesLoader || function () {
      return (0, _dom_utils.loadScript)(getWorkerSrc()).then(function () {
        return window.pdfjsWorker.WorkerMessageHandler;
      });
    };
    loader().then(fakeWorkerFilesLoadedCapability.resolve, fakeWorkerFilesLoadedCapability.reject);
    return fakeWorkerFilesLoadedCapability.promise;
  }
  function createCDNWrapper(url) {
    var wrapper = 'importScripts(\'' + url + '\');';
    return _util.URL.createObjectURL(new Blob([wrapper]));
  }
  var pdfWorkerPorts = new WeakMap();
  function PDFWorker() {
    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        _ref2$name = _ref2.name,
        name = _ref2$name === undefined ? null : _ref2$name,
        _ref2$port = _ref2.port,
        port = _ref2$port === undefined ? null : _ref2$port,
        _ref2$postMessageTran = _ref2.postMessageTransfers,
        postMessageTransfers = _ref2$postMessageTran === undefined ? true : _ref2$postMessageTran,
        _ref2$verbosity = _ref2.verbosity,
        verbosity = _ref2$verbosity === undefined ? (0, _util.getVerbosityLevel)() : _ref2$verbosity;

    if (port && pdfWorkerPorts.has(port)) {
      throw new Error('Cannot use more than one PDFWorker per port');
    }
    this.name = name;
    this.destroyed = false;
    this.postMessageTransfers = postMessageTransfers !== false;
    this.verbosity = verbosity;
    this._readyCapability = (0, _util.createPromiseCapability)();
    this._port = null;
    this._webWorker = null;
    this._messageHandler = null;
    if (port) {
      pdfWorkerPorts.set(port, this);
      this._initializeFromPort(port);
      return;
    }
    this._initialize();
  }
  PDFWorker.prototype = {
    get promise() {
      return this._readyCapability.promise;
    },
    get port() {
      return this._port;
    },
    get messageHandler() {
      return this._messageHandler;
    },
    _initializeFromPort: function PDFWorker_initializeFromPort(port) {
      this._port = port;
      this._messageHandler = new _message_handler.MessageHandler('main', 'worker', port);
      this._messageHandler.on('ready', function () {});
      this._readyCapability.resolve();
    },
    _initialize: function PDFWorker_initialize() {
      var _this6 = this;

      if (typeof Worker !== 'undefined' && !isWorkerDisabled && !getMainThreadWorkerMessageHandler()) {
        var workerSrc = getWorkerSrc();
        try {
          if (!(0, _util.isSameOrigin)(window.location.href, workerSrc)) {
            workerSrc = createCDNWrapper(new _util.URL(workerSrc, window.location).href);
          }
          var worker = new Worker(workerSrc);
          var messageHandler = new _message_handler.MessageHandler('main', 'worker', worker);
          var terminateEarly = function terminateEarly() {
            worker.removeEventListener('error', onWorkerError);
            messageHandler.destroy();
            worker.terminate();
            if (_this6.destroyed) {
              _this6._readyCapability.reject(new Error('Worker was destroyed'));
            } else {
              _this6._setupFakeWorker();
            }
          };
          var onWorkerError = function onWorkerError() {
            if (!_this6._webWorker) {
              terminateEarly();
            }
          };
          worker.addEventListener('error', onWorkerError);
          messageHandler.on('test', function (data) {
            worker.removeEventListener('error', onWorkerError);
            if (_this6.destroyed) {
              terminateEarly();
              return;
            }
            if (data && data.supportTypedArray) {
              _this6._messageHandler = messageHandler;
              _this6._port = worker;
              _this6._webWorker = worker;
              if (!data.supportTransfers) {
                _this6.postMessageTransfers = false;
              }
              _this6._readyCapability.resolve();
              messageHandler.send('configure', { verbosity: _this6.verbosity });
            } else {
              _this6._setupFakeWorker();
              messageHandler.destroy();
              worker.terminate();
            }
          });
          messageHandler.on('ready', function (data) {
            worker.removeEventListener('error', onWorkerError);
            if (_this6.destroyed) {
              terminateEarly();
              return;
            }
            try {
              sendTest();
            } catch (e) {
              _this6._setupFakeWorker();
            }
          });
          var sendTest = function sendTest() {
            var testObj = new Uint8Array([_this6.postMessageTransfers ? 255 : 0]);
            try {
              messageHandler.send('test', testObj, [testObj.buffer]);
            } catch (ex) {
              (0, _util.info)('Cannot use postMessage transfers');
              testObj[0] = 0;
              messageHandler.send('test', testObj);
            }
          };
          sendTest();
          return;
        } catch (e) {
          (0, _util.info)('The worker has been disabled.');
        }
      }
      this._setupFakeWorker();
    },
    _setupFakeWorker: function PDFWorker_setupFakeWorker() {
      var _this7 = this;

      if (!isWorkerDisabled) {
        (0, _util.warn)('Setting up fake worker.');
        isWorkerDisabled = true;
      }
      setupFakeWorkerGlobal().then(function (WorkerMessageHandler) {
        if (_this7.destroyed) {
          _this7._readyCapability.reject(new Error('Worker was destroyed'));
          return;
        }
        var port = new LoopbackPort();
        _this7._port = port;
        var id = 'fake' + nextFakeWorkerId++;
        var workerHandler = new _message_handler.MessageHandler(id + '_worker', id, port);
        WorkerMessageHandler.setup(workerHandler, port);
        var messageHandler = new _message_handler.MessageHandler(id, id + '_worker', port);
        _this7._messageHandler = messageHandler;
        _this7._readyCapability.resolve();
      }).catch(function (reason) {
        _this7._readyCapability.reject(new Error('Setting up fake worker failed: "' + reason.message + '".'));
      });
    },
    destroy: function PDFWorker_destroy() {
      this.destroyed = true;
      if (this._webWorker) {
        this._webWorker.terminate();
        this._webWorker = null;
      }
      pdfWorkerPorts.delete(this._port);
      this._port = null;
      if (this._messageHandler) {
        this._messageHandler.destroy();
        this._messageHandler = null;
      }
    }
  };
  PDFWorker.fromPort = function (params) {
    if (!params || !params.port) {
      throw new Error('PDFWorker.fromPort - invalid method signature.');
    }
    if (pdfWorkerPorts.has(params.port)) {
      return pdfWorkerPorts.get(params.port);
    }
    return new PDFWorker(params);
  };
  PDFWorker.getWorkerSrc = function () {
    return getWorkerSrc();
  };
  return PDFWorker;
}();

var WorkerTransport = function () {
  function WorkerTransport(messageHandler, loadingTask, networkStream, params) {
    _classCallCheck(this, WorkerTransport);

    this.messageHandler = messageHandler;
    this.loadingTask = loadingTask;
    this.commonObjs = new PDFObjects();
    this.fontLoader = new _font_loader.FontLoader(loadingTask.docId);
    this._params = params;
    this.CMapReaderFactory = new params.CMapReaderFactory({
      baseUrl: params.cMapUrl,
      isCompressed: params.cMapPacked
    });
    this.destroyed = false;
    this.destroyCapability = null;
    this._passwordCapability = null;
    this._networkStream = networkStream;
    this._fullReader = null;
    this._lastProgress = null;
    this.pageCache = [];
    this.pagePromises = [];
    this.downloadInfoCapability = (0, _util.createPromiseCapability)();
    this.setupMessageHandler();
  }

  _createClass(WorkerTransport, [{
    key: 'destroy',
    value: function destroy() {
      var _this8 = this;

      if (this.destroyCapability) {
        return this.destroyCapability.promise;
      }
      this.destroyed = true;
      this.destroyCapability = (0, _util.createPromiseCapability)();
      if (this._passwordCapability) {
        this._passwordCapability.reject(new Error('Worker was destroyed during onPassword callback'));
      }
      var waitOn = [];
      this.pageCache.forEach(function (page) {
        if (page) {
          waitOn.push(page._destroy());
        }
      });
      this.pageCache = [];
      this.pagePromises = [];
      var terminated = this.messageHandler.sendWithPromise('Terminate', null);
      waitOn.push(terminated);
      Promise.all(waitOn).then(function () {
        _this8.fontLoader.clear();
        if (_this8._networkStream) {
          _this8._networkStream.cancelAllRequests();
        }
        if (_this8.messageHandler) {
          _this8.messageHandler.destroy();
          _this8.messageHandler = null;
        }
        _this8.destroyCapability.resolve();
      }, this.destroyCapability.reject);
      return this.destroyCapability.promise;
    }
  }, {
    key: 'setupMessageHandler',
    value: function setupMessageHandler() {
      var messageHandler = this.messageHandler,
          loadingTask = this.loadingTask;

      messageHandler.on('GetReader', function (data, sink) {
        var _this9 = this;

        (0, _util.assert)(this._networkStream);
        this._fullReader = this._networkStream.getFullReader();
        this._fullReader.onProgress = function (evt) {
          _this9._lastProgress = {
            loaded: evt.loaded,
            total: evt.total
          };
        };
        sink.onPull = function () {
          _this9._fullReader.read().then(function (_ref3) {
            var value = _ref3.value,
                done = _ref3.done;

            if (done) {
              sink.close();
              return;
            }
            (0, _util.assert)((0, _util.isArrayBuffer)(value));
            sink.enqueue(new Uint8Array(value), 1, [value]);
          }).catch(function (reason) {
            sink.error(reason);
          });
        };
        sink.onCancel = function (reason) {
          _this9._fullReader.cancel(reason);
        };
      }, this);
      messageHandler.on('ReaderHeadersReady', function (data) {
        var _this10 = this;

        var headersCapability = (0, _util.createPromiseCapability)();
        var fullReader = this._fullReader;
        fullReader.headersReady.then(function () {
          if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {
            if (_this10._lastProgress && loadingTask.onProgress) {
              loadingTask.onProgress(_this10._lastProgress);
            }
            fullReader.onProgress = function (evt) {
              if (loadingTask.onProgress) {
                loadingTask.onProgress({
                  loaded: evt.loaded,
                  total: evt.total
                });
              }
            };
          }
          headersCapability.resolve({
            isStreamingSupported: fullReader.isStreamingSupported,
            isRangeSupported: fullReader.isRangeSupported,
            contentLength: fullReader.contentLength
          });
        }, headersCapability.reject);
        return headersCapability.promise;
      }, this);
      messageHandler.on('GetRangeReader', function (data, sink) {
        (0, _util.assert)(this._networkStream);
        var rangeReader = this._networkStream.getRangeReader(data.begin, data.end);
        sink.onPull = function () {
          rangeReader.read().then(function (_ref4) {
            var value = _ref4.value,
                done = _ref4.done;

            if (done) {
              sink.close();
              return;
            }
            (0, _util.assert)((0, _util.isArrayBuffer)(value));
            sink.enqueue(new Uint8Array(value), 1, [value]);
          }).catch(function (reason) {
            sink.error(reason);
          });
        };
        sink.onCancel = function (reason) {
          rangeReader.cancel(reason);
        };
      }, this);
      messageHandler.on('GetDoc', function (_ref5) {
        var pdfInfo = _ref5.pdfInfo;

        this.numPages = pdfInfo.numPages;
        this.pdfDocument = new PDFDocumentProxy(pdfInfo, this, loadingTask);
        loadingTask._capability.resolve(this.pdfDocument);
      }, this);
      messageHandler.on('PasswordRequest', function (exception) {
        var _this11 = this;

        this._passwordCapability = (0, _util.createPromiseCapability)();
        if (loadingTask.onPassword) {
          var updatePassword = function updatePassword(password) {
            _this11._passwordCapability.resolve({ password: password });
          };
          try {
            loadingTask.onPassword(updatePassword, exception.code);
          } catch (ex) {
            this._passwordCapability.reject(ex);
          }
        } else {
          this._passwordCapability.reject(new _util.PasswordException(exception.message, exception.code));
        }
        return this._passwordCapability.promise;
      }, this);
      messageHandler.on('PasswordException', function (exception) {
        loadingTask._capability.reject(new _util.PasswordException(exception.message, exception.code));
      }, this);
      messageHandler.on('InvalidPDF', function (exception) {
        loadingTask._capability.reject(new _util.InvalidPDFException(exception.message));
      }, this);
      messageHandler.on('MissingPDF', function (exception) {
        loadingTask._capability.reject(new _util.MissingPDFException(exception.message));
      }, this);
      messageHandler.on('UnexpectedResponse', function (exception) {
        loadingTask._capability.reject(new _util.UnexpectedResponseException(exception.message, exception.status));
      }, this);
      messageHandler.on('UnknownError', function (exception) {
        loadingTask._capability.reject(new _util.UnknownErrorException(exception.message, exception.details));
      }, this);
      messageHandler.on('DataLoaded', function (data) {
        if (loadingTask.onProgress) {
          loadingTask.onProgress({
            loaded: data.length,
            total: data.length
          });
        }
        this.downloadInfoCapability.resolve(data);
      }, this);
      messageHandler.on('StartRenderPage', function (data) {
        if (this.destroyed) {
          return;
        }
        var page = this.pageCache[data.pageIndex];
        page._stats.timeEnd('Page Request');
        page._startRenderPage(data.transparency, data.intent);
      }, this);
      messageHandler.on('RenderPageChunk', function (data) {
        if (this.destroyed) {
          return;
        }
        var page = this.pageCache[data.pageIndex];
        page._renderPageChunk(data.operatorList, data.intent);
      }, this);
      messageHandler.on('commonobj', function (data) {
        var _this12 = this;

        if (this.destroyed) {
          return;
        }

        var _data = _slicedToArray(data, 3),
            id = _data[0],
            type = _data[1],
            exportedData = _data[2];

        if (this.commonObjs.hasData(id)) {
          return;
        }
        switch (type) {
          case 'Font':
            var params = this._params;
            if ('error' in exportedData) {
              var exportedError = exportedData.error;
              (0, _util.warn)('Error during font loading: ' + exportedError);
              this.commonObjs.resolve(id, exportedError);
              break;
            }
            var fontRegistry = null;
            if (params.pdfBug && _global_scope2.default.FontInspector && _global_scope2.default.FontInspector.enabled) {
              fontRegistry = {
                registerFont: function registerFont(font, url) {
                  _global_scope2.default['FontInspector'].fontAdded(font, url);
                }
              };
            }
            var font = new _font_loader.FontFaceObject(exportedData, {
              isEvalSupported: params.isEvalSupported,
              disableFontFace: params.disableFontFace,
              ignoreErrors: params.ignoreErrors,
              onUnsupportedFeature: this._onUnsupportedFeature.bind(this),
              fontRegistry: fontRegistry
            });
            var fontReady = function fontReady(fontObjs) {
              _this12.commonObjs.resolve(id, font);
            };
            this.fontLoader.bind([font], fontReady);
            break;
          case 'FontPath':
            this.commonObjs.resolve(id, exportedData);
            break;
          default:
            throw new Error('Got unknown common object type ' + type);
        }
      }, this);
      messageHandler.on('obj', function (data) {
        if (this.destroyed) {
          return;
        }

        var _data2 = _slicedToArray(data, 4),
            id = _data2[0],
            pageIndex = _data2[1],
            type = _data2[2],
            imageData = _data2[3];

        var pageProxy = this.pageCache[pageIndex];
        if (pageProxy.objs.hasData(id)) {
          return;
        }
        switch (type) {
          case 'JpegStream':
            return new Promise(function (resolve, reject) {
              var img = new Image();
              img.onload = function () {
                resolve(img);
              };
              img.onerror = function () {
                reject(new Error('Error during JPEG image loading'));
              };
              img.src = imageData;
            }).then(function (img) {
              pageProxy.objs.resolve(id, img);
            });
          case 'Image':
            pageProxy.objs.resolve(id, imageData);
            var MAX_IMAGE_SIZE_TO_STORE = 8000000;
            if (imageData && 'data' in imageData && imageData.data.length > MAX_IMAGE_SIZE_TO_STORE) {
              pageProxy.cleanupAfterRender = true;
            }
            break;
          default:
            throw new Error('Got unknown object type ' + type);
        }
      }, this);
      messageHandler.on('DocProgress', function (data) {
        if (this.destroyed) {
          return;
        }
        if (loadingTask.onProgress) {
          loadingTask.onProgress({
            loaded: data.loaded,
            total: data.total
          });
        }
      }, this);
      messageHandler.on('PageError', function (data) {
        if (this.destroyed) {
          return;
        }
        var page = this.pageCache[data.pageNum - 1];
        var intentState = page.intentStates[data.intent];
        if (intentState.displayReadyCapability) {
          intentState.displayReadyCapability.reject(data.error);
        } else {
          throw new Error(data.error);
        }
        if (intentState.operatorList) {
          intentState.operatorList.lastChunk = true;
          for (var i = 0; i < intentState.renderTasks.length; i++) {
            intentState.renderTasks[i].operatorListChanged();
          }
        }
      }, this);
      messageHandler.on('UnsupportedFeature', this._onUnsupportedFeature, this);
      messageHandler.on('JpegDecode', function (data) {
        if (this.destroyed) {
          return Promise.reject(new Error('Worker was destroyed'));
        }
        if (typeof document === 'undefined') {
          return Promise.reject(new Error('"document" is not defined.'));
        }

        var _data3 = _slicedToArray(data, 2),
            imageUrl = _data3[0],
            components = _data3[1];

        if (components !== 3 && components !== 1) {
          return Promise.reject(new Error('Only 3 components or 1 component can be returned'));
        }
        return new Promise(function (resolve, reject) {
          var img = new Image();
          img.onload = function () {
            var width = img.width;
            var height = img.height;
            var size = width * height;
            var rgbaLength = size * 4;
            var buf = new Uint8ClampedArray(size * components);
            var tmpCanvas = document.createElement('canvas');
            tmpCanvas.width = width;
            tmpCanvas.height = height;
            var tmpCtx = tmpCanvas.getContext('2d');
            tmpCtx.drawImage(img, 0, 0);
            var data = tmpCtx.getImageData(0, 0, width, height).data;
            if (components === 3) {
              for (var i = 0, j = 0; i < rgbaLength; i += 4, j += 3) {
                buf[j] = data[i];
                buf[j + 1] = data[i + 1];
                buf[j + 2] = data[i + 2];
              }
            } else if (components === 1) {
              for (var _i = 0, _j = 0; _i < rgbaLength; _i += 4, _j++) {
                buf[_j] = data[_i];
              }
            }
            resolve({
              data: buf,
              width: width,
              height: height
            });
          };
          img.onerror = function () {
            reject(new Error('JpegDecode failed to load image'));
          };
          img.src = imageUrl;
        });
      }, this);
      messageHandler.on('FetchBuiltInCMap', function (data) {
        if (this.destroyed) {
          return Promise.reject(new Error('Worker was destroyed'));
        }
        return this.CMapReaderFactory.fetch({ name: data.name });
      }, this);
    }
  }, {
    key: '_onUnsupportedFeature',
    value: function _onUnsupportedFeature(_ref6) {
      var featureId = _ref6.featureId;

      if (this.destroyed) {
        return;
      }
      if (this.loadingTask.onUnsupportedFeature) {
        this.loadingTask.onUnsupportedFeature(featureId);
      }
    }
  }, {
    key: 'getData',
    value: function getData() {
      return this.messageHandler.sendWithPromise('GetData', null);
    }
  }, {
    key: 'getPage',
    value: function getPage(pageNumber) {
      var _this13 = this;

      if (!Number.isInteger(pageNumber) || pageNumber <= 0 || pageNumber > this.numPages) {
        return Promise.reject(new Error('Invalid page request'));
      }
      var pageIndex = pageNumber - 1;
      if (pageIndex in this.pagePromises) {
        return this.pagePromises[pageIndex];
      }
      var promise = this.messageHandler.sendWithPromise('GetPage', { pageIndex: pageIndex }).then(function (pageInfo) {
        if (_this13.destroyed) {
          throw new Error('Transport destroyed');
        }
        var page = new PDFPageProxy(pageIndex, pageInfo, _this13, _this13._params.pdfBug);
        _this13.pageCache[pageIndex] = page;
        return page;
      });
      this.pagePromises[pageIndex] = promise;
      return promise;
    }
  }, {
    key: 'getPageIndex',
    value: function getPageIndex(ref) {
      return this.messageHandler.sendWithPromise('GetPageIndex', { ref: ref }).catch(function (reason) {
        return Promise.reject(new Error(reason));
      });
    }
  }, {
    key: 'getAnnotations',
    value: function getAnnotations(pageIndex, intent) {
      return this.messageHandler.sendWithPromise('GetAnnotations', {
        pageIndex: pageIndex,
        intent: intent
      });
    }
  }, {
    key: 'getDestinations',
    value: function getDestinations() {
      return this.messageHandler.sendWithPromise('GetDestinations', null);
    }
  }, {
    key: 'getDestination',
    value: function getDestination(id) {
      if (typeof id !== 'string') {
        return Promise.reject(new Error('Invalid destination request.'));
      }
      return this.messageHandler.sendWithPromise('GetDestination', { id: id });
    }
  }, {
    key: 'getPageLabels',
    value: function getPageLabels() {
      return this.messageHandler.sendWithPromise('GetPageLabels', null);
    }
  }, {
    key: 'getPageMode',
    value: function getPageMode() {
      return this.messageHandler.sendWithPromise('GetPageMode', null);
    }
  }, {
    key: 'getAttachments',
    value: function getAttachments() {
      return this.messageHandler.sendWithPromise('GetAttachments', null);
    }
  }, {
    key: 'getJavaScript',
    value: function getJavaScript() {
      return this.messageHandler.sendWithPromise('GetJavaScript', null);
    }
  }, {
    key: 'getOutline',
    value: function getOutline() {
      return this.messageHandler.sendWithPromise('GetOutline', null);
    }
  }, {
    key: 'getPermissions',
    value: function getPermissions() {
      return this.messageHandler.sendWithPromise('GetPermissions', null);
    }
  }, {
    key: 'getMetadata',
    value: function getMetadata() {
      var _this14 = this;

      return this.messageHandler.sendWithPromise('GetMetadata', null).then(function (results) {
        return {
          info: results[0],
          metadata: results[1] ? new _metadata.Metadata(results[1]) : null,
          contentDispositionFilename: _this14._fullReader ? _this14._fullReader.filename : null
        };
      });
    }
  }, {
    key: 'getStats',
    value: function getStats() {
      return this.messageHandler.sendWithPromise('GetStats', null);
    }
  }, {
    key: 'startCleanup',
    value: function startCleanup() {
      var _this15 = this;

      this.messageHandler.sendWithPromise('Cleanup', null).then(function () {
        for (var i = 0, ii = _this15.pageCache.length; i < ii; i++) {
          var page = _this15.pageCache[i];
          if (page) {
            page.cleanup();
          }
        }
        _this15.commonObjs.clear();
        _this15.fontLoader.clear();
      });
    }
  }, {
    key: 'loadingParams',
    get: function get() {
      var params = this._params;
      return (0, _util.shadow)(this, 'loadingParams', {
        disableAutoFetch: params.disableAutoFetch,
        disableCreateObjectURL: params.disableCreateObjectURL,
        disableFontFace: params.disableFontFace,
        nativeImageDecoderSupport: params.nativeImageDecoderSupport
      });
    }
  }]);

  return WorkerTransport;
}();

var PDFObjects = function PDFObjectsClosure() {
  function PDFObjects() {
    this.objs = Object.create(null);
  }
  PDFObjects.prototype = {
    ensureObj: function PDFObjects_ensureObj(objId) {
      if (this.objs[objId]) {
        return this.objs[objId];
      }
      var obj = {
        capability: (0, _util.createPromiseCapability)(),
        data: null,
        resolved: false
      };
      this.objs[objId] = obj;
      return obj;
    },
    get: function PDFObjects_get(objId, callback) {
      if (callback) {
        this.ensureObj(objId).capability.promise.then(callback);
        return null;
      }
      var obj = this.objs[objId];
      if (!obj || !obj.resolved) {
        throw new Error('Requesting object that isn\'t resolved yet ' + objId);
      }
      return obj.data;
    },
    resolve: function PDFObjects_resolve(objId, data) {
      var obj = this.ensureObj(objId);
      obj.resolved = true;
      obj.data = data;
      obj.capability.resolve(data);
    },
    isResolved: function PDFObjects_isResolved(objId) {
      var objs = this.objs;
      if (!objs[objId]) {
        return false;
      }
      return objs[objId].resolved;
    },
    hasData: function PDFObjects_hasData(objId) {
      return this.isResolved(objId);
    },
    getData: function PDFObjects_getData(objId) {
      var objs = this.objs;
      if (!objs[objId] || !objs[objId].resolved) {
        return null;
      }
      return objs[objId].data;
    },
    clear: function PDFObjects_clear() {
      this.objs = Object.create(null);
    }
  };
  return PDFObjects;
}();
var RenderTask = function RenderTaskClosure() {
  function RenderTask(internalRenderTask) {
    this._internalRenderTask = internalRenderTask;
    this.onContinue = null;
  }
  RenderTask.prototype = {
    get promise() {
      return this._internalRenderTask.capability.promise;
    },
    cancel: function RenderTask_cancel() {
      this._internalRenderTask.cancel();
    },
    then: function RenderTask_then(onFulfilled, onRejected) {
      return this.promise.then.apply(this.promise, arguments);
    }
  };
  return RenderTask;
}();
var InternalRenderTask = function InternalRenderTaskClosure() {
  var canvasInRendering = new WeakMap();
  function InternalRenderTask(callback, params, objs, commonObjs, operatorList, pageNumber, canvasFactory, webGLContext) {
    var pdfBug = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;

    this.callback = callback;
    this.params = params;
    this.objs = objs;
    this.commonObjs = commonObjs;
    this.operatorListIdx = null;
    this.operatorList = operatorList;
    this.pageNumber = pageNumber;
    this.canvasFactory = canvasFactory;
    this.webGLContext = webGLContext;
    this._pdfBug = pdfBug;
    this.running = false;
    this.graphicsReadyCallback = null;
    this.graphicsReady = false;
    this.useRequestAnimationFrame = false;
    this.cancelled = false;
    this.capability = (0, _util.createPromiseCapability)();
    this.task = new RenderTask(this);
    this._continueBound = this._continue.bind(this);
    this._scheduleNextBound = this._scheduleNext.bind(this);
    this._nextBound = this._next.bind(this);
    this._canvas = params.canvasContext.canvas;
  }
  InternalRenderTask.prototype = {
    initializeGraphics: function initializeGraphics(transparency) {
      if (this.cancelled) {
        return;
      }
      if (this._canvas) {
        if (canvasInRendering.has(this._canvas)) {
          throw new Error('Cannot use the same canvas during multiple render() operations. ' + 'Use different canvas or ensure previous operations were ' + 'cancelled or completed.');
        }
        canvasInRendering.set(this._canvas, this);
      }
      if (this._pdfBug && _global_scope2.default.StepperManager && _global_scope2.default.StepperManager.enabled) {
        this.stepper = _global_scope2.default.StepperManager.create(this.pageNumber - 1);
        this.stepper.init(this.operatorList);
        this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();
      }
      var params = this.params;
      this.gfx = new _canvas.CanvasGraphics(params.canvasContext, this.commonObjs, this.objs, this.canvasFactory, this.webGLContext, params.imageLayer);
      this.gfx.beginDrawing({
        transform: params.transform,
        viewport: params.viewport,
        transparency: transparency,
        background: params.background
      });
      this.operatorListIdx = 0;
      this.graphicsReady = true;
      if (this.graphicsReadyCallback) {
        this.graphicsReadyCallback();
      }
    },

    cancel: function InternalRenderTask_cancel() {
      this.running = false;
      this.cancelled = true;
      if (this._canvas) {
        canvasInRendering.delete(this._canvas);
      }
      this.callback(new _dom_utils.RenderingCancelledException('Rendering cancelled, page ' + this.pageNumber, 'canvas'));
    },
    operatorListChanged: function InternalRenderTask_operatorListChanged() {
      if (!this.graphicsReady) {
        if (!this.graphicsReadyCallback) {
          this.graphicsReadyCallback = this._continueBound;
        }
        return;
      }
      if (this.stepper) {
        this.stepper.updateOperatorList(this.operatorList);
      }
      if (this.running) {
        return;
      }
      this._continue();
    },
    _continue: function InternalRenderTask__continue() {
      this.running = true;
      if (this.cancelled) {
        return;
      }
      if (this.task.onContinue) {
        this.task.onContinue(this._scheduleNextBound);
      } else {
        this._scheduleNext();
      }
    },
    _scheduleNext: function InternalRenderTask__scheduleNext() {
      var _this16 = this;

      if (this.useRequestAnimationFrame && typeof window !== 'undefined') {
        window.requestAnimationFrame(function () {
          _this16._nextBound().catch(_this16.callback);
        });
      } else {
        Promise.resolve().then(this._nextBound).catch(this.callback);
      }
    },
    _next: function InternalRenderTask__next() {
      var _this17 = this;

      return new Promise(function () {
        if (_this17.cancelled) {
          return;
        }
        _this17.operatorListIdx = _this17.gfx.executeOperatorList(_this17.operatorList, _this17.operatorListIdx, _this17._continueBound, _this17.stepper);
        if (_this17.operatorListIdx === _this17.operatorList.argsArray.length) {
          _this17.running = false;
          if (_this17.operatorList.lastChunk) {
            _this17.gfx.endDrawing();
            if (_this17._canvas) {
              canvasInRendering.delete(_this17._canvas);
            }
            _this17.callback();
          }
        }
      });
    }
  };
  return InternalRenderTask;
}();
var version, build;
{
  exports.version = version = '2.0.943';
  exports.build = build = 'dc98bf76';
}
exports.getDocument = getDocument;
exports.LoopbackPort = LoopbackPort;
exports.PDFDataRangeTransport = PDFDataRangeTransport;
exports.PDFWorker = PDFWorker;
exports.PDFDocumentProxy = PDFDocumentProxy;
exports.PDFPageProxy = PDFPageProxy;
exports.setPDFNetworkStreamFactory = setPDFNetworkStreamFactory;
exports.version = version;
exports.build = build;

/***/ }),
/* 130 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loadScript = exports.DummyStatTimer = exports.StatTimer = exports.DOMSVGFactory = exports.DOMCMapReaderFactory = exports.DOMCanvasFactory = exports.DEFAULT_LINK_REL = exports.LinkTarget = exports.getFilenameFromUrl = exports.addLinkAttributes = exports.RenderingCancelledException = exports.PageViewport = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _util = __w_pdfjs_require__(1);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var DEFAULT_LINK_REL = 'noopener noreferrer nofollow';
var SVG_NS = 'http://www.w3.org/2000/svg';

var DOMCanvasFactory = function () {
  function DOMCanvasFactory() {
    _classCallCheck(this, DOMCanvasFactory);
  }

  _createClass(DOMCanvasFactory, [{
    key: 'create',
    value: function create(width, height) {
      if (width <= 0 || height <= 0) {
        throw new Error('invalid canvas size');
      }
      var canvas = document.createElement('canvas');
      var context = canvas.getContext('2d');
      canvas.width = width;
      canvas.height = height;
      return {
        canvas: canvas,
        context: context
      };
    }
  }, {
    key: 'reset',
    value: function reset(canvasAndContext, width, height) {
      if (!canvasAndContext.canvas) {
        throw new Error('canvas is not specified');
      }
      if (width <= 0 || height <= 0) {
        throw new Error('invalid canvas size');
      }
      canvasAndContext.canvas.width = width;
      canvasAndContext.canvas.height = height;
    }
  }, {
    key: 'destroy',
    value: function destroy(canvasAndContext) {
      if (!canvasAndContext.canvas) {
        throw new Error('canvas is not specified');
      }
      canvasAndContext.canvas.width = 0;
      canvasAndContext.canvas.height = 0;
      canvasAndContext.canvas = null;
      canvasAndContext.context = null;
    }
  }]);

  return DOMCanvasFactory;
}();

var DOMCMapReaderFactory = function () {
  function DOMCMapReaderFactory(_ref) {
    var _ref$baseUrl = _ref.baseUrl,
        baseUrl = _ref$baseUrl === undefined ? null : _ref$baseUrl,
        _ref$isCompressed = _ref.isCompressed,
        isCompressed = _ref$isCompressed === undefined ? false : _ref$isCompressed;

    _classCallCheck(this, DOMCMapReaderFactory);

    this.baseUrl = baseUrl;
    this.isCompressed = isCompressed;
  }

  _createClass(DOMCMapReaderFactory, [{
    key: 'fetch',
    value: function fetch(_ref2) {
      var _this = this;

      var name = _ref2.name;

      if (!this.baseUrl) {
        return Promise.reject(new Error('The CMap "baseUrl" parameter must be specified, ensure that ' + 'the "cMapUrl" and "cMapPacked" API parameters are provided.'));
      }
      if (!name) {
        return Promise.reject(new Error('CMap name must be specified.'));
      }
      return new Promise(function (resolve, reject) {
        var url = _this.baseUrl + name + (_this.isCompressed ? '.bcmap' : '');
        var request = new XMLHttpRequest();
        request.open('GET', url, true);
        if (_this.isCompressed) {
          request.responseType = 'arraybuffer';
        }
        request.onreadystatechange = function () {
          if (request.readyState !== XMLHttpRequest.DONE) {
            return;
          }
          if (request.status === 200 || request.status === 0) {
            var data = void 0;
            if (_this.isCompressed && request.response) {
              data = new Uint8Array(request.response);
            } else if (!_this.isCompressed && request.responseText) {
              data = (0, _util.stringToBytes)(request.responseText);
            }
            if (data) {
              resolve({
                cMapData: data,
                compressionType: _this.isCompressed ? _util.CMapCompressionType.BINARY : _util.CMapCompressionType.NONE
              });
              return;
            }
          }
          reject(new Error('Unable to load ' + (_this.isCompressed ? 'binary ' : '') + 'CMap at: ' + url));
        };
        request.send(null);
      });
    }
  }]);

  return DOMCMapReaderFactory;
}();

var DOMSVGFactory = function () {
  function DOMSVGFactory() {
    _classCallCheck(this, DOMSVGFactory);
  }

  _createClass(DOMSVGFactory, [{
    key: 'create',
    value: function create(width, height) {
      (0, _util.assert)(width > 0 && height > 0, 'Invalid SVG dimensions');
      var svg = document.createElementNS(SVG_NS, 'svg:svg');
      svg.setAttribute('version', '1.1');
      svg.setAttribute('width', width + 'px');
      svg.setAttribute('height', height + 'px');
      svg.setAttribute('preserveAspectRatio', 'none');
      svg.setAttribute('viewBox', '0 0 ' + width + ' ' + height);
      return svg;
    }
  }, {
    key: 'createElement',
    value: function createElement(type) {
      (0, _util.assert)(typeof type === 'string', 'Invalid SVG element type');
      return document.createElementNS(SVG_NS, type);
    }
  }]);

  return DOMSVGFactory;
}();

var PageViewport = function () {
  function PageViewport(_ref3) {
    var viewBox = _ref3.viewBox,
        scale = _ref3.scale,
        rotation = _ref3.rotation,
        _ref3$offsetX = _ref3.offsetX,
        offsetX = _ref3$offsetX === undefined ? 0 : _ref3$offsetX,
        _ref3$offsetY = _ref3.offsetY,
        offsetY = _ref3$offsetY === undefined ? 0 : _ref3$offsetY,
        _ref3$dontFlip = _ref3.dontFlip,
        dontFlip = _ref3$dontFlip === undefined ? false : _ref3$dontFlip;

    _classCallCheck(this, PageViewport);

    this.viewBox = viewBox;
    this.scale = scale;
    this.rotation = rotation;
    this.offsetX = offsetX;
    this.offsetY = offsetY;
    var centerX = (viewBox[2] + viewBox[0]) / 2;
    var centerY = (viewBox[3] + viewBox[1]) / 2;
    var rotateA = void 0,
        rotateB = void 0,
        rotateC = void 0,
        rotateD = void 0;
    rotation = rotation % 360;
    rotation = rotation < 0 ? rotation + 360 : rotation;
    switch (rotation) {
      case 180:
        rotateA = -1;
        rotateB = 0;
        rotateC = 0;
        rotateD = 1;
        break;
      case 90:
        rotateA = 0;
        rotateB = 1;
        rotateC = 1;
        rotateD = 0;
        break;
      case 270:
        rotateA = 0;
        rotateB = -1;
        rotateC = -1;
        rotateD = 0;
        break;
      default:
        rotateA = 1;
        rotateB = 0;
        rotateC = 0;
        rotateD = -1;
        break;
    }
    if (dontFlip) {
      rotateC = -rotateC;
      rotateD = -rotateD;
    }
    var offsetCanvasX = void 0,
        offsetCanvasY = void 0;
    var width = void 0,
        height = void 0;
    if (rotateA === 0) {
      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;
      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;
      width = Math.abs(viewBox[3] - viewBox[1]) * scale;
      height = Math.abs(viewBox[2] - viewBox[0]) * scale;
    } else {
      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;
      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;
      width = Math.abs(viewBox[2] - viewBox[0]) * scale;
      height = Math.abs(viewBox[3] - viewBox[1]) * scale;
    }
    this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];
    this.width = width;
    this.height = height;
  }

  _createClass(PageViewport, [{
    key: 'clone',
    value: function clone() {
      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          _ref4$scale = _ref4.scale,
          scale = _ref4$scale === undefined ? this.scale : _ref4$scale,
          _ref4$rotation = _ref4.rotation,
          rotation = _ref4$rotation === undefined ? this.rotation : _ref4$rotation,
          _ref4$dontFlip = _ref4.dontFlip,
          dontFlip = _ref4$dontFlip === undefined ? false : _ref4$dontFlip;

      return new PageViewport({
        viewBox: this.viewBox.slice(),
        scale: scale,
        rotation: rotation,
        offsetX: this.offsetX,
        offsetY: this.offsetY,
        dontFlip: dontFlip
      });
    }
  }, {
    key: 'convertToViewportPoint',
    value: function convertToViewportPoint(x, y) {
      return _util.Util.applyTransform([x, y], this.transform);
    }
  }, {
    key: 'convertToViewportRectangle',
    value: function convertToViewportRectangle(rect) {
      var tl = _util.Util.applyTransform([rect[0], rect[1]], this.transform);
      var br = _util.Util.applyTransform([rect[2], rect[3]], this.transform);
      return [tl[0], tl[1], br[0], br[1]];
    }
  }, {
    key: 'convertToPdfPoint',
    value: function convertToPdfPoint(x, y) {
      return _util.Util.applyInverseTransform([x, y], this.transform);
    }
  }]);

  return PageViewport;
}();

var RenderingCancelledException = function RenderingCancelledException() {
  function RenderingCancelledException(msg, type) {
    this.message = msg;
    this.type = type;
  }
  RenderingCancelledException.prototype = new Error();
  RenderingCancelledException.prototype.name = 'RenderingCancelledException';
  RenderingCancelledException.constructor = RenderingCancelledException;
  return RenderingCancelledException;
}();
var LinkTarget = {
  NONE: 0,
  SELF: 1,
  BLANK: 2,
  PARENT: 3,
  TOP: 4
};
var LinkTargetStringMap = ['', '_self', '_blank', '_parent', '_top'];
function addLinkAttributes(link) {
  var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      url = _ref5.url,
      target = _ref5.target,
      rel = _ref5.rel;

  link.href = link.title = url ? (0, _util.removeNullCharacters)(url) : '';
  if (url) {
    var LinkTargetValues = Object.values(LinkTarget);
    var targetIndex = LinkTargetValues.includes(target) ? target : LinkTarget.NONE;
    link.target = LinkTargetStringMap[targetIndex];
    link.rel = typeof rel === 'string' ? rel : DEFAULT_LINK_REL;
  }
}
function getFilenameFromUrl(url) {
  var anchor = url.indexOf('#');
  var query = url.indexOf('?');
  var end = Math.min(anchor > 0 ? anchor : url.length, query > 0 ? query : url.length);
  return url.substring(url.lastIndexOf('/', end) + 1, end);
}

var StatTimer = function () {
  function StatTimer() {
    var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

    _classCallCheck(this, StatTimer);

    this.enabled = !!enable;
    this.started = Object.create(null);
    this.times = [];
  }

  _createClass(StatTimer, [{
    key: 'time',
    value: function time(name) {
      if (!this.enabled) {
        return;
      }
      if (name in this.started) {
        (0, _util.warn)('Timer is already running for ' + name);
      }
      this.started[name] = Date.now();
    }
  }, {
    key: 'timeEnd',
    value: function timeEnd(name) {
      if (!this.enabled) {
        return;
      }
      if (!(name in this.started)) {
        (0, _util.warn)('Timer has not been started for ' + name);
      }
      this.times.push({
        'name': name,
        'start': this.started[name],
        'end': Date.now()
      });
      delete this.started[name];
    }
  }, {
    key: 'toString',
    value: function toString() {
      var times = this.times;
      var out = '',
          longest = 0;
      for (var i = 0, ii = times.length; i < ii; ++i) {
        var name = times[i]['name'];
        if (name.length > longest) {
          longest = name.length;
        }
      }
      for (var _i = 0, _ii = times.length; _i < _ii; ++_i) {
        var span = times[_i];
        var duration = span.end - span.start;
        out += span['name'].padEnd(longest) + ' ' + duration + 'ms\n';
      }
      return out;
    }
  }]);

  return StatTimer;
}();

var DummyStatTimer = function () {
  function DummyStatTimer() {
    _classCallCheck(this, DummyStatTimer);

    (0, _util.unreachable)('Cannot initialize DummyStatTimer.');
  }

  _createClass(DummyStatTimer, null, [{
    key: 'time',
    value: function time(name) {}
  }, {
    key: 'timeEnd',
    value: function timeEnd(name) {}
  }, {
    key: 'toString',
    value: function toString() {
      return '';
    }
  }]);

  return DummyStatTimer;
}();

function loadScript(src) {
  return new Promise(function (resolve, reject) {
    var script = document.createElement('script');
    script.src = src;
    script.onload = resolve;
    script.onerror = function () {
      reject(new Error('Cannot load script at: ' + script.src));
    };
    (document.head || document.documentElement).appendChild(script);
  });
}
exports.PageViewport = PageViewport;
exports.RenderingCancelledException = RenderingCancelledException;
exports.addLinkAttributes = addLinkAttributes;
exports.getFilenameFromUrl = getFilenameFromUrl;
exports.LinkTarget = LinkTarget;
exports.DEFAULT_LINK_REL = DEFAULT_LINK_REL;
exports.DOMCanvasFactory = DOMCanvasFactory;
exports.DOMCMapReaderFactory = DOMCMapReaderFactory;
exports.DOMSVGFactory = DOMSVGFactory;
exports.StatTimer = StatTimer;
exports.DummyStatTimer = DummyStatTimer;
exports.loadScript = loadScript;

/***/ }),
/* 131 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FontLoader = exports.FontFaceObject = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _util = __w_pdfjs_require__(1);

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var BaseFontLoader = function () {
  function BaseFontLoader(docId) {
    _classCallCheck(this, BaseFontLoader);

    if (this.constructor === BaseFontLoader) {
      (0, _util.unreachable)('Cannot initialize BaseFontLoader.');
    }
    this.docId = docId;
    this.nativeFontFaces = [];
    this.styleElement = null;
    this.loadingContext = {
      requests: [],
      nextRequestId: 0
    };
  }

  _createClass(BaseFontLoader, [{
    key: 'addNativeFontFace',
    value: function addNativeFontFace(nativeFontFace) {
      this.nativeFontFaces.push(nativeFontFace);
      document.fonts.add(nativeFontFace);
    }
  }, {
    key: 'insertRule',
    value: function insertRule(rule) {
      var styleElement = this.styleElement;
      if (!styleElement) {
        styleElement = this.styleElement = document.createElement('style');
        styleElement.id = 'PDFJS_FONT_STYLE_TAG_' + this.docId;
        document.documentElement.getElementsByTagName('head')[0].appendChild(styleElement);
      }
      var styleSheet = styleElement.sheet;
      styleSheet.insertRule(rule, styleSheet.cssRules.length);
    }
  }, {
    key: 'clear',
    value: function clear() {
      this.nativeFontFaces.forEach(function (nativeFontFace) {
        document.fonts.delete(nativeFontFace);
      });
      this.nativeFontFaces.length = 0;
      if (this.styleElement) {
        this.styleElement.remove();
        this.styleElement = null;
      }
    }
  }, {
    key: 'bind',
    value: function bind(fonts, callback) {
      var rules = [];
      var fontsToLoad = [];
      var fontLoadPromises = [];
      var getNativeFontPromise = function getNativeFontPromise(nativeFontFace) {
        return nativeFontFace.loaded.catch(function (reason) {
          (0, _util.warn)('Failed to load font "' + nativeFontFace.family + '": ' + reason);
        });
      };
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = fonts[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var font = _step.value;

          if (font.attached || font.missingFile) {
            continue;
          }
          font.attached = true;
          if (this.isFontLoadingAPISupported) {
            var nativeFontFace = font.createNativeFontFace();
            if (nativeFontFace) {
              this.addNativeFontFace(nativeFontFace);
              fontLoadPromises.push(getNativeFontPromise(nativeFontFace));
            }
          } else {
            var rule = font.createFontFaceRule();
            if (rule) {
              this.insertRule(rule);
              rules.push(rule);
              fontsToLoad.push(font);
            }
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      var request = this._queueLoadingCallback(callback);
      if (this.isFontLoadingAPISupported) {
        Promise.all(fontLoadPromises).then(request.complete);
      } else if (rules.length > 0 && !this.isSyncFontLoadingSupported) {
        this._prepareFontLoadEvent(rules, fontsToLoad, request);
      } else {
        request.complete();
      }
    }
  }, {
    key: '_queueLoadingCallback',
    value: function _queueLoadingCallback(callback) {
      function completeRequest() {
        (0, _util.assert)(!request.done, 'completeRequest() cannot be called twice.');
        request.done = true;
        while (context.requests.length > 0 && context.requests[0].done) {
          var otherRequest = context.requests.shift();
          setTimeout(otherRequest.callback, 0);
        }
      }
      var context = this.loadingContext;
      var request = {
        id: 'pdfjs-font-loading-' + context.nextRequestId++,
        done: false,
        complete: completeRequest,
        callback: callback
      };
      context.requests.push(request);
      return request;
    }
  }, {
    key: '_prepareFontLoadEvent',
    value: function _prepareFontLoadEvent(rules, fontsToLoad, request) {
      (0, _util.unreachable)('Abstract method `_prepareFontLoadEvent`.');
    }
  }, {
    key: 'isFontLoadingAPISupported',
    get: function get() {
      (0, _util.unreachable)('Abstract method `isFontLoadingAPISupported`.');
    }
  }, {
    key: 'isSyncFontLoadingSupported',
    get: function get() {
      (0, _util.unreachable)('Abstract method `isSyncFontLoadingSupported`.');
    }
  }, {
    key: '_loadTestFont',
    get: function get() {
      (0, _util.unreachable)('Abstract method `_loadTestFont`.');
    }
  }]);

  return BaseFontLoader;
}();

var FontLoader = void 0;
{
  exports.FontLoader = FontLoader = function (_BaseFontLoader) {
    _inherits(GenericFontLoader, _BaseFontLoader);

    function GenericFontLoader(docId) {
      _classCallCheck(this, GenericFontLoader);

      var _this = _possibleConstructorReturn(this, (GenericFontLoader.__proto__ || Object.getPrototypeOf(GenericFontLoader)).call(this, docId));

      _this.loadTestFontId = 0;
      return _this;
    }

    _createClass(GenericFontLoader, [{
      key: '_prepareFontLoadEvent',
      value: function _prepareFontLoadEvent(rules, fonts, request) {
        function int32(data, offset) {
          return data.charCodeAt(offset) << 24 | data.charCodeAt(offset + 1) << 16 | data.charCodeAt(offset + 2) << 8 | data.charCodeAt(offset + 3) & 0xff;
        }
        function spliceString(s, offset, remove, insert) {
          var chunk1 = s.substring(0, offset);
          var chunk2 = s.substring(offset + remove);
          return chunk1 + insert + chunk2;
        }
        var i = void 0,
            ii = void 0;
        var canvas = document.createElement('canvas');
        canvas.width = 1;
        canvas.height = 1;
        var ctx = canvas.getContext('2d');
        var called = 0;
        function isFontReady(name, callback) {
          called++;
          if (called > 30) {
            (0, _util.warn)('Load test font never loaded.');
            callback();
            return;
          }
          ctx.font = '30px ' + name;
          ctx.fillText('.', 0, 20);
          var imageData = ctx.getImageData(0, 0, 1, 1);
          if (imageData.data[3] > 0) {
            callback();
            return;
          }
          setTimeout(isFontReady.bind(null, name, callback));
        }
        var loadTestFontId = 'lt' + Date.now() + this.loadTestFontId++;
        var data = this._loadTestFont;
        var COMMENT_OFFSET = 976;
        data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId);
        var CFF_CHECKSUM_OFFSET = 16;
        var XXXX_VALUE = 0x58585858;
        var checksum = int32(data, CFF_CHECKSUM_OFFSET);
        for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {
          checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0;
        }
        if (i < loadTestFontId.length) {
          checksum = checksum - XXXX_VALUE + int32(loadTestFontId + 'XXX', i) | 0;
        }
        data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, (0, _util.string32)(checksum));
        var url = 'url(data:font/opentype;base64,' + btoa(data) + ');';
        var rule = '@font-face {font-family:"' + loadTestFontId + '";src:' + url + '}';
        this.insertRule(rule);
        var names = [];
        for (i = 0, ii = fonts.length; i < ii; i++) {
          names.push(fonts[i].loadedName);
        }
        names.push(loadTestFontId);
        var div = document.createElement('div');
        div.setAttribute('style', 'visibility: hidden;' + 'width: 10px; height: 10px;' + 'position: absolute; top: 0px; left: 0px;');
        for (i = 0, ii = names.length; i < ii; ++i) {
          var span = document.createElement('span');
          span.textContent = 'Hi';
          span.style.fontFamily = names[i];
          div.appendChild(span);
        }
        document.body.appendChild(div);
        isFontReady(loadTestFontId, function () {
          document.body.removeChild(div);
          request.complete();
        });
      }
    }, {
      key: 'isFontLoadingAPISupported',
      get: function get() {
        var supported = typeof document !== 'undefined' && !!document.fonts;
        if (supported && typeof navigator !== 'undefined') {
          var m = /Mozilla\/5.0.*?rv:(\d+).*? Gecko/.exec(navigator.userAgent);
          if (m && m[1] < 63) {
            supported = false;
          }
        }
        return (0, _util.shadow)(this, 'isFontLoadingAPISupported', supported);
      }
    }, {
      key: 'isSyncFontLoadingSupported',
      get: function get() {
        var supported = false;
        if (typeof navigator === 'undefined') {
          supported = true;
        } else {
          var m = /Mozilla\/5.0.*?rv:(\d+).*? Gecko/.exec(navigator.userAgent);
          if (m && m[1] >= 14) {
            supported = true;
          }
        }
        return (0, _util.shadow)(this, 'isSyncFontLoadingSupported', supported);
      }
    }, {
      key: '_loadTestFont',
      get: function get() {
        var getLoadTestFont = function getLoadTestFont() {
          return atob('T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA' + 'FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA' + 'ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA' + 'AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1' + 'AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD' + '6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM' + 'AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D' + 'IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA' + 'AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA' + 'AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB' + 'AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY' + 'AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA' + 'AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA' + 'AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA' + 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA' + 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA' + 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA' + 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA' + 'AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC' + 'AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3' + 'Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj' + 'FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==');
        };
        return (0, _util.shadow)(this, '_loadTestFont', getLoadTestFont());
      }
    }]);

    return GenericFontLoader;
  }(BaseFontLoader);
}
var IsEvalSupportedCached = {
  get value() {
    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());
  }
};

var FontFaceObject = function () {
  function FontFaceObject(translatedData, _ref) {
    var _ref$isEvalSupported = _ref.isEvalSupported,
        isEvalSupported = _ref$isEvalSupported === undefined ? true : _ref$isEvalSupported,
        _ref$disableFontFace = _ref.disableFontFace,
        disableFontFace = _ref$disableFontFace === undefined ? false : _ref$disableFontFace,
        _ref$ignoreErrors = _ref.ignoreErrors,
        ignoreErrors = _ref$ignoreErrors === undefined ? false : _ref$ignoreErrors,
        _ref$onUnsupportedFea = _ref.onUnsupportedFeature,
        onUnsupportedFeature = _ref$onUnsupportedFea === undefined ? null : _ref$onUnsupportedFea,
        _ref$fontRegistry = _ref.fontRegistry,
        fontRegistry = _ref$fontRegistry === undefined ? null : _ref$fontRegistry;

    _classCallCheck(this, FontFaceObject);

    this.compiledGlyphs = Object.create(null);
    for (var i in translatedData) {
      this[i] = translatedData[i];
    }
    this.isEvalSupported = isEvalSupported !== false;
    this.disableFontFace = disableFontFace === true;
    this.ignoreErrors = ignoreErrors === true;
    this._onUnsupportedFeature = onUnsupportedFeature;
    this.fontRegistry = fontRegistry;
  }

  _createClass(FontFaceObject, [{
    key: 'createNativeFontFace',
    value: function createNativeFontFace() {
      if (!this.data || this.disableFontFace) {
        return null;
      }
      var nativeFontFace = new FontFace(this.loadedName, this.data, {});
      if (this.fontRegistry) {
        this.fontRegistry.registerFont(this);
      }
      return nativeFontFace;
    }
  }, {
    key: 'createFontFaceRule',
    value: function createFontFaceRule() {
      if (!this.data || this.disableFontFace) {
        return null;
      }
      var data = (0, _util.bytesToString)(new Uint8Array(this.data));
      var url = 'url(data:' + this.mimetype + ';base64,' + btoa(data) + ');';
      var rule = '@font-face {font-family:"' + this.loadedName + '";src:' + url + '}';
      if (this.fontRegistry) {
        this.fontRegistry.registerFont(this, url);
      }
      return rule;
    }
  }, {
    key: 'getPathGenerator',
    value: function getPathGenerator(objs, character) {
      if (this.compiledGlyphs[character] !== undefined) {
        return this.compiledGlyphs[character];
      }
      var cmds = void 0,
          current = void 0;
      try {
        cmds = objs.get(this.loadedName + '_path_' + character);
      } catch (ex) {
        if (!this.ignoreErrors) {
          throw ex;
        }
        if (this._onUnsupportedFeature) {
          this._onUnsupportedFeature({ featureId: _util.UNSUPPORTED_FEATURES.font });
        }
        (0, _util.warn)('getPathGenerator - ignoring character: "' + ex + '".');
        return this.compiledGlyphs[character] = function (c, size) {};
      }
      if (this.isEvalSupported && IsEvalSupportedCached.value) {
        var args = void 0,
            js = '';
        for (var i = 0, ii = cmds.length; i < ii; i++) {
          current = cmds[i];
          if (current.args !== undefined) {
            args = current.args.join(',');
          } else {
            args = '';
          }
          js += 'c.' + current.cmd + '(' + args + ');\n';
        }
        return this.compiledGlyphs[character] = new Function('c', 'size', js);
      }
      return this.compiledGlyphs[character] = function (c, size) {
        for (var _i = 0, _ii = cmds.length; _i < _ii; _i++) {
          current = cmds[_i];
          if (current.cmd === 'scale') {
            current.args = [size, -size];
          }
          c[current.cmd].apply(c, current.args);
        }
      };
    }
  }]);

  return FontFaceObject;
}();

exports.FontFaceObject = FontFaceObject;
exports.FontLoader = FontLoader;

/***/ }),
/* 132 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var compatibilityParams = Object.create(null);
{
  var isNodeJS = __w_pdfjs_require__(4);
  var userAgent = typeof navigator !== 'undefined' && navigator.userAgent || '';
  var isIE = /Trident/.test(userAgent);
  var isIOSChrome = /CriOS/.test(userAgent);
  (function checkOnBlobSupport() {
    if (isIE || isIOSChrome) {
      compatibilityParams.disableCreateObjectURL = true;
    }
  })();
  (function checkFontFaceAndImage() {
    if (isNodeJS()) {
      compatibilityParams.disableFontFace = true;
      compatibilityParams.nativeImageDecoderSupport = 'none';
    }
  })();
}
exports.apiCompatibilityParams = Object.freeze(compatibilityParams);

/***/ }),
/* 133 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CanvasGraphics = undefined;

var _util = __w_pdfjs_require__(1);

var _pattern_helper = __w_pdfjs_require__(134);

var MIN_FONT_SIZE = 16;
var MAX_FONT_SIZE = 100;
var MAX_GROUP_SIZE = 4096;
var MIN_WIDTH_FACTOR = 0.65;
var COMPILE_TYPE3_GLYPHS = true;
var MAX_SIZE_TO_COMPILE = 1000;
var FULL_CHUNK_HEIGHT = 16;
var IsLittleEndianCached = {
  get value() {
    return (0, _util.shadow)(IsLittleEndianCached, 'value', (0, _util.isLittleEndian)());
  }
};
function addContextCurrentTransform(ctx) {
  if (!ctx.mozCurrentTransform) {
    ctx._originalSave = ctx.save;
    ctx._originalRestore = ctx.restore;
    ctx._originalRotate = ctx.rotate;
    ctx._originalScale = ctx.scale;
    ctx._originalTranslate = ctx.translate;
    ctx._originalTransform = ctx.transform;
    ctx._originalSetTransform = ctx.setTransform;
    ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];
    ctx._transformStack = [];
    Object.defineProperty(ctx, 'mozCurrentTransform', {
      get: function getCurrentTransform() {
        return this._transformMatrix;
      }
    });
    Object.defineProperty(ctx, 'mozCurrentTransformInverse', {
      get: function getCurrentTransformInverse() {
        var m = this._transformMatrix;
        var a = m[0],
            b = m[1],
            c = m[2],
            d = m[3],
            e = m[4],
            f = m[5];
        var ad_bc = a * d - b * c;
        var bc_ad = b * c - a * d;
        return [d / ad_bc, b / bc_ad, c / bc_ad, a / ad_bc, (d * e - c * f) / bc_ad, (b * e - a * f) / ad_bc];
      }
    });
    ctx.save = function ctxSave() {
      var old = this._transformMatrix;
      this._transformStack.push(old);
      this._transformMatrix = old.slice(0, 6);
      this._originalSave();
    };
    ctx.restore = function ctxRestore() {
      var prev = this._transformStack.pop();
      if (prev) {
        this._transformMatrix = prev;
        this._originalRestore();
      }
    };
    ctx.translate = function ctxTranslate(x, y) {
      var m = this._transformMatrix;
      m[4] = m[0] * x + m[2] * y + m[4];
      m[5] = m[1] * x + m[3] * y + m[5];
      this._originalTranslate(x, y);
    };
    ctx.scale = function ctxScale(x, y) {
      var m = this._transformMatrix;
      m[0] = m[0] * x;
      m[1] = m[1] * x;
      m[2] = m[2] * y;
      m[3] = m[3] * y;
      this._originalScale(x, y);
    };
    ctx.transform = function ctxTransform(a, b, c, d, e, f) {
      var m = this._transformMatrix;
      this._transformMatrix = [m[0] * a + m[2] * b, m[1] * a + m[3] * b, m[0] * c + m[2] * d, m[1] * c + m[3] * d, m[0] * e + m[2] * f + m[4], m[1] * e + m[3] * f + m[5]];
      ctx._originalTransform(a, b, c, d, e, f);
    };
    ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {
      this._transformMatrix = [a, b, c, d, e, f];
      ctx._originalSetTransform(a, b, c, d, e, f);
    };
    ctx.rotate = function ctxRotate(angle) {
      var cosValue = Math.cos(angle);
      var sinValue = Math.sin(angle);
      var m = this._transformMatrix;
      this._transformMatrix = [m[0] * cosValue + m[2] * sinValue, m[1] * cosValue + m[3] * sinValue, m[0] * -sinValue + m[2] * cosValue, m[1] * -sinValue + m[3] * cosValue, m[4], m[5]];
      this._originalRotate(angle);
    };
  }
}
var CachedCanvases = function CachedCanvasesClosure() {
  function CachedCanvases(canvasFactory) {
    this.canvasFactory = canvasFactory;
    this.cache = Object.create(null);
  }
  CachedCanvases.prototype = {
    getCanvas: function CachedCanvases_getCanvas(id, width, height, trackTransform) {
      var canvasEntry;
      if (this.cache[id] !== undefined) {
        canvasEntry = this.cache[id];
        this.canvasFactory.reset(canvasEntry, width, height);
        canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);
      } else {
        canvasEntry = this.canvasFactory.create(width, height);
        this.cache[id] = canvasEntry;
      }
      if (trackTransform) {
        addContextCurrentTransform(canvasEntry.context);
      }
      return canvasEntry;
    },
    clear: function clear() {
      for (var id in this.cache) {
        var canvasEntry = this.cache[id];
        this.canvasFactory.destroy(canvasEntry);
        delete this.cache[id];
      }
    }
  };
  return CachedCanvases;
}();
function compileType3Glyph(imgData) {
  var POINT_TO_PROCESS_LIMIT = 1000;
  var width = imgData.width,
      height = imgData.height;
  var i,
      j,
      j0,
      width1 = width + 1;
  var points = new Uint8Array(width1 * (height + 1));
  var POINT_TYPES = new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);
  var lineSize = width + 7 & ~7,
      data0 = imgData.data;
  var data = new Uint8Array(lineSize * height),
      pos = 0,
      ii;
  for (i = 0, ii = data0.length; i < ii; i++) {
    var mask = 128,
        elem = data0[i];
    while (mask > 0) {
      data[pos++] = elem & mask ? 0 : 255;
      mask >>= 1;
    }
  }
  var count = 0;
  pos = 0;
  if (data[pos] !== 0) {
    points[0] = 1;
    ++count;
  }
  for (j = 1; j < width; j++) {
    if (data[pos] !== data[pos + 1]) {
      points[j] = data[pos] ? 2 : 1;
      ++count;
    }
    pos++;
  }
  if (data[pos] !== 0) {
    points[j] = 2;
    ++count;
  }
  for (i = 1; i < height; i++) {
    pos = i * lineSize;
    j0 = i * width1;
    if (data[pos - lineSize] !== data[pos]) {
      points[j0] = data[pos] ? 1 : 8;
      ++count;
    }
    var sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);
    for (j = 1; j < width; j++) {
      sum = (sum >> 2) + (data[pos + 1] ? 4 : 0) + (data[pos - lineSize + 1] ? 8 : 0);
      if (POINT_TYPES[sum]) {
        points[j0 + j] = POINT_TYPES[sum];
        ++count;
      }
      pos++;
    }
    if (data[pos - lineSize] !== data[pos]) {
      points[j0 + j] = data[pos] ? 2 : 4;
      ++count;
    }
    if (count > POINT_TO_PROCESS_LIMIT) {
      return null;
    }
  }
  pos = lineSize * (height - 1);
  j0 = i * width1;
  if (data[pos] !== 0) {
    points[j0] = 8;
    ++count;
  }
  for (j = 1; j < width; j++) {
    if (data[pos] !== data[pos + 1]) {
      points[j0 + j] = data[pos] ? 4 : 8;
      ++count;
    }
    pos++;
  }
  if (data[pos] !== 0) {
    points[j0 + j] = 4;
    ++count;
  }
  if (count > POINT_TO_PROCESS_LIMIT) {
    return null;
  }
  var steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);
  var outlines = [];
  for (i = 0; count && i <= height; i++) {
    var p = i * width1;
    var end = p + width;
    while (p < end && !points[p]) {
      p++;
    }
    if (p === end) {
      continue;
    }
    var coords = [p % width1, i];
    var type = points[p],
        p0 = p,
        pp;
    do {
      var step = steps[type];
      do {
        p += step;
      } while (!points[p]);
      pp = points[p];
      if (pp !== 5 && pp !== 10) {
        type = pp;
        points[p] = 0;
      } else {
        type = pp & 0x33 * type >> 4;
        points[p] &= type >> 2 | type << 2;
      }
      coords.push(p % width1);
      coords.push(p / width1 | 0);
      --count;
    } while (p0 !== p);
    outlines.push(coords);
    --i;
  }
  var drawOutline = function drawOutline(c) {
    c.save();
    c.scale(1 / width, -1 / height);
    c.translate(0, -height);
    c.beginPath();
    for (var i = 0, ii = outlines.length; i < ii; i++) {
      var o = outlines[i];
      c.moveTo(o[0], o[1]);
      for (var j = 2, jj = o.length; j < jj; j += 2) {
        c.lineTo(o[j], o[j + 1]);
      }
    }
    c.fill();
    c.beginPath();
    c.restore();
  };
  return drawOutline;
}
var CanvasExtraState = function CanvasExtraStateClosure() {
  function CanvasExtraState() {
    this.alphaIsShape = false;
    this.fontSize = 0;
    this.fontSizeScale = 1;
    this.textMatrix = _util.IDENTITY_MATRIX;
    this.textMatrixScale = 1;
    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;
    this.leading = 0;
    this.x = 0;
    this.y = 0;
    this.lineX = 0;
    this.lineY = 0;
    this.charSpacing = 0;
    this.wordSpacing = 0;
    this.textHScale = 1;
    this.textRenderingMode = _util.TextRenderingMode.FILL;
    this.textRise = 0;
    this.fillColor = '#000000';
    this.strokeColor = '#000000';
    this.patternFill = false;
    this.fillAlpha = 1;
    this.strokeAlpha = 1;
    this.lineWidth = 1;
    this.activeSMask = null;
    this.resumeSMaskCtx = null;
  }
  CanvasExtraState.prototype = {
    clone: function CanvasExtraState_clone() {
      return Object.create(this);
    },
    setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {
      this.x = x;
      this.y = y;
    }
  };
  return CanvasExtraState;
}();
var CanvasGraphics = function CanvasGraphicsClosure() {
  var EXECUTION_TIME = 15;
  var EXECUTION_STEPS = 10;
  function CanvasGraphics(canvasCtx, commonObjs, objs, canvasFactory, webGLContext, imageLayer) {
    this.ctx = canvasCtx;
    this.current = new CanvasExtraState();
    this.stateStack = [];
    this.pendingClip = null;
    this.pendingEOFill = false;
    this.res = null;
    this.xobjs = null;
    this.commonObjs = commonObjs;
    this.objs = objs;
    this.canvasFactory = canvasFactory;
    this.webGLContext = webGLContext;
    this.imageLayer = imageLayer;
    this.groupStack = [];
    this.processingType3 = null;
    this.baseTransform = null;
    this.baseTransformStack = [];
    this.groupLevel = 0;
    this.smaskStack = [];
    this.smaskCounter = 0;
    this.tempSMask = null;
    this.cachedCanvases = new CachedCanvases(this.canvasFactory);
    if (canvasCtx) {
      addContextCurrentTransform(canvasCtx);
    }
    this._cachedGetSinglePixelWidth = null;
  }
  function putBinaryImageData(ctx, imgData) {
    if (typeof ImageData !== 'undefined' && imgData instanceof ImageData) {
      ctx.putImageData(imgData, 0, 0);
      return;
    }
    var height = imgData.height,
        width = imgData.width;
    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;
    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;
    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;
    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);
    var srcPos = 0,
        destPos;
    var src = imgData.data;
    var dest = chunkImgData.data;
    var i, j, thisChunkHeight, elemsInThisChunk;
    if (imgData.kind === _util.ImageKind.GRAYSCALE_1BPP) {
      var srcLength = src.byteLength;
      var dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);
      var dest32DataLength = dest32.length;
      var fullSrcDiff = width + 7 >> 3;
      var white = 0xFFFFFFFF;
      var black = IsLittleEndianCached.value ? 0xFF000000 : 0x000000FF;
      for (i = 0; i < totalChunks; i++) {
        thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;
        destPos = 0;
        for (j = 0; j < thisChunkHeight; j++) {
          var srcDiff = srcLength - srcPos;
          var k = 0;
          var kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;
          var kEndUnrolled = kEnd & ~7;
          var mask = 0;
          var srcByte = 0;
          for (; k < kEndUnrolled; k += 8) {
            srcByte = src[srcPos++];
            dest32[destPos++] = srcByte & 128 ? white : black;
            dest32[destPos++] = srcByte & 64 ? white : black;
            dest32[destPos++] = srcByte & 32 ? white : black;
            dest32[destPos++] = srcByte & 16 ? white : black;
            dest32[destPos++] = srcByte & 8 ? white : black;
            dest32[destPos++] = srcByte & 4 ? white : black;
            dest32[destPos++] = srcByte & 2 ? white : black;
            dest32[destPos++] = srcByte & 1 ? white : black;
          }
          for (; k < kEnd; k++) {
            if (mask === 0) {
              srcByte = src[srcPos++];
              mask = 128;
            }
            dest32[destPos++] = srcByte & mask ? white : black;
            mask >>= 1;
          }
        }
        while (destPos < dest32DataLength) {
          dest32[destPos++] = 0;
        }
        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);
      }
    } else if (imgData.kind === _util.ImageKind.RGBA_32BPP) {
      j = 0;
      elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;
      for (i = 0; i < fullChunks; i++) {
        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));
        srcPos += elemsInThisChunk;
        ctx.putImageData(chunkImgData, 0, j);
        j += FULL_CHUNK_HEIGHT;
      }
      if (i < totalChunks) {
        elemsInThisChunk = width * partialChunkHeight * 4;
        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));
        ctx.putImageData(chunkImgData, 0, j);
      }
    } else if (imgData.kind === _util.ImageKind.RGB_24BPP) {
      thisChunkHeight = FULL_CHUNK_HEIGHT;
      elemsInThisChunk = width * thisChunkHeight;
      for (i = 0; i < totalChunks; i++) {
        if (i >= fullChunks) {
          thisChunkHeight = partialChunkHeight;
          elemsInThisChunk = width * thisChunkHeight;
        }
        destPos = 0;
        for (j = elemsInThisChunk; j--;) {
          dest[destPos++] = src[srcPos++];
          dest[destPos++] = src[srcPos++];
          dest[destPos++] = src[srcPos++];
          dest[destPos++] = 255;
        }
        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);
      }
    } else {
      throw new Error('bad image kind: ' + imgData.kind);
    }
  }
  function putBinaryImageMask(ctx, imgData) {
    var height = imgData.height,
        width = imgData.width;
    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;
    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;
    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;
    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);
    var srcPos = 0;
    var src = imgData.data;
    var dest = chunkImgData.data;
    for (var i = 0; i < totalChunks; i++) {
      var thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;
      var destPos = 3;
      for (var j = 0; j < thisChunkHeight; j++) {
        var mask = 0;
        for (var k = 0; k < width; k++) {
          if (!mask) {
            var elem = src[srcPos++];
            mask = 128;
          }
          dest[destPos] = elem & mask ? 0 : 255;
          destPos += 4;
          mask >>= 1;
        }
      }
      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);
    }
  }
  function copyCtxState(sourceCtx, destCtx) {
    var properties = ['strokeStyle', 'fillStyle', 'fillRule', 'globalAlpha', 'lineWidth', 'lineCap', 'lineJoin', 'miterLimit', 'globalCompositeOperation', 'font'];
    for (var i = 0, ii = properties.length; i < ii; i++) {
      var property = properties[i];
      if (sourceCtx[property] !== undefined) {
        destCtx[property] = sourceCtx[property];
      }
    }
    if (sourceCtx.setLineDash !== undefined) {
      destCtx.setLineDash(sourceCtx.getLineDash());
      destCtx.lineDashOffset = sourceCtx.lineDashOffset;
    }
  }
  function resetCtxToDefault(ctx) {
    ctx.strokeStyle = '#000000';
    ctx.fillStyle = '#000000';
    ctx.fillRule = 'nonzero';
    ctx.globalAlpha = 1;
    ctx.lineWidth = 1;
    ctx.lineCap = 'butt';
    ctx.lineJoin = 'miter';
    ctx.miterLimit = 10;
    ctx.globalCompositeOperation = 'source-over';
    ctx.font = '10px sans-serif';
    if (ctx.setLineDash !== undefined) {
      ctx.setLineDash([]);
      ctx.lineDashOffset = 0;
    }
  }
  function composeSMaskBackdrop(bytes, r0, g0, b0) {
    var length = bytes.length;
    for (var i = 3; i < length; i += 4) {
      var alpha = bytes[i];
      if (alpha === 0) {
        bytes[i - 3] = r0;
        bytes[i - 2] = g0;
        bytes[i - 1] = b0;
      } else if (alpha < 255) {
        var alpha_ = 255 - alpha;
        bytes[i - 3] = bytes[i - 3] * alpha + r0 * alpha_ >> 8;
        bytes[i - 2] = bytes[i - 2] * alpha + g0 * alpha_ >> 8;
        bytes[i - 1] = bytes[i - 1] * alpha + b0 * alpha_ >> 8;
      }
    }
  }
  function composeSMaskAlpha(maskData, layerData, transferMap) {
    var length = maskData.length;
    var scale = 1 / 255;
    for (var i = 3; i < length; i += 4) {
      var alpha = transferMap ? transferMap[maskData[i]] : maskData[i];
      layerData[i] = layerData[i] * alpha * scale | 0;
    }
  }
  function composeSMaskLuminosity(maskData, layerData, transferMap) {
    var length = maskData.length;
    for (var i = 3; i < length; i += 4) {
      var y = maskData[i - 3] * 77 + maskData[i - 2] * 152 + maskData[i - 1] * 28;
      layerData[i] = transferMap ? layerData[i] * transferMap[y >> 8] >> 8 : layerData[i] * y >> 16;
    }
  }
  function genericComposeSMask(maskCtx, layerCtx, width, height, subtype, backdrop, transferMap) {
    var hasBackdrop = !!backdrop;
    var r0 = hasBackdrop ? backdrop[0] : 0;
    var g0 = hasBackdrop ? backdrop[1] : 0;
    var b0 = hasBackdrop ? backdrop[2] : 0;
    var composeFn;
    if (subtype === 'Luminosity') {
      composeFn = composeSMaskLuminosity;
    } else {
      composeFn = composeSMaskAlpha;
    }
    var PIXELS_TO_PROCESS = 1048576;
    var chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));
    for (var row = 0; row < height; row += chunkSize) {
      var chunkHeight = Math.min(chunkSize, height - row);
      var maskData = maskCtx.getImageData(0, row, width, chunkHeight);
      var layerData = layerCtx.getImageData(0, row, width, chunkHeight);
      if (hasBackdrop) {
        composeSMaskBackdrop(maskData.data, r0, g0, b0);
      }
      composeFn(maskData.data, layerData.data, transferMap);
      maskCtx.putImageData(layerData, 0, row);
    }
  }
  function composeSMask(ctx, smask, layerCtx, webGLContext) {
    var mask = smask.canvas;
    var maskCtx = smask.context;
    ctx.setTransform(smask.scaleX, 0, 0, smask.scaleY, smask.offsetX, smask.offsetY);
    var backdrop = smask.backdrop || null;
    if (!smask.transferMap && webGLContext.isEnabled) {
      var composed = webGLContext.composeSMask({
        layer: layerCtx.canvas,
        mask: mask,
        properties: {
          subtype: smask.subtype,
          backdrop: backdrop
        }
      });
      ctx.setTransform(1, 0, 0, 1, 0, 0);
      ctx.drawImage(composed, smask.offsetX, smask.offsetY);
      return;
    }
    genericComposeSMask(maskCtx, layerCtx, mask.width, mask.height, smask.subtype, backdrop, smask.transferMap);
    ctx.drawImage(mask, 0, 0);
  }
  var LINE_CAP_STYLES = ['butt', 'round', 'square'];
  var LINE_JOIN_STYLES = ['miter', 'round', 'bevel'];
  var NORMAL_CLIP = {};
  var EO_CLIP = {};
  CanvasGraphics.prototype = {
    beginDrawing: function beginDrawing(_ref) {
      var transform = _ref.transform,
          viewport = _ref.viewport,
          transparency = _ref.transparency,
          _ref$background = _ref.background,
          background = _ref$background === undefined ? null : _ref$background;

      var width = this.ctx.canvas.width;
      var height = this.ctx.canvas.height;
      this.ctx.save();
      this.ctx.fillStyle = background || 'rgb(255, 255, 255)';
      this.ctx.fillRect(0, 0, width, height);
      this.ctx.restore();
      if (transparency) {
        var transparentCanvas = this.cachedCanvases.getCanvas('transparent', width, height, true);
        this.compositeCtx = this.ctx;
        this.transparentCanvas = transparentCanvas.canvas;
        this.ctx = transparentCanvas.context;
        this.ctx.save();
        this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);
      }
      this.ctx.save();
      resetCtxToDefault(this.ctx);
      if (transform) {
        this.ctx.transform.apply(this.ctx, transform);
      }
      this.ctx.transform.apply(this.ctx, viewport.transform);
      this.baseTransform = this.ctx.mozCurrentTransform.slice();
      if (this.imageLayer) {
        this.imageLayer.beginLayout();
      }
    },

    executeOperatorList: function CanvasGraphics_executeOperatorList(operatorList, executionStartIdx, continueCallback, stepper) {
      var argsArray = operatorList.argsArray;
      var fnArray = operatorList.fnArray;
      var i = executionStartIdx || 0;
      var argsArrayLen = argsArray.length;
      if (argsArrayLen === i) {
        return i;
      }
      var chunkOperations = argsArrayLen - i > EXECUTION_STEPS && typeof continueCallback === 'function';
      var endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;
      var steps = 0;
      var commonObjs = this.commonObjs;
      var objs = this.objs;
      var fnId;
      while (true) {
        if (stepper !== undefined && i === stepper.nextBreakPoint) {
          stepper.breakIt(i, continueCallback);
          return i;
        }
        fnId = fnArray[i];
        if (fnId !== _util.OPS.dependency) {
          this[fnId].apply(this, argsArray[i]);
        } else {
          var deps = argsArray[i];
          for (var n = 0, nn = deps.length; n < nn; n++) {
            var depObjId = deps[n];
            var common = depObjId[0] === 'g' && depObjId[1] === '_';
            var objsPool = common ? commonObjs : objs;
            if (!objsPool.isResolved(depObjId)) {
              objsPool.get(depObjId, continueCallback);
              return i;
            }
          }
        }
        i++;
        if (i === argsArrayLen) {
          return i;
        }
        if (chunkOperations && ++steps > EXECUTION_STEPS) {
          if (Date.now() > endTime) {
            continueCallback();
            return i;
          }
          steps = 0;
        }
      }
    },
    endDrawing: function CanvasGraphics_endDrawing() {
      if (this.current.activeSMask !== null) {
        this.endSMaskGroup();
      }
      this.ctx.restore();
      if (this.transparentCanvas) {
        this.ctx = this.compositeCtx;
        this.ctx.save();
        this.ctx.setTransform(1, 0, 0, 1, 0, 0);
        this.ctx.drawImage(this.transparentCanvas, 0, 0);
        this.ctx.restore();
        this.transparentCanvas = null;
      }
      this.cachedCanvases.clear();
      this.webGLContext.clear();
      if (this.imageLayer) {
        this.imageLayer.endLayout();
      }
    },
    setLineWidth: function CanvasGraphics_setLineWidth(width) {
      this.current.lineWidth = width;
      this.ctx.lineWidth = width;
    },
    setLineCap: function CanvasGraphics_setLineCap(style) {
      this.ctx.lineCap = LINE_CAP_STYLES[style];
    },
    setLineJoin: function CanvasGraphics_setLineJoin(style) {
      this.ctx.lineJoin = LINE_JOIN_STYLES[style];
    },
    setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {
      this.ctx.miterLimit = limit;
    },
    setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {
      var ctx = this.ctx;
      if (ctx.setLineDash !== undefined) {
        ctx.setLineDash(dashArray);
        ctx.lineDashOffset = dashPhase;
      }
    },
    setRenderingIntent: function CanvasGraphics_setRenderingIntent(intent) {},
    setFlatness: function CanvasGraphics_setFlatness(flatness) {},
    setGState: function CanvasGraphics_setGState(states) {
      for (var i = 0, ii = states.length; i < ii; i++) {
        var state = states[i];
        var key = state[0];
        var value = state[1];
        switch (key) {
          case 'LW':
            this.setLineWidth(value);
            break;
          case 'LC':
            this.setLineCap(value);
            break;
          case 'LJ':
            this.setLineJoin(value);
            break;
          case 'ML':
            this.setMiterLimit(value);
            break;
          case 'D':
            this.setDash(value[0], value[1]);
            break;
          case 'RI':
            this.setRenderingIntent(value);
            break;
          case 'FL':
            this.setFlatness(value);
            break;
          case 'Font':
            this.setFont(value[0], value[1]);
            break;
          case 'CA':
            this.current.strokeAlpha = state[1];
            break;
          case 'ca':
            this.current.fillAlpha = state[1];
            this.ctx.globalAlpha = state[1];
            break;
          case 'BM':
            this.ctx.globalCompositeOperation = value;
            break;
          case 'SMask':
            if (this.current.activeSMask) {
              if (this.stateStack.length > 0 && this.stateStack[this.stateStack.length - 1].activeSMask === this.current.activeSMask) {
                this.suspendSMaskGroup();
              } else {
                this.endSMaskGroup();
              }
            }
            this.current.activeSMask = value ? this.tempSMask : null;
            if (this.current.activeSMask) {
              this.beginSMaskGroup();
            }
            this.tempSMask = null;
            break;
        }
      }
    },
    beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {
      var activeSMask = this.current.activeSMask;
      var drawnWidth = activeSMask.canvas.width;
      var drawnHeight = activeSMask.canvas.height;
      var cacheId = 'smaskGroupAt' + this.groupLevel;
      var scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);
      var currentCtx = this.ctx;
      var currentTransform = currentCtx.mozCurrentTransform;
      this.ctx.save();
      var groupCtx = scratchCanvas.context;
      groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);
      groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);
      groupCtx.transform.apply(groupCtx, currentTransform);
      activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;
      copyCtxState(currentCtx, groupCtx);
      this.ctx = groupCtx;
      this.setGState([['BM', 'source-over'], ['ca', 1], ['CA', 1]]);
      this.groupStack.push(currentCtx);
      this.groupLevel++;
    },
    suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {
      var groupCtx = this.ctx;
      this.groupLevel--;
      this.ctx = this.groupStack.pop();
      composeSMask(this.ctx, this.current.activeSMask, groupCtx, this.webGLContext);
      this.ctx.restore();
      this.ctx.save();
      copyCtxState(groupCtx, this.ctx);
      this.current.resumeSMaskCtx = groupCtx;
      var deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);
      this.ctx.transform.apply(this.ctx, deltaTransform);
      groupCtx.save();
      groupCtx.setTransform(1, 0, 0, 1, 0, 0);
      groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);
      groupCtx.restore();
    },
    resumeSMaskGroup: function CanvasGraphics_endSMaskGroup() {
      var groupCtx = this.current.resumeSMaskCtx;
      var currentCtx = this.ctx;
      this.ctx = groupCtx;
      this.groupStack.push(currentCtx);
      this.groupLevel++;
    },
    endSMaskGroup: function CanvasGraphics_endSMaskGroup() {
      var groupCtx = this.ctx;
      this.groupLevel--;
      this.ctx = this.groupStack.pop();
      composeSMask(this.ctx, this.current.activeSMask, groupCtx, this.webGLContext);
      this.ctx.restore();
      copyCtxState(groupCtx, this.ctx);
      var deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);
      this.ctx.transform.apply(this.ctx, deltaTransform);
    },
    save: function CanvasGraphics_save() {
      this.ctx.save();
      var old = this.current;
      this.stateStack.push(old);
      this.current = old.clone();
      this.current.resumeSMaskCtx = null;
    },
    restore: function CanvasGraphics_restore() {
      if (this.current.resumeSMaskCtx) {
        this.resumeSMaskGroup();
      }
      if (this.current.activeSMask !== null && (this.stateStack.length === 0 || this.stateStack[this.stateStack.length - 1].activeSMask !== this.current.activeSMask)) {
        this.endSMaskGroup();
      }
      if (this.stateStack.length !== 0) {
        this.current = this.stateStack.pop();
        this.ctx.restore();
        this.pendingClip = null;
        this._cachedGetSinglePixelWidth = null;
      }
    },
    transform: function CanvasGraphics_transform(a, b, c, d, e, f) {
      this.ctx.transform(a, b, c, d, e, f);
      this._cachedGetSinglePixelWidth = null;
    },
    constructPath: function CanvasGraphics_constructPath(ops, args) {
      var ctx = this.ctx;
      var current = this.current;
      var x = current.x,
          y = current.y;
      for (var i = 0, j = 0, ii = ops.length; i < ii; i++) {
        switch (ops[i] | 0) {
          case _util.OPS.rectangle:
            x = args[j++];
            y = args[j++];
            var width = args[j++];
            var height = args[j++];
            if (width === 0) {
              width = this.getSinglePixelWidth();
            }
            if (height === 0) {
              height = this.getSinglePixelWidth();
            }
            var xw = x + width;
            var yh = y + height;
            this.ctx.moveTo(x, y);
            this.ctx.lineTo(xw, y);
            this.ctx.lineTo(xw, yh);
            this.ctx.lineTo(x, yh);
            this.ctx.lineTo(x, y);
            this.ctx.closePath();
            break;
          case _util.OPS.moveTo:
            x = args[j++];
            y = args[j++];
            ctx.moveTo(x, y);
            break;
          case _util.OPS.lineTo:
            x = args[j++];
            y = args[j++];
            ctx.lineTo(x, y);
            break;
          case _util.OPS.curveTo:
            x = args[j + 4];
            y = args[j + 5];
            ctx.bezierCurveTo(args[j], args[j + 1], args[j + 2], args[j + 3], x, y);
            j += 6;
            break;
          case _util.OPS.curveTo2:
            ctx.bezierCurveTo(x, y, args[j], args[j + 1], args[j + 2], args[j + 3]);
            x = args[j + 2];
            y = args[j + 3];
            j += 4;
            break;
          case _util.OPS.curveTo3:
            x = args[j + 2];
            y = args[j + 3];
            ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);
            j += 4;
            break;
          case _util.OPS.closePath:
            ctx.closePath();
            break;
        }
      }
      current.setCurrentPoint(x, y);
    },
    closePath: function CanvasGraphics_closePath() {
      this.ctx.closePath();
    },
    stroke: function CanvasGraphics_stroke(consumePath) {
      consumePath = typeof consumePath !== 'undefined' ? consumePath : true;
      var ctx = this.ctx;
      var strokeColor = this.current.strokeColor;
      ctx.lineWidth = Math.max(this.getSinglePixelWidth() * MIN_WIDTH_FACTOR, this.current.lineWidth);
      ctx.globalAlpha = this.current.strokeAlpha;
      if (strokeColor && strokeColor.hasOwnProperty('type') && strokeColor.type === 'Pattern') {
        ctx.save();
        ctx.strokeStyle = strokeColor.getPattern(ctx, this);
        ctx.stroke();
        ctx.restore();
      } else {
        ctx.stroke();
      }
      if (consumePath) {
        this.consumePath();
      }
      ctx.globalAlpha = this.current.fillAlpha;
    },
    closeStroke: function CanvasGraphics_closeStroke() {
      this.closePath();
      this.stroke();
    },
    fill: function CanvasGraphics_fill(consumePath) {
      consumePath = typeof consumePath !== 'undefined' ? consumePath : true;
      var ctx = this.ctx;
      var fillColor = this.current.fillColor;
      var isPatternFill = this.current.patternFill;
      var needRestore = false;
      if (isPatternFill) {
        ctx.save();
        if (this.baseTransform) {
          ctx.setTransform.apply(ctx, this.baseTransform);
        }
        ctx.fillStyle = fillColor.getPattern(ctx, this);
        needRestore = true;
      }
      if (this.pendingEOFill) {
        ctx.fill('evenodd');
        this.pendingEOFill = false;
      } else {
        ctx.fill();
      }
      if (needRestore) {
        ctx.restore();
      }
      if (consumePath) {
        this.consumePath();
      }
    },
    eoFill: function CanvasGraphics_eoFill() {
      this.pendingEOFill = true;
      this.fill();
    },
    fillStroke: function CanvasGraphics_fillStroke() {
      this.fill(false);
      this.stroke(false);
      this.consumePath();
    },
    eoFillStroke: function CanvasGraphics_eoFillStroke() {
      this.pendingEOFill = true;
      this.fillStroke();
    },
    closeFillStroke: function CanvasGraphics_closeFillStroke() {
      this.closePath();
      this.fillStroke();
    },
    closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {
      this.pendingEOFill = true;
      this.closePath();
      this.fillStroke();
    },
    endPath: function CanvasGraphics_endPath() {
      this.consumePath();
    },
    clip: function CanvasGraphics_clip() {
      this.pendingClip = NORMAL_CLIP;
    },
    eoClip: function CanvasGraphics_eoClip() {
      this.pendingClip = EO_CLIP;
    },
    beginText: function CanvasGraphics_beginText() {
      this.current.textMatrix = _util.IDENTITY_MATRIX;
      this.current.textMatrixScale = 1;
      this.current.x = this.current.lineX = 0;
      this.current.y = this.current.lineY = 0;
    },
    endText: function CanvasGraphics_endText() {
      var paths = this.pendingTextPaths;
      var ctx = this.ctx;
      if (paths === undefined) {
        ctx.beginPath();
        return;
      }
      ctx.save();
      ctx.beginPath();
      for (var i = 0; i < paths.length; i++) {
        var path = paths[i];
        ctx.setTransform.apply(ctx, path.transform);
        ctx.translate(path.x, path.y);
        path.addToPath(ctx, path.fontSize);
      }
      ctx.restore();
      ctx.clip();
      ctx.beginPath();
      delete this.pendingTextPaths;
    },
    setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {
      this.current.charSpacing = spacing;
    },
    setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {
      this.current.wordSpacing = spacing;
    },
    setHScale: function CanvasGraphics_setHScale(scale) {
      this.current.textHScale = scale / 100;
    },
    setLeading: function CanvasGraphics_setLeading(leading) {
      this.current.leading = -leading;
    },
    setFont: function CanvasGraphics_setFont(fontRefName, size) {
      var fontObj = this.commonObjs.get(fontRefName);
      var current = this.current;
      if (!fontObj) {
        throw new Error('Can\'t find font for ' + fontRefName);
      }
      current.fontMatrix = fontObj.fontMatrix ? fontObj.fontMatrix : _util.FONT_IDENTITY_MATRIX;
      if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {
        (0, _util.warn)('Invalid font matrix for font ' + fontRefName);
      }
      if (size < 0) {
        size = -size;
        current.fontDirection = -1;
      } else {
        current.fontDirection = 1;
      }
      this.current.font = fontObj;
      this.current.fontSize = size;
      if (fontObj.isType3Font) {
        return;
      }
      var name = fontObj.loadedName || 'sans-serif';
      var bold = fontObj.black ? '900' : fontObj.bold ? 'bold' : 'normal';
      var italic = fontObj.italic ? 'italic' : 'normal';
      var typeface = '"' + name + '", ' + fontObj.fallbackName;
      var browserFontSize = size < MIN_FONT_SIZE ? MIN_FONT_SIZE : size > MAX_FONT_SIZE ? MAX_FONT_SIZE : size;
      this.current.fontSizeScale = size / browserFontSize;
      var rule = italic + ' ' + bold + ' ' + browserFontSize + 'px ' + typeface;
      this.ctx.font = rule;
    },
    setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {
      this.current.textRenderingMode = mode;
    },
    setTextRise: function CanvasGraphics_setTextRise(rise) {
      this.current.textRise = rise;
    },
    moveText: function CanvasGraphics_moveText(x, y) {
      this.current.x = this.current.lineX += x;
      this.current.y = this.current.lineY += y;
    },
    setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {
      this.setLeading(-y);
      this.moveText(x, y);
    },
    setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {
      this.current.textMatrix = [a, b, c, d, e, f];
      this.current.textMatrixScale = Math.sqrt(a * a + b * b);
      this.current.x = this.current.lineX = 0;
      this.current.y = this.current.lineY = 0;
    },
    nextLine: function CanvasGraphics_nextLine() {
      this.moveText(0, this.current.leading);
    },
    paintChar: function paintChar(character, x, y, patternTransform) {
      var ctx = this.ctx;
      var current = this.current;
      var font = current.font;
      var textRenderingMode = current.textRenderingMode;
      var fontSize = current.fontSize / current.fontSizeScale;
      var fillStrokeMode = textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;
      var isAddToPathSet = !!(textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);
      var patternFill = current.patternFill && font.data;
      var addToPath;
      if (font.disableFontFace || isAddToPathSet || patternFill) {
        addToPath = font.getPathGenerator(this.commonObjs, character);
      }
      if (font.disableFontFace || patternFill) {
        ctx.save();
        ctx.translate(x, y);
        ctx.beginPath();
        addToPath(ctx, fontSize);
        if (patternTransform) {
          ctx.setTransform.apply(ctx, patternTransform);
        }
        if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {
          ctx.fill();
        }
        if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {
          ctx.stroke();
        }
        ctx.restore();
      } else {
        if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {
          ctx.fillText(character, x, y);
        }
        if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {
          ctx.strokeText(character, x, y);
        }
      }
      if (isAddToPathSet) {
        var paths = this.pendingTextPaths || (this.pendingTextPaths = []);
        paths.push({
          transform: ctx.mozCurrentTransform,
          x: x,
          y: y,
          fontSize: fontSize,
          addToPath: addToPath
        });
      }
    },

    get isFontSubpixelAAEnabled() {
      var ctx = this.canvasFactory.create(10, 10).context;
      ctx.scale(1.5, 1);
      ctx.fillText('I', 0, 10);
      var data = ctx.getImageData(0, 0, 10, 10).data;
      var enabled = false;
      for (var i = 3; i < data.length; i += 4) {
        if (data[i] > 0 && data[i] < 255) {
          enabled = true;
          break;
        }
      }
      return (0, _util.shadow)(this, 'isFontSubpixelAAEnabled', enabled);
    },
    showText: function CanvasGraphics_showText(glyphs) {
      var current = this.current;
      var font = current.font;
      if (font.isType3Font) {
        return this.showType3Text(glyphs);
      }
      var fontSize = current.fontSize;
      if (fontSize === 0) {
        return;
      }
      var ctx = this.ctx;
      var fontSizeScale = current.fontSizeScale;
      var charSpacing = current.charSpacing;
      var wordSpacing = current.wordSpacing;
      var fontDirection = current.fontDirection;
      var textHScale = current.textHScale * fontDirection;
      var glyphsLength = glyphs.length;
      var vertical = font.vertical;
      var spacingDir = vertical ? 1 : -1;
      var defaultVMetrics = font.defaultVMetrics;
      var widthAdvanceScale = fontSize * current.fontMatrix[0];
      var simpleFillText = current.textRenderingMode === _util.TextRenderingMode.FILL && !font.disableFontFace && !current.patternFill;
      ctx.save();
      var patternTransform = void 0;
      if (current.patternFill) {
        ctx.save();
        var pattern = current.fillColor.getPattern(ctx, this);
        patternTransform = ctx.mozCurrentTransform;
        ctx.restore();
        ctx.fillStyle = pattern;
      }
      ctx.transform.apply(ctx, current.textMatrix);
      ctx.translate(current.x, current.y + current.textRise);
      if (fontDirection > 0) {
        ctx.scale(textHScale, -1);
      } else {
        ctx.scale(textHScale, 1);
      }
      var lineWidth = current.lineWidth;
      var scale = current.textMatrixScale;
      if (scale === 0 || lineWidth === 0) {
        var fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;
        if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {
          this._cachedGetSinglePixelWidth = null;
          lineWidth = this.getSinglePixelWidth() * MIN_WIDTH_FACTOR;
        }
      } else {
        lineWidth /= scale;
      }
      if (fontSizeScale !== 1.0) {
        ctx.scale(fontSizeScale, fontSizeScale);
        lineWidth /= fontSizeScale;
      }
      ctx.lineWidth = lineWidth;
      var x = 0,
          i;
      for (i = 0; i < glyphsLength; ++i) {
        var glyph = glyphs[i];
        if ((0, _util.isNum)(glyph)) {
          x += spacingDir * glyph * fontSize / 1000;
          continue;
        }
        var restoreNeeded = false;
        var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;
        var character = glyph.fontChar;
        var accent = glyph.accent;
        var scaledX, scaledY, scaledAccentX, scaledAccentY;
        var width = glyph.width;
        if (vertical) {
          var vmetric, vx, vy;
          vmetric = glyph.vmetric || defaultVMetrics;
          vx = glyph.vmetric ? vmetric[1] : width * 0.5;
          vx = -vx * widthAdvanceScale;
          vy = vmetric[2] * widthAdvanceScale;
          width = vmetric ? -vmetric[0] : width;
          scaledX = vx / fontSizeScale;
          scaledY = (x + vy) / fontSizeScale;
        } else {
          scaledX = x / fontSizeScale;
          scaledY = 0;
        }
        if (font.remeasure && width > 0) {
          var measuredWidth = ctx.measureText(character).width * 1000 / fontSize * fontSizeScale;
          if (width < measuredWidth && this.isFontSubpixelAAEnabled) {
            var characterScaleX = width / measuredWidth;
            restoreNeeded = true;
            ctx.save();
            ctx.scale(characterScaleX, 1);
            scaledX /= characterScaleX;
          } else if (width !== measuredWidth) {
            scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale;
          }
        }
        if (glyph.isInFont || font.missingFile) {
          if (simpleFillText && !accent) {
            ctx.fillText(character, scaledX, scaledY);
          } else {
            this.paintChar(character, scaledX, scaledY, patternTransform);
            if (accent) {
              scaledAccentX = scaledX + accent.offset.x / fontSizeScale;
              scaledAccentY = scaledY - accent.offset.y / fontSizeScale;
              this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY, patternTransform);
            }
          }
        }
        var charWidth = width * widthAdvanceScale + spacing * fontDirection;
        x += charWidth;
        if (restoreNeeded) {
          ctx.restore();
        }
      }
      if (vertical) {
        current.y -= x * textHScale;
      } else {
        current.x += x * textHScale;
      }
      ctx.restore();
    },
    showType3Text: function CanvasGraphics_showType3Text(glyphs) {
      var ctx = this.ctx;
      var current = this.current;
      var font = current.font;
      var fontSize = current.fontSize;
      var fontDirection = current.fontDirection;
      var spacingDir = font.vertical ? 1 : -1;
      var charSpacing = current.charSpacing;
      var wordSpacing = current.wordSpacing;
      var textHScale = current.textHScale * fontDirection;
      var fontMatrix = current.fontMatrix || _util.FONT_IDENTITY_MATRIX;
      var glyphsLength = glyphs.length;
      var isTextInvisible = current.textRenderingMode === _util.TextRenderingMode.INVISIBLE;
      var i, glyph, width, spacingLength;
      if (isTextInvisible || fontSize === 0) {
        return;
      }
      this._cachedGetSinglePixelWidth = null;
      ctx.save();
      ctx.transform.apply(ctx, current.textMatrix);
      ctx.translate(current.x, current.y);
      ctx.scale(textHScale, fontDirection);
      for (i = 0; i < glyphsLength; ++i) {
        glyph = glyphs[i];
        if ((0, _util.isNum)(glyph)) {
          spacingLength = spacingDir * glyph * fontSize / 1000;
          this.ctx.translate(spacingLength, 0);
          current.x += spacingLength * textHScale;
          continue;
        }
        var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;
        var operatorList = font.charProcOperatorList[glyph.operatorListId];
        if (!operatorList) {
          (0, _util.warn)('Type3 character "' + glyph.operatorListId + '" is not available.');
          continue;
        }
        this.processingType3 = glyph;
        this.save();
        ctx.scale(fontSize, fontSize);
        ctx.transform.apply(ctx, fontMatrix);
        this.executeOperatorList(operatorList);
        this.restore();
        var transformed = _util.Util.applyTransform([glyph.width, 0], fontMatrix);
        width = transformed[0] * fontSize + spacing;
        ctx.translate(width, 0);
        current.x += width * textHScale;
      }
      ctx.restore();
      this.processingType3 = null;
    },
    setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {},
    setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {
      this.ctx.rect(llx, lly, urx - llx, ury - lly);
      this.clip();
      this.endPath();
    },
    getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {
      var _this = this;

      var pattern;
      if (IR[0] === 'TilingPattern') {
        var color = IR[1];
        var baseTransform = this.baseTransform || this.ctx.mozCurrentTransform.slice();
        var canvasGraphicsFactory = {
          createCanvasGraphics: function createCanvasGraphics(ctx) {
            return new CanvasGraphics(ctx, _this.commonObjs, _this.objs, _this.canvasFactory, _this.webGLContext);
          }
        };
        pattern = new _pattern_helper.TilingPattern(IR, color, this.ctx, canvasGraphicsFactory, baseTransform);
      } else {
        pattern = (0, _pattern_helper.getShadingPatternFromIR)(IR);
      }
      return pattern;
    },
    setStrokeColorN: function CanvasGraphics_setStrokeColorN() {
      this.current.strokeColor = this.getColorN_Pattern(arguments);
    },
    setFillColorN: function CanvasGraphics_setFillColorN() {
      this.current.fillColor = this.getColorN_Pattern(arguments);
      this.current.patternFill = true;
    },
    setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {
      var color = _util.Util.makeCssRgb(r, g, b);
      this.ctx.strokeStyle = color;
      this.current.strokeColor = color;
    },
    setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {
      var color = _util.Util.makeCssRgb(r, g, b);
      this.ctx.fillStyle = color;
      this.current.fillColor = color;
      this.current.patternFill = false;
    },
    shadingFill: function CanvasGraphics_shadingFill(patternIR) {
      var ctx = this.ctx;
      this.save();
      var pattern = (0, _pattern_helper.getShadingPatternFromIR)(patternIR);
      ctx.fillStyle = pattern.getPattern(ctx, this, true);
      var inv = ctx.mozCurrentTransformInverse;
      if (inv) {
        var canvas = ctx.canvas;
        var width = canvas.width;
        var height = canvas.height;
        var bl = _util.Util.applyTransform([0, 0], inv);
        var br = _util.Util.applyTransform([0, height], inv);
        var ul = _util.Util.applyTransform([width, 0], inv);
        var ur = _util.Util.applyTransform([width, height], inv);
        var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);
        var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);
        var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);
        var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);
        this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);
      } else {
        this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);
      }
      this.restore();
    },
    beginInlineImage: function CanvasGraphics_beginInlineImage() {
      (0, _util.unreachable)('Should not call beginInlineImage');
    },
    beginImageData: function CanvasGraphics_beginImageData() {
      (0, _util.unreachable)('Should not call beginImageData');
    },
    paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(matrix, bbox) {
      this.save();
      this.baseTransformStack.push(this.baseTransform);
      if (Array.isArray(matrix) && matrix.length === 6) {
        this.transform.apply(this, matrix);
      }
      this.baseTransform = this.ctx.mozCurrentTransform;
      if (Array.isArray(bbox) && bbox.length === 4) {
        var width = bbox[2] - bbox[0];
        var height = bbox[3] - bbox[1];
        this.ctx.rect(bbox[0], bbox[1], width, height);
        this.clip();
        this.endPath();
      }
    },
    paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {
      this.restore();
      this.baseTransform = this.baseTransformStack.pop();
    },
    beginGroup: function CanvasGraphics_beginGroup(group) {
      this.save();
      var currentCtx = this.ctx;
      if (!group.isolated) {
        (0, _util.info)('TODO: Support non-isolated groups.');
      }
      if (group.knockout) {
        (0, _util.warn)('Knockout groups not supported.');
      }
      var currentTransform = currentCtx.mozCurrentTransform;
      if (group.matrix) {
        currentCtx.transform.apply(currentCtx, group.matrix);
      }
      if (!group.bbox) {
        throw new Error('Bounding box is required.');
      }
      var bounds = _util.Util.getAxialAlignedBoundingBox(group.bbox, currentCtx.mozCurrentTransform);
      var canvasBounds = [0, 0, currentCtx.canvas.width, currentCtx.canvas.height];
      bounds = _util.Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];
      var offsetX = Math.floor(bounds[0]);
      var offsetY = Math.floor(bounds[1]);
      var drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);
      var drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);
      var scaleX = 1,
          scaleY = 1;
      if (drawnWidth > MAX_GROUP_SIZE) {
        scaleX = drawnWidth / MAX_GROUP_SIZE;
        drawnWidth = MAX_GROUP_SIZE;
      }
      if (drawnHeight > MAX_GROUP_SIZE) {
        scaleY = drawnHeight / MAX_GROUP_SIZE;
        drawnHeight = MAX_GROUP_SIZE;
      }
      var cacheId = 'groupAt' + this.groupLevel;
      if (group.smask) {
        cacheId += '_smask_' + this.smaskCounter++ % 2;
      }
      var scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);
      var groupCtx = scratchCanvas.context;
      groupCtx.scale(1 / scaleX, 1 / scaleY);
      groupCtx.translate(-offsetX, -offsetY);
      groupCtx.transform.apply(groupCtx, currentTransform);
      if (group.smask) {
        this.smaskStack.push({
          canvas: scratchCanvas.canvas,
          context: groupCtx,
          offsetX: offsetX,
          offsetY: offsetY,
          scaleX: scaleX,
          scaleY: scaleY,
          subtype: group.smask.subtype,
          backdrop: group.smask.backdrop,
          transferMap: group.smask.transferMap || null,
          startTransformInverse: null
        });
      } else {
        currentCtx.setTransform(1, 0, 0, 1, 0, 0);
        currentCtx.translate(offsetX, offsetY);
        currentCtx.scale(scaleX, scaleY);
      }
      copyCtxState(currentCtx, groupCtx);
      this.ctx = groupCtx;
      this.setGState([['BM', 'source-over'], ['ca', 1], ['CA', 1]]);
      this.groupStack.push(currentCtx);
      this.groupLevel++;
      this.current.activeSMask = null;
    },
    endGroup: function CanvasGraphics_endGroup(group) {
      this.groupLevel--;
      var groupCtx = this.ctx;
      this.ctx = this.groupStack.pop();
      if (this.ctx.imageSmoothingEnabled !== undefined) {
        this.ctx.imageSmoothingEnabled = false;
      } else {
        this.ctx.mozImageSmoothingEnabled = false;
      }
      if (group.smask) {
        this.tempSMask = this.smaskStack.pop();
      } else {
        this.ctx.drawImage(groupCtx.canvas, 0, 0);
      }
      this.restore();
    },
    beginAnnotations: function CanvasGraphics_beginAnnotations() {
      this.save();
      if (this.baseTransform) {
        this.ctx.setTransform.apply(this.ctx, this.baseTransform);
      }
    },
    endAnnotations: function CanvasGraphics_endAnnotations() {
      this.restore();
    },
    beginAnnotation: function CanvasGraphics_beginAnnotation(rect, transform, matrix) {
      this.save();
      resetCtxToDefault(this.ctx);
      this.current = new CanvasExtraState();
      if (Array.isArray(rect) && rect.length === 4) {
        var width = rect[2] - rect[0];
        var height = rect[3] - rect[1];
        this.ctx.rect(rect[0], rect[1], width, height);
        this.clip();
        this.endPath();
      }
      this.transform.apply(this, transform);
      this.transform.apply(this, matrix);
    },
    endAnnotation: function CanvasGraphics_endAnnotation() {
      this.restore();
    },
    paintJpegXObject: function CanvasGraphics_paintJpegXObject(objId, w, h) {
      var domImage = this.objs.get(objId);
      if (!domImage) {
        (0, _util.warn)('Dependent image isn\'t ready yet');
        return;
      }
      this.save();
      var ctx = this.ctx;
      ctx.scale(1 / w, -1 / h);
      ctx.drawImage(domImage, 0, 0, domImage.width, domImage.height, 0, -h, w, h);
      if (this.imageLayer) {
        var currentTransform = ctx.mozCurrentTransformInverse;
        var position = this.getCanvasPosition(0, 0);
        this.imageLayer.appendImage({
          objId: objId,
          left: position[0],
          top: position[1],
          width: w / currentTransform[0],
          height: h / currentTransform[3]
        });
      }
      this.restore();
    },
    paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {
      var ctx = this.ctx;
      var width = img.width,
          height = img.height;
      var fillColor = this.current.fillColor;
      var isPatternFill = this.current.patternFill;
      var glyph = this.processingType3;
      if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {
        if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {
          glyph.compiled = compileType3Glyph({
            data: img.data,
            width: width,
            height: height
          });
        } else {
          glyph.compiled = null;
        }
      }
      if (glyph && glyph.compiled) {
        glyph.compiled(ctx);
        return;
      }
      var maskCanvas = this.cachedCanvases.getCanvas('maskCanvas', width, height);
      var maskCtx = maskCanvas.context;
      maskCtx.save();
      putBinaryImageMask(maskCtx, img);
      maskCtx.globalCompositeOperation = 'source-in';
      maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;
      maskCtx.fillRect(0, 0, width, height);
      maskCtx.restore();
      this.paintInlineImageXObject(maskCanvas.canvas);
    },
    paintImageMaskXObjectRepeat: function CanvasGraphics_paintImageMaskXObjectRepeat(imgData, scaleX, scaleY, positions) {
      var width = imgData.width;
      var height = imgData.height;
      var fillColor = this.current.fillColor;
      var isPatternFill = this.current.patternFill;
      var maskCanvas = this.cachedCanvases.getCanvas('maskCanvas', width, height);
      var maskCtx = maskCanvas.context;
      maskCtx.save();
      putBinaryImageMask(maskCtx, imgData);
      maskCtx.globalCompositeOperation = 'source-in';
      maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;
      maskCtx.fillRect(0, 0, width, height);
      maskCtx.restore();
      var ctx = this.ctx;
      for (var i = 0, ii = positions.length; i < ii; i += 2) {
        ctx.save();
        ctx.transform(scaleX, 0, 0, scaleY, positions[i], positions[i + 1]);
        ctx.scale(1, -1);
        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);
        ctx.restore();
      }
    },
    paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(images) {
      var ctx = this.ctx;
      var fillColor = this.current.fillColor;
      var isPatternFill = this.current.patternFill;
      for (var i = 0, ii = images.length; i < ii; i++) {
        var image = images[i];
        var width = image.width,
            height = image.height;
        var maskCanvas = this.cachedCanvases.getCanvas('maskCanvas', width, height);
        var maskCtx = maskCanvas.context;
        maskCtx.save();
        putBinaryImageMask(maskCtx, image);
        maskCtx.globalCompositeOperation = 'source-in';
        maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;
        maskCtx.fillRect(0, 0, width, height);
        maskCtx.restore();
        ctx.save();
        ctx.transform.apply(ctx, image.transform);
        ctx.scale(1, -1);
        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);
        ctx.restore();
      }
    },
    paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {
      var imgData = this.objs.get(objId);
      if (!imgData) {
        (0, _util.warn)('Dependent image isn\'t ready yet');
        return;
      }
      this.paintInlineImageXObject(imgData);
    },
    paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {
      var imgData = this.objs.get(objId);
      if (!imgData) {
        (0, _util.warn)('Dependent image isn\'t ready yet');
        return;
      }
      var width = imgData.width;
      var height = imgData.height;
      var map = [];
      for (var i = 0, ii = positions.length; i < ii; i += 2) {
        map.push({
          transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],
          x: 0,
          y: 0,
          w: width,
          h: height
        });
      }
      this.paintInlineImageXObjectGroup(imgData, map);
    },
    paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(imgData) {
      var width = imgData.width;
      var height = imgData.height;
      var ctx = this.ctx;
      this.save();
      ctx.scale(1 / width, -1 / height);
      var currentTransform = ctx.mozCurrentTransformInverse;
      var a = currentTransform[0],
          b = currentTransform[1];
      var widthScale = Math.max(Math.sqrt(a * a + b * b), 1);
      var c = currentTransform[2],
          d = currentTransform[3];
      var heightScale = Math.max(Math.sqrt(c * c + d * d), 1);
      var imgToPaint, tmpCanvas;
      if (typeof HTMLElement === 'function' && imgData instanceof HTMLElement || !imgData.data) {
        imgToPaint = imgData;
      } else {
        tmpCanvas = this.cachedCanvases.getCanvas('inlineImage', width, height);
        var tmpCtx = tmpCanvas.context;
        putBinaryImageData(tmpCtx, imgData);
        imgToPaint = tmpCanvas.canvas;
      }
      var paintWidth = width,
          paintHeight = height;
      var tmpCanvasId = 'prescale1';
      while (widthScale > 2 && paintWidth > 1 || heightScale > 2 && paintHeight > 1) {
        var newWidth = paintWidth,
            newHeight = paintHeight;
        if (widthScale > 2 && paintWidth > 1) {
          newWidth = Math.ceil(paintWidth / 2);
          widthScale /= paintWidth / newWidth;
        }
        if (heightScale > 2 && paintHeight > 1) {
          newHeight = Math.ceil(paintHeight / 2);
          heightScale /= paintHeight / newHeight;
        }
        tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight);
        tmpCtx = tmpCanvas.context;
        tmpCtx.clearRect(0, 0, newWidth, newHeight);
        tmpCtx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight);
        imgToPaint = tmpCanvas.canvas;
        paintWidth = newWidth;
        paintHeight = newHeight;
        tmpCanvasId = tmpCanvasId === 'prescale1' ? 'prescale2' : 'prescale1';
      }
      ctx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, -height, width, height);
      if (this.imageLayer) {
        var position = this.getCanvasPosition(0, -height);
        this.imageLayer.appendImage({
          imgData: imgData,
          left: position[0],
          top: position[1],
          width: width / currentTransform[0],
          height: height / currentTransform[3]
        });
      }
      this.restore();
    },
    paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(imgData, map) {
      var ctx = this.ctx;
      var w = imgData.width;
      var h = imgData.height;
      var tmpCanvas = this.cachedCanvases.getCanvas('inlineImage', w, h);
      var tmpCtx = tmpCanvas.context;
      putBinaryImageData(tmpCtx, imgData);
      for (var i = 0, ii = map.length; i < ii; i++) {
        var entry = map[i];
        ctx.save();
        ctx.transform.apply(ctx, entry.transform);
        ctx.scale(1, -1);
        ctx.drawImage(tmpCanvas.canvas, entry.x, entry.y, entry.w, entry.h, 0, -1, 1, 1);
        if (this.imageLayer) {
          var position = this.getCanvasPosition(entry.x, entry.y);
          this.imageLayer.appendImage({
            imgData: imgData,
            left: position[0],
            top: position[1],
            width: w,
            height: h
          });
        }
        ctx.restore();
      }
    },
    paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {
      this.ctx.fillRect(0, 0, 1, 1);
    },
    paintXObject: function CanvasGraphics_paintXObject() {
      (0, _util.warn)('Unsupported \'paintXObject\' command.');
    },
    markPoint: function CanvasGraphics_markPoint(tag) {},
    markPointProps: function CanvasGraphics_markPointProps(tag, properties) {},
    beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {},
    beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(tag, properties) {},
    endMarkedContent: function CanvasGraphics_endMarkedContent() {},
    beginCompat: function CanvasGraphics_beginCompat() {},
    endCompat: function CanvasGraphics_endCompat() {},
    consumePath: function CanvasGraphics_consumePath() {
      var ctx = this.ctx;
      if (this.pendingClip) {
        if (this.pendingClip === EO_CLIP) {
          ctx.clip('evenodd');
        } else {
          ctx.clip();
        }
        this.pendingClip = null;
      }
      ctx.beginPath();
    },
    getSinglePixelWidth: function getSinglePixelWidth(scale) {
      if (this._cachedGetSinglePixelWidth === null) {
        var inverse = this.ctx.mozCurrentTransformInverse;
        this._cachedGetSinglePixelWidth = Math.sqrt(Math.max(inverse[0] * inverse[0] + inverse[1] * inverse[1], inverse[2] * inverse[2] + inverse[3] * inverse[3]));
      }
      return this._cachedGetSinglePixelWidth;
    },

    getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {
      var transform = this.ctx.mozCurrentTransform;
      return [transform[0] * x + transform[2] * y + transform[4], transform[1] * x + transform[3] * y + transform[5]];
    }
  };
  for (var op in _util.OPS) {
    CanvasGraphics.prototype[_util.OPS[op]] = CanvasGraphics.prototype[op];
  }
  return CanvasGraphics;
}();
exports.CanvasGraphics = CanvasGraphics;

/***/ }),
/* 134 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TilingPattern = exports.getShadingPatternFromIR = undefined;

var _util = __w_pdfjs_require__(1);

var ShadingIRs = {};
ShadingIRs.RadialAxial = {
  fromIR: function RadialAxial_fromIR(raw) {
    var type = raw[1];
    var colorStops = raw[2];
    var p0 = raw[3];
    var p1 = raw[4];
    var r0 = raw[5];
    var r1 = raw[6];
    return {
      type: 'Pattern',
      getPattern: function RadialAxial_getPattern(ctx) {
        var grad;
        if (type === 'axial') {
          grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);
        } else if (type === 'radial') {
          grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);
        }
        for (var i = 0, ii = colorStops.length; i < ii; ++i) {
          var c = colorStops[i];
          grad.addColorStop(c[0], c[1]);
        }
        return grad;
      }
    };
  }
};
var createMeshCanvas = function createMeshCanvasClosure() {
  function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {
    var coords = context.coords,
        colors = context.colors;
    var bytes = data.data,
        rowSize = data.width * 4;
    var tmp;
    if (coords[p1 + 1] > coords[p2 + 1]) {
      tmp = p1;
      p1 = p2;
      p2 = tmp;
      tmp = c1;
      c1 = c2;
      c2 = tmp;
    }
    if (coords[p2 + 1] > coords[p3 + 1]) {
      tmp = p2;
      p2 = p3;
      p3 = tmp;
      tmp = c2;
      c2 = c3;
      c3 = tmp;
    }
    if (coords[p1 + 1] > coords[p2 + 1]) {
      tmp = p1;
      p1 = p2;
      p2 = tmp;
      tmp = c1;
      c1 = c2;
      c2 = tmp;
    }
    var x1 = (coords[p1] + context.offsetX) * context.scaleX;
    var y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;
    var x2 = (coords[p2] + context.offsetX) * context.scaleX;
    var y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;
    var x3 = (coords[p3] + context.offsetX) * context.scaleX;
    var y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;
    if (y1 >= y3) {
      return;
    }
    var c1r = colors[c1],
        c1g = colors[c1 + 1],
        c1b = colors[c1 + 2];
    var c2r = colors[c2],
        c2g = colors[c2 + 1],
        c2b = colors[c2 + 2];
    var c3r = colors[c3],
        c3g = colors[c3 + 1],
        c3b = colors[c3 + 2];
    var minY = Math.round(y1),
        maxY = Math.round(y3);
    var xa, car, cag, cab;
    var xb, cbr, cbg, cbb;
    var k;
    for (var y = minY; y <= maxY; y++) {
      if (y < y2) {
        k = y < y1 ? 0 : y1 === y2 ? 1 : (y1 - y) / (y1 - y2);
        xa = x1 - (x1 - x2) * k;
        car = c1r - (c1r - c2r) * k;
        cag = c1g - (c1g - c2g) * k;
        cab = c1b - (c1b - c2b) * k;
      } else {
        k = y > y3 ? 1 : y2 === y3 ? 0 : (y2 - y) / (y2 - y3);
        xa = x2 - (x2 - x3) * k;
        car = c2r - (c2r - c3r) * k;
        cag = c2g - (c2g - c3g) * k;
        cab = c2b - (c2b - c3b) * k;
      }
      k = y < y1 ? 0 : y > y3 ? 1 : (y1 - y) / (y1 - y3);
      xb = x1 - (x1 - x3) * k;
      cbr = c1r - (c1r - c3r) * k;
      cbg = c1g - (c1g - c3g) * k;
      cbb = c1b - (c1b - c3b) * k;
      var x1_ = Math.round(Math.min(xa, xb));
      var x2_ = Math.round(Math.max(xa, xb));
      var j = rowSize * y + x1_ * 4;
      for (var x = x1_; x <= x2_; x++) {
        k = (xa - x) / (xa - xb);
        k = k < 0 ? 0 : k > 1 ? 1 : k;
        bytes[j++] = car - (car - cbr) * k | 0;
        bytes[j++] = cag - (cag - cbg) * k | 0;
        bytes[j++] = cab - (cab - cbb) * k | 0;
        bytes[j++] = 255;
      }
    }
  }
  function drawFigure(data, figure, context) {
    var ps = figure.coords;
    var cs = figure.colors;
    var i, ii;
    switch (figure.type) {
      case 'lattice':
        var verticesPerRow = figure.verticesPerRow;
        var rows = Math.floor(ps.length / verticesPerRow) - 1;
        var cols = verticesPerRow - 1;
        for (i = 0; i < rows; i++) {
          var q = i * verticesPerRow;
          for (var j = 0; j < cols; j++, q++) {
            drawTriangle(data, context, ps[q], ps[q + 1], ps[q + verticesPerRow], cs[q], cs[q + 1], cs[q + verticesPerRow]);
            drawTriangle(data, context, ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow], cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);
          }
        }
        break;
      case 'triangles':
        for (i = 0, ii = ps.length; i < ii; i += 3) {
          drawTriangle(data, context, ps[i], ps[i + 1], ps[i + 2], cs[i], cs[i + 1], cs[i + 2]);
        }
        break;
      default:
        throw new Error('illegal figure');
    }
  }
  function createMeshCanvas(bounds, combinesScale, coords, colors, figures, backgroundColor, cachedCanvases, webGLContext) {
    var EXPECTED_SCALE = 1.1;
    var MAX_PATTERN_SIZE = 3000;
    var BORDER_SIZE = 2;
    var offsetX = Math.floor(bounds[0]);
    var offsetY = Math.floor(bounds[1]);
    var boundsWidth = Math.ceil(bounds[2]) - offsetX;
    var boundsHeight = Math.ceil(bounds[3]) - offsetY;
    var width = Math.min(Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);
    var height = Math.min(Math.ceil(Math.abs(boundsHeight * combinesScale[1] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);
    var scaleX = boundsWidth / width;
    var scaleY = boundsHeight / height;
    var context = {
      coords: coords,
      colors: colors,
      offsetX: -offsetX,
      offsetY: -offsetY,
      scaleX: 1 / scaleX,
      scaleY: 1 / scaleY
    };
    var paddedWidth = width + BORDER_SIZE * 2;
    var paddedHeight = height + BORDER_SIZE * 2;
    var canvas, tmpCanvas, i, ii;
    if (webGLContext.isEnabled) {
      canvas = webGLContext.drawFigures({
        width: width,
        height: height,
        backgroundColor: backgroundColor,
        figures: figures,
        context: context
      });
      tmpCanvas = cachedCanvases.getCanvas('mesh', paddedWidth, paddedHeight, false);
      tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);
      canvas = tmpCanvas.canvas;
    } else {
      tmpCanvas = cachedCanvases.getCanvas('mesh', paddedWidth, paddedHeight, false);
      var tmpCtx = tmpCanvas.context;
      var data = tmpCtx.createImageData(width, height);
      if (backgroundColor) {
        var bytes = data.data;
        for (i = 0, ii = bytes.length; i < ii; i += 4) {
          bytes[i] = backgroundColor[0];
          bytes[i + 1] = backgroundColor[1];
          bytes[i + 2] = backgroundColor[2];
          bytes[i + 3] = 255;
        }
      }
      for (i = 0; i < figures.length; i++) {
        drawFigure(data, figures[i], context);
      }
      tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);
      canvas = tmpCanvas.canvas;
    }
    return {
      canvas: canvas,
      offsetX: offsetX - BORDER_SIZE * scaleX,
      offsetY: offsetY - BORDER_SIZE * scaleY,
      scaleX: scaleX,
      scaleY: scaleY
    };
  }
  return createMeshCanvas;
}();
ShadingIRs.Mesh = {
  fromIR: function Mesh_fromIR(raw) {
    var coords = raw[2];
    var colors = raw[3];
    var figures = raw[4];
    var bounds = raw[5];
    var matrix = raw[6];
    var background = raw[8];
    return {
      type: 'Pattern',
      getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {
        var scale;
        if (shadingFill) {
          scale = _util.Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);
        } else {
          scale = _util.Util.singularValueDecompose2dScale(owner.baseTransform);
          if (matrix) {
            var matrixScale = _util.Util.singularValueDecompose2dScale(matrix);
            scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];
          }
        }
        var temporaryPatternCanvas = createMeshCanvas(bounds, scale, coords, colors, figures, shadingFill ? null : background, owner.cachedCanvases, owner.webGLContext);
        if (!shadingFill) {
          ctx.setTransform.apply(ctx, owner.baseTransform);
          if (matrix) {
            ctx.transform.apply(ctx, matrix);
          }
        }
        ctx.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);
        ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);
        return ctx.createPattern(temporaryPatternCanvas.canvas, 'no-repeat');
      }
    };
  }
};
ShadingIRs.Dummy = {
  fromIR: function Dummy_fromIR() {
    return {
      type: 'Pattern',
      getPattern: function Dummy_fromIR_getPattern() {
        return 'hotpink';
      }
    };
  }
};
function getShadingPatternFromIR(raw) {
  var shadingIR = ShadingIRs[raw[0]];
  if (!shadingIR) {
    throw new Error('Unknown IR type: ' + raw[0]);
  }
  return shadingIR.fromIR(raw);
}
var TilingPattern = function TilingPatternClosure() {
  var PaintType = {
    COLORED: 1,
    UNCOLORED: 2
  };
  var MAX_PATTERN_SIZE = 3000;
  function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {
    this.operatorList = IR[2];
    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];
    this.bbox = IR[4];
    this.xstep = IR[5];
    this.ystep = IR[6];
    this.paintType = IR[7];
    this.tilingType = IR[8];
    this.color = color;
    this.canvasGraphicsFactory = canvasGraphicsFactory;
    this.baseTransform = baseTransform;
    this.type = 'Pattern';
    this.ctx = ctx;
  }
  TilingPattern.prototype = {
    createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {
      var operatorList = this.operatorList;
      var bbox = this.bbox;
      var xstep = this.xstep;
      var ystep = this.ystep;
      var paintType = this.paintType;
      var tilingType = this.tilingType;
      var color = this.color;
      var canvasGraphicsFactory = this.canvasGraphicsFactory;
      (0, _util.info)('TilingType: ' + tilingType);
      var x0 = bbox[0],
          y0 = bbox[1],
          x1 = bbox[2],
          y1 = bbox[3];
      var topLeft = [x0, y0];
      var botRight = [x0 + xstep, y0 + ystep];
      var width = botRight[0] - topLeft[0];
      var height = botRight[1] - topLeft[1];
      var matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);
      var curMatrixScale = _util.Util.singularValueDecompose2dScale(this.baseTransform);
      var combinedScale = [matrixScale[0] * curMatrixScale[0], matrixScale[1] * curMatrixScale[1]];
      width = Math.min(Math.ceil(Math.abs(width * combinedScale[0])), MAX_PATTERN_SIZE);
      height = Math.min(Math.ceil(Math.abs(height * combinedScale[1])), MAX_PATTERN_SIZE);
      var tmpCanvas = owner.cachedCanvases.getCanvas('pattern', width, height, true);
      var tmpCtx = tmpCanvas.context;
      var graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);
      graphics.groupLevel = owner.groupLevel;
      this.setFillAndStrokeStyleToContext(graphics, paintType, color);
      this.setScale(width, height, xstep, ystep);
      this.transformToScale(graphics);
      var tmpTranslate = [1, 0, 0, 1, -topLeft[0], -topLeft[1]];
      graphics.transform.apply(graphics, tmpTranslate);
      this.clipBbox(graphics, bbox, x0, y0, x1, y1);
      graphics.executeOperatorList(operatorList);
      return tmpCanvas.canvas;
    },
    setScale: function TilingPattern_setScale(width, height, xstep, ystep) {
      this.scale = [width / xstep, height / ystep];
    },
    transformToScale: function TilingPattern_transformToScale(graphics) {
      var scale = this.scale;
      var tmpScale = [scale[0], 0, 0, scale[1], 0, 0];
      graphics.transform.apply(graphics, tmpScale);
    },
    scaleToContext: function TilingPattern_scaleToContext() {
      var scale = this.scale;
      this.ctx.scale(1 / scale[0], 1 / scale[1]);
    },
    clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {
      if (Array.isArray(bbox) && bbox.length === 4) {
        var bboxWidth = x1 - x0;
        var bboxHeight = y1 - y0;
        graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);
        graphics.clip();
        graphics.endPath();
      }
    },
    setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(graphics, paintType, color) {
      var context = graphics.ctx,
          current = graphics.current;
      switch (paintType) {
        case PaintType.COLORED:
          var ctx = this.ctx;
          context.fillStyle = ctx.fillStyle;
          context.strokeStyle = ctx.strokeStyle;
          current.fillColor = ctx.fillStyle;
          current.strokeColor = ctx.strokeStyle;
          break;
        case PaintType.UNCOLORED:
          var cssColor = _util.Util.makeCssRgb(color[0], color[1], color[2]);
          context.fillStyle = cssColor;
          context.strokeStyle = cssColor;
          current.fillColor = cssColor;
          current.strokeColor = cssColor;
          break;
        default:
          throw new _util.FormatError('Unsupported paint type: ' + paintType);
      }
    },
    getPattern: function TilingPattern_getPattern(ctx, owner) {
      var temporaryPatternCanvas = this.createPatternCanvas(owner);
      ctx = this.ctx;
      ctx.setTransform.apply(ctx, this.baseTransform);
      ctx.transform.apply(ctx, this.matrix);
      this.scaleToContext();
      return ctx.createPattern(temporaryPatternCanvas, 'repeat');
    }
  };
  return TilingPattern;
}();
exports.getShadingPatternFromIR = getShadingPatternFromIR;
exports.TilingPattern = TilingPattern;

/***/ }),
/* 135 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var GlobalWorkerOptions = Object.create(null);
GlobalWorkerOptions.workerPort = GlobalWorkerOptions.workerPort === undefined ? null : GlobalWorkerOptions.workerPort;
GlobalWorkerOptions.workerSrc = GlobalWorkerOptions.workerSrc === undefined ? '' : GlobalWorkerOptions.workerSrc;
exports.GlobalWorkerOptions = GlobalWorkerOptions;

/***/ }),
/* 136 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MessageHandler = undefined;

var _regenerator = __w_pdfjs_require__(137);

var _regenerator2 = _interopRequireDefault(_regenerator);

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var resolveCall = function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee(fn, args) {
    var thisArg = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (fn) {
              _context.next = 2;
              break;
            }

            return _context.abrupt('return');

          case 2:
            return _context.abrupt('return', fn.apply(thisArg, args));

          case 3:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function resolveCall(_x2, _x3) {
    return _ref.apply(this, arguments);
  };
}();

var _util = __w_pdfjs_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function wrapReason(reason) {
  if ((typeof reason === 'undefined' ? 'undefined' : _typeof(reason)) !== 'object') {
    return reason;
  }
  switch (reason.name) {
    case 'AbortException':
      return new _util.AbortException(reason.message);
    case 'MissingPDFException':
      return new _util.MissingPDFException(reason.message);
    case 'UnexpectedResponseException':
      return new _util.UnexpectedResponseException(reason.message, reason.status);
    default:
      return new _util.UnknownErrorException(reason.message, reason.details);
  }
}
function makeReasonSerializable(reason) {
  if (!(reason instanceof Error) || reason instanceof _util.AbortException || reason instanceof _util.MissingPDFException || reason instanceof _util.UnexpectedResponseException || reason instanceof _util.UnknownErrorException) {
    return reason;
  }
  return new _util.UnknownErrorException(reason.message, reason.toString());
}
function resolveOrReject(capability, success, reason) {
  if (success) {
    capability.resolve();
  } else {
    capability.reject(reason);
  }
}
function finalize(promise) {
  return Promise.resolve(promise).catch(function () {});
}
function MessageHandler(sourceName, targetName, comObj) {
  var _this = this;

  this.sourceName = sourceName;
  this.targetName = targetName;
  this.comObj = comObj;
  this.callbackId = 1;
  this.streamId = 1;
  this.postMessageTransfers = true;
  this.streamSinks = Object.create(null);
  this.streamControllers = Object.create(null);
  var callbacksCapabilities = this.callbacksCapabilities = Object.create(null);
  var ah = this.actionHandler = Object.create(null);
  this._onComObjOnMessage = function (event) {
    var data = event.data;
    if (data.targetName !== _this.sourceName) {
      return;
    }
    if (data.stream) {
      _this._processStreamMessage(data);
    } else if (data.isReply) {
      var callbackId = data.callbackId;
      if (data.callbackId in callbacksCapabilities) {
        var callback = callbacksCapabilities[callbackId];
        delete callbacksCapabilities[callbackId];
        if ('error' in data) {
          callback.reject(wrapReason(data.error));
        } else {
          callback.resolve(data.data);
        }
      } else {
        throw new Error('Cannot resolve callback ' + callbackId);
      }
    } else if (data.action in ah) {
      var action = ah[data.action];
      if (data.callbackId) {
        var _sourceName = _this.sourceName;
        var _targetName = data.sourceName;
        Promise.resolve().then(function () {
          return action[0].call(action[1], data.data);
        }).then(function (result) {
          comObj.postMessage({
            sourceName: _sourceName,
            targetName: _targetName,
            isReply: true,
            callbackId: data.callbackId,
            data: result
          });
        }, function (reason) {
          comObj.postMessage({
            sourceName: _sourceName,
            targetName: _targetName,
            isReply: true,
            callbackId: data.callbackId,
            error: makeReasonSerializable(reason)
          });
        });
      } else if (data.streamId) {
        _this._createStreamSink(data);
      } else {
        action[0].call(action[1], data.data);
      }
    } else {
      throw new Error('Unknown action from worker: ' + data.action);
    }
  };
  comObj.addEventListener('message', this._onComObjOnMessage);
}
MessageHandler.prototype = {
  on: function on(actionName, handler, scope) {
    var ah = this.actionHandler;
    if (ah[actionName]) {
      throw new Error('There is already an actionName called "' + actionName + '"');
    }
    ah[actionName] = [handler, scope];
  },
  send: function send(actionName, data, transfers) {
    var message = {
      sourceName: this.sourceName,
      targetName: this.targetName,
      action: actionName,
      data: data
    };
    this.postMessage(message, transfers);
  },
  sendWithPromise: function sendWithPromise(actionName, data, transfers) {
    var callbackId = this.callbackId++;
    var message = {
      sourceName: this.sourceName,
      targetName: this.targetName,
      action: actionName,
      data: data,
      callbackId: callbackId
    };
    var capability = (0, _util.createPromiseCapability)();
    this.callbacksCapabilities[callbackId] = capability;
    try {
      this.postMessage(message, transfers);
    } catch (e) {
      capability.reject(e);
    }
    return capability.promise;
  },
  sendWithStream: function sendWithStream(actionName, data, queueingStrategy, transfers) {
    var _this2 = this;

    var streamId = this.streamId++;
    var sourceName = this.sourceName;
    var targetName = this.targetName;
    return new _util.ReadableStream({
      start: function start(controller) {
        var startCapability = (0, _util.createPromiseCapability)();
        _this2.streamControllers[streamId] = {
          controller: controller,
          startCall: startCapability,
          isClosed: false
        };
        _this2.postMessage({
          sourceName: sourceName,
          targetName: targetName,
          action: actionName,
          streamId: streamId,
          data: data,
          desiredSize: controller.desiredSize
        });
        return startCapability.promise;
      },
      pull: function pull(controller) {
        var pullCapability = (0, _util.createPromiseCapability)();
        _this2.streamControllers[streamId].pullCall = pullCapability;
        _this2.postMessage({
          sourceName: sourceName,
          targetName: targetName,
          stream: 'pull',
          streamId: streamId,
          desiredSize: controller.desiredSize
        });
        return pullCapability.promise;
      },
      cancel: function cancel(reason) {
        var cancelCapability = (0, _util.createPromiseCapability)();
        _this2.streamControllers[streamId].cancelCall = cancelCapability;
        _this2.streamControllers[streamId].isClosed = true;
        _this2.postMessage({
          sourceName: sourceName,
          targetName: targetName,
          stream: 'cancel',
          reason: reason,
          streamId: streamId
        });
        return cancelCapability.promise;
      }
    }, queueingStrategy);
  },
  _createStreamSink: function _createStreamSink(data) {
    var _this3 = this;

    var self = this;
    var action = this.actionHandler[data.action];
    var streamId = data.streamId;
    var desiredSize = data.desiredSize;
    var sourceName = this.sourceName;
    var targetName = data.sourceName;
    var capability = (0, _util.createPromiseCapability)();
    var sendStreamRequest = function sendStreamRequest(_ref2) {
      var stream = _ref2.stream,
          chunk = _ref2.chunk,
          transfers = _ref2.transfers,
          success = _ref2.success,
          reason = _ref2.reason;

      _this3.postMessage({
        sourceName: sourceName,
        targetName: targetName,
        stream: stream,
        streamId: streamId,
        chunk: chunk,
        success: success,
        reason: reason
      }, transfers);
    };
    var streamSink = {
      enqueue: function enqueue(chunk) {
        var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
        var transfers = arguments[2];

        if (this.isCancelled) {
          return;
        }
        var lastDesiredSize = this.desiredSize;
        this.desiredSize -= size;
        if (lastDesiredSize > 0 && this.desiredSize <= 0) {
          this.sinkCapability = (0, _util.createPromiseCapability)();
          this.ready = this.sinkCapability.promise;
        }
        sendStreamRequest({
          stream: 'enqueue',
          chunk: chunk,
          transfers: transfers
        });
      },
      close: function close() {
        if (this.isCancelled) {
          return;
        }
        this.isCancelled = true;
        sendStreamRequest({ stream: 'close' });
        delete self.streamSinks[streamId];
      },
      error: function error(reason) {
        if (this.isCancelled) {
          return;
        }
        this.isCancelled = true;
        sendStreamRequest({
          stream: 'error',
          reason: reason
        });
      },

      sinkCapability: capability,
      onPull: null,
      onCancel: null,
      isCancelled: false,
      desiredSize: desiredSize,
      ready: null
    };
    streamSink.sinkCapability.resolve();
    streamSink.ready = streamSink.sinkCapability.promise;
    this.streamSinks[streamId] = streamSink;
    resolveCall(action[0], [data.data, streamSink], action[1]).then(function () {
      sendStreamRequest({
        stream: 'start_complete',
        success: true
      });
    }, function (reason) {
      sendStreamRequest({
        stream: 'start_complete',
        success: false,
        reason: reason
      });
    });
  },
  _processStreamMessage: function _processStreamMessage(data) {
    var _this4 = this;

    var sourceName = this.sourceName;
    var targetName = data.sourceName;
    var streamId = data.streamId;
    var sendStreamResponse = function sendStreamResponse(_ref3) {
      var stream = _ref3.stream,
          success = _ref3.success,
          reason = _ref3.reason;

      _this4.comObj.postMessage({
        sourceName: sourceName,
        targetName: targetName,
        stream: stream,
        success: success,
        streamId: streamId,
        reason: reason
      });
    };
    var deleteStreamController = function deleteStreamController() {
      Promise.all([_this4.streamControllers[data.streamId].startCall, _this4.streamControllers[data.streamId].pullCall, _this4.streamControllers[data.streamId].cancelCall].map(function (capability) {
        return capability && finalize(capability.promise);
      })).then(function () {
        delete _this4.streamControllers[data.streamId];
      });
    };
    switch (data.stream) {
      case 'start_complete':
        resolveOrReject(this.streamControllers[data.streamId].startCall, data.success, wrapReason(data.reason));
        break;
      case 'pull_complete':
        resolveOrReject(this.streamControllers[data.streamId].pullCall, data.success, wrapReason(data.reason));
        break;
      case 'pull':
        if (!this.streamSinks[data.streamId]) {
          sendStreamResponse({
            stream: 'pull_complete',
            success: true
          });
          break;
        }
        if (this.streamSinks[data.streamId].desiredSize <= 0 && data.desiredSize > 0) {
          this.streamSinks[data.streamId].sinkCapability.resolve();
        }
        this.streamSinks[data.streamId].desiredSize = data.desiredSize;
        resolveCall(this.streamSinks[data.streamId].onPull).then(function () {
          sendStreamResponse({
            stream: 'pull_complete',
            success: true
          });
        }, function (reason) {
          sendStreamResponse({
            stream: 'pull_complete',
            success: false,
            reason: reason
          });
        });
        break;
      case 'enqueue':
        (0, _util.assert)(this.streamControllers[data.streamId], 'enqueue should have stream controller');
        if (!this.streamControllers[data.streamId].isClosed) {
          this.streamControllers[data.streamId].controller.enqueue(data.chunk);
        }
        break;
      case 'close':
        (0, _util.assert)(this.streamControllers[data.streamId], 'close should have stream controller');
        if (this.streamControllers[data.streamId].isClosed) {
          break;
        }
        this.streamControllers[data.streamId].isClosed = true;
        this.streamControllers[data.streamId].controller.close();
        deleteStreamController();
        break;
      case 'error':
        (0, _util.assert)(this.streamControllers[data.streamId], 'error should have stream controller');
        this.streamControllers[data.streamId].controller.error(wrapReason(data.reason));
        deleteStreamController();
        break;
      case 'cancel_complete':
        resolveOrReject(this.streamControllers[data.streamId].cancelCall, data.success, wrapReason(data.reason));
        deleteStreamController();
        break;
      case 'cancel':
        if (!this.streamSinks[data.streamId]) {
          break;
        }
        resolveCall(this.streamSinks[data.streamId].onCancel, [wrapReason(data.reason)]).then(function () {
          sendStreamResponse({
            stream: 'cancel_complete',
            success: true
          });
        }, function (reason) {
          sendStreamResponse({
            stream: 'cancel_complete',
            success: false,
            reason: reason
          });
        });
        this.streamSinks[data.streamId].sinkCapability.reject(wrapReason(data.reason));
        this.streamSinks[data.streamId].isCancelled = true;
        delete this.streamSinks[data.streamId];
        break;
      default:
        throw new Error('Unexpected stream case');
    }
  },
  postMessage: function postMessage(message, transfers) {
    if (transfers && this.postMessageTransfers) {
      this.comObj.postMessage(message, transfers);
    } else {
      this.comObj.postMessage(message);
    }
  },
  destroy: function destroy() {
    this.comObj.removeEventListener('message', this._onComObjOnMessage);
  }
};
exports.MessageHandler = MessageHandler;

/***/ }),
/* 137 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


module.exports = __w_pdfjs_require__(138);

/***/ }),
/* 138 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


var g = function () {
  return this;
}() || Function("return this")();
var hadRuntime = g.regeneratorRuntime && Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0;
var oldRuntime = hadRuntime && g.regeneratorRuntime;
g.regeneratorRuntime = undefined;
module.exports = __w_pdfjs_require__(139);
if (hadRuntime) {
  g.regeneratorRuntime = oldRuntime;
} else {
  try {
    delete g.regeneratorRuntime;
  } catch (e) {
    g.regeneratorRuntime = undefined;
  }
}

/***/ }),
/* 139 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

!function (global) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined;
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
  var inModule = ( false ? undefined : _typeof(module)) === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      module.exports = runtime;
    }
    return;
  }
  runtime = global.regeneratorRuntime = inModule ? module.exports : {};
  function wrap(innerFn, outerFn, self, tryLocsList) {
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);
    generator._invoke = makeInvokeMethod(innerFn, self, context);
    return generator;
  }
  runtime.wrap = wrap;
  function tryCatch(fn, obj, arg) {
    try {
      return {
        type: "normal",
        arg: fn.call(obj, arg)
      };
    } catch (err) {
      return {
        type: "throw",
        arg: err
      };
    }
  }
  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";
  var ContinueSentinel = {};
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };
  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    IteratorPrototype = NativeIteratorPrototype;
  }
  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function (method) {
      prototype[method] = function (arg) {
        return this._invoke(method, arg);
      };
    });
  }
  runtime.isGeneratorFunction = function (genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
  };
  runtime.mark = function (genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };
  runtime.awrap = function (arg) {
    return { __await: arg };
  };
  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value && (typeof value === "undefined" ? "undefined" : _typeof(value)) === "object" && hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function (value) {
            invoke("next", value, resolve, reject);
          }, function (err) {
            invoke("throw", err, resolve, reject);
          });
        }
        return Promise.resolve(value).then(function (unwrapped) {
          result.value = unwrapped;
          resolve(result);
        }, reject);
      }
    }
    var previousPromise;
    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function (resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }
      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
    }
    this._invoke = enqueue;
  }
  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  runtime.AsyncIterator = AsyncIterator;
  runtime.async = function (innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));
    return runtime.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
      return result.done ? result.value : iter.next();
    });
  };
  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;
    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }
      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }
        return doneResult();
      }
      context.method = method;
      context.arg = arg;
      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }
        if (context.method === "next") {
          context.sent = context._sent = context.arg;
        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }
          context.dispatchException(context.arg);
        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }
        state = GenStateExecuting;
        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          state = context.done ? GenStateCompleted : GenStateSuspendedYield;
          if (record.arg === ContinueSentinel) {
            continue;
          }
          return {
            value: record.arg,
            done: context.done
          };
        } else if (record.type === "throw") {
          state = GenStateCompleted;
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      context.delegate = null;
      if (context.method === "throw") {
        if (delegate.iterator.return) {
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);
          if (context.method === "throw") {
            return ContinueSentinel;
          }
        }
        context.method = "throw";
        context.arg = new TypeError("The iterator does not provide a 'throw' method");
      }
      return ContinueSentinel;
    }
    var record = tryCatch(method, delegate.iterator, context.arg);
    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }
    var info = record.arg;
    if (!info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }
    if (info.done) {
      context[delegate.resultName] = info.value;
      context.next = delegate.nextLoc;
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }
    } else {
      return info;
    }
    context.delegate = null;
    return ContinueSentinel;
  }
  defineIteratorMethods(Gp);
  Gp[toStringTagSymbol] = "Generator";
  Gp[iteratorSymbol] = function () {
    return this;
  };
  Gp.toString = function () {
    return "[object Generator]";
  };
  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };
    if (1 in locs) {
      entry.catchLoc = locs[1];
    }
    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }
    this.tryEntries.push(entry);
  }
  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }
  function Context(tryLocsList) {
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }
  runtime.keys = function (object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }
      next.done = true;
      return next;
    };
  };
  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }
      if (typeof iterable.next === "function") {
        return iterable;
      }
      if (!isNaN(iterable.length)) {
        var i = -1,
            next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }
          next.value = undefined;
          next.done = true;
          return next;
        };
        return next.next = next;
      }
    }
    return { next: doneResult };
  }
  runtime.values = values;
  function doneResult() {
    return {
      value: undefined,
      done: true
    };
  }
  Context.prototype = {
    constructor: Context,
    reset: function reset(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;
      this.method = "next";
      this.arg = undefined;
      this.tryEntries.forEach(resetTryEntry);
      if (!skipTempReset) {
        for (var name in this) {
          if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },
    stop: function stop() {
      this.done = true;
      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }
      return this.rval;
    },
    dispatchException: function dispatchException(exception) {
      if (this.done) {
        throw exception;
      }
      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;
        if (caught) {
          context.method = "next";
          context.arg = undefined;
        }
        return !!caught;
      }
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;
        if (entry.tryLoc === "root") {
          return handle("end");
        }
        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");
          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }
          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },
    abrupt: function abrupt(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }
      if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
        finallyEntry = null;
      }
      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;
      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }
      return this.complete(record);
    },
    complete: function complete(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }
      if (record.type === "break" || record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }
      return ContinueSentinel;
    },
    finish: function finish(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },
    "catch": function _catch(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }
      throw new Error("illegal catch attempt");
    },
    delegateYield: function delegateYield(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };
      if (this.method === "next") {
        this.arg = undefined;
      }
      return ContinueSentinel;
    }
  };
}(function () {
  return this;
}() || Function("return this")());
/* WEBPACK VAR INJECTION */}.call(this, __w_pdfjs_require__(140)(module)))

/***/ }),
/* 140 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


module.exports = function (module) {
  if (!module.webpackPolyfill) {
    module.deprecate = function () {};
    module.paths = [];
    if (!module.children) module.children = [];
    Object.defineProperty(module, "loaded", {
      enumerable: true,
      get: function get() {
        return module.l;
      }
    });
    Object.defineProperty(module, "id", {
      enumerable: true,
      get: function get() {
        return module.i;
      }
    });
    module.webpackPolyfill = 1;
  }
  return module;
};

/***/ }),
/* 141 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Metadata = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _util = __w_pdfjs_require__(1);

var _xml_parser = __w_pdfjs_require__(142);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Metadata = function () {
  function Metadata(data) {
    _classCallCheck(this, Metadata);

    (0, _util.assert)(typeof data === 'string', 'Metadata: input is not a string');
    data = this._repair(data);
    var parser = new _xml_parser.SimpleXMLParser();
    var xmlDocument = parser.parseFromString(data);
    this._metadata = Object.create(null);
    if (xmlDocument) {
      this._parse(xmlDocument);
    }
  }

  _createClass(Metadata, [{
    key: '_repair',
    value: function _repair(data) {
      return data.replace(/>\\376\\377([^<]+)/g, function (all, codes) {
        var bytes = codes.replace(/\\([0-3])([0-7])([0-7])/g, function (code, d1, d2, d3) {
          return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);
        }).replace(/&(amp|apos|gt|lt|quot);/g, function (str, name) {
          switch (name) {
            case 'amp':
              return '&';
            case 'apos':
              return '\'';
            case 'gt':
              return '>';
            case 'lt':
              return '<';
            case 'quot':
              return '\"';
          }
          throw new Error('_repair: ' + name + ' isn\'t defined.');
        });
        var chars = '';
        for (var i = 0, ii = bytes.length; i < ii; i += 2) {
          var code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);
          if (code >= 32 && code < 127 && code !== 60 && code !== 62 && code !== 38) {
            chars += String.fromCharCode(code);
          } else {
            chars += '&#x' + (0x10000 + code).toString(16).substring(1) + ';';
          }
        }
        return '>' + chars;
      });
    }
  }, {
    key: '_parse',
    value: function _parse(xmlDocument) {
      var rdf = xmlDocument.documentElement;
      if (rdf.nodeName.toLowerCase() !== 'rdf:rdf') {
        rdf = rdf.firstChild;
        while (rdf && rdf.nodeName.toLowerCase() !== 'rdf:rdf') {
          rdf = rdf.nextSibling;
        }
      }
      var nodeName = rdf ? rdf.nodeName.toLowerCase() : null;
      if (!rdf || nodeName !== 'rdf:rdf' || !rdf.hasChildNodes()) {
        return;
      }
      var children = rdf.childNodes;
      for (var i = 0, ii = children.length; i < ii; i++) {
        var desc = children[i];
        if (desc.nodeName.toLowerCase() !== 'rdf:description') {
          continue;
        }
        for (var j = 0, jj = desc.childNodes.length; j < jj; j++) {
          if (desc.childNodes[j].nodeName.toLowerCase() !== '#text') {
            var entry = desc.childNodes[j];
            var name = entry.nodeName.toLowerCase();
            this._metadata[name] = entry.textContent.trim();
          }
        }
      }
    }
  }, {
    key: 'get',
    value: function get(name) {
      return this._metadata[name] || null;
    }
  }, {
    key: 'getAll',
    value: function getAll() {
      return this._metadata;
    }
  }, {
    key: 'has',
    value: function has(name) {
      return typeof this._metadata[name] !== 'undefined';
    }
  }]);

  return Metadata;
}();

exports.Metadata = Metadata;

/***/ }),
/* 142 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var XMLParserErrorCode = {
  NoError: 0,
  EndOfDocument: -1,
  UnterminatedCdat: -2,
  UnterminatedXmlDeclaration: -3,
  UnterminatedDoctypeDeclaration: -4,
  UnterminatedComment: -5,
  MalformedElement: -6,
  OutOfMemory: -7,
  UnterminatedAttributeValue: -8,
  UnterminatedElement: -9,
  ElementNeverBegun: -10
};
function isWhitespace(s, index) {
  var ch = s[index];
  return ch === ' ' || ch === '\n' || ch === '\r' || ch === '\t';
}
function isWhitespaceString(s) {
  for (var i = 0, ii = s.length; i < ii; i++) {
    if (!isWhitespace(s, i)) {
      return false;
    }
  }
  return true;
}

var XMLParserBase = function () {
  function XMLParserBase() {
    _classCallCheck(this, XMLParserBase);
  }

  _createClass(XMLParserBase, [{
    key: '_resolveEntities',
    value: function _resolveEntities(s) {
      return s.replace(/&([^;]+);/g, function (all, entity) {
        if (entity.substring(0, 2) === '#x') {
          return String.fromCharCode(parseInt(entity.substring(2), 16));
        } else if (entity.substring(0, 1) === '#') {
          return String.fromCharCode(parseInt(entity.substring(1), 10));
        }
        switch (entity) {
          case 'lt':
            return '<';
          case 'gt':
            return '>';
          case 'amp':
            return '&';
          case 'quot':
            return '\"';
        }
        return this.onResolveEntity(entity);
      });
    }
  }, {
    key: '_parseContent',
    value: function _parseContent(s, start) {
      var pos = start,
          name = void 0,
          attributes = [];
      function skipWs() {
        while (pos < s.length && isWhitespace(s, pos)) {
          ++pos;
        }
      }
      while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== '>' && s[pos] !== '/') {
        ++pos;
      }
      name = s.substring(start, pos);
      skipWs();
      while (pos < s.length && s[pos] !== '>' && s[pos] !== '/' && s[pos] !== '?') {
        skipWs();
        var attrName = '',
            attrValue = '';
        while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== '=') {
          attrName += s[pos];
          ++pos;
        }
        skipWs();
        if (s[pos] !== '=') {
          return null;
        }
        ++pos;
        skipWs();
        var attrEndChar = s[pos];
        if (attrEndChar !== '\"' && attrEndChar !== '\'') {
          return null;
        }
        var attrEndIndex = s.indexOf(attrEndChar, ++pos);
        if (attrEndIndex < 0) {
          return null;
        }
        attrValue = s.substring(pos, attrEndIndex);
        attributes.push({
          name: attrName,
          value: this._resolveEntities(attrValue)
        });
        pos = attrEndIndex + 1;
        skipWs();
      }
      return {
        name: name,
        attributes: attributes,
        parsed: pos - start
      };
    }
  }, {
    key: '_parseProcessingInstruction',
    value: function _parseProcessingInstruction(s, start) {
      var pos = start,
          name = void 0,
          value = void 0;
      function skipWs() {
        while (pos < s.length && isWhitespace(s, pos)) {
          ++pos;
        }
      }
      while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== '>' && s[pos] !== '/') {
        ++pos;
      }
      name = s.substring(start, pos);
      skipWs();
      var attrStart = pos;
      while (pos < s.length && (s[pos] !== '?' || s[pos + 1] !== '>')) {
        ++pos;
      }
      value = s.substring(attrStart, pos);
      return {
        name: name,
        value: value,
        parsed: pos - start
      };
    }
  }, {
    key: 'parseXml',
    value: function parseXml(s) {
      var i = 0;
      while (i < s.length) {
        var ch = s[i];
        var j = i;
        if (ch === '<') {
          ++j;
          var ch2 = s[j];
          var q = void 0;
          switch (ch2) {
            case '/':
              ++j;
              q = s.indexOf('>', j);
              if (q < 0) {
                this.onError(XMLParserErrorCode.UnterminatedElement);
                return;
              }
              this.onEndElement(s.substring(j, q));
              j = q + 1;
              break;
            case '?':
              ++j;
              var pi = this._parseProcessingInstruction(s, j);
              if (s.substring(j + pi.parsed, j + pi.parsed + 2) !== '?>') {
                this.onError(XMLParserErrorCode.UnterminatedXmlDeclaration);
                return;
              }
              this.onPi(pi.name, pi.value);
              j += pi.parsed + 2;
              break;
            case '!':
              if (s.substring(j + 1, j + 3) === '--') {
                q = s.indexOf('-->', j + 3);
                if (q < 0) {
                  this.onError(XMLParserErrorCode.UnterminatedComment);
                  return;
                }
                this.onComment(s.substring(j + 3, q));
                j = q + 3;
              } else if (s.substring(j + 1, j + 8) === '[CDATA[') {
                q = s.indexOf(']]>', j + 8);
                if (q < 0) {
                  this.onError(XMLParserErrorCode.UnterminatedCdat);
                  return;
                }
                this.onCdata(s.substring(j + 8, q));
                j = q + 3;
              } else if (s.substring(j + 1, j + 8) === 'DOCTYPE') {
                var q2 = s.indexOf('[', j + 8);
                var complexDoctype = false;
                q = s.indexOf('>', j + 8);
                if (q < 0) {
                  this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);
                  return;
                }
                if (q2 > 0 && q > q2) {
                  q = s.indexOf(']>', j + 8);
                  if (q < 0) {
                    this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);
                    return;
                  }
                  complexDoctype = true;
                }
                var doctypeContent = s.substring(j + 8, q + (complexDoctype ? 1 : 0));
                this.onDoctype(doctypeContent);
                j = q + (complexDoctype ? 2 : 1);
              } else {
                this.onError(XMLParserErrorCode.MalformedElement);
                return;
              }
              break;
            default:
              var content = this._parseContent(s, j);
              if (content === null) {
                this.onError(XMLParserErrorCode.MalformedElement);
                return;
              }
              var isClosed = false;
              if (s.substring(j + content.parsed, j + content.parsed + 2) === '/>') {
                isClosed = true;
              } else if (s.substring(j + content.parsed, j + content.parsed + 1) !== '>') {
                this.onError(XMLParserErrorCode.UnterminatedElement);
                return;
              }
              this.onBeginElement(content.name, content.attributes, isClosed);
              j += content.parsed + (isClosed ? 2 : 1);
              break;
          }
        } else {
          while (j < s.length && s[j] !== '<') {
            j++;
          }
          var text = s.substring(i, j);
          this.onText(this._resolveEntities(text));
        }
        i = j;
      }
    }
  }, {
    key: 'onResolveEntity',
    value: function onResolveEntity(name) {
      return '&' + name + ';';
    }
  }, {
    key: 'onPi',
    value: function onPi(name, value) {}
  }, {
    key: 'onComment',
    value: function onComment(text) {}
  }, {
    key: 'onCdata',
    value: function onCdata(text) {}
  }, {
    key: 'onDoctype',
    value: function onDoctype(doctypeContent) {}
  }, {
    key: 'onText',
    value: function onText(text) {}
  }, {
    key: 'onBeginElement',
    value: function onBeginElement(name, attributes, isEmpty) {}
  }, {
    key: 'onEndElement',
    value: function onEndElement(name) {}
  }, {
    key: 'onError',
    value: function onError(code) {}
  }]);

  return XMLParserBase;
}();

var SimpleDOMNode = function () {
  function SimpleDOMNode(nodeName, nodeValue) {
    _classCallCheck(this, SimpleDOMNode);

    this.nodeName = nodeName;
    this.nodeValue = nodeValue;
    Object.defineProperty(this, 'parentNode', {
      value: null,
      writable: true
    });
  }

  _createClass(SimpleDOMNode, [{
    key: 'hasChildNodes',
    value: function hasChildNodes() {
      return this.childNodes && this.childNodes.length > 0;
    }
  }, {
    key: 'firstChild',
    get: function get() {
      return this.childNodes[0];
    }
  }, {
    key: 'nextSibling',
    get: function get() {
      var index = this.parentNode.childNodes.indexOf(this);
      return this.parentNode.childNodes[index + 1];
    }
  }, {
    key: 'textContent',
    get: function get() {
      if (!this.childNodes) {
        return this.nodeValue || '';
      }
      return this.childNodes.map(function (child) {
        return child.textContent;
      }).join('');
    }
  }]);

  return SimpleDOMNode;
}();

var SimpleXMLParser = function (_XMLParserBase) {
  _inherits(SimpleXMLParser, _XMLParserBase);

  function SimpleXMLParser() {
    _classCallCheck(this, SimpleXMLParser);

    var _this = _possibleConstructorReturn(this, (SimpleXMLParser.__proto__ || Object.getPrototypeOf(SimpleXMLParser)).call(this));

    _this._currentFragment = null;
    _this._stack = null;
    _this._errorCode = XMLParserErrorCode.NoError;
    return _this;
  }

  _createClass(SimpleXMLParser, [{
    key: 'parseFromString',
    value: function parseFromString(data) {
      this._currentFragment = [];
      this._stack = [];
      this._errorCode = XMLParserErrorCode.NoError;
      this.parseXml(data);
      if (this._errorCode !== XMLParserErrorCode.NoError) {
        return undefined;
      }

      var _currentFragment = _slicedToArray(this._currentFragment, 1),
          documentElement = _currentFragment[0];

      if (!documentElement) {
        return undefined;
      }
      return { documentElement: documentElement };
    }
  }, {
    key: 'onResolveEntity',
    value: function onResolveEntity(name) {
      switch (name) {
        case 'apos':
          return '\'';
      }
      return _get(SimpleXMLParser.prototype.__proto__ || Object.getPrototypeOf(SimpleXMLParser.prototype), 'onResolveEntity', this).call(this, name);
    }
  }, {
    key: 'onText',
    value: function onText(text) {
      if (isWhitespaceString(text)) {
        return;
      }
      var node = new SimpleDOMNode('#text', text);
      this._currentFragment.push(node);
    }
  }, {
    key: 'onCdata',
    value: function onCdata(text) {
      var node = new SimpleDOMNode('#text', text);
      this._currentFragment.push(node);
    }
  }, {
    key: 'onBeginElement',
    value: function onBeginElement(name, attributes, isEmpty) {
      var node = new SimpleDOMNode(name);
      node.childNodes = [];
      this._currentFragment.push(node);
      if (isEmpty) {
        return;
      }
      this._stack.push(this._currentFragment);
      this._currentFragment = node.childNodes;
    }
  }, {
    key: 'onEndElement',
    value: function onEndElement(name) {
      this._currentFragment = this._stack.pop();
      var lastElement = this._currentFragment[this._currentFragment.length - 1];
      for (var i = 0, ii = lastElement.childNodes.length; i < ii; i++) {
        lastElement.childNodes[i].parentNode = lastElement;
      }
    }
  }, {
    key: 'onError',
    value: function onError(code) {
      this._errorCode = code;
    }
  }]);

  return SimpleXMLParser;
}(XMLParserBase);

exports.SimpleXMLParser = SimpleXMLParser;

/***/ }),
/* 143 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PDFDataTransportStream = undefined;

var _regenerator = __w_pdfjs_require__(137);

var _regenerator2 = _interopRequireDefault(_regenerator);

var _util = __w_pdfjs_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

var PDFDataTransportStream = function PDFDataTransportStreamClosure() {
  function PDFDataTransportStream(params, pdfDataRangeTransport) {
    var _this = this;

    (0, _util.assert)(pdfDataRangeTransport);
    this._queuedChunks = [];
    var initialData = params.initialData;
    if (initialData && initialData.length > 0) {
      var buffer = new Uint8Array(initialData).buffer;
      this._queuedChunks.push(buffer);
    }
    this._pdfDataRangeTransport = pdfDataRangeTransport;
    this._isStreamingSupported = !params.disableStream;
    this._isRangeSupported = !params.disableRange;
    this._contentLength = params.length;
    this._fullRequestReader = null;
    this._rangeReaders = [];
    this._pdfDataRangeTransport.addRangeListener(function (begin, chunk) {
      _this._onReceiveData({
        begin: begin,
        chunk: chunk
      });
    });
    this._pdfDataRangeTransport.addProgressListener(function (loaded) {
      _this._onProgress({ loaded: loaded });
    });
    this._pdfDataRangeTransport.addProgressiveReadListener(function (chunk) {
      _this._onReceiveData({ chunk: chunk });
    });
    this._pdfDataRangeTransport.transportReady();
  }
  PDFDataTransportStream.prototype = {
    _onReceiveData: function PDFDataTransportStream_onReceiveData(args) {
      var buffer = new Uint8Array(args.chunk).buffer;
      if (args.begin === undefined) {
        if (this._fullRequestReader) {
          this._fullRequestReader._enqueue(buffer);
        } else {
          this._queuedChunks.push(buffer);
        }
      } else {
        var found = this._rangeReaders.some(function (rangeReader) {
          if (rangeReader._begin !== args.begin) {
            return false;
          }
          rangeReader._enqueue(buffer);
          return true;
        });
        (0, _util.assert)(found);
      }
    },
    _onProgress: function PDFDataTransportStream_onDataProgress(evt) {
      if (this._rangeReaders.length > 0) {
        var firstReader = this._rangeReaders[0];
        if (firstReader.onProgress) {
          firstReader.onProgress({ loaded: evt.loaded });
        }
      }
    },
    _removeRangeReader: function PDFDataTransportStream_removeRangeReader(reader) {
      var i = this._rangeReaders.indexOf(reader);
      if (i >= 0) {
        this._rangeReaders.splice(i, 1);
      }
    },
    getFullReader: function PDFDataTransportStream_getFullReader() {
      (0, _util.assert)(!this._fullRequestReader);
      var queuedChunks = this._queuedChunks;
      this._queuedChunks = null;
      return new PDFDataTransportStreamReader(this, queuedChunks);
    },
    getRangeReader: function PDFDataTransportStream_getRangeReader(begin, end) {
      var reader = new PDFDataTransportStreamRangeReader(this, begin, end);
      this._pdfDataRangeTransport.requestDataRange(begin, end);
      this._rangeReaders.push(reader);
      return reader;
    },
    cancelAllRequests: function PDFDataTransportStream_cancelAllRequests(reason) {
      if (this._fullRequestReader) {
        this._fullRequestReader.cancel(reason);
      }
      var readers = this._rangeReaders.slice(0);
      readers.forEach(function (rangeReader) {
        rangeReader.cancel(reason);
      });
      this._pdfDataRangeTransport.abort();
    }
  };
  function PDFDataTransportStreamReader(stream, queuedChunks) {
    this._stream = stream;
    this._done = false;
    this._filename = null;
    this._queuedChunks = queuedChunks || [];
    this._requests = [];
    this._headersReady = Promise.resolve();
    stream._fullRequestReader = this;
    this.onProgress = null;
  }
  PDFDataTransportStreamReader.prototype = {
    _enqueue: function PDFDataTransportStreamReader_enqueue(chunk) {
      if (this._done) {
        return;
      }
      if (this._requests.length > 0) {
        var requestCapability = this._requests.shift();
        requestCapability.resolve({
          value: chunk,
          done: false
        });
        return;
      }
      this._queuedChunks.push(chunk);
    },
    get headersReady() {
      return this._headersReady;
    },
    get filename() {
      return this._filename;
    },
    get isRangeSupported() {
      return this._stream._isRangeSupported;
    },
    get isStreamingSupported() {
      return this._stream._isStreamingSupported;
    },
    get contentLength() {
      return this._stream._contentLength;
    },
    read: function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
        var chunk, requestCapability;
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!(this._queuedChunks.length > 0)) {
                  _context.next = 3;
                  break;
                }

                chunk = this._queuedChunks.shift();
                return _context.abrupt('return', {
                  value: chunk,
                  done: false
                });

              case 3:
                if (!this._done) {
                  _context.next = 5;
                  break;
                }

                return _context.abrupt('return', {
                  value: undefined,
                  done: true
                });

              case 5:
                requestCapability = (0, _util.createPromiseCapability)();

                this._requests.push(requestCapability);
                return _context.abrupt('return', requestCapability.promise);

              case 8:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function read() {
        return _ref.apply(this, arguments);
      }

      return read;
    }(),

    cancel: function PDFDataTransportStreamReader_cancel(reason) {
      this._done = true;
      this._requests.forEach(function (requestCapability) {
        requestCapability.resolve({
          value: undefined,
          done: true
        });
      });
      this._requests = [];
    }
  };
  function PDFDataTransportStreamRangeReader(stream, begin, end) {
    this._stream = stream;
    this._begin = begin;
    this._end = end;
    this._queuedChunk = null;
    this._requests = [];
    this._done = false;
    this.onProgress = null;
  }
  PDFDataTransportStreamRangeReader.prototype = {
    _enqueue: function PDFDataTransportStreamRangeReader_enqueue(chunk) {
      if (this._done) {
        return;
      }
      if (this._requests.length === 0) {
        this._queuedChunk = chunk;
      } else {
        var requestsCapability = this._requests.shift();
        requestsCapability.resolve({
          value: chunk,
          done: false
        });
        this._requests.forEach(function (requestCapability) {
          requestCapability.resolve({
            value: undefined,
            done: true
          });
        });
        this._requests = [];
      }
      this._done = true;
      this._stream._removeRangeReader(this);
    },
    get isStreamingSupported() {
      return false;
    },
    read: function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee2() {
        var chunk, requestCapability;
        return _regenerator2.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (!this._queuedChunk) {
                  _context2.next = 4;
                  break;
                }

                chunk = this._queuedChunk;

                this._queuedChunk = null;
                return _context2.abrupt('return', {
                  value: chunk,
                  done: false
                });

              case 4:
                if (!this._done) {
                  _context2.next = 6;
                  break;
                }

                return _context2.abrupt('return', {
                  value: undefined,
                  done: true
                });

              case 6:
                requestCapability = (0, _util.createPromiseCapability)();

                this._requests.push(requestCapability);
                return _context2.abrupt('return', requestCapability.promise);

              case 9:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function read() {
        return _ref2.apply(this, arguments);
      }

      return read;
    }(),

    cancel: function PDFDataTransportStreamRangeReader_cancel(reason) {
      this._done = true;
      this._requests.forEach(function (requestCapability) {
        requestCapability.resolve({
          value: undefined,
          done: true
        });
      });
      this._requests = [];
      this._stream._removeRangeReader(this);
    }
  };
  return PDFDataTransportStream;
}();
exports.PDFDataTransportStream = PDFDataTransportStream;

/***/ }),
/* 144 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WebGLContext = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _util = __w_pdfjs_require__(1);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var WebGLContext = function () {
  function WebGLContext(_ref) {
    var _ref$enable = _ref.enable,
        enable = _ref$enable === undefined ? false : _ref$enable;

    _classCallCheck(this, WebGLContext);

    this._enabled = enable === true;
  }

  _createClass(WebGLContext, [{
    key: 'composeSMask',
    value: function composeSMask(_ref2) {
      var layer = _ref2.layer,
          mask = _ref2.mask,
          properties = _ref2.properties;

      return WebGLUtils.composeSMask(layer, mask, properties);
    }
  }, {
    key: 'drawFigures',
    value: function drawFigures(_ref3) {
      var width = _ref3.width,
          height = _ref3.height,
          backgroundColor = _ref3.backgroundColor,
          figures = _ref3.figures,
          context = _ref3.context;

      return WebGLUtils.drawFigures(width, height, backgroundColor, figures, context);
    }
  }, {
    key: 'clear',
    value: function clear() {
      WebGLUtils.cleanup();
    }
  }, {
    key: 'isEnabled',
    get: function get() {
      var enabled = this._enabled;
      if (enabled) {
        enabled = WebGLUtils.tryInitGL();
      }
      return (0, _util.shadow)(this, 'isEnabled', enabled);
    }
  }]);

  return WebGLContext;
}();

var WebGLUtils = function WebGLUtilsClosure() {
  function loadShader(gl, code, shaderType) {
    var shader = gl.createShader(shaderType);
    gl.shaderSource(shader, code);
    gl.compileShader(shader);
    var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);
    if (!compiled) {
      var errorMsg = gl.getShaderInfoLog(shader);
      throw new Error('Error during shader compilation: ' + errorMsg);
    }
    return shader;
  }
  function createVertexShader(gl, code) {
    return loadShader(gl, code, gl.VERTEX_SHADER);
  }
  function createFragmentShader(gl, code) {
    return loadShader(gl, code, gl.FRAGMENT_SHADER);
  }
  function createProgram(gl, shaders) {
    var program = gl.createProgram();
    for (var i = 0, ii = shaders.length; i < ii; ++i) {
      gl.attachShader(program, shaders[i]);
    }
    gl.linkProgram(program);
    var linked = gl.getProgramParameter(program, gl.LINK_STATUS);
    if (!linked) {
      var errorMsg = gl.getProgramInfoLog(program);
      throw new Error('Error during program linking: ' + errorMsg);
    }
    return program;
  }
  function createTexture(gl, image, textureId) {
    gl.activeTexture(textureId);
    var texture = gl.createTexture();
    gl.bindTexture(gl.TEXTURE_2D, texture);
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);
    return texture;
  }
  var currentGL, currentCanvas;
  function generateGL() {
    if (currentGL) {
      return;
    }
    currentCanvas = document.createElement('canvas');
    currentGL = currentCanvas.getContext('webgl', { premultipliedalpha: false });
  }
  var smaskVertexShaderCode = '\
  attribute vec2 a_position;                                    \
  attribute vec2 a_texCoord;                                    \
                                                                \
  uniform vec2 u_resolution;                                    \
                                                                \
  varying vec2 v_texCoord;                                      \
                                                                \
  void main() {                                                 \
    vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \
    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \
                                                                \
    v_texCoord = a_texCoord;                                    \
  }                                                             ';
  var smaskFragmentShaderCode = '\
  precision mediump float;                                      \
                                                                \
  uniform vec4 u_backdrop;                                      \
  uniform int u_subtype;                                        \
  uniform sampler2D u_image;                                    \
  uniform sampler2D u_mask;                                     \
                                                                \
  varying vec2 v_texCoord;                                      \
                                                                \
  void main() {                                                 \
    vec4 imageColor = texture2D(u_image, v_texCoord);           \
    vec4 maskColor = texture2D(u_mask, v_texCoord);             \
    if (u_backdrop.a > 0.0) {                                   \
      maskColor.rgb = maskColor.rgb * maskColor.a +             \
                      u_backdrop.rgb * (1.0 - maskColor.a);     \
    }                                                           \
    float lum;                                                  \
    if (u_subtype == 0) {                                       \
      lum = maskColor.a;                                        \
    } else {                                                    \
      lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \
            maskColor.b * 0.11;                                 \
    }                                                           \
    imageColor.a *= lum;                                        \
    imageColor.rgb *= imageColor.a;                             \
    gl_FragColor = imageColor;                                  \
  }                                                             ';
  var smaskCache = null;
  function initSmaskGL() {
    var canvas, gl;
    generateGL();
    canvas = currentCanvas;
    currentCanvas = null;
    gl = currentGL;
    currentGL = null;
    var vertexShader = createVertexShader(gl, smaskVertexShaderCode);
    var fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);
    var program = createProgram(gl, [vertexShader, fragmentShader]);
    gl.useProgram(program);
    var cache = {};
    cache.gl = gl;
    cache.canvas = canvas;
    cache.resolutionLocation = gl.getUniformLocation(program, 'u_resolution');
    cache.positionLocation = gl.getAttribLocation(program, 'a_position');
    cache.backdropLocation = gl.getUniformLocation(program, 'u_backdrop');
    cache.subtypeLocation = gl.getUniformLocation(program, 'u_subtype');
    var texCoordLocation = gl.getAttribLocation(program, 'a_texCoord');
    var texLayerLocation = gl.getUniformLocation(program, 'u_image');
    var texMaskLocation = gl.getUniformLocation(program, 'u_mask');
    var texCoordBuffer = gl.createBuffer();
    gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);
    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]), gl.STATIC_DRAW);
    gl.enableVertexAttribArray(texCoordLocation);
    gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);
    gl.uniform1i(texLayerLocation, 0);
    gl.uniform1i(texMaskLocation, 1);
    smaskCache = cache;
  }
  function composeSMask(layer, mask, properties) {
    var width = layer.width,
        height = layer.height;
    if (!smaskCache) {
      initSmaskGL();
    }
    var cache = smaskCache,
        canvas = cache.canvas,
        gl = cache.gl;
    canvas.width = width;
    canvas.height = height;
    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);
    gl.uniform2f(cache.resolutionLocation, width, height);
    if (properties.backdrop) {
      gl.uniform4f(cache.resolutionLocation, properties.backdrop[0], properties.backdrop[1], properties.backdrop[2], 1);
    } else {
      gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);
    }
    gl.uniform1i(cache.subtypeLocation, properties.subtype === 'Luminosity' ? 1 : 0);
    var texture = createTexture(gl, layer, gl.TEXTURE0);
    var maskTexture = createTexture(gl, mask, gl.TEXTURE1);
    var buffer = gl.createBuffer();
    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);
    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0, 0, width, 0, 0, height, 0, height, width, 0, width, height]), gl.STATIC_DRAW);
    gl.enableVertexAttribArray(cache.positionLocation);
    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);
    gl.clearColor(0, 0, 0, 0);
    gl.enable(gl.BLEND);
    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);
    gl.clear(gl.COLOR_BUFFER_BIT);
    gl.drawArrays(gl.TRIANGLES, 0, 6);
    gl.flush();
    gl.deleteTexture(texture);
    gl.deleteTexture(maskTexture);
    gl.deleteBuffer(buffer);
    return canvas;
  }
  var figuresVertexShaderCode = '\
  attribute vec2 a_position;                                    \
  attribute vec3 a_color;                                       \
                                                                \
  uniform vec2 u_resolution;                                    \
  uniform vec2 u_scale;                                         \
  uniform vec2 u_offset;                                        \
                                                                \
  varying vec4 v_color;                                         \
                                                                \
  void main() {                                                 \
    vec2 position = (a_position + u_offset) * u_scale;          \
    vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \
    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \
                                                                \
    v_color = vec4(a_color / 255.0, 1.0);                       \
  }                                                             ';
  var figuresFragmentShaderCode = '\
  precision mediump float;                                      \
                                                                \
  varying vec4 v_color;                                         \
                                                                \
  void main() {                                                 \
    gl_FragColor = v_color;                                     \
  }                                                             ';
  var figuresCache = null;
  function initFiguresGL() {
    var canvas, gl;
    generateGL();
    canvas = currentCanvas;
    currentCanvas = null;
    gl = currentGL;
    currentGL = null;
    var vertexShader = createVertexShader(gl, figuresVertexShaderCode);
    var fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);
    var program = createProgram(gl, [vertexShader, fragmentShader]);
    gl.useProgram(program);
    var cache = {};
    cache.gl = gl;
    cache.canvas = canvas;
    cache.resolutionLocation = gl.getUniformLocation(program, 'u_resolution');
    cache.scaleLocation = gl.getUniformLocation(program, 'u_scale');
    cache.offsetLocation = gl.getUniformLocation(program, 'u_offset');
    cache.positionLocation = gl.getAttribLocation(program, 'a_position');
    cache.colorLocation = gl.getAttribLocation(program, 'a_color');
    figuresCache = cache;
  }
  function drawFigures(width, height, backgroundColor, figures, context) {
    if (!figuresCache) {
      initFiguresGL();
    }
    var cache = figuresCache,
        canvas = cache.canvas,
        gl = cache.gl;
    canvas.width = width;
    canvas.height = height;
    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);
    gl.uniform2f(cache.resolutionLocation, width, height);
    var count = 0;
    var i, ii, rows;
    for (i = 0, ii = figures.length; i < ii; i++) {
      switch (figures[i].type) {
        case 'lattice':
          rows = figures[i].coords.length / figures[i].verticesPerRow | 0;
          count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;
          break;
        case 'triangles':
          count += figures[i].coords.length;
          break;
      }
    }
    var coords = new Float32Array(count * 2);
    var colors = new Uint8Array(count * 3);
    var coordsMap = context.coords,
        colorsMap = context.colors;
    var pIndex = 0,
        cIndex = 0;
    for (i = 0, ii = figures.length; i < ii; i++) {
      var figure = figures[i],
          ps = figure.coords,
          cs = figure.colors;
      switch (figure.type) {
        case 'lattice':
          var cols = figure.verticesPerRow;
          rows = ps.length / cols | 0;
          for (var row = 1; row < rows; row++) {
            var offset = row * cols + 1;
            for (var col = 1; col < cols; col++, offset++) {
              coords[pIndex] = coordsMap[ps[offset - cols - 1]];
              coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];
              coords[pIndex + 2] = coordsMap[ps[offset - cols]];
              coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];
              coords[pIndex + 4] = coordsMap[ps[offset - 1]];
              coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];
              colors[cIndex] = colorsMap[cs[offset - cols - 1]];
              colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];
              colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];
              colors[cIndex + 3] = colorsMap[cs[offset - cols]];
              colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];
              colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];
              colors[cIndex + 6] = colorsMap[cs[offset - 1]];
              colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];
              colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];
              coords[pIndex + 6] = coords[pIndex + 2];
              coords[pIndex + 7] = coords[pIndex + 3];
              coords[pIndex + 8] = coords[pIndex + 4];
              coords[pIndex + 9] = coords[pIndex + 5];
              coords[pIndex + 10] = coordsMap[ps[offset]];
              coords[pIndex + 11] = coordsMap[ps[offset] + 1];
              colors[cIndex + 9] = colors[cIndex + 3];
              colors[cIndex + 10] = colors[cIndex + 4];
              colors[cIndex + 11] = colors[cIndex + 5];
              colors[cIndex + 12] = colors[cIndex + 6];
              colors[cIndex + 13] = colors[cIndex + 7];
              colors[cIndex + 14] = colors[cIndex + 8];
              colors[cIndex + 15] = colorsMap[cs[offset]];
              colors[cIndex + 16] = colorsMap[cs[offset] + 1];
              colors[cIndex + 17] = colorsMap[cs[offset] + 2];
              pIndex += 12;
              cIndex += 18;
            }
          }
          break;
        case 'triangles':
          for (var j = 0, jj = ps.length; j < jj; j++) {
            coords[pIndex] = coordsMap[ps[j]];
            coords[pIndex + 1] = coordsMap[ps[j] + 1];
            colors[cIndex] = colorsMap[cs[j]];
            colors[cIndex + 1] = colorsMap[cs[j] + 1];
            colors[cIndex + 2] = colorsMap[cs[j] + 2];
            pIndex += 2;
            cIndex += 3;
          }
          break;
      }
    }
    if (backgroundColor) {
      gl.clearColor(backgroundColor[0] / 255, backgroundColor[1] / 255, backgroundColor[2] / 255, 1.0);
    } else {
      gl.clearColor(0, 0, 0, 0);
    }
    gl.clear(gl.COLOR_BUFFER_BIT);
    var coordsBuffer = gl.createBuffer();
    gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);
    gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);
    gl.enableVertexAttribArray(cache.positionLocation);
    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);
    var colorsBuffer = gl.createBuffer();
    gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);
    gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);
    gl.enableVertexAttribArray(cache.colorLocation);
    gl.vertexAttribPointer(cache.colorLocation, 3, gl.UNSIGNED_BYTE, false, 0, 0);
    gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);
    gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);
    gl.drawArrays(gl.TRIANGLES, 0, count);
    gl.flush();
    gl.deleteBuffer(coordsBuffer);
    gl.deleteBuffer(colorsBuffer);
    return canvas;
  }
  return {
    tryInitGL: function tryInitGL() {
      try {
        generateGL();
        return !!currentGL;
      } catch (ex) {}
      return false;
    },

    composeSMask: composeSMask,
    drawFigures: drawFigures,
    cleanup: function cleanup() {
      if (smaskCache && smaskCache.canvas) {
        smaskCache.canvas.width = 0;
        smaskCache.canvas.height = 0;
      }
      if (figuresCache && figuresCache.canvas) {
        figuresCache.canvas.width = 0;
        figuresCache.canvas.height = 0;
      }
      smaskCache = null;
      figuresCache = null;
    }
  };
}();
exports.WebGLContext = WebGLContext;

/***/ }),
/* 145 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.renderTextLayer = undefined;

var _util = __w_pdfjs_require__(1);

var _global_scope = __w_pdfjs_require__(3);

var _global_scope2 = _interopRequireDefault(_global_scope);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var renderTextLayer = function renderTextLayerClosure() {
  var MAX_TEXT_DIVS_TO_RENDER = 100000;
  var NonWhitespaceRegexp = /\S/;
  function isAllWhitespace(str) {
    return !NonWhitespaceRegexp.test(str);
  }
  var styleBuf = ['left: ', 0, 'px; top: ', 0, 'px; font-size: ', 0, 'px; font-family: ', '', ';'];
  function appendText(task, geom, styles) {
    var textDiv = document.createElement('div');
    var textDivProperties = {
      style: null,
      angle: 0,
      canvasWidth: 0,
      isWhitespace: false,
      originalTransform: null,
      paddingBottom: 0,
      paddingLeft: 0,
      paddingRight: 0,
      paddingTop: 0,
      scale: 1
    };
    task._textDivs.push(textDiv);
    if (isAllWhitespace(geom.str)) {
      textDivProperties.isWhitespace = true;
      task._textDivProperties.set(textDiv, textDivProperties);
      return;
    }
    var tx = _util.Util.transform(task._viewport.transform, geom.transform);
    var angle = Math.atan2(tx[1], tx[0]);
    var style = styles[geom.fontName];
    if (style.vertical) {
      angle += Math.PI / 2;
    }
    var fontHeight = Math.sqrt(tx[2] * tx[2] + tx[3] * tx[3]);
    var fontAscent = fontHeight;
    if (style.ascent) {
      fontAscent = style.ascent * fontAscent;
    } else if (style.descent) {
      fontAscent = (1 + style.descent) * fontAscent;
    }
    var left;
    var top;
    if (angle === 0) {
      left = tx[4];
      top = tx[5] - fontAscent;
    } else {
      left = tx[4] + fontAscent * Math.sin(angle);
      top = tx[5] - fontAscent * Math.cos(angle);
    }
    styleBuf[1] = left;
    styleBuf[3] = top;
    styleBuf[5] = fontHeight;
    styleBuf[7] = style.fontFamily;
    textDivProperties.style = styleBuf.join('');
    textDiv.setAttribute('style', textDivProperties.style);
    textDiv.textContent = geom.str;
    if (task._fontInspectorEnabled) {
      textDiv.dataset.fontName = geom.fontName;
    }
    if (angle !== 0) {
      textDivProperties.angle = angle * (180 / Math.PI);
    }
    if (geom.str.length > 1) {
      if (style.vertical) {
        textDivProperties.canvasWidth = geom.height * task._viewport.scale;
      } else {
        textDivProperties.canvasWidth = geom.width * task._viewport.scale;
      }
    }
    task._textDivProperties.set(textDiv, textDivProperties);
    if (task._textContentStream) {
      task._layoutText(textDiv);
    }
    if (task._enhanceTextSelection) {
      var angleCos = 1,
          angleSin = 0;
      if (angle !== 0) {
        angleCos = Math.cos(angle);
        angleSin = Math.sin(angle);
      }
      var divWidth = (style.vertical ? geom.height : geom.width) * task._viewport.scale;
      var divHeight = fontHeight;
      var m, b;
      if (angle !== 0) {
        m = [angleCos, angleSin, -angleSin, angleCos, left, top];
        b = _util.Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);
      } else {
        b = [left, top, left + divWidth, top + divHeight];
      }
      task._bounds.push({
        left: b[0],
        top: b[1],
        right: b[2],
        bottom: b[3],
        div: textDiv,
        size: [divWidth, divHeight],
        m: m
      });
    }
  }
  function render(task) {
    if (task._canceled) {
      return;
    }
    var textDivs = task._textDivs;
    var capability = task._capability;
    var textDivsLength = textDivs.length;
    if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {
      task._renderingDone = true;
      capability.resolve();
      return;
    }
    if (!task._textContentStream) {
      for (var i = 0; i < textDivsLength; i++) {
        task._layoutText(textDivs[i]);
      }
    }
    task._renderingDone = true;
    capability.resolve();
  }
  function expand(task) {
    var bounds = task._bounds;
    var viewport = task._viewport;
    var expanded = expandBounds(viewport.width, viewport.height, bounds);
    for (var i = 0; i < expanded.length; i++) {
      var div = bounds[i].div;
      var divProperties = task._textDivProperties.get(div);
      if (divProperties.angle === 0) {
        divProperties.paddingLeft = bounds[i].left - expanded[i].left;
        divProperties.paddingTop = bounds[i].top - expanded[i].top;
        divProperties.paddingRight = expanded[i].right - bounds[i].right;
        divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;
        task._textDivProperties.set(div, divProperties);
        continue;
      }
      var e = expanded[i],
          b = bounds[i];
      var m = b.m,
          c = m[0],
          s = m[1];
      var points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];
      var ts = new Float64Array(64);
      points.forEach(function (p, i) {
        var t = _util.Util.applyTransform(p, m);
        ts[i + 0] = c && (e.left - t[0]) / c;
        ts[i + 4] = s && (e.top - t[1]) / s;
        ts[i + 8] = c && (e.right - t[0]) / c;
        ts[i + 12] = s && (e.bottom - t[1]) / s;
        ts[i + 16] = s && (e.left - t[0]) / -s;
        ts[i + 20] = c && (e.top - t[1]) / c;
        ts[i + 24] = s && (e.right - t[0]) / -s;
        ts[i + 28] = c && (e.bottom - t[1]) / c;
        ts[i + 32] = c && (e.left - t[0]) / -c;
        ts[i + 36] = s && (e.top - t[1]) / -s;
        ts[i + 40] = c && (e.right - t[0]) / -c;
        ts[i + 44] = s && (e.bottom - t[1]) / -s;
        ts[i + 48] = s && (e.left - t[0]) / s;
        ts[i + 52] = c && (e.top - t[1]) / -c;
        ts[i + 56] = s && (e.right - t[0]) / s;
        ts[i + 60] = c && (e.bottom - t[1]) / -c;
      });
      var findPositiveMin = function findPositiveMin(ts, offset, count) {
        var result = 0;
        for (var i = 0; i < count; i++) {
          var t = ts[offset++];
          if (t > 0) {
            result = result ? Math.min(t, result) : t;
          }
        }
        return result;
      };
      var boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));
      divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;
      divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;
      divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;
      divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;
      task._textDivProperties.set(div, divProperties);
    }
  }
  function expandBounds(width, height, boxes) {
    var bounds = boxes.map(function (box, i) {
      return {
        x1: box.left,
        y1: box.top,
        x2: box.right,
        y2: box.bottom,
        index: i,
        x1New: undefined,
        x2New: undefined
      };
    });
    expandBoundsLTR(width, bounds);
    var expanded = new Array(boxes.length);
    bounds.forEach(function (b) {
      var i = b.index;
      expanded[i] = {
        left: b.x1New,
        top: 0,
        right: b.x2New,
        bottom: 0
      };
    });
    boxes.map(function (box, i) {
      var e = expanded[i],
          b = bounds[i];
      b.x1 = box.top;
      b.y1 = width - e.right;
      b.x2 = box.bottom;
      b.y2 = width - e.left;
      b.index = i;
      b.x1New = undefined;
      b.x2New = undefined;
    });
    expandBoundsLTR(height, bounds);
    bounds.forEach(function (b) {
      var i = b.index;
      expanded[i].top = b.x1New;
      expanded[i].bottom = b.x2New;
    });
    return expanded;
  }
  function expandBoundsLTR(width, bounds) {
    bounds.sort(function (a, b) {
      return a.x1 - b.x1 || a.index - b.index;
    });
    var fakeBoundary = {
      x1: -Infinity,
      y1: -Infinity,
      x2: 0,
      y2: Infinity,
      index: -1,
      x1New: 0,
      x2New: 0
    };
    var horizon = [{
      start: -Infinity,
      end: Infinity,
      boundary: fakeBoundary
    }];
    bounds.forEach(function (boundary) {
      var i = 0;
      while (i < horizon.length && horizon[i].end <= boundary.y1) {
        i++;
      }
      var j = horizon.length - 1;
      while (j >= 0 && horizon[j].start >= boundary.y2) {
        j--;
      }
      var horizonPart, affectedBoundary;
      var q,
          k,
          maxXNew = -Infinity;
      for (q = i; q <= j; q++) {
        horizonPart = horizon[q];
        affectedBoundary = horizonPart.boundary;
        var xNew;
        if (affectedBoundary.x2 > boundary.x1) {
          xNew = affectedBoundary.index > boundary.index ? affectedBoundary.x1New : boundary.x1;
        } else if (affectedBoundary.x2New === undefined) {
          xNew = (affectedBoundary.x2 + boundary.x1) / 2;
        } else {
          xNew = affectedBoundary.x2New;
        }
        if (xNew > maxXNew) {
          maxXNew = xNew;
        }
      }
      boundary.x1New = maxXNew;
      for (q = i; q <= j; q++) {
        horizonPart = horizon[q];
        affectedBoundary = horizonPart.boundary;
        if (affectedBoundary.x2New === undefined) {
          if (affectedBoundary.x2 > boundary.x1) {
            if (affectedBoundary.index > boundary.index) {
              affectedBoundary.x2New = affectedBoundary.x2;
            }
          } else {
            affectedBoundary.x2New = maxXNew;
          }
        } else if (affectedBoundary.x2New > maxXNew) {
          affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);
        }
      }
      var changedHorizon = [],
          lastBoundary = null;
      for (q = i; q <= j; q++) {
        horizonPart = horizon[q];
        affectedBoundary = horizonPart.boundary;
        var useBoundary = affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;
        if (lastBoundary === useBoundary) {
          changedHorizon[changedHorizon.length - 1].end = horizonPart.end;
        } else {
          changedHorizon.push({
            start: horizonPart.start,
            end: horizonPart.end,
            boundary: useBoundary
          });
          lastBoundary = useBoundary;
        }
      }
      if (horizon[i].start < boundary.y1) {
        changedHorizon[0].start = boundary.y1;
        changedHorizon.unshift({
          start: horizon[i].start,
          end: boundary.y1,
          boundary: horizon[i].boundary
        });
      }
      if (boundary.y2 < horizon[j].end) {
        changedHorizon[changedHorizon.length - 1].end = boundary.y2;
        changedHorizon.push({
          start: boundary.y2,
          end: horizon[j].end,
          boundary: horizon[j].boundary
        });
      }
      for (q = i; q <= j; q++) {
        horizonPart = horizon[q];
        affectedBoundary = horizonPart.boundary;
        if (affectedBoundary.x2New !== undefined) {
          continue;
        }
        var used = false;
        for (k = i - 1; !used && k >= 0 && horizon[k].start >= affectedBoundary.y1; k--) {
          used = horizon[k].boundary === affectedBoundary;
        }
        for (k = j + 1; !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2; k++) {
          used = horizon[k].boundary === affectedBoundary;
        }
        for (k = 0; !used && k < changedHorizon.length; k++) {
          used = changedHorizon[k].boundary === affectedBoundary;
        }
        if (!used) {
          affectedBoundary.x2New = maxXNew;
        }
      }
      Array.prototype.splice.apply(horizon, [i, j - i + 1].concat(changedHorizon));
    });
    horizon.forEach(function (horizonPart) {
      var affectedBoundary = horizonPart.boundary;
      if (affectedBoundary.x2New === undefined) {
        affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);
      }
    });
  }
  function TextLayerRenderTask(_ref) {
    var textContent = _ref.textContent,
        textContentStream = _ref.textContentStream,
        container = _ref.container,
        viewport = _ref.viewport,
        textDivs = _ref.textDivs,
        textContentItemsStr = _ref.textContentItemsStr,
        enhanceTextSelection = _ref.enhanceTextSelection;

    this._textContent = textContent;
    this._textContentStream = textContentStream;
    this._container = container;
    this._viewport = viewport;
    this._textDivs = textDivs || [];
    this._textContentItemsStr = textContentItemsStr || [];
    this._enhanceTextSelection = !!enhanceTextSelection;
    this._fontInspectorEnabled = !!(_global_scope2.default.FontInspector && _global_scope2.default.FontInspector.enabled);
    this._reader = null;
    this._layoutTextLastFontSize = null;
    this._layoutTextLastFontFamily = null;
    this._layoutTextCtx = null;
    this._textDivProperties = new WeakMap();
    this._renderingDone = false;
    this._canceled = false;
    this._capability = (0, _util.createPromiseCapability)();
    this._renderTimer = null;
    this._bounds = [];
  }
  TextLayerRenderTask.prototype = {
    get promise() {
      return this._capability.promise;
    },
    cancel: function TextLayer_cancel() {
      if (this._reader) {
        this._reader.cancel(new _util.AbortException('text layer task cancelled'));
        this._reader = null;
      }
      this._canceled = true;
      if (this._renderTimer !== null) {
        clearTimeout(this._renderTimer);
        this._renderTimer = null;
      }
      this._capability.reject('canceled');
    },
    _processItems: function _processItems(items, styleCache) {
      for (var i = 0, len = items.length; i < len; i++) {
        this._textContentItemsStr.push(items[i].str);
        appendText(this, items[i], styleCache);
      }
    },
    _layoutText: function _layoutText(textDiv) {
      var textLayerFrag = this._container;
      var textDivProperties = this._textDivProperties.get(textDiv);
      if (textDivProperties.isWhitespace) {
        return;
      }
      var fontSize = textDiv.style.fontSize;
      var fontFamily = textDiv.style.fontFamily;
      if (fontSize !== this._layoutTextLastFontSize || fontFamily !== this._layoutTextLastFontFamily) {
        this._layoutTextCtx.font = fontSize + ' ' + fontFamily;
        this._layoutTextLastFontSize = fontSize;
        this._layoutTextLastFontFamily = fontFamily;
      }
      var width = this._layoutTextCtx.measureText(textDiv.textContent).width;
      var transform = '';
      if (textDivProperties.canvasWidth !== 0 && width > 0) {
        textDivProperties.scale = textDivProperties.canvasWidth / width;
        transform = 'scaleX(' + textDivProperties.scale + ')';
      }
      if (textDivProperties.angle !== 0) {
        transform = 'rotate(' + textDivProperties.angle + 'deg) ' + transform;
      }
      if (transform !== '') {
        textDivProperties.originalTransform = transform;
        textDiv.style.transform = transform;
      }
      this._textDivProperties.set(textDiv, textDivProperties);
      textLayerFrag.appendChild(textDiv);
    },

    _render: function TextLayer_render(timeout) {
      var _this = this;

      var capability = (0, _util.createPromiseCapability)();
      var styleCache = Object.create(null);
      var canvas = document.createElement('canvas');
      canvas.mozOpaque = true;
      this._layoutTextCtx = canvas.getContext('2d', { alpha: false });
      if (this._textContent) {
        var textItems = this._textContent.items;
        var textStyles = this._textContent.styles;
        this._processItems(textItems, textStyles);
        capability.resolve();
      } else if (this._textContentStream) {
        var pump = function pump() {
          _this._reader.read().then(function (_ref2) {
            var value = _ref2.value,
                done = _ref2.done;

            if (done) {
              capability.resolve();
              return;
            }
            Object.assign(styleCache, value.styles);
            _this._processItems(value.items, styleCache);
            pump();
          }, capability.reject);
        };
        this._reader = this._textContentStream.getReader();
        pump();
      } else {
        throw new Error('Neither "textContent" nor "textContentStream"' + ' parameters specified.');
      }
      capability.promise.then(function () {
        styleCache = null;
        if (!timeout) {
          render(_this);
        } else {
          _this._renderTimer = setTimeout(function () {
            render(_this);
            _this._renderTimer = null;
          }, timeout);
        }
      }, this._capability.reject);
    },
    expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {
      if (!this._enhanceTextSelection || !this._renderingDone) {
        return;
      }
      if (this._bounds !== null) {
        expand(this);
        this._bounds = null;
      }
      for (var i = 0, ii = this._textDivs.length; i < ii; i++) {
        var div = this._textDivs[i];
        var divProperties = this._textDivProperties.get(div);
        if (divProperties.isWhitespace) {
          continue;
        }
        if (expandDivs) {
          var transform = '',
              padding = '';
          if (divProperties.scale !== 1) {
            transform = 'scaleX(' + divProperties.scale + ')';
          }
          if (divProperties.angle !== 0) {
            transform = 'rotate(' + divProperties.angle + 'deg) ' + transform;
          }
          if (divProperties.paddingLeft !== 0) {
            padding += ' padding-left: ' + divProperties.paddingLeft / divProperties.scale + 'px;';
            transform += ' translateX(' + -divProperties.paddingLeft / divProperties.scale + 'px)';
          }
          if (divProperties.paddingTop !== 0) {
            padding += ' padding-top: ' + divProperties.paddingTop + 'px;';
            transform += ' translateY(' + -divProperties.paddingTop + 'px)';
          }
          if (divProperties.paddingRight !== 0) {
            padding += ' padding-right: ' + divProperties.paddingRight / divProperties.scale + 'px;';
          }
          if (divProperties.paddingBottom !== 0) {
            padding += ' padding-bottom: ' + divProperties.paddingBottom + 'px;';
          }
          if (padding !== '') {
            div.setAttribute('style', divProperties.style + padding);
          }
          if (transform !== '') {
            div.style.transform = transform;
          }
        } else {
          div.style.padding = 0;
          div.style.transform = divProperties.originalTransform || '';
        }
      }
    }
  };
  function renderTextLayer(renderParameters) {
    var task = new TextLayerRenderTask({
      textContent: renderParameters.textContent,
      textContentStream: renderParameters.textContentStream,
      container: renderParameters.container,
      viewport: renderParameters.viewport,
      textDivs: renderParameters.textDivs,
      textContentItemsStr: renderParameters.textContentItemsStr,
      enhanceTextSelection: renderParameters.enhanceTextSelection
    });
    task._render(renderParameters.timeout);
    return task;
  }
  return renderTextLayer;
}();
exports.renderTextLayer = renderTextLayer;

/***/ }),
/* 146 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AnnotationLayer = undefined;

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dom_utils = __w_pdfjs_require__(130);

var _util = __w_pdfjs_require__(1);

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var AnnotationElementFactory = function () {
  function AnnotationElementFactory() {
    _classCallCheck(this, AnnotationElementFactory);
  }

  _createClass(AnnotationElementFactory, null, [{
    key: 'create',
    value: function create(parameters) {
      var subtype = parameters.data.annotationType;
      switch (subtype) {
        case _util.AnnotationType.LINK:
          return new LinkAnnotationElement(parameters);
        case _util.AnnotationType.TEXT:
          return new TextAnnotationElement(parameters);
        case _util.AnnotationType.WIDGET:
          var fieldType = parameters.data.fieldType;
          switch (fieldType) {
            case 'Tx':
              return new TextWidgetAnnotationElement(parameters);
            case 'Btn':
              if (parameters.data.radioButton) {
                return new RadioButtonWidgetAnnotationElement(parameters);
              } else if (parameters.data.checkBox) {
                return new CheckboxWidgetAnnotationElement(parameters);
              }
              return new PushButtonWidgetAnnotationElement(parameters);
            case 'Ch':
              return new ChoiceWidgetAnnotationElement(parameters);
          }
          return new WidgetAnnotationElement(parameters);
        case _util.AnnotationType.POPUP:
          return new PopupAnnotationElement(parameters);
        case _util.AnnotationType.LINE:
          return new LineAnnotationElement(parameters);
        case _util.AnnotationType.SQUARE:
          return new SquareAnnotationElement(parameters);
        case _util.AnnotationType.CIRCLE:
          return new CircleAnnotationElement(parameters);
        case _util.AnnotationType.POLYLINE:
          return new PolylineAnnotationElement(parameters);
        case _util.AnnotationType.INK:
          return new InkAnnotationElement(parameters);
        case _util.AnnotationType.POLYGON:
          return new PolygonAnnotationElement(parameters);
        case _util.AnnotationType.HIGHLIGHT:
          return new HighlightAnnotationElement(parameters);
        case _util.AnnotationType.UNDERLINE:
          return new UnderlineAnnotationElement(parameters);
        case _util.AnnotationType.SQUIGGLY:
          return new SquigglyAnnotationElement(parameters);
        case _util.AnnotationType.STRIKEOUT:
          return new StrikeOutAnnotationElement(parameters);
        case _util.AnnotationType.STAMP:
          return new StampAnnotationElement(parameters);
        case _util.AnnotationType.FILEATTACHMENT:
          return new FileAttachmentAnnotationElement(parameters);
        default:
          return new AnnotationElement(parameters);
      }
    }
  }]);

  return AnnotationElementFactory;
}();

var AnnotationElement = function () {
  function AnnotationElement(parameters) {
    var isRenderable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var ignoreBorder = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

    _classCallCheck(this, AnnotationElement);

    this.isRenderable = isRenderable;
    this.data = parameters.data;
    this.layer = parameters.layer;
    this.page = parameters.page;
    this.viewport = parameters.viewport;
    this.linkService = parameters.linkService;
    this.downloadManager = parameters.downloadManager;
    this.imageResourcesPath = parameters.imageResourcesPath;
    this.renderInteractiveForms = parameters.renderInteractiveForms;
    this.svgFactory = parameters.svgFactory;
    if (isRenderable) {
      this.container = this._createContainer(ignoreBorder);
    }
  }

  _createClass(AnnotationElement, [{
    key: '_createContainer',
    value: function _createContainer() {
      var ignoreBorder = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

      var data = this.data,
          page = this.page,
          viewport = this.viewport;
      var container = document.createElement('section');
      var width = data.rect[2] - data.rect[0];
      var height = data.rect[3] - data.rect[1];
      container.setAttribute('data-annotation-id', data.id);
      var rect = _util.Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);
      container.style.transform = 'matrix(' + viewport.transform.join(',') + ')';
      container.style.transformOrigin = -rect[0] + 'px ' + -rect[1] + 'px';
      if (!ignoreBorder && data.borderStyle.width > 0) {
        container.style.borderWidth = data.borderStyle.width + 'px';
        if (data.borderStyle.style !== _util.AnnotationBorderStyleType.UNDERLINE) {
          width = width - 2 * data.borderStyle.width;
          height = height - 2 * data.borderStyle.width;
        }
        var horizontalRadius = data.borderStyle.horizontalCornerRadius;
        var verticalRadius = data.borderStyle.verticalCornerRadius;
        if (horizontalRadius > 0 || verticalRadius > 0) {
          var radius = horizontalRadius + 'px / ' + verticalRadius + 'px';
          container.style.borderRadius = radius;
        }
        switch (data.borderStyle.style) {
          case _util.AnnotationBorderStyleType.SOLID:
            container.style.borderStyle = 'solid';
            break;
          case _util.AnnotationBorderStyleType.DASHED:
            container.style.borderStyle = 'dashed';
            break;
          case _util.AnnotationBorderStyleType.BEVELED:
            (0, _util.warn)('Unimplemented border style: beveled');
            break;
          case _util.AnnotationBorderStyleType.INSET:
            (0, _util.warn)('Unimplemented border style: inset');
            break;
          case _util.AnnotationBorderStyleType.UNDERLINE:
            container.style.borderBottomStyle = 'solid';
            break;
          default:
            break;
        }
        if (data.color) {
          container.style.borderColor = _util.Util.makeCssRgb(data.color[0] | 0, data.color[1] | 0, data.color[2] | 0);
        } else {
          container.style.borderWidth = 0;
        }
      }
      container.style.left = rect[0] + 'px';
      container.style.top = rect[1] + 'px';
      container.style.width = width + 'px';
      container.style.height = height + 'px';
      return container;
    }
  }, {
    key: '_createPopup',
    value: function _createPopup(container, trigger, data) {
      if (!trigger) {
        trigger = document.createElement('div');
        trigger.style.height = container.style.height;
        trigger.style.width = container.style.width;
        container.appendChild(trigger);
      }
      var popupElement = new PopupElement({
        container: container,
        trigger: trigger,
        color: data.color,
        title: data.title,
        contents: data.contents,
        hideWrapper: true
      });
      var popup = popupElement.render();
      popup.style.left = container.style.width;
      container.appendChild(popup);
    }
  }, {
    key: 'render',
    value: function render() {
      (0, _util.unreachable)('Abstract method `AnnotationElement.render` called');
    }
  }]);

  return AnnotationElement;
}();

var LinkAnnotationElement = function (_AnnotationElement) {
  _inherits(LinkAnnotationElement, _AnnotationElement);

  function LinkAnnotationElement(parameters) {
    _classCallCheck(this, LinkAnnotationElement);

    var isRenderable = !!(parameters.data.url || parameters.data.dest || parameters.data.action);
    return _possibleConstructorReturn(this, (LinkAnnotationElement.__proto__ || Object.getPrototypeOf(LinkAnnotationElement)).call(this, parameters, isRenderable));
  }

  _createClass(LinkAnnotationElement, [{
    key: 'render',
    value: function render() {
      this.container.className = 'linkAnnotation';
      var data = this.data,
          linkService = this.linkService;

      var link = document.createElement('a');
      (0, _dom_utils.addLinkAttributes)(link, {
        url: data.url,
        target: data.newWindow ? _dom_utils.LinkTarget.BLANK : linkService.externalLinkTarget,
        rel: linkService.externalLinkRel
      });
      if (!data.url) {
        if (data.action) {
          this._bindNamedAction(link, data.action);
        } else {
          this._bindLink(link, data.dest);
        }
      }
      this.container.appendChild(link);
      return this.container;
    }
  }, {
    key: '_bindLink',
    value: function _bindLink(link, destination) {
      var _this2 = this;

      link.href = this.linkService.getDestinationHash(destination);
      link.onclick = function () {
        if (destination) {
          _this2.linkService.navigateTo(destination);
        }
        return false;
      };
      if (destination) {
        link.className = 'internalLink';
      }
    }
  }, {
    key: '_bindNamedAction',
    value: function _bindNamedAction(link, action) {
      var _this3 = this;

      link.href = this.linkService.getAnchorUrl('');
      link.onclick = function () {
        _this3.linkService.executeNamedAction(action);
        return false;
      };
      link.className = 'internalLink';
    }
  }]);

  return LinkAnnotationElement;
}(AnnotationElement);

var TextAnnotationElement = function (_AnnotationElement2) {
  _inherits(TextAnnotationElement, _AnnotationElement2);

  function TextAnnotationElement(parameters) {
    _classCallCheck(this, TextAnnotationElement);

    var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);
    return _possibleConstructorReturn(this, (TextAnnotationElement.__proto__ || Object.getPrototypeOf(TextAnnotationElement)).call(this, parameters, isRenderable));
  }

  _createClass(TextAnnotationElement, [{
    key: 'render',
    value: function render() {
      this.container.className = 'textAnnotation';
      var image = document.createElement('img');
      image.style.height = this.container.style.height;
      image.style.width = this.container.style.width;
      image.src = this.imageResourcesPath + 'annotation-' + this.data.name.toLowerCase() + '.svg';
      image.alt = '[{{type}} Annotation]';
      image.dataset.l10nId = 'text_annotation_type';
      image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });
      if (!this.data.hasPopup) {
        this._createPopup(this.container, image, this.data);
      }
      this.container.appendChild(image);
      return this.container;
    }
  }]);

  return TextAnnotationElement;
}(AnnotationElement);

var WidgetAnnotationElement = function (_AnnotationElement3) {
  _inherits(WidgetAnnotationElement, _AnnotationElement3);

  function WidgetAnnotationElement() {
    _classCallCheck(this, WidgetAnnotationElement);

    return _possibleConstructorReturn(this, (WidgetAnnotationElement.__proto__ || Object.getPrototypeOf(WidgetAnnotationElement)).apply(this, arguments));
  }

  _createClass(WidgetAnnotationElement, [{
    key: 'render',
    value: function render() {
      return this.container;
    }
  }]);

  return WidgetAnnotationElement;
}(AnnotationElement);

var TextWidgetAnnotationElement = function (_WidgetAnnotationElem) {
  _inherits(TextWidgetAnnotationElement, _WidgetAnnotationElem);

  function TextWidgetAnnotationElement(parameters) {
    _classCallCheck(this, TextWidgetAnnotationElement);

    var isRenderable = parameters.renderInteractiveForms || !parameters.data.hasAppearance && !!parameters.data.fieldValue;
    return _possibleConstructorReturn(this, (TextWidgetAnnotationElement.__proto__ || Object.getPrototypeOf(TextWidgetAnnotationElement)).call(this, parameters, isRenderable));
  }

  _createClass(TextWidgetAnnotationElement, [{
    key: 'render',
    value: function render() {
      var TEXT_ALIGNMENT = ['left', 'center', 'right'];
      this.container.className = 'textWidgetAnnotation';
      var element = null;
      if (this.renderInteractiveForms) {
        if (this.data.multiLine) {
          element = document.createElement('textarea');
          element.textContent = this.data.fieldValue;
        } else {
          element = document.createElement('input');
          element.type = 'text';
          element.setAttribute('value', this.data.fieldValue);
        }
        element.disabled = this.data.readOnly;
        if (this.data.maxLen !== null) {
          element.maxLength = this.data.maxLen;
        }
        if (this.data.comb) {
          var fieldWidth = this.data.rect[2] - this.data.rect[0];
          var combWidth = fieldWidth / this.data.maxLen;
          element.classList.add('comb');
          element.style.letterSpacing = 'calc(' + combWidth + 'px - 1ch)';
        }
      } else {
        element = document.createElement('div');
        element.textContent = this.data.fieldValue;
        element.style.verticalAlign = 'middle';
        element.style.display = 'table-cell';
        var font = null;
        if (this.data.fontRefName) {
          font = this.page.commonObjs.getData(this.data.fontRefName);
        }
        this._setTextStyle(element, font);
      }
      if (this.data.textAlignment !== null) {
        element.style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];
      }
      this.container.appendChild(element);
      return this.container;
    }
  }, {
    key: '_setTextStyle',
    value: function _setTextStyle(element, font) {
      var style = element.style;
      style.fontSize = this.data.fontSize + 'px';
      style.direction = this.data.fontDirection < 0 ? 'rtl' : 'ltr';
      if (!font) {
        return;
      }
      style.fontWeight = font.black ? font.bold ? '900' : 'bold' : font.bold ? 'bold' : 'normal';
      style.fontStyle = font.italic ? 'italic' : 'normal';
      var fontFamily = font.loadedName ? '"' + font.loadedName + '", ' : '';
      var fallbackName = font.fallbackName || 'Helvetica, sans-serif';
      style.fontFamily = fontFamily + fallbackName;
    }
  }]);

  return TextWidgetAnnotationElement;
}(WidgetAnnotationElement);

var CheckboxWidgetAnnotationElement = function (_WidgetAnnotationElem2) {
  _inherits(CheckboxWidgetAnnotationElement, _WidgetAnnotationElem2);

  function CheckboxWidgetAnnotationElement(parameters) {
    _classCallCheck(this, CheckboxWidgetAnnotationElement);

    return _possibleConstructorReturn(this, (CheckboxWidgetAnnotationElement.__proto__ || Object.getPrototypeOf(CheckboxWidgetAnnotationElement)).call(this, parameters, parameters.renderInteractiveForms));
  }

  _createClass(CheckboxWidgetAnnotationElement, [{
    key: 'render',
    value: function render() {
      this.container.className = 'buttonWidgetAnnotation checkBox';
      var element = document.createElement('input');
      element.disabled = this.data.readOnly;
      element.type = 'checkbox';
      if (this.data.fieldValue && this.data.fieldValue !== 'Off') {
        element.setAttribute('checked', true);
      }
      this.container.appendChild(element);
      return this.container;
    }
  }]);

  return CheckboxWidgetAnnotationElement;
}(WidgetAnnotationElement);

var RadioButtonWidgetAnnotationElement = function (_WidgetAnnotationElem3) {
  _inherits(RadioButtonWidgetAnnotationElement, _WidgetAnnotationElem3);

  function RadioButtonWidgetAnnotationElement(parameters) {
    _classCallCheck(this, RadioButtonWidgetAnnotationElement);

    return _possibleConstructorReturn(this, (RadioButtonWidgetAnnotationElement.__proto__ || Object.getPrototypeOf(RadioButtonWidgetAnnotationElement)).call(this, parameters, parameters.renderInteractiveForms));
  }

  _createClass(RadioButtonWidgetAnnotationElement, [{
    key: 'render',
    value: function render() {
      this.container.className = 'buttonWidgetAnnotation radioButton';
      var element = document.createElement('input');
      element.disabled = this.data.readOnly;
      element.type = 'radio';
      element.name = this.data.fieldName;
      if (this.data.fieldValue === this.data.buttonValue) {
        element.setAttribute('checked', true);
      }
      this.container.appendChild(element);
      return this.container;
    }
  }]);

  return RadioButtonWidgetAnnotationElement;
}(WidgetAnnotationElement);

var PushButtonWidgetAnnotationElement = function (_LinkAnnotationElemen) {
  _inherits(PushButtonWidgetAnnotationElement, _LinkAnnotationElemen);

  function PushButtonWidgetAnnotationElement() {
    _classCallCheck(this, PushButtonWidgetAnnotationElement);

    return _possibleConstructorReturn(this, (PushButtonWidgetAnnotationElement.__proto__ || Object.getPrototypeOf(PushButtonWidgetAnnotationElement)).apply(this, arguments));
  }

  _createClass(PushButtonWidgetAnnotationElement, [{
    key: 'render',
    value: function render() {
      var container = _get(PushButtonWidgetAnnotationElement.prototype.__proto__ || Object.getPrototypeOf(PushButtonWidgetAnnotationElement.prototype), 'render', this).call(this);
      container.className = 'buttonWidgetAnnotation pushButton';
      return container;
    }
  }]);

  return PushButtonWidgetAnnotationElement;
}(LinkAnnotationElement);

var ChoiceWidgetAnnotationElement = function (_WidgetAnnotationElem4) {
  _inherits(ChoiceWidgetAnnotationElement, _WidgetAnnotationElem4);

  function ChoiceWidgetAnnotationElement(parameters) {
    _classCallCheck(this, ChoiceWidgetAnnotationElement);

    return _possibleConstructorReturn(this, (ChoiceWidgetAnnotationElement.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotationElement)).call(this, parameters, parameters.renderInteractiveForms));
  }

  _createClass(ChoiceWidgetAnnotationElement, [{
    key: 'render',
    value: function render() {
      this.container.className = 'choiceWidgetAnnotation';
      var selectElement = document.createElement('select');
      selectElement.disabled = this.data.readOnly;
      if (!this.data.combo) {
        selectElement.size = this.data.options.length;
        if (this.data.multiSelect) {
          selectElement.multiple = true;
        }
      }
      for (var i = 0, ii = this.data.options.length; i < ii; i++) {
        var option = this.data.options[i];
        var optionElement = document.createElement('option');
        optionElement.textContent = option.displayValue;
        optionElement.value = option.exportValue;
        if (this.data.fieldValue.includes(option.displayValue)) {
          optionElement.setAttribute('selected', true);
        }
        selectElement.appendChild(optionElement);
      }
      this.container.appendChild(selectElement);
      return this.container;
    }
  }]);

  return ChoiceWidgetAnnotationElement;
}(WidgetAnnotationElement);

var PopupAnnotationElement = function (_AnnotationElement4) {
  _inherits(PopupAnnotationElement, _AnnotationElement4);

  function PopupAnnotationElement(parameters) {
    _classCallCheck(this, PopupAnnotationElement);

    var isRenderable = !!(parameters.data.title || parameters.data.contents);
    return _possibleConstructorReturn(this, (PopupAnnotationElement.__proto__ || Object.getPrototypeOf(PopupAnnotationElement)).call(this, parameters, isRenderable));
  }

  _createClass(PopupAnnotationElement, [{
    key: 'render',
    value: function render() {
      var IGNORE_TYPES = ['Line', 'Square', 'Circle', 'PolyLine', 'Polygon', 'Ink'];
      this.container.className = 'popupAnnotation';
      if (IGNORE_TYPES.includes(this.data.parentType)) {
        return this.container;
      }
      var selector = '[data-annotation-id="' + this.data.parentId + '"]';
      var parentElement = this.layer.querySelector(selector);
      if (!parentElement) {
        return this.container;
      }
      var popup = new PopupElement({
        container: this.container,
        trigger: parentElement,
        color: this.data.color,
        title: this.data.title,
        contents: this.data.contents
      });
      var parentLeft = parseFloat(parentElement.style.left);
      var parentWidth = parseFloat(parentElement.style.width);
      this.container.style.transformOrigin = -(parentLeft + parentWidth) + 'px -' + parentElement.style.top;
      this.container.style.left = parentLeft + parentWidth + 'px';
      this.container.appendChild(popup.render());
      return this.container;
    }
  }]);

  return PopupAnnotationElement;
}(AnnotationElement);

var PopupElement = function () {
  function PopupElement(parameters) {
    _classCallCheck(this, PopupElement);

    this.container = parameters.container;
    this.trigger = parameters.trigger;
    this.color = parameters.color;
    this.title = parameters.title;
    this.contents = parameters.contents;
    this.hideWrapper = parameters.hideWrapper || false;
    this.pinned = false;
  }

  _createClass(PopupElement, [{
    key: 'render',
    value: function render() {
      var BACKGROUND_ENLIGHT = 0.7;
      var wrapper = document.createElement('div');
      wrapper.className = 'popupWrapper';
      this.hideElement = this.hideWrapper ? wrapper : this.container;
      this.hideElement.setAttribute('hidden', true);
      var popup = document.createElement('div');
      popup.className = 'popup';
      var color = this.color;
      if (color) {
        var r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];
        var g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];
        var b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];
        popup.style.backgroundColor = _util.Util.makeCssRgb(r | 0, g | 0, b | 0);
      }
      var contents = this._formatContents(this.contents);
      var title = document.createElement('h1');
      title.textContent = this.title;
      this.trigger.addEventListener('click', this._toggle.bind(this));
      this.trigger.addEventListener('mouseover', this._show.bind(this, false));
      this.trigger.addEventListener('mouseout', this._hide.bind(this, false));
      popup.addEventListener('click', this._hide.bind(this, true));
      popup.appendChild(title);
      popup.appendChild(contents);
      wrapper.appendChild(popup);
      return wrapper;
    }
  }, {
    key: '_formatContents',
    value: function _formatContents(contents) {
      var p = document.createElement('p');
      var lines = contents.split(/(?:\r\n?|\n)/);
      for (var i = 0, ii = lines.length; i < ii; ++i) {
        var line = lines[i];
        p.appendChild(document.createTextNode(line));
        if (i < ii - 1) {
          p.appendChild(document.createElement('br'));
        }
      }
      return p;
    }
  }, {
    key: '_toggle',
    value: function _toggle() {
      if (this.pinned) {
        this._hide(true);
      } else {
        this._show(true);
      }
    }
  }, {
    key: '_show',
    value: function _show() {
      var pin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

      if (pin) {
        this.pinned = true;
      }
      if (this.hideElement.hasAttribute('hidden')) {
        this.hideElement.removeAttribute('hidden');
        this.container.style.zIndex += 1;
      }
    }
  }, {
    key: '_hide',
    value: function _hide() {
      var unpin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

      if (unpin) {
        this.pinned = false;
      }
      if (!this.hideElement.hasAttribute('hidden') && !this.pinned) {
        this.hideElement.setAttribute('hidden', true);
        this.container.style.zIndex -= 1;
      }
    }
  }]);

  return PopupElement;
}();

var LineAnnotationElement = function (_AnnotationElement5) {
  _inherits(LineAnnotationElement, _AnnotationElement5);

  function LineAnnotationElement(parameters) {
    _classCallCheck(this, LineAnnotationElement);

    var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);
    return _possibleConstructorReturn(this, (LineAnnotationElement.__proto__ || Object.getPrototypeOf(LineAnnotationElement)).call(this, parameters, isRenderable, true));
  }

  _createClass(LineAnnotationElement, [{
    key: 'render',
    value: function render() {
      this.container.className = 'lineAnnotation';
      var data = this.data;
      var width = data.rect[2] - data.rect[0];
      var height = data.rect[3] - data.rect[1];
      var svg = this.svgFactory.create(width, height);
      var line = this.svgFactory.createElement('svg:line');
      line.setAttribute('x1', data.rect[2] - data.lineCoordinates[0]);
      line.setAttribute('y1', data.rect[3] - data.lineCoordinates[1]);
      line.setAttribute('x2', data.rect[2] - data.lineCoordinates[2]);
      line.setAttribute('y2', data.rect[3] - data.lineCoordinates[3]);
      line.setAttribute('stroke-width', data.borderStyle.width);
      line.setAttribute('stroke', 'transparent');
      svg.appendChild(line);
      this.container.append(svg);
      this._createPopup(this.container, line, data);
      return this.container;
    }
  }]);

  return LineAnnotationElement;
}(AnnotationElement);

var SquareAnnotationElement = function (_AnnotationElement6) {
  _inherits(SquareAnnotationElement, _AnnotationElement6);

  function SquareAnnotationElement(parameters) {
    _classCallCheck(this, SquareAnnotationElement);

    var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);
    return _possibleConstructorReturn(this, (SquareAnnotationElement.__proto__ || Object.getPrototypeOf(SquareAnnotationElement)).call(this, parameters, isRenderable, true));
  }

  _createClass(SquareAnnotationElement, [{
    key: 'render',
    value: function render() {
      this.container.className = 'squareAnnotation';
      var data = this.data;
      var width = data.rect[2] - data.rect[0];
      var height = data.rect[3] - data.rect[1];
      var svg = this.svgFactory.create(width, height);
      var borderWidth = data.borderStyle.width;
      var square = this.svgFactory.createElement('svg:rect');
      square.setAttribute('x', borderWidth / 2);
      square.setAttribute('y', borderWidth / 2);
      square.setAttribute('width', width - borderWidth);
      square.setAttribute('height', height - borderWidth);
      square.setAttribute('stroke-width', borderWidth);
      square.setAttribute('stroke', 'transparent');
      square.setAttribute('fill', 'none');
      svg.appendChild(square);
      this.container.append(svg);
      this._createPopup(this.container, square, data);
      return this.container;
    }
  }]);

  return SquareAnnotationElement;
}(AnnotationElement);

var CircleAnnotationElement = function (_AnnotationElement7) {
  _inherits(CircleAnnotationElement, _AnnotationElement7);

  function CircleAnnotationElement(parameters) {
    _classCallCheck(this, CircleAnnotationElement);

    var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);
    return _possibleConstructorReturn(this, (CircleAnnotationElement.__proto__ || Object.getPrototypeOf(CircleAnnotationElement)).call(this, parameters, isRenderable, true));
  }

  _createClass(CircleAnnotationElement, [{
    key: 'render',
    value: function render() {
      this.container.className = 'circleAnnotation';
      var data = this.data;
      var width = data.rect[2] - data.rect[0];
      var height = data.rect[3] - data.rect[1];
      var svg = this.svgFactory.create(width, height);
      var borderWidth = data.borderStyle.width;
      var circle = this.svgFactory.createElement('svg:ellipse');
      circle.setAttribute('cx', width / 2);
      circle.setAttribute('cy', height / 2);
      circle.setAttribute('rx', width / 2 - borderWidth / 2);
      circle.setAttribute('ry', height / 2 - borderWidth / 2);
      circle.setAttribute('stroke-width', borderWidth);
      circle.setAttribute('stroke', 'transparent');
      circle.setAttribute('fill', 'none');
      svg.appendChild(circle);
      this.container.append(svg);
      this._createPopup(this.container, circle, data);
      return this.container;
    }
  }]);

  return CircleAnnotationElement;
}(AnnotationElement);

var PolylineAnnotationElement = function (_AnnotationElement8) {
  _inherits(PolylineAnnotationElement, _AnnotationElement8);

  function PolylineAnnotationElement(parameters) {
    _classCallCheck(this, PolylineAnnotationElement);

    var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);

    var _this15 = _possibleConstructorReturn(this, (PolylineAnnotationElement.__proto__ || Object.getPrototypeOf(PolylineAnnotationElement)).call(this, parameters, isRenderable, true));

    _this15.containerClassName = 'polylineAnnotation';
    _this15.svgElementName = 'svg:polyline';
    return _this15;
  }

  _createClass(PolylineAnnotationElement, [{
    key: 'render',
    value: function render() {
      this.container.className = this.containerClassName;
      var data = this.data;
      var width = data.rect[2] - data.rect[0];
      var height = data.rect[3] - data.rect[1];
      var svg = this.svgFactory.create(width, height);
      var vertices = data.vertices;
      var points = [];
      for (var i = 0, ii = vertices.length; i < ii; i++) {
        var x = vertices[i].x - data.rect[0];
        var y = data.rect[3] - vertices[i].y;
        points.push(x + ',' + y);
      }
      points = points.join(' ');
      var borderWidth = data.borderStyle.width;
      var polyline = this.svgFactory.createElement(this.svgElementName);
      polyline.setAttribute('points', points);
      polyline.setAttribute('stroke-width', borderWidth);
      polyline.setAttribute('stroke', 'transparent');
      polyline.setAttribute('fill', 'none');
      svg.appendChild(polyline);
      this.container.append(svg);
      this._createPopup(this.container, polyline, data);
      return this.container;
    }
  }]);

  return PolylineAnnotationElement;
}(AnnotationElement);

var PolygonAnnotationElement = function (_PolylineAnnotationEl) {
  _inherits(PolygonAnnotationElement, _PolylineAnnotationEl);

  function PolygonAnnotationElement(parameters) {
    _classCallCheck(this, PolygonAnnotationElement);

    var _this16 = _possibleConstructorReturn(this, (PolygonAnnotationElement.__proto__ || Object.getPrototypeOf(PolygonAnnotationElement)).call(this, parameters));

    _this16.containerClassName = 'polygonAnnotation';
    _this16.svgElementName = 'svg:polygon';
    return _this16;
  }

  return PolygonAnnotationElement;
}(PolylineAnnotationElement);

var InkAnnotationElement = function (_AnnotationElement9) {
  _inherits(InkAnnotationElement, _AnnotationElement9);

  function InkAnnotationElement(parameters) {
    _classCallCheck(this, InkAnnotationElement);

    var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);

    var _this17 = _possibleConstructorReturn(this, (InkAnnotationElement.__proto__ || Object.getPrototypeOf(InkAnnotationElement)).call(this, parameters, isRenderable, true));

    _this17.containerClassName = 'inkAnnotation';
    _this17.svgElementName = 'svg:polyline';
    return _this17;
  }

  _createClass(InkAnnotationElement, [{
    key: 'render',
    value: function render() {
      this.container.className = this.containerClassName;
      var data = this.data;
      var width = data.rect[2] - data.rect[0];
      var height = data.rect[3] - data.rect[1];
      var svg = this.svgFactory.create(width, height);
      var inkLists = data.inkLists;
      for (var i = 0, ii = inkLists.length; i < ii; i++) {
        var inkList = inkLists[i];
        var points = [];
        for (var j = 0, jj = inkList.length; j < jj; j++) {
          var x = inkList[j].x - data.rect[0];
          var y = data.rect[3] - inkList[j].y;
          points.push(x + ',' + y);
        }
        points = points.join(' ');
        var borderWidth = data.borderStyle.width;
        var polyline = this.svgFactory.createElement(this.svgElementName);
        polyline.setAttribute('points', points);
        polyline.setAttribute('stroke-width', borderWidth);
        polyline.setAttribute('stroke', 'transparent');
        polyline.setAttribute('fill', 'none');
        this._createPopup(this.container, polyline, data);
        svg.appendChild(polyline);
      }
      this.container.append(svg);
      return this.container;
    }
  }]);

  return InkAnnotationElement;
}(AnnotationElement);

var HighlightAnnotationElement = function (_AnnotationElement10) {
  _inherits(HighlightAnnotationElement, _AnnotationElement10);

  function HighlightAnnotationElement(parameters) {
    _classCallCheck(this, HighlightAnnotationElement);

    var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);
    return _possibleConstructorReturn(this, (HighlightAnnotationElement.__proto__ || Object.getPrototypeOf(HighlightAnnotationElement)).call(this, parameters, isRenderable, true));
  }

  _createClass(HighlightAnnotationElement, [{
    key: 'render',
    value: function render() {
      this.container.className = 'highlightAnnotation';
      if (!this.data.hasPopup) {
        this._createPopup(this.container, null, this.data);
      }
      return this.container;
    }
  }]);

  return HighlightAnnotationElement;
}(AnnotationElement);

var UnderlineAnnotationElement = function (_AnnotationElement11) {
  _inherits(UnderlineAnnotationElement, _AnnotationElement11);

  function UnderlineAnnotationElement(parameters) {
    _classCallCheck(this, UnderlineAnnotationElement);

    var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);
    return _possibleConstructorReturn(this, (UnderlineAnnotationElement.__proto__ || Object.getPrototypeOf(UnderlineAnnotationElement)).call(this, parameters, isRenderable, true));
  }

  _createClass(UnderlineAnnotationElement, [{
    key: 'render',
    value: function render() {
      this.container.className = 'underlineAnnotation';
      if (!this.data.hasPopup) {
        this._createPopup(this.container, null, this.data);
      }
      return this.container;
    }
  }]);

  return UnderlineAnnotationElement;
}(AnnotationElement);

var SquigglyAnnotationElement = function (_AnnotationElement12) {
  _inherits(SquigglyAnnotationElement, _AnnotationElement12);

  function SquigglyAnnotationElement(parameters) {
    _classCallCheck(this, SquigglyAnnotationElement);

    var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);
    return _possibleConstructorReturn(this, (SquigglyAnnotationElement.__proto__ || Object.getPrototypeOf(SquigglyAnnotationElement)).call(this, parameters, isRenderable, true));
  }

  _createClass(SquigglyAnnotationElement, [{
    key: 'render',
    value: function render() {
      this.container.className = 'squigglyAnnotation';
      if (!this.data.hasPopup) {
        this._createPopup(this.container, null, this.data);
      }
      return this.container;
    }
  }]);

  return SquigglyAnnotationElement;
}(AnnotationElement);

var StrikeOutAnnotationElement = function (_AnnotationElement13) {
  _inherits(StrikeOutAnnotationElement, _AnnotationElement13);

  function StrikeOutAnnotationElement(parameters) {
    _classCallCheck(this, StrikeOutAnnotationElement);

    var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);
    return _possibleConstructorReturn(this, (StrikeOutAnnotationElement.__proto__ || Object.getPrototypeOf(StrikeOutAnnotationElement)).call(this, parameters, isRenderable, true));
  }

  _createClass(StrikeOutAnnotationElement, [{
    key: 'render',
    value: function render() {
      this.container.className = 'strikeoutAnnotation';
      if (!this.data.hasPopup) {
        this._createPopup(this.container, null, this.data);
      }
      return this.container;
    }
  }]);

  return StrikeOutAnnotationElement;
}(AnnotationElement);

var StampAnnotationElement = function (_AnnotationElement14) {
  _inherits(StampAnnotationElement, _AnnotationElement14);

  function StampAnnotationElement(parameters) {
    _classCallCheck(this, StampAnnotationElement);

    var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);
    return _possibleConstructorReturn(this, (StampAnnotationElement.__proto__ || Object.getPrototypeOf(StampAnnotationElement)).call(this, parameters, isRenderable, true));
  }

  _createClass(StampAnnotationElement, [{
    key: 'render',
    value: function render() {
      this.container.className = 'stampAnnotation';
      if (!this.data.hasPopup) {
        this._createPopup(this.container, null, this.data);
      }
      return this.container;
    }
  }]);

  return StampAnnotationElement;
}(AnnotationElement);

var FileAttachmentAnnotationElement = function (_AnnotationElement15) {
  _inherits(FileAttachmentAnnotationElement, _AnnotationElement15);

  function FileAttachmentAnnotationElement(parameters) {
    _classCallCheck(this, FileAttachmentAnnotationElement);

    var _this23 = _possibleConstructorReturn(this, (FileAttachmentAnnotationElement.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotationElement)).call(this, parameters, true));

    var _this23$data$file = _this23.data.file,
        filename = _this23$data$file.filename,
        content = _this23$data$file.content;

    _this23.filename = (0, _dom_utils.getFilenameFromUrl)(filename);
    _this23.content = content;
    if (_this23.linkService.eventBus) {
      _this23.linkService.eventBus.dispatch('fileattachmentannotation', {
        source: _this23,
        id: (0, _util.stringToPDFString)(filename),
        filename: filename,
        content: content
      });
    }
    return _this23;
  }

  _createClass(FileAttachmentAnnotationElement, [{
    key: 'render',
    value: function render() {
      this.container.className = 'fileAttachmentAnnotation';
      var trigger = document.createElement('div');
      trigger.style.height = this.container.style.height;
      trigger.style.width = this.container.style.width;
      trigger.addEventListener('dblclick', this._download.bind(this));
      if (!this.data.hasPopup && (this.data.title || this.data.contents)) {
        this._createPopup(this.container, trigger, this.data);
      }
      this.container.appendChild(trigger);
      return this.container;
    }
  }, {
    key: '_download',
    value: function _download() {
      if (!this.downloadManager) {
        (0, _util.warn)('Download cannot be started due to unavailable download manager');
        return;
      }
      this.downloadManager.downloadData(this.content, this.filename, '');
    }
  }]);

  return FileAttachmentAnnotationElement;
}(AnnotationElement);

var AnnotationLayer = function () {
  function AnnotationLayer() {
    _classCallCheck(this, AnnotationLayer);
  }

  _createClass(AnnotationLayer, null, [{
    key: 'render',
    value: function render(parameters) {
      for (var i = 0, ii = parameters.annotations.length; i < ii; i++) {
        var data = parameters.annotations[i];
        if (!data) {
          continue;
        }
        var element = AnnotationElementFactory.create({
          data: data,
          layer: parameters.div,
          page: parameters.page,
          viewport: parameters.viewport,
          linkService: parameters.linkService,
          downloadManager: parameters.downloadManager,
          imageResourcesPath: parameters.imageResourcesPath || '',
          renderInteractiveForms: parameters.renderInteractiveForms || false,
          svgFactory: new _dom_utils.DOMSVGFactory()
        });
        if (element.isRenderable) {
          parameters.div.appendChild(element.render());
        }
      }
    }
  }, {
    key: 'update',
    value: function update(parameters) {
      for (var i = 0, ii = parameters.annotations.length; i < ii; i++) {
        var data = parameters.annotations[i];
        var element = parameters.div.querySelector('[data-annotation-id="' + data.id + '"]');
        if (element) {
          element.style.transform = 'matrix(' + parameters.viewport.transform.join(',') + ')';
        }
      }
      parameters.div.removeAttribute('hidden');
    }
  }]);

  return AnnotationLayer;
}();

exports.AnnotationLayer = AnnotationLayer;

/***/ }),
/* 147 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SVGGraphics = undefined;

var _util = __w_pdfjs_require__(1);

var _dom_utils = __w_pdfjs_require__(130);

var _is_node = __w_pdfjs_require__(4);

var _is_node2 = _interopRequireDefault(_is_node);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SVGGraphics = function SVGGraphics() {
  throw new Error('Not implemented: SVGGraphics');
};
{
  var SVG_DEFAULTS = {
    fontStyle: 'normal',
    fontWeight: 'normal',
    fillColor: '#000000'
  };
  var convertImgDataToPng = function convertImgDataToPngClosure() {
    var PNG_HEADER = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);
    var CHUNK_WRAPPER_SIZE = 12;
    var crcTable = new Int32Array(256);
    for (var i = 0; i < 256; i++) {
      var c = i;
      for (var h = 0; h < 8; h++) {
        if (c & 1) {
          c = 0xedB88320 ^ c >> 1 & 0x7fffffff;
        } else {
          c = c >> 1 & 0x7fffffff;
        }
      }
      crcTable[i] = c;
    }
    function crc32(data, start, end) {
      var crc = -1;
      for (var i = start; i < end; i++) {
        var a = (crc ^ data[i]) & 0xff;
        var b = crcTable[a];
        crc = crc >>> 8 ^ b;
      }
      return crc ^ -1;
    }
    function writePngChunk(type, body, data, offset) {
      var p = offset;
      var len = body.length;
      data[p] = len >> 24 & 0xff;
      data[p + 1] = len >> 16 & 0xff;
      data[p + 2] = len >> 8 & 0xff;
      data[p + 3] = len & 0xff;
      p += 4;
      data[p] = type.charCodeAt(0) & 0xff;
      data[p + 1] = type.charCodeAt(1) & 0xff;
      data[p + 2] = type.charCodeAt(2) & 0xff;
      data[p + 3] = type.charCodeAt(3) & 0xff;
      p += 4;
      data.set(body, p);
      p += body.length;
      var crc = crc32(data, offset + 4, p);
      data[p] = crc >> 24 & 0xff;
      data[p + 1] = crc >> 16 & 0xff;
      data[p + 2] = crc >> 8 & 0xff;
      data[p + 3] = crc & 0xff;
    }
    function adler32(data, start, end) {
      var a = 1;
      var b = 0;
      for (var i = start; i < end; ++i) {
        a = (a + (data[i] & 0xff)) % 65521;
        b = (b + a) % 65521;
      }
      return b << 16 | a;
    }
    function deflateSync(literals) {
      if (!(0, _is_node2.default)()) {
        return deflateSyncUncompressed(literals);
      }
      try {
        var input;
        if (parseInt(process.versions.node) >= 8) {
          input = literals;
        } else {
          input = new Buffer(literals);
        }
        var output = __webpack_require__(/*! zlib */ 1).deflateSync(input, { level: 9 });
        return output instanceof Uint8Array ? output : new Uint8Array(output);
      } catch (e) {
        (0, _util.warn)('Not compressing PNG because zlib.deflateSync is unavailable: ' + e);
      }
      return deflateSyncUncompressed(literals);
    }
    function deflateSyncUncompressed(literals) {
      var len = literals.length;
      var maxBlockLength = 0xFFFF;
      var deflateBlocks = Math.ceil(len / maxBlockLength);
      var idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);
      var pi = 0;
      idat[pi++] = 0x78;
      idat[pi++] = 0x9c;
      var pos = 0;
      while (len > maxBlockLength) {
        idat[pi++] = 0x00;
        idat[pi++] = 0xff;
        idat[pi++] = 0xff;
        idat[pi++] = 0x00;
        idat[pi++] = 0x00;
        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);
        pi += maxBlockLength;
        pos += maxBlockLength;
        len -= maxBlockLength;
      }
      idat[pi++] = 0x01;
      idat[pi++] = len & 0xff;
      idat[pi++] = len >> 8 & 0xff;
      idat[pi++] = ~len & 0xffff & 0xff;
      idat[pi++] = (~len & 0xffff) >> 8 & 0xff;
      idat.set(literals.subarray(pos), pi);
      pi += literals.length - pos;
      var adler = adler32(literals, 0, literals.length);
      idat[pi++] = adler >> 24 & 0xff;
      idat[pi++] = adler >> 16 & 0xff;
      idat[pi++] = adler >> 8 & 0xff;
      idat[pi++] = adler & 0xff;
      return idat;
    }
    function encode(imgData, kind, forceDataSchema, isMask) {
      var width = imgData.width;
      var height = imgData.height;
      var bitDepth, colorType, lineSize;
      var bytes = imgData.data;
      switch (kind) {
        case _util.ImageKind.GRAYSCALE_1BPP:
          colorType = 0;
          bitDepth = 1;
          lineSize = width + 7 >> 3;
          break;
        case _util.ImageKind.RGB_24BPP:
          colorType = 2;
          bitDepth = 8;
          lineSize = width * 3;
          break;
        case _util.ImageKind.RGBA_32BPP:
          colorType = 6;
          bitDepth = 8;
          lineSize = width * 4;
          break;
        default:
          throw new Error('invalid format');
      }
      var literals = new Uint8Array((1 + lineSize) * height);
      var offsetLiterals = 0,
          offsetBytes = 0;
      var y, i;
      for (y = 0; y < height; ++y) {
        literals[offsetLiterals++] = 0;
        literals.set(bytes.subarray(offsetBytes, offsetBytes + lineSize), offsetLiterals);
        offsetBytes += lineSize;
        offsetLiterals += lineSize;
      }
      if (kind === _util.ImageKind.GRAYSCALE_1BPP && isMask) {
        offsetLiterals = 0;
        for (y = 0; y < height; y++) {
          offsetLiterals++;
          for (i = 0; i < lineSize; i++) {
            literals[offsetLiterals++] ^= 0xFF;
          }
        }
      }
      var ihdr = new Uint8Array([width >> 24 & 0xff, width >> 16 & 0xff, width >> 8 & 0xff, width & 0xff, height >> 24 & 0xff, height >> 16 & 0xff, height >> 8 & 0xff, height & 0xff, bitDepth, colorType, 0x00, 0x00, 0x00]);
      var idat = deflateSync(literals);
      var pngLength = PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;
      var data = new Uint8Array(pngLength);
      var offset = 0;
      data.set(PNG_HEADER, offset);
      offset += PNG_HEADER.length;
      writePngChunk('IHDR', ihdr, data, offset);
      offset += CHUNK_WRAPPER_SIZE + ihdr.length;
      writePngChunk('IDATA', idat, data, offset);
      offset += CHUNK_WRAPPER_SIZE + idat.length;
      writePngChunk('IEND', new Uint8Array(0), data, offset);
      return (0, _util.createObjectURL)(data, 'image/png', forceDataSchema);
    }
    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {
      var kind = imgData.kind === undefined ? _util.ImageKind.GRAYSCALE_1BPP : imgData.kind;
      return encode(imgData, kind, forceDataSchema, isMask);
    };
  }();
  var SVGExtraState = function SVGExtraStateClosure() {
    function SVGExtraState() {
      this.fontSizeScale = 1;
      this.fontWeight = SVG_DEFAULTS.fontWeight;
      this.fontSize = 0;
      this.textMatrix = _util.IDENTITY_MATRIX;
      this.fontMatrix = _util.FONT_IDENTITY_MATRIX;
      this.leading = 0;
      this.textRenderingMode = _util.TextRenderingMode.FILL;
      this.x = 0;
      this.y = 0;
      this.lineX = 0;
      this.lineY = 0;
      this.charSpacing = 0;
      this.wordSpacing = 0;
      this.textHScale = 1;
      this.textRise = 0;
      this.fillColor = SVG_DEFAULTS.fillColor;
      this.strokeColor = '#000000';
      this.fillAlpha = 1;
      this.strokeAlpha = 1;
      this.lineWidth = 1;
      this.lineJoin = '';
      this.lineCap = '';
      this.miterLimit = 0;
      this.dashArray = [];
      this.dashPhase = 0;
      this.dependencies = [];
      this.activeClipUrl = null;
      this.clipGroup = null;
      this.maskId = '';
    }
    SVGExtraState.prototype = {
      clone: function SVGExtraState_clone() {
        return Object.create(this);
      },
      setCurrentPoint: function SVGExtraState_setCurrentPoint(x, y) {
        this.x = x;
        this.y = y;
      }
    };
    return SVGExtraState;
  }();
  exports.SVGGraphics = SVGGraphics = function SVGGraphicsClosure() {
    function opListToTree(opList) {
      var opTree = [];
      var tmp = [];
      var opListLen = opList.length;
      for (var x = 0; x < opListLen; x++) {
        if (opList[x].fn === 'save') {
          opTree.push({
            'fnId': 92,
            'fn': 'group',
            'items': []
          });
          tmp.push(opTree);
          opTree = opTree[opTree.length - 1].items;
          continue;
        }
        if (opList[x].fn === 'restore') {
          opTree = tmp.pop();
        } else {
          opTree.push(opList[x]);
        }
      }
      return opTree;
    }
    function pf(value) {
      if (Number.isInteger(value)) {
        return value.toString();
      }
      var s = value.toFixed(10);
      var i = s.length - 1;
      if (s[i] !== '0') {
        return s;
      }
      do {
        i--;
      } while (s[i] === '0');
      return s.substring(0, s[i] === '.' ? i : i + 1);
    }
    function pm(m) {
      if (m[4] === 0 && m[5] === 0) {
        if (m[1] === 0 && m[2] === 0) {
          if (m[0] === 1 && m[3] === 1) {
            return '';
          }
          return 'scale(' + pf(m[0]) + ' ' + pf(m[3]) + ')';
        }
        if (m[0] === m[3] && m[1] === -m[2]) {
          var a = Math.acos(m[0]) * 180 / Math.PI;
          return 'rotate(' + pf(a) + ')';
        }
      } else {
        if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {
          return 'translate(' + pf(m[4]) + ' ' + pf(m[5]) + ')';
        }
      }
      return 'matrix(' + pf(m[0]) + ' ' + pf(m[1]) + ' ' + pf(m[2]) + ' ' + pf(m[3]) + ' ' + pf(m[4]) + ' ' + pf(m[5]) + ')';
    }
    function SVGGraphics(commonObjs, objs, forceDataSchema) {
      this.svgFactory = new _dom_utils.DOMSVGFactory();
      this.current = new SVGExtraState();
      this.transformMatrix = _util.IDENTITY_MATRIX;
      this.transformStack = [];
      this.extraStack = [];
      this.commonObjs = commonObjs;
      this.objs = objs;
      this.pendingClip = null;
      this.pendingEOFill = false;
      this.embedFonts = false;
      this.embeddedFonts = Object.create(null);
      this.cssStyle = null;
      this.forceDataSchema = !!forceDataSchema;
    }
    var XML_NS = 'http://www.w3.org/XML/1998/namespace';
    var XLINK_NS = 'http://www.w3.org/1999/xlink';
    var LINE_CAP_STYLES = ['butt', 'round', 'square'];
    var LINE_JOIN_STYLES = ['miter', 'round', 'bevel'];
    var clipCount = 0;
    var maskCount = 0;
    SVGGraphics.prototype = {
      save: function SVGGraphics_save() {
        this.transformStack.push(this.transformMatrix);
        var old = this.current;
        this.extraStack.push(old);
        this.current = old.clone();
      },
      restore: function SVGGraphics_restore() {
        this.transformMatrix = this.transformStack.pop();
        this.current = this.extraStack.pop();
        this.pendingClip = null;
        this.tgrp = null;
      },
      group: function SVGGraphics_group(items) {
        this.save();
        this.executeOpTree(items);
        this.restore();
      },
      loadDependencies: function SVGGraphics_loadDependencies(operatorList) {
        var _this = this;

        var fnArray = operatorList.fnArray;
        var fnArrayLen = fnArray.length;
        var argsArray = operatorList.argsArray;
        for (var i = 0; i < fnArrayLen; i++) {
          if (_util.OPS.dependency === fnArray[i]) {
            var deps = argsArray[i];
            for (var n = 0, nn = deps.length; n < nn; n++) {
              var obj = deps[n];
              var common = obj.substring(0, 2) === 'g_';
              var promise;
              if (common) {
                promise = new Promise(function (resolve) {
                  _this.commonObjs.get(obj, resolve);
                });
              } else {
                promise = new Promise(function (resolve) {
                  _this.objs.get(obj, resolve);
                });
              }
              this.current.dependencies.push(promise);
            }
          }
        }
        return Promise.all(this.current.dependencies);
      },
      transform: function SVGGraphics_transform(a, b, c, d, e, f) {
        var transformMatrix = [a, b, c, d, e, f];
        this.transformMatrix = _util.Util.transform(this.transformMatrix, transformMatrix);
        this.tgrp = null;
      },
      getSVG: function SVGGraphics_getSVG(operatorList, viewport) {
        var _this2 = this;

        this.viewport = viewport;
        var svgElement = this._initialize(viewport);
        return this.loadDependencies(operatorList).then(function () {
          _this2.transformMatrix = _util.IDENTITY_MATRIX;
          var opTree = _this2.convertOpList(operatorList);
          _this2.executeOpTree(opTree);
          return svgElement;
        });
      },
      convertOpList: function SVGGraphics_convertOpList(operatorList) {
        var argsArray = operatorList.argsArray;
        var fnArray = operatorList.fnArray;
        var fnArrayLen = fnArray.length;
        var REVOPS = [];
        var opList = [];
        for (var op in _util.OPS) {
          REVOPS[_util.OPS[op]] = op;
        }
        for (var x = 0; x < fnArrayLen; x++) {
          var fnId = fnArray[x];
          opList.push({
            'fnId': fnId,
            'fn': REVOPS[fnId],
            'args': argsArray[x]
          });
        }
        return opListToTree(opList);
      },
      executeOpTree: function SVGGraphics_executeOpTree(opTree) {
        var opTreeLen = opTree.length;
        for (var x = 0; x < opTreeLen; x++) {
          var fn = opTree[x].fn;
          var fnId = opTree[x].fnId;
          var args = opTree[x].args;
          switch (fnId | 0) {
            case _util.OPS.beginText:
              this.beginText();
              break;
            case _util.OPS.dependency:
              break;
            case _util.OPS.setLeading:
              this.setLeading(args);
              break;
            case _util.OPS.setLeadingMoveText:
              this.setLeadingMoveText(args[0], args[1]);
              break;
            case _util.OPS.setFont:
              this.setFont(args);
              break;
            case _util.OPS.showText:
              this.showText(args[0]);
              break;
            case _util.OPS.showSpacedText:
              this.showText(args[0]);
              break;
            case _util.OPS.endText:
              this.endText();
              break;
            case _util.OPS.moveText:
              this.moveText(args[0], args[1]);
              break;
            case _util.OPS.setCharSpacing:
              this.setCharSpacing(args[0]);
              break;
            case _util.OPS.setWordSpacing:
              this.setWordSpacing(args[0]);
              break;
            case _util.OPS.setHScale:
              this.setHScale(args[0]);
              break;
            case _util.OPS.setTextMatrix:
              this.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);
              break;
            case _util.OPS.setTextRise:
              this.setTextRise(args[0]);
              break;
            case _util.OPS.setTextRenderingMode:
              this.setTextRenderingMode(args[0]);
              break;
            case _util.OPS.setLineWidth:
              this.setLineWidth(args[0]);
              break;
            case _util.OPS.setLineJoin:
              this.setLineJoin(args[0]);
              break;
            case _util.OPS.setLineCap:
              this.setLineCap(args[0]);
              break;
            case _util.OPS.setMiterLimit:
              this.setMiterLimit(args[0]);
              break;
            case _util.OPS.setFillRGBColor:
              this.setFillRGBColor(args[0], args[1], args[2]);
              break;
            case _util.OPS.setStrokeRGBColor:
              this.setStrokeRGBColor(args[0], args[1], args[2]);
              break;
            case _util.OPS.setDash:
              this.setDash(args[0], args[1]);
              break;
            case _util.OPS.setGState:
              this.setGState(args[0]);
              break;
            case _util.OPS.fill:
              this.fill();
              break;
            case _util.OPS.eoFill:
              this.eoFill();
              break;
            case _util.OPS.stroke:
              this.stroke();
              break;
            case _util.OPS.fillStroke:
              this.fillStroke();
              break;
            case _util.OPS.eoFillStroke:
              this.eoFillStroke();
              break;
            case _util.OPS.clip:
              this.clip('nonzero');
              break;
            case _util.OPS.eoClip:
              this.clip('evenodd');
              break;
            case _util.OPS.paintSolidColorImageMask:
              this.paintSolidColorImageMask();
              break;
            case _util.OPS.paintJpegXObject:
              this.paintJpegXObject(args[0], args[1], args[2]);
              break;
            case _util.OPS.paintImageXObject:
              this.paintImageXObject(args[0]);
              break;
            case _util.OPS.paintInlineImageXObject:
              this.paintInlineImageXObject(args[0]);
              break;
            case _util.OPS.paintImageMaskXObject:
              this.paintImageMaskXObject(args[0]);
              break;
            case _util.OPS.paintFormXObjectBegin:
              this.paintFormXObjectBegin(args[0], args[1]);
              break;
            case _util.OPS.paintFormXObjectEnd:
              this.paintFormXObjectEnd();
              break;
            case _util.OPS.closePath:
              this.closePath();
              break;
            case _util.OPS.closeStroke:
              this.closeStroke();
              break;
            case _util.OPS.closeFillStroke:
              this.closeFillStroke();
              break;
            case _util.OPS.closeEOFillStroke:
              this.closeEOFillStroke();
              break;
            case _util.OPS.nextLine:
              this.nextLine();
              break;
            case _util.OPS.transform:
              this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);
              break;
            case _util.OPS.constructPath:
              this.constructPath(args[0], args[1]);
              break;
            case _util.OPS.endPath:
              this.endPath();
              break;
            case 92:
              this.group(opTree[x].items);
              break;
            default:
              (0, _util.warn)('Unimplemented operator ' + fn);
              break;
          }
        }
      },
      setWordSpacing: function SVGGraphics_setWordSpacing(wordSpacing) {
        this.current.wordSpacing = wordSpacing;
      },
      setCharSpacing: function SVGGraphics_setCharSpacing(charSpacing) {
        this.current.charSpacing = charSpacing;
      },
      nextLine: function SVGGraphics_nextLine() {
        this.moveText(0, this.current.leading);
      },
      setTextMatrix: function SVGGraphics_setTextMatrix(a, b, c, d, e, f) {
        var current = this.current;
        this.current.textMatrix = this.current.lineMatrix = [a, b, c, d, e, f];
        this.current.x = this.current.lineX = 0;
        this.current.y = this.current.lineY = 0;
        current.xcoords = [];
        current.tspan = this.svgFactory.createElement('svg:tspan');
        current.tspan.setAttributeNS(null, 'font-family', current.fontFamily);
        current.tspan.setAttributeNS(null, 'font-size', pf(current.fontSize) + 'px');
        current.tspan.setAttributeNS(null, 'y', pf(-current.y));
        current.txtElement = this.svgFactory.createElement('svg:text');
        current.txtElement.appendChild(current.tspan);
      },
      beginText: function SVGGraphics_beginText() {
        this.current.x = this.current.lineX = 0;
        this.current.y = this.current.lineY = 0;
        this.current.textMatrix = _util.IDENTITY_MATRIX;
        this.current.lineMatrix = _util.IDENTITY_MATRIX;
        this.current.tspan = this.svgFactory.createElement('svg:tspan');
        this.current.txtElement = this.svgFactory.createElement('svg:text');
        this.current.txtgrp = this.svgFactory.createElement('svg:g');
        this.current.xcoords = [];
      },
      moveText: function SVGGraphics_moveText(x, y) {
        var current = this.current;
        this.current.x = this.current.lineX += x;
        this.current.y = this.current.lineY += y;
        current.xcoords = [];
        current.tspan = this.svgFactory.createElement('svg:tspan');
        current.tspan.setAttributeNS(null, 'font-family', current.fontFamily);
        current.tspan.setAttributeNS(null, 'font-size', pf(current.fontSize) + 'px');
        current.tspan.setAttributeNS(null, 'y', pf(-current.y));
      },
      showText: function SVGGraphics_showText(glyphs) {
        var current = this.current;
        var font = current.font;
        var fontSize = current.fontSize;
        if (fontSize === 0) {
          return;
        }
        var charSpacing = current.charSpacing;
        var wordSpacing = current.wordSpacing;
        var fontDirection = current.fontDirection;
        var textHScale = current.textHScale * fontDirection;
        var glyphsLength = glyphs.length;
        var vertical = font.vertical;
        var widthAdvanceScale = fontSize * current.fontMatrix[0];
        var x = 0,
            i;
        for (i = 0; i < glyphsLength; ++i) {
          var glyph = glyphs[i];
          if (glyph === null) {
            x += fontDirection * wordSpacing;
            continue;
          } else if ((0, _util.isNum)(glyph)) {
            x += -glyph * fontSize * 0.001;
            continue;
          }
          var width = glyph.width;
          var character = glyph.fontChar;
          var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;
          var charWidth = width * widthAdvanceScale + spacing * fontDirection;
          if (!glyph.isInFont && !font.missingFile) {
            x += charWidth;
            continue;
          }
          current.xcoords.push(current.x + x * textHScale);
          current.tspan.textContent += character;
          x += charWidth;
        }
        if (vertical) {
          current.y -= x * textHScale;
        } else {
          current.x += x * textHScale;
        }
        current.tspan.setAttributeNS(null, 'x', current.xcoords.map(pf).join(' '));
        current.tspan.setAttributeNS(null, 'y', pf(-current.y));
        current.tspan.setAttributeNS(null, 'font-family', current.fontFamily);
        current.tspan.setAttributeNS(null, 'font-size', pf(current.fontSize) + 'px');
        if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {
          current.tspan.setAttributeNS(null, 'font-style', current.fontStyle);
        }
        if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {
          current.tspan.setAttributeNS(null, 'font-weight', current.fontWeight);
        }
        var fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;
        if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {
          if (current.fillColor !== SVG_DEFAULTS.fillColor) {
            current.tspan.setAttributeNS(null, 'fill', current.fillColor);
          }
          if (current.fillAlpha < 1) {
            current.tspan.setAttributeNS(null, 'fill-opacity', current.fillAlpha);
          }
        } else if (current.textRenderingMode === _util.TextRenderingMode.ADD_TO_PATH) {
          current.tspan.setAttributeNS(null, 'fill', 'transparent');
        } else {
          current.tspan.setAttributeNS(null, 'fill', 'none');
        }
        if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {
          this._setStrokeAttributes(current.tspan);
        }
        var textMatrix = current.textMatrix;
        if (current.textRise !== 0) {
          textMatrix = textMatrix.slice();
          textMatrix[5] += current.textRise;
        }
        current.txtElement.setAttributeNS(null, 'transform', pm(textMatrix) + ' scale(1, -1)');
        current.txtElement.setAttributeNS(XML_NS, 'xml:space', 'preserve');
        current.txtElement.appendChild(current.tspan);
        current.txtgrp.appendChild(current.txtElement);
        this._ensureTransformGroup().appendChild(current.txtElement);
      },
      setLeadingMoveText: function SVGGraphics_setLeadingMoveText(x, y) {
        this.setLeading(-y);
        this.moveText(x, y);
      },
      addFontStyle: function SVGGraphics_addFontStyle(fontObj) {
        if (!this.cssStyle) {
          this.cssStyle = this.svgFactory.createElement('svg:style');
          this.cssStyle.setAttributeNS(null, 'type', 'text/css');
          this.defs.appendChild(this.cssStyle);
        }
        var url = (0, _util.createObjectURL)(fontObj.data, fontObj.mimetype, this.forceDataSchema);
        this.cssStyle.textContent += '@font-face { font-family: "' + fontObj.loadedName + '";' + ' src: url(' + url + '); }\n';
      },
      setFont: function SVGGraphics_setFont(details) {
        var current = this.current;
        var fontObj = this.commonObjs.get(details[0]);
        var size = details[1];
        this.current.font = fontObj;
        if (this.embedFonts && fontObj.data && !this.embeddedFonts[fontObj.loadedName]) {
          this.addFontStyle(fontObj);
          this.embeddedFonts[fontObj.loadedName] = fontObj;
        }
        current.fontMatrix = fontObj.fontMatrix ? fontObj.fontMatrix : _util.FONT_IDENTITY_MATRIX;
        var bold = fontObj.black ? fontObj.bold ? 'bolder' : 'bold' : fontObj.bold ? 'bold' : 'normal';
        var italic = fontObj.italic ? 'italic' : 'normal';
        if (size < 0) {
          size = -size;
          current.fontDirection = -1;
        } else {
          current.fontDirection = 1;
        }
        current.fontSize = size;
        current.fontFamily = fontObj.loadedName;
        current.fontWeight = bold;
        current.fontStyle = italic;
        current.tspan = this.svgFactory.createElement('svg:tspan');
        current.tspan.setAttributeNS(null, 'y', pf(-current.y));
        current.xcoords = [];
      },
      endText: function endText() {
        var current = this.current;
        if (current.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG && current.txtElement && current.txtElement.hasChildNodes()) {
          current.element = current.txtElement;
          this.clip('nonzero');
          this.endPath();
        }
      },

      setLineWidth: function SVGGraphics_setLineWidth(width) {
        this.current.lineWidth = width;
      },
      setLineCap: function SVGGraphics_setLineCap(style) {
        this.current.lineCap = LINE_CAP_STYLES[style];
      },
      setLineJoin: function SVGGraphics_setLineJoin(style) {
        this.current.lineJoin = LINE_JOIN_STYLES[style];
      },
      setMiterLimit: function SVGGraphics_setMiterLimit(limit) {
        this.current.miterLimit = limit;
      },
      setStrokeAlpha: function SVGGraphics_setStrokeAlpha(strokeAlpha) {
        this.current.strokeAlpha = strokeAlpha;
      },
      setStrokeRGBColor: function SVGGraphics_setStrokeRGBColor(r, g, b) {
        var color = _util.Util.makeCssRgb(r, g, b);
        this.current.strokeColor = color;
      },
      setFillAlpha: function SVGGraphics_setFillAlpha(fillAlpha) {
        this.current.fillAlpha = fillAlpha;
      },
      setFillRGBColor: function SVGGraphics_setFillRGBColor(r, g, b) {
        var color = _util.Util.makeCssRgb(r, g, b);
        this.current.fillColor = color;
        this.current.tspan = this.svgFactory.createElement('svg:tspan');
        this.current.xcoords = [];
      },
      setDash: function SVGGraphics_setDash(dashArray, dashPhase) {
        this.current.dashArray = dashArray;
        this.current.dashPhase = dashPhase;
      },
      constructPath: function SVGGraphics_constructPath(ops, args) {
        var current = this.current;
        var x = current.x,
            y = current.y;
        current.path = this.svgFactory.createElement('svg:path');
        var d = [];
        var opLength = ops.length;
        for (var i = 0, j = 0; i < opLength; i++) {
          switch (ops[i] | 0) {
            case _util.OPS.rectangle:
              x = args[j++];
              y = args[j++];
              var width = args[j++];
              var height = args[j++];
              var xw = x + width;
              var yh = y + height;
              d.push('M', pf(x), pf(y), 'L', pf(xw), pf(y), 'L', pf(xw), pf(yh), 'L', pf(x), pf(yh), 'Z');
              break;
            case _util.OPS.moveTo:
              x = args[j++];
              y = args[j++];
              d.push('M', pf(x), pf(y));
              break;
            case _util.OPS.lineTo:
              x = args[j++];
              y = args[j++];
              d.push('L', pf(x), pf(y));
              break;
            case _util.OPS.curveTo:
              x = args[j + 4];
              y = args[j + 5];
              d.push('C', pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]), pf(x), pf(y));
              j += 6;
              break;
            case _util.OPS.curveTo2:
              x = args[j + 2];
              y = args[j + 3];
              d.push('C', pf(x), pf(y), pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]));
              j += 4;
              break;
            case _util.OPS.curveTo3:
              x = args[j + 2];
              y = args[j + 3];
              d.push('C', pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));
              j += 4;
              break;
            case _util.OPS.closePath:
              d.push('Z');
              break;
          }
        }
        current.path.setAttributeNS(null, 'd', d.join(' '));
        current.path.setAttributeNS(null, 'fill', 'none');
        this._ensureTransformGroup().appendChild(current.path);
        current.element = current.path;
        current.setCurrentPoint(x, y);
      },
      endPath: function SVGGraphics_endPath() {
        if (!this.pendingClip) {
          return;
        }
        var current = this.current;
        var clipId = 'clippath' + clipCount;
        clipCount++;
        var clipPath = this.svgFactory.createElement('svg:clipPath');
        clipPath.setAttributeNS(null, 'id', clipId);
        clipPath.setAttributeNS(null, 'transform', pm(this.transformMatrix));
        var clipElement = current.element.cloneNode(true);
        if (this.pendingClip === 'evenodd') {
          clipElement.setAttributeNS(null, 'clip-rule', 'evenodd');
        } else {
          clipElement.setAttributeNS(null, 'clip-rule', 'nonzero');
        }
        this.pendingClip = null;
        clipPath.appendChild(clipElement);
        this.defs.appendChild(clipPath);
        if (current.activeClipUrl) {
          current.clipGroup = null;
          this.extraStack.forEach(function (prev) {
            prev.clipGroup = null;
          });
          clipPath.setAttributeNS(null, 'clip-path', current.activeClipUrl);
        }
        current.activeClipUrl = 'url(#' + clipId + ')';
        this.tgrp = null;
      },
      clip: function SVGGraphics_clip(type) {
        this.pendingClip = type;
      },
      closePath: function SVGGraphics_closePath() {
        var current = this.current;
        if (current.path) {
          var d = current.path.getAttributeNS(null, 'd');
          d += 'Z';
          current.path.setAttributeNS(null, 'd', d);
        }
      },
      setLeading: function SVGGraphics_setLeading(leading) {
        this.current.leading = -leading;
      },
      setTextRise: function SVGGraphics_setTextRise(textRise) {
        this.current.textRise = textRise;
      },
      setTextRenderingMode: function setTextRenderingMode(textRenderingMode) {
        this.current.textRenderingMode = textRenderingMode;
      },

      setHScale: function SVGGraphics_setHScale(scale) {
        this.current.textHScale = scale / 100;
      },
      setGState: function SVGGraphics_setGState(states) {
        for (var i = 0, ii = states.length; i < ii; i++) {
          var state = states[i];
          var key = state[0];
          var value = state[1];
          switch (key) {
            case 'LW':
              this.setLineWidth(value);
              break;
            case 'LC':
              this.setLineCap(value);
              break;
            case 'LJ':
              this.setLineJoin(value);
              break;
            case 'ML':
              this.setMiterLimit(value);
              break;
            case 'D':
              this.setDash(value[0], value[1]);
              break;
            case 'Font':
              this.setFont(value);
              break;
            case 'CA':
              this.setStrokeAlpha(value);
              break;
            case 'ca':
              this.setFillAlpha(value);
              break;
            default:
              (0, _util.warn)('Unimplemented graphic state ' + key);
              break;
          }
        }
      },
      fill: function SVGGraphics_fill() {
        var current = this.current;
        if (current.element) {
          current.element.setAttributeNS(null, 'fill', current.fillColor);
          current.element.setAttributeNS(null, 'fill-opacity', current.fillAlpha);
          this.endPath();
        }
      },
      stroke: function SVGGraphics_stroke() {
        var current = this.current;
        if (current.element) {
          this._setStrokeAttributes(current.element);
          current.element.setAttributeNS(null, 'fill', 'none');
          this.endPath();
        }
      },
      _setStrokeAttributes: function _setStrokeAttributes(element) {
        var current = this.current;
        element.setAttributeNS(null, 'stroke', current.strokeColor);
        element.setAttributeNS(null, 'stroke-opacity', current.strokeAlpha);
        element.setAttributeNS(null, 'stroke-miterlimit', pf(current.miterLimit));
        element.setAttributeNS(null, 'stroke-linecap', current.lineCap);
        element.setAttributeNS(null, 'stroke-linejoin', current.lineJoin);
        element.setAttributeNS(null, 'stroke-width', pf(current.lineWidth) + 'px');
        element.setAttributeNS(null, 'stroke-dasharray', current.dashArray.map(pf).join(' '));
        element.setAttributeNS(null, 'stroke-dashoffset', pf(current.dashPhase) + 'px');
      },

      eoFill: function SVGGraphics_eoFill() {
        if (this.current.element) {
          this.current.element.setAttributeNS(null, 'fill-rule', 'evenodd');
        }
        this.fill();
      },
      fillStroke: function SVGGraphics_fillStroke() {
        this.stroke();
        this.fill();
      },
      eoFillStroke: function SVGGraphics_eoFillStroke() {
        if (this.current.element) {
          this.current.element.setAttributeNS(null, 'fill-rule', 'evenodd');
        }
        this.fillStroke();
      },
      closeStroke: function SVGGraphics_closeStroke() {
        this.closePath();
        this.stroke();
      },
      closeFillStroke: function SVGGraphics_closeFillStroke() {
        this.closePath();
        this.fillStroke();
      },
      closeEOFillStroke: function closeEOFillStroke() {
        this.closePath();
        this.eoFillStroke();
      },

      paintSolidColorImageMask: function SVGGraphics_paintSolidColorImageMask() {
        var current = this.current;
        var rect = this.svgFactory.createElement('svg:rect');
        rect.setAttributeNS(null, 'x', '0');
        rect.setAttributeNS(null, 'y', '0');
        rect.setAttributeNS(null, 'width', '1px');
        rect.setAttributeNS(null, 'height', '1px');
        rect.setAttributeNS(null, 'fill', current.fillColor);
        this._ensureTransformGroup().appendChild(rect);
      },
      paintJpegXObject: function SVGGraphics_paintJpegXObject(objId, w, h) {
        var imgObj = this.objs.get(objId);
        var imgEl = this.svgFactory.createElement('svg:image');
        imgEl.setAttributeNS(XLINK_NS, 'xlink:href', imgObj.src);
        imgEl.setAttributeNS(null, 'width', pf(w));
        imgEl.setAttributeNS(null, 'height', pf(h));
        imgEl.setAttributeNS(null, 'x', '0');
        imgEl.setAttributeNS(null, 'y', pf(-h));
        imgEl.setAttributeNS(null, 'transform', 'scale(' + pf(1 / w) + ' ' + pf(-1 / h) + ')');
        this._ensureTransformGroup().appendChild(imgEl);
      },
      paintImageXObject: function SVGGraphics_paintImageXObject(objId) {
        var imgData = this.objs.get(objId);
        if (!imgData) {
          (0, _util.warn)('Dependent image isn\'t ready yet');
          return;
        }
        this.paintInlineImageXObject(imgData);
      },
      paintInlineImageXObject: function SVGGraphics_paintInlineImageXObject(imgData, mask) {
        var width = imgData.width;
        var height = imgData.height;
        var imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);
        var cliprect = this.svgFactory.createElement('svg:rect');
        cliprect.setAttributeNS(null, 'x', '0');
        cliprect.setAttributeNS(null, 'y', '0');
        cliprect.setAttributeNS(null, 'width', pf(width));
        cliprect.setAttributeNS(null, 'height', pf(height));
        this.current.element = cliprect;
        this.clip('nonzero');
        var imgEl = this.svgFactory.createElement('svg:image');
        imgEl.setAttributeNS(XLINK_NS, 'xlink:href', imgSrc);
        imgEl.setAttributeNS(null, 'x', '0');
        imgEl.setAttributeNS(null, 'y', pf(-height));
        imgEl.setAttributeNS(null, 'width', pf(width) + 'px');
        imgEl.setAttributeNS(null, 'height', pf(height) + 'px');
        imgEl.setAttributeNS(null, 'transform', 'scale(' + pf(1 / width) + ' ' + pf(-1 / height) + ')');
        if (mask) {
          mask.appendChild(imgEl);
        } else {
          this._ensureTransformGroup().appendChild(imgEl);
        }
      },
      paintImageMaskXObject: function SVGGraphics_paintImageMaskXObject(imgData) {
        var current = this.current;
        var width = imgData.width;
        var height = imgData.height;
        var fillColor = current.fillColor;
        current.maskId = 'mask' + maskCount++;
        var mask = this.svgFactory.createElement('svg:mask');
        mask.setAttributeNS(null, 'id', current.maskId);
        var rect = this.svgFactory.createElement('svg:rect');
        rect.setAttributeNS(null, 'x', '0');
        rect.setAttributeNS(null, 'y', '0');
        rect.setAttributeNS(null, 'width', pf(width));
        rect.setAttributeNS(null, 'height', pf(height));
        rect.setAttributeNS(null, 'fill', fillColor);
        rect.setAttributeNS(null, 'mask', 'url(#' + current.maskId + ')');
        this.defs.appendChild(mask);
        this._ensureTransformGroup().appendChild(rect);
        this.paintInlineImageXObject(imgData, mask);
      },
      paintFormXObjectBegin: function SVGGraphics_paintFormXObjectBegin(matrix, bbox) {
        if (Array.isArray(matrix) && matrix.length === 6) {
          this.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);
        }
        if (Array.isArray(bbox) && bbox.length === 4) {
          var width = bbox[2] - bbox[0];
          var height = bbox[3] - bbox[1];
          var cliprect = this.svgFactory.createElement('svg:rect');
          cliprect.setAttributeNS(null, 'x', bbox[0]);
          cliprect.setAttributeNS(null, 'y', bbox[1]);
          cliprect.setAttributeNS(null, 'width', pf(width));
          cliprect.setAttributeNS(null, 'height', pf(height));
          this.current.element = cliprect;
          this.clip('nonzero');
          this.endPath();
        }
      },
      paintFormXObjectEnd: function SVGGraphics_paintFormXObjectEnd() {},
      _initialize: function _initialize(viewport) {
        var svg = this.svgFactory.create(viewport.width, viewport.height);
        var definitions = this.svgFactory.createElement('svg:defs');
        svg.appendChild(definitions);
        this.defs = definitions;
        var rootGroup = this.svgFactory.createElement('svg:g');
        rootGroup.setAttributeNS(null, 'transform', pm(viewport.transform));
        svg.appendChild(rootGroup);
        this.svg = rootGroup;
        return svg;
      },

      _ensureClipGroup: function SVGGraphics_ensureClipGroup() {
        if (!this.current.clipGroup) {
          var clipGroup = this.svgFactory.createElement('svg:g');
          clipGroup.setAttributeNS(null, 'clip-path', this.current.activeClipUrl);
          this.svg.appendChild(clipGroup);
          this.current.clipGroup = clipGroup;
        }
        return this.current.clipGroup;
      },
      _ensureTransformGroup: function SVGGraphics_ensureTransformGroup() {
        if (!this.tgrp) {
          this.tgrp = this.svgFactory.createElement('svg:g');
          this.tgrp.setAttributeNS(null, 'transform', pm(this.transformMatrix));
          if (this.current.activeClipUrl) {
            this._ensureClipGroup().appendChild(this.tgrp);
          } else {
            this.svg.appendChild(this.tgrp);
          }
        }
        return this.tgrp;
      }
    };
    return SVGGraphics;
  }();
}
exports.SVGGraphics = SVGGraphics;

/***/ }),
/* 148 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PDFNodeStream = undefined;

var _regenerator = __w_pdfjs_require__(137);

var _regenerator2 = _interopRequireDefault(_regenerator);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _util = __w_pdfjs_require__(1);

var _network_utils = __w_pdfjs_require__(149);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var fs = __webpack_require__(/*! fs */ 2);
var http = __webpack_require__(/*! http */ 3);
var https = __webpack_require__(/*! https */ 4);
var url = __webpack_require__(/*! url */ "./node_modules/url/url.js");

var fileUriRegex = /^file:\/\/\/[a-zA-Z]:\//;
function parseUrl(sourceUrl) {
  var parsedUrl = url.parse(sourceUrl);
  if (parsedUrl.protocol === 'file:' || parsedUrl.host) {
    return parsedUrl;
  }
  if (/^[a-z]:[/\\]/i.test(sourceUrl)) {
    return url.parse('file:///' + sourceUrl);
  }
  if (!parsedUrl.host) {
    parsedUrl.protocol = 'file:';
  }
  return parsedUrl;
}

var PDFNodeStream = function () {
  function PDFNodeStream(source) {
    _classCallCheck(this, PDFNodeStream);

    this.source = source;
    this.url = parseUrl(source.url);
    this.isHttp = this.url.protocol === 'http:' || this.url.protocol === 'https:';
    this.isFsUrl = this.url.protocol === 'file:';
    this.httpHeaders = this.isHttp && source.httpHeaders || {};
    this._fullRequest = null;
    this._rangeRequestReaders = [];
  }

  _createClass(PDFNodeStream, [{
    key: 'getFullReader',
    value: function getFullReader() {
      (0, _util.assert)(!this._fullRequest);
      this._fullRequest = this.isFsUrl ? new PDFNodeStreamFsFullReader(this) : new PDFNodeStreamFullReader(this);
      return this._fullRequest;
    }
  }, {
    key: 'getRangeReader',
    value: function getRangeReader(start, end) {
      var rangeReader = this.isFsUrl ? new PDFNodeStreamFsRangeReader(this, start, end) : new PDFNodeStreamRangeReader(this, start, end);
      this._rangeRequestReaders.push(rangeReader);
      return rangeReader;
    }
  }, {
    key: 'cancelAllRequests',
    value: function cancelAllRequests(reason) {
      if (this._fullRequest) {
        this._fullRequest.cancel(reason);
      }
      var readers = this._rangeRequestReaders.slice(0);
      readers.forEach(function (reader) {
        reader.cancel(reason);
      });
    }
  }]);

  return PDFNodeStream;
}();

var BaseFullReader = function () {
  function BaseFullReader(stream) {
    _classCallCheck(this, BaseFullReader);

    this._url = stream.url;
    this._done = false;
    this._storedError = null;
    this.onProgress = null;
    var source = stream.source;
    this._contentLength = source.length;
    this._loaded = 0;
    this._filename = null;
    this._disableRange = source.disableRange || false;
    this._rangeChunkSize = source.rangeChunkSize;
    if (!this._rangeChunkSize && !this._disableRange) {
      this._disableRange = true;
    }
    this._isStreamingSupported = !source.disableStream;
    this._isRangeSupported = !source.disableRange;
    this._readableStream = null;
    this._readCapability = (0, _util.createPromiseCapability)();
    this._headersCapability = (0, _util.createPromiseCapability)();
  }

  _createClass(BaseFullReader, [{
    key: 'read',
    value: function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
        var chunk, buffer;
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this._readCapability.promise;

              case 2:
                if (!this._done) {
                  _context.next = 4;
                  break;
                }

                return _context.abrupt('return', {
                  value: undefined,
                  done: true
                });

              case 4:
                if (!this._storedError) {
                  _context.next = 6;
                  break;
                }

                throw this._storedError;

              case 6:
                chunk = this._readableStream.read();

                if (!(chunk === null)) {
                  _context.next = 10;
                  break;
                }

                this._readCapability = (0, _util.createPromiseCapability)();
                return _context.abrupt('return', this.read());

              case 10:
                this._loaded += chunk.length;
                if (this.onProgress) {
                  this.onProgress({
                    loaded: this._loaded,
                    total: this._contentLength
                  });
                }
                buffer = new Uint8Array(chunk).buffer;
                return _context.abrupt('return', {
                  value: buffer,
                  done: false
                });

              case 14:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function read() {
        return _ref.apply(this, arguments);
      }

      return read;
    }()
  }, {
    key: 'cancel',
    value: function cancel(reason) {
      if (!this._readableStream) {
        this._error(reason);
        return;
      }
      this._readableStream.destroy(reason);
    }
  }, {
    key: '_error',
    value: function _error(reason) {
      this._storedError = reason;
      this._readCapability.resolve();
    }
  }, {
    key: '_setReadableStream',
    value: function _setReadableStream(readableStream) {
      var _this = this;

      this._readableStream = readableStream;
      readableStream.on('readable', function () {
        _this._readCapability.resolve();
      });
      readableStream.on('end', function () {
        readableStream.destroy();
        _this._done = true;
        _this._readCapability.resolve();
      });
      readableStream.on('error', function (reason) {
        _this._error(reason);
      });
      if (!this._isStreamingSupported && this._isRangeSupported) {
        this._error(new _util.AbortException('streaming is disabled'));
      }
      if (this._storedError) {
        this._readableStream.destroy(this._storedError);
      }
    }
  }, {
    key: 'headersReady',
    get: function get() {
      return this._headersCapability.promise;
    }
  }, {
    key: 'filename',
    get: function get() {
      return this._filename;
    }
  }, {
    key: 'contentLength',
    get: function get() {
      return this._contentLength;
    }
  }, {
    key: 'isRangeSupported',
    get: function get() {
      return this._isRangeSupported;
    }
  }, {
    key: 'isStreamingSupported',
    get: function get() {
      return this._isStreamingSupported;
    }
  }]);

  return BaseFullReader;
}();

var BaseRangeReader = function () {
  function BaseRangeReader(stream) {
    _classCallCheck(this, BaseRangeReader);

    this._url = stream.url;
    this._done = false;
    this._storedError = null;
    this.onProgress = null;
    this._loaded = 0;
    this._readableStream = null;
    this._readCapability = (0, _util.createPromiseCapability)();
    var source = stream.source;
    this._isStreamingSupported = !source.disableStream;
  }

  _createClass(BaseRangeReader, [{
    key: 'read',
    value: function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee2() {
        var chunk, buffer;
        return _regenerator2.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this._readCapability.promise;

              case 2:
                if (!this._done) {
                  _context2.next = 4;
                  break;
                }

                return _context2.abrupt('return', {
                  value: undefined,
                  done: true
                });

              case 4:
                if (!this._storedError) {
                  _context2.next = 6;
                  break;
                }

                throw this._storedError;

              case 6:
                chunk = this._readableStream.read();

                if (!(chunk === null)) {
                  _context2.next = 10;
                  break;
                }

                this._readCapability = (0, _util.createPromiseCapability)();
                return _context2.abrupt('return', this.read());

              case 10:
                this._loaded += chunk.length;
                if (this.onProgress) {
                  this.onProgress({ loaded: this._loaded });
                }
                buffer = new Uint8Array(chunk).buffer;
                return _context2.abrupt('return', {
                  value: buffer,
                  done: false
                });

              case 14:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function read() {
        return _ref2.apply(this, arguments);
      }

      return read;
    }()
  }, {
    key: 'cancel',
    value: function cancel(reason) {
      if (!this._readableStream) {
        this._error(reason);
        return;
      }
      this._readableStream.destroy(reason);
    }
  }, {
    key: '_error',
    value: function _error(reason) {
      this._storedError = reason;
      this._readCapability.resolve();
    }
  }, {
    key: '_setReadableStream',
    value: function _setReadableStream(readableStream) {
      var _this2 = this;

      this._readableStream = readableStream;
      readableStream.on('readable', function () {
        _this2._readCapability.resolve();
      });
      readableStream.on('end', function () {
        readableStream.destroy();
        _this2._done = true;
        _this2._readCapability.resolve();
      });
      readableStream.on('error', function (reason) {
        _this2._error(reason);
      });
      if (this._storedError) {
        this._readableStream.destroy(this._storedError);
      }
    }
  }, {
    key: 'isStreamingSupported',
    get: function get() {
      return this._isStreamingSupported;
    }
  }]);

  return BaseRangeReader;
}();

function createRequestOptions(url, headers) {
  return {
    protocol: url.protocol,
    auth: url.auth,
    host: url.hostname,
    port: url.port,
    path: url.path,
    method: 'GET',
    headers: headers
  };
}

var PDFNodeStreamFullReader = function (_BaseFullReader) {
  _inherits(PDFNodeStreamFullReader, _BaseFullReader);

  function PDFNodeStreamFullReader(stream) {
    _classCallCheck(this, PDFNodeStreamFullReader);

    var _this3 = _possibleConstructorReturn(this, (PDFNodeStreamFullReader.__proto__ || Object.getPrototypeOf(PDFNodeStreamFullReader)).call(this, stream));

    var handleResponse = function handleResponse(response) {
      if (response.statusCode === 404) {
        var error = new _util.MissingPDFException('Missing PDF "' + _this3._url + '".');
        _this3._storedError = error;
        _this3._headersCapability.reject(error);
        return;
      }
      _this3._headersCapability.resolve();
      _this3._setReadableStream(response);
      var getResponseHeader = function getResponseHeader(name) {
        return _this3._readableStream.headers[name.toLowerCase()];
      };

      var _validateRangeRequest = (0, _network_utils.validateRangeRequestCapabilities)({
        getResponseHeader: getResponseHeader,
        isHttp: stream.isHttp,
        rangeChunkSize: _this3._rangeChunkSize,
        disableRange: _this3._disableRange
      }),
          allowRangeRequests = _validateRangeRequest.allowRangeRequests,
          suggestedLength = _validateRangeRequest.suggestedLength;

      _this3._isRangeSupported = allowRangeRequests;
      _this3._contentLength = suggestedLength || _this3._contentLength;
      _this3._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);
    };
    _this3._request = null;
    if (_this3._url.protocol === 'http:') {
      _this3._request = http.request(createRequestOptions(_this3._url, stream.httpHeaders), handleResponse);
    } else {
      _this3._request = https.request(createRequestOptions(_this3._url, stream.httpHeaders), handleResponse);
    }
    _this3._request.on('error', function (reason) {
      _this3._storedError = reason;
      _this3._headersCapability.reject(reason);
    });
    _this3._request.end();
    return _this3;
  }

  return PDFNodeStreamFullReader;
}(BaseFullReader);

var PDFNodeStreamRangeReader = function (_BaseRangeReader) {
  _inherits(PDFNodeStreamRangeReader, _BaseRangeReader);

  function PDFNodeStreamRangeReader(stream, start, end) {
    _classCallCheck(this, PDFNodeStreamRangeReader);

    var _this4 = _possibleConstructorReturn(this, (PDFNodeStreamRangeReader.__proto__ || Object.getPrototypeOf(PDFNodeStreamRangeReader)).call(this, stream));

    _this4._httpHeaders = {};
    for (var property in stream.httpHeaders) {
      var value = stream.httpHeaders[property];
      if (typeof value === 'undefined') {
        continue;
      }
      _this4._httpHeaders[property] = value;
    }
    _this4._httpHeaders['Range'] = 'bytes=' + start + '-' + (end - 1);
    var handleResponse = function handleResponse(response) {
      if (response.statusCode === 404) {
        var error = new _util.MissingPDFException('Missing PDF "' + _this4._url + '".');
        _this4._storedError = error;
        return;
      }
      _this4._setReadableStream(response);
    };
    _this4._request = null;
    if (_this4._url.protocol === 'http:') {
      _this4._request = http.request(createRequestOptions(_this4._url, _this4._httpHeaders), handleResponse);
    } else {
      _this4._request = https.request(createRequestOptions(_this4._url, _this4._httpHeaders), handleResponse);
    }
    _this4._request.on('error', function (reason) {
      _this4._storedError = reason;
    });
    _this4._request.end();
    return _this4;
  }

  return PDFNodeStreamRangeReader;
}(BaseRangeReader);

var PDFNodeStreamFsFullReader = function (_BaseFullReader2) {
  _inherits(PDFNodeStreamFsFullReader, _BaseFullReader2);

  function PDFNodeStreamFsFullReader(stream) {
    _classCallCheck(this, PDFNodeStreamFsFullReader);

    var _this5 = _possibleConstructorReturn(this, (PDFNodeStreamFsFullReader.__proto__ || Object.getPrototypeOf(PDFNodeStreamFsFullReader)).call(this, stream));

    var path = decodeURIComponent(_this5._url.path);
    if (fileUriRegex.test(_this5._url.href)) {
      path = path.replace(/^\//, '');
    }
    fs.lstat(path, function (error, stat) {
      if (error) {
        if (error.code === 'ENOENT') {
          error = new _util.MissingPDFException('Missing PDF "' + path + '".');
        }
        _this5._storedError = error;
        _this5._headersCapability.reject(error);
        return;
      }
      _this5._contentLength = stat.size;
      _this5._setReadableStream(fs.createReadStream(path));
      _this5._headersCapability.resolve();
    });
    return _this5;
  }

  return PDFNodeStreamFsFullReader;
}(BaseFullReader);

var PDFNodeStreamFsRangeReader = function (_BaseRangeReader2) {
  _inherits(PDFNodeStreamFsRangeReader, _BaseRangeReader2);

  function PDFNodeStreamFsRangeReader(stream, start, end) {
    _classCallCheck(this, PDFNodeStreamFsRangeReader);

    var _this6 = _possibleConstructorReturn(this, (PDFNodeStreamFsRangeReader.__proto__ || Object.getPrototypeOf(PDFNodeStreamFsRangeReader)).call(this, stream));

    var path = decodeURIComponent(_this6._url.path);
    if (fileUriRegex.test(_this6._url.href)) {
      path = path.replace(/^\//, '');
    }
    _this6._setReadableStream(fs.createReadStream(path, {
      start: start,
      end: end - 1
    }));
    return _this6;
  }

  return PDFNodeStreamFsRangeReader;
}(BaseRangeReader);

exports.PDFNodeStream = PDFNodeStream;

/***/ }),
/* 149 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.validateResponseStatus = exports.validateRangeRequestCapabilities = exports.extractFilenameFromHeader = exports.createResponseStatusError = undefined;

var _util = __w_pdfjs_require__(1);

var _content_disposition = __w_pdfjs_require__(150);

function validateRangeRequestCapabilities(_ref) {
  var getResponseHeader = _ref.getResponseHeader,
      isHttp = _ref.isHttp,
      rangeChunkSize = _ref.rangeChunkSize,
      disableRange = _ref.disableRange;

  (0, _util.assert)(rangeChunkSize > 0, 'Range chunk size must be larger than zero');
  var returnValues = {
    allowRangeRequests: false,
    suggestedLength: undefined
  };
  var length = parseInt(getResponseHeader('Content-Length'), 10);
  if (!Number.isInteger(length)) {
    return returnValues;
  }
  returnValues.suggestedLength = length;
  if (length <= 2 * rangeChunkSize) {
    return returnValues;
  }
  if (disableRange || !isHttp) {
    return returnValues;
  }
  if (getResponseHeader('Accept-Ranges') !== 'bytes') {
    return returnValues;
  }
  var contentEncoding = getResponseHeader('Content-Encoding') || 'identity';
  if (contentEncoding !== 'identity') {
    return returnValues;
  }
  returnValues.allowRangeRequests = true;
  return returnValues;
}
function extractFilenameFromHeader(getResponseHeader) {
  var contentDisposition = getResponseHeader('Content-Disposition');
  if (contentDisposition) {
    var filename = (0, _content_disposition.getFilenameFromContentDispositionHeader)(contentDisposition);
    if (/\.pdf$/i.test(filename)) {
      return filename;
    }
  }
  return null;
}
function createResponseStatusError(status, url) {
  if (status === 404 || status === 0 && /^file:/.test(url)) {
    return new _util.MissingPDFException('Missing PDF "' + url + '".');
  }
  return new _util.UnexpectedResponseException('Unexpected server response (' + status + ') while retrieving PDF "' + url + '".', status);
}
function validateResponseStatus(status) {
  return status === 200 || status === 206;
}
exports.createResponseStatusError = createResponseStatusError;
exports.extractFilenameFromHeader = extractFilenameFromHeader;
exports.validateRangeRequestCapabilities = validateRangeRequestCapabilities;
exports.validateResponseStatus = validateResponseStatus;

/***/ }),
/* 150 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

function getFilenameFromContentDispositionHeader(contentDisposition) {
  var needsEncodingFixup = true;
  var tmp = toParamRegExp('filename\\*', 'i').exec(contentDisposition);
  if (tmp) {
    tmp = tmp[1];
    var filename = rfc2616unquote(tmp);
    filename = unescape(filename);
    filename = rfc5987decode(filename);
    filename = rfc2047decode(filename);
    return fixupEncoding(filename);
  }
  tmp = rfc2231getparam(contentDisposition);
  if (tmp) {
    var _filename = rfc2047decode(tmp);
    return fixupEncoding(_filename);
  }
  tmp = toParamRegExp('filename', 'i').exec(contentDisposition);
  if (tmp) {
    tmp = tmp[1];
    var _filename2 = rfc2616unquote(tmp);
    _filename2 = rfc2047decode(_filename2);
    return fixupEncoding(_filename2);
  }
  function toParamRegExp(attributePattern, flags) {
    return new RegExp('(?:^|;)\\s*' + attributePattern + '\\s*=\\s*' + '(' + '[^";\\s][^;\\s]*' + '|' + '"(?:[^"\\\\]|\\\\"?)+"?' + ')', flags);
  }
  function textdecode(encoding, value) {
    if (encoding) {
      if (!/^[\x00-\xFF]+$/.test(value)) {
        return value;
      }
      try {
        var decoder = new TextDecoder(encoding, { fatal: true });
        var bytes = new Array(value.length);
        for (var i = 0; i < value.length; ++i) {
          bytes[i] = value.charCodeAt(i);
        }
        value = decoder.decode(new Uint8Array(bytes));
        needsEncodingFixup = false;
      } catch (e) {
        if (/^utf-?8$/i.test(encoding)) {
          try {
            value = decodeURIComponent(escape(value));
            needsEncodingFixup = false;
          } catch (err) {}
        }
      }
    }
    return value;
  }
  function fixupEncoding(value) {
    if (needsEncodingFixup && /[\x80-\xff]/.test(value)) {
      value = textdecode('utf-8', value);
      if (needsEncodingFixup) {
        value = textdecode('iso-8859-1', value);
      }
    }
    return value;
  }
  function rfc2231getparam(contentDisposition) {
    var matches = [],
        match = void 0;
    var iter = toParamRegExp('filename\\*((?!0\\d)\\d+)(\\*?)', 'ig');
    while ((match = iter.exec(contentDisposition)) !== null) {
      var _match = match,
          _match2 = _slicedToArray(_match, 4),
          n = _match2[1],
          quot = _match2[2],
          part = _match2[3];

      n = parseInt(n, 10);
      if (n in matches) {
        if (n === 0) {
          break;
        }
        continue;
      }
      matches[n] = [quot, part];
    }
    var parts = [];
    for (var _n = 0; _n < matches.length; ++_n) {
      if (!(_n in matches)) {
        break;
      }

      var _matches$_n = _slicedToArray(matches[_n], 2),
          _quot = _matches$_n[0],
          _part = _matches$_n[1];

      _part = rfc2616unquote(_part);
      if (_quot) {
        _part = unescape(_part);
        if (_n === 0) {
          _part = rfc5987decode(_part);
        }
      }
      parts.push(_part);
    }
    return parts.join('');
  }
  function rfc2616unquote(value) {
    if (value.charAt(0) === '"') {
      var parts = value.slice(1).split('\\"');
      for (var i = 0; i < parts.length; ++i) {
        var quotindex = parts[i].indexOf('"');
        if (quotindex !== -1) {
          parts[i] = parts[i].slice(0, quotindex);
          parts.length = i + 1;
        }
        parts[i] = parts[i].replace(/\\(.)/g, '$1');
      }
      value = parts.join('"');
    }
    return value;
  }
  function rfc5987decode(extvalue) {
    var encodingend = extvalue.indexOf('\'');
    if (encodingend === -1) {
      return extvalue;
    }
    var encoding = extvalue.slice(0, encodingend);
    var langvalue = extvalue.slice(encodingend + 1);
    var value = langvalue.replace(/^[^']*'/, '');
    return textdecode(encoding, value);
  }
  function rfc2047decode(value) {
    if (value.slice(0, 2) !== '=?' || /[\x00-\x19\x80-\xff]/.test(value)) {
      return value;
    }
    return value.replace(/=\?([\w-]*)\?([QqBb])\?((?:[^?]|\?(?!=))*)\?=/g, function (_, charset, encoding, text) {
      if (encoding === 'q' || encoding === 'Q') {
        text = text.replace(/_/g, ' ');
        text = text.replace(/=([0-9a-fA-F]{2})/g, function (_, hex) {
          return String.fromCharCode(parseInt(hex, 16));
        });
        return textdecode(charset, text);
      }
      try {
        text = atob(text);
      } catch (e) {}
      return textdecode(charset, text);
    });
  }
  return '';
}
exports.getFilenameFromContentDispositionHeader = getFilenameFromContentDispositionHeader;

/***/ }),
/* 151 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PDFFetchStream = undefined;

var _regenerator = __w_pdfjs_require__(137);

var _regenerator2 = _interopRequireDefault(_regenerator);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _util = __w_pdfjs_require__(1);

var _network_utils = __w_pdfjs_require__(149);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function createFetchOptions(headers, withCredentials, abortController) {
  return {
    method: 'GET',
    headers: headers,
    signal: abortController && abortController.signal,
    mode: 'cors',
    credentials: withCredentials ? 'include' : 'same-origin',
    redirect: 'follow'
  };
}

var PDFFetchStream = function () {
  function PDFFetchStream(source) {
    _classCallCheck(this, PDFFetchStream);

    this.source = source;
    this.isHttp = /^https?:/i.test(source.url);
    this.httpHeaders = this.isHttp && source.httpHeaders || {};
    this._fullRequestReader = null;
    this._rangeRequestReaders = [];
  }

  _createClass(PDFFetchStream, [{
    key: 'getFullReader',
    value: function getFullReader() {
      (0, _util.assert)(!this._fullRequestReader);
      this._fullRequestReader = new PDFFetchStreamReader(this);
      return this._fullRequestReader;
    }
  }, {
    key: 'getRangeReader',
    value: function getRangeReader(begin, end) {
      var reader = new PDFFetchStreamRangeReader(this, begin, end);
      this._rangeRequestReaders.push(reader);
      return reader;
    }
  }, {
    key: 'cancelAllRequests',
    value: function cancelAllRequests(reason) {
      if (this._fullRequestReader) {
        this._fullRequestReader.cancel(reason);
      }
      var readers = this._rangeRequestReaders.slice(0);
      readers.forEach(function (reader) {
        reader.cancel(reason);
      });
    }
  }]);

  return PDFFetchStream;
}();

var PDFFetchStreamReader = function () {
  function PDFFetchStreamReader(stream) {
    var _this = this;

    _classCallCheck(this, PDFFetchStreamReader);

    this._stream = stream;
    this._reader = null;
    this._loaded = 0;
    this._filename = null;
    var source = stream.source;
    this._withCredentials = source.withCredentials;
    this._contentLength = source.length;
    this._headersCapability = (0, _util.createPromiseCapability)();
    this._disableRange = source.disableRange || false;
    this._rangeChunkSize = source.rangeChunkSize;
    if (!this._rangeChunkSize && !this._disableRange) {
      this._disableRange = true;
    }
    if (typeof AbortController !== 'undefined') {
      this._abortController = new AbortController();
    }
    this._isStreamingSupported = !source.disableStream;
    this._isRangeSupported = !source.disableRange;
    this._headers = new Headers();
    for (var property in this._stream.httpHeaders) {
      var value = this._stream.httpHeaders[property];
      if (typeof value === 'undefined') {
        continue;
      }
      this._headers.append(property, value);
    }
    var url = source.url;
    fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(function (response) {
      if (!(0, _network_utils.validateResponseStatus)(response.status)) {
        throw (0, _network_utils.createResponseStatusError)(response.status, url);
      }
      _this._reader = response.body.getReader();
      _this._headersCapability.resolve();
      var getResponseHeader = function getResponseHeader(name) {
        return response.headers.get(name);
      };

      var _validateRangeRequest = (0, _network_utils.validateRangeRequestCapabilities)({
        getResponseHeader: getResponseHeader,
        isHttp: _this._stream.isHttp,
        rangeChunkSize: _this._rangeChunkSize,
        disableRange: _this._disableRange
      }),
          allowRangeRequests = _validateRangeRequest.allowRangeRequests,
          suggestedLength = _validateRangeRequest.suggestedLength;

      _this._isRangeSupported = allowRangeRequests;
      _this._contentLength = suggestedLength || _this._contentLength;
      _this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);
      if (!_this._isStreamingSupported && _this._isRangeSupported) {
        _this.cancel(new _util.AbortException('streaming is disabled'));
      }
    }).catch(this._headersCapability.reject);
    this.onProgress = null;
  }

  _createClass(PDFFetchStreamReader, [{
    key: 'read',
    value: function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
        var _ref2, value, done, buffer;

        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this._headersCapability.promise;

              case 2:
                _context.next = 4;
                return this._reader.read();

              case 4:
                _ref2 = _context.sent;
                value = _ref2.value;
                done = _ref2.done;

                if (!done) {
                  _context.next = 9;
                  break;
                }

                return _context.abrupt('return', {
                  value: value,
                  done: done
                });

              case 9:
                this._loaded += value.byteLength;
                if (this.onProgress) {
                  this.onProgress({
                    loaded: this._loaded,
                    total: this._contentLength
                  });
                }
                buffer = new Uint8Array(value).buffer;
                return _context.abrupt('return', {
                  value: buffer,
                  done: false
                });

              case 13:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function read() {
        return _ref.apply(this, arguments);
      }

      return read;
    }()
  }, {
    key: 'cancel',
    value: function cancel(reason) {
      if (this._reader) {
        this._reader.cancel(reason);
      }
      if (this._abortController) {
        this._abortController.abort();
      }
    }
  }, {
    key: 'headersReady',
    get: function get() {
      return this._headersCapability.promise;
    }
  }, {
    key: 'filename',
    get: function get() {
      return this._filename;
    }
  }, {
    key: 'contentLength',
    get: function get() {
      return this._contentLength;
    }
  }, {
    key: 'isRangeSupported',
    get: function get() {
      return this._isRangeSupported;
    }
  }, {
    key: 'isStreamingSupported',
    get: function get() {
      return this._isStreamingSupported;
    }
  }]);

  return PDFFetchStreamReader;
}();

var PDFFetchStreamRangeReader = function () {
  function PDFFetchStreamRangeReader(stream, begin, end) {
    var _this2 = this;

    _classCallCheck(this, PDFFetchStreamRangeReader);

    this._stream = stream;
    this._reader = null;
    this._loaded = 0;
    var source = stream.source;
    this._withCredentials = source.withCredentials;
    this._readCapability = (0, _util.createPromiseCapability)();
    this._isStreamingSupported = !source.disableStream;
    if (typeof AbortController !== 'undefined') {
      this._abortController = new AbortController();
    }
    this._headers = new Headers();
    for (var property in this._stream.httpHeaders) {
      var value = this._stream.httpHeaders[property];
      if (typeof value === 'undefined') {
        continue;
      }
      this._headers.append(property, value);
    }
    var rangeStr = begin + '-' + (end - 1);
    this._headers.append('Range', 'bytes=' + rangeStr);
    var url = source.url;
    fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(function (response) {
      if (!(0, _network_utils.validateResponseStatus)(response.status)) {
        throw (0, _network_utils.createResponseStatusError)(response.status, url);
      }
      _this2._readCapability.resolve();
      _this2._reader = response.body.getReader();
    });
    this.onProgress = null;
  }

  _createClass(PDFFetchStreamRangeReader, [{
    key: 'read',
    value: function () {
      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee2() {
        var _ref4, value, done, buffer;

        return _regenerator2.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this._readCapability.promise;

              case 2:
                _context2.next = 4;
                return this._reader.read();

              case 4:
                _ref4 = _context2.sent;
                value = _ref4.value;
                done = _ref4.done;

                if (!done) {
                  _context2.next = 9;
                  break;
                }

                return _context2.abrupt('return', {
                  value: value,
                  done: done
                });

              case 9:
                this._loaded += value.byteLength;
                if (this.onProgress) {
                  this.onProgress({ loaded: this._loaded });
                }
                buffer = new Uint8Array(value).buffer;
                return _context2.abrupt('return', {
                  value: buffer,
                  done: false
                });

              case 13:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function read() {
        return _ref3.apply(this, arguments);
      }

      return read;
    }()
  }, {
    key: 'cancel',
    value: function cancel(reason) {
      if (this._reader) {
        this._reader.cancel(reason);
      }
      if (this._abortController) {
        this._abortController.abort();
      }
    }
  }, {
    key: 'isStreamingSupported',
    get: function get() {
      return this._isStreamingSupported;
    }
  }]);

  return PDFFetchStreamRangeReader;
}();

exports.PDFFetchStream = PDFFetchStream;

/***/ }),
/* 152 */
/***/ (function(module, exports, __w_pdfjs_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NetworkManager = exports.PDFNetworkStream = undefined;

var _regenerator = __w_pdfjs_require__(137);

var _regenerator2 = _interopRequireDefault(_regenerator);

var _util = __w_pdfjs_require__(1);

var _network_utils = __w_pdfjs_require__(149);

var _global_scope = __w_pdfjs_require__(3);

var _global_scope2 = _interopRequireDefault(_global_scope);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

;
var OK_RESPONSE = 200;
var PARTIAL_CONTENT_RESPONSE = 206;
function NetworkManager(url, args) {
  this.url = url;
  args = args || {};
  this.isHttp = /^https?:/i.test(url);
  this.httpHeaders = this.isHttp && args.httpHeaders || {};
  this.withCredentials = args.withCredentials || false;
  this.getXhr = args.getXhr || function NetworkManager_getXhr() {
    return new XMLHttpRequest();
  };
  this.currXhrId = 0;
  this.pendingRequests = Object.create(null);
  this.loadedRequests = Object.create(null);
}
function getArrayBuffer(xhr) {
  var data = xhr.response;
  if (typeof data !== 'string') {
    return data;
  }
  var array = (0, _util.stringToBytes)(data);
  return array.buffer;
}
var supportsMozChunked = function supportsMozChunkedClosure() {
  try {
    var x = new XMLHttpRequest();
    x.open('GET', _global_scope2.default.location.href);
    x.responseType = 'moz-chunked-arraybuffer';
    return x.responseType === 'moz-chunked-arraybuffer';
  } catch (e) {
    return false;
  }
}();
NetworkManager.prototype = {
  requestRange: function NetworkManager_requestRange(begin, end, listeners) {
    var args = {
      begin: begin,
      end: end
    };
    for (var prop in listeners) {
      args[prop] = listeners[prop];
    }
    return this.request(args);
  },
  requestFull: function NetworkManager_requestFull(listeners) {
    return this.request(listeners);
  },
  request: function NetworkManager_request(args) {
    var xhr = this.getXhr();
    var xhrId = this.currXhrId++;
    var pendingRequest = this.pendingRequests[xhrId] = { xhr: xhr };
    xhr.open('GET', this.url);
    xhr.withCredentials = this.withCredentials;
    for (var property in this.httpHeaders) {
      var value = this.httpHeaders[property];
      if (typeof value === 'undefined') {
        continue;
      }
      xhr.setRequestHeader(property, value);
    }
    if (this.isHttp && 'begin' in args && 'end' in args) {
      var rangeStr = args.begin + '-' + (args.end - 1);
      xhr.setRequestHeader('Range', 'bytes=' + rangeStr);
      pendingRequest.expectedStatus = 206;
    } else {
      pendingRequest.expectedStatus = 200;
    }
    var useMozChunkedLoading = supportsMozChunked && !!args.onProgressiveData;
    if (useMozChunkedLoading) {
      xhr.responseType = 'moz-chunked-arraybuffer';
      pendingRequest.onProgressiveData = args.onProgressiveData;
      pendingRequest.mozChunked = true;
    } else {
      xhr.responseType = 'arraybuffer';
    }
    if (args.onError) {
      xhr.onerror = function (evt) {
        args.onError(xhr.status);
      };
    }
    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);
    xhr.onprogress = this.onProgress.bind(this, xhrId);
    pendingRequest.onHeadersReceived = args.onHeadersReceived;
    pendingRequest.onDone = args.onDone;
    pendingRequest.onError = args.onError;
    pendingRequest.onProgress = args.onProgress;
    xhr.send(null);
    return xhrId;
  },
  onProgress: function NetworkManager_onProgress(xhrId, evt) {
    var pendingRequest = this.pendingRequests[xhrId];
    if (!pendingRequest) {
      return;
    }
    if (pendingRequest.mozChunked) {
      var chunk = getArrayBuffer(pendingRequest.xhr);
      pendingRequest.onProgressiveData(chunk);
    }
    var onProgress = pendingRequest.onProgress;
    if (onProgress) {
      onProgress(evt);
    }
  },
  onStateChange: function NetworkManager_onStateChange(xhrId, evt) {
    var pendingRequest = this.pendingRequests[xhrId];
    if (!pendingRequest) {
      return;
    }
    var xhr = pendingRequest.xhr;
    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {
      pendingRequest.onHeadersReceived();
      delete pendingRequest.onHeadersReceived;
    }
    if (xhr.readyState !== 4) {
      return;
    }
    if (!(xhrId in this.pendingRequests)) {
      return;
    }
    delete this.pendingRequests[xhrId];
    if (xhr.status === 0 && this.isHttp) {
      if (pendingRequest.onError) {
        pendingRequest.onError(xhr.status);
      }
      return;
    }
    var xhrStatus = xhr.status || OK_RESPONSE;
    var ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;
    if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {
      if (pendingRequest.onError) {
        pendingRequest.onError(xhr.status);
      }
      return;
    }
    this.loadedRequests[xhrId] = true;
    var chunk = getArrayBuffer(xhr);
    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {
      var rangeHeader = xhr.getResponseHeader('Content-Range');
      var matches = /bytes (\d+)-(\d+)\/(\d+)/.exec(rangeHeader);
      var begin = parseInt(matches[1], 10);
      pendingRequest.onDone({
        begin: begin,
        chunk: chunk
      });
    } else if (pendingRequest.onProgressiveData) {
      pendingRequest.onDone(null);
    } else if (chunk) {
      pendingRequest.onDone({
        begin: 0,
        chunk: chunk
      });
    } else if (pendingRequest.onError) {
      pendingRequest.onError(xhr.status);
    }
  },
  hasPendingRequests: function NetworkManager_hasPendingRequests() {
    for (var xhrId in this.pendingRequests) {
      return true;
    }
    return false;
  },
  getRequestXhr: function NetworkManager_getXhr(xhrId) {
    return this.pendingRequests[xhrId].xhr;
  },
  isStreamingRequest: function NetworkManager_isStreamingRequest(xhrId) {
    return !!this.pendingRequests[xhrId].onProgressiveData;
  },
  isPendingRequest: function NetworkManager_isPendingRequest(xhrId) {
    return xhrId in this.pendingRequests;
  },
  isLoadedRequest: function NetworkManager_isLoadedRequest(xhrId) {
    return xhrId in this.loadedRequests;
  },
  abortAllRequests: function NetworkManager_abortAllRequests() {
    for (var xhrId in this.pendingRequests) {
      this.abortRequest(xhrId | 0);
    }
  },
  abortRequest: function NetworkManager_abortRequest(xhrId) {
    var xhr = this.pendingRequests[xhrId].xhr;
    delete this.pendingRequests[xhrId];
    xhr.abort();
  }
};
function PDFNetworkStream(source) {
  this._source = source;
  this._manager = new NetworkManager(source.url, {
    httpHeaders: source.httpHeaders,
    withCredentials: source.withCredentials
  });
  this._rangeChunkSize = source.rangeChunkSize;
  this._fullRequestReader = null;
  this._rangeRequestReaders = [];
}
PDFNetworkStream.prototype = {
  _onRangeRequestReaderClosed: function PDFNetworkStream_onRangeRequestReaderClosed(reader) {
    var i = this._rangeRequestReaders.indexOf(reader);
    if (i >= 0) {
      this._rangeRequestReaders.splice(i, 1);
    }
  },
  getFullReader: function PDFNetworkStream_getFullReader() {
    (0, _util.assert)(!this._fullRequestReader);
    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._source);
    return this._fullRequestReader;
  },
  getRangeReader: function PDFNetworkStream_getRangeReader(begin, end) {
    var reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);
    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);
    this._rangeRequestReaders.push(reader);
    return reader;
  },
  cancelAllRequests: function PDFNetworkStream_cancelAllRequests(reason) {
    if (this._fullRequestReader) {
      this._fullRequestReader.cancel(reason);
    }
    var readers = this._rangeRequestReaders.slice(0);
    readers.forEach(function (reader) {
      reader.cancel(reason);
    });
  }
};
function PDFNetworkStreamFullRequestReader(manager, source) {
  this._manager = manager;
  var args = {
    onHeadersReceived: this._onHeadersReceived.bind(this),
    onProgressiveData: source.disableStream ? null : this._onProgressiveData.bind(this),
    onDone: this._onDone.bind(this),
    onError: this._onError.bind(this),
    onProgress: this._onProgress.bind(this)
  };
  this._url = source.url;
  this._fullRequestId = manager.requestFull(args);
  this._headersReceivedCapability = (0, _util.createPromiseCapability)();
  this._disableRange = source.disableRange || false;
  this._contentLength = source.length;
  this._rangeChunkSize = source.rangeChunkSize;
  if (!this._rangeChunkSize && !this._disableRange) {
    this._disableRange = true;
  }
  this._isStreamingSupported = false;
  this._isRangeSupported = false;
  this._cachedChunks = [];
  this._requests = [];
  this._done = false;
  this._storedError = undefined;
  this._filename = null;
  this.onProgress = null;
}
PDFNetworkStreamFullRequestReader.prototype = {
  _onHeadersReceived: function PDFNetworkStreamFullRequestReader_onHeadersReceived() {
    var fullRequestXhrId = this._fullRequestId;
    var fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);
    var getResponseHeader = function getResponseHeader(name) {
      return fullRequestXhr.getResponseHeader(name);
    };

    var _validateRangeRequest = (0, _network_utils.validateRangeRequestCapabilities)({
      getResponseHeader: getResponseHeader,
      isHttp: this._manager.isHttp,
      rangeChunkSize: this._rangeChunkSize,
      disableRange: this._disableRange
    }),
        allowRangeRequests = _validateRangeRequest.allowRangeRequests,
        suggestedLength = _validateRangeRequest.suggestedLength;

    if (allowRangeRequests) {
      this._isRangeSupported = true;
    }
    this._contentLength = suggestedLength || this._contentLength;
    this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);
    var networkManager = this._manager;
    if (networkManager.isStreamingRequest(fullRequestXhrId)) {
      this._isStreamingSupported = true;
    } else if (this._isRangeSupported) {
      networkManager.abortRequest(fullRequestXhrId);
    }
    this._headersReceivedCapability.resolve();
  },
  _onProgressiveData: function PDFNetworkStreamFullRequestReader_onProgressiveData(chunk) {
    if (this._requests.length > 0) {
      var requestCapability = this._requests.shift();
      requestCapability.resolve({
        value: chunk,
        done: false
      });
    } else {
      this._cachedChunks.push(chunk);
    }
  },
  _onDone: function PDFNetworkStreamFullRequestReader_onDone(args) {
    if (args) {
      this._onProgressiveData(args.chunk);
    }
    this._done = true;
    if (this._cachedChunks.length > 0) {
      return;
    }
    this._requests.forEach(function (requestCapability) {
      requestCapability.resolve({
        value: undefined,
        done: true
      });
    });
    this._requests = [];
  },
  _onError: function PDFNetworkStreamFullRequestReader_onError(status) {
    var url = this._url;
    var exception = (0, _network_utils.createResponseStatusError)(status, url);
    this._storedError = exception;
    this._headersReceivedCapability.reject(exception);
    this._requests.forEach(function (requestCapability) {
      requestCapability.reject(exception);
    });
    this._requests = [];
    this._cachedChunks = [];
  },
  _onProgress: function PDFNetworkStreamFullRequestReader_onProgress(data) {
    if (this.onProgress) {
      this.onProgress({
        loaded: data.loaded,
        total: data.lengthComputable ? data.total : this._contentLength
      });
    }
  },
  get filename() {
    return this._filename;
  },
  get isRangeSupported() {
    return this._isRangeSupported;
  },
  get isStreamingSupported() {
    return this._isStreamingSupported;
  },
  get contentLength() {
    return this._contentLength;
  },
  get headersReady() {
    return this._headersReceivedCapability.promise;
  },
  read: function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
      var chunk, requestCapability;
      return _regenerator2.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (!this._storedError) {
                _context.next = 2;
                break;
              }

              throw this._storedError;

            case 2:
              if (!(this._cachedChunks.length > 0)) {
                _context.next = 5;
                break;
              }

              chunk = this._cachedChunks.shift();
              return _context.abrupt('return', {
                value: chunk,
                done: false
              });

            case 5:
              if (!this._done) {
                _context.next = 7;
                break;
              }

              return _context.abrupt('return', {
                value: undefined,
                done: true
              });

            case 7:
              requestCapability = (0, _util.createPromiseCapability)();

              this._requests.push(requestCapability);
              return _context.abrupt('return', requestCapability.promise);

            case 10:
            case 'end':
              return _context.stop();
          }
        }
      }, _callee, this);
    }));

    function read() {
      return _ref.apply(this, arguments);
    }

    return read;
  }(),

  cancel: function PDFNetworkStreamFullRequestReader_cancel(reason) {
    this._done = true;
    this._headersReceivedCapability.reject(reason);
    this._requests.forEach(function (requestCapability) {
      requestCapability.resolve({
        value: undefined,
        done: true
      });
    });
    this._requests = [];
    if (this._manager.isPendingRequest(this._fullRequestId)) {
      this._manager.abortRequest(this._fullRequestId);
    }
    this._fullRequestReader = null;
  }
};
function PDFNetworkStreamRangeRequestReader(manager, begin, end) {
  this._manager = manager;
  var args = {
    onDone: this._onDone.bind(this),
    onProgress: this._onProgress.bind(this)
  };
  this._requestId = manager.requestRange(begin, end, args);
  this._requests = [];
  this._queuedChunk = null;
  this._done = false;
  this.onProgress = null;
  this.onClosed = null;
}
PDFNetworkStreamRangeRequestReader.prototype = {
  _close: function PDFNetworkStreamRangeRequestReader_close() {
    if (this.onClosed) {
      this.onClosed(this);
    }
  },
  _onDone: function PDFNetworkStreamRangeRequestReader_onDone(data) {
    var chunk = data.chunk;
    if (this._requests.length > 0) {
      var requestCapability = this._requests.shift();
      requestCapability.resolve({
        value: chunk,
        done: false
      });
    } else {
      this._queuedChunk = chunk;
    }
    this._done = true;
    this._requests.forEach(function (requestCapability) {
      requestCapability.resolve({
        value: undefined,
        done: true
      });
    });
    this._requests = [];
    this._close();
  },
  _onProgress: function PDFNetworkStreamRangeRequestReader_onProgress(evt) {
    if (!this.isStreamingSupported && this.onProgress) {
      this.onProgress({ loaded: evt.loaded });
    }
  },
  get isStreamingSupported() {
    return false;
  },
  read: function () {
    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee2() {
      var chunk, requestCapability;
      return _regenerator2.default.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              if (!(this._queuedChunk !== null)) {
                _context2.next = 4;
                break;
              }

              chunk = this._queuedChunk;

              this._queuedChunk = null;
              return _context2.abrupt('return', {
                value: chunk,
                done: false
              });

            case 4:
              if (!this._done) {
                _context2.next = 6;
                break;
              }

              return _context2.abrupt('return', {
                value: undefined,
                done: true
              });

            case 6:
              requestCapability = (0, _util.createPromiseCapability)();

              this._requests.push(requestCapability);
              return _context2.abrupt('return', requestCapability.promise);

            case 9:
            case 'end':
              return _context2.stop();
          }
        }
      }, _callee2, this);
    }));

    function read() {
      return _ref2.apply(this, arguments);
    }

    return read;
  }(),

  cancel: function PDFNetworkStreamRangeRequestReader_cancel(reason) {
    this._done = true;
    this._requests.forEach(function (requestCapability) {
      requestCapability.resolve({
        value: undefined,
        done: true
      });
    });
    this._requests = [];
    if (this._manager.isPendingRequest(this._requestId)) {
      this._manager.abortRequest(this._requestId);
    }
    this._close();
  }
};
exports.PDFNetworkStream = PDFNetworkStream;
exports.NetworkManager = NetworkManager;

/***/ })
/******/ ]);
});
//# sourceMappingURL=pdf.js.map
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../buffer/index.js */ "./node_modules/buffer/index.js").Buffer, __webpack_require__(/*! ./../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"), __webpack_require__(/*! ./../../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "./node_modules/querystring-es3/decode.js":
/*!************************************************!*\
  !*** ./node_modules/querystring-es3/decode.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



// If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function(qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);

  var maxKeys = 1000;
  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length;
  // maxKeys <= 0 means that we should not limit keys count
  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr, vstr, k, v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};


/***/ }),

/***/ "./node_modules/querystring-es3/encode.js":
/*!************************************************!*\
  !*** ./node_modules/querystring-es3/encode.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



var stringifyPrimitive = function(v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function(obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';
  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), function(k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
      if (isArray(obj[k])) {
        return map(obj[k], function(v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);

  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq +
         encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map (xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];
  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }
  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }
  return res;
};


/***/ }),

/***/ "./node_modules/querystring-es3/index.js":
/*!***********************************************!*\
  !*** ./node_modules/querystring-es3/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.decode = exports.parse = __webpack_require__(/*! ./decode */ "./node_modules/querystring-es3/decode.js");
exports.encode = exports.stringify = __webpack_require__(/*! ./encode */ "./node_modules/querystring-es3/encode.js");


/***/ }),

/***/ "./node_modules/url/url.js":
/*!*********************************!*\
  !*** ./node_modules/url/url.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



var punycode = __webpack_require__(/*! punycode */ "./node_modules/node-libs-browser/node_modules/punycode/punycode.js");
var util = __webpack_require__(/*! ./util */ "./node_modules/url/util.js");

exports.parse = urlParse;
exports.resolve = urlResolve;
exports.resolveObject = urlResolveObject;
exports.format = urlFormat;

exports.Url = Url;

function Url() {
  this.protocol = null;
  this.slashes = null;
  this.auth = null;
  this.host = null;
  this.port = null;
  this.hostname = null;
  this.hash = null;
  this.search = null;
  this.query = null;
  this.pathname = null;
  this.path = null;
  this.href = null;
}

// Reference: RFC 3986, RFC 1808, RFC 2396

// define these here so at least they only have to be
// compiled once on the first module load.
var protocolPattern = /^([a-z0-9.+-]+:)/i,
    portPattern = /:[0-9]*$/,

    // Special case for a simple path URL
    simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,

    // RFC 2396: characters reserved for delimiting URLs.
    // We actually just auto-escape these.
    delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],

    // RFC 2396: characters not allowed for various reasons.
    unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),

    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
    autoEscape = ['\''].concat(unwise),
    // Characters that are never ever allowed in a hostname.
    // Note that any invalid chars are also handled, but these
    // are the ones that are *expected* to be seen, so we fast-path
    // them.
    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
    hostEndingChars = ['/', '?', '#'],
    hostnameMaxLen = 255,
    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,
    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
    // protocols that can allow "unsafe" and "unwise" chars.
    unsafeProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that never have a hostname.
    hostlessProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that always contain a // bit.
    slashedProtocol = {
      'http': true,
      'https': true,
      'ftp': true,
      'gopher': true,
      'file': true,
      'http:': true,
      'https:': true,
      'ftp:': true,
      'gopher:': true,
      'file:': true
    },
    querystring = __webpack_require__(/*! querystring */ "./node_modules/querystring-es3/index.js");

function urlParse(url, parseQueryString, slashesDenoteHost) {
  if (url && util.isObject(url) && url instanceof Url) return url;

  var u = new Url;
  u.parse(url, parseQueryString, slashesDenoteHost);
  return u;
}

Url.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {
  if (!util.isString(url)) {
    throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
  }

  // Copy chrome, IE, opera backslash-handling behavior.
  // Back slashes before the query string get converted to forward slashes
  // See: https://code.google.com/p/chromium/issues/detail?id=25916
  var queryIndex = url.indexOf('?'),
      splitter =
          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',
      uSplit = url.split(splitter),
      slashRegex = /\\/g;
  uSplit[0] = uSplit[0].replace(slashRegex, '/');
  url = uSplit.join(splitter);

  var rest = url;

  // trim before proceeding.
  // This is to support parse stuff like "  http://foo.com  \n"
  rest = rest.trim();

  if (!slashesDenoteHost && url.split('#').length === 1) {
    // Try fast path regexp
    var simplePath = simplePathPattern.exec(rest);
    if (simplePath) {
      this.path = rest;
      this.href = rest;
      this.pathname = simplePath[1];
      if (simplePath[2]) {
        this.search = simplePath[2];
        if (parseQueryString) {
          this.query = querystring.parse(this.search.substr(1));
        } else {
          this.query = this.search.substr(1);
        }
      } else if (parseQueryString) {
        this.search = '';
        this.query = {};
      }
      return this;
    }
  }

  var proto = protocolPattern.exec(rest);
  if (proto) {
    proto = proto[0];
    var lowerProto = proto.toLowerCase();
    this.protocol = lowerProto;
    rest = rest.substr(proto.length);
  }

  // figure out if it's got a host
  // user@server is *always* interpreted as a hostname, and url
  // resolution will treat //foo/bar as host=foo,path=bar because that's
  // how the browser resolves relative URLs.
  if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
    var slashes = rest.substr(0, 2) === '//';
    if (slashes && !(proto && hostlessProtocol[proto])) {
      rest = rest.substr(2);
      this.slashes = true;
    }
  }

  if (!hostlessProtocol[proto] &&
      (slashes || (proto && !slashedProtocol[proto]))) {

    // there's a hostname.
    // the first instance of /, ?, ;, or # ends the host.
    //
    // If there is an @ in the hostname, then non-host chars *are* allowed
    // to the left of the last @ sign, unless some host-ending character
    // comes *before* the @-sign.
    // URLs are obnoxious.
    //
    // ex:
    // http://a@b@c/ => user:a@b host:c
    // http://a@b?@c => user:a host:c path:/?@c

    // v0.12 TODO(isaacs): This is not quite how Chrome does things.
    // Review our test case against browsers more comprehensively.

    // find the first instance of any hostEndingChars
    var hostEnd = -1;
    for (var i = 0; i < hostEndingChars.length; i++) {
      var hec = rest.indexOf(hostEndingChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }

    // at this point, either we have an explicit point where the
    // auth portion cannot go past, or the last @ char is the decider.
    var auth, atSign;
    if (hostEnd === -1) {
      // atSign can be anywhere.
      atSign = rest.lastIndexOf('@');
    } else {
      // atSign must be in auth portion.
      // http://a@b/c@d => host:b auth:a path:/c@d
      atSign = rest.lastIndexOf('@', hostEnd);
    }

    // Now we have a portion which is definitely the auth.
    // Pull that off.
    if (atSign !== -1) {
      auth = rest.slice(0, atSign);
      rest = rest.slice(atSign + 1);
      this.auth = decodeURIComponent(auth);
    }

    // the host is the remaining to the left of the first non-host char
    hostEnd = -1;
    for (var i = 0; i < nonHostChars.length; i++) {
      var hec = rest.indexOf(nonHostChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }
    // if we still have not hit it, then the entire thing is a host.
    if (hostEnd === -1)
      hostEnd = rest.length;

    this.host = rest.slice(0, hostEnd);
    rest = rest.slice(hostEnd);

    // pull out port.
    this.parseHost();

    // we've indicated that there is a hostname,
    // so even if it's empty, it has to be present.
    this.hostname = this.hostname || '';

    // if hostname begins with [ and ends with ]
    // assume that it's an IPv6 address.
    var ipv6Hostname = this.hostname[0] === '[' &&
        this.hostname[this.hostname.length - 1] === ']';

    // validate a little.
    if (!ipv6Hostname) {
      var hostparts = this.hostname.split(/\./);
      for (var i = 0, l = hostparts.length; i < l; i++) {
        var part = hostparts[i];
        if (!part) continue;
        if (!part.match(hostnamePartPattern)) {
          var newpart = '';
          for (var j = 0, k = part.length; j < k; j++) {
            if (part.charCodeAt(j) > 127) {
              // we replace non-ASCII char with a temporary placeholder
              // we need this to make sure size of hostname is not
              // broken by replacing non-ASCII by nothing
              newpart += 'x';
            } else {
              newpart += part[j];
            }
          }
          // we test again with ASCII char only
          if (!newpart.match(hostnamePartPattern)) {
            var validParts = hostparts.slice(0, i);
            var notHost = hostparts.slice(i + 1);
            var bit = part.match(hostnamePartStart);
            if (bit) {
              validParts.push(bit[1]);
              notHost.unshift(bit[2]);
            }
            if (notHost.length) {
              rest = '/' + notHost.join('.') + rest;
            }
            this.hostname = validParts.join('.');
            break;
          }
        }
      }
    }

    if (this.hostname.length > hostnameMaxLen) {
      this.hostname = '';
    } else {
      // hostnames are always lower case.
      this.hostname = this.hostname.toLowerCase();
    }

    if (!ipv6Hostname) {
      // IDNA Support: Returns a punycoded representation of "domain".
      // It only converts parts of the domain name that
      // have non-ASCII characters, i.e. it doesn't matter if
      // you call it with a domain that already is ASCII-only.
      this.hostname = punycode.toASCII(this.hostname);
    }

    var p = this.port ? ':' + this.port : '';
    var h = this.hostname || '';
    this.host = h + p;
    this.href += this.host;

    // strip [ and ] from the hostname
    // the host field still retains them, though
    if (ipv6Hostname) {
      this.hostname = this.hostname.substr(1, this.hostname.length - 2);
      if (rest[0] !== '/') {
        rest = '/' + rest;
      }
    }
  }

  // now rest is set to the post-host stuff.
  // chop off any delim chars.
  if (!unsafeProtocol[lowerProto]) {

    // First, make 100% sure that any "autoEscape" chars get
    // escaped, even if encodeURIComponent doesn't think they
    // need to be.
    for (var i = 0, l = autoEscape.length; i < l; i++) {
      var ae = autoEscape[i];
      if (rest.indexOf(ae) === -1)
        continue;
      var esc = encodeURIComponent(ae);
      if (esc === ae) {
        esc = escape(ae);
      }
      rest = rest.split(ae).join(esc);
    }
  }


  // chop off from the tail first.
  var hash = rest.indexOf('#');
  if (hash !== -1) {
    // got a fragment string.
    this.hash = rest.substr(hash);
    rest = rest.slice(0, hash);
  }
  var qm = rest.indexOf('?');
  if (qm !== -1) {
    this.search = rest.substr(qm);
    this.query = rest.substr(qm + 1);
    if (parseQueryString) {
      this.query = querystring.parse(this.query);
    }
    rest = rest.slice(0, qm);
  } else if (parseQueryString) {
    // no query string, but parseQueryString still requested
    this.search = '';
    this.query = {};
  }
  if (rest) this.pathname = rest;
  if (slashedProtocol[lowerProto] &&
      this.hostname && !this.pathname) {
    this.pathname = '/';
  }

  //to support http.request
  if (this.pathname || this.search) {
    var p = this.pathname || '';
    var s = this.search || '';
    this.path = p + s;
  }

  // finally, reconstruct the href based on what has been validated.
  this.href = this.format();
  return this;
};

// format a parsed object into a url string
function urlFormat(obj) {
  // ensure it's an object, and not a string url.
  // If it's an obj, this is a no-op.
  // this way, you can call url_format() on strings
  // to clean up potentially wonky urls.
  if (util.isString(obj)) obj = urlParse(obj);
  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
  return obj.format();
}

Url.prototype.format = function() {
  var auth = this.auth || '';
  if (auth) {
    auth = encodeURIComponent(auth);
    auth = auth.replace(/%3A/i, ':');
    auth += '@';
  }

  var protocol = this.protocol || '',
      pathname = this.pathname || '',
      hash = this.hash || '',
      host = false,
      query = '';

  if (this.host) {
    host = auth + this.host;
  } else if (this.hostname) {
    host = auth + (this.hostname.indexOf(':') === -1 ?
        this.hostname :
        '[' + this.hostname + ']');
    if (this.port) {
      host += ':' + this.port;
    }
  }

  if (this.query &&
      util.isObject(this.query) &&
      Object.keys(this.query).length) {
    query = querystring.stringify(this.query);
  }

  var search = this.search || (query && ('?' + query)) || '';

  if (protocol && protocol.substr(-1) !== ':') protocol += ':';

  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
  // unless they had them to begin with.
  if (this.slashes ||
      (!protocol || slashedProtocol[protocol]) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }

  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
  if (search && search.charAt(0) !== '?') search = '?' + search;

  pathname = pathname.replace(/[?#]/g, function(match) {
    return encodeURIComponent(match);
  });
  search = search.replace('#', '%23');

  return protocol + host + pathname + search + hash;
};

function urlResolve(source, relative) {
  return urlParse(source, false, true).resolve(relative);
}

Url.prototype.resolve = function(relative) {
  return this.resolveObject(urlParse(relative, false, true)).format();
};

function urlResolveObject(source, relative) {
  if (!source) return relative;
  return urlParse(source, false, true).resolveObject(relative);
}

Url.prototype.resolveObject = function(relative) {
  if (util.isString(relative)) {
    var rel = new Url();
    rel.parse(relative, false, true);
    relative = rel;
  }

  var result = new Url();
  var tkeys = Object.keys(this);
  for (var tk = 0; tk < tkeys.length; tk++) {
    var tkey = tkeys[tk];
    result[tkey] = this[tkey];
  }

  // hash is always overridden, no matter what.
  // even href="" will remove it.
  result.hash = relative.hash;

  // if the relative url is empty, then there's nothing left to do here.
  if (relative.href === '') {
    result.href = result.format();
    return result;
  }

  // hrefs like //foo/bar always cut to the protocol.
  if (relative.slashes && !relative.protocol) {
    // take everything except the protocol from relative
    var rkeys = Object.keys(relative);
    for (var rk = 0; rk < rkeys.length; rk++) {
      var rkey = rkeys[rk];
      if (rkey !== 'protocol')
        result[rkey] = relative[rkey];
    }

    //urlParse appends trailing / to urls like http://www.example.com
    if (slashedProtocol[result.protocol] &&
        result.hostname && !result.pathname) {
      result.path = result.pathname = '/';
    }

    result.href = result.format();
    return result;
  }

  if (relative.protocol && relative.protocol !== result.protocol) {
    // if it's a known url protocol, then changing
    // the protocol does weird things
    // first, if it's not file:, then we MUST have a host,
    // and if there was a path
    // to begin with, then we MUST have a path.
    // if it is file:, then the host is dropped,
    // because that's known to be hostless.
    // anything else is assumed to be absolute.
    if (!slashedProtocol[relative.protocol]) {
      var keys = Object.keys(relative);
      for (var v = 0; v < keys.length; v++) {
        var k = keys[v];
        result[k] = relative[k];
      }
      result.href = result.format();
      return result;
    }

    result.protocol = relative.protocol;
    if (!relative.host && !hostlessProtocol[relative.protocol]) {
      var relPath = (relative.pathname || '').split('/');
      while (relPath.length && !(relative.host = relPath.shift()));
      if (!relative.host) relative.host = '';
      if (!relative.hostname) relative.hostname = '';
      if (relPath[0] !== '') relPath.unshift('');
      if (relPath.length < 2) relPath.unshift('');
      result.pathname = relPath.join('/');
    } else {
      result.pathname = relative.pathname;
    }
    result.search = relative.search;
    result.query = relative.query;
    result.host = relative.host || '';
    result.auth = relative.auth;
    result.hostname = relative.hostname || relative.host;
    result.port = relative.port;
    // to support http.request
    if (result.pathname || result.search) {
      var p = result.pathname || '';
      var s = result.search || '';
      result.path = p + s;
    }
    result.slashes = result.slashes || relative.slashes;
    result.href = result.format();
    return result;
  }

  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),
      isRelAbs = (
          relative.host ||
          relative.pathname && relative.pathname.charAt(0) === '/'
      ),
      mustEndAbs = (isRelAbs || isSourceAbs ||
                    (result.host && relative.pathname)),
      removeAllDots = mustEndAbs,
      srcPath = result.pathname && result.pathname.split('/') || [],
      relPath = relative.pathname && relative.pathname.split('/') || [],
      psychotic = result.protocol && !slashedProtocol[result.protocol];

  // if the url is a non-slashed url, then relative
  // links like ../.. should be able
  // to crawl up to the hostname, as well.  This is strange.
  // result.protocol has already been set by now.
  // Later on, put the first path part into the host field.
  if (psychotic) {
    result.hostname = '';
    result.port = null;
    if (result.host) {
      if (srcPath[0] === '') srcPath[0] = result.host;
      else srcPath.unshift(result.host);
    }
    result.host = '';
    if (relative.protocol) {
      relative.hostname = null;
      relative.port = null;
      if (relative.host) {
        if (relPath[0] === '') relPath[0] = relative.host;
        else relPath.unshift(relative.host);
      }
      relative.host = null;
    }
    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
  }

  if (isRelAbs) {
    // it's absolute.
    result.host = (relative.host || relative.host === '') ?
                  relative.host : result.host;
    result.hostname = (relative.hostname || relative.hostname === '') ?
                      relative.hostname : result.hostname;
    result.search = relative.search;
    result.query = relative.query;
    srcPath = relPath;
    // fall through to the dot-handling below.
  } else if (relPath.length) {
    // it's relative
    // throw away the existing file, and take the new path instead.
    if (!srcPath) srcPath = [];
    srcPath.pop();
    srcPath = srcPath.concat(relPath);
    result.search = relative.search;
    result.query = relative.query;
  } else if (!util.isNullOrUndefined(relative.search)) {
    // just pull out the search.
    // like href='?foo'.
    // Put this after the other two cases because it simplifies the booleans
    if (psychotic) {
      result.hostname = result.host = srcPath.shift();
      //occationaly the auth can get stuck only in host
      //this especially happens in cases like
      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
      var authInHost = result.host && result.host.indexOf('@') > 0 ?
                       result.host.split('@') : false;
      if (authInHost) {
        result.auth = authInHost.shift();
        result.host = result.hostname = authInHost.shift();
      }
    }
    result.search = relative.search;
    result.query = relative.query;
    //to support http.request
    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
      result.path = (result.pathname ? result.pathname : '') +
                    (result.search ? result.search : '');
    }
    result.href = result.format();
    return result;
  }

  if (!srcPath.length) {
    // no path at all.  easy.
    // we've already handled the other stuff above.
    result.pathname = null;
    //to support http.request
    if (result.search) {
      result.path = '/' + result.search;
    } else {
      result.path = null;
    }
    result.href = result.format();
    return result;
  }

  // if a url ENDs in . or .., then it must get a trailing slash.
  // however, if it ends in anything else non-slashy,
  // then it must NOT get a trailing slash.
  var last = srcPath.slice(-1)[0];
  var hasTrailingSlash = (
      (result.host || relative.host || srcPath.length > 1) &&
      (last === '.' || last === '..') || last === '');

  // strip single dots, resolve double dots to parent dir
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = srcPath.length; i >= 0; i--) {
    last = srcPath[i];
    if (last === '.') {
      srcPath.splice(i, 1);
    } else if (last === '..') {
      srcPath.splice(i, 1);
      up++;
    } else if (up) {
      srcPath.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (!mustEndAbs && !removeAllDots) {
    for (; up--; up) {
      srcPath.unshift('..');
    }
  }

  if (mustEndAbs && srcPath[0] !== '' &&
      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
    srcPath.unshift('');
  }

  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {
    srcPath.push('');
  }

  var isAbsolute = srcPath[0] === '' ||
      (srcPath[0] && srcPath[0].charAt(0) === '/');

  // put the host back
  if (psychotic) {
    result.hostname = result.host = isAbsolute ? '' :
                                    srcPath.length ? srcPath.shift() : '';
    //occationaly the auth can get stuck only in host
    //this especially happens in cases like
    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
    var authInHost = result.host && result.host.indexOf('@') > 0 ?
                     result.host.split('@') : false;
    if (authInHost) {
      result.auth = authInHost.shift();
      result.host = result.hostname = authInHost.shift();
    }
  }

  mustEndAbs = mustEndAbs || (result.host && srcPath.length);

  if (mustEndAbs && !isAbsolute) {
    srcPath.unshift('');
  }

  if (!srcPath.length) {
    result.pathname = null;
    result.path = null;
  } else {
    result.pathname = srcPath.join('/');
  }

  //to support request.http
  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
    result.path = (result.pathname ? result.pathname : '') +
                  (result.search ? result.search : '');
  }
  result.auth = relative.auth || result.auth;
  result.slashes = result.slashes || relative.slashes;
  result.href = result.format();
  return result;
};

Url.prototype.parseHost = function() {
  var host = this.host;
  var port = portPattern.exec(host);
  if (port) {
    port = port[0];
    if (port !== ':') {
      this.port = port.substr(1);
    }
    host = host.substr(0, host.length - port.length);
  }
  if (host) this.hostname = host;
};


/***/ }),

/***/ "./node_modules/url/util.js":
/*!**********************************!*\
  !*** ./node_modules/url/util.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  isString: function(arg) {
    return typeof(arg) === 'string';
  },
  isObject: function(arg) {
    return typeof(arg) === 'object' && arg !== null;
  },
  isNull: function(arg) {
    return arg === null;
  },
  isNullOrUndefined: function(arg) {
    return arg == null;
  }
};


/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "./src/arrow.fabric.js":
/*!*****************************!*\
  !*** ./src/arrow.fabric.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * From: https://blog.thirdrocktechkno.com/how-to-draw-an-arrow-using-html-5-canvas-and-fabricjs-9500c3f50ecb
 */
// Extended fabric line class
fabric.LineArrow = fabric.util.createClass(fabric.Line, {
  type: 'lineArrow',
  initialize: function initialize(element, options) {
    options || (options = {});
    this.callSuper('initialize', element, options);
  },
  toObject: function toObject() {
    return fabric.util.object.extend(this.callSuper('toObject'));
  },
  _render: function _render(ctx) {
    this.callSuper('_render', ctx); // do not render if width/height are zeros or object is not visible

    if (this.width === 0 || this.height === 0 || !this.visible) return;
    ctx.save();
    var xDiff = this.x2 - this.x1;
    var yDiff = this.y2 - this.y1;
    var angle = Math.atan2(yDiff, xDiff);
    ctx.translate((this.x2 - this.x1) / 2, (this.y2 - this.y1) / 2);
    ctx.rotate(angle);
    ctx.beginPath(); //move 10px in front of line to start the arrow so it does not have the square line end showing in front (0,0)

    ctx.moveTo(10, 0);
    ctx.lineTo(-20, 15);
    ctx.lineTo(-20, -15);
    ctx.closePath();
    ctx.fillStyle = this.stroke;
    ctx.fill();
    ctx.restore();
  }
});

fabric.LineArrow.fromObject = function (object, callback) {
  callback && callback(new fabric.LineArrow([object.x1, object.y1, object.x2, object.y2], object));
};

fabric.LineArrow.async = true;

var Arrow = function () {
  function Arrow(canvas, color, callback) {
    this.canvas = canvas;
    this.className = 'Arrow';
    this.isDrawing = false;
    this.color = color;
    this.callback = callback;
    this.bindEvents();
  }

  Arrow.prototype.bindEvents = function () {
    var inst = this;
    inst.canvas.on('mouse:down', function (o) {
      inst.onMouseDown(o);
    });
    inst.canvas.on('mouse:move', function (o) {
      inst.onMouseMove(o);
    });
    inst.canvas.on('mouse:up', function (o) {
      inst.onMouseUp(o);
    });
    inst.canvas.on('object:moving', function (o) {
      inst.disable();
    });
  };

  Arrow.prototype.unBindEventes = function () {
    var inst = this;
    inst.canvas.off('mouse:down');
    inst.canvas.off('mouse:up');
    inst.canvas.off('mouse:move');
    inst.canvas.off('object:moving');
  };

  Arrow.prototype.onMouseUp = function (o) {
    var inst = this;
    inst.disable();
    inst.unBindEventes();
    if (inst.callback) inst.callback();
  };

  Arrow.prototype.onMouseMove = function (o) {
    var inst = this;

    if (!inst.isEnable()) {
      return;
    }

    var pointer = inst.canvas.getPointer(o.e);
    var activeObj = inst.canvas.getActiveObject();
    activeObj.set({
      x2: pointer.x,
      y2: pointer.y
    });
    activeObj.setCoords();
    inst.canvas.renderAll();
  };

  Arrow.prototype.onMouseDown = function (o) {
    var inst = this;
    inst.enable();
    var pointer = inst.canvas.getPointer(o.e);
    var points = [pointer.x, pointer.y, pointer.x, pointer.y];
    var line = new fabric.LineArrow(points, {
      strokeWidth: 5,
      fill: inst.color ? inst.color : 'red',
      stroke: inst.color ? inst.color : 'red',
      originX: 'center',
      originY: 'center',
      hasBorders: false,
      hasControls: true,
      selectable: true
    });
    inst.canvas.add(line).setActiveObject(line);
  };

  Arrow.prototype.isEnable = function () {
    return this.isDrawing;
  };

  Arrow.prototype.enable = function () {
    this.isDrawing = true;
  };

  Arrow.prototype.disable = function () {
    this.isDrawing = false;
  };

  return Arrow;
}();

/***/ }),

/***/ "./src/jspdf.min.js":
/*!**************************!*\
  !*** ./src/jspdf.min.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

!function (t) {
   true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (t),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;
}(function () {
  "use strict";
  /** @license
     * jsPDF - PDF Document creation from JavaScript
     * Version 1.5.3 Built on 2018-12-27T14:11:42.696Z
     *                      CommitID d93d28db14
     *
     * Copyright (c) 2010-2016 James Hall <james@parall.ax>, https://github.com/MrRio/jsPDF
     *               2010 Aaron Spike, https://github.com/acspike
     *               2012 Willow Systems Corporation, willow-systems.com
     *               2012 Pablo Hess, https://github.com/pablohess
     *               2012 Florian Jenett, https://github.com/fjenett
     *               2013 Warren Weckesser, https://github.com/warrenweckesser
     *               2013 Youssef Beddad, https://github.com/lifof
     *               2013 Lee Driscoll, https://github.com/lsdriscoll
     *               2013 Stefan Slonevskiy, https://github.com/stefslon
     *               2013 Jeremy Morel, https://github.com/jmorel
     *               2013 Christoph Hartmann, https://github.com/chris-rock
     *               2014 Juan Pablo Gaviria, https://github.com/juanpgaviria
     *               2014 James Makes, https://github.com/dollaruw
     *               2014 Diego Casorran, https://github.com/diegocr
     *               2014 Steven Spungin, https://github.com/Flamenco
     *               2014 Kenneth Glassey, https://github.com/Gavvers
     *
     * Licensed under the MIT License
     *
     * Contributor(s):
     *    siefkenj, ahwolf, rickygu, Midnith, saintclair, eaparango,
     *    kim3er, mfo, alnorth, Flamenco
     */

  function se(t) {
    return (se = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
      return _typeof(t);
    } : function (t) {
      return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
    })(t);
  }

  !function (t) {
    if ("object" !== se(t.console)) {
      t.console = {};

      for (var e, n, r = t.console, i = function i() {}, o = ["memory"], a = "assert,clear,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn".split(","); e = o.pop();) {
        r[e] || (r[e] = {});
      }

      for (; n = a.pop();) {
        r[n] || (r[n] = i);
      }
    }

    var s,
        l,
        h,
        u,
        c = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    void 0 === t.btoa && (t.btoa = function (t) {
      var e,
          n,
          r,
          i,
          o,
          a = 0,
          s = 0,
          l = "",
          h = [];
      if (!t) return t;

      for (; e = (o = t.charCodeAt(a++) << 16 | t.charCodeAt(a++) << 8 | t.charCodeAt(a++)) >> 18 & 63, n = o >> 12 & 63, r = o >> 6 & 63, i = 63 & o, h[s++] = c.charAt(e) + c.charAt(n) + c.charAt(r) + c.charAt(i), a < t.length;) {
        ;
      }

      l = h.join("");
      var u = t.length % 3;
      return (u ? l.slice(0, u - 3) : l) + "===".slice(u || 3);
    }), void 0 === t.atob && (t.atob = function (t) {
      var e,
          n,
          r,
          i,
          o,
          a,
          s = 0,
          l = 0,
          h = [];
      if (!t) return t;

      for (t += ""; e = (a = c.indexOf(t.charAt(s++)) << 18 | c.indexOf(t.charAt(s++)) << 12 | (i = c.indexOf(t.charAt(s++))) << 6 | (o = c.indexOf(t.charAt(s++)))) >> 16 & 255, n = a >> 8 & 255, r = 255 & a, h[l++] = 64 == i ? String.fromCharCode(e) : 64 == o ? String.fromCharCode(e, n) : String.fromCharCode(e, n, r), s < t.length;) {
        ;
      }

      return h.join("");
    }), Array.prototype.map || (Array.prototype.map = function (t) {
      if (null == this || "function" != typeof t) throw new TypeError();

      for (var e = Object(this), n = e.length >>> 0, r = new Array(n), i = 1 < arguments.length ? arguments[1] : void 0, o = 0; o < n; o++) {
        o in e && (r[o] = t.call(i, e[o], o, e));
      }

      return r;
    }), Array.isArray || (Array.isArray = function (t) {
      return "[object Array]" === Object.prototype.toString.call(t);
    }), Array.prototype.forEach || (Array.prototype.forEach = function (t, e) {
      if (null == this || "function" != typeof t) throw new TypeError();

      for (var n = Object(this), r = n.length >>> 0, i = 0; i < r; i++) {
        i in n && t.call(e, n[i], i, n);
      }
    }), Array.prototype.find || Object.defineProperty(Array.prototype, "find", {
      value: function value(t) {
        if (null == this) throw new TypeError('"this" is null or not defined');
        var e = Object(this),
            n = e.length >>> 0;
        if ("function" != typeof t) throw new TypeError("predicate must be a function");

        for (var r = arguments[1], i = 0; i < n;) {
          var o = e[i];
          if (t.call(r, o, i, e)) return o;
          i++;
        }
      },
      configurable: !0,
      writable: !0
    }), Object.keys || (Object.keys = (s = Object.prototype.hasOwnProperty, l = !{
      toString: null
    }.propertyIsEnumerable("toString"), u = (h = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"]).length, function (t) {
      if ("object" !== se(t) && ("function" != typeof t || null === t)) throw new TypeError();
      var e,
          n,
          r = [];

      for (e in t) {
        s.call(t, e) && r.push(e);
      }

      if (l) for (n = 0; n < u; n++) {
        s.call(t, h[n]) && r.push(h[n]);
      }
      return r;
    })), "function" != typeof Object.assign && (Object.assign = function (t) {
      if (null == t) throw new TypeError("Cannot convert undefined or null to object");
      t = Object(t);

      for (var e = 1; e < arguments.length; e++) {
        var n = arguments[e];
        if (null != n) for (var r in n) {
          Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
      }

      return t;
    }), String.prototype.trim || (String.prototype.trim = function () {
      return this.replace(/^\s+|\s+$/g, "");
    }), String.prototype.trimLeft || (String.prototype.trimLeft = function () {
      return this.replace(/^\s+/g, "");
    }), String.prototype.trimRight || (String.prototype.trimRight = function () {
      return this.replace(/\s+$/g, "");
    }), Number.isInteger = Number.isInteger || function (t) {
      return "number" == typeof t && isFinite(t) && Math.floor(t) === t;
    };
  }("undefined" != typeof self && self || "undefined" != typeof window && window || "undefined" != typeof global && global || Function('return typeof this === "object" && this.content')() || Function("return this")());

  var t,
      e,
      n,
      _,
      l,
      F,
      P,
      p,
      d,
      k,
      a,
      o,
      s,
      h,
      u,
      c,
      r,
      i,
      f,
      g,
      m,
      y,
      v,
      w,
      b,
      x,
      I,
      C,
      B,
      N,
      L,
      A,
      S,
      j,
      E,
      M,
      O,
      q,
      T,
      R,
      D,
      U,
      z,
      H,
      W,
      V,
      G,
      Y,
      J,
      X,
      K,
      Z,
      Q,
      $,
      tt,
      et,
      nt,
      rt,
      it,
      ot,
      at,
      st,
      lt = function (ie) {
    function oe(o) {
      if ("object" !== se(o)) throw new Error("Invalid Context passed to initialize PubSub (jsPDF-module)");
      var a = {};
      this.subscribe = function (t, e, n) {
        if (n = n || !1, "string" != typeof t || "function" != typeof e || "boolean" != typeof n) throw new Error("Invalid arguments passed to PubSub.subscribe (jsPDF-module)");
        a.hasOwnProperty(t) || (a[t] = {});
        var r = Math.random().toString(35);
        return a[t][r] = [e, !!n], r;
      }, this.unsubscribe = function (t) {
        for (var e in a) {
          if (a[e][t]) return delete a[e][t], 0 === Object.keys(a[e]).length && delete a[e], !0;
        }

        return !1;
      }, this.publish = function (t) {
        if (a.hasOwnProperty(t)) {
          var e = Array.prototype.slice.call(arguments, 1),
              n = [];

          for (var r in a[t]) {
            var i = a[t][r];

            try {
              i[0].apply(o, e);
            } catch (t) {
              ie.console && console.error("jsPDF PubSub Error", t.message, t);
            }

            i[1] && n.push(r);
          }

          n.length && n.forEach(this.unsubscribe);
        }
      }, this.getTopics = function () {
        return a;
      };
    }

    function ae(t, e, i, n) {
      var r = {},
          o = [],
          a = 1;
      "object" === se(t) && (t = (r = t).orientation, e = r.unit || e, i = r.format || i, n = r.compress || r.compressPdf || n, o = r.filters || (!0 === n ? ["FlateEncode"] : o), a = "number" == typeof r.userUnit ? Math.abs(r.userUnit) : 1), e = e || "mm", t = ("" + (t || "P")).toLowerCase();
      var s = r.putOnlyUsedFonts || !0,
          K = {},
          l = {
        internal: {},
        __private__: {}
      };
      l.__private__.PubSub = oe;

      var h = "1.3",
          u = l.__private__.getPdfVersion = function () {
        return h;
      },
          c = (l.__private__.setPdfVersion = function (t) {
        h = t;
      }, {
        a0: [2383.94, 3370.39],
        a1: [1683.78, 2383.94],
        a2: [1190.55, 1683.78],
        a3: [841.89, 1190.55],
        a4: [595.28, 841.89],
        a5: [419.53, 595.28],
        a6: [297.64, 419.53],
        a7: [209.76, 297.64],
        a8: [147.4, 209.76],
        a9: [104.88, 147.4],
        a10: [73.7, 104.88],
        b0: [2834.65, 4008.19],
        b1: [2004.09, 2834.65],
        b2: [1417.32, 2004.09],
        b3: [1000.63, 1417.32],
        b4: [708.66, 1000.63],
        b5: [498.9, 708.66],
        b6: [354.33, 498.9],
        b7: [249.45, 354.33],
        b8: [175.75, 249.45],
        b9: [124.72, 175.75],
        b10: [87.87, 124.72],
        c0: [2599.37, 3676.54],
        c1: [1836.85, 2599.37],
        c2: [1298.27, 1836.85],
        c3: [918.43, 1298.27],
        c4: [649.13, 918.43],
        c5: [459.21, 649.13],
        c6: [323.15, 459.21],
        c7: [229.61, 323.15],
        c8: [161.57, 229.61],
        c9: [113.39, 161.57],
        c10: [79.37, 113.39],
        dl: [311.81, 623.62],
        letter: [612, 792],
        "government-letter": [576, 756],
        legal: [612, 1008],
        "junior-legal": [576, 360],
        ledger: [1224, 792],
        tabloid: [792, 1224],
        "credit-card": [153, 243]
      }),
          f = (l.__private__.getPageFormats = function () {
        return c;
      }, l.__private__.getPageFormat = function (t) {
        return c[t];
      });

      "string" == typeof i && (i = f(i)), i = i || f("a4");

      var p,
          Z = l.f2 = l.__private__.f2 = function (t) {
        if (isNaN(t)) throw new Error("Invalid argument passed to jsPDF.f2");
        return t.toFixed(2);
      },
          Q = l.__private__.f3 = function (t) {
        if (isNaN(t)) throw new Error("Invalid argument passed to jsPDF.f3");
        return t.toFixed(3);
      },
          d = "00000000000000000000000000000000",
          g = l.__private__.getFileId = function () {
        return d;
      },
          m = l.__private__.setFileId = function (t) {
        return t = t || "12345678901234567890123456789012".split("").map(function () {
          return "ABCDEF0123456789".charAt(Math.floor(16 * Math.random()));
        }).join(""), d = t;
      };

      l.setFileId = function (t) {
        return m(t), this;
      }, l.getFileId = function () {
        return g();
      };

      var y = l.__private__.convertDateToPDFDate = function (t) {
        var e = t.getTimezoneOffset(),
            n = e < 0 ? "+" : "-",
            r = Math.floor(Math.abs(e / 60)),
            i = Math.abs(e % 60),
            o = [n, P(r), "'", P(i), "'"].join("");
        return ["D:", t.getFullYear(), P(t.getMonth() + 1), P(t.getDate()), P(t.getHours()), P(t.getMinutes()), P(t.getSeconds()), o].join("");
      },
          v = l.__private__.convertPDFDateToDate = function (t) {
        var e = parseInt(t.substr(2, 4), 10),
            n = parseInt(t.substr(6, 2), 10) - 1,
            r = parseInt(t.substr(8, 2), 10),
            i = parseInt(t.substr(10, 2), 10),
            o = parseInt(t.substr(12, 2), 10),
            a = parseInt(t.substr(14, 2), 10);
        parseInt(t.substr(16, 2), 10), parseInt(t.substr(20, 2), 10);
        return new Date(e, n, r, i, o, a, 0);
      },
          w = l.__private__.setCreationDate = function (t) {
        var e;
        if (void 0 === t && (t = new Date()), "object" === se(t) && "[object Date]" === Object.prototype.toString.call(t)) e = y(t);else {
          if (!/^D:(20[0-2][0-9]|203[0-7]|19[7-9][0-9])(0[0-9]|1[0-2])([0-2][0-9]|3[0-1])(0[0-9]|1[0-9]|2[0-3])(0[0-9]|[1-5][0-9])(0[0-9]|[1-5][0-9])(\+0[0-9]|\+1[0-4]|\-0[0-9]|\-1[0-1])\'(0[0-9]|[1-5][0-9])\'?$/.test(t)) throw new Error("Invalid argument passed to jsPDF.setCreationDate");
          e = t;
        }
        return p = e;
      },
          b = l.__private__.getCreationDate = function (t) {
        var e = p;
        return "jsDate" === t && (e = v(p)), e;
      };

      l.setCreationDate = function (t) {
        return w(t), this;
      }, l.getCreationDate = function (t) {
        return b(t);
      };

      var x,
          N,
          L,
          A,
          S,
          $,
          _,
          F,
          P = l.__private__.padd2 = function (t) {
        return ("0" + parseInt(t)).slice(-2);
      },
          k = !1,
          I = [],
          C = [],
          B = 0,
          tt = (l.__private__.setCustomOutputDestination = function (t) {
        N = t;
      }, l.__private__.resetCustomOutputDestination = function (t) {
        N = void 0;
      }, l.__private__.out = function (t) {
        var e;
        return t = "string" == typeof t ? t : t.toString(), (e = void 0 === N ? k ? I[x] : C : N).push(t), k || (B += t.length + 1), e;
      }),
          j = l.__private__.write = function (t) {
        return tt(1 === arguments.length ? t.toString() : Array.prototype.join.call(arguments, " "));
      },
          E = l.__private__.getArrayBuffer = function (t) {
        for (var e = t.length, n = new ArrayBuffer(e), r = new Uint8Array(n); e--;) {
          r[e] = t.charCodeAt(e);
        }

        return n;
      },
          M = [["Helvetica", "helvetica", "normal", "WinAnsiEncoding"], ["Helvetica-Bold", "helvetica", "bold", "WinAnsiEncoding"], ["Helvetica-Oblique", "helvetica", "italic", "WinAnsiEncoding"], ["Helvetica-BoldOblique", "helvetica", "bolditalic", "WinAnsiEncoding"], ["Courier", "courier", "normal", "WinAnsiEncoding"], ["Courier-Bold", "courier", "bold", "WinAnsiEncoding"], ["Courier-Oblique", "courier", "italic", "WinAnsiEncoding"], ["Courier-BoldOblique", "courier", "bolditalic", "WinAnsiEncoding"], ["Times-Roman", "times", "normal", "WinAnsiEncoding"], ["Times-Bold", "times", "bold", "WinAnsiEncoding"], ["Times-Italic", "times", "italic", "WinAnsiEncoding"], ["Times-BoldItalic", "times", "bolditalic", "WinAnsiEncoding"], ["ZapfDingbats", "zapfdingbats", "normal", null], ["Symbol", "symbol", "normal", null]],
          et = (l.__private__.getStandardFonts = function (t) {
        return M;
      }, r.fontSize || 16),
          O = (l.__private__.setFontSize = l.setFontSize = function (t) {
        return et = t, this;
      }, l.__private__.getFontSize = l.getFontSize = function () {
        return et;
      }),
          nt = r.R2L || !1,
          q = (l.__private__.setR2L = l.setR2L = function (t) {
        return nt = t, this;
      }, l.__private__.getR2L = l.getR2L = function (t) {
        return nt;
      }, l.__private__.setZoomMode = function (t) {
        var e = [void 0, null, "fullwidth", "fullheight", "fullpage", "original"];
        if (/^\d*\.?\d*\%$/.test(t)) L = t;else if (isNaN(t)) {
          if (-1 === e.indexOf(t)) throw new Error('zoom must be Integer (e.g. 2), a percentage Value (e.g. 300%) or fullwidth, fullheight, fullpage, original. "' + t + '" is not recognized.');
          L = t;
        } else L = parseInt(t, 10);
      }),
          T = (l.__private__.getZoomMode = function () {
        return L;
      }, l.__private__.setPageMode = function (t) {
        if (-1 == [void 0, null, "UseNone", "UseOutlines", "UseThumbs", "FullScreen"].indexOf(t)) throw new Error('Page mode must be one of UseNone, UseOutlines, UseThumbs, or FullScreen. "' + t + '" is not recognized.');
        A = t;
      }),
          R = (l.__private__.getPageMode = function () {
        return A;
      }, l.__private__.setLayoutMode = function (t) {
        if (-1 == [void 0, null, "continuous", "single", "twoleft", "tworight", "two"].indexOf(t)) throw new Error('Layout mode must be one of continuous, single, twoleft, tworight. "' + t + '" is not recognized.');
        S = t;
      }),
          D = (l.__private__.getLayoutMode = function () {
        return S;
      }, l.__private__.setDisplayMode = l.setDisplayMode = function (t, e, n) {
        return q(t), R(e), T(n), this;
      }, {
        title: "",
        subject: "",
        author: "",
        keywords: "",
        creator: ""
      }),
          U = (l.__private__.getDocumentProperty = function (t) {
        if (-1 === Object.keys(D).indexOf(t)) throw new Error("Invalid argument passed to jsPDF.getDocumentProperty");
        return D[t];
      }, l.__private__.getDocumentProperties = function (t) {
        return D;
      }, l.__private__.setDocumentProperties = l.setProperties = l.setDocumentProperties = function (t) {
        for (var e in D) {
          D.hasOwnProperty(e) && t[e] && (D[e] = t[e]);
        }

        return this;
      }, l.__private__.setDocumentProperty = function (t, e) {
        if (-1 === Object.keys(D).indexOf(t)) throw new Error("Invalid arguments passed to jsPDF.setDocumentProperty");
        return D[t] = e;
      }, 0),
          z = [],
          rt = {},
          H = {},
          W = 0,
          V = [],
          G = [],
          it = new oe(l),
          Y = r.hotfixes || [],
          J = l.__private__.newObject = function () {
        var t = X();
        return ot(t, !0), t;
      },
          X = l.__private__.newObjectDeferred = function () {
        return z[++U] = function () {
          return B;
        }, U;
      },
          ot = function ot(t, e) {
        return e = "boolean" == typeof e && e, z[t] = B, e && tt(t + " 0 obj"), t;
      },
          at = l.__private__.newAdditionalObject = function () {
        var t = {
          objId: X(),
          content: ""
        };
        return G.push(t), t;
      },
          st = X(),
          lt = X(),
          ht = l.__private__.decodeColorString = function (t) {
        var e = t.split(" ");

        if (2 === e.length && ("g" === e[1] || "G" === e[1])) {
          var n = parseFloat(e[0]);
          e = [n, n, n, "r"];
        }

        for (var r = "#", i = 0; i < 3; i++) {
          r += ("0" + Math.floor(255 * parseFloat(e[i])).toString(16)).slice(-2);
        }

        return r;
      },
          ut = l.__private__.encodeColorString = function (t) {
        var e;
        "string" == typeof t && (t = {
          ch1: t
        });
        var n = t.ch1,
            r = t.ch2,
            i = t.ch3,
            o = t.ch4,
            a = (t.precision, "draw" === t.pdfColorType ? ["G", "RG", "K"] : ["g", "rg", "k"]);

        if ("string" == typeof n && "#" !== n.charAt(0)) {
          var s = new RGBColor(n);
          if (s.ok) n = s.toHex();else if (!/^\d*\.?\d*$/.test(n)) throw new Error('Invalid color "' + n + '" passed to jsPDF.encodeColorString.');
        }

        if ("string" == typeof n && /^#[0-9A-Fa-f]{3}$/.test(n) && (n = "#" + n[1] + n[1] + n[2] + n[2] + n[3] + n[3]), "string" == typeof n && /^#[0-9A-Fa-f]{6}$/.test(n)) {
          var l = parseInt(n.substr(1), 16);
          n = l >> 16 & 255, r = l >> 8 & 255, i = 255 & l;
        }

        if (void 0 === r || void 0 === o && n === r && r === i) {
          if ("string" == typeof n) e = n + " " + a[0];else switch (t.precision) {
            case 2:
              e = Z(n / 255) + " " + a[0];
              break;

            case 3:
            default:
              e = Q(n / 255) + " " + a[0];
          }
        } else if (void 0 === o || "object" === se(o)) {
          if (o && !isNaN(o.a) && 0 === o.a) return e = ["1.000", "1.000", "1.000", a[1]].join(" ");
          if ("string" == typeof n) e = [n, r, i, a[1]].join(" ");else switch (t.precision) {
            case 2:
              e = [Z(n / 255), Z(r / 255), Z(i / 255), a[1]].join(" ");
              break;

            default:
            case 3:
              e = [Q(n / 255), Q(r / 255), Q(i / 255), a[1]].join(" ");
          }
        } else if ("string" == typeof n) e = [n, r, i, o, a[2]].join(" ");else switch (t.precision) {
          case 2:
            e = [Z(n / 255), Z(r / 255), Z(i / 255), Z(o / 255), a[2]].join(" ");
            break;

          case 3:
          default:
            e = [Q(n / 255), Q(r / 255), Q(i / 255), Q(o / 255), a[2]].join(" ");
        }
        return e;
      },
          ct = l.__private__.getFilters = function () {
        return o;
      },
          ft = l.__private__.putStream = function (t) {
        var e = (t = t || {}).data || "",
            n = t.filters || ct(),
            r = t.alreadyAppliedFilters || [],
            i = t.addLength1 || !1,
            o = e.length,
            a = {};
        !0 === n && (n = ["FlateEncode"]);
        var s = t.additionalKeyValues || [],
            l = (a = void 0 !== ae.API.processDataByFilters ? ae.API.processDataByFilters(e, n) : {
          data: e,
          reverseChain: []
        }).reverseChain + (Array.isArray(r) ? r.join(" ") : r.toString());
        0 !== a.data.length && (s.push({
          key: "Length",
          value: a.data.length
        }), !0 === i && s.push({
          key: "Length1",
          value: o
        })), 0 != l.length && (l.split("/").length - 1 == 1 ? s.push({
          key: "Filter",
          value: l
        }) : s.push({
          key: "Filter",
          value: "[" + l + "]"
        })), tt("<<");

        for (var h = 0; h < s.length; h++) {
          tt("/" + s[h].key + " " + s[h].value);
        }

        tt(">>"), 0 !== a.data.length && (tt("stream"), tt(a.data), tt("endstream"));
      },
          pt = l.__private__.putPage = function (t) {
        t.mediaBox;
        var e = t.number,
            n = t.data,
            r = t.objId,
            i = t.contentsObjId;
        ot(r, !0);
        V[x].mediaBox.topRightX, V[x].mediaBox.bottomLeftX, V[x].mediaBox.topRightY, V[x].mediaBox.bottomLeftY;
        tt("<</Type /Page"), tt("/Parent " + t.rootDictionaryObjId + " 0 R"), tt("/Resources " + t.resourceDictionaryObjId + " 0 R"), tt("/MediaBox [" + parseFloat(Z(t.mediaBox.bottomLeftX)) + " " + parseFloat(Z(t.mediaBox.bottomLeftY)) + " " + Z(t.mediaBox.topRightX) + " " + Z(t.mediaBox.topRightY) + "]"), null !== t.cropBox && tt("/CropBox [" + Z(t.cropBox.bottomLeftX) + " " + Z(t.cropBox.bottomLeftY) + " " + Z(t.cropBox.topRightX) + " " + Z(t.cropBox.topRightY) + "]"), null !== t.bleedBox && tt("/BleedBox [" + Z(t.bleedBox.bottomLeftX) + " " + Z(t.bleedBox.bottomLeftY) + " " + Z(t.bleedBox.topRightX) + " " + Z(t.bleedBox.topRightY) + "]"), null !== t.trimBox && tt("/TrimBox [" + Z(t.trimBox.bottomLeftX) + " " + Z(t.trimBox.bottomLeftY) + " " + Z(t.trimBox.topRightX) + " " + Z(t.trimBox.topRightY) + "]"), null !== t.artBox && tt("/ArtBox [" + Z(t.artBox.bottomLeftX) + " " + Z(t.artBox.bottomLeftY) + " " + Z(t.artBox.topRightX) + " " + Z(t.artBox.topRightY) + "]"), "number" == typeof t.userUnit && 1 !== t.userUnit && tt("/UserUnit " + t.userUnit), it.publish("putPage", {
          objId: r,
          pageContext: V[e],
          pageNumber: e,
          page: n
        }), tt("/Contents " + i + " 0 R"), tt(">>"), tt("endobj");
        var o = n.join("\n");
        return ot(i, !0), ft({
          data: o,
          filters: ct()
        }), tt("endobj"), r;
      },
          dt = l.__private__.putPages = function () {
        var t,
            e,
            n = [];

        for (t = 1; t <= W; t++) {
          V[t].objId = X(), V[t].contentsObjId = X();
        }

        for (t = 1; t <= W; t++) {
          n.push(pt({
            number: t,
            data: I[t],
            objId: V[t].objId,
            contentsObjId: V[t].contentsObjId,
            mediaBox: V[t].mediaBox,
            cropBox: V[t].cropBox,
            bleedBox: V[t].bleedBox,
            trimBox: V[t].trimBox,
            artBox: V[t].artBox,
            userUnit: V[t].userUnit,
            rootDictionaryObjId: st,
            resourceDictionaryObjId: lt
          }));
        }

        ot(st, !0), tt("<</Type /Pages");
        var r = "/Kids [";

        for (e = 0; e < W; e++) {
          r += n[e] + " 0 R ";
        }

        tt(r + "]"), tt("/Count " + W), tt(">>"), tt("endobj"), it.publish("postPutPages");
      },
          gt = function gt() {
        !function () {
          for (var t in rt) {
            rt.hasOwnProperty(t) && (!1 === s || !0 === s && K.hasOwnProperty(t)) && (e = rt[t], it.publish("putFont", {
              font: e,
              out: tt,
              newObject: J,
              putStream: ft
            }), !0 !== e.isAlreadyPutted && (e.objectNumber = J(), tt("<<"), tt("/Type /Font"), tt("/BaseFont /" + e.postScriptName), tt("/Subtype /Type1"), "string" == typeof e.encoding && tt("/Encoding /" + e.encoding), tt("/FirstChar 32"), tt("/LastChar 255"), tt(">>"), tt("endobj")));
          }

          var e;
        }(), it.publish("putResources"), ot(lt, !0), tt("<<"), function () {
          for (var t in tt("/ProcSet [/PDF /Text /ImageB /ImageC /ImageI]"), tt("/Font <<"), rt) {
            rt.hasOwnProperty(t) && (!1 === s || !0 === s && K.hasOwnProperty(t)) && tt("/" + t + " " + rt[t].objectNumber + " 0 R");
          }

          tt(">>"), tt("/XObject <<"), it.publish("putXobjectDict"), tt(">>");
        }(), tt(">>"), tt("endobj"), it.publish("postPutResources");
      },
          mt = function mt(t, e, n) {
        H.hasOwnProperty(e) || (H[e] = {}), H[e][n] = t;
      },
          yt = function yt(t, e, n, r, i) {
        i = i || !1;
        var o = "F" + (Object.keys(rt).length + 1).toString(10),
            a = {
          id: o,
          postScriptName: t,
          fontName: e,
          fontStyle: n,
          encoding: r,
          isStandardFont: i,
          metadata: {}
        };
        return it.publish("addFont", {
          font: a,
          instance: this
        }), void 0 !== o && (rt[o] = a, mt(o, e, n)), o;
      },
          vt = l.__private__.pdfEscape = l.pdfEscape = function (t, e) {
        return function (t, e) {
          var n, r, i, o, a, s, l, h, u;

          if (i = (e = e || {}).sourceEncoding || "Unicode", a = e.outputEncoding, (e.autoencode || a) && rt[$].metadata && rt[$].metadata[i] && rt[$].metadata[i].encoding && (o = rt[$].metadata[i].encoding, !a && rt[$].encoding && (a = rt[$].encoding), !a && o.codePages && (a = o.codePages[0]), "string" == typeof a && (a = o[a]), a)) {
            for (l = !1, s = [], n = 0, r = t.length; n < r; n++) {
              (h = a[t.charCodeAt(n)]) ? s.push(String.fromCharCode(h)) : s.push(t[n]), s[n].charCodeAt(0) >> 8 && (l = !0);
            }

            t = s.join("");
          }

          for (n = t.length; void 0 === l && 0 !== n;) {
            t.charCodeAt(n - 1) >> 8 && (l = !0), n--;
          }

          if (!l) return t;

          for (s = e.noBOM ? [] : [254, 255], n = 0, r = t.length; n < r; n++) {
            if ((u = (h = t.charCodeAt(n)) >> 8) >> 8) throw new Error("Character at position " + n + " of string '" + t + "' exceeds 16bits. Cannot be encoded into UCS-2 BE");
            s.push(u), s.push(h - (u << 8));
          }

          return String.fromCharCode.apply(void 0, s);
        }(t, e).replace(/\\/g, "\\\\").replace(/\(/g, "\\(").replace(/\)/g, "\\)");
      },
          wt = l.__private__.beginPage = function (t, e) {
        var n,
            r = "string" == typeof e && e.toLowerCase();

        if ("string" == typeof t && (n = f(t.toLowerCase())) && (t = n[0], e = n[1]), Array.isArray(t) && (e = t[1], t = t[0]), (isNaN(t) || isNaN(e)) && (t = i[0], e = i[1]), r) {
          switch (r.substr(0, 1)) {
            case "l":
              t < e && (r = "s");
              break;

            case "p":
              e < t && (r = "s");
          }

          "s" === r && (n = t, t = e, e = n);
        }

        (14400 < t || 14400 < e) && (console.warn("A page in a PDF can not be wider or taller than 14400 userUnit. jsPDF limits the width/height to 14400"), t = Math.min(14400, t), e = Math.min(14400, e)), i = [t, e], k = !0, I[++W] = [], V[W] = {
          objId: 0,
          contentsObjId: 0,
          userUnit: Number(a),
          artBox: null,
          bleedBox: null,
          cropBox: null,
          trimBox: null,
          mediaBox: {
            bottomLeftX: 0,
            bottomLeftY: 0,
            topRightX: Number(t),
            topRightY: Number(e)
          }
        }, xt(W);
      },
          bt = function bt() {
        wt.apply(this, arguments), Dt(Rt), tt(Jt), 0 !== te && tt(te + " J"), 0 !== ne && tt(ne + " j"), it.publish("addPage", {
          pageNumber: W
        });
      },
          xt = function xt(t) {
        0 < t && t <= W && (x = t);
      },
          Nt = l.__private__.getNumberOfPages = l.getNumberOfPages = function () {
        return I.length - 1;
      },
          Lt = function Lt(t, e, n) {
        var r,
            i = void 0;
        return n = n || {}, t = void 0 !== t ? t : rt[$].fontName, e = void 0 !== e ? e : rt[$].fontStyle, r = t.toLowerCase(), void 0 !== H[r] && void 0 !== H[r][e] ? i = H[r][e] : void 0 !== H[t] && void 0 !== H[t][e] ? i = H[t][e] : !1 === n.disableWarning && console.warn("Unable to look up font label for font '" + t + "', '" + e + "'. Refer to getFontList() for available fonts."), i || n.noFallback || null == (i = H.times[e]) && (i = H.times.normal), i;
      },
          At = l.__private__.putInfo = function () {
        for (var t in J(), tt("<<"), tt("/Producer (jsPDF " + ae.version + ")"), D) {
          D.hasOwnProperty(t) && D[t] && tt("/" + t.substr(0, 1).toUpperCase() + t.substr(1) + " (" + vt(D[t]) + ")");
        }

        tt("/CreationDate (" + p + ")"), tt(">>"), tt("endobj");
      },
          St = l.__private__.putCatalog = function (t) {
        var e = (t = t || {}).rootDictionaryObjId || st;

        switch (J(), tt("<<"), tt("/Type /Catalog"), tt("/Pages " + e + " 0 R"), L || (L = "fullwidth"), L) {
          case "fullwidth":
            tt("/OpenAction [3 0 R /FitH null]");
            break;

          case "fullheight":
            tt("/OpenAction [3 0 R /FitV null]");
            break;

          case "fullpage":
            tt("/OpenAction [3 0 R /Fit]");
            break;

          case "original":
            tt("/OpenAction [3 0 R /XYZ null null 1]");
            break;

          default:
            var n = "" + L;
            "%" === n.substr(n.length - 1) && (L = parseInt(L) / 100), "number" == typeof L && tt("/OpenAction [3 0 R /XYZ null null " + Z(L) + "]");
        }

        switch (S || (S = "continuous"), S) {
          case "continuous":
            tt("/PageLayout /OneColumn");
            break;

          case "single":
            tt("/PageLayout /SinglePage");
            break;

          case "two":
          case "twoleft":
            tt("/PageLayout /TwoColumnLeft");
            break;

          case "tworight":
            tt("/PageLayout /TwoColumnRight");
        }

        A && tt("/PageMode /" + A), it.publish("putCatalog"), tt(">>"), tt("endobj");
      },
          _t = l.__private__.putTrailer = function () {
        tt("trailer"), tt("<<"), tt("/Size " + (U + 1)), tt("/Root " + U + " 0 R"), tt("/Info " + (U - 1) + " 0 R"), tt("/ID [ <" + d + "> <" + d + "> ]"), tt(">>");
      },
          Ft = l.__private__.putHeader = function () {
        tt("%PDF-" + h), tt("%ºß¬à");
      },
          Pt = l.__private__.putXRef = function () {
        var t = 1,
            e = "0000000000";

        for (tt("xref"), tt("0 " + (U + 1)), tt("0000000000 65535 f "), t = 1; t <= U; t++) {
          "function" == typeof z[t] ? tt((e + z[t]()).slice(-10) + " 00000 n ") : void 0 !== z[t] ? tt((e + z[t]).slice(-10) + " 00000 n ") : tt("0000000000 00000 n ");
        }
      },
          kt = l.__private__.buildDocument = function () {
        k = !1, B = U = 0, C = [], z = [], G = [], st = X(), lt = X(), it.publish("buildDocument"), Ft(), dt(), function () {
          it.publish("putAdditionalObjects");

          for (var t = 0; t < G.length; t++) {
            var e = G[t];
            ot(e.objId, !0), tt(e.content), tt("endobj");
          }

          it.publish("postPutAdditionalObjects");
        }(), gt(), At(), St();
        var t = B;
        return Pt(), _t(), tt("startxref"), tt("" + t), tt("%%EOF"), k = !0, C.join("\n");
      },
          It = l.__private__.getBlob = function (t) {
        return new Blob([E(t)], {
          type: "application/pdf"
        });
      },
          Ct = l.output = l.__private__.output = ((F = function F(t, e) {
        e = e || {};
        var n = kt();

        switch ("string" == typeof e ? e = {
          filename: e
        } : e.filename = e.filename || "generated.pdf", t) {
          case void 0:
            return n;

          case "save":
            l.save(e.filename);
            break;

          case "arraybuffer":
            return E(n);

          case "blob":
            return It(n);

          case "bloburi":
          case "bloburl":
            if (void 0 !== ie.URL && "function" == typeof ie.URL.createObjectURL) return ie.URL && ie.URL.createObjectURL(It(n)) || void 0;
            console.warn("bloburl is not supported by your system, because URL.createObjectURL is not supported by your browser.");
            break;

          case "datauristring":
          case "dataurlstring":
            return "data:application/pdf;filename=" + e.filename + ";base64," + btoa(n);

          case "dataurlnewwindow":
            var r = '<html><style>html, body { padding: 0; margin: 0; } iframe { width: 100%; height: 100%; border: 0;}  </style><body><iframe src="' + this.output("datauristring") + '"></iframe></body></html>',
                i = ie.open();
            if (null !== i && i.document.write(r), i || "undefined" == typeof safari) return i;

          case "datauri":
          case "dataurl":
            return ie.document.location.href = "data:application/pdf;filename=" + e.filename + ";base64," + btoa(n);

          default:
            return null;
        }
      }).foo = function () {
        try {
          return F.apply(this, arguments);
        } catch (t) {
          var e = t.stack || "";
          ~e.indexOf(" at ") && (e = e.split(" at ")[1]);
          var n = "Error in function " + e.split("\n")[0].split("<")[0] + ": " + t.message;
          if (!ie.console) throw new Error(n);
          ie.console.error(n, t), ie.alert && alert(n);
        }
      }, (F.foo.bar = F).foo),
          Bt = function Bt(t) {
        return !0 === Array.isArray(Y) && -1 < Y.indexOf(t);
      };

      switch (e) {
        case "pt":
          _ = 1;
          break;

        case "mm":
          _ = 72 / 25.4;
          break;

        case "cm":
          _ = 72 / 2.54;
          break;

        case "in":
          _ = 72;
          break;

        case "px":
          _ = 1 == Bt("px_scaling") ? .75 : 96 / 72;
          break;

        case "pc":
        case "em":
          _ = 12;
          break;

        case "ex":
          _ = 6;
          break;

        default:
          throw new Error("Invalid unit: " + e);
      }

      w(), m();

      var jt = l.__private__.getPageInfo = function (t) {
        if (isNaN(t) || t % 1 != 0) throw new Error("Invalid argument passed to jsPDF.getPageInfo");
        return {
          objId: V[t].objId,
          pageNumber: t,
          pageContext: V[t]
        };
      },
          Et = l.__private__.getPageInfoByObjId = function (t) {
        for (var e in V) {
          if (V[e].objId === t) break;
        }

        if (isNaN(t) || t % 1 != 0) throw new Error("Invalid argument passed to jsPDF.getPageInfoByObjId");
        return jt(e);
      },
          Mt = l.__private__.getCurrentPageInfo = function () {
        return {
          objId: V[x].objId,
          pageNumber: x,
          pageContext: V[x]
        };
      };

      l.addPage = function () {
        return bt.apply(this, arguments), this;
      }, l.setPage = function () {
        return xt.apply(this, arguments), this;
      }, l.insertPage = function (t) {
        return this.addPage(), this.movePage(x, t), this;
      }, l.movePage = function (t, e) {
        if (e < t) {
          for (var n = I[t], r = V[t], i = t; e < i; i--) {
            I[i] = I[i - 1], V[i] = V[i - 1];
          }

          I[e] = n, V[e] = r, this.setPage(e);
        } else if (t < e) {
          for (n = I[t], r = V[t], i = t; i < e; i++) {
            I[i] = I[i + 1], V[i] = V[i + 1];
          }

          I[e] = n, V[e] = r, this.setPage(e);
        }

        return this;
      }, l.deletePage = function () {
        return function (t) {
          0 < t && t <= W && (I.splice(t, 1), --W < x && (x = W), this.setPage(x));
        }.apply(this, arguments), this;
      };
      l.__private__.text = l.text = function (t, e, n, i) {
        var r;
        "number" != typeof t || "number" != typeof e || "string" != typeof n && !Array.isArray(n) || (r = n, n = e, e = t, t = r);
        var o = arguments[3],
            a = arguments[4],
            s = arguments[5];
        if ("object" === se(o) && null !== o || ("string" == typeof a && (s = a, a = null), "string" == typeof o && (s = o, o = null), "number" == typeof o && (a = o, o = null), i = {
          flags: o,
          angle: a,
          align: s
        }), (o = o || {}).noBOM = o.noBOM || !0, o.autoencode = o.autoencode || !0, isNaN(e) || isNaN(n) || null == t) throw new Error("Invalid arguments passed to jsPDF.text");
        if (0 === t.length) return c;
        var l,
            h = "",
            u = "number" == typeof i.lineHeightFactor ? i.lineHeightFactor : Tt,
            c = i.scope || this;

        function f(t) {
          for (var e, n = t.concat(), r = [], i = n.length; i--;) {
            "string" == typeof (e = n.shift()) ? r.push(e) : Array.isArray(t) && 1 === e.length ? r.push(e[0]) : r.push([e[0], e[1], e[2]]);
          }

          return r;
        }

        function p(t, e) {
          var n;
          if ("string" == typeof t) n = e(t)[0];else if (Array.isArray(t)) {
            for (var r, i, o = t.concat(), a = [], s = o.length; s--;) {
              "string" == typeof (r = o.shift()) ? a.push(e(r)[0]) : Array.isArray(r) && "string" === r[0] && (i = e(r[0], r[1], r[2]), a.push([i[0], i[1], i[2]]));
            }

            n = a;
          }
          return n;
        }

        var d = !1,
            g = !0;
        if ("string" == typeof t) d = !0;else if (Array.isArray(t)) {
          for (var m, y = t.concat(), v = [], w = y.length; w--;) {
            ("string" != typeof (m = y.shift()) || Array.isArray(m) && "string" != typeof m[0]) && (g = !1);
          }

          d = g;
        }
        if (!1 === d) throw new Error('Type of text must be string or Array. "' + t + '" is not recognized.');
        var b = rt[$].encoding;
        "WinAnsiEncoding" !== b && "StandardEncoding" !== b || (t = p(t, function (t, e, n) {
          return [(r = t, r = r.split("\t").join(Array(i.TabLen || 9).join(" ")), vt(r, o)), e, n];
          var r;
        })), "string" == typeof t && (t = t.match(/[\r?\n]/) ? t.split(/\r\n|\r|\n/g) : [t]);
        var x = et / c.internal.scaleFactor,
            N = x * (Tt - 1);

        switch (i.baseline) {
          case "bottom":
            n -= N;
            break;

          case "top":
            n += x - N;
            break;

          case "hanging":
            n += x - 2 * N;
            break;

          case "middle":
            n += x / 2 - N;
        }

        0 < (O = i.maxWidth || 0) && ("string" == typeof t ? t = c.splitTextToSize(t, O) : "[object Array]" === Object.prototype.toString.call(t) && (t = c.splitTextToSize(t.join(" "), O)));
        var L = {
          text: t,
          x: e,
          y: n,
          options: i,
          mutex: {
            pdfEscape: vt,
            activeFontKey: $,
            fonts: rt,
            activeFontSize: et
          }
        };
        it.publish("preProcessText", L), t = L.text;
        a = (i = L.options).angle;
        var A = c.internal.scaleFactor,
            S = [];

        if (a) {
          a *= Math.PI / 180;

          var _ = Math.cos(a),
              F = Math.sin(a);

          S = [Z(_), Z(F), Z(-1 * F), Z(_)];
        }

        void 0 !== (M = i.charSpace) && (h += Q(M * A) + " Tc\n");
        i.lang;
        var P = -1,
            k = void 0 !== i.renderingMode ? i.renderingMode : i.stroke,
            I = c.internal.getCurrentPageInfo().pageContext;

        switch (k) {
          case 0:
          case !1:
          case "fill":
            P = 0;
            break;

          case 1:
          case !0:
          case "stroke":
            P = 1;
            break;

          case 2:
          case "fillThenStroke":
            P = 2;
            break;

          case 3:
          case "invisible":
            P = 3;
            break;

          case 4:
          case "fillAndAddForClipping":
            P = 4;
            break;

          case 5:
          case "strokeAndAddPathForClipping":
            P = 5;
            break;

          case 6:
          case "fillThenStrokeAndAddToPathForClipping":
            P = 6;
            break;

          case 7:
          case "addToPathForClipping":
            P = 7;
        }

        var C = void 0 !== I.usedRenderingMode ? I.usedRenderingMode : -1;
        -1 !== P ? h += P + " Tr\n" : -1 !== C && (h += "0 Tr\n"), -1 !== P && (I.usedRenderingMode = P);
        s = i.align || "left";
        var B = et * u,
            j = c.internal.pageSize.getWidth(),
            E = (A = c.internal.scaleFactor, rt[$]),
            M = i.charSpace || Qt,
            O = i.maxWidth || 0,
            q = (o = {}, []);

        if ("[object Array]" === Object.prototype.toString.call(t)) {
          var T, R;
          v = f(t);
          "left" !== s && (R = v.map(function (t) {
            return c.getStringUnitWidth(t, {
              font: E,
              charSpace: M,
              fontSize: et
            }) * et / A;
          }));
          var D,
              U = Math.max.apply(Math, R),
              z = 0;

          if ("right" === s) {
            e -= R[0], t = [];
            var H = 0;

            for (w = v.length; H < w; H++) {
              U - R[H], T = 0 === H ? (D = Wt(e), Vt(n)) : (D = (z - R[H]) * A, -B), t.push([v[H], D, T]), z = R[H];
            }
          } else if ("center" === s) {
            e -= R[0] / 2, t = [];

            for (H = 0, w = v.length; H < w; H++) {
              (U - R[H]) / 2, T = 0 === H ? (D = Wt(e), Vt(n)) : (D = (z - R[H]) / 2 * A, -B), t.push([v[H], D, T]), z = R[H];
            }
          } else if ("left" === s) {
            t = [];

            for (H = 0, w = v.length; H < w; H++) {
              T = 0 === H ? Vt(n) : -B, D = 0 === H ? Wt(e) : 0, t.push(v[H]);
            }
          } else {
            if ("justify" !== s) throw new Error('Unrecognized alignment option, use "left", "center", "right" or "justify".');
            t = [];

            for (O = 0 !== O ? O : j, H = 0, w = v.length; H < w; H++) {
              T = 0 === H ? Vt(n) : -B, D = 0 === H ? Wt(e) : 0, H < w - 1 && q.push(((O - R[H]) / (v[H].split(" ").length - 1) * A).toFixed(2)), t.push([v[H], D, T]);
            }
          }
        }

        !0 === ("boolean" == typeof i.R2L ? i.R2L : nt) && (t = p(t, function (t, e, n) {
          return [t.split("").reverse().join(""), e, n];
        }));
        L = {
          text: t,
          x: e,
          y: n,
          options: i,
          mutex: {
            pdfEscape: vt,
            activeFontKey: $,
            fonts: rt,
            activeFontSize: et
          }
        };
        it.publish("postProcessText", L), t = L.text, l = L.mutex.isHex;
        v = f(t);
        t = [];
        var W,
            V,
            G,
            Y = 0,
            J = (w = v.length, "");

        for (H = 0; H < w; H++) {
          J = "", Array.isArray(v[H]) ? (W = parseFloat(v[H][1]), V = parseFloat(v[H][2]), G = (l ? "<" : "(") + v[H][0] + (l ? ">" : ")"), Y = 1) : (W = Wt(e), V = Vt(n), G = (l ? "<" : "(") + v[H] + (l ? ">" : ")")), void 0 !== q && void 0 !== q[H] && (J = q[H] + " Tw\n"), 0 !== S.length && 0 === H ? t.push(J + S.join(" ") + " " + W.toFixed(2) + " " + V.toFixed(2) + " Tm\n" + G) : 1 === Y || 0 === Y && 0 === H ? t.push(J + W.toFixed(2) + " " + V.toFixed(2) + " Td\n" + G) : t.push(J + G);
        }

        t = 0 === Y ? t.join(" Tj\nT* ") : t.join(" Tj\n"), t += " Tj\n";
        var X = "BT\n/" + $ + " " + et + " Tf\n" + (et * u).toFixed(2) + " TL\n" + Kt + "\n";
        return X += h, X += t, tt(X += "ET"), K[$] = !0, c;
      }, l.__private__.lstext = l.lstext = function (t, e, n, r) {
        return console.warn("jsPDF.lstext is deprecated"), this.text(t, e, n, {
          charSpace: r
        });
      }, l.__private__.clip = l.clip = function (t) {
        tt("evenodd" === t ? "W*" : "W"), tt("n");
      }, l.__private__.clip_fixed = l.clip_fixed = function (t) {
        console.log("clip_fixed is deprecated"), l.clip(t);
      };

      var Ot = l.__private__.isValidStyle = function (t) {
        var e = !1;
        return -1 !== [void 0, null, "S", "F", "DF", "FD", "f", "f*", "B", "B*"].indexOf(t) && (e = !0), e;
      },
          qt = l.__private__.getStyle = function (t) {
        var e = "S";
        return "F" === t ? e = "f" : "FD" === t || "DF" === t ? e = "B" : "f" !== t && "f*" !== t && "B" !== t && "B*" !== t || (e = t), e;
      };

      l.__private__.line = l.line = function (t, e, n, r) {
        if (isNaN(t) || isNaN(e) || isNaN(n) || isNaN(r)) throw new Error("Invalid arguments passed to jsPDF.line");
        return this.lines([[n - t, r - e]], t, e);
      }, l.__private__.lines = l.lines = function (t, e, n, r, i, o) {
        var a, s, l, h, u, c, f, p, d, g, m, y;
        if ("number" == typeof t && (y = n, n = e, e = t, t = y), r = r || [1, 1], o = o || !1, isNaN(e) || isNaN(n) || !Array.isArray(t) || !Array.isArray(r) || !Ot(i) || "boolean" != typeof o) throw new Error("Invalid arguments passed to jsPDF.lines");

        for (tt(Q(Wt(e)) + " " + Q(Vt(n)) + " m "), a = r[0], s = r[1], h = t.length, g = e, m = n, l = 0; l < h; l++) {
          2 === (u = t[l]).length ? (g = u[0] * a + g, m = u[1] * s + m, tt(Q(Wt(g)) + " " + Q(Vt(m)) + " l")) : (c = u[0] * a + g, f = u[1] * s + m, p = u[2] * a + g, d = u[3] * s + m, g = u[4] * a + g, m = u[5] * s + m, tt(Q(Wt(c)) + " " + Q(Vt(f)) + " " + Q(Wt(p)) + " " + Q(Vt(d)) + " " + Q(Wt(g)) + " " + Q(Vt(m)) + " c"));
        }

        return o && tt(" h"), null !== i && tt(qt(i)), this;
      }, l.__private__.rect = l.rect = function (t, e, n, r, i) {
        if (isNaN(t) || isNaN(e) || isNaN(n) || isNaN(r) || !Ot(i)) throw new Error("Invalid arguments passed to jsPDF.rect");
        return tt([Z(Wt(t)), Z(Vt(e)), Z(n * _), Z(-r * _), "re"].join(" ")), null !== i && tt(qt(i)), this;
      }, l.__private__.triangle = l.triangle = function (t, e, n, r, i, o, a) {
        if (isNaN(t) || isNaN(e) || isNaN(n) || isNaN(r) || isNaN(i) || isNaN(o) || !Ot(a)) throw new Error("Invalid arguments passed to jsPDF.triangle");
        return this.lines([[n - t, r - e], [i - n, o - r], [t - i, e - o]], t, e, [1, 1], a, !0), this;
      }, l.__private__.roundedRect = l.roundedRect = function (t, e, n, r, i, o, a) {
        if (isNaN(t) || isNaN(e) || isNaN(n) || isNaN(r) || isNaN(i) || isNaN(o) || !Ot(a)) throw new Error("Invalid arguments passed to jsPDF.roundedRect");
        var s = 4 / 3 * (Math.SQRT2 - 1);
        return this.lines([[n - 2 * i, 0], [i * s, 0, i, o - o * s, i, o], [0, r - 2 * o], [0, o * s, -i * s, o, -i, o], [2 * i - n, 0], [-i * s, 0, -i, -o * s, -i, -o], [0, 2 * o - r], [0, -o * s, i * s, -o, i, -o]], t + i, e, [1, 1], a), this;
      }, l.__private__.ellipse = l.ellipse = function (t, e, n, r, i) {
        if (isNaN(t) || isNaN(e) || isNaN(n) || isNaN(r) || !Ot(i)) throw new Error("Invalid arguments passed to jsPDF.ellipse");
        var o = 4 / 3 * (Math.SQRT2 - 1) * n,
            a = 4 / 3 * (Math.SQRT2 - 1) * r;
        return tt([Z(Wt(t + n)), Z(Vt(e)), "m", Z(Wt(t + n)), Z(Vt(e - a)), Z(Wt(t + o)), Z(Vt(e - r)), Z(Wt(t)), Z(Vt(e - r)), "c"].join(" ")), tt([Z(Wt(t - o)), Z(Vt(e - r)), Z(Wt(t - n)), Z(Vt(e - a)), Z(Wt(t - n)), Z(Vt(e)), "c"].join(" ")), tt([Z(Wt(t - n)), Z(Vt(e + a)), Z(Wt(t - o)), Z(Vt(e + r)), Z(Wt(t)), Z(Vt(e + r)), "c"].join(" ")), tt([Z(Wt(t + o)), Z(Vt(e + r)), Z(Wt(t + n)), Z(Vt(e + a)), Z(Wt(t + n)), Z(Vt(e)), "c"].join(" ")), null !== i && tt(qt(i)), this;
      }, l.__private__.circle = l.circle = function (t, e, n, r) {
        if (isNaN(t) || isNaN(e) || isNaN(n) || !Ot(r)) throw new Error("Invalid arguments passed to jsPDF.circle");
        return this.ellipse(t, e, n, n, r);
      };
      l.setFont = function (t, e) {
        return $ = Lt(t, e, {
          disableWarning: !1
        }), this;
      }, l.setFontStyle = l.setFontType = function (t) {
        return $ = Lt(void 0, t), this;
      };

      l.__private__.getFontList = l.getFontList = function () {
        var t,
            e,
            n,
            r = {};

        for (t in H) {
          if (H.hasOwnProperty(t)) for (e in r[t] = n = [], H[t]) {
            H[t].hasOwnProperty(e) && n.push(e);
          }
        }

        return r;
      };

      l.addFont = function (t, e, n, r) {
        yt.call(this, t, e, n, r = r || "Identity-H");
      };

      var Tt,
          Rt = r.lineWidth || .200025,
          Dt = l.__private__.setLineWidth = l.setLineWidth = function (t) {
        return tt((t * _).toFixed(2) + " w"), this;
      },
          Ut = (l.__private__.setLineDash = ae.API.setLineDash = function (t, e) {
        if (t = t || [], e = e || 0, isNaN(e) || !Array.isArray(t)) throw new Error("Invalid arguments passed to jsPDF.setLineDash");
        return t = t.map(function (t) {
          return (t * _).toFixed(3);
        }).join(" "), e = parseFloat((e * _).toFixed(3)), tt("[" + t + "] " + e + " d"), this;
      }, l.__private__.getLineHeight = l.getLineHeight = function () {
        return et * Tt;
      }),
          zt = (Ut = l.__private__.getLineHeight = l.getLineHeight = function () {
        return et * Tt;
      }, l.__private__.setLineHeightFactor = l.setLineHeightFactor = function (t) {
        return "number" == typeof (t = t || 1.15) && (Tt = t), this;
      }),
          Ht = l.__private__.getLineHeightFactor = l.getLineHeightFactor = function () {
        return Tt;
      };

      zt(r.lineHeight);

      var Wt = l.__private__.getHorizontalCoordinate = function (t) {
        return t * _;
      },
          Vt = l.__private__.getVerticalCoordinate = function (t) {
        return V[x].mediaBox.topRightY - V[x].mediaBox.bottomLeftY - t * _;
      },
          Gt = l.__private__.getHorizontalCoordinateString = function (t) {
        return Z(t * _);
      },
          Yt = l.__private__.getVerticalCoordinateString = function (t) {
        return Z(V[x].mediaBox.topRightY - V[x].mediaBox.bottomLeftY - t * _);
      },
          Jt = r.strokeColor || "0 G",
          Xt = (l.__private__.getStrokeColor = l.getDrawColor = function () {
        return ht(Jt);
      }, l.__private__.setStrokeColor = l.setDrawColor = function (t, e, n, r) {
        return Jt = ut({
          ch1: t,
          ch2: e,
          ch3: n,
          ch4: r,
          pdfColorType: "draw",
          precision: 2
        }), tt(Jt), this;
      }, r.fillColor || "0 g"),
          Kt = (l.__private__.getFillColor = l.getFillColor = function () {
        return ht(Xt);
      }, l.__private__.setFillColor = l.setFillColor = function (t, e, n, r) {
        return Xt = ut({
          ch1: t,
          ch2: e,
          ch3: n,
          ch4: r,
          pdfColorType: "fill",
          precision: 2
        }), tt(Xt), this;
      }, r.textColor || "0 g"),
          Zt = l.__private__.getTextColor = l.getTextColor = function () {
        return ht(Kt);
      },
          Qt = (l.__private__.setTextColor = l.setTextColor = function (t, e, n, r) {
        return Kt = ut({
          ch1: t,
          ch2: e,
          ch3: n,
          ch4: r,
          pdfColorType: "text",
          precision: 3
        }), this;
      }, r.charSpace || 0),
          $t = l.__private__.getCharSpace = l.getCharSpace = function () {
        return Qt;
      },
          te = (l.__private__.setCharSpace = l.setCharSpace = function (t) {
        if (isNaN(t)) throw new Error("Invalid argument passed to jsPDF.setCharSpace");
        return Qt = t, this;
      }, 0);

      l.CapJoinStyles = {
        0: 0,
        butt: 0,
        but: 0,
        miter: 0,
        1: 1,
        round: 1,
        rounded: 1,
        circle: 1,
        2: 2,
        projecting: 2,
        project: 2,
        square: 2,
        bevel: 2
      };

      l.__private__.setLineCap = l.setLineCap = function (t) {
        var e = l.CapJoinStyles[t];
        if (void 0 === e) throw new Error("Line cap style of '" + t + "' is not recognized. See or extend .CapJoinStyles property for valid styles");
        return tt((te = e) + " J"), this;
      };

      var ee,
          ne = 0;
      l.__private__.setLineJoin = l.setLineJoin = function (t) {
        var e = l.CapJoinStyles[t];
        if (void 0 === e) throw new Error("Line join style of '" + t + "' is not recognized. See or extend .CapJoinStyles property for valid styles");
        return tt((ne = e) + " j"), this;
      }, l.__private__.setMiterLimit = l.setMiterLimit = function (t) {
        if (t = t || 0, isNaN(t)) throw new Error("Invalid argument passed to jsPDF.setMiterLimit");
        return ee = parseFloat(Z(t * _)), tt(ee + " M"), this;
      };

      for (var re in l.save = function (r, t) {
        if (r = r || "generated.pdf", (t = t || {}).returnPromise = t.returnPromise || !1, !1 !== t.returnPromise) return new Promise(function (t, e) {
          try {
            var n = le(It(kt()), r);
            "function" == typeof le.unload && ie.setTimeout && setTimeout(le.unload, 911), t(n);
          } catch (t) {
            e(t.message);
          }
        });
        le(It(kt()), r), "function" == typeof le.unload && ie.setTimeout && setTimeout(le.unload, 911);
      }, ae.API) {
        ae.API.hasOwnProperty(re) && ("events" === re && ae.API.events.length ? function (t, e) {
          var n, r, i;

          for (i = e.length - 1; -1 !== i; i--) {
            n = e[i][0], r = e[i][1], t.subscribe.apply(t, [n].concat("function" == typeof r ? [r] : r));
          }
        }(it, ae.API.events) : l[re] = ae.API[re]);
      }

      return l.internal = {
        pdfEscape: vt,
        getStyle: qt,
        getFont: function getFont() {
          return rt[Lt.apply(l, arguments)];
        },
        getFontSize: O,
        getCharSpace: $t,
        getTextColor: Zt,
        getLineHeight: Ut,
        getLineHeightFactor: Ht,
        write: j,
        getHorizontalCoordinate: Wt,
        getVerticalCoordinate: Vt,
        getCoordinateString: Gt,
        getVerticalCoordinateString: Yt,
        collections: {},
        newObject: J,
        newAdditionalObject: at,
        newObjectDeferred: X,
        newObjectDeferredBegin: ot,
        getFilters: ct,
        putStream: ft,
        events: it,
        scaleFactor: _,
        pageSize: {
          getWidth: function getWidth() {
            return (V[x].mediaBox.topRightX - V[x].mediaBox.bottomLeftX) / _;
          },
          setWidth: function setWidth(t) {
            V[x].mediaBox.topRightX = t * _ + V[x].mediaBox.bottomLeftX;
          },
          getHeight: function getHeight() {
            return (V[x].mediaBox.topRightY - V[x].mediaBox.bottomLeftY) / _;
          },
          setHeight: function setHeight(t) {
            V[x].mediaBox.topRightY = t * _ + V[x].mediaBox.bottomLeftY;
          }
        },
        output: Ct,
        getNumberOfPages: Nt,
        pages: I,
        out: tt,
        f2: Z,
        f3: Q,
        getPageInfo: jt,
        getPageInfoByObjId: Et,
        getCurrentPageInfo: Mt,
        getPDFVersion: u,
        hasHotfix: Bt
      }, Object.defineProperty(l.internal.pageSize, "width", {
        get: function get() {
          return (V[x].mediaBox.topRightX - V[x].mediaBox.bottomLeftX) / _;
        },
        set: function set(t) {
          V[x].mediaBox.topRightX = t * _ + V[x].mediaBox.bottomLeftX;
        },
        enumerable: !0,
        configurable: !0
      }), Object.defineProperty(l.internal.pageSize, "height", {
        get: function get() {
          return (V[x].mediaBox.topRightY - V[x].mediaBox.bottomLeftY) / _;
        },
        set: function set(t) {
          V[x].mediaBox.topRightY = t * _ + V[x].mediaBox.bottomLeftY;
        },
        enumerable: !0,
        configurable: !0
      }), function (t) {
        for (var e = 0, n = M.length; e < n; e++) {
          var r = yt(t[e][0], t[e][1], t[e][2], M[e][3], !0);
          K[r] = !0;
          var i = t[e][0].split("-");
          mt(r, i[0], i[1] || "");
        }

        it.publish("addFonts", {
          fonts: rt,
          dictionary: H
        });
      }(M), $ = "F1", bt(i, t), it.publish("initialized"), l;
    }

    return ae.API = {
      events: []
    }, ae.version = "1.5.3",  true ? !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return ae;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined, ae;
  }("undefined" != typeof self && self || "undefined" != typeof window && window || "undefined" != typeof global && global || Function('return typeof this === "object" && this.content')() || Function("return this")());
  /**
     * @license
     * Copyright (c) 2016 Alexander Weidt,
     * https://github.com/BiggA94
     * 
     * Licensed under the MIT License. http://opensource.org/licenses/mit-license
     */


  (function (t, e) {
    var A,
        n = 1,
        S = function S(t) {
      return t.replace(/\\/g, "\\\\").replace(/\(/g, "\\(").replace(/\)/g, "\\)");
    },
        y = function y(t) {
      return t.replace(/\\\\/g, "\\").replace(/\\\(/g, "(").replace(/\\\)/g, ")");
    },
        _ = function _(t) {
      if (isNaN(t)) throw new Error("Invalid argument passed to jsPDF.f2");
      return t.toFixed(2);
    },
        s = function s(t) {
      if (isNaN(t)) throw new Error("Invalid argument passed to jsPDF.f2");
      return t.toFixed(5);
    };

    t.__acroform__ = {};

    var r = function r(t, e) {
      t.prototype = Object.create(e.prototype), t.prototype.constructor = t;
    },
        v = function v(t) {
      return t * n;
    },
        w = function w(t) {
      return t / n;
    },
        l = function l(t) {
      var e = new j(),
          n = Y.internal.getHeight(t) || 0,
          r = Y.internal.getWidth(t) || 0;
      return e.BBox = [0, 0, Number(_(r)), Number(_(n))], e;
    },
        i = t.__acroform__.setBit = function (t, e) {
      if (t = t || 0, e = e || 0, isNaN(t) || isNaN(e)) throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.setBit");
      return t |= 1 << e;
    },
        o = t.__acroform__.clearBit = function (t, e) {
      if (t = t || 0, e = e || 0, isNaN(t) || isNaN(e)) throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.clearBit");
      return t &= ~(1 << e);
    },
        a = t.__acroform__.getBit = function (t, e) {
      if (isNaN(t) || isNaN(e)) throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.getBit");
      return 0 == (t & 1 << e) ? 0 : 1;
    },
        b = t.__acroform__.getBitForPdf = function (t, e) {
      if (isNaN(t) || isNaN(e)) throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.getBitForPdf");
      return a(t, e - 1);
    },
        x = t.__acroform__.setBitForPdf = function (t, e) {
      if (isNaN(t) || isNaN(e)) throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.setBitForPdf");
      return i(t, e - 1);
    },
        N = t.__acroform__.clearBitForPdf = function (t, e, n) {
      if (isNaN(t) || isNaN(e)) throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.clearBitForPdf");
      return o(t, e - 1);
    },
        c = t.__acroform__.calculateCoordinates = function (t) {
      var e = this.internal.getHorizontalCoordinate,
          n = this.internal.getVerticalCoordinate,
          r = t[0],
          i = t[1],
          o = t[2],
          a = t[3],
          s = {};
      return s.lowerLeft_X = e(r) || 0, s.lowerLeft_Y = n(i + a) || 0, s.upperRight_X = e(r + o) || 0, s.upperRight_Y = n(i) || 0, [Number(_(s.lowerLeft_X)), Number(_(s.lowerLeft_Y)), Number(_(s.upperRight_X)), Number(_(s.upperRight_Y))];
    },
        f = function f(t) {
      if (t.appearanceStreamContent) return t.appearanceStreamContent;

      if (t.V || t.DV) {
        var e = [],
            n = t.V || t.DV,
            r = h(t, n),
            i = A.internal.getFont(t.fontName, t.fontStyle).id;
        e.push("/Tx BMC"), e.push("q"), e.push("BT"), e.push(A.__private__.encodeColorString(t.color)), e.push("/" + i + " " + _(r.fontSize) + " Tf"), e.push("1 0 0 1 0 0 Tm"), e.push(r.text), e.push("ET"), e.push("Q"), e.push("EMC");
        var o = new l(t);
        return o.stream = e.join("\n"), o;
      }
    },
        h = function h(i, t) {
      var e = i.maxFontSize || 12,
          n = (i.fontName, {
        text: "",
        fontSize: ""
      }),
          o = (t = ")" == (t = "(" == t.substr(0, 1) ? t.substr(1) : t).substr(t.length - 1) ? t.substr(0, t.length - 1) : t).split(" "),
          r = (A.__private__.encodeColorString(i.color), e),
          a = Y.internal.getHeight(i) || 0;
      a = a < 0 ? -a : a;
      var s = Y.internal.getWidth(i) || 0;
      s = s < 0 ? -s : s;

      var l = function l(t, e, n) {
        if (t + 1 < o.length) {
          var r = e + " " + o[t + 1];
          return F(r, i, n).width <= s - 4;
        }

        return !1;
      };

      r++;

      t: for (;;) {
        t = "";
        var h = F("3", i, --r).height,
            u = i.multiline ? a - r : (a - h) / 2,
            c = -2,
            f = u += 2,
            p = 0,
            d = 0,
            g = 0;

        if (r <= 0) {
          t = "(...) Tj\n", t += "% Width of Text: " + F(t, i, r = 12).width + ", FieldWidth:" + s + "\n";
          break;
        }

        g = F(o[0] + " ", i, r).width;
        var m = "",
            y = 0;

        for (var v in o) {
          if (o.hasOwnProperty(v)) {
            m = " " == (m += o[v] + " ").substr(m.length - 1) ? m.substr(0, m.length - 1) : m;
            var w = parseInt(v);
            g = F(m + " ", i, r).width;
            var b = l(w, m, r),
                x = v >= o.length - 1;

            if (b && !x) {
              m += " ";
              continue;
            }

            if (b || x) {
              if (x) d = w;else if (i.multiline && a < (h + 2) * (y + 2) + 2) continue t;
            } else {
              if (!i.multiline) continue t;
              if (a < (h + 2) * (y + 2) + 2) continue t;
              d = w;
            }

            for (var N = "", L = p; L <= d; L++) {
              N += o[L] + " ";
            }

            switch (N = " " == N.substr(N.length - 1) ? N.substr(0, N.length - 1) : N, g = F(N, i, r).width, i.textAlign) {
              case "right":
                c = s - g - 2;
                break;

              case "center":
                c = (s - g) / 2;
                break;

              case "left":
              default:
                c = 2;
            }

            t += _(c) + " " + _(f) + " Td\n", t += "(" + S(N) + ") Tj\n", t += -_(c) + " 0 Td\n", f = -(r + 2), g = 0, p = d + 1, y++, m = "";
          } else ;
        }

        break;
      }

      return n.text = t, n.fontSize = r, n;
    },
        F = function F(t, e, n) {
      var r = A.internal.getFont(e.fontName, e.fontStyle),
          i = A.getStringUnitWidth(t, {
        font: r,
        fontSize: parseFloat(n),
        charSpace: 0
      }) * parseFloat(n);
      return {
        height: A.getStringUnitWidth("3", {
          font: r,
          fontSize: parseFloat(n),
          charSpace: 0
        }) * parseFloat(n) * 1.5,
        width: i
      };
    },
        u = {
      fields: [],
      xForms: [],
      acroFormDictionaryRoot: null,
      printedOut: !1,
      internal: null,
      isInitialized: !1
    },
        p = function p() {
      A.internal.acroformPlugin.acroFormDictionaryRoot.objId = void 0;
      var t = A.internal.acroformPlugin.acroFormDictionaryRoot.Fields;

      for (var e in t) {
        if (t.hasOwnProperty(e)) {
          var n = t[e];
          n.objId = void 0, n.hasAnnotation && d.call(A, n);
        }
      }
    },
        d = function d(t) {
      var e = {
        type: "reference",
        object: t
      };
      void 0 === A.internal.getPageInfo(t.page).pageContext.annotations.find(function (t) {
        return t.type === e.type && t.object === e.object;
      }) && A.internal.getPageInfo(t.page).pageContext.annotations.push(e);
    },
        g = function g() {
      if (void 0 === A.internal.acroformPlugin.acroFormDictionaryRoot) throw new Error("putCatalogCallback: Root missing.");
      A.internal.write("/AcroForm " + A.internal.acroformPlugin.acroFormDictionaryRoot.objId + " 0 R");
    },
        m = function m() {
      A.internal.events.unsubscribe(A.internal.acroformPlugin.acroFormDictionaryRoot._eventID), delete A.internal.acroformPlugin.acroFormDictionaryRoot._eventID, A.internal.acroformPlugin.printedOut = !0;
    },
        L = function L(t) {
      var e = !t;
      t || (A.internal.newObjectDeferredBegin(A.internal.acroformPlugin.acroFormDictionaryRoot.objId, !0), A.internal.acroformPlugin.acroFormDictionaryRoot.putStream());
      t = t || A.internal.acroformPlugin.acroFormDictionaryRoot.Kids;

      for (var n in t) {
        if (t.hasOwnProperty(n)) {
          var r = t[n],
              i = [],
              o = r.Rect;

          if (r.Rect && (r.Rect = c.call(this, r.Rect)), A.internal.newObjectDeferredBegin(r.objId, !0), r.DA = Y.createDefaultAppearanceStream(r), "object" === se(r) && "function" == typeof r.getKeyValueListForStream && (i = r.getKeyValueListForStream()), r.Rect = o, r.hasAppearanceStream && !r.appearanceStreamContent) {
            var a = f.call(this, r);
            i.push({
              key: "AP",
              value: "<</N " + a + ">>"
            }), A.internal.acroformPlugin.xForms.push(a);
          }

          if (r.appearanceStreamContent) {
            var s = "";

            for (var l in r.appearanceStreamContent) {
              if (r.appearanceStreamContent.hasOwnProperty(l)) {
                var h = r.appearanceStreamContent[l];
                if (s += "/" + l + " ", s += "<<", 1 <= Object.keys(h).length || Array.isArray(h)) for (var n in h) {
                  var u;
                  if (h.hasOwnProperty(n)) "function" == typeof (u = h[n]) && (u = u.call(this, r)), s += "/" + n + " " + u + " ", 0 <= A.internal.acroformPlugin.xForms.indexOf(u) || A.internal.acroformPlugin.xForms.push(u);
                } else "function" == typeof (u = h) && (u = u.call(this, r)), s += "/" + n + " " + u, 0 <= A.internal.acroformPlugin.xForms.indexOf(u) || A.internal.acroformPlugin.xForms.push(u);
                s += ">>";
              }
            }

            i.push({
              key: "AP",
              value: "<<\n" + s + ">>"
            });
          }

          A.internal.putStream({
            additionalKeyValues: i
          }), A.internal.out("endobj");
        }
      }

      e && P.call(this, A.internal.acroformPlugin.xForms);
    },
        P = function P(t) {
      for (var e in t) {
        if (t.hasOwnProperty(e)) {
          var n = e,
              r = t[e];
          A.internal.newObjectDeferredBegin(r && r.objId, !0), "object" === se(r) && "function" == typeof r.putStream && r.putStream(), delete t[n];
        }
      }
    },
        k = function k() {
      if (void 0 !== this.internal && (void 0 === this.internal.acroformPlugin || !1 === this.internal.acroformPlugin.isInitialized)) {
        if (A = this, M.FieldNum = 0, this.internal.acroformPlugin = JSON.parse(JSON.stringify(u)), this.internal.acroformPlugin.acroFormDictionaryRoot) throw new Error("Exception while creating AcroformDictionary");
        n = A.internal.scaleFactor, A.internal.acroformPlugin.acroFormDictionaryRoot = new E(), A.internal.acroformPlugin.acroFormDictionaryRoot._eventID = A.internal.events.subscribe("postPutResources", m), A.internal.events.subscribe("buildDocument", p), A.internal.events.subscribe("putCatalog", g), A.internal.events.subscribe("postPutPages", L), A.internal.acroformPlugin.isInitialized = !0;
      }
    },
        I = t.__acroform__.arrayToPdfArray = function (t) {
      if (Array.isArray(t)) {
        for (var e = "[", n = 0; n < t.length; n++) {
          switch (0 !== n && (e += " "), se(t[n])) {
            case "boolean":
            case "number":
            case "object":
              e += t[n].toString();
              break;

            case "string":
              "/" !== t[n].substr(0, 1) ? e += "(" + S(t[n].toString()) + ")" : e += t[n].toString();
          }
        }

        return e += "]";
      }

      throw new Error("Invalid argument passed to jsPDF.__acroform__.arrayToPdfArray");
    };

    var C = function C(t) {
      return (t = t || "").toString(), t = "(" + S(t) + ")";
    },
        B = function B() {
      var e;
      Object.defineProperty(this, "objId", {
        configurable: !0,
        get: function get() {
          if (e || (e = A.internal.newObjectDeferred()), !e) throw new Error("AcroFormPDFObject: Couldn't create Object ID");
          return e;
        },
        set: function set(t) {
          e = t;
        }
      });
    };

    B.prototype.toString = function () {
      return this.objId + " 0 R";
    }, B.prototype.putStream = function () {
      var t = this.getKeyValueListForStream();
      A.internal.putStream({
        data: this.stream,
        additionalKeyValues: t
      }), A.internal.out("endobj");
    }, B.prototype.getKeyValueListForStream = function () {
      return function (t) {
        var e = [],
            n = Object.getOwnPropertyNames(t).filter(function (t) {
          return "content" != t && "appearanceStreamContent" != t && "_" != t.substring(0, 1);
        });

        for (var r in n) {
          if (!1 === Object.getOwnPropertyDescriptor(t, n[r]).configurable) {
            var i = n[r],
                o = t[i];
            o && (Array.isArray(o) ? e.push({
              key: i,
              value: I(o)
            }) : o instanceof B ? e.push({
              key: i,
              value: o.objId + " 0 R"
            }) : "function" != typeof o && e.push({
              key: i,
              value: o
            }));
          }
        }

        return e;
      }(this);
    };

    var j = function j() {
      B.call(this), Object.defineProperty(this, "Type", {
        value: "/XObject",
        configurable: !1,
        writeable: !0
      }), Object.defineProperty(this, "Subtype", {
        value: "/Form",
        configurable: !1,
        writeable: !0
      }), Object.defineProperty(this, "FormType", {
        value: 1,
        configurable: !1,
        writeable: !0
      });
      var e,
          n = [];
      Object.defineProperty(this, "BBox", {
        configurable: !1,
        writeable: !0,
        get: function get() {
          return n;
        },
        set: function set(t) {
          n = t;
        }
      }), Object.defineProperty(this, "Resources", {
        value: "2 0 R",
        configurable: !1,
        writeable: !0
      }), Object.defineProperty(this, "stream", {
        enumerable: !1,
        configurable: !0,
        set: function set(t) {
          e = t.trim();
        },
        get: function get() {
          return e || null;
        }
      });
    };

    r(j, B);

    var E = function E() {
      B.call(this);
      var e,
          t = [];
      Object.defineProperty(this, "Kids", {
        enumerable: !1,
        configurable: !0,
        get: function get() {
          return 0 < t.length ? t : void 0;
        }
      }), Object.defineProperty(this, "Fields", {
        enumerable: !1,
        configurable: !1,
        get: function get() {
          return t;
        }
      }), Object.defineProperty(this, "DA", {
        enumerable: !1,
        configurable: !1,
        get: function get() {
          if (e) return "(" + e + ")";
        },
        set: function set(t) {
          e = t;
        }
      });
    };

    r(E, B);

    var M = function t() {
      B.call(this);
      var e = 4;
      Object.defineProperty(this, "F", {
        enumerable: !1,
        configurable: !1,
        get: function get() {
          return e;
        },
        set: function set(t) {
          if (isNaN(t)) throw new Error('Invalid value "' + t + '" for attribute F supplied.');
          e = t;
        }
      }), Object.defineProperty(this, "showWhenPrinted", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return Boolean(b(e, 3));
        },
        set: function set(t) {
          !0 === Boolean(t) ? this.F = x(e, 3) : this.F = N(e, 3);
        }
      });
      var n = 0;
      Object.defineProperty(this, "Ff", {
        enumerable: !1,
        configurable: !1,
        get: function get() {
          return n;
        },
        set: function set(t) {
          if (isNaN(t)) throw new Error('Invalid value "' + t + '" for attribute Ff supplied.');
          n = t;
        }
      });
      var r = [];
      Object.defineProperty(this, "Rect", {
        enumerable: !1,
        configurable: !1,
        get: function get() {
          if (0 !== r.length) return r;
        },
        set: function set(t) {
          r = void 0 !== t ? t : [];
        }
      }), Object.defineProperty(this, "x", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return !r || isNaN(r[0]) ? 0 : w(r[0]);
        },
        set: function set(t) {
          r[0] = v(t);
        }
      }), Object.defineProperty(this, "y", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return !r || isNaN(r[1]) ? 0 : w(r[1]);
        },
        set: function set(t) {
          r[1] = v(t);
        }
      }), Object.defineProperty(this, "width", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return !r || isNaN(r[2]) ? 0 : w(r[2]);
        },
        set: function set(t) {
          r[2] = v(t);
        }
      }), Object.defineProperty(this, "height", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return !r || isNaN(r[3]) ? 0 : w(r[3]);
        },
        set: function set(t) {
          r[3] = v(t);
        }
      });
      var i = "";
      Object.defineProperty(this, "FT", {
        enumerable: !0,
        configurable: !1,
        get: function get() {
          return i;
        },
        set: function set(t) {
          switch (t) {
            case "/Btn":
            case "/Tx":
            case "/Ch":
            case "/Sig":
              i = t;
              break;

            default:
              throw new Error('Invalid value "' + t + '" for attribute FT supplied.');
          }
        }
      });
      var o = null;
      Object.defineProperty(this, "T", {
        enumerable: !0,
        configurable: !1,
        get: function get() {
          if (!o || o.length < 1) {
            if (this instanceof H) return;
            o = "FieldObject" + t.FieldNum++;
          }

          return "(" + S(o) + ")";
        },
        set: function set(t) {
          o = t.toString();
        }
      }), Object.defineProperty(this, "fieldName", {
        configurable: !0,
        enumerable: !0,
        get: function get() {
          return o;
        },
        set: function set(t) {
          o = t;
        }
      });
      var a = "helvetica";
      Object.defineProperty(this, "fontName", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return a;
        },
        set: function set(t) {
          a = t;
        }
      });
      var s = "normal";
      Object.defineProperty(this, "fontStyle", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return s;
        },
        set: function set(t) {
          s = t;
        }
      });
      var l = 0;
      Object.defineProperty(this, "fontSize", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return w(l);
        },
        set: function set(t) {
          l = v(t);
        }
      });
      var h = 50;
      Object.defineProperty(this, "maxFontSize", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return w(h);
        },
        set: function set(t) {
          h = v(t);
        }
      });
      var u = "black";
      Object.defineProperty(this, "color", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return u;
        },
        set: function set(t) {
          u = t;
        }
      });
      var c = "/F1 0 Tf 0 g";
      Object.defineProperty(this, "DA", {
        enumerable: !0,
        configurable: !1,
        get: function get() {
          if (!(!c || this instanceof H || this instanceof V)) return C(c);
        },
        set: function set(t) {
          t = t.toString(), c = t;
        }
      });
      var f = null;
      Object.defineProperty(this, "DV", {
        enumerable: !1,
        configurable: !1,
        get: function get() {
          if (f) return this instanceof D == !1 ? C(f) : f;
        },
        set: function set(t) {
          t = t.toString(), f = this instanceof D == !1 ? "(" === t.substr(0, 1) ? y(t.substr(1, t.length - 2)) : y(t) : t;
        }
      }), Object.defineProperty(this, "defaultValue", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return this instanceof D == !0 ? y(f.substr(1, f.length - 1)) : f;
        },
        set: function set(t) {
          t = t.toString(), f = this instanceof D == !0 ? "/" + t : t;
        }
      });
      var p = null;
      Object.defineProperty(this, "V", {
        enumerable: !1,
        configurable: !1,
        get: function get() {
          if (p) return this instanceof D == !1 ? C(p) : p;
        },
        set: function set(t) {
          t = t.toString(), p = this instanceof D == !1 ? "(" === t.substr(0, 1) ? y(t.substr(1, t.length - 2)) : y(t) : t;
        }
      }), Object.defineProperty(this, "value", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return this instanceof D == !0 ? y(p.substr(1, p.length - 1)) : p;
        },
        set: function set(t) {
          t = t.toString(), p = this instanceof D == !0 ? "/" + t : t;
        }
      }), Object.defineProperty(this, "hasAnnotation", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return this.Rect;
        }
      }), Object.defineProperty(this, "Type", {
        enumerable: !0,
        configurable: !1,
        get: function get() {
          return this.hasAnnotation ? "/Annot" : null;
        }
      }), Object.defineProperty(this, "Subtype", {
        enumerable: !0,
        configurable: !1,
        get: function get() {
          return this.hasAnnotation ? "/Widget" : null;
        }
      });
      var d,
          g = !1;
      Object.defineProperty(this, "hasAppearanceStream", {
        enumerable: !0,
        configurable: !0,
        writeable: !0,
        get: function get() {
          return g;
        },
        set: function set(t) {
          t = Boolean(t), g = t;
        }
      }), Object.defineProperty(this, "page", {
        enumerable: !0,
        configurable: !0,
        writeable: !0,
        get: function get() {
          if (d) return d;
        },
        set: function set(t) {
          d = t;
        }
      }), Object.defineProperty(this, "readOnly", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return Boolean(b(this.Ff, 1));
        },
        set: function set(t) {
          !0 === Boolean(t) ? this.Ff = x(this.Ff, 1) : this.Ff = N(this.Ff, 1);
        }
      }), Object.defineProperty(this, "required", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return Boolean(b(this.Ff, 2));
        },
        set: function set(t) {
          !0 === Boolean(t) ? this.Ff = x(this.Ff, 2) : this.Ff = N(this.Ff, 2);
        }
      }), Object.defineProperty(this, "noExport", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return Boolean(b(this.Ff, 3));
        },
        set: function set(t) {
          !0 === Boolean(t) ? this.Ff = x(this.Ff, 3) : this.Ff = N(this.Ff, 3);
        }
      });
      var m = null;
      Object.defineProperty(this, "Q", {
        enumerable: !0,
        configurable: !1,
        get: function get() {
          if (null !== m) return m;
        },
        set: function set(t) {
          if (-1 === [0, 1, 2].indexOf(t)) throw new Error('Invalid value "' + t + '" for attribute Q supplied.');
          m = t;
        }
      }), Object.defineProperty(this, "textAlign", {
        get: function get() {
          var t = "left";

          switch (m) {
            case 0:
            default:
              t = "left";
              break;

            case 1:
              t = "center";
              break;

            case 2:
              t = "right";
          }

          return t;
        },
        configurable: !0,
        enumerable: !0,
        set: function set(t) {
          switch (t) {
            case "right":
            case 2:
              m = 2;
              break;

            case "center":
            case 1:
              m = 1;
              break;

            case "left":
            case 0:
            default:
              m = 0;
          }
        }
      });
    };

    r(M, B);

    var O = function O() {
      M.call(this), this.FT = "/Ch", this.V = "()", this.fontName = "zapfdingbats";
      var e = 0;
      Object.defineProperty(this, "TI", {
        enumerable: !0,
        configurable: !1,
        get: function get() {
          return e;
        },
        set: function set(t) {
          e = t;
        }
      }), Object.defineProperty(this, "topIndex", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return e;
        },
        set: function set(t) {
          e = t;
        }
      });
      var r = [];
      Object.defineProperty(this, "Opt", {
        enumerable: !0,
        configurable: !1,
        get: function get() {
          return I(r);
        },
        set: function set(t) {
          var e, n;
          n = [], "string" == typeof (e = t) && (n = function (t, e, n) {
            n || (n = 1);

            for (var r, i = []; r = e.exec(t);) {
              i.push(r[n]);
            }

            return i;
          }(e, /\((.*?)\)/g)), r = n;
        }
      }), this.getOptions = function () {
        return r;
      }, this.setOptions = function (t) {
        r = t, this.sort && r.sort();
      }, this.addOption = function (t) {
        t = (t = t || "").toString(), r.push(t), this.sort && r.sort();
      }, this.removeOption = function (t, e) {
        for (e = e || !1, t = (t = t || "").toString(); -1 !== r.indexOf(t) && (r.splice(r.indexOf(t), 1), !1 !== e);) {
          ;
        }
      }, Object.defineProperty(this, "combo", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return Boolean(b(this.Ff, 18));
        },
        set: function set(t) {
          !0 === Boolean(t) ? this.Ff = x(this.Ff, 18) : this.Ff = N(this.Ff, 18);
        }
      }), Object.defineProperty(this, "edit", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return Boolean(b(this.Ff, 19));
        },
        set: function set(t) {
          !0 === this.combo && (!0 === Boolean(t) ? this.Ff = x(this.Ff, 19) : this.Ff = N(this.Ff, 19));
        }
      }), Object.defineProperty(this, "sort", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return Boolean(b(this.Ff, 20));
        },
        set: function set(t) {
          !0 === Boolean(t) ? (this.Ff = x(this.Ff, 20), r.sort()) : this.Ff = N(this.Ff, 20);
        }
      }), Object.defineProperty(this, "multiSelect", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return Boolean(b(this.Ff, 22));
        },
        set: function set(t) {
          !0 === Boolean(t) ? this.Ff = x(this.Ff, 22) : this.Ff = N(this.Ff, 22);
        }
      }), Object.defineProperty(this, "doNotSpellCheck", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return Boolean(b(this.Ff, 23));
        },
        set: function set(t) {
          !0 === Boolean(t) ? this.Ff = x(this.Ff, 23) : this.Ff = N(this.Ff, 23);
        }
      }), Object.defineProperty(this, "commitOnSelChange", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return Boolean(b(this.Ff, 27));
        },
        set: function set(t) {
          !0 === Boolean(t) ? this.Ff = x(this.Ff, 27) : this.Ff = N(this.Ff, 27);
        }
      }), this.hasAppearanceStream = !1;
    };

    r(O, M);

    var q = function q() {
      O.call(this), this.fontName = "helvetica", this.combo = !1;
    };

    r(q, O);

    var T = function T() {
      q.call(this), this.combo = !0;
    };

    r(T, q);

    var R = function R() {
      T.call(this), this.edit = !0;
    };

    r(R, T);

    var D = function D() {
      M.call(this), this.FT = "/Btn", Object.defineProperty(this, "noToggleToOff", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return Boolean(b(this.Ff, 15));
        },
        set: function set(t) {
          !0 === Boolean(t) ? this.Ff = x(this.Ff, 15) : this.Ff = N(this.Ff, 15);
        }
      }), Object.defineProperty(this, "radio", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return Boolean(b(this.Ff, 16));
        },
        set: function set(t) {
          !0 === Boolean(t) ? this.Ff = x(this.Ff, 16) : this.Ff = N(this.Ff, 16);
        }
      }), Object.defineProperty(this, "pushButton", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return Boolean(b(this.Ff, 17));
        },
        set: function set(t) {
          !0 === Boolean(t) ? this.Ff = x(this.Ff, 17) : this.Ff = N(this.Ff, 17);
        }
      }), Object.defineProperty(this, "radioIsUnison", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return Boolean(b(this.Ff, 26));
        },
        set: function set(t) {
          !0 === Boolean(t) ? this.Ff = x(this.Ff, 26) : this.Ff = N(this.Ff, 26);
        }
      });
      var e,
          n = {};
      Object.defineProperty(this, "MK", {
        enumerable: !1,
        configurable: !1,
        get: function get() {
          if (0 !== Object.keys(n).length) {
            var t,
                e = [];

            for (t in e.push("<<"), n) {
              e.push("/" + t + " (" + n[t] + ")");
            }

            return e.push(">>"), e.join("\n");
          }
        },
        set: function set(t) {
          "object" === se(t) && (n = t);
        }
      }), Object.defineProperty(this, "caption", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return n.CA || "";
        },
        set: function set(t) {
          "string" == typeof t && (n.CA = t);
        }
      }), Object.defineProperty(this, "AS", {
        enumerable: !1,
        configurable: !1,
        get: function get() {
          return e;
        },
        set: function set(t) {
          e = t;
        }
      }), Object.defineProperty(this, "appearanceState", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return e.substr(1, e.length - 1);
        },
        set: function set(t) {
          e = "/" + t;
        }
      });
    };

    r(D, M);

    var U = function U() {
      D.call(this), this.pushButton = !0;
    };

    r(U, D);

    var z = function z() {
      D.call(this), this.radio = !0, this.pushButton = !1;
      var e = [];
      Object.defineProperty(this, "Kids", {
        enumerable: !0,
        configurable: !1,
        get: function get() {
          return e;
        },
        set: function set(t) {
          e = void 0 !== t ? t : [];
        }
      });
    };

    r(z, D);

    var H = function H() {
      var e, n;
      M.call(this), Object.defineProperty(this, "Parent", {
        enumerable: !1,
        configurable: !1,
        get: function get() {
          return e;
        },
        set: function set(t) {
          e = t;
        }
      }), Object.defineProperty(this, "optionName", {
        enumerable: !1,
        configurable: !0,
        get: function get() {
          return n;
        },
        set: function set(t) {
          n = t;
        }
      });
      var r,
          i = {};
      Object.defineProperty(this, "MK", {
        enumerable: !1,
        configurable: !1,
        get: function get() {
          var t,
              e = [];

          for (t in e.push("<<"), i) {
            e.push("/" + t + " (" + i[t] + ")");
          }

          return e.push(">>"), e.join("\n");
        },
        set: function set(t) {
          "object" === se(t) && (i = t);
        }
      }), Object.defineProperty(this, "caption", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return i.CA || "";
        },
        set: function set(t) {
          "string" == typeof t && (i.CA = t);
        }
      }), Object.defineProperty(this, "AS", {
        enumerable: !1,
        configurable: !1,
        get: function get() {
          return r;
        },
        set: function set(t) {
          r = t;
        }
      }), Object.defineProperty(this, "appearanceState", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return r.substr(1, r.length - 1);
        },
        set: function set(t) {
          r = "/" + t;
        }
      }), this.optionName = name, this.caption = "l", this.appearanceState = "Off", this._AppearanceType = Y.RadioButton.Circle, this.appearanceStreamContent = this._AppearanceType.createAppearanceStream(name);
    };

    r(H, M), z.prototype.setAppearance = function (t) {
      if (!("createAppearanceStream" in t && "getCA" in t)) throw new Error("Couldn't assign Appearance to RadioButton. Appearance was Invalid!");

      for (var e in this.Kids) {
        if (this.Kids.hasOwnProperty(e)) {
          var n = this.Kids[e];
          n.appearanceStreamContent = t.createAppearanceStream(n.optionName), n.caption = t.getCA();
        }
      }
    }, z.prototype.createOption = function (t) {
      this.Kids.length;
      var e = new H();
      return e.Parent = this, e.optionName = t, this.Kids.push(e), J.call(this, e), e;
    };

    var W = function W() {
      D.call(this), this.fontName = "zapfdingbats", this.caption = "3", this.appearanceState = "On", this.value = "On", this.textAlign = "center", this.appearanceStreamContent = Y.CheckBox.createAppearanceStream();
    };

    r(W, D);

    var V = function V() {
      M.call(this), this.FT = "/Tx", Object.defineProperty(this, "multiline", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return Boolean(b(this.Ff, 13));
        },
        set: function set(t) {
          !0 === Boolean(t) ? this.Ff = x(this.Ff, 13) : this.Ff = N(this.Ff, 13);
        }
      }), Object.defineProperty(this, "fileSelect", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return Boolean(b(this.Ff, 21));
        },
        set: function set(t) {
          !0 === Boolean(t) ? this.Ff = x(this.Ff, 21) : this.Ff = N(this.Ff, 21);
        }
      }), Object.defineProperty(this, "doNotSpellCheck", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return Boolean(b(this.Ff, 23));
        },
        set: function set(t) {
          !0 === Boolean(t) ? this.Ff = x(this.Ff, 23) : this.Ff = N(this.Ff, 23);
        }
      }), Object.defineProperty(this, "doNotScroll", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return Boolean(b(this.Ff, 24));
        },
        set: function set(t) {
          !0 === Boolean(t) ? this.Ff = x(this.Ff, 24) : this.Ff = N(this.Ff, 24);
        }
      }), Object.defineProperty(this, "comb", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return Boolean(b(this.Ff, 25));
        },
        set: function set(t) {
          !0 === Boolean(t) ? this.Ff = x(this.Ff, 25) : this.Ff = N(this.Ff, 25);
        }
      }), Object.defineProperty(this, "richText", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return Boolean(b(this.Ff, 26));
        },
        set: function set(t) {
          !0 === Boolean(t) ? this.Ff = x(this.Ff, 26) : this.Ff = N(this.Ff, 26);
        }
      });
      var e = null;
      Object.defineProperty(this, "MaxLen", {
        enumerable: !0,
        configurable: !1,
        get: function get() {
          return e;
        },
        set: function set(t) {
          e = t;
        }
      }), Object.defineProperty(this, "maxLength", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return e;
        },
        set: function set(t) {
          Number.isInteger(t) && (e = t);
        }
      }), Object.defineProperty(this, "hasAppearanceStream", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return this.V || this.DV;
        }
      });
    };

    r(V, M);

    var G = function G() {
      V.call(this), Object.defineProperty(this, "password", {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return Boolean(b(this.Ff, 14));
        },
        set: function set(t) {
          !0 === Boolean(t) ? this.Ff = x(this.Ff, 14) : this.Ff = N(this.Ff, 14);
        }
      }), this.password = !0;
    };

    r(G, V);
    var Y = {
      CheckBox: {
        createAppearanceStream: function createAppearanceStream() {
          return {
            N: {
              On: Y.CheckBox.YesNormal
            },
            D: {
              On: Y.CheckBox.YesPushDown,
              Off: Y.CheckBox.OffPushDown
            }
          };
        },
        YesPushDown: function YesPushDown(t) {
          var e = l(t),
              n = [],
              r = A.internal.getFont(t.fontName, t.fontStyle).id,
              i = A.__private__.encodeColorString(t.color),
              o = h(t, t.caption);

          return n.push("0.749023 g"), n.push("0 0 " + _(Y.internal.getWidth(t)) + " " + _(Y.internal.getHeight(t)) + " re"), n.push("f"), n.push("BMC"), n.push("q"), n.push("0 0 1 rg"), n.push("/" + r + " " + _(o.fontSize) + " Tf " + i), n.push("BT"), n.push(o.text), n.push("ET"), n.push("Q"), n.push("EMC"), e.stream = n.join("\n"), e;
        },
        YesNormal: function YesNormal(t) {
          var e = l(t),
              n = A.internal.getFont(t.fontName, t.fontStyle).id,
              r = A.__private__.encodeColorString(t.color),
              i = [],
              o = Y.internal.getHeight(t),
              a = Y.internal.getWidth(t),
              s = h(t, t.caption);

          return i.push("1 g"), i.push("0 0 " + _(a) + " " + _(o) + " re"), i.push("f"), i.push("q"), i.push("0 0 1 rg"), i.push("0 0 " + _(a - 1) + " " + _(o - 1) + " re"), i.push("W"), i.push("n"), i.push("0 g"), i.push("BT"), i.push("/" + n + " " + _(s.fontSize) + " Tf " + r), i.push(s.text), i.push("ET"), i.push("Q"), e.stream = i.join("\n"), e;
        },
        OffPushDown: function OffPushDown(t) {
          var e = l(t),
              n = [];
          return n.push("0.749023 g"), n.push("0 0 " + _(Y.internal.getWidth(t)) + " " + _(Y.internal.getHeight(t)) + " re"), n.push("f"), e.stream = n.join("\n"), e;
        }
      },
      RadioButton: {
        Circle: {
          createAppearanceStream: function createAppearanceStream(t) {
            var e = {
              D: {
                Off: Y.RadioButton.Circle.OffPushDown
              },
              N: {}
            };
            return e.N[t] = Y.RadioButton.Circle.YesNormal, e.D[t] = Y.RadioButton.Circle.YesPushDown, e;
          },
          getCA: function getCA() {
            return "l";
          },
          YesNormal: function YesNormal(t) {
            var e = l(t),
                n = [],
                r = Y.internal.getWidth(t) <= Y.internal.getHeight(t) ? Y.internal.getWidth(t) / 4 : Y.internal.getHeight(t) / 4;
            r = Number((.9 * r).toFixed(5));
            var i = Y.internal.Bezier_C,
                o = Number((r * i).toFixed(5));
            return n.push("q"), n.push("1 0 0 1 " + s(Y.internal.getWidth(t) / 2) + " " + s(Y.internal.getHeight(t) / 2) + " cm"), n.push(r + " 0 m"), n.push(r + " " + o + " " + o + " " + r + " 0 " + r + " c"), n.push("-" + o + " " + r + " -" + r + " " + o + " -" + r + " 0 c"), n.push("-" + r + " -" + o + " -" + o + " -" + r + " 0 -" + r + " c"), n.push(o + " -" + r + " " + r + " -" + o + " " + r + " 0 c"), n.push("f"), n.push("Q"), e.stream = n.join("\n"), e;
          },
          YesPushDown: function YesPushDown(t) {
            var e = l(t),
                n = [],
                r = Y.internal.getWidth(t) <= Y.internal.getHeight(t) ? Y.internal.getWidth(t) / 4 : Y.internal.getHeight(t) / 4,
                i = (r = Number((.9 * r).toFixed(5)), Number((2 * r).toFixed(5))),
                o = Number((i * Y.internal.Bezier_C).toFixed(5)),
                a = Number((r * Y.internal.Bezier_C).toFixed(5));
            return n.push("0.749023 g"), n.push("q"), n.push("1 0 0 1 " + s(Y.internal.getWidth(t) / 2) + " " + s(Y.internal.getHeight(t) / 2) + " cm"), n.push(i + " 0 m"), n.push(i + " " + o + " " + o + " " + i + " 0 " + i + " c"), n.push("-" + o + " " + i + " -" + i + " " + o + " -" + i + " 0 c"), n.push("-" + i + " -" + o + " -" + o + " -" + i + " 0 -" + i + " c"), n.push(o + " -" + i + " " + i + " -" + o + " " + i + " 0 c"), n.push("f"), n.push("Q"), n.push("0 g"), n.push("q"), n.push("1 0 0 1 " + s(Y.internal.getWidth(t) / 2) + " " + s(Y.internal.getHeight(t) / 2) + " cm"), n.push(r + " 0 m"), n.push(r + " " + a + " " + a + " " + r + " 0 " + r + " c"), n.push("-" + a + " " + r + " -" + r + " " + a + " -" + r + " 0 c"), n.push("-" + r + " -" + a + " -" + a + " -" + r + " 0 -" + r + " c"), n.push(a + " -" + r + " " + r + " -" + a + " " + r + " 0 c"), n.push("f"), n.push("Q"), e.stream = n.join("\n"), e;
          },
          OffPushDown: function OffPushDown(t) {
            var e = l(t),
                n = [],
                r = Y.internal.getWidth(t) <= Y.internal.getHeight(t) ? Y.internal.getWidth(t) / 4 : Y.internal.getHeight(t) / 4,
                i = (r = Number((.9 * r).toFixed(5)), Number((2 * r).toFixed(5))),
                o = Number((i * Y.internal.Bezier_C).toFixed(5));
            return n.push("0.749023 g"), n.push("q"), n.push("1 0 0 1 " + s(Y.internal.getWidth(t) / 2) + " " + s(Y.internal.getHeight(t) / 2) + " cm"), n.push(i + " 0 m"), n.push(i + " " + o + " " + o + " " + i + " 0 " + i + " c"), n.push("-" + o + " " + i + " -" + i + " " + o + " -" + i + " 0 c"), n.push("-" + i + " -" + o + " -" + o + " -" + i + " 0 -" + i + " c"), n.push(o + " -" + i + " " + i + " -" + o + " " + i + " 0 c"), n.push("f"), n.push("Q"), e.stream = n.join("\n"), e;
          }
        },
        Cross: {
          createAppearanceStream: function createAppearanceStream(t) {
            var e = {
              D: {
                Off: Y.RadioButton.Cross.OffPushDown
              },
              N: {}
            };
            return e.N[t] = Y.RadioButton.Cross.YesNormal, e.D[t] = Y.RadioButton.Cross.YesPushDown, e;
          },
          getCA: function getCA() {
            return "8";
          },
          YesNormal: function YesNormal(t) {
            var e = l(t),
                n = [],
                r = Y.internal.calculateCross(t);
            return n.push("q"), n.push("1 1 " + _(Y.internal.getWidth(t) - 2) + " " + _(Y.internal.getHeight(t) - 2) + " re"), n.push("W"), n.push("n"), n.push(_(r.x1.x) + " " + _(r.x1.y) + " m"), n.push(_(r.x2.x) + " " + _(r.x2.y) + " l"), n.push(_(r.x4.x) + " " + _(r.x4.y) + " m"), n.push(_(r.x3.x) + " " + _(r.x3.y) + " l"), n.push("s"), n.push("Q"), e.stream = n.join("\n"), e;
          },
          YesPushDown: function YesPushDown(t) {
            var e = l(t),
                n = Y.internal.calculateCross(t),
                r = [];
            return r.push("0.749023 g"), r.push("0 0 " + _(Y.internal.getWidth(t)) + " " + _(Y.internal.getHeight(t)) + " re"), r.push("f"), r.push("q"), r.push("1 1 " + _(Y.internal.getWidth(t) - 2) + " " + _(Y.internal.getHeight(t) - 2) + " re"), r.push("W"), r.push("n"), r.push(_(n.x1.x) + " " + _(n.x1.y) + " m"), r.push(_(n.x2.x) + " " + _(n.x2.y) + " l"), r.push(_(n.x4.x) + " " + _(n.x4.y) + " m"), r.push(_(n.x3.x) + " " + _(n.x3.y) + " l"), r.push("s"), r.push("Q"), e.stream = r.join("\n"), e;
          },
          OffPushDown: function OffPushDown(t) {
            var e = l(t),
                n = [];
            return n.push("0.749023 g"), n.push("0 0 " + _(Y.internal.getWidth(t)) + " " + _(Y.internal.getHeight(t)) + " re"), n.push("f"), e.stream = n.join("\n"), e;
          }
        }
      },
      createDefaultAppearanceStream: function createDefaultAppearanceStream(t) {
        var e = A.internal.getFont(t.fontName, t.fontStyle).id,
            n = A.__private__.encodeColorString(t.color);

        return "/" + e + " " + t.fontSize + " Tf " + n;
      }
    };
    Y.internal = {
      Bezier_C: .551915024494,
      calculateCross: function calculateCross(t) {
        var e = Y.internal.getWidth(t),
            n = Y.internal.getHeight(t),
            r = Math.min(e, n);
        return {
          x1: {
            x: (e - r) / 2,
            y: (n - r) / 2 + r
          },
          x2: {
            x: (e - r) / 2 + r,
            y: (n - r) / 2
          },
          x3: {
            x: (e - r) / 2,
            y: (n - r) / 2
          },
          x4: {
            x: (e - r) / 2 + r,
            y: (n - r) / 2 + r
          }
        };
      }
    }, Y.internal.getWidth = function (t) {
      var e = 0;
      return "object" === se(t) && (e = v(t.Rect[2])), e;
    }, Y.internal.getHeight = function (t) {
      var e = 0;
      return "object" === se(t) && (e = v(t.Rect[3])), e;
    };

    var J = t.addField = function (t) {
      if (k.call(this), !(t instanceof M)) throw new Error("Invalid argument passed to jsPDF.addField.");
      return function (t) {
        A.internal.acroformPlugin.printedOut && (A.internal.acroformPlugin.printedOut = !1, A.internal.acroformPlugin.acroFormDictionaryRoot = null), A.internal.acroformPlugin.acroFormDictionaryRoot || k.call(A), A.internal.acroformPlugin.acroFormDictionaryRoot.Fields.push(t);
      }.call(this, t), t.page = A.internal.getCurrentPageInfo().pageNumber, this;
    };

    t.addButton = function (t) {
      if (t instanceof D == !1) throw new Error("Invalid argument passed to jsPDF.addButton.");
      return J.call(this, t);
    }, t.addTextField = function (t) {
      if (t instanceof V == !1) throw new Error("Invalid argument passed to jsPDF.addTextField.");
      return J.call(this, t);
    }, t.addChoiceField = function (t) {
      if (t instanceof O == !1) throw new Error("Invalid argument passed to jsPDF.addChoiceField.");
      return J.call(this, t);
    };
    "object" == se(e) && void 0 === e.ChoiceField && void 0 === e.ListBox && void 0 === e.ComboBox && void 0 === e.EditBox && void 0 === e.Button && void 0 === e.PushButton && void 0 === e.RadioButton && void 0 === e.CheckBox && void 0 === e.TextField && void 0 === e.PasswordField ? (e.ChoiceField = O, e.ListBox = q, e.ComboBox = T, e.EditBox = R, e.Button = D, e.PushButton = U, e.RadioButton = z, e.CheckBox = W, e.TextField = V, e.PasswordField = G, e.AcroForm = {
      Appearance: Y
    }) : console.warn("AcroForm-Classes are not populated into global-namespace, because the class-Names exist already."), t.AcroFormChoiceField = O, t.AcroFormListBox = q, t.AcroFormComboBox = T, t.AcroFormEditBox = R, t.AcroFormButton = D, t.AcroFormPushButton = U, t.AcroFormRadioButton = z, t.AcroFormCheckBox = W, t.AcroFormTextField = V, t.AcroFormPasswordField = G, t.AcroFormAppearance = Y, t.AcroForm = {
      ChoiceField: O,
      ListBox: q,
      ComboBox: T,
      EditBox: R,
      Button: D,
      PushButton: U,
      RadioButton: z,
      CheckBox: W,
      TextField: V,
      PasswordField: G,
      Appearance: Y
    };
  })((window.tmp = lt).API, "undefined" != typeof window && window || "undefined" != typeof global && global),
  /** @license
     * jsPDF addImage plugin
     * Copyright (c) 2012 Jason Siefken, https://github.com/siefkenj/
     *               2013 Chris Dowling, https://github.com/gingerchris
     *               2013 Trinh Ho, https://github.com/ineedfat
     *               2013 Edwin Alejandro Perez, https://github.com/eaparango
     *               2013 Norah Smith, https://github.com/burnburnrocket
     *               2014 Diego Casorran, https://github.com/diegocr
     *               2014 James Robb, https://github.com/jamesbrobb
     *
     * 
     */
  function (x) {
    var N = "addImage_",
        l = {
      PNG: [[137, 80, 78, 71]],
      TIFF: [[77, 77, 0, 42], [73, 73, 42, 0]],
      JPEG: [[255, 216, 255, 224, void 0, void 0, 74, 70, 73, 70, 0], [255, 216, 255, 225, void 0, void 0, 69, 120, 105, 102, 0, 0]],
      JPEG2000: [[0, 0, 0, 12, 106, 80, 32, 32]],
      GIF87a: [[71, 73, 70, 56, 55, 97]],
      GIF89a: [[71, 73, 70, 56, 57, 97]],
      BMP: [[66, 77], [66, 65], [67, 73], [67, 80], [73, 67], [80, 84]]
    },
        h = x.getImageFileTypeByImageData = function (t, e) {
      var n, r;
      e = e || "UNKNOWN";
      var i,
          o,
          a,
          s = "UNKNOWN";

      for (a in x.isArrayBufferView(t) && (t = x.arrayBufferToBinaryString(t)), l) {
        for (i = l[a], n = 0; n < i.length; n += 1) {
          for (o = !0, r = 0; r < i[n].length; r += 1) {
            if (void 0 !== i[n][r] && i[n][r] !== t.charCodeAt(r)) {
              o = !1;
              break;
            }
          }

          if (!0 === o) {
            s = a;
            break;
          }
        }
      }

      return "UNKNOWN" === s && "UNKNOWN" !== e && (console.warn('FileType of Image not recognized. Processing image as "' + e + '".'), s = e), s;
    },
        n = function t(e) {
      for (var n = this.internal.newObject(), r = this.internal.write, i = this.internal.putStream, o = (0, this.internal.getFilters)(); -1 !== o.indexOf("FlateEncode");) {
        o.splice(o.indexOf("FlateEncode"), 1);
      }

      e.n = n;
      var a = [];

      if (a.push({
        key: "Type",
        value: "/XObject"
      }), a.push({
        key: "Subtype",
        value: "/Image"
      }), a.push({
        key: "Width",
        value: e.w
      }), a.push({
        key: "Height",
        value: e.h
      }), e.cs === this.color_spaces.INDEXED ? a.push({
        key: "ColorSpace",
        value: "[/Indexed /DeviceRGB " + (e.pal.length / 3 - 1) + " " + ("smask" in e ? n + 2 : n + 1) + " 0 R]"
      }) : (a.push({
        key: "ColorSpace",
        value: "/" + e.cs
      }), e.cs === this.color_spaces.DEVICE_CMYK && a.push({
        key: "Decode",
        value: "[1 0 1 0 1 0 1 0]"
      })), a.push({
        key: "BitsPerComponent",
        value: e.bpc
      }), "dp" in e && a.push({
        key: "DecodeParms",
        value: "<<" + e.dp + ">>"
      }), "trns" in e && e.trns.constructor == Array) {
        for (var s = "", l = 0, h = e.trns.length; l < h; l++) {
          s += e.trns[l] + " " + e.trns[l] + " ";
        }

        a.push({
          key: "Mask",
          value: "[" + s + "]"
        });
      }

      "smask" in e && a.push({
        key: "SMask",
        value: n + 1 + " 0 R"
      });
      var u = void 0 !== e.f ? ["/" + e.f] : void 0;

      if (i({
        data: e.data,
        additionalKeyValues: a,
        alreadyAppliedFilters: u
      }), r("endobj"), "smask" in e) {
        var c = "/Predictor " + e.p + " /Colors 1 /BitsPerComponent " + e.bpc + " /Columns " + e.w,
            f = {
          w: e.w,
          h: e.h,
          cs: "DeviceGray",
          bpc: e.bpc,
          dp: c,
          data: e.smask
        };
        "f" in e && (f.f = e.f), t.call(this, f);
      }

      e.cs === this.color_spaces.INDEXED && (this.internal.newObject(), i({
        data: this.arrayBufferToBinaryString(new Uint8Array(e.pal))
      }), r("endobj"));
    },
        L = function L() {
      var t = this.internal.collections[N + "images"];

      for (var e in t) {
        n.call(this, t[e]);
      }
    },
        A = function A() {
      var t,
          e = this.internal.collections[N + "images"],
          n = this.internal.write;

      for (var r in e) {
        n("/I" + (t = e[r]).i, t.n, "0", "R");
      }
    },
        S = function S(t) {
      return "function" == typeof x["process" + t.toUpperCase()];
    },
        _ = function _(t) {
      return "object" === se(t) && 1 === t.nodeType;
    },
        F = function F(t, e) {
      if ("IMG" === t.nodeName && t.hasAttribute("src")) {
        var n = "" + t.getAttribute("src");
        if (0 === n.indexOf("data:image/")) return unescape(n);
        var r = x.loadFile(n);
        if (void 0 !== r) return btoa(r);
      }

      if ("CANVAS" === t.nodeName) {
        var i = t;
        return t.toDataURL("image/jpeg", 1);
      }

      (i = document.createElement("canvas")).width = t.clientWidth || t.width, i.height = t.clientHeight || t.height;
      var o = i.getContext("2d");
      if (!o) throw "addImage requires canvas to be supported by browser.";
      return o.drawImage(t, 0, 0, i.width, i.height), i.toDataURL("png" == ("" + e).toLowerCase() ? "image/png" : "image/jpeg");
    },
        P = function P(t, e) {
      var n;
      if (e) for (var r in e) {
        if (t === e[r].alias) {
          n = e[r];
          break;
        }
      }
      return n;
    };

    x.color_spaces = {
      DEVICE_RGB: "DeviceRGB",
      DEVICE_GRAY: "DeviceGray",
      DEVICE_CMYK: "DeviceCMYK",
      CAL_GREY: "CalGray",
      CAL_RGB: "CalRGB",
      LAB: "Lab",
      ICC_BASED: "ICCBased",
      INDEXED: "Indexed",
      PATTERN: "Pattern",
      SEPARATION: "Separation",
      DEVICE_N: "DeviceN"
    }, x.decode = {
      DCT_DECODE: "DCTDecode",
      FLATE_DECODE: "FlateDecode",
      LZW_DECODE: "LZWDecode",
      JPX_DECODE: "JPXDecode",
      JBIG2_DECODE: "JBIG2Decode",
      ASCII85_DECODE: "ASCII85Decode",
      ASCII_HEX_DECODE: "ASCIIHexDecode",
      RUN_LENGTH_DECODE: "RunLengthDecode",
      CCITT_FAX_DECODE: "CCITTFaxDecode"
    }, x.image_compression = {
      NONE: "NONE",
      FAST: "FAST",
      MEDIUM: "MEDIUM",
      SLOW: "SLOW"
    }, x.sHashCode = function (t) {
      var e,
          n = 0;
      if (0 === (t = t || "").length) return n;

      for (e = 0; e < t.length; e++) {
        n = (n << 5) - n + t.charCodeAt(e), n |= 0;
      }

      return n;
    }, x.isString = function (t) {
      return "string" == typeof t;
    }, x.validateStringAsBase64 = function (t) {
      (t = t || "").toString().trim();
      var e = !0;
      return 0 === t.length && (e = !1), t.length % 4 != 0 && (e = !1), !1 === /^[A-Za-z0-9+\/]+$/.test(t.substr(0, t.length - 2)) && (e = !1), !1 === /^[A-Za-z0-9\/][A-Za-z0-9+\/]|[A-Za-z0-9+\/]=|==$/.test(t.substr(-2)) && (e = !1), e;
    }, x.extractInfoFromBase64DataURI = function (t) {
      return /^data:([\w]+?\/([\w]+?));\S*;*base64,(.+)$/g.exec(t);
    }, x.extractImageFromDataUrl = function (t) {
      var e = (t = t || "").split("base64,"),
          n = null;

      if (2 === e.length) {
        var r = /^data:(\w*\/\w*);*(charset=[\w=-]*)*;*$/.exec(e[0]);
        Array.isArray(r) && (n = {
          mimeType: r[1],
          charset: r[2],
          data: e[1]
        });
      }

      return n;
    }, x.supportsArrayBuffer = function () {
      return "undefined" != typeof ArrayBuffer && "undefined" != typeof Uint8Array;
    }, x.isArrayBuffer = function (t) {
      return !!this.supportsArrayBuffer() && t instanceof ArrayBuffer;
    }, x.isArrayBufferView = function (t) {
      return !!this.supportsArrayBuffer() && "undefined" != typeof Uint32Array && (t instanceof Int8Array || t instanceof Uint8Array || "undefined" != typeof Uint8ClampedArray && t instanceof Uint8ClampedArray || t instanceof Int16Array || t instanceof Uint16Array || t instanceof Int32Array || t instanceof Uint32Array || t instanceof Float32Array || t instanceof Float64Array);
    }, x.binaryStringToUint8Array = function (t) {
      for (var e = t.length, n = new Uint8Array(e), r = 0; r < e; r++) {
        n[r] = t.charCodeAt(r);
      }

      return n;
    }, x.arrayBufferToBinaryString = function (t) {
      if ("function" == typeof atob) return atob(this.arrayBufferToBase64(t));
    }, x.arrayBufferToBase64 = function (t) {
      for (var e, n = "", r = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", i = new Uint8Array(t), o = i.byteLength, a = o % 3, s = o - a, l = 0; l < s; l += 3) {
        n += r[(16515072 & (e = i[l] << 16 | i[l + 1] << 8 | i[l + 2])) >> 18] + r[(258048 & e) >> 12] + r[(4032 & e) >> 6] + r[63 & e];
      }

      return 1 == a ? n += r[(252 & (e = i[s])) >> 2] + r[(3 & e) << 4] + "==" : 2 == a && (n += r[(64512 & (e = i[s] << 8 | i[s + 1])) >> 10] + r[(1008 & e) >> 4] + r[(15 & e) << 2] + "="), n;
    }, x.createImageInfo = function (t, e, n, r, i, o, a, s, l, h, u, c, f) {
      var p = {
        alias: s,
        w: e,
        h: n,
        cs: r,
        bpc: i,
        i: a,
        data: t
      };
      return o && (p.f = o), l && (p.dp = l), h && (p.trns = h), u && (p.pal = u), c && (p.smask = c), f && (p.p = f), p;
    }, x.addImage = function (t, e, n, r, i, o, a, s, l) {
      var h = "";

      if ("string" != typeof e) {
        var u = o;
        o = i, i = r, r = n, n = e, e = u;
      }

      if ("object" === se(t) && !_(t) && "imageData" in t) {
        var c = t;
        t = c.imageData, e = c.format || e || "UNKNOWN", n = c.x || n || 0, r = c.y || r || 0, i = c.w || i, o = c.h || o, a = c.alias || a, s = c.compression || s, l = c.rotation || c.angle || l;
      }

      var f = this.internal.getFilters();
      if (void 0 === s && -1 !== f.indexOf("FlateEncode") && (s = "SLOW"), "string" == typeof t && (t = unescape(t)), isNaN(n) || isNaN(r)) throw console.error("jsPDF.addImage: Invalid coordinates", arguments), new Error("Invalid coordinates passed to jsPDF.addImage");

      var p,
          d,
          g,
          m,
          y,
          v,
          w,
          b = function () {
        var t = this.internal.collections[N + "images"];
        return t || (this.internal.collections[N + "images"] = t = {}, this.internal.events.subscribe("putResources", L), this.internal.events.subscribe("putXobjectDict", A)), t;
      }.call(this);

      if (!((p = P(t, b)) || (_(t) && (t = F(t, e)), (null == (w = a) || 0 === w.length) && (a = "string" == typeof (v = t) ? x.sHashCode(v) : x.isArrayBufferView(v) ? x.sHashCode(x.arrayBufferToBinaryString(v)) : null), p = P(a, b)))) {
        if (this.isString(t) && ("" !== (h = this.convertStringToImageData(t)) ? t = h : void 0 !== (h = x.loadFile(t)) && (t = h)), e = this.getImageFileTypeByImageData(t, e), !S(e)) throw new Error("addImage does not support files of type '" + e + "', please ensure that a plugin for '" + e + "' support is added.");
        if (this.supportsArrayBuffer() && (t instanceof Uint8Array || (d = t, t = this.binaryStringToUint8Array(t))), !(p = this["process" + e.toUpperCase()](t, (y = 0, (m = b) && (y = Object.keys ? Object.keys(m).length : function (t) {
          var e = 0;

          for (var n in t) {
            t.hasOwnProperty(n) && e++;
          }

          return e;
        }(m)), y), a, ((g = s) && "string" == typeof g && (g = g.toUpperCase()), g in x.image_compression ? g : x.image_compression.NONE), d))) throw new Error("An unknown error occurred whilst processing the image");
      }

      return function (t, e, n, r, i, o, a, s) {
        var l = function (t, e, n) {
          return t || e || (e = t = -96), t < 0 && (t = -1 * n.w * 72 / t / this.internal.scaleFactor), e < 0 && (e = -1 * n.h * 72 / e / this.internal.scaleFactor), 0 === t && (t = e * n.w / n.h), 0 === e && (e = t * n.h / n.w), [t, e];
        }.call(this, n, r, i),
            h = this.internal.getCoordinateString,
            u = this.internal.getVerticalCoordinateString;

        if (n = l[0], r = l[1], a[o] = i, s) {
          s *= Math.PI / 180;

          var c = Math.cos(s),
              f = Math.sin(s),
              p = function p(t) {
            return t.toFixed(4);
          },
              d = [p(c), p(f), p(-1 * f), p(c), 0, 0, "cm"];
        }

        this.internal.write("q"), s ? (this.internal.write([1, "0", "0", 1, h(t), u(e + r), "cm"].join(" ")), this.internal.write(d.join(" ")), this.internal.write([h(n), "0", "0", h(r), "0", "0", "cm"].join(" "))) : this.internal.write([h(n), "0", "0", h(r), h(t), u(e + r), "cm"].join(" ")), this.internal.write("/I" + i.i + " Do"), this.internal.write("Q");
      }.call(this, n, r, i, o, p, p.i, b, l), this;
    }, x.convertStringToImageData = function (t) {
      var e,
          n = "";

      if (this.isString(t)) {
        var r;
        e = null !== (r = this.extractImageFromDataUrl(t)) ? r.data : t;

        try {
          n = atob(e);
        } catch (t) {
          throw x.validateStringAsBase64(e) ? new Error("atob-Error in jsPDF.convertStringToImageData " + t.message) : new Error("Supplied Data is not a valid base64-String jsPDF.convertStringToImageData ");
        }
      }

      return n;
    };

    var u = function u(t, e) {
      return t.subarray(e, e + 5);
    };

    x.processJPEG = function (t, e, n, r, i, o) {
      var a,
          s = this.decode.DCT_DECODE;
      if (!this.isString(t) && !this.isArrayBuffer(t) && !this.isArrayBufferView(t)) return null;
      if (this.isString(t) && (a = function (t) {
        var e;
        if ("JPEG" !== h(t)) throw new Error("getJpegSize requires a binary string jpeg file");

        for (var n = 256 * t.charCodeAt(4) + t.charCodeAt(5), r = 4, i = t.length; r < i;) {
          if (r += n, 255 !== t.charCodeAt(r)) throw new Error("getJpegSize could not find the size of the image");
          if (192 === t.charCodeAt(r + 1) || 193 === t.charCodeAt(r + 1) || 194 === t.charCodeAt(r + 1) || 195 === t.charCodeAt(r + 1) || 196 === t.charCodeAt(r + 1) || 197 === t.charCodeAt(r + 1) || 198 === t.charCodeAt(r + 1) || 199 === t.charCodeAt(r + 1)) return e = 256 * t.charCodeAt(r + 5) + t.charCodeAt(r + 6), [256 * t.charCodeAt(r + 7) + t.charCodeAt(r + 8), e, t.charCodeAt(r + 9)];
          r += 2, n = 256 * t.charCodeAt(r) + t.charCodeAt(r + 1);
        }
      }(t)), this.isArrayBuffer(t) && (t = new Uint8Array(t)), this.isArrayBufferView(t) && (a = function (t) {
        if (65496 != (t[0] << 8 | t[1])) throw new Error("Supplied data is not a JPEG");

        for (var e, n = t.length, r = (t[4] << 8) + t[5], i = 4; i < n;) {
          if (r = ((e = u(t, i += r))[2] << 8) + e[3], (192 === e[1] || 194 === e[1]) && 255 === e[0] && 7 < r) return {
            width: ((e = u(t, i + 5))[2] << 8) + e[3],
            height: (e[0] << 8) + e[1],
            numcomponents: e[4]
          };
          i += 2;
        }

        throw new Error("getJpegSizeFromBytes could not find the size of the image");
      }(t), t = i || this.arrayBufferToBinaryString(t)), void 0 === o) switch (a.numcomponents) {
        case 1:
          o = this.color_spaces.DEVICE_GRAY;
          break;

        case 4:
          o = this.color_spaces.DEVICE_CMYK;
          break;

        default:
        case 3:
          o = this.color_spaces.DEVICE_RGB;
      }
      return this.createImageInfo(t, a.width, a.height, o, 8, s, e, n);
    }, x.processJPG = function () {
      return this.processJPEG.apply(this, arguments);
    }, x.getImageProperties = function (t) {
      var e,
          n,
          r = "";
      if (_(t) && (t = F(t)), this.isString(t) && ("" !== (r = this.convertStringToImageData(t)) ? t = r : void 0 !== (r = x.loadFile(t)) && (t = r)), n = this.getImageFileTypeByImageData(t), !S(n)) throw new Error("addImage does not support files of type '" + n + "', please ensure that a plugin for '" + n + "' support is added.");
      if (this.supportsArrayBuffer() && (t instanceof Uint8Array || (t = this.binaryStringToUint8Array(t))), !(e = this["process" + n.toUpperCase()](t))) throw new Error("An unknown error occurred whilst processing the image");
      return {
        fileType: n,
        width: e.w,
        height: e.h,
        colorSpace: e.cs,
        compressionMode: e.f,
        bitsPerComponent: e.bpc
      };
    };
  }(lt.API),
  /**
     * @license
     * Copyright (c) 2014 Steven Spungin (TwelveTone LLC)  steven@twelvetone.tv
     *
     * Licensed under the MIT License.
     * http://opensource.org/licenses/mit-license
     */
  t = lt.API, lt.API.events.push(["addPage", function (t) {
    this.internal.getPageInfo(t.pageNumber).pageContext.annotations = [];
  }]), t.events.push(["putPage", function (t) {
    for (var e = this.internal.getPageInfoByObjId(t.objId), n = t.pageContext.annotations, r = function r(t) {
      if (void 0 !== t && "" != t) return !0;
    }, i = !1, o = 0; o < n.length && !i; o++) {
      switch ((l = n[o]).type) {
        case "link":
          if (r(l.options.url) || r(l.options.pageNumber)) {
            i = !0;
            break;
          }

        case "reference":
        case "text":
        case "freetext":
          i = !0;
      }
    }

    if (0 != i) {
      this.internal.write("/Annots ["), this.internal.pageSize.height;
      var a = this.internal.getCoordinateString,
          s = this.internal.getVerticalCoordinateString;

      for (o = 0; o < n.length; o++) {
        var l;

        switch ((l = n[o]).type) {
          case "reference":
            this.internal.write(" " + l.object.objId + " 0 R ");
            break;

          case "text":
            var h = this.internal.newAdditionalObject(),
                u = this.internal.newAdditionalObject(),
                c = l.title || "Note";
            m = "<</Type /Annot /Subtype /Text " + (p = "/Rect [" + a(l.bounds.x) + " " + s(l.bounds.y + l.bounds.h) + " " + a(l.bounds.x + l.bounds.w) + " " + s(l.bounds.y) + "] ") + "/Contents (" + l.contents + ")", m += " /Popup " + u.objId + " 0 R", m += " /P " + e.objId + " 0 R", m += " /T (" + c + ") >>", h.content = m;
            var f = h.objId + " 0 R";
            m = "<</Type /Annot /Subtype /Popup " + (p = "/Rect [" + a(l.bounds.x + 30) + " " + s(l.bounds.y + l.bounds.h) + " " + a(l.bounds.x + l.bounds.w + 30) + " " + s(l.bounds.y) + "] ") + " /Parent " + f, l.open && (m += " /Open true"), m += " >>", u.content = m, this.internal.write(h.objId, "0 R", u.objId, "0 R");
            break;

          case "freetext":
            var p = "/Rect [" + a(l.bounds.x) + " " + s(l.bounds.y) + " " + a(l.bounds.x + l.bounds.w) + " " + s(l.bounds.y + l.bounds.h) + "] ",
                d = l.color || "#000000";
            m = "<</Type /Annot /Subtype /FreeText " + p + "/Contents (" + l.contents + ")", m += " /DS(font: Helvetica,sans-serif 12.0pt; text-align:left; color:#" + d + ")", m += " /Border [0 0 0]", m += " >>", this.internal.write(m);
            break;

          case "link":
            if (l.options.name) {
              var g = this.annotations._nameMap[l.options.name];
              l.options.pageNumber = g.page, l.options.top = g.y;
            } else l.options.top || (l.options.top = 0);

            p = "/Rect [" + a(l.x) + " " + s(l.y) + " " + a(l.x + l.w) + " " + s(l.y + l.h) + "] ";
            var m = "";
            if (l.options.url) m = "<</Type /Annot /Subtype /Link " + p + "/Border [0 0 0] /A <</S /URI /URI (" + l.options.url + ") >>";else if (l.options.pageNumber) switch (m = "<</Type /Annot /Subtype /Link " + p + "/Border [0 0 0] /Dest [" + this.internal.getPageInfo(l.options.pageNumber).objId + " 0 R", l.options.magFactor = l.options.magFactor || "XYZ", l.options.magFactor) {
              case "Fit":
                m += " /Fit]";
                break;

              case "FitH":
                m += " /FitH " + l.options.top + "]";
                break;

              case "FitV":
                l.options.left = l.options.left || 0, m += " /FitV " + l.options.left + "]";
                break;

              case "XYZ":
              default:
                var y = s(l.options.top);
                l.options.left = l.options.left || 0, void 0 === l.options.zoom && (l.options.zoom = 0), m += " /XYZ " + l.options.left + " " + y + " " + l.options.zoom + "]";
            }
            "" != m && (m += " >>", this.internal.write(m));
        }
      }

      this.internal.write("]");
    }
  }]), t.createAnnotation = function (t) {
    var e = this.internal.getCurrentPageInfo();

    switch (t.type) {
      case "link":
        this.link(t.bounds.x, t.bounds.y, t.bounds.w, t.bounds.h, t);
        break;

      case "text":
      case "freetext":
        e.pageContext.annotations.push(t);
    }
  }, t.link = function (t, e, n, r, i) {
    this.internal.getCurrentPageInfo().pageContext.annotations.push({
      x: t,
      y: e,
      w: n,
      h: r,
      options: i,
      type: "link"
    });
  }, t.textWithLink = function (t, e, n, r) {
    var i = this.getTextWidth(t),
        o = this.internal.getLineHeight() / this.internal.scaleFactor;
    return this.text(t, e, n), n += .2 * o, this.link(e, n - o, i, o, r), i;
  }, t.getTextWidth = function (t) {
    var e = this.internal.getFontSize();
    return this.getStringUnitWidth(t) * e / this.internal.scaleFactor;
  },
  /**
     * @license
     * Copyright (c) 2017 Aras Abbasi 
     *
     * Licensed under the MIT License.
     * http://opensource.org/licenses/mit-license
     */
  function (t) {
    var h = {
      1569: [65152],
      1570: [65153, 65154],
      1571: [65155, 65156],
      1572: [65157, 65158],
      1573: [65159, 65160],
      1574: [65161, 65162, 65163, 65164],
      1575: [65165, 65166],
      1576: [65167, 65168, 65169, 65170],
      1577: [65171, 65172],
      1578: [65173, 65174, 65175, 65176],
      1579: [65177, 65178, 65179, 65180],
      1580: [65181, 65182, 65183, 65184],
      1581: [65185, 65186, 65187, 65188],
      1582: [65189, 65190, 65191, 65192],
      1583: [65193, 65194],
      1584: [65195, 65196],
      1585: [65197, 65198],
      1586: [65199, 65200],
      1587: [65201, 65202, 65203, 65204],
      1588: [65205, 65206, 65207, 65208],
      1589: [65209, 65210, 65211, 65212],
      1590: [65213, 65214, 65215, 65216],
      1591: [65217, 65218, 65219, 65220],
      1592: [65221, 65222, 65223, 65224],
      1593: [65225, 65226, 65227, 65228],
      1594: [65229, 65230, 65231, 65232],
      1601: [65233, 65234, 65235, 65236],
      1602: [65237, 65238, 65239, 65240],
      1603: [65241, 65242, 65243, 65244],
      1604: [65245, 65246, 65247, 65248],
      1605: [65249, 65250, 65251, 65252],
      1606: [65253, 65254, 65255, 65256],
      1607: [65257, 65258, 65259, 65260],
      1608: [65261, 65262],
      1609: [65263, 65264, 64488, 64489],
      1610: [65265, 65266, 65267, 65268],
      1649: [64336, 64337],
      1655: [64477],
      1657: [64358, 64359, 64360, 64361],
      1658: [64350, 64351, 64352, 64353],
      1659: [64338, 64339, 64340, 64341],
      1662: [64342, 64343, 64344, 64345],
      1663: [64354, 64355, 64356, 64357],
      1664: [64346, 64347, 64348, 64349],
      1667: [64374, 64375, 64376, 64377],
      1668: [64370, 64371, 64372, 64373],
      1670: [64378, 64379, 64380, 64381],
      1671: [64382, 64383, 64384, 64385],
      1672: [64392, 64393],
      1676: [64388, 64389],
      1677: [64386, 64387],
      1678: [64390, 64391],
      1681: [64396, 64397],
      1688: [64394, 64395],
      1700: [64362, 64363, 64364, 64365],
      1702: [64366, 64367, 64368, 64369],
      1705: [64398, 64399, 64400, 64401],
      1709: [64467, 64468, 64469, 64470],
      1711: [64402, 64403, 64404, 64405],
      1713: [64410, 64411, 64412, 64413],
      1715: [64406, 64407, 64408, 64409],
      1722: [64414, 64415],
      1723: [64416, 64417, 64418, 64419],
      1726: [64426, 64427, 64428, 64429],
      1728: [64420, 64421],
      1729: [64422, 64423, 64424, 64425],
      1733: [64480, 64481],
      1734: [64473, 64474],
      1735: [64471, 64472],
      1736: [64475, 64476],
      1737: [64482, 64483],
      1739: [64478, 64479],
      1740: [64508, 64509, 64510, 64511],
      1744: [64484, 64485, 64486, 64487],
      1746: [64430, 64431],
      1747: [64432, 64433]
    },
        a = {
      65247: {
        65154: 65269,
        65156: 65271,
        65160: 65273,
        65166: 65275
      },
      65248: {
        65154: 65270,
        65156: 65272,
        65160: 65274,
        65166: 65276
      },
      65165: {
        65247: {
          65248: {
            65258: 65010
          }
        }
      },
      1617: {
        1612: 64606,
        1613: 64607,
        1614: 64608,
        1615: 64609,
        1616: 64610
      }
    },
        e = {
      1612: 64606,
      1613: 64607,
      1614: 64608,
      1615: 64609,
      1616: 64610
    },
        n = [1570, 1571, 1573, 1575];
    t.__arabicParser__ = {};

    var r = t.__arabicParser__.isInArabicSubstitutionA = function (t) {
      return void 0 !== h[t.charCodeAt(0)];
    },
        u = t.__arabicParser__.isArabicLetter = function (t) {
      return "string" == typeof t && /^[\u0600-\u06FF\u0750-\u077F\u08A0-\u08FF\uFB50-\uFDFF\uFE70-\uFEFF]+$/.test(t);
    },
        i = t.__arabicParser__.isArabicEndLetter = function (t) {
      return u(t) && r(t) && h[t.charCodeAt(0)].length <= 2;
    },
        o = t.__arabicParser__.isArabicAlfLetter = function (t) {
      return u(t) && 0 <= n.indexOf(t.charCodeAt(0));
    },
        s = (t.__arabicParser__.arabicLetterHasIsolatedForm = function (t) {
      return u(t) && r(t) && 1 <= h[t.charCodeAt(0)].length;
    }, t.__arabicParser__.arabicLetterHasFinalForm = function (t) {
      return u(t) && r(t) && 2 <= h[t.charCodeAt(0)].length;
    }),
        l = (t.__arabicParser__.arabicLetterHasInitialForm = function (t) {
      return u(t) && r(t) && 3 <= h[t.charCodeAt(0)].length;
    }, t.__arabicParser__.arabicLetterHasMedialForm = function (t) {
      return u(t) && r(t) && 4 == h[t.charCodeAt(0)].length;
    }),
        c = t.__arabicParser__.resolveLigatures = function (t) {
      var e = 0,
          n = a,
          r = 0,
          i = "",
          o = 0;

      for (e = 0; e < t.length; e += 1) {
        void 0 !== n[t.charCodeAt(e)] ? (o++, "number" == typeof (n = n[t.charCodeAt(e)]) && (r = -1 !== (r = f(t.charAt(e), t.charAt(e - o), t.charAt(e + 1))) ? r : 0, i += String.fromCharCode(n), n = a, o = 0), e === t.length - 1 && (n = a, i += t.charAt(e - (o - 1)), e -= o - 1, o = 0)) : (n = a, i += t.charAt(e - o), e -= o, o = 0);
      }

      return i;
    },
        f = (t.__arabicParser__.isArabicDiacritic = function (t) {
      return void 0 !== t && void 0 !== e[t.charCodeAt(0)];
    }, t.__arabicParser__.getCorrectForm = function (t, e, n) {
      return u(t) ? !1 === r(t) ? -1 : !s(t) || !u(e) && !u(n) || !u(n) && i(e) || i(t) && !u(e) || i(t) && o(e) || i(t) && i(e) ? 0 : l(t) && u(e) && !i(e) && u(n) && s(n) ? 3 : i(t) || !u(n) ? 1 : 2 : -1;
    }),
        p = t.__arabicParser__.processArabic = t.processArabic = function (t) {
      var e = 0,
          n = 0,
          r = 0,
          i = "",
          o = "",
          a = "",
          s = (t = t || "").split("\\s+"),
          l = [];

      for (e = 0; e < s.length; e += 1) {
        for (l.push(""), n = 0; n < s[e].length; n += 1) {
          i = s[e][n], o = s[e][n - 1], a = s[e][n + 1], u(i) ? (r = f(i, o, a), l[e] += -1 !== r ? String.fromCharCode(h[i.charCodeAt(0)][r]) : i) : l[e] += i;
        }

        l[e] = c(l[e]);
      }

      return l.join(" ");
    };

    t.events.push(["preProcessText", function (t) {
      var e = t.text,
          n = (t.x, t.y, t.options || {}),
          r = (t.mutex, n.lang, []);

      if ("[object Array]" === Object.prototype.toString.call(e)) {
        var i = 0;

        for (r = [], i = 0; i < e.length; i += 1) {
          "[object Array]" === Object.prototype.toString.call(e[i]) ? r.push([p(e[i][0]), e[i][1], e[i][2]]) : r.push([p(e[i])]);
        }

        t.text = r;
      } else t.text = p(e);
    }]);
  }(lt.API), lt.API.autoPrint = function (t) {
    var e;

    switch ((t = t || {}).variant = t.variant || "non-conform", t.variant) {
      case "javascript":
        this.addJS("print({});");
        break;

      case "non-conform":
      default:
        this.internal.events.subscribe("postPutResources", function () {
          e = this.internal.newObject(), this.internal.out("<<"), this.internal.out("/S /Named"), this.internal.out("/Type /Action"), this.internal.out("/N /Print"), this.internal.out(">>"), this.internal.out("endobj");
        }), this.internal.events.subscribe("putCatalog", function () {
          this.internal.out("/OpenAction " + e + " 0 R");
        });
    }

    return this;
  },
  /**
     * @license
     * Copyright (c) 2014 Steven Spungin (TwelveTone LLC)  steven@twelvetone.tv
     *
     * Licensed under the MIT License.
     * http://opensource.org/licenses/mit-license
     */
  e = lt.API, (n = function n() {
    var e = void 0;
    Object.defineProperty(this, "pdf", {
      get: function get() {
        return e;
      },
      set: function set(t) {
        e = t;
      }
    });
    var n = 150;
    Object.defineProperty(this, "width", {
      get: function get() {
        return n;
      },
      set: function set(t) {
        n = isNaN(t) || !1 === Number.isInteger(t) || t < 0 ? 150 : t, this.getContext("2d").pageWrapXEnabled && (this.getContext("2d").pageWrapX = n + 1);
      }
    });
    var r = 300;
    Object.defineProperty(this, "height", {
      get: function get() {
        return r;
      },
      set: function set(t) {
        r = isNaN(t) || !1 === Number.isInteger(t) || t < 0 ? 300 : t, this.getContext("2d").pageWrapYEnabled && (this.getContext("2d").pageWrapY = r + 1);
      }
    });
    var i = [];
    Object.defineProperty(this, "childNodes", {
      get: function get() {
        return i;
      },
      set: function set(t) {
        i = t;
      }
    });
    var o = {};
    Object.defineProperty(this, "style", {
      get: function get() {
        return o;
      },
      set: function set(t) {
        o = t;
      }
    }), Object.defineProperty(this, "parentNode", {
      get: function get() {
        return !1;
      }
    });
  }).prototype.getContext = function (t, e) {
    var n;
    if ("2d" !== (t = t || "2d")) return null;

    for (n in e) {
      this.pdf.context2d.hasOwnProperty(n) && (this.pdf.context2d[n] = e[n]);
    }

    return (this.pdf.context2d._canvas = this).pdf.context2d;
  }, n.prototype.toDataURL = function () {
    throw new Error("toDataURL is not implemented.");
  }, e.events.push(["initialized", function () {
    this.canvas = new n(), this.canvas.pdf = this;
  }]),
  /** 
     * @license
     * ====================================================================
     * Copyright (c) 2013 Youssef Beddad, youssef.beddad@gmail.com
     *               2013 Eduardo Menezes de Morais, eduardo.morais@usp.br
     *               2013 Lee Driscoll, https://github.com/lsdriscoll
     *               2014 Juan Pablo Gaviria, https://github.com/juanpgaviria
     *               2014 James Hall, james@parall.ax
     *               2014 Diego Casorran, https://github.com/diegocr
     *
     * 
     * ====================================================================
     */
  _ = lt.API, F = {
    x: void 0,
    y: void 0,
    w: void 0,
    h: void 0,
    ln: void 0
  }, P = 1, p = function p(t, e, n, r, i) {
    F = {
      x: t,
      y: e,
      w: n,
      h: r,
      ln: i
    };
  }, d = function d() {
    return F;
  }, k = {
    left: 0,
    top: 0,
    bottom: 0
  }, _.setHeaderFunction = function (t) {
    l = t;
  }, _.getTextDimensions = function (t, e) {
    var n = this.table_font_size || this.internal.getFontSize(),
        r = (this.internal.getFont().fontStyle, (e = e || {}).scaleFactor || this.internal.scaleFactor),
        i = 0,
        o = 0,
        a = 0;
    if ("string" == typeof t) 0 != (i = this.getStringUnitWidth(t) * n) && (o = 1);else {
      if ("[object Array]" !== Object.prototype.toString.call(t)) throw new Error("getTextDimensions expects text-parameter to be of type String or an Array of Strings.");

      for (var s = 0; s < t.length; s++) {
        i < (a = this.getStringUnitWidth(t[s]) * n) && (i = a);
      }

      0 !== i && (o = t.length);
    }
    return {
      w: i /= r,
      h: Math.max((o * n * this.getLineHeightFactor() - n * (this.getLineHeightFactor() - 1)) / r, 0)
    };
  }, _.cellAddPage = function () {
    var t = this.margins || k;
    this.addPage(), p(t.left, t.top, void 0, void 0), P += 1;
  }, _.cellInitialize = function () {
    F = {
      x: void 0,
      y: void 0,
      w: void 0,
      h: void 0,
      ln: void 0
    }, P = 1;
  }, _.cell = function (t, e, n, r, i, o, a) {
    var s = d(),
        l = !1;
    if (void 0 !== s.ln) if (s.ln === o) t = s.x + s.w, e = s.y;else {
      var h = this.margins || k;
      s.y + s.h + r + 13 >= this.internal.pageSize.getHeight() - h.bottom && (this.cellAddPage(), l = !0, this.printHeaders && this.tableHeaderRow && this.printHeaderRow(o, !0)), e = d().y + d().h, l && (e = 23);
    }
    if (void 0 !== i[0]) if (this.printingHeaderRow ? this.rect(t, e, n, r, "FD") : this.rect(t, e, n, r), "right" === a) {
      i instanceof Array || (i = [i]);

      for (var u = 0; u < i.length; u++) {
        var c = i[u],
            f = this.getStringUnitWidth(c) * this.internal.getFontSize() / this.internal.scaleFactor;
        this.text(c, t + n - f - 3, e + this.internal.getLineHeight() * (u + 1));
      }
    } else this.text(i, t + 3, e + this.internal.getLineHeight());
    return p(t, e, n, r, o), this;
  }, _.arrayMax = function (t, e) {
    var n,
        r,
        i,
        o = t[0];

    for (n = 0, r = t.length; n < r; n += 1) {
      i = t[n], e ? -1 === e(o, i) && (o = i) : o < i && (o = i);
    }

    return o;
  }, _.table = function (t, e, n, r, i) {
    if (!n) throw "No data for PDF table";
    var o,
        a,
        s,
        l,
        h,
        u,
        c,
        f,
        p,
        d,
        g = [],
        m = [],
        y = {},
        v = {},
        w = [],
        b = [],
        x = !1,
        N = !0,
        L = 12,
        A = k;
    if (A.width = this.internal.pageSize.getWidth(), i && (!0 === i.autoSize && (x = !0), !1 === i.printHeaders && (N = !1), i.fontSize && (L = i.fontSize), i.css && void 0 !== i.css["font-size"] && (L = 16 * i.css["font-size"]), i.margins && (A = i.margins)), this.lnMod = 0, F = {
      x: void 0,
      y: void 0,
      w: void 0,
      h: void 0,
      ln: void 0
    }, P = 1, this.printHeaders = N, this.margins = A, this.setFontSize(L), this.table_font_size = L, null == r) g = Object.keys(n[0]);else if (r[0] && "string" != typeof r[0]) for (a = 0, s = r.length; a < s; a += 1) {
      o = r[a], g.push(o.name), m.push(o.prompt), v[o.name] = o.width * (19.049976 / 25.4);
    } else g = r;
    if (x) for (d = function d(t) {
      return t[o];
    }, a = 0, s = g.length; a < s; a += 1) {
      for (y[o = g[a]] = n.map(d), w.push(this.getTextDimensions(m[a] || o, {
        scaleFactor: 1
      }).w), c = 0, l = (u = y[o]).length; c < l; c += 1) {
        h = u[c], w.push(this.getTextDimensions(h, {
          scaleFactor: 1
        }).w);
      }

      v[o] = _.arrayMax(w), w = [];
    }

    if (N) {
      var S = this.calculateLineHeight(g, v, m.length ? m : g);

      for (a = 0, s = g.length; a < s; a += 1) {
        o = g[a], b.push([t, e, v[o], S, String(m.length ? m[a] : o)]);
      }

      this.setTableHeaderRow(b), this.printHeaderRow(1, !1);
    }

    for (a = 0, s = n.length; a < s; a += 1) {
      for (f = n[a], S = this.calculateLineHeight(g, v, f), c = 0, p = g.length; c < p; c += 1) {
        o = g[c], this.cell(t, e, v[o], S, f[o], a + 2, o.align);
      }
    }

    return this.lastCellPos = F, this.table_x = t, this.table_y = e, this;
  }, _.calculateLineHeight = function (t, e, n) {
    for (var r, i = 0, o = 0; o < t.length; o++) {
      n[r = t[o]] = this.splitTextToSize(String(n[r]), e[r] - 3);
      var a = this.internal.getLineHeight() * n[r].length + 3;
      i < a && (i = a);
    }

    return i;
  }, _.setTableHeaderRow = function (t) {
    this.tableHeaderRow = t;
  }, _.printHeaderRow = function (t, e) {
    if (!this.tableHeaderRow) throw "Property tableHeaderRow does not exist.";
    var n, r, i, o;

    if (this.printingHeaderRow = !0, void 0 !== l) {
      var a = l(this, P);
      p(a[0], a[1], a[2], a[3], -1);
    }

    this.setFontStyle("bold");
    var s = [];

    for (i = 0, o = this.tableHeaderRow.length; i < o; i += 1) {
      this.setFillColor(200, 200, 200), n = this.tableHeaderRow[i], e && (this.margins.top = 13, n[1] = this.margins && this.margins.top || 0, s.push(n)), r = [].concat(n), this.cell.apply(this, r.concat(t));
    }

    0 < s.length && this.setTableHeaderRow(s), this.setFontStyle("normal"), this.printingHeaderRow = !1;
  },
  /**
     * jsPDF Context2D PlugIn Copyright (c) 2014 Steven Spungin (TwelveTone LLC) steven@twelvetone.tv
     *
     * Licensed under the MIT License. http://opensource.org/licenses/mit-license
     */
  function (t, e) {
    var l,
        i,
        o,
        h,
        u,
        c = function c(t) {
      return t = t || {}, this.isStrokeTransparent = t.isStrokeTransparent || !1, this.strokeOpacity = t.strokeOpacity || 1, this.strokeStyle = t.strokeStyle || "#000000", this.fillStyle = t.fillStyle || "#000000", this.isFillTransparent = t.isFillTransparent || !1, this.fillOpacity = t.fillOpacity || 1, this.font = t.font || "10px sans-serif", this.textBaseline = t.textBaseline || "alphabetic", this.textAlign = t.textAlign || "left", this.lineWidth = t.lineWidth || 1, this.lineJoin = t.lineJoin || "miter", this.lineCap = t.lineCap || "butt", this.path = t.path || [], this.transform = void 0 !== t.transform ? t.transform.clone() : new M(), this.globalCompositeOperation = t.globalCompositeOperation || "normal", this.globalAlpha = t.globalAlpha || 1, this.clip_path = t.clip_path || [], this.currentPoint = t.currentPoint || new j(), this.miterLimit = t.miterLimit || 10, this.lastPoint = t.lastPoint || new j(), this.ignoreClearRect = "boolean" != typeof t.ignoreClearRect || t.ignoreClearRect, this;
    };

    t.events.push(["initialized", function () {
      this.context2d = new n(this), l = this.internal.f2, this.internal.f3, i = this.internal.getCoordinateString, o = this.internal.getVerticalCoordinateString, h = this.internal.getHorizontalCoordinate, u = this.internal.getVerticalCoordinate;
    }]);

    var n = function n(t) {
      Object.defineProperty(this, "canvas", {
        get: function get() {
          return {
            parentNode: !1,
            style: !1
          };
        }
      }), Object.defineProperty(this, "pdf", {
        get: function get() {
          return t;
        }
      });
      var e = !1;
      Object.defineProperty(this, "pageWrapXEnabled", {
        get: function get() {
          return e;
        },
        set: function set(t) {
          e = Boolean(t);
        }
      });
      var n = !1;
      Object.defineProperty(this, "pageWrapYEnabled", {
        get: function get() {
          return n;
        },
        set: function set(t) {
          n = Boolean(t);
        }
      });
      var r = 0;
      Object.defineProperty(this, "posX", {
        get: function get() {
          return r;
        },
        set: function set(t) {
          isNaN(t) || (r = t);
        }
      });
      var i = 0;
      Object.defineProperty(this, "posY", {
        get: function get() {
          return i;
        },
        set: function set(t) {
          isNaN(t) || (i = t);
        }
      });
      var o = !1;
      Object.defineProperty(this, "autoPaging", {
        get: function get() {
          return o;
        },
        set: function set(t) {
          o = Boolean(t);
        }
      });
      var a = 0;
      Object.defineProperty(this, "lastBreak", {
        get: function get() {
          return a;
        },
        set: function set(t) {
          a = t;
        }
      });
      var s = [];
      Object.defineProperty(this, "pageBreaks", {
        get: function get() {
          return s;
        },
        set: function set(t) {
          s = t;
        }
      });
      var l = new c();
      Object.defineProperty(this, "ctx", {
        get: function get() {
          return l;
        },
        set: function set(t) {
          t instanceof c && (l = t);
        }
      }), Object.defineProperty(this, "path", {
        get: function get() {
          return l.path;
        },
        set: function set(t) {
          l.path = t;
        }
      });
      var h = [];
      Object.defineProperty(this, "ctxStack", {
        get: function get() {
          return h;
        },
        set: function set(t) {
          h = t;
        }
      }), Object.defineProperty(this, "fillStyle", {
        get: function get() {
          return this.ctx.fillStyle;
        },
        set: function set(t) {
          var e;
          e = f(t), this.ctx.fillStyle = e.style, this.ctx.isFillTransparent = 0 === e.a, this.ctx.fillOpacity = e.a, this.pdf.setFillColor(e.r, e.g, e.b, {
            a: e.a
          }), this.pdf.setTextColor(e.r, e.g, e.b, {
            a: e.a
          });
        }
      }), Object.defineProperty(this, "strokeStyle", {
        get: function get() {
          return this.ctx.strokeStyle;
        },
        set: function set(t) {
          var e = f(t);
          this.ctx.strokeStyle = e.style, this.ctx.isStrokeTransparent = 0 === e.a, this.ctx.strokeOpacity = e.a, 0 === e.a ? this.pdf.setDrawColor(255, 255, 255) : (e.a, this.pdf.setDrawColor(e.r, e.g, e.b));
        }
      }), Object.defineProperty(this, "lineCap", {
        get: function get() {
          return this.ctx.lineCap;
        },
        set: function set(t) {
          -1 !== ["butt", "round", "square"].indexOf(t) && (this.ctx.lineCap = t, this.pdf.setLineCap(t));
        }
      }), Object.defineProperty(this, "lineWidth", {
        get: function get() {
          return this.ctx.lineWidth;
        },
        set: function set(t) {
          isNaN(t) || (this.ctx.lineWidth = t, this.pdf.setLineWidth(t));
        }
      }), Object.defineProperty(this, "lineJoin", {
        get: function get() {
          return this.ctx.lineJoin;
        },
        set: function set(t) {
          -1 !== ["bevel", "round", "miter"].indexOf(t) && (this.ctx.lineJoin = t, this.pdf.setLineJoin(t));
        }
      }), Object.defineProperty(this, "miterLimit", {
        get: function get() {
          return this.ctx.miterLimit;
        },
        set: function set(t) {
          isNaN(t) || (this.ctx.miterLimit = t, this.pdf.setMiterLimit(t));
        }
      }), Object.defineProperty(this, "textBaseline", {
        get: function get() {
          return this.ctx.textBaseline;
        },
        set: function set(t) {
          this.ctx.textBaseline = t;
        }
      }), Object.defineProperty(this, "textAlign", {
        get: function get() {
          return this.ctx.textAlign;
        },
        set: function set(t) {
          -1 !== ["right", "end", "center", "left", "start"].indexOf(t) && (this.ctx.textAlign = t);
        }
      }), Object.defineProperty(this, "font", {
        get: function get() {
          return this.ctx.font;
        },
        set: function set(t) {
          var e;

          if (this.ctx.font = t, null !== (e = /^\s*(?=(?:(?:[-a-z]+\s*){0,2}(italic|oblique))?)(?=(?:(?:[-a-z]+\s*){0,2}(small-caps))?)(?=(?:(?:[-a-z]+\s*){0,2}(bold(?:er)?|lighter|[1-9]00))?)(?:(?:normal|\1|\2|\3)\s*){0,3}((?:xx?-)?(?:small|large)|medium|smaller|larger|[.\d]+(?:\%|in|[cem]m|ex|p[ctx]))(?:\s*\/\s*(normal|[.\d]+(?:\%|in|[cem]m|ex|p[ctx])))?\s*([-_,\"\'\sa-z]+?)\s*$/i.exec(t))) {
            var n = e[1],
                r = (e[2], e[3]),
                i = e[4],
                o = e[5],
                a = e[6];
            i = "px" === o ? Math.floor(parseFloat(i)) : "em" === o ? Math.floor(parseFloat(i) * this.pdf.getFontSize()) : Math.floor(parseFloat(i)), this.pdf.setFontSize(i);
            var s = "";
            ("bold" === r || 700 <= parseInt(r, 10) || "bold" === n) && (s = "bold"), "italic" === n && (s += "italic"), 0 === s.length && (s = "normal");

            for (var l = "", h = a.toLowerCase().replace(/"|'/g, "").split(/\s*,\s*/), u = {
              arial: "Helvetica",
              verdana: "Helvetica",
              helvetica: "Helvetica",
              "sans-serif": "Helvetica",
              fixed: "Courier",
              monospace: "Courier",
              terminal: "Courier",
              courier: "Courier",
              times: "Times",
              cursive: "Times",
              fantasy: "Times",
              serif: "Times"
            }, c = 0; c < h.length; c++) {
              if (void 0 !== this.pdf.internal.getFont(h[c], s, {
                noFallback: !0,
                disableWarning: !0
              })) {
                l = h[c];
                break;
              }

              if ("bolditalic" === s && void 0 !== this.pdf.internal.getFont(h[c], "bold", {
                noFallback: !0,
                disableWarning: !0
              })) l = h[c], s = "bold";else if (void 0 !== this.pdf.internal.getFont(h[c], "normal", {
                noFallback: !0,
                disableWarning: !0
              })) {
                l = h[c], s = "normal";
                break;
              }
            }

            if ("" === l) for (c = 0; c < h.length; c++) {
              if (u[h[c]]) {
                l = u[h[c]];
                break;
              }
            }
            l = "" === l ? "Times" : l, this.pdf.setFont(l, s);
          }
        }
      }), Object.defineProperty(this, "globalCompositeOperation", {
        get: function get() {
          return this.ctx.globalCompositeOperation;
        },
        set: function set(t) {
          this.ctx.globalCompositeOperation = t;
        }
      }), Object.defineProperty(this, "globalAlpha", {
        get: function get() {
          return this.ctx.globalAlpha;
        },
        set: function set(t) {
          this.ctx.globalAlpha = t;
        }
      }), Object.defineProperty(this, "ignoreClearRect", {
        get: function get() {
          return this.ctx.ignoreClearRect;
        },
        set: function set(t) {
          this.ctx.ignoreClearRect = Boolean(t);
        }
      });
    };

    n.prototype.fill = function () {
      r.call(this, "fill", !1);
    }, n.prototype.stroke = function () {
      r.call(this, "stroke", !1);
    }, n.prototype.beginPath = function () {
      this.path = [{
        type: "begin"
      }];
    }, n.prototype.moveTo = function (t, e) {
      if (isNaN(t) || isNaN(e)) throw console.error("jsPDF.context2d.moveTo: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.moveTo");
      var n = this.ctx.transform.applyToPoint(new j(t, e));
      this.path.push({
        type: "mt",
        x: n.x,
        y: n.y
      }), this.ctx.lastPoint = new j(t, e);
    }, n.prototype.closePath = function () {
      var t = new j(0, 0),
          e = 0;

      for (e = this.path.length - 1; -1 !== e; e--) {
        if ("begin" === this.path[e].type && "object" === se(this.path[e + 1]) && "number" == typeof this.path[e + 1].x) {
          t = new j(this.path[e + 1].x, this.path[e + 1].y), this.path.push({
            type: "lt",
            x: t.x,
            y: t.y
          });
          break;
        }
      }

      "object" === se(this.path[e + 2]) && "number" == typeof this.path[e + 2].x && this.path.push(JSON.parse(JSON.stringify(this.path[e + 2]))), this.path.push({
        type: "close"
      }), this.ctx.lastPoint = new j(t.x, t.y);
    }, n.prototype.lineTo = function (t, e) {
      if (isNaN(t) || isNaN(e)) throw console.error("jsPDF.context2d.lineTo: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.lineTo");
      var n = this.ctx.transform.applyToPoint(new j(t, e));
      this.path.push({
        type: "lt",
        x: n.x,
        y: n.y
      }), this.ctx.lastPoint = new j(n.x, n.y);
    }, n.prototype.clip = function () {
      this.ctx.clip_path = JSON.parse(JSON.stringify(this.path)), r.call(this, null, !0);
    }, n.prototype.quadraticCurveTo = function (t, e, n, r) {
      if (isNaN(n) || isNaN(r) || isNaN(t) || isNaN(e)) throw console.error("jsPDF.context2d.quadraticCurveTo: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.quadraticCurveTo");
      var i = this.ctx.transform.applyToPoint(new j(n, r)),
          o = this.ctx.transform.applyToPoint(new j(t, e));
      this.path.push({
        type: "qct",
        x1: o.x,
        y1: o.y,
        x: i.x,
        y: i.y
      }), this.ctx.lastPoint = new j(i.x, i.y);
    }, n.prototype.bezierCurveTo = function (t, e, n, r, i, o) {
      if (isNaN(i) || isNaN(o) || isNaN(t) || isNaN(e) || isNaN(n) || isNaN(r)) throw console.error("jsPDF.context2d.bezierCurveTo: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.bezierCurveTo");
      var a = this.ctx.transform.applyToPoint(new j(i, o)),
          s = this.ctx.transform.applyToPoint(new j(t, e)),
          l = this.ctx.transform.applyToPoint(new j(n, r));
      this.path.push({
        type: "bct",
        x1: s.x,
        y1: s.y,
        x2: l.x,
        y2: l.y,
        x: a.x,
        y: a.y
      }), this.ctx.lastPoint = new j(a.x, a.y);
    }, n.prototype.arc = function (t, e, n, r, i, o) {
      if (isNaN(t) || isNaN(e) || isNaN(n) || isNaN(r) || isNaN(i)) throw console.error("jsPDF.context2d.arc: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.arc");

      if (o = Boolean(o), !this.ctx.transform.isIdentity) {
        var a = this.ctx.transform.applyToPoint(new j(t, e));
        t = a.x, e = a.y;
        var s = this.ctx.transform.applyToPoint(new j(0, n)),
            l = this.ctx.transform.applyToPoint(new j(0, 0));
        n = Math.sqrt(Math.pow(s.x - l.x, 2) + Math.pow(s.y - l.y, 2));
      }

      Math.abs(i - r) >= 2 * Math.PI && (r = 0, i = 2 * Math.PI), this.path.push({
        type: "arc",
        x: t,
        y: e,
        radius: n,
        startAngle: r,
        endAngle: i,
        counterclockwise: o
      });
    }, n.prototype.arcTo = function (t, e, n, r, i) {
      throw new Error("arcTo not implemented.");
    }, n.prototype.rect = function (t, e, n, r) {
      if (isNaN(t) || isNaN(e) || isNaN(n) || isNaN(r)) throw console.error("jsPDF.context2d.rect: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.rect");
      this.moveTo(t, e), this.lineTo(t + n, e), this.lineTo(t + n, e + r), this.lineTo(t, e + r), this.lineTo(t, e), this.lineTo(t + n, e), this.lineTo(t, e);
    }, n.prototype.fillRect = function (t, e, n, r) {
      if (isNaN(t) || isNaN(e) || isNaN(n) || isNaN(r)) throw console.error("jsPDF.context2d.fillRect: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.fillRect");

      if (!N.call(this)) {
        var i = {};
        "butt" !== this.lineCap && (i.lineCap = this.lineCap, this.lineCap = "butt"), "miter" !== this.lineJoin && (i.lineJoin = this.lineJoin, this.lineJoin = "miter"), this.beginPath(), this.rect(t, e, n, r), this.fill(), i.hasOwnProperty("lineCap") && (this.lineCap = i.lineCap), i.hasOwnProperty("lineJoin") && (this.lineJoin = i.lineJoin);
      }
    }, n.prototype.strokeRect = function (t, e, n, r) {
      if (isNaN(t) || isNaN(e) || isNaN(n) || isNaN(r)) throw console.error("jsPDF.context2d.strokeRect: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.strokeRect");
      L.call(this) || (this.beginPath(), this.rect(t, e, n, r), this.stroke());
    }, n.prototype.clearRect = function (t, e, n, r) {
      if (isNaN(t) || isNaN(e) || isNaN(n) || isNaN(r)) throw console.error("jsPDF.context2d.clearRect: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.clearRect");
      this.ignoreClearRect || (this.fillStyle = "#ffffff", this.fillRect(t, e, n, r));
    }, n.prototype.save = function (t) {
      t = "boolean" != typeof t || t;

      for (var e = this.pdf.internal.getCurrentPageInfo().pageNumber, n = 0; n < this.pdf.internal.getNumberOfPages(); n++) {
        this.pdf.setPage(n + 1), this.pdf.internal.out("q");
      }

      if (this.pdf.setPage(e), t) {
        this.ctx.fontSize = this.pdf.internal.getFontSize();
        var r = new c(this.ctx);
        this.ctxStack.push(this.ctx), this.ctx = r;
      }
    }, n.prototype.restore = function (t) {
      t = "boolean" != typeof t || t;

      for (var e = this.pdf.internal.getCurrentPageInfo().pageNumber, n = 0; n < this.pdf.internal.getNumberOfPages(); n++) {
        this.pdf.setPage(n + 1), this.pdf.internal.out("Q");
      }

      this.pdf.setPage(e), t && 0 !== this.ctxStack.length && (this.ctx = this.ctxStack.pop(), this.fillStyle = this.ctx.fillStyle, this.strokeStyle = this.ctx.strokeStyle, this.font = this.ctx.font, this.lineCap = this.ctx.lineCap, this.lineWidth = this.ctx.lineWidth, this.lineJoin = this.ctx.lineJoin);
    }, n.prototype.toDataURL = function () {
      throw new Error("toDataUrl not implemented.");
    };

    var f = function f(t) {
      var e, n, r, i;
      if (!0 === t.isCanvasGradient && (t = t.getColor()), !t) return {
        r: 0,
        g: 0,
        b: 0,
        a: 0,
        style: t
      };
      if (/transparent|rgba\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*0+\s*\)/.test(t)) i = r = n = e = 0;else {
        var o = /rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)/.exec(t);
        if (null !== o) e = parseInt(o[1]), n = parseInt(o[2]), r = parseInt(o[3]), i = 1;else if (null !== (o = /rgba\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*([\d\.]+)\s*\)/.exec(t))) e = parseInt(o[1]), n = parseInt(o[2]), r = parseInt(o[3]), i = parseFloat(o[4]);else {
          if (i = 1, "string" == typeof t && "#" !== t.charAt(0)) {
            var a = new RGBColor(t);
            t = a.ok ? a.toHex() : "#000000";
          }

          4 === t.length ? (e = t.substring(1, 2), e += e, n = t.substring(2, 3), n += n, r = t.substring(3, 4), r += r) : (e = t.substring(1, 3), n = t.substring(3, 5), r = t.substring(5, 7)), e = parseInt(e, 16), n = parseInt(n, 16), r = parseInt(r, 16);
        }
      }
      return {
        r: e,
        g: n,
        b: r,
        a: i,
        style: t
      };
    },
        N = function N() {
      return this.ctx.isFillTransparent || 0 == this.globalAlpha;
    },
        L = function L() {
      return Boolean(this.ctx.isStrokeTransparent || 0 == this.globalAlpha);
    };

    n.prototype.fillText = function (t, e, n, r) {
      if (isNaN(e) || isNaN(n) || "string" != typeof t) throw console.error("jsPDF.context2d.fillText: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.fillText");

      if (r = isNaN(r) ? void 0 : r, !N.call(this)) {
        n = a.call(this, n);
        var i = B(this.ctx.transform.rotation),
            o = this.ctx.transform.scaleX;
        s.call(this, {
          text: t,
          x: e,
          y: n,
          scale: o,
          angle: i,
          align: this.textAlign,
          maxWidth: r
        });
      }
    }, n.prototype.strokeText = function (t, e, n, r) {
      if (isNaN(e) || isNaN(n) || "string" != typeof t) throw console.error("jsPDF.context2d.strokeText: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.strokeText");

      if (!L.call(this)) {
        r = isNaN(r) ? void 0 : r, n = a.call(this, n);
        var i = B(this.ctx.transform.rotation),
            o = this.ctx.transform.scaleX;
        s.call(this, {
          text: t,
          x: e,
          y: n,
          scale: o,
          renderingMode: "stroke",
          angle: i,
          align: this.textAlign,
          maxWidth: r
        });
      }
    }, n.prototype.measureText = function (t) {
      if ("string" != typeof t) throw console.error("jsPDF.context2d.measureText: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.measureText");
      var e = this.pdf,
          n = this.pdf.internal.scaleFactor,
          r = e.internal.getFontSize(),
          i = e.getStringUnitWidth(t) * r / e.internal.scaleFactor;
      return new function (t) {
        var e = (t = t || {}).width || 0;
        return Object.defineProperty(this, "width", {
          get: function get() {
            return e;
          }
        }), this;
      }({
        width: i *= Math.round(96 * n / 72 * 1e4) / 1e4
      });
    }, n.prototype.scale = function (t, e) {
      if (isNaN(t) || isNaN(e)) throw console.error("jsPDF.context2d.scale: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.scale");
      var n = new M(t, 0, 0, e, 0, 0);
      this.ctx.transform = this.ctx.transform.multiply(n);
    }, n.prototype.rotate = function (t) {
      if (isNaN(t)) throw console.error("jsPDF.context2d.rotate: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.rotate");
      var e = new M(Math.cos(t), Math.sin(t), -Math.sin(t), Math.cos(t), 0, 0);
      this.ctx.transform = this.ctx.transform.multiply(e);
    }, n.prototype.translate = function (t, e) {
      if (isNaN(t) || isNaN(e)) throw console.error("jsPDF.context2d.translate: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.translate");
      var n = new M(1, 0, 0, 1, t, e);
      this.ctx.transform = this.ctx.transform.multiply(n);
    }, n.prototype.transform = function (t, e, n, r, i, o) {
      if (isNaN(t) || isNaN(e) || isNaN(n) || isNaN(r) || isNaN(i) || isNaN(o)) throw console.error("jsPDF.context2d.transform: Invalid arguments", arguments), new Error("Invalid arguments passed to jsPDF.context2d.transform");
      var a = new M(t, e, n, r, i, o);
      this.ctx.transform = this.ctx.transform.multiply(a);
    }, n.prototype.setTransform = function (t, e, n, r, i, o) {
      t = isNaN(t) ? 1 : t, e = isNaN(e) ? 0 : e, n = isNaN(n) ? 0 : n, r = isNaN(r) ? 1 : r, i = isNaN(i) ? 0 : i, o = isNaN(o) ? 0 : o, this.ctx.transform = new M(t, e, n, r, i, o);
    }, n.prototype.drawImage = function (t, e, n, r, i, o, a, s, l) {
      var h = this.pdf.getImageProperties(t),
          u = 1,
          c = 1,
          f = 1,
          p = 1;
      void 0 !== r && void 0 !== s && (f = s / r, p = l / i, u = h.width / r * s / r, c = h.height / i * l / i), void 0 === o && (o = e, a = n, n = e = 0), void 0 !== r && void 0 === s && (s = r, l = i), void 0 === r && void 0 === s && (s = h.width, l = h.height);
      var d = this.ctx.transform.decompose(),
          g = B(d.rotate.shx);
      d.scale.sx, d.scale.sy;

      for (var m, y = new M(), v = ((y = (y = (y = y.multiply(d.translate)).multiply(d.skew)).multiply(d.scale)).applyToPoint(new j(s, l)), y.applyToRectangle(new E(o - e * f, a - n * p, r * u, i * c))), w = F.call(this, v), b = [], x = 0; x < w.length; x += 1) {
        -1 === b.indexOf(w[x]) && b.push(w[x]);
      }

      if (b.sort(), this.autoPaging) for (var N = b[0], L = b[b.length - 1], A = N; A < L + 1; A++) {
        if (this.pdf.setPage(A), 0 !== this.ctx.clip_path.length) {
          var S = this.path;
          m = JSON.parse(JSON.stringify(this.ctx.clip_path)), this.path = P(m, this.posX, -1 * this.pdf.internal.pageSize.height * (A - 1) + this.posY), k.call(this, "fill", !0), this.path = S;
        }

        var _ = JSON.parse(JSON.stringify(v));

        _ = P([_], this.posX, -1 * this.pdf.internal.pageSize.height * (A - 1) + this.posY)[0], this.pdf.addImage(t, "jpg", _.x, _.y, _.w, _.h, null, null, g);
      } else this.pdf.addImage(t, "jpg", v.x, v.y, v.w, v.h, null, null, g);
    };

    var F = function F(t, e, n) {
      var r = [];

      switch (e = e || this.pdf.internal.pageSize.width, n = n || this.pdf.internal.pageSize.height, t.type) {
        default:
        case "mt":
        case "lt":
          r.push(Math.floor((t.y + this.posY) / n) + 1);
          break;

        case "arc":
          r.push(Math.floor((t.y + this.posY - t.radius) / n) + 1), r.push(Math.floor((t.y + this.posY + t.radius) / n) + 1);
          break;

        case "qct":
          var i = w(this.ctx.lastPoint.x, this.ctx.lastPoint.y, t.x1, t.y1, t.x, t.y);
          r.push(Math.floor(i.y / n) + 1), r.push(Math.floor((i.y + i.h) / n) + 1);
          break;

        case "bct":
          var o = b(this.ctx.lastPoint.x, this.ctx.lastPoint.y, t.x1, t.y1, t.x2, t.y2, t.x, t.y);
          r.push(Math.floor(o.y / n) + 1), r.push(Math.floor((o.y + o.h) / n) + 1);
          break;

        case "rect":
          r.push(Math.floor((t.y + this.posY) / n) + 1), r.push(Math.floor((t.y + t.h + this.posY) / n) + 1);
      }

      for (var a = 0; a < r.length; a += 1) {
        for (; this.pdf.internal.getNumberOfPages() < r[a];) {
          v.call(this);
        }
      }

      return r;
    },
        v = function v() {
      var t = this.fillStyle,
          e = this.strokeStyle,
          n = this.font,
          r = this.lineCap,
          i = this.lineWidth,
          o = this.lineJoin;
      this.pdf.addPage(), this.fillStyle = t, this.strokeStyle = e, this.font = n, this.lineCap = r, this.lineWidth = i, this.lineJoin = o;
    },
        P = function P(t, e, n) {
      for (var r = 0; r < t.length; r++) {
        switch (t[r].type) {
          case "bct":
            t[r].x2 += e, t[r].y2 += n;

          case "qct":
            t[r].x1 += e, t[r].y1 += n;

          case "mt":
          case "lt":
          case "arc":
          default:
            t[r].x += e, t[r].y += n;
        }
      }

      return t;
    },
        r = function r(t, e) {
      for (var n, r, i = this.fillStyle, o = this.strokeStyle, a = (this.font, this.lineCap), s = this.lineWidth, l = this.lineJoin, h = JSON.parse(JSON.stringify(this.path)), u = JSON.parse(JSON.stringify(this.path)), c = [], f = 0; f < u.length; f++) {
        if (void 0 !== u[f].x) for (var p = F.call(this, u[f]), d = 0; d < p.length; d += 1) {
          -1 === c.indexOf(p[d]) && c.push(p[d]);
        }
      }

      for (f = 0; f < c.length; f++) {
        for (; this.pdf.internal.getNumberOfPages() < c[f];) {
          v.call(this);
        }
      }

      if (c.sort(), this.autoPaging) {
        var g = c[0],
            m = c[c.length - 1];

        for (f = g; f < m + 1; f++) {
          if (this.pdf.setPage(f), this.fillStyle = i, this.strokeStyle = o, this.lineCap = a, this.lineWidth = s, this.lineJoin = l, 0 !== this.ctx.clip_path.length) {
            var y = this.path;
            n = JSON.parse(JSON.stringify(this.ctx.clip_path)), this.path = P(n, this.posX, -1 * this.pdf.internal.pageSize.height * (f - 1) + this.posY), k.call(this, t, !0), this.path = y;
          }

          r = JSON.parse(JSON.stringify(h)), this.path = P(r, this.posX, -1 * this.pdf.internal.pageSize.height * (f - 1) + this.posY), !1 !== e && 0 !== f || k.call(this, t, e);
        }
      } else k.call(this, t, e);

      this.path = h;
    },
        k = function k(t, e) {
      if (("stroke" !== t || e || !L.call(this)) && ("stroke" === t || e || !N.call(this))) {
        var n = [];
        this.ctx.globalAlpha;
        this.ctx.fillOpacity < 1 && this.ctx.fillOpacity;

        for (var r, i = this.path, o = 0; o < i.length; o++) {
          var a = i[o];

          switch (a.type) {
            case "begin":
              n.push({
                begin: !0
              });
              break;

            case "close":
              n.push({
                close: !0
              });
              break;

            case "mt":
              n.push({
                start: a,
                deltas: [],
                abs: []
              });
              break;

            case "lt":
              var s = n.length;

              if (!isNaN(i[o - 1].x)) {
                var l = [a.x - i[o - 1].x, a.y - i[o - 1].y];
                if (0 < s) for (; 0 <= s; s--) {
                  if (!0 !== n[s - 1].close && !0 !== n[s - 1].begin) {
                    n[s - 1].deltas.push(l), n[s - 1].abs.push(a);
                    break;
                  }
                }
              }

              break;

            case "bct":
              l = [a.x1 - i[o - 1].x, a.y1 - i[o - 1].y, a.x2 - i[o - 1].x, a.y2 - i[o - 1].y, a.x - i[o - 1].x, a.y - i[o - 1].y];
              n[n.length - 1].deltas.push(l);
              break;

            case "qct":
              var h = i[o - 1].x + 2 / 3 * (a.x1 - i[o - 1].x),
                  u = i[o - 1].y + 2 / 3 * (a.y1 - i[o - 1].y),
                  c = a.x + 2 / 3 * (a.x1 - a.x),
                  f = a.y + 2 / 3 * (a.y1 - a.y),
                  p = a.x,
                  d = a.y;
              l = [h - i[o - 1].x, u - i[o - 1].y, c - i[o - 1].x, f - i[o - 1].y, p - i[o - 1].x, d - i[o - 1].y];
              n[n.length - 1].deltas.push(l);
              break;

            case "arc":
              n.push({
                deltas: [],
                abs: [],
                arc: !0
              }), Array.isArray(n[n.length - 1].abs) && n[n.length - 1].abs.push(a);
          }
        }

        r = e ? null : "stroke" === t ? "stroke" : "fill";

        for (o = 0; o < n.length; o++) {
          if (n[o].arc) for (var g = n[o].abs, m = 0; m < g.length; m++) {
            var y = g[m];

            if (void 0 !== y.startAngle) {
              var v = B(y.startAngle),
                  w = B(y.endAngle),
                  b = y.x,
                  x = y.y;
              A.call(this, b, x, y.radius, v, w, y.counterclockwise, r, e);
            } else I.call(this, y.x, y.y);
          }

          if (!n[o].arc && !0 !== n[o].close && !0 !== n[o].begin) {
            b = n[o].start.x, x = n[o].start.y;
            C.call(this, n[o].deltas, b, x, null, null);
          }
        }

        r && S.call(this, r), e && _.call(this);
      }
    },
        a = function a(t) {
      var e = this.pdf.internal.getFontSize() / this.pdf.internal.scaleFactor,
          n = e * (this.pdf.internal.getLineHeightFactor() - 1);

      switch (this.ctx.textBaseline) {
        case "bottom":
          return t - n;

        case "top":
          return t + e - n;

        case "hanging":
          return t + e - 2 * n;

        case "middle":
          return t + e / 2 - n;

        case "ideographic":
          return t;

        case "alphabetic":
        default:
          return t;
      }
    };

    n.prototype.createLinearGradient = function () {
      var t = function t() {};

      return t.colorStops = [], t.addColorStop = function (t, e) {
        this.colorStops.push([t, e]);
      }, t.getColor = function () {
        return 0 === this.colorStops.length ? "#000000" : this.colorStops[0][1];
      }, t.isCanvasGradient = !0, t;
    }, n.prototype.createPattern = function () {
      return this.createLinearGradient();
    }, n.prototype.createRadialGradient = function () {
      return this.createLinearGradient();
    };

    var A = function A(t, e, n, r, i, o, a, s) {
      this.pdf.internal.scaleFactor;

      for (var l = y(r), h = y(i), u = g.call(this, n, l, h, o), c = 0; c < u.length; c++) {
        var f = u[c];
        0 === c && p.call(this, f.x1 + t, f.y1 + e), d.call(this, t, e, f.x2, f.y2, f.x3, f.y3, f.x4, f.y4);
      }

      s ? _.call(this) : S.call(this, a);
    },
        S = function S(t) {
      switch (t) {
        case "stroke":
          this.pdf.internal.out("S");
          break;

        case "fill":
          this.pdf.internal.out("f");
      }
    },
        _ = function _() {
      this.pdf.clip();
    },
        p = function p(t, e) {
      this.pdf.internal.out(i(t) + " " + o(e) + " m");
    },
        s = function s(t) {
      var e;

      switch (t.align) {
        case "right":
        case "end":
          e = "right";
          break;

        case "center":
          e = "center";
          break;

        case "left":
        case "start":
        default:
          e = "left";
      }

      var n = this.ctx.transform.applyToPoint(new j(t.x, t.y)),
          r = this.ctx.transform.decompose(),
          i = new M();
      i = (i = (i = i.multiply(r.translate)).multiply(r.skew)).multiply(r.scale);

      for (var o, a = this.pdf.getTextDimensions(t.text), s = this.ctx.transform.applyToRectangle(new E(t.x, t.y, a.w, a.h)), l = i.applyToRectangle(new E(t.x, t.y - a.h, a.w, a.h)), h = F.call(this, l), u = [], c = 0; c < h.length; c += 1) {
        -1 === u.indexOf(h[c]) && u.push(h[c]);
      }

      if (u.sort(), !0 === this.autoPaging) for (var f = u[0], p = u[u.length - 1], d = f; d < p + 1; d++) {
        if (this.pdf.setPage(d), 0 !== this.ctx.clip_path.length) {
          var g = this.path;
          o = JSON.parse(JSON.stringify(this.ctx.clip_path)), this.path = P(o, this.posX, -1 * this.pdf.internal.pageSize.height * (d - 1) + this.posY), k.call(this, "fill", !0), this.path = g;
        }

        var m = JSON.parse(JSON.stringify(s));

        if (m = P([m], this.posX, -1 * this.pdf.internal.pageSize.height * (d - 1) + this.posY)[0], .01 <= t.scale) {
          var y = this.pdf.internal.getFontSize();
          this.pdf.setFontSize(y * t.scale);
        }

        this.pdf.text(t.text, m.x, m.y, {
          angle: t.angle,
          align: e,
          renderingMode: t.renderingMode,
          maxWidth: t.maxWidth
        }), .01 <= t.scale && this.pdf.setFontSize(y);
      } else {
        if (.01 <= t.scale) {
          y = this.pdf.internal.getFontSize();
          this.pdf.setFontSize(y * t.scale);
        }

        this.pdf.text(t.text, n.x + this.posX, n.y + this.posY, {
          angle: t.angle,
          align: e,
          renderingMode: t.renderingMode,
          maxWidth: t.maxWidth
        }), .01 <= t.scale && this.pdf.setFontSize(y);
      }
    },
        I = function I(t, e, n, r) {
      n = n || 0, r = r || 0, this.pdf.internal.out(i(t + n) + " " + o(e + r) + " l");
    },
        C = function C(t, e, n) {
      return this.pdf.lines(t, e, n, null, null);
    },
        d = function d(t, e, n, r, i, o, a, s) {
      this.pdf.internal.out([l(h(n + t)), l(u(r + e)), l(h(i + t)), l(u(o + e)), l(h(a + t)), l(u(s + e)), "c"].join(" "));
    },
        g = function g(t, e, n, r) {
      var i = 2 * Math.PI,
          o = e;
      (o < i || i < o) && (o %= i);
      var a = n;
      (a < i || i < a) && (a %= i);

      for (var s = [], l = Math.PI / 2, h = r ? -1 : 1, u = e, c = Math.min(i, Math.abs(a - o)); 1e-5 < c;) {
        var f = u + h * Math.min(c, l);
        s.push(m.call(this, t, u, f)), c -= Math.abs(f - u), u = f;
      }

      return s;
    },
        m = function m(t, e, n) {
      var r = (n - e) / 2,
          i = t * Math.cos(r),
          o = t * Math.sin(r),
          a = i,
          s = -o,
          l = a * a + s * s,
          h = l + a * i + s * o,
          u = 4 / 3 * (Math.sqrt(2 * l * h) - h) / (a * o - s * i),
          c = a - u * s,
          f = s + u * a,
          p = c,
          d = -f,
          g = r + e,
          m = Math.cos(g),
          y = Math.sin(g);
      return {
        x1: t * Math.cos(e),
        y1: t * Math.sin(e),
        x2: c * m - f * y,
        y2: c * y + f * m,
        x3: p * m - d * y,
        y3: p * y + d * m,
        x4: t * Math.cos(n),
        y4: t * Math.sin(n)
      };
    },
        B = function B(t) {
      return 180 * t / Math.PI;
    },
        y = function y(t) {
      return t * Math.PI / 180;
    },
        w = function w(t, e, n, r, i, o) {
      var a = t + .5 * (n - t),
          s = e + .5 * (r - e),
          l = i + .5 * (n - i),
          h = o + .5 * (r - o),
          u = Math.min(t, i, a, l),
          c = Math.max(t, i, a, l),
          f = Math.min(e, o, s, h),
          p = Math.max(e, o, s, h);
      return new E(u, f, c - u, p - f);
    },
        b = function b(t, e, n, r, i, o, a, s) {
      for (var l, h, u, c, f, p, d, g, m, y, v, w, b, x = n - t, N = r - e, L = i - n, A = o - r, S = a - i, _ = s - o, F = 0; F < 41; F++) {
        g = (p = (h = t + (l = F / 40) * x) + l * ((c = n + l * L) - h)) + l * (c + l * (i + l * S - c) - p), m = (d = (u = e + l * N) + l * ((f = r + l * A) - u)) + l * (f + l * (o + l * _ - f) - d), b = 0 == F ? (w = y = g, v = m) : (y = Math.min(y, g), v = Math.min(v, m), w = Math.max(w, g), Math.max(b, m));
      }

      return new E(Math.round(y), Math.round(v), Math.round(w - y), Math.round(b - v));
    },
        j = function j(t, e) {
      var n = t || 0;
      Object.defineProperty(this, "x", {
        enumerable: !0,
        get: function get() {
          return n;
        },
        set: function set(t) {
          isNaN(t) || (n = parseFloat(t));
        }
      });
      var r = e || 0;
      Object.defineProperty(this, "y", {
        enumerable: !0,
        get: function get() {
          return r;
        },
        set: function set(t) {
          isNaN(t) || (r = parseFloat(t));
        }
      });
      var i = "pt";
      return Object.defineProperty(this, "type", {
        enumerable: !0,
        get: function get() {
          return i;
        },
        set: function set(t) {
          i = t.toString();
        }
      }), this;
    },
        E = function E(t, e, n, r) {
      j.call(this, t, e), this.type = "rect";
      var i = n || 0;
      Object.defineProperty(this, "w", {
        enumerable: !0,
        get: function get() {
          return i;
        },
        set: function set(t) {
          isNaN(t) || (i = parseFloat(t));
        }
      });
      var o = r || 0;
      return Object.defineProperty(this, "h", {
        enumerable: !0,
        get: function get() {
          return o;
        },
        set: function set(t) {
          isNaN(t) || (o = parseFloat(t));
        }
      }), this;
    },
        M = function M(t, e, n, r, i, o) {
      var a = [];
      return Object.defineProperty(this, "sx", {
        get: function get() {
          return a[0];
        },
        set: function set(t) {
          a[0] = Math.round(1e5 * t) / 1e5;
        }
      }), Object.defineProperty(this, "shy", {
        get: function get() {
          return a[1];
        },
        set: function set(t) {
          a[1] = Math.round(1e5 * t) / 1e5;
        }
      }), Object.defineProperty(this, "shx", {
        get: function get() {
          return a[2];
        },
        set: function set(t) {
          a[2] = Math.round(1e5 * t) / 1e5;
        }
      }), Object.defineProperty(this, "sy", {
        get: function get() {
          return a[3];
        },
        set: function set(t) {
          a[3] = Math.round(1e5 * t) / 1e5;
        }
      }), Object.defineProperty(this, "tx", {
        get: function get() {
          return a[4];
        },
        set: function set(t) {
          a[4] = Math.round(1e5 * t) / 1e5;
        }
      }), Object.defineProperty(this, "ty", {
        get: function get() {
          return a[5];
        },
        set: function set(t) {
          a[5] = Math.round(1e5 * t) / 1e5;
        }
      }), Object.defineProperty(this, "rotation", {
        get: function get() {
          return Math.atan2(this.shx, this.sx);
        }
      }), Object.defineProperty(this, "scaleX", {
        get: function get() {
          return this.decompose().scale.sx;
        }
      }), Object.defineProperty(this, "scaleY", {
        get: function get() {
          return this.decompose().scale.sy;
        }
      }), Object.defineProperty(this, "isIdentity", {
        get: function get() {
          return 1 === this.sx && 0 === this.shy && 0 === this.shx && 1 === this.sy && 0 === this.tx && 0 === this.ty;
        }
      }), this.sx = isNaN(t) ? 1 : t, this.shy = isNaN(e) ? 0 : e, this.shx = isNaN(n) ? 0 : n, this.sy = isNaN(r) ? 1 : r, this.tx = isNaN(i) ? 0 : i, this.ty = isNaN(o) ? 0 : o, this;
    };

    M.prototype.multiply = function (t) {
      var e = t.sx * this.sx + t.shy * this.shx,
          n = t.sx * this.shy + t.shy * this.sy,
          r = t.shx * this.sx + t.sy * this.shx,
          i = t.shx * this.shy + t.sy * this.sy,
          o = t.tx * this.sx + t.ty * this.shx + this.tx,
          a = t.tx * this.shy + t.ty * this.sy + this.ty;
      return new M(e, n, r, i, o, a);
    }, M.prototype.decompose = function () {
      var t = this.sx,
          e = this.shy,
          n = this.shx,
          r = this.sy,
          i = this.tx,
          o = this.ty,
          a = Math.sqrt(t * t + e * e),
          s = (t /= a) * n + (e /= a) * r;
      n -= t * s, r -= e * s;
      var l = Math.sqrt(n * n + r * r);
      return s /= l, t * (r /= l) < e * (n /= l) && (t = -t, e = -e, s = -s, a = -a), {
        scale: new M(a, 0, 0, l, 0, 0),
        translate: new M(1, 0, 0, 1, i, o),
        rotate: new M(t, e, -e, t, 0, 0),
        skew: new M(1, 0, s, 1, 0, 0)
      };
    }, M.prototype.applyToPoint = function (t) {
      var e = t.x * this.sx + t.y * this.shx + this.tx,
          n = t.x * this.shy + t.y * this.sy + this.ty;
      return new j(e, n);
    }, M.prototype.applyToRectangle = function (t) {
      var e = this.applyToPoint(t),
          n = this.applyToPoint(new j(t.x + t.w, t.y + t.h));
      return new E(e.x, e.y, n.x - e.x, n.y - e.y);
    }, M.prototype.clone = function () {
      var t = this.sx,
          e = this.shy,
          n = this.shx,
          r = this.sy,
          i = this.tx,
          o = this.ty;
      return new M(t, e, n, r, i, o);
    };
  }(lt.API, "undefined" != typeof self && self || "undefined" != typeof window && window || "undefined" != typeof global && global || Function('return typeof this === "object" && this.content')() || Function("return this")()),
  /**
     * jsPDF filters PlugIn
     * Copyright (c) 2014 Aras Abbasi 
     *
     * Licensed under the MIT License.
     * http://opensource.org/licenses/mit-license
     */
  a = lt.API, o = function o(t) {
    var r, e, n, i, o, a, s, l, h, u;

    for (/[^\x00-\xFF]/.test(t), e = [], n = 0, i = (t += r = "\0\0\0\0".slice(t.length % 4 || 4)).length; n < i; n += 4) {
      0 !== (o = (t.charCodeAt(n) << 24) + (t.charCodeAt(n + 1) << 16) + (t.charCodeAt(n + 2) << 8) + t.charCodeAt(n + 3)) ? (a = (o = ((o = ((o = ((o = (o - (u = o % 85)) / 85) - (h = o % 85)) / 85) - (l = o % 85)) / 85) - (s = o % 85)) / 85) % 85, e.push(a + 33, s + 33, l + 33, h + 33, u + 33)) : e.push(122);
    }

    return function (t, e) {
      for (var n = r.length; 0 < n; n--) {
        t.pop();
      }
    }(e), String.fromCharCode.apply(String, e) + "~>";
  }, s = function s(t) {
    var r,
        e,
        n,
        i,
        o,
        a = String,
        s = "length",
        l = "charCodeAt",
        h = "slice",
        u = "replace";

    for (t[h](-2), t = t[h](0, -2)[u](/\s/g, "")[u]("z", "!!!!!"), n = [], i = 0, o = (t += r = "uuuuu"[h](t[s] % 5 || 5))[s]; i < o; i += 5) {
      e = 52200625 * (t[l](i) - 33) + 614125 * (t[l](i + 1) - 33) + 7225 * (t[l](i + 2) - 33) + 85 * (t[l](i + 3) - 33) + (t[l](i + 4) - 33), n.push(255 & e >> 24, 255 & e >> 16, 255 & e >> 8, 255 & e);
    }

    return function (t, e) {
      for (var n = r[s]; 0 < n; n--) {
        t.pop();
      }
    }(n), a.fromCharCode.apply(a, n);
  }, h = function h(t) {
    for (var e = "", n = 0; n < t.length; n += 1) {
      e += ("0" + t.charCodeAt(n).toString(16)).slice(-2);
    }

    return e += ">";
  }, u = function u(t) {
    var e = new RegExp(/^([0-9A-Fa-f]{2})+$/);
    if (-1 !== (t = t.replace(/\s/g, "")).indexOf(">") && (t = t.substr(0, t.indexOf(">"))), t.length % 2 && (t += "0"), !1 === e.test(t)) return "";

    for (var n = "", r = 0; r < t.length; r += 2) {
      n += String.fromCharCode("0x" + (t[r] + t[r + 1]));
    }

    return n;
  }, c = function c(t, e) {
    e = Object.assign({
      predictor: 1,
      colors: 1,
      bitsPerComponent: 8,
      columns: 1
    }, e);

    for (var n, r, i = [], o = t.length; o--;) {
      i[o] = t.charCodeAt(o);
    }

    return n = a.adler32cs.from(t), (r = new Deflater(6)).append(new Uint8Array(i)), t = r.flush(), (i = new Uint8Array(t.length + 6)).set(new Uint8Array([120, 156])), i.set(t, 2), i.set(new Uint8Array([255 & n, n >> 8 & 255, n >> 16 & 255, n >> 24 & 255]), t.length + 2), t = String.fromCharCode.apply(null, i);
  }, a.processDataByFilters = function (t, e) {
    var n = 0,
        r = t || "",
        i = [];

    for ("string" == typeof (e = e || []) && (e = [e]), n = 0; n < e.length; n += 1) {
      switch (e[n]) {
        case "ASCII85Decode":
        case "/ASCII85Decode":
          r = s(r), i.push("/ASCII85Encode");
          break;

        case "ASCII85Encode":
        case "/ASCII85Encode":
          r = o(r), i.push("/ASCII85Decode");
          break;

        case "ASCIIHexDecode":
        case "/ASCIIHexDecode":
          r = u(r), i.push("/ASCIIHexEncode");
          break;

        case "ASCIIHexEncode":
        case "/ASCIIHexEncode":
          r = h(r), i.push("/ASCIIHexDecode");
          break;

        case "FlateEncode":
        case "/FlateEncode":
          r = c(r), i.push("/FlateDecode");
          break;

        default:
          throw 'The filter: "' + e[n] + '" is not implemented';
      }
    }

    return {
      data: r,
      reverseChain: i.reverse().join(" ")
    };
  }, (
  /**
     * jsPDF fileloading PlugIn
     * Copyright (c) 2018 Aras Abbasi (aras.abbasi@gmail.com)
     *
     * Licensed under the MIT License.
     * http://opensource.org/licenses/mit-license
     */
  r = lt.API).loadFile = function (t, e, n) {
    var r;
    e = e || !0, n = n || function () {};

    try {
      r = function (t, e, n) {
        var r = new XMLHttpRequest(),
            i = [],
            o = 0,
            a = function a(t) {
          var e = t.length,
              n = String.fromCharCode;

          for (o = 0; o < e; o += 1) {
            i.push(n(255 & t.charCodeAt(o)));
          }

          return i.join("");
        };

        if (r.open("GET", t, !e), r.overrideMimeType("text/plain; charset=x-user-defined"), !1 === e && (r.onload = function () {
          return a(this.responseText);
        }), r.send(null), 200 === r.status) return e ? a(r.responseText) : void 0;
        console.warn('Unable to load file "' + t + '"');
      }(t, e);
    } catch (t) {
      r = void 0;
    }

    return r;
  }, r.loadImageFile = r.loadFile,
  /**
     * Copyright (c) 2018 Erik Koopmans
     * Released under the MIT License.
     *
     * Licensed under the MIT License.
     * http://opensource.org/licenses/mit-license
     */
  i = lt.API, f = "undefined" != typeof window && window || "undefined" != typeof global && global, g = function g(t) {
    var e = se(t);
    return "undefined" === e ? "undefined" : "string" === e || t instanceof String ? "string" : "number" === e || t instanceof Number ? "number" : "function" === e || t instanceof Function ? "function" : t && t.constructor === Array ? "array" : t && 1 === t.nodeType ? "element" : "object" === e ? "object" : "unknown";
  }, m = function m(t, e) {
    var n = document.createElement(t);

    if (e.className && (n.className = e.className), e.innerHTML) {
      n.innerHTML = e.innerHTML;

      for (var r = n.getElementsByTagName("script"), i = r.length; 0 < i--; null) {
        r[i].parentNode.removeChild(r[i]);
      }
    }

    for (var o in e.style) {
      n.style[o] = e.style[o];
    }

    return n;
  }, (((y = function t(e) {
    var n = Object.assign(t.convert(Promise.resolve()), JSON.parse(JSON.stringify(t.template))),
        r = t.convert(Promise.resolve(), n);
    return r = (r = r.setProgress(1, t, 1, [t])).set(e);
  }).prototype = Object.create(Promise.prototype)).constructor = y).convert = function (t, e) {
    return t.__proto__ = e || y.prototype, t;
  }, y.template = {
    prop: {
      src: null,
      container: null,
      overlay: null,
      canvas: null,
      img: null,
      pdf: null,
      pageSize: null,
      callback: function callback() {}
    },
    progress: {
      val: 0,
      state: null,
      n: 0,
      stack: []
    },
    opt: {
      filename: "file.pdf",
      margin: [0, 0, 0, 0],
      enableLinks: !0,
      x: 0,
      y: 0,
      html2canvas: {},
      jsPDF: {}
    }
  }, y.prototype.from = function (t, e) {
    return this.then(function () {
      switch (e = e || function (t) {
        switch (g(t)) {
          case "string":
            return "string";

          case "element":
            return "canvas" === t.nodeName.toLowerCase ? "canvas" : "element";

          default:
            return "unknown";
        }
      }(t)) {
        case "string":
          return this.set({
            src: m("div", {
              innerHTML: t
            })
          });

        case "element":
          return this.set({
            src: t
          });

        case "canvas":
          return this.set({
            canvas: t
          });

        case "img":
          return this.set({
            img: t
          });

        default:
          return this.error("Unknown source type.");
      }
    });
  }, y.prototype.to = function (t) {
    switch (t) {
      case "container":
        return this.toContainer();

      case "canvas":
        return this.toCanvas();

      case "img":
        return this.toImg();

      case "pdf":
        return this.toPdf();

      default:
        return this.error("Invalid target.");
    }
  }, y.prototype.toContainer = function () {
    return this.thenList([function () {
      return this.prop.src || this.error("Cannot duplicate - no source HTML.");
    }, function () {
      return this.prop.pageSize || this.setPageSize();
    }]).then(function () {
      var t = {
        position: "relative",
        display: "inline-block",
        width: Math.max(this.prop.src.clientWidth, this.prop.src.scrollWidth, this.prop.src.offsetWidth) + "px",
        left: 0,
        right: 0,
        top: 0,
        margin: "auto",
        backgroundColor: "white"
      },
          e = function t(e, n) {
        for (var r = 3 === e.nodeType ? document.createTextNode(e.nodeValue) : e.cloneNode(!1), i = e.firstChild; i; i = i.nextSibling) {
          !0 !== n && 1 === i.nodeType && "SCRIPT" === i.nodeName || r.appendChild(t(i, n));
        }

        return 1 === e.nodeType && ("CANVAS" === e.nodeName ? (r.width = e.width, r.height = e.height, r.getContext("2d").drawImage(e, 0, 0)) : "TEXTAREA" !== e.nodeName && "SELECT" !== e.nodeName || (r.value = e.value), r.addEventListener("load", function () {
          r.scrollTop = e.scrollTop, r.scrollLeft = e.scrollLeft;
        }, !0)), r;
      }(this.prop.src, this.opt.html2canvas.javascriptEnabled);

      "BODY" === e.tagName && (t.height = Math.max(document.body.scrollHeight, document.body.offsetHeight, document.documentElement.clientHeight, document.documentElement.scrollHeight, document.documentElement.offsetHeight) + "px"), this.prop.overlay = m("div", {
        className: "html2pdf__overlay",
        style: {
          position: "fixed",
          overflow: "hidden",
          zIndex: 1e3,
          left: "-100000px",
          right: 0,
          bottom: 0,
          top: 0
        }
      }), this.prop.container = m("div", {
        className: "html2pdf__container",
        style: t
      }), this.prop.container.appendChild(e), this.prop.container.firstChild.appendChild(m("div", {
        style: {
          clear: "both",
          border: "0 none transparent",
          margin: 0,
          padding: 0,
          height: 0
        }
      })), this.prop.container.style.float = "none", this.prop.overlay.appendChild(this.prop.container), document.body.appendChild(this.prop.overlay), this.prop.container.firstChild.style.position = "relative", this.prop.container.height = Math.max(this.prop.container.firstChild.clientHeight, this.prop.container.firstChild.scrollHeight, this.prop.container.firstChild.offsetHeight) + "px";
    });
  }, y.prototype.toCanvas = function () {
    var t = [function () {
      return document.body.contains(this.prop.container) || this.toContainer();
    }];
    return this.thenList(t).then(function () {
      var t = Object.assign({}, this.opt.html2canvas);
      if (delete t.onrendered, this.isHtml2CanvasLoaded()) return html2canvas(this.prop.container, t);
    }).then(function (t) {
      (this.opt.html2canvas.onrendered || function () {})(t), this.prop.canvas = t, document.body.removeChild(this.prop.overlay);
    });
  }, y.prototype.toContext2d = function () {
    var t = [function () {
      return document.body.contains(this.prop.container) || this.toContainer();
    }];
    return this.thenList(t).then(function () {
      var t = this.opt.jsPDF,
          e = Object.assign({
        async: !0,
        allowTaint: !0,
        backgroundColor: "#ffffff",
        imageTimeout: 15e3,
        logging: !0,
        proxy: null,
        removeContainer: !0,
        foreignObjectRendering: !1,
        useCORS: !1
      }, this.opt.html2canvas);
      if (delete e.onrendered, t.context2d.autoPaging = !0, t.context2d.posX = this.opt.x, t.context2d.posY = this.opt.y, e.windowHeight = e.windowHeight || 0, e.windowHeight = 0 == e.windowHeight ? Math.max(this.prop.container.clientHeight, this.prop.container.scrollHeight, this.prop.container.offsetHeight) : e.windowHeight, this.isHtml2CanvasLoaded()) return html2canvas(this.prop.container, e);
    }).then(function (t) {
      (this.opt.html2canvas.onrendered || function () {})(t), this.prop.canvas = t, document.body.removeChild(this.prop.overlay);
    });
  }, y.prototype.toImg = function () {
    return this.thenList([function () {
      return this.prop.canvas || this.toCanvas();
    }]).then(function () {
      var t = this.prop.canvas.toDataURL("image/" + this.opt.image.type, this.opt.image.quality);
      this.prop.img = document.createElement("img"), this.prop.img.src = t;
    });
  }, y.prototype.toPdf = function () {
    return this.thenList([function () {
      return this.toContext2d();
    }]).then(function () {
      this.prop.pdf = this.prop.pdf || this.opt.jsPDF;
    });
  }, y.prototype.output = function (t, e, n) {
    return "img" === (n = n || "pdf").toLowerCase() || "image" === n.toLowerCase() ? this.outputImg(t, e) : this.outputPdf(t, e);
  }, y.prototype.outputPdf = function (t, e) {
    return this.thenList([function () {
      return this.prop.pdf || this.toPdf();
    }]).then(function () {
      return this.prop.pdf.output(t, e);
    });
  }, y.prototype.outputImg = function (t, e) {
    return this.thenList([function () {
      return this.prop.img || this.toImg();
    }]).then(function () {
      switch (t) {
        case void 0:
        case "img":
          return this.prop.img;

        case "datauristring":
        case "dataurlstring":
          return this.prop.img.src;

        case "datauri":
        case "dataurl":
          return document.location.href = this.prop.img.src;

        default:
          throw 'Image output type "' + t + '" is not supported.';
      }
    });
  }, y.prototype.isHtml2CanvasLoaded = function () {
    var t = void 0 !== f.html2canvas;
    return t || console.error("html2canvas not loaded."), t;
  }, y.prototype.save = function (t) {
    if (this.isHtml2CanvasLoaded()) return this.thenList([function () {
      return this.prop.pdf || this.toPdf();
    }]).set(t ? {
      filename: t
    } : null).then(function () {
      this.prop.pdf.save(this.opt.filename);
    });
  }, y.prototype.doCallback = function (t) {
    if (this.isHtml2CanvasLoaded()) return this.thenList([function () {
      return this.prop.pdf || this.toPdf();
    }]).then(function () {
      this.prop.callback(this.prop.pdf);
    });
  }, y.prototype.set = function (e) {
    if ("object" !== g(e)) return this;
    var t = Object.keys(e || {}).map(function (t) {
      if (t in y.template.prop) return function () {
        this.prop[t] = e[t];
      };

      switch (t) {
        case "margin":
          return this.setMargin.bind(this, e.margin);

        case "jsPDF":
          return function () {
            return this.opt.jsPDF = e.jsPDF, this.setPageSize();
          };

        case "pageSize":
          return this.setPageSize.bind(this, e.pageSize);

        default:
          return function () {
            this.opt[t] = e[t];
          };
      }
    }, this);
    return this.then(function () {
      return this.thenList(t);
    });
  }, y.prototype.get = function (e, n) {
    return this.then(function () {
      var t = e in y.template.prop ? this.prop[e] : this.opt[e];
      return n ? n(t) : t;
    });
  }, y.prototype.setMargin = function (t) {
    return this.then(function () {
      switch (g(t)) {
        case "number":
          t = [t, t, t, t];

        case "array":
          if (2 === t.length && (t = [t[0], t[1], t[0], t[1]]), 4 === t.length) break;

        default:
          return this.error("Invalid margin array.");
      }

      this.opt.margin = t;
    }).then(this.setPageSize);
  }, y.prototype.setPageSize = function (t) {
    function e(t, e) {
      return Math.floor(t * e / 72 * 96);
    }

    return this.then(function () {
      (t = t || lt.getPageSize(this.opt.jsPDF)).hasOwnProperty("inner") || (t.inner = {
        width: t.width - this.opt.margin[1] - this.opt.margin[3],
        height: t.height - this.opt.margin[0] - this.opt.margin[2]
      }, t.inner.px = {
        width: e(t.inner.width, t.k),
        height: e(t.inner.height, t.k)
      }, t.inner.ratio = t.inner.height / t.inner.width), this.prop.pageSize = t;
    });
  }, y.prototype.setProgress = function (t, e, n, r) {
    return null != t && (this.progress.val = t), null != e && (this.progress.state = e), null != n && (this.progress.n = n), null != r && (this.progress.stack = r), this.progress.ratio = this.progress.val / this.progress.state, this;
  }, y.prototype.updateProgress = function (t, e, n, r) {
    return this.setProgress(t ? this.progress.val + t : null, e || null, n ? this.progress.n + n : null, r ? this.progress.stack.concat(r) : null);
  }, y.prototype.then = function (t, e) {
    var n = this;
    return this.thenCore(t, e, function (e, t) {
      return n.updateProgress(null, null, 1, [e]), Promise.prototype.then.call(this, function (t) {
        return n.updateProgress(null, e), t;
      }).then(e, t).then(function (t) {
        return n.updateProgress(1), t;
      });
    });
  }, y.prototype.thenCore = function (t, e, n) {
    n = n || Promise.prototype.then;
    var r = this;
    t && (t = t.bind(r)), e && (e = e.bind(r));
    var i = -1 !== Promise.toString().indexOf("[native code]") && "Promise" === Promise.name ? r : y.convert(Object.assign({}, r), Promise.prototype),
        o = n.call(i, t, e);
    return y.convert(o, r.__proto__);
  }, y.prototype.thenExternal = function (t, e) {
    return Promise.prototype.then.call(this, t, e);
  }, y.prototype.thenList = function (t) {
    var e = this;
    return t.forEach(function (t) {
      e = e.thenCore(t);
    }), e;
  }, y.prototype.catch = function (t) {
    t && (t = t.bind(this));
    var e = Promise.prototype.catch.call(this, t);
    return y.convert(e, this);
  }, y.prototype.catchExternal = function (t) {
    return Promise.prototype.catch.call(this, t);
  }, y.prototype.error = function (t) {
    return this.then(function () {
      throw new Error(t);
    });
  }, y.prototype.using = y.prototype.set, y.prototype.saveAs = y.prototype.save, y.prototype.export = y.prototype.output, y.prototype.run = y.prototype.then, lt.getPageSize = function (t, e, n) {
    if ("object" === se(t)) {
      var r = t;
      t = r.orientation, e = r.unit || e, n = r.format || n;
    }

    e = e || "mm", n = n || "a4", t = ("" + (t || "P")).toLowerCase();
    var i = ("" + n).toLowerCase(),
        o = {
      a0: [2383.94, 3370.39],
      a1: [1683.78, 2383.94],
      a2: [1190.55, 1683.78],
      a3: [841.89, 1190.55],
      a4: [595.28, 841.89],
      a5: [419.53, 595.28],
      a6: [297.64, 419.53],
      a7: [209.76, 297.64],
      a8: [147.4, 209.76],
      a9: [104.88, 147.4],
      a10: [73.7, 104.88],
      b0: [2834.65, 4008.19],
      b1: [2004.09, 2834.65],
      b2: [1417.32, 2004.09],
      b3: [1000.63, 1417.32],
      b4: [708.66, 1000.63],
      b5: [498.9, 708.66],
      b6: [354.33, 498.9],
      b7: [249.45, 354.33],
      b8: [175.75, 249.45],
      b9: [124.72, 175.75],
      b10: [87.87, 124.72],
      c0: [2599.37, 3676.54],
      c1: [1836.85, 2599.37],
      c2: [1298.27, 1836.85],
      c3: [918.43, 1298.27],
      c4: [649.13, 918.43],
      c5: [459.21, 649.13],
      c6: [323.15, 459.21],
      c7: [229.61, 323.15],
      c8: [161.57, 229.61],
      c9: [113.39, 161.57],
      c10: [79.37, 113.39],
      dl: [311.81, 623.62],
      letter: [612, 792],
      "government-letter": [576, 756],
      legal: [612, 1008],
      "junior-legal": [576, 360],
      ledger: [1224, 792],
      tabloid: [792, 1224],
      "credit-card": [153, 243]
    };

    switch (e) {
      case "pt":
        var a = 1;
        break;

      case "mm":
        a = 72 / 25.4;
        break;

      case "cm":
        a = 72 / 2.54;
        break;

      case "in":
        a = 72;
        break;

      case "px":
        a = .75;
        break;

      case "pc":
      case "em":
        a = 12;
        break;

      case "ex":
        a = 6;
        break;

      default:
        throw "Invalid unit: " + e;
    }

    if (o.hasOwnProperty(i)) var s = o[i][1] / a,
        l = o[i][0] / a;else try {
      s = n[1], l = n[0];
    } catch (t) {
      throw new Error("Invalid format: " + n);
    }

    if ("p" === t || "portrait" === t) {
      if (t = "p", s < l) {
        var h = l;
        l = s, s = h;
      }
    } else {
      if ("l" !== t && "landscape" !== t) throw "Invalid orientation: " + t;
      t = "l", l < s && (h = l, l = s, s = h);
    }

    return {
      width: l,
      height: s,
      unit: e,
      k: a
    };
  }, i.html = function (t, e) {
    (e = e || {}).callback = e.callback || function () {}, e.html2canvas = e.html2canvas || {}, e.html2canvas.canvas = e.html2canvas.canvas || this.canvas, e.jsPDF = e.jsPDF || this, e.jsPDF;
    var n = new y(e);
    return e.worker ? n : n.from(t).doCallback();
  }, lt.API.addJS = function (t) {
    return b = t, this.internal.events.subscribe("postPutResources", function (t) {
      v = this.internal.newObject(), this.internal.out("<<"), this.internal.out("/Names [(EmbeddedJS) " + (v + 1) + " 0 R]"), this.internal.out(">>"), this.internal.out("endobj"), w = this.internal.newObject(), this.internal.out("<<"), this.internal.out("/S /JavaScript"), this.internal.out("/JS (" + b + ")"), this.internal.out(">>"), this.internal.out("endobj");
    }), this.internal.events.subscribe("putCatalog", function () {
      void 0 !== v && void 0 !== w && this.internal.out("/Names <</JavaScript " + v + " 0 R>>");
    }), this;
  }, (
  /**
     * @license
     * Copyright (c) 2014 Steven Spungin (TwelveTone LLC)  steven@twelvetone.tv
     *
     * Licensed under the MIT License.
     * http://opensource.org/licenses/mit-license
     */
  x = lt.API).events.push(["postPutResources", function () {
    var t = this,
        e = /^(\d+) 0 obj$/;
    if (0 < this.outline.root.children.length) for (var n = t.outline.render().split(/\r\n/), r = 0; r < n.length; r++) {
      var i = n[r],
          o = e.exec(i);

      if (null != o) {
        var a = o[1];
        t.internal.newObjectDeferredBegin(a, !1);
      }

      t.internal.write(i);
    }

    if (this.outline.createNamedDestinations) {
      var s = this.internal.pages.length,
          l = [];

      for (r = 0; r < s; r++) {
        var h = t.internal.newObject();
        l.push(h);
        var u = t.internal.getPageInfo(r + 1);
        t.internal.write("<< /D[" + u.objId + " 0 R /XYZ null null null]>> endobj");
      }

      var c = t.internal.newObject();

      for (t.internal.write("<< /Names [ "), r = 0; r < l.length; r++) {
        t.internal.write("(page_" + (r + 1) + ")" + l[r] + " 0 R");
      }

      t.internal.write(" ] >>", "endobj"), t.internal.newObject(), t.internal.write("<< /Dests " + c + " 0 R"), t.internal.write(">>", "endobj");
    }
  }]), x.events.push(["putCatalog", function () {
    0 < this.outline.root.children.length && (this.internal.write("/Outlines", this.outline.makeRef(this.outline.root)), this.outline.createNamedDestinations && this.internal.write("/Names " + namesOid + " 0 R"));
  }]), x.events.push(["initialized", function () {
    var a = this;
    a.outline = {
      createNamedDestinations: !1,
      root: {
        children: []
      }
    }, a.outline.add = function (t, e, n) {
      var r = {
        title: e,
        options: n,
        children: []
      };
      return null == t && (t = this.root), t.children.push(r), r;
    }, a.outline.render = function () {
      return this.ctx = {}, this.ctx.val = "", this.ctx.pdf = a, this.genIds_r(this.root), this.renderRoot(this.root), this.renderItems(this.root), this.ctx.val;
    }, a.outline.genIds_r = function (t) {
      t.id = a.internal.newObjectDeferred();

      for (var e = 0; e < t.children.length; e++) {
        this.genIds_r(t.children[e]);
      }
    }, a.outline.renderRoot = function (t) {
      this.objStart(t), this.line("/Type /Outlines"), 0 < t.children.length && (this.line("/First " + this.makeRef(t.children[0])), this.line("/Last " + this.makeRef(t.children[t.children.length - 1]))), this.line("/Count " + this.count_r({
        count: 0
      }, t)), this.objEnd();
    }, a.outline.renderItems = function (t) {
      this.ctx.pdf.internal.getCoordinateString;

      for (var e = this.ctx.pdf.internal.getVerticalCoordinateString, n = 0; n < t.children.length; n++) {
        var r = t.children[n];
        this.objStart(r), this.line("/Title " + this.makeString(r.title)), this.line("/Parent " + this.makeRef(t)), 0 < n && this.line("/Prev " + this.makeRef(t.children[n - 1])), n < t.children.length - 1 && this.line("/Next " + this.makeRef(t.children[n + 1])), 0 < r.children.length && (this.line("/First " + this.makeRef(r.children[0])), this.line("/Last " + this.makeRef(r.children[r.children.length - 1])));
        var i = this.count = this.count_r({
          count: 0
        }, r);

        if (0 < i && this.line("/Count " + i), r.options && r.options.pageNumber) {
          var o = a.internal.getPageInfo(r.options.pageNumber);
          this.line("/Dest [" + o.objId + " 0 R /XYZ 0 " + e(0) + " 0]");
        }

        this.objEnd();
      }

      for (n = 0; n < t.children.length; n++) {
        r = t.children[n], this.renderItems(r);
      }
    }, a.outline.line = function (t) {
      this.ctx.val += t + "\r\n";
    }, a.outline.makeRef = function (t) {
      return t.id + " 0 R";
    }, a.outline.makeString = function (t) {
      return "(" + a.internal.pdfEscape(t) + ")";
    }, a.outline.objStart = function (t) {
      this.ctx.val += "\r\n" + t.id + " 0 obj\r\n<<\r\n";
    }, a.outline.objEnd = function (t) {
      this.ctx.val += ">> \r\nendobj\r\n";
    }, a.outline.count_r = function (t, e) {
      for (var n = 0; n < e.children.length; n++) {
        t.count++, this.count_r(t, e.children[n]);
      }

      return t.count;
    };
  }]),
  /**
     * @license
     * 
     * Copyright (c) 2014 James Robb, https://github.com/jamesbrobb
     *
     * 
     * ====================================================================
     */
  I = lt.API, C = function C() {
    var t = "function" == typeof Deflater;
    if (!t) throw new Error("requires deflate.js for compression");
    return t;
  }, B = function B(t, e, n, r) {
    var i = 5,
        o = E;

    switch (r) {
      case I.image_compression.FAST:
        i = 3, o = j;
        break;

      case I.image_compression.MEDIUM:
        i = 6, o = M;
        break;

      case I.image_compression.SLOW:
        i = 9, o = O;
    }

    t = A(t, e, n, o);
    var a = new Uint8Array(N(i)),
        s = L(t),
        l = new Deflater(i),
        h = l.append(t),
        u = l.flush(),
        c = a.length + h.length + u.length,
        f = new Uint8Array(c + 4);
    return f.set(a), f.set(h, a.length), f.set(u, a.length + h.length), f[c++] = s >>> 24 & 255, f[c++] = s >>> 16 & 255, f[c++] = s >>> 8 & 255, f[c++] = 255 & s, I.arrayBufferToBinaryString(f);
  }, N = function N(t, e) {
    var n = Math.LOG2E * Math.log(32768) - 8 << 4 | 8,
        r = n << 8;
    return r |= Math.min(3, (e - 1 & 255) >> 1) << 6, r |= 0, [n, 255 & (r += 31 - r % 31)];
  }, L = function L(t, e) {
    for (var n, r = 1, i = 0, o = t.length, a = 0; 0 < o;) {
      for (o -= n = e < o ? e : o; i += r += t[a++], --n;) {
        ;
      }

      r %= 65521, i %= 65521;
    }

    return (i << 16 | r) >>> 0;
  }, A = function A(t, e, n, r) {
    for (var i, o, a, s = t.length / e, l = new Uint8Array(t.length + s), h = T(), u = 0; u < s; u++) {
      if (a = u * e, i = t.subarray(a, a + e), r) l.set(r(i, n, o), a + u);else {
        for (var c = 0, f = h.length, p = []; c < f; c++) {
          p[c] = h[c](i, n, o);
        }

        var d = R(p.concat());
        l.set(p[d], a + u);
      }
      o = i;
    }

    return l;
  }, S = function S(t, e, n) {
    var r = Array.apply([], t);
    return r.unshift(0), r;
  }, j = function j(t, e, n) {
    var r,
        i = [],
        o = 0,
        a = t.length;

    for (i[0] = 1; o < a; o++) {
      r = t[o - e] || 0, i[o + 1] = t[o] - r + 256 & 255;
    }

    return i;
  }, E = function E(t, e, n) {
    var r,
        i = [],
        o = 0,
        a = t.length;

    for (i[0] = 2; o < a; o++) {
      r = n && n[o] || 0, i[o + 1] = t[o] - r + 256 & 255;
    }

    return i;
  }, M = function M(t, e, n) {
    var r,
        i,
        o = [],
        a = 0,
        s = t.length;

    for (o[0] = 3; a < s; a++) {
      r = t[a - e] || 0, i = n && n[a] || 0, o[a + 1] = t[a] + 256 - (r + i >>> 1) & 255;
    }

    return o;
  }, O = function O(t, e, n) {
    var r,
        i,
        o,
        a,
        s = [],
        l = 0,
        h = t.length;

    for (s[0] = 4; l < h; l++) {
      r = t[l - e] || 0, i = n && n[l] || 0, o = n && n[l - e] || 0, a = q(r, i, o), s[l + 1] = t[l] - a + 256 & 255;
    }

    return s;
  }, q = function q(t, e, n) {
    var r = t + e - n,
        i = Math.abs(r - t),
        o = Math.abs(r - e),
        a = Math.abs(r - n);
    return i <= o && i <= a ? t : o <= a ? e : n;
  }, T = function T() {
    return [S, j, E, M, O];
  }, R = function R(t) {
    for (var e, n, r, i = 0, o = t.length; i < o;) {
      ((e = D(t[i].slice(1))) < n || !n) && (n = e, r = i), i++;
    }

    return r;
  }, D = function D(t) {
    for (var e = 0, n = t.length, r = 0; e < n;) {
      r += Math.abs(t[e++]);
    }

    return r;
  }, I.processPNG = function (t, e, n, r, i) {
    var o,
        a,
        s,
        l,
        h,
        u,
        c = this.color_spaces.DEVICE_RGB,
        f = this.decode.FLATE_DECODE,
        p = 8;

    if (this.isArrayBuffer(t) && (t = new Uint8Array(t)), this.isArrayBufferView(t)) {
      if ("function" != typeof PNG || "function" != typeof kt) throw new Error("PNG support requires png.js and zlib.js");

      if (t = (o = new PNG(t)).imgData, p = o.bits, c = o.colorSpace, l = o.colors, -1 !== [4, 6].indexOf(o.colorType)) {
        if (8 === o.bits) for (var d, g = (_ = 32 == o.pixelBitlength ? new Uint32Array(o.decodePixels().buffer) : 16 == o.pixelBitlength ? new Uint16Array(o.decodePixels().buffer) : new Uint8Array(o.decodePixels().buffer)).length, m = new Uint8Array(g * o.colors), y = new Uint8Array(g), v = o.pixelBitlength - o.bits, w = 0, b = 0; w < g; w++) {
          for (x = _[w], d = 0; d < v;) {
            m[b++] = x >>> d & 255, d += o.bits;
          }

          y[w] = x >>> d & 255;
        }

        if (16 === o.bits) {
          g = (_ = new Uint32Array(o.decodePixels().buffer)).length, m = new Uint8Array(g * (32 / o.pixelBitlength) * o.colors), y = new Uint8Array(g * (32 / o.pixelBitlength));

          for (var x, N = 1 < o.colors, L = b = w = 0; w < g;) {
            x = _[w++], m[b++] = x >>> 0 & 255, N && (m[b++] = x >>> 16 & 255, x = _[w++], m[b++] = x >>> 0 & 255), y[L++] = x >>> 16 & 255;
          }

          p = 8;
        }

        r !== I.image_compression.NONE && C() ? (t = B(m, o.width * o.colors, o.colors, r), u = B(y, o.width, 1, r)) : (t = m, u = y, f = null);
      }

      if (3 === o.colorType && (c = this.color_spaces.INDEXED, h = o.palette, o.transparency.indexed)) {
        var A = o.transparency.indexed,
            S = 0;

        for (w = 0, g = A.length; w < g; ++w) {
          S += A[w];
        }

        if ((S /= 255) == g - 1 && -1 !== A.indexOf(0)) s = [A.indexOf(0)];else if (S !== g) {
          var _ = o.decodePixels();

          for (y = new Uint8Array(_.length), w = 0, g = _.length; w < g; w++) {
            y[w] = A[_[w]];
          }

          u = B(y, o.width, 1);
        }
      }

      var F = function (t) {
        var e;

        switch (t) {
          case I.image_compression.FAST:
            e = 11;
            break;

          case I.image_compression.MEDIUM:
            e = 13;
            break;

          case I.image_compression.SLOW:
            e = 14;
            break;

          default:
            e = 12;
        }

        return e;
      }(r);

      return a = f === this.decode.FLATE_DECODE ? "/Predictor " + F + " /Colors " + l + " /BitsPerComponent " + p + " /Columns " + o.width : "/Colors " + l + " /BitsPerComponent " + p + " /Columns " + o.width, (this.isArrayBuffer(t) || this.isArrayBufferView(t)) && (t = this.arrayBufferToBinaryString(t)), (u && this.isArrayBuffer(u) || this.isArrayBufferView(u)) && (u = this.arrayBufferToBinaryString(u)), this.createImageInfo(t, o.width, o.height, c, p, f, e, n, a, s, h, u, F);
    }

    throw new Error("Unsupported PNG image data, try using JPEG instead.");
  }, (
  /**
     * @license
     * Copyright (c) 2017 Aras Abbasi 
     *
     * Licensed under the MIT License.
     * http://opensource.org/licenses/mit-license
     */
  U = lt.API).processGIF89A = function (t, e, n, r, i) {
    var o = new At(t),
        a = o.width,
        s = o.height,
        l = [];
    o.decodeAndBlitFrameRGBA(0, l);
    var h = {
      data: l,
      width: a,
      height: s
    },
        u = new _t(100).encode(h, 100);
    return U.processJPEG.call(this, u, e, n, r);
  }, U.processGIF87A = U.processGIF89A, (
  /**
     * Copyright (c) 2018 Aras Abbasi 
     *
     * Licensed under the MIT License.
     * http://opensource.org/licenses/mit-license
     */
  z = lt.API).processBMP = function (t, e, n, r, i) {
    var o = new Ft(t, !1),
        a = o.width,
        s = o.height,
        l = {
      data: o.getData(),
      width: a,
      height: s
    },
        h = new _t(100).encode(l, 100);
    return z.processJPEG.call(this, h, e, n, r);
  }, lt.API.setLanguage = function (t) {
    return void 0 === this.internal.languageSettings && (this.internal.languageSettings = {}, this.internal.languageSettings.isSubscribed = !1), void 0 !== {
      af: "Afrikaans",
      sq: "Albanian",
      ar: "Arabic (Standard)",
      "ar-DZ": "Arabic (Algeria)",
      "ar-BH": "Arabic (Bahrain)",
      "ar-EG": "Arabic (Egypt)",
      "ar-IQ": "Arabic (Iraq)",
      "ar-JO": "Arabic (Jordan)",
      "ar-KW": "Arabic (Kuwait)",
      "ar-LB": "Arabic (Lebanon)",
      "ar-LY": "Arabic (Libya)",
      "ar-MA": "Arabic (Morocco)",
      "ar-OM": "Arabic (Oman)",
      "ar-QA": "Arabic (Qatar)",
      "ar-SA": "Arabic (Saudi Arabia)",
      "ar-SY": "Arabic (Syria)",
      "ar-TN": "Arabic (Tunisia)",
      "ar-AE": "Arabic (U.A.E.)",
      "ar-YE": "Arabic (Yemen)",
      an: "Aragonese",
      hy: "Armenian",
      as: "Assamese",
      ast: "Asturian",
      az: "Azerbaijani",
      eu: "Basque",
      be: "Belarusian",
      bn: "Bengali",
      bs: "Bosnian",
      br: "Breton",
      bg: "Bulgarian",
      my: "Burmese",
      ca: "Catalan",
      ch: "Chamorro",
      ce: "Chechen",
      zh: "Chinese",
      "zh-HK": "Chinese (Hong Kong)",
      "zh-CN": "Chinese (PRC)",
      "zh-SG": "Chinese (Singapore)",
      "zh-TW": "Chinese (Taiwan)",
      cv: "Chuvash",
      co: "Corsican",
      cr: "Cree",
      hr: "Croatian",
      cs: "Czech",
      da: "Danish",
      nl: "Dutch (Standard)",
      "nl-BE": "Dutch (Belgian)",
      en: "English",
      "en-AU": "English (Australia)",
      "en-BZ": "English (Belize)",
      "en-CA": "English (Canada)",
      "en-IE": "English (Ireland)",
      "en-JM": "English (Jamaica)",
      "en-NZ": "English (New Zealand)",
      "en-PH": "English (Philippines)",
      "en-ZA": "English (South Africa)",
      "en-TT": "English (Trinidad & Tobago)",
      "en-GB": "English (United Kingdom)",
      "en-US": "English (United States)",
      "en-ZW": "English (Zimbabwe)",
      eo: "Esperanto",
      et: "Estonian",
      fo: "Faeroese",
      fj: "Fijian",
      fi: "Finnish",
      fr: "French (Standard)",
      "fr-BE": "French (Belgium)",
      "fr-CA": "French (Canada)",
      "fr-FR": "French (France)",
      "fr-LU": "French (Luxembourg)",
      "fr-MC": "French (Monaco)",
      "fr-CH": "French (Switzerland)",
      fy: "Frisian",
      fur: "Friulian",
      gd: "Gaelic (Scots)",
      "gd-IE": "Gaelic (Irish)",
      gl: "Galacian",
      ka: "Georgian",
      de: "German (Standard)",
      "de-AT": "German (Austria)",
      "de-DE": "German (Germany)",
      "de-LI": "German (Liechtenstein)",
      "de-LU": "German (Luxembourg)",
      "de-CH": "German (Switzerland)",
      el: "Greek",
      gu: "Gujurati",
      ht: "Haitian",
      he: "Hebrew",
      hi: "Hindi",
      hu: "Hungarian",
      is: "Icelandic",
      id: "Indonesian",
      iu: "Inuktitut",
      ga: "Irish",
      it: "Italian (Standard)",
      "it-CH": "Italian (Switzerland)",
      ja: "Japanese",
      kn: "Kannada",
      ks: "Kashmiri",
      kk: "Kazakh",
      km: "Khmer",
      ky: "Kirghiz",
      tlh: "Klingon",
      ko: "Korean",
      "ko-KP": "Korean (North Korea)",
      "ko-KR": "Korean (South Korea)",
      la: "Latin",
      lv: "Latvian",
      lt: "Lithuanian",
      lb: "Luxembourgish",
      mk: "FYRO Macedonian",
      ms: "Malay",
      ml: "Malayalam",
      mt: "Maltese",
      mi: "Maori",
      mr: "Marathi",
      mo: "Moldavian",
      nv: "Navajo",
      ng: "Ndonga",
      ne: "Nepali",
      no: "Norwegian",
      nb: "Norwegian (Bokmal)",
      nn: "Norwegian (Nynorsk)",
      oc: "Occitan",
      or: "Oriya",
      om: "Oromo",
      fa: "Persian",
      "fa-IR": "Persian/Iran",
      pl: "Polish",
      pt: "Portuguese",
      "pt-BR": "Portuguese (Brazil)",
      pa: "Punjabi",
      "pa-IN": "Punjabi (India)",
      "pa-PK": "Punjabi (Pakistan)",
      qu: "Quechua",
      rm: "Rhaeto-Romanic",
      ro: "Romanian",
      "ro-MO": "Romanian (Moldavia)",
      ru: "Russian",
      "ru-MO": "Russian (Moldavia)",
      sz: "Sami (Lappish)",
      sg: "Sango",
      sa: "Sanskrit",
      sc: "Sardinian",
      sd: "Sindhi",
      si: "Singhalese",
      sr: "Serbian",
      sk: "Slovak",
      sl: "Slovenian",
      so: "Somani",
      sb: "Sorbian",
      es: "Spanish",
      "es-AR": "Spanish (Argentina)",
      "es-BO": "Spanish (Bolivia)",
      "es-CL": "Spanish (Chile)",
      "es-CO": "Spanish (Colombia)",
      "es-CR": "Spanish (Costa Rica)",
      "es-DO": "Spanish (Dominican Republic)",
      "es-EC": "Spanish (Ecuador)",
      "es-SV": "Spanish (El Salvador)",
      "es-GT": "Spanish (Guatemala)",
      "es-HN": "Spanish (Honduras)",
      "es-MX": "Spanish (Mexico)",
      "es-NI": "Spanish (Nicaragua)",
      "es-PA": "Spanish (Panama)",
      "es-PY": "Spanish (Paraguay)",
      "es-PE": "Spanish (Peru)",
      "es-PR": "Spanish (Puerto Rico)",
      "es-ES": "Spanish (Spain)",
      "es-UY": "Spanish (Uruguay)",
      "es-VE": "Spanish (Venezuela)",
      sx: "Sutu",
      sw: "Swahili",
      sv: "Swedish",
      "sv-FI": "Swedish (Finland)",
      "sv-SV": "Swedish (Sweden)",
      ta: "Tamil",
      tt: "Tatar",
      te: "Teluga",
      th: "Thai",
      tig: "Tigre",
      ts: "Tsonga",
      tn: "Tswana",
      tr: "Turkish",
      tk: "Turkmen",
      uk: "Ukrainian",
      hsb: "Upper Sorbian",
      ur: "Urdu",
      ve: "Venda",
      vi: "Vietnamese",
      vo: "Volapuk",
      wa: "Walloon",
      cy: "Welsh",
      xh: "Xhosa",
      ji: "Yiddish",
      zu: "Zulu"
    }[t] && (this.internal.languageSettings.languageCode = t, !1 === this.internal.languageSettings.isSubscribed && (this.internal.events.subscribe("putCatalog", function () {
      this.internal.write("/Lang (" + this.internal.languageSettings.languageCode + ")");
    }), this.internal.languageSettings.isSubscribed = !0)), this;
  },
  /** @license
     * MIT license.
     * Copyright (c) 2012 Willow Systems Corporation, willow-systems.com
     *               2014 Diego Casorran, https://github.com/diegocr
     *
     * 
     * ====================================================================
     */
  H = lt.API, W = H.getCharWidthsArray = function (t, e) {
    var n,
        r,
        i,
        o = (e = e || {}).font || this.internal.getFont(),
        a = e.fontSize || this.internal.getFontSize(),
        s = e.charSpace || this.internal.getCharSpace(),
        l = e.widths ? e.widths : o.metadata.Unicode.widths,
        h = l.fof ? l.fof : 1,
        u = e.kerning ? e.kerning : o.metadata.Unicode.kerning,
        c = u.fof ? u.fof : 1,
        f = 0,
        p = l[0] || h,
        d = [];

    for (n = 0, r = t.length; n < r; n++) {
      i = t.charCodeAt(n), "function" == typeof o.metadata.widthOfString ? d.push((o.metadata.widthOfGlyph(o.metadata.characterToGlyph(i)) + s * (1e3 / a) || 0) / 1e3) : d.push((l[i] || p) / h + (u[i] && u[i][f] || 0) / c), f = i;
    }

    return d;
  }, V = H.getArraySum = function (t) {
    for (var e = t.length, n = 0; e;) {
      n += t[--e];
    }

    return n;
  }, G = H.getStringUnitWidth = function (t, e) {
    var n = (e = e || {}).fontSize || this.internal.getFontSize(),
        r = e.font || this.internal.getFont(),
        i = e.charSpace || this.internal.getCharSpace();
    return "function" == typeof r.metadata.widthOfString ? r.metadata.widthOfString(t, n, i) / n : V(W.apply(this, arguments));
  }, Y = function Y(t, e, n, r) {
    for (var i = [], o = 0, a = t.length, s = 0; o !== a && s + e[o] < n;) {
      s += e[o], o++;
    }

    i.push(t.slice(0, o));
    var l = o;

    for (s = 0; o !== a;) {
      s + e[o] > r && (i.push(t.slice(l, o)), s = 0, l = o), s += e[o], o++;
    }

    return l !== o && i.push(t.slice(l, o)), i;
  }, J = function J(t, e, n) {
    n || (n = {});
    var r,
        i,
        o,
        a,
        s,
        l,
        h = [],
        u = [h],
        c = n.textIndent || 0,
        f = 0,
        p = 0,
        d = t.split(" "),
        g = W.apply(this, [" ", n])[0];

    if (l = -1 === n.lineIndent ? d[0].length + 2 : n.lineIndent || 0) {
      var m = Array(l).join(" "),
          y = [];
      d.map(function (t) {
        1 < (t = t.split(/\s*\n/)).length ? y = y.concat(t.map(function (t, e) {
          return (e && t.length ? "\n" : "") + t;
        })) : y.push(t[0]);
      }), d = y, l = G.apply(this, [m, n]);
    }

    for (o = 0, a = d.length; o < a; o++) {
      var v = 0;

      if (r = d[o], l && "\n" == r[0] && (r = r.substr(1), v = 1), i = W.apply(this, [r, n]), e < c + f + (p = V(i)) || v) {
        if (e < p) {
          for (s = Y.apply(this, [r, i, e - (c + f), e]), h.push(s.shift()), h = [s.pop()]; s.length;) {
            u.push([s.shift()]);
          }

          p = V(i.slice(r.length - (h[0] ? h[0].length : 0)));
        } else h = [r];

        u.push(h), c = p + l, f = g;
      } else h.push(r), c += f + p, f = g;
    }

    if (l) var w = function w(t, e) {
      return (e ? m : "") + t.join(" ");
    };else w = function w(t) {
      return t.join(" ");
    };
    return u.map(w);
  }, H.splitTextToSize = function (t, e, n) {
    var r,
        i = (n = n || {}).fontSize || this.internal.getFontSize(),
        o = function (t) {
      var e = {
        0: 1
      },
          n = {};
      if (t.widths && t.kerning) return {
        widths: t.widths,
        kerning: t.kerning
      };
      var r = this.internal.getFont(t.fontName, t.fontStyle),
          i = "Unicode";
      return r.metadata[i] ? {
        widths: r.metadata[i].widths || e,
        kerning: r.metadata[i].kerning || n
      } : {
        font: r.metadata,
        fontSize: this.internal.getFontSize(),
        charSpace: this.internal.getCharSpace()
      };
    }.call(this, n);

    r = Array.isArray(t) ? t : t.split(/\r?\n/);
    var a = 1 * this.internal.scaleFactor * e / i;
    o.textIndent = n.textIndent ? 1 * n.textIndent * this.internal.scaleFactor / i : 0, o.lineIndent = n.lineIndent;
    var s,
        l,
        h = [];

    for (s = 0, l = r.length; s < l; s++) {
      h = h.concat(J.apply(this, [r[s], a, o]));
    }

    return h;
  },
  /** @license
     jsPDF standard_fonts_metrics plugin
     * Copyright (c) 2012 Willow Systems Corporation, willow-systems.com
     * MIT license.
     * 
     * ====================================================================
     */
  X = lt.API, Z = {
    codePages: ["WinAnsiEncoding"],
    WinAnsiEncoding: (K = function K(t) {
      for (var e = "klmnopqrstuvwxyz", n = {}, r = 0; r < e.length; r++) {
        n[e[r]] = "0123456789abcdef"[r];
      }

      var i,
          o,
          a,
          s,
          l,
          h = {},
          u = 1,
          c = h,
          f = [],
          p = "",
          d = "",
          g = t.length - 1;

      for (r = 1; r != g;) {
        l = t[r], r += 1, "'" == l ? o = o ? (s = o.join(""), i) : [] : o ? o.push(l) : "{" == l ? (f.push([c, s]), c = {}, s = i) : "}" == l ? ((a = f.pop())[0][a[1]] = c, s = i, c = a[0]) : "-" == l ? u = -1 : s === i ? n.hasOwnProperty(l) ? (p += n[l], s = parseInt(p, 16) * u, u = 1, p = "") : p += l : n.hasOwnProperty(l) ? (d += n[l], c[s] = parseInt(d, 16) * u, u = 1, s = i, d = "") : d += l;
      }

      return h;
    })("{19m8n201n9q201o9r201s9l201t9m201u8m201w9n201x9o201y8o202k8q202l8r202m9p202q8p20aw8k203k8t203t8v203u9v2cq8s212m9t15m8w15n9w2dw9s16k8u16l9u17s9z17x8y17y9y}")
  }, Q = {
    Unicode: {
      Courier: Z,
      "Courier-Bold": Z,
      "Courier-BoldOblique": Z,
      "Courier-Oblique": Z,
      Helvetica: Z,
      "Helvetica-Bold": Z,
      "Helvetica-BoldOblique": Z,
      "Helvetica-Oblique": Z,
      "Times-Roman": Z,
      "Times-Bold": Z,
      "Times-BoldItalic": Z,
      "Times-Italic": Z
    }
  }, $ = {
    Unicode: {
      "Courier-Oblique": K("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"),
      "Times-BoldItalic": K("{'widths'{k3o2q4ycx2r201n3m201o6o201s2l201t2l201u2l201w3m201x3m201y3m2k1t2l2r202m2n2n3m2o3m2p5n202q6o2r1w2s2l2t2l2u3m2v3t2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w3t3x3t3y3t3z3m4k5n4l4m4m4m4n4m4o4s4p4m4q4m4r4s4s4y4t2r4u3m4v4m4w3x4x5t4y4s4z4s5k3x5l4s5m4m5n3r5o3x5p4s5q4m5r5t5s4m5t3x5u3x5v2l5w1w5x2l5y3t5z3m6k2l6l3m6m3m6n2w6o3m6p2w6q2l6r3m6s3r6t1w6u1w6v3m6w1w6x4y6y3r6z3m7k3m7l3m7m2r7n2r7o1w7p3r7q2w7r4m7s3m7t2w7u2r7v2n7w1q7x2n7y3t202l3mcl4mal2ram3man3mao3map3mar3mas2lat4uau1uav3maw3way4uaz2lbk2sbl3t'fof'6obo2lbp3tbq3mbr1tbs2lbu1ybv3mbz3mck4m202k3mcm4mcn4mco4mcp4mcq5ycr4mcs4mct4mcu4mcv4mcw2r2m3rcy2rcz2rdl4sdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek3mel3mem3men3meo3mep3meq4ser2wes2wet2weu2wev2wew1wex1wey1wez1wfl3rfm3mfn3mfo3mfp3mfq3mfr3tfs3mft3rfu3rfv3rfw3rfz2w203k6o212m6o2dw2l2cq2l3t3m3u2l17s3x19m3m}'kerning'{cl{4qu5kt5qt5rs17ss5ts}201s{201ss}201t{cks4lscmscnscoscpscls2wu2yu201ts}201x{2wu2yu}2k{201ts}2w{4qx5kx5ou5qx5rs17su5tu}2x{17su5tu5ou}2y{4qx5kx5ou5qx5rs17ss5ts}'fof'-6ofn{17sw5tw5ou5qw5rs}7t{cksclscmscnscoscps4ls}3u{17su5tu5os5qs}3v{17su5tu5os5qs}7p{17su5tu}ck{4qu5kt5qt5rs17ss5ts}4l{4qu5kt5qt5rs17ss5ts}cm{4qu5kt5qt5rs17ss5ts}cn{4qu5kt5qt5rs17ss5ts}co{4qu5kt5qt5rs17ss5ts}cp{4qu5kt5qt5rs17ss5ts}6l{4qu5ou5qw5rt17su5tu}5q{ckuclucmucnucoucpu4lu}5r{ckuclucmucnucoucpu4lu}7q{cksclscmscnscoscps4ls}6p{4qu5ou5qw5rt17sw5tw}ek{4qu5ou5qw5rt17su5tu}el{4qu5ou5qw5rt17su5tu}em{4qu5ou5qw5rt17su5tu}en{4qu5ou5qw5rt17su5tu}eo{4qu5ou5qw5rt17su5tu}ep{4qu5ou5qw5rt17su5tu}es{17ss5ts5qs4qu}et{4qu5ou5qw5rt17sw5tw}eu{4qu5ou5qw5rt17ss5ts}ev{17ss5ts5qs4qu}6z{17sw5tw5ou5qw5rs}fm{17sw5tw5ou5qw5rs}7n{201ts}fo{17sw5tw5ou5qw5rs}fp{17sw5tw5ou5qw5rs}fq{17sw5tw5ou5qw5rs}7r{cksclscmscnscoscps4ls}fs{17sw5tw5ou5qw5rs}ft{17su5tu}fu{17su5tu}fv{17su5tu}fw{17su5tu}fz{cksclscmscnscoscps4ls}}}"),
      "Helvetica-Bold": K("{'widths'{k3s2q4scx1w201n3r201o6o201s1w201t1w201u1w201w3m201x3m201y3m2k1w2l2l202m2n2n3r2o3r2p5t202q6o2r1s2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v2l3w3u3x3u3y3u3z3x4k6l4l4s4m4s4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3r4v4s4w3x4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v2l5w1w5x2l5y3u5z3r6k2l6l3r6m3x6n3r6o3x6p3r6q2l6r3x6s3x6t1w6u1w6v3r6w1w6x5t6y3x6z3x7k3x7l3x7m2r7n3r7o2l7p3x7q3r7r4y7s3r7t3r7u3m7v2r7w1w7x2r7y3u202l3rcl4sal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3xbq3rbr1wbs2lbu2obv3rbz3xck4s202k3rcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw1w2m2zcy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3res3ret3reu3rev3rew1wex1wey1wez1wfl3xfm3xfn3xfo3xfp3xfq3xfr3ufs3xft3xfu3xfv3xfw3xfz3r203k6o212m6o2dw2l2cq2l3t3r3u2l17s4m19m3r}'kerning'{cl{4qs5ku5ot5qs17sv5tv}201t{2ww4wy2yw}201w{2ks}201x{2ww4wy2yw}2k{201ts201xs}2w{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}2x{5ow5qs}2y{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}'fof'-6o7p{17su5tu5ot}ck{4qs5ku5ot5qs17sv5tv}4l{4qs5ku5ot5qs17sv5tv}cm{4qs5ku5ot5qs17sv5tv}cn{4qs5ku5ot5qs17sv5tv}co{4qs5ku5ot5qs17sv5tv}cp{4qs5ku5ot5qs17sv5tv}6l{17st5tt5os}17s{2kwclvcmvcnvcovcpv4lv4wwckv}5o{2kucltcmtcntcotcpt4lt4wtckt}5q{2ksclscmscnscoscps4ls4wvcks}5r{2ks4ws}5t{2kwclvcmvcnvcovcpv4lv4wwckv}eo{17st5tt5os}fu{17su5tu5ot}6p{17ss5ts}ek{17st5tt5os}el{17st5tt5os}em{17st5tt5os}en{17st5tt5os}6o{201ts}ep{17st5tt5os}es{17ss5ts}et{17ss5ts}eu{17ss5ts}ev{17ss5ts}6z{17su5tu5os5qt}fm{17su5tu5os5qt}fn{17su5tu5os5qt}fo{17su5tu5os5qt}fp{17su5tu5os5qt}fq{17su5tu5os5qt}fs{17su5tu5os5qt}ft{17su5tu5ot}7m{5os}fv{17su5tu5ot}fw{17su5tu5ot}}}"),
      Courier: K("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"),
      "Courier-BoldOblique": K("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"),
      "Times-Bold": K("{'widths'{k3q2q5ncx2r201n3m201o6o201s2l201t2l201u2l201w3m201x3m201y3m2k1t2l2l202m2n2n3m2o3m2p6o202q6o2r1w2s2l2t2l2u3m2v3t2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w3t3x3t3y3t3z3m4k5x4l4s4m4m4n4s4o4s4p4m4q3x4r4y4s4y4t2r4u3m4v4y4w4m4x5y4y4s4z4y5k3x5l4y5m4s5n3r5o4m5p4s5q4s5r6o5s4s5t4s5u4m5v2l5w1w5x2l5y3u5z3m6k2l6l3m6m3r6n2w6o3r6p2w6q2l6r3m6s3r6t1w6u2l6v3r6w1w6x5n6y3r6z3m7k3r7l3r7m2w7n2r7o2l7p3r7q3m7r4s7s3m7t3m7u2w7v2r7w1q7x2r7y3o202l3mcl4sal2lam3man3mao3map3mar3mas2lat4uau1yav3maw3tay4uaz2lbk2sbl3t'fof'6obo2lbp3rbr1tbs2lbu2lbv3mbz3mck4s202k3mcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw2r2m3rcy2rcz2rdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3rek3mel3mem3men3meo3mep3meq4ser2wes2wet2weu2wev2wew1wex1wey1wez1wfl3rfm3mfn3mfo3mfp3mfq3mfr3tfs3mft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3m3u2l17s4s19m3m}'kerning'{cl{4qt5ks5ot5qy5rw17sv5tv}201t{cks4lscmscnscoscpscls4wv}2k{201ts}2w{4qu5ku7mu5os5qx5ru17su5tu}2x{17su5tu5ou5qs}2y{4qv5kv7mu5ot5qz5ru17su5tu}'fof'-6o7t{cksclscmscnscoscps4ls}3u{17su5tu5os5qu}3v{17su5tu5os5qu}fu{17su5tu5ou5qu}7p{17su5tu5ou5qu}ck{4qt5ks5ot5qy5rw17sv5tv}4l{4qt5ks5ot5qy5rw17sv5tv}cm{4qt5ks5ot5qy5rw17sv5tv}cn{4qt5ks5ot5qy5rw17sv5tv}co{4qt5ks5ot5qy5rw17sv5tv}cp{4qt5ks5ot5qy5rw17sv5tv}6l{17st5tt5ou5qu}17s{ckuclucmucnucoucpu4lu4wu}5o{ckuclucmucnucoucpu4lu4wu}5q{ckzclzcmzcnzcozcpz4lz4wu}5r{ckxclxcmxcnxcoxcpx4lx4wu}5t{ckuclucmucnucoucpu4lu4wu}7q{ckuclucmucnucoucpu4lu}6p{17sw5tw5ou5qu}ek{17st5tt5qu}el{17st5tt5ou5qu}em{17st5tt5qu}en{17st5tt5qu}eo{17st5tt5qu}ep{17st5tt5ou5qu}es{17ss5ts5qu}et{17sw5tw5ou5qu}eu{17sw5tw5ou5qu}ev{17ss5ts5qu}6z{17sw5tw5ou5qu5rs}fm{17sw5tw5ou5qu5rs}fn{17sw5tw5ou5qu5rs}fo{17sw5tw5ou5qu5rs}fp{17sw5tw5ou5qu5rs}fq{17sw5tw5ou5qu5rs}7r{cktcltcmtcntcotcpt4lt5os}fs{17sw5tw5ou5qu5rs}ft{17su5tu5ou5qu}7m{5os}fv{17su5tu5ou5qu}fw{17su5tu5ou5qu}fz{cksclscmscnscoscps4ls}}}"),
      Symbol: K("{'widths'{k3uaw4r19m3m2k1t2l2l202m2y2n3m2p5n202q6o3k3m2s2l2t2l2v3r2w1t3m3m2y1t2z1wbk2sbl3r'fof'6o3n3m3o3m3p3m3q3m3r3m3s3m3t3m3u1w3v1w3w3r3x3r3y3r3z2wbp3t3l3m5v2l5x2l5z3m2q4yfr3r7v3k7w1o7x3k}'kerning'{'fof'-6o}}"),
      Helvetica: K("{'widths'{k3p2q4mcx1w201n3r201o6o201s1q201t1q201u1q201w2l201x2l201y2l2k1w2l1w202m2n2n3r2o3r2p5t202q6o2r1n2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v1w3w3u3x3u3y3u3z3r4k6p4l4m4m4m4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3m4v4m4w3r4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v1w5w1w5x1w5y2z5z3r6k2l6l3r6m3r6n3m6o3r6p3r6q1w6r3r6s3r6t1q6u1q6v3m6w1q6x5n6y3r6z3r7k3r7l3r7m2l7n3m7o1w7p3r7q3m7r4s7s3m7t3m7u3m7v2l7w1u7x2l7y3u202l3rcl4mal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3rbr1wbs2lbu2obv3rbz3xck4m202k3rcm4mcn4mco4mcp4mcq6ocr4scs4mct4mcu4mcv4mcw1w2m2ncy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3mes3ret3reu3rev3rew1wex1wey1wez1wfl3rfm3rfn3rfo3rfp3rfq3rfr3ufs3xft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3r3u1w17s4m19m3r}'kerning'{5q{4wv}cl{4qs5kw5ow5qs17sv5tv}201t{2wu4w1k2yu}201x{2wu4wy2yu}17s{2ktclucmucnu4otcpu4lu4wycoucku}2w{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}2x{17sy5ty5oy5qs}2y{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}'fof'-6o7p{17sv5tv5ow}ck{4qs5kw5ow5qs17sv5tv}4l{4qs5kw5ow5qs17sv5tv}cm{4qs5kw5ow5qs17sv5tv}cn{4qs5kw5ow5qs17sv5tv}co{4qs5kw5ow5qs17sv5tv}cp{4qs5kw5ow5qs17sv5tv}6l{17sy5ty5ow}do{17st5tt}4z{17st5tt}7s{fst}dm{17st5tt}dn{17st5tt}5o{ckwclwcmwcnwcowcpw4lw4wv}dp{17st5tt}dq{17st5tt}7t{5ow}ds{17st5tt}5t{2ktclucmucnu4otcpu4lu4wycoucku}fu{17sv5tv5ow}6p{17sy5ty5ow5qs}ek{17sy5ty5ow}el{17sy5ty5ow}em{17sy5ty5ow}en{5ty}eo{17sy5ty5ow}ep{17sy5ty5ow}es{17sy5ty5qs}et{17sy5ty5ow5qs}eu{17sy5ty5ow5qs}ev{17sy5ty5ow5qs}6z{17sy5ty5ow5qs}fm{17sy5ty5ow5qs}fn{17sy5ty5ow5qs}fo{17sy5ty5ow5qs}fp{17sy5ty5qs}fq{17sy5ty5ow5qs}7r{5ow}fs{17sy5ty5ow5qs}ft{17sv5tv5ow}7m{5ow}fv{17sv5tv5ow}fw{17sv5tv5ow}}}"),
      "Helvetica-BoldOblique": K("{'widths'{k3s2q4scx1w201n3r201o6o201s1w201t1w201u1w201w3m201x3m201y3m2k1w2l2l202m2n2n3r2o3r2p5t202q6o2r1s2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v2l3w3u3x3u3y3u3z3x4k6l4l4s4m4s4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3r4v4s4w3x4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v2l5w1w5x2l5y3u5z3r6k2l6l3r6m3x6n3r6o3x6p3r6q2l6r3x6s3x6t1w6u1w6v3r6w1w6x5t6y3x6z3x7k3x7l3x7m2r7n3r7o2l7p3x7q3r7r4y7s3r7t3r7u3m7v2r7w1w7x2r7y3u202l3rcl4sal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3xbq3rbr1wbs2lbu2obv3rbz3xck4s202k3rcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw1w2m2zcy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3res3ret3reu3rev3rew1wex1wey1wez1wfl3xfm3xfn3xfo3xfp3xfq3xfr3ufs3xft3xfu3xfv3xfw3xfz3r203k6o212m6o2dw2l2cq2l3t3r3u2l17s4m19m3r}'kerning'{cl{4qs5ku5ot5qs17sv5tv}201t{2ww4wy2yw}201w{2ks}201x{2ww4wy2yw}2k{201ts201xs}2w{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}2x{5ow5qs}2y{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}'fof'-6o7p{17su5tu5ot}ck{4qs5ku5ot5qs17sv5tv}4l{4qs5ku5ot5qs17sv5tv}cm{4qs5ku5ot5qs17sv5tv}cn{4qs5ku5ot5qs17sv5tv}co{4qs5ku5ot5qs17sv5tv}cp{4qs5ku5ot5qs17sv5tv}6l{17st5tt5os}17s{2kwclvcmvcnvcovcpv4lv4wwckv}5o{2kucltcmtcntcotcpt4lt4wtckt}5q{2ksclscmscnscoscps4ls4wvcks}5r{2ks4ws}5t{2kwclvcmvcnvcovcpv4lv4wwckv}eo{17st5tt5os}fu{17su5tu5ot}6p{17ss5ts}ek{17st5tt5os}el{17st5tt5os}em{17st5tt5os}en{17st5tt5os}6o{201ts}ep{17st5tt5os}es{17ss5ts}et{17ss5ts}eu{17ss5ts}ev{17ss5ts}6z{17su5tu5os5qt}fm{17su5tu5os5qt}fn{17su5tu5os5qt}fo{17su5tu5os5qt}fp{17su5tu5os5qt}fq{17su5tu5os5qt}fs{17su5tu5os5qt}ft{17su5tu5ot}7m{5os}fv{17su5tu5ot}fw{17su5tu5ot}}}"),
      ZapfDingbats: K("{'widths'{k4u2k1w'fof'6o}'kerning'{'fof'-6o}}"),
      "Courier-Bold": K("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"),
      "Times-Italic": K("{'widths'{k3n2q4ycx2l201n3m201o5t201s2l201t2l201u2l201w3r201x3r201y3r2k1t2l2l202m2n2n3m2o3m2p5n202q5t2r1p2s2l2t2l2u3m2v4n2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w4n3x4n3y4n3z3m4k5w4l3x4m3x4n4m4o4s4p3x4q3x4r4s4s4s4t2l4u2w4v4m4w3r4x5n4y4m4z4s5k3x5l4s5m3x5n3m5o3r5p4s5q3x5r5n5s3x5t3r5u3r5v2r5w1w5x2r5y2u5z3m6k2l6l3m6m3m6n2w6o3m6p2w6q1w6r3m6s3m6t1w6u1w6v2w6w1w6x4s6y3m6z3m7k3m7l3m7m2r7n2r7o1w7p3m7q2w7r4m7s2w7t2w7u2r7v2s7w1v7x2s7y3q202l3mcl3xal2ram3man3mao3map3mar3mas2lat4wau1vav3maw4nay4waz2lbk2sbl4n'fof'6obo2lbp3mbq3obr1tbs2lbu1zbv3mbz3mck3x202k3mcm3xcn3xco3xcp3xcq5tcr4mcs3xct3xcu3xcv3xcw2l2m2ucy2lcz2ldl4mdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek3mel3mem3men3meo3mep3meq4mer2wes2wet2weu2wev2wew1wex1wey1wez1wfl3mfm3mfn3mfo3mfp3mfq3mfr4nfs3mft3mfu3mfv3mfw3mfz2w203k6o212m6m2dw2l2cq2l3t3m3u2l17s3r19m3m}'kerning'{cl{5kt4qw}201s{201sw}201t{201tw2wy2yy6q-t}201x{2wy2yy}2k{201tw}2w{7qs4qy7rs5ky7mw5os5qx5ru17su5tu}2x{17ss5ts5os}2y{7qs4qy7rs5ky7mw5os5qx5ru17su5tu}'fof'-6o6t{17ss5ts5qs}7t{5os}3v{5qs}7p{17su5tu5qs}ck{5kt4qw}4l{5kt4qw}cm{5kt4qw}cn{5kt4qw}co{5kt4qw}cp{5kt4qw}6l{4qs5ks5ou5qw5ru17su5tu}17s{2ks}5q{ckvclvcmvcnvcovcpv4lv}5r{ckuclucmucnucoucpu4lu}5t{2ks}6p{4qs5ks5ou5qw5ru17su5tu}ek{4qs5ks5ou5qw5ru17su5tu}el{4qs5ks5ou5qw5ru17su5tu}em{4qs5ks5ou5qw5ru17su5tu}en{4qs5ks5ou5qw5ru17su5tu}eo{4qs5ks5ou5qw5ru17su5tu}ep{4qs5ks5ou5qw5ru17su5tu}es{5ks5qs4qs}et{4qs5ks5ou5qw5ru17su5tu}eu{4qs5ks5qw5ru17su5tu}ev{5ks5qs4qs}ex{17ss5ts5qs}6z{4qv5ks5ou5qw5ru17su5tu}fm{4qv5ks5ou5qw5ru17su5tu}fn{4qv5ks5ou5qw5ru17su5tu}fo{4qv5ks5ou5qw5ru17su5tu}fp{4qv5ks5ou5qw5ru17su5tu}fq{4qv5ks5ou5qw5ru17su5tu}7r{5os}fs{4qv5ks5ou5qw5ru17su5tu}ft{17su5tu5qs}fu{17su5tu5qs}fv{17su5tu5qs}fw{17su5tu5qs}}}"),
      "Times-Roman": K("{'widths'{k3n2q4ycx2l201n3m201o6o201s2l201t2l201u2l201w2w201x2w201y2w2k1t2l2l202m2n2n3m2o3m2p5n202q6o2r1m2s2l2t2l2u3m2v3s2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v1w3w3s3x3s3y3s3z2w4k5w4l4s4m4m4n4m4o4s4p3x4q3r4r4s4s4s4t2l4u2r4v4s4w3x4x5t4y4s4z4s5k3r5l4s5m4m5n3r5o3x5p4s5q4s5r5y5s4s5t4s5u3x5v2l5w1w5x2l5y2z5z3m6k2l6l2w6m3m6n2w6o3m6p2w6q2l6r3m6s3m6t1w6u1w6v3m6w1w6x4y6y3m6z3m7k3m7l3m7m2l7n2r7o1w7p3m7q3m7r4s7s3m7t3m7u2w7v3k7w1o7x3k7y3q202l3mcl4sal2lam3man3mao3map3mar3mas2lat4wau1vav3maw3say4waz2lbk2sbl3s'fof'6obo2lbp3mbq2xbr1tbs2lbu1zbv3mbz2wck4s202k3mcm4scn4sco4scp4scq5tcr4mcs3xct3xcu3xcv3xcw2l2m2tcy2lcz2ldl4sdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek2wel2wem2wen2weo2wep2weq4mer2wes2wet2weu2wev2wew1wex1wey1wez1wfl3mfm3mfn3mfo3mfp3mfq3mfr3sfs3mft3mfu3mfv3mfw3mfz3m203k6o212m6m2dw2l2cq2l3t3m3u1w17s4s19m3m}'kerning'{cl{4qs5ku17sw5ou5qy5rw201ss5tw201ws}201s{201ss}201t{ckw4lwcmwcnwcowcpwclw4wu201ts}2k{201ts}2w{4qs5kw5os5qx5ru17sx5tx}2x{17sw5tw5ou5qu}2y{4qs5kw5os5qx5ru17sx5tx}'fof'-6o7t{ckuclucmucnucoucpu4lu5os5rs}3u{17su5tu5qs}3v{17su5tu5qs}7p{17sw5tw5qs}ck{4qs5ku17sw5ou5qy5rw201ss5tw201ws}4l{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cm{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cn{4qs5ku17sw5ou5qy5rw201ss5tw201ws}co{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cp{4qs5ku17sw5ou5qy5rw201ss5tw201ws}6l{17su5tu5os5qw5rs}17s{2ktclvcmvcnvcovcpv4lv4wuckv}5o{ckwclwcmwcnwcowcpw4lw4wu}5q{ckyclycmycnycoycpy4ly4wu5ms}5r{cktcltcmtcntcotcpt4lt4ws}5t{2ktclvcmvcnvcovcpv4lv4wuckv}7q{cksclscmscnscoscps4ls}6p{17su5tu5qw5rs}ek{5qs5rs}el{17su5tu5os5qw5rs}em{17su5tu5os5qs5rs}en{17su5qs5rs}eo{5qs5rs}ep{17su5tu5os5qw5rs}es{5qs}et{17su5tu5qw5rs}eu{17su5tu5qs5rs}ev{5qs}6z{17sv5tv5os5qx5rs}fm{5os5qt5rs}fn{17sv5tv5os5qx5rs}fo{17sv5tv5os5qx5rs}fp{5os5qt5rs}fq{5os5qt5rs}7r{ckuclucmucnucoucpu4lu5os}fs{17sv5tv5os5qx5rs}ft{17ss5ts5qs}fu{17sw5tw5qs}fv{17sw5tw5qs}fw{17ss5ts5qs}fz{ckuclucmucnucoucpu4lu5os5rs}}}"),
      "Helvetica-Oblique": K("{'widths'{k3p2q4mcx1w201n3r201o6o201s1q201t1q201u1q201w2l201x2l201y2l2k1w2l1w202m2n2n3r2o3r2p5t202q6o2r1n2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v1w3w3u3x3u3y3u3z3r4k6p4l4m4m4m4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3m4v4m4w3r4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v1w5w1w5x1w5y2z5z3r6k2l6l3r6m3r6n3m6o3r6p3r6q1w6r3r6s3r6t1q6u1q6v3m6w1q6x5n6y3r6z3r7k3r7l3r7m2l7n3m7o1w7p3r7q3m7r4s7s3m7t3m7u3m7v2l7w1u7x2l7y3u202l3rcl4mal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3rbr1wbs2lbu2obv3rbz3xck4m202k3rcm4mcn4mco4mcp4mcq6ocr4scs4mct4mcu4mcv4mcw1w2m2ncy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3mes3ret3reu3rev3rew1wex1wey1wez1wfl3rfm3rfn3rfo3rfp3rfq3rfr3ufs3xft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3r3u1w17s4m19m3r}'kerning'{5q{4wv}cl{4qs5kw5ow5qs17sv5tv}201t{2wu4w1k2yu}201x{2wu4wy2yu}17s{2ktclucmucnu4otcpu4lu4wycoucku}2w{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}2x{17sy5ty5oy5qs}2y{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}'fof'-6o7p{17sv5tv5ow}ck{4qs5kw5ow5qs17sv5tv}4l{4qs5kw5ow5qs17sv5tv}cm{4qs5kw5ow5qs17sv5tv}cn{4qs5kw5ow5qs17sv5tv}co{4qs5kw5ow5qs17sv5tv}cp{4qs5kw5ow5qs17sv5tv}6l{17sy5ty5ow}do{17st5tt}4z{17st5tt}7s{fst}dm{17st5tt}dn{17st5tt}5o{ckwclwcmwcnwcowcpw4lw4wv}dp{17st5tt}dq{17st5tt}7t{5ow}ds{17st5tt}5t{2ktclucmucnu4otcpu4lu4wycoucku}fu{17sv5tv5ow}6p{17sy5ty5ow5qs}ek{17sy5ty5ow}el{17sy5ty5ow}em{17sy5ty5ow}en{5ty}eo{17sy5ty5ow}ep{17sy5ty5ow}es{17sy5ty5qs}et{17sy5ty5ow5qs}eu{17sy5ty5ow5qs}ev{17sy5ty5ow5qs}6z{17sy5ty5ow5qs}fm{17sy5ty5ow5qs}fn{17sy5ty5ow5qs}fo{17sy5ty5ow5qs}fp{17sy5ty5qs}fq{17sy5ty5ow5qs}7r{5ow}fs{17sy5ty5ow5qs}ft{17sv5tv5ow}7m{5ow}fv{17sv5tv5ow}fw{17sv5tv5ow}}}")
    }
  }, X.events.push(["addFont", function (t) {
    var e,
        n,
        r,
        i = t.font,
        o = "Unicode";
    (e = $[o][i.postScriptName]) && ((n = i.metadata[o] ? i.metadata[o] : i.metadata[o] = {}).widths = e.widths, n.kerning = e.kerning), (r = Q[o][i.postScriptName]) && ((n = i.metadata[o] ? i.metadata[o] : i.metadata[o] = {}).encoding = r).codePages && r.codePages.length && (i.encoding = r.codePages[0]);
  }]),
  /**
     * @license
     * Licensed under the MIT License.
     * http://opensource.org/licenses/mit-license
     */
  tt = lt, "undefined" != typeof self && self || "undefined" != typeof global && global || "undefined" != typeof window && window || Function("return this")(), tt.API.events.push(["addFont", function (t) {
    var e = t.font,
        n = t.instance;

    if (void 0 !== n && n.existsFileInVFS(e.postScriptName)) {
      var r = n.getFileFromVFS(e.postScriptName);
      if ("string" != typeof r) throw new Error("Font is not stored as string-data in vFS, import fonts or remove declaration doc.addFont('" + e.postScriptName + "').");
      e.metadata = tt.API.TTFFont.open(e.postScriptName, e.fontName, r, e.encoding), e.metadata.Unicode = e.metadata.Unicode || {
        encoding: {},
        kerning: {},
        widths: []
      }, e.metadata.glyIdsUsed = [0];
    } else if (!1 === e.isStandardFont) throw new Error("Font does not exist in vFS, import fonts or remove declaration doc.addFont('" + e.postScriptName + "').");
  }]), (
  /** @license
     * Copyright (c) 2012 Willow Systems Corporation, willow-systems.com
     * 
     * 
     * ====================================================================
     */
  et = lt.API).addSvg = function (t, e, n, r, i) {
    if (void 0 === e || void 0 === n) throw new Error("addSVG needs values for 'x' and 'y'");

    function o(t) {
      for (var e = parseFloat(t[1]), n = parseFloat(t[2]), r = [], i = 3, o = t.length; i < o;) {
        "c" === t[i] ? (r.push([parseFloat(t[i + 1]), parseFloat(t[i + 2]), parseFloat(t[i + 3]), parseFloat(t[i + 4]), parseFloat(t[i + 5]), parseFloat(t[i + 6])]), i += 7) : "l" === t[i] ? (r.push([parseFloat(t[i + 1]), parseFloat(t[i + 2])]), i += 3) : i += 1;
      }

      return [e, n, r];
    }

    var a,
        s,
        l,
        h,
        u,
        c,
        f,
        p,
        d = (h = document, p = h.createElement("iframe"), u = ".jsPDF_sillysvg_iframe {display:none;position:absolute;}", (f = (c = h).createElement("style")).type = "text/css", f.styleSheet ? f.styleSheet.cssText = u : f.appendChild(c.createTextNode(u)), c.getElementsByTagName("head")[0].appendChild(f), p.name = "childframe", p.setAttribute("width", 0), p.setAttribute("height", 0), p.setAttribute("frameborder", "0"), p.setAttribute("scrolling", "no"), p.setAttribute("seamless", "seamless"), p.setAttribute("class", "jsPDF_sillysvg_iframe"), h.body.appendChild(p), p),
        g = (a = t, (l = ((s = d).contentWindow || s.contentDocument).document).write(a), l.close(), l.getElementsByTagName("svg")[0]),
        m = [1, 1],
        y = parseFloat(g.getAttribute("width")),
        v = parseFloat(g.getAttribute("height"));
    y && v && (r && i ? m = [r / y, i / v] : r ? m = [r / y, r / y] : i && (m = [i / v, i / v]));
    var w,
        b,
        x,
        N,
        L = g.childNodes;

    for (w = 0, b = L.length; w < b; w++) {
      (x = L[w]).tagName && "PATH" === x.tagName.toUpperCase() && ((N = o(x.getAttribute("d").split(" ")))[0] = N[0] * m[0] + e, N[1] = N[1] * m[1] + n, this.lines.call(this, N[2], N[0], N[1], m));
    }

    return this;
  }, et.addSVG = et.addSvg, et.addSvgAsImage = function (t, e, n, r, i, o, a, s) {
    if (isNaN(e) || isNaN(n)) throw console.error("jsPDF.addSvgAsImage: Invalid coordinates", arguments), new Error("Invalid coordinates passed to jsPDF.addSvgAsImage");
    if (isNaN(r) || isNaN(i)) throw console.error("jsPDF.addSvgAsImage: Invalid measurements", arguments), new Error("Invalid measurements (width and/or height) passed to jsPDF.addSvgAsImage");
    var l = document.createElement("canvas");
    l.width = r, l.height = i;
    var h = l.getContext("2d");
    return h.fillStyle = "#fff", h.fillRect(0, 0, l.width, l.height), canvg(l, t, {
      ignoreMouse: !0,
      ignoreAnimation: !0,
      ignoreDimensions: !0,
      ignoreClear: !0
    }), this.addImage(l.toDataURL("image/jpeg", 1), e, n, r, i, a, s), this;
  }, lt.API.putTotalPages = function (t) {
    var e,
        n = 0;
    n = parseInt(this.internal.getFont().id.substr(1), 10) < 15 ? (e = new RegExp(t, "g"), this.internal.getNumberOfPages()) : (e = new RegExp(this.pdfEscape16(t, this.internal.getFont()), "g"), this.pdfEscape16(this.internal.getNumberOfPages() + "", this.internal.getFont()));

    for (var r = 1; r <= this.internal.getNumberOfPages(); r++) {
      for (var i = 0; i < this.internal.pages[r].length; i++) {
        this.internal.pages[r][i] = this.internal.pages[r][i].replace(e, n);
      }
    }

    return this;
  }, lt.API.viewerPreferences = function (t, e) {
    var n;
    t = t || {}, e = e || !1;
    var r,
        i,
        o = {
      HideToolbar: {
        defaultValue: !1,
        value: !1,
        type: "boolean",
        explicitSet: !1,
        valueSet: [!0, !1],
        pdfVersion: 1.3
      },
      HideMenubar: {
        defaultValue: !1,
        value: !1,
        type: "boolean",
        explicitSet: !1,
        valueSet: [!0, !1],
        pdfVersion: 1.3
      },
      HideWindowUI: {
        defaultValue: !1,
        value: !1,
        type: "boolean",
        explicitSet: !1,
        valueSet: [!0, !1],
        pdfVersion: 1.3
      },
      FitWindow: {
        defaultValue: !1,
        value: !1,
        type: "boolean",
        explicitSet: !1,
        valueSet: [!0, !1],
        pdfVersion: 1.3
      },
      CenterWindow: {
        defaultValue: !1,
        value: !1,
        type: "boolean",
        explicitSet: !1,
        valueSet: [!0, !1],
        pdfVersion: 1.3
      },
      DisplayDocTitle: {
        defaultValue: !1,
        value: !1,
        type: "boolean",
        explicitSet: !1,
        valueSet: [!0, !1],
        pdfVersion: 1.4
      },
      NonFullScreenPageMode: {
        defaultValue: "UseNone",
        value: "UseNone",
        type: "name",
        explicitSet: !1,
        valueSet: ["UseNone", "UseOutlines", "UseThumbs", "UseOC"],
        pdfVersion: 1.3
      },
      Direction: {
        defaultValue: "L2R",
        value: "L2R",
        type: "name",
        explicitSet: !1,
        valueSet: ["L2R", "R2L"],
        pdfVersion: 1.3
      },
      ViewArea: {
        defaultValue: "CropBox",
        value: "CropBox",
        type: "name",
        explicitSet: !1,
        valueSet: ["MediaBox", "CropBox", "TrimBox", "BleedBox", "ArtBox"],
        pdfVersion: 1.4
      },
      ViewClip: {
        defaultValue: "CropBox",
        value: "CropBox",
        type: "name",
        explicitSet: !1,
        valueSet: ["MediaBox", "CropBox", "TrimBox", "BleedBox", "ArtBox"],
        pdfVersion: 1.4
      },
      PrintArea: {
        defaultValue: "CropBox",
        value: "CropBox",
        type: "name",
        explicitSet: !1,
        valueSet: ["MediaBox", "CropBox", "TrimBox", "BleedBox", "ArtBox"],
        pdfVersion: 1.4
      },
      PrintClip: {
        defaultValue: "CropBox",
        value: "CropBox",
        type: "name",
        explicitSet: !1,
        valueSet: ["MediaBox", "CropBox", "TrimBox", "BleedBox", "ArtBox"],
        pdfVersion: 1.4
      },
      PrintScaling: {
        defaultValue: "AppDefault",
        value: "AppDefault",
        type: "name",
        explicitSet: !1,
        valueSet: ["AppDefault", "None"],
        pdfVersion: 1.6
      },
      Duplex: {
        defaultValue: "",
        value: "none",
        type: "name",
        explicitSet: !1,
        valueSet: ["Simplex", "DuplexFlipShortEdge", "DuplexFlipLongEdge", "none"],
        pdfVersion: 1.7
      },
      PickTrayByPDFSize: {
        defaultValue: !1,
        value: !1,
        type: "boolean",
        explicitSet: !1,
        valueSet: [!0, !1],
        pdfVersion: 1.7
      },
      PrintPageRange: {
        defaultValue: "",
        value: "",
        type: "array",
        explicitSet: !1,
        valueSet: null,
        pdfVersion: 1.7
      },
      NumCopies: {
        defaultValue: 1,
        value: 1,
        type: "integer",
        explicitSet: !1,
        valueSet: null,
        pdfVersion: 1.7
      }
    },
        a = Object.keys(o),
        s = [],
        l = 0,
        h = 0,
        u = 0,
        c = !0;

    function f(t, e) {
      var n,
          r = !1;

      for (n = 0; n < t.length; n += 1) {
        t[n] === e && (r = !0);
      }

      return r;
    }

    if (void 0 === this.internal.viewerpreferences && (this.internal.viewerpreferences = {}, this.internal.viewerpreferences.configuration = JSON.parse(JSON.stringify(o)), this.internal.viewerpreferences.isSubscribed = !1), n = this.internal.viewerpreferences.configuration, "reset" === t || !0 === e) {
      var p = a.length;

      for (u = 0; u < p; u += 1) {
        n[a[u]].value = n[a[u]].defaultValue, n[a[u]].explicitSet = !1;
      }
    }

    if ("object" === se(t)) for (r in t) {
      if (i = t[r], f(a, r) && void 0 !== i) {
        if ("boolean" === n[r].type && "boolean" == typeof i) n[r].value = i;else if ("name" === n[r].type && f(n[r].valueSet, i)) n[r].value = i;else if ("integer" === n[r].type && Number.isInteger(i)) n[r].value = i;else if ("array" === n[r].type) {
          for (l = 0; l < i.length; l += 1) {
            if (c = !0, 1 === i[l].length && "number" == typeof i[l][0]) s.push(String(i[l] - 1));else if (1 < i[l].length) {
              for (h = 0; h < i[l].length; h += 1) {
                "number" != typeof i[l][h] && (c = !1);
              }

              !0 === c && s.push([i[l][0] - 1, i[l][1] - 1].join(" "));
            }
          }

          n[r].value = "[" + s.join(" ") + "]";
        } else n[r].value = n[r].defaultValue;
        n[r].explicitSet = !0;
      }
    }
    return !1 === this.internal.viewerpreferences.isSubscribed && (this.internal.events.subscribe("putCatalog", function () {
      var t,
          e = [];

      for (t in n) {
        !0 === n[t].explicitSet && ("name" === n[t].type ? e.push("/" + t + " /" + n[t].value) : e.push("/" + t + " " + n[t].value));
      }

      0 !== e.length && this.internal.write("/ViewerPreferences\n<<\n" + e.join("\n") + "\n>>");
    }), this.internal.viewerpreferences.isSubscribed = !0), this.internal.viewerpreferences.configuration = n, this;
  },
  /** ==================================================================== 
     * jsPDF XMP metadata plugin
     * Copyright (c) 2016 Jussi Utunen, u-jussi@suomi24.fi
     * 
     * 
     * ====================================================================
     */
  nt = lt.API, ot = it = rt = "", nt.addMetadata = function (t, e) {
    return it = e || "http://jspdf.default.namespaceuri/", rt = t, this.internal.events.subscribe("postPutResources", function () {
      if (rt) {
        var t = '<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"><rdf:Description rdf:about="" xmlns:jspdf="' + it + '"><jspdf:metadata>',
            e = unescape(encodeURIComponent('<x:xmpmeta xmlns:x="adobe:ns:meta/">')),
            n = unescape(encodeURIComponent(t)),
            r = unescape(encodeURIComponent(rt)),
            i = unescape(encodeURIComponent("</jspdf:metadata></rdf:Description></rdf:RDF>")),
            o = unescape(encodeURIComponent("</x:xmpmeta>")),
            a = n.length + r.length + i.length + e.length + o.length;
        ot = this.internal.newObject(), this.internal.write("<< /Type /Metadata /Subtype /XML /Length " + a + " >>"), this.internal.write("stream"), this.internal.write(e + n + r + i + o), this.internal.write("endstream"), this.internal.write("endobj");
      } else ot = "";
    }), this.internal.events.subscribe("putCatalog", function () {
      ot && this.internal.write("/Metadata " + ot + " 0 R");
    }), this;
  }, function (f, t) {
    var e = f.API;

    var m = e.pdfEscape16 = function (t, e) {
      for (var n, r = e.metadata.Unicode.widths, i = ["", "0", "00", "000", "0000"], o = [""], a = 0, s = t.length; a < s; ++a) {
        if (n = e.metadata.characterToGlyph(t.charCodeAt(a)), e.metadata.glyIdsUsed.push(n), e.metadata.toUnicode[n] = t.charCodeAt(a), -1 == r.indexOf(n) && (r.push(n), r.push([parseInt(e.metadata.widthOfGlyph(n), 10)])), "0" == n) return o.join("");
        n = n.toString(16), o.push(i[4 - n.length], n);
      }

      return o.join("");
    },
        p = function p(t) {
      var e, n, r, i, o, a, s;

      for (o = "/CIDInit /ProcSet findresource begin\n12 dict begin\nbegincmap\n/CIDSystemInfo <<\n  /Registry (Adobe)\n  /Ordering (UCS)\n  /Supplement 0\n>> def\n/CMapName /Adobe-Identity-UCS def\n/CMapType 2 def\n1 begincodespacerange\n<0000><ffff>\nendcodespacerange", r = [], a = 0, s = (n = Object.keys(t).sort(function (t, e) {
        return t - e;
      })).length; a < s; a++) {
        e = n[a], 100 <= r.length && (o += "\n" + r.length + " beginbfchar\n" + r.join("\n") + "\nendbfchar", r = []), i = ("0000" + t[e].toString(16)).slice(-4), e = ("0000" + (+e).toString(16)).slice(-4), r.push("<" + e + "><" + i + ">");
      }

      return r.length && (o += "\n" + r.length + " beginbfchar\n" + r.join("\n") + "\nendbfchar\n"), o += "endcmap\nCMapName currentdict /CMap defineresource pop\nend\nend";
    };

    e.events.push(["putFont", function (t) {
      !function (t, e, n, r) {
        if (t.metadata instanceof f.API.TTFFont && "Identity-H" === t.encoding) {
          for (var i = t.metadata.Unicode.widths, o = t.metadata.subset.encode(t.metadata.glyIdsUsed, 1), a = "", s = 0; s < o.length; s++) {
            a += String.fromCharCode(o[s]);
          }

          var l = n();
          r({
            data: a,
            addLength1: !0
          }), e("endobj");
          var h = n();
          r({
            data: p(t.metadata.toUnicode),
            addLength1: !0
          }), e("endobj");
          var u = n();
          e("<<"), e("/Type /FontDescriptor"), e("/FontName /" + t.fontName), e("/FontFile2 " + l + " 0 R"), e("/FontBBox " + f.API.PDFObject.convert(t.metadata.bbox)), e("/Flags " + t.metadata.flags), e("/StemV " + t.metadata.stemV), e("/ItalicAngle " + t.metadata.italicAngle), e("/Ascent " + t.metadata.ascender), e("/Descent " + t.metadata.decender), e("/CapHeight " + t.metadata.capHeight), e(">>"), e("endobj");
          var c = n();
          e("<<"), e("/Type /Font"), e("/BaseFont /" + t.fontName), e("/FontDescriptor " + u + " 0 R"), e("/W " + f.API.PDFObject.convert(i)), e("/CIDToGIDMap /Identity"), e("/DW 1000"), e("/Subtype /CIDFontType2"), e("/CIDSystemInfo"), e("<<"), e("/Supplement 0"), e("/Registry (Adobe)"), e("/Ordering (" + t.encoding + ")"), e(">>"), e(">>"), e("endobj"), t.objectNumber = n(), e("<<"), e("/Type /Font"), e("/Subtype /Type0"), e("/ToUnicode " + h + " 0 R"), e("/BaseFont /" + t.fontName), e("/Encoding /" + t.encoding), e("/DescendantFonts [" + c + " 0 R]"), e(">>"), e("endobj"), t.isAlreadyPutted = !0;
        }
      }(t.font, t.out, t.newObject, t.putStream);
    }]);
    e.events.push(["putFont", function (t) {
      !function (t, e, n, r) {
        if (t.metadata instanceof f.API.TTFFont && "WinAnsiEncoding" === t.encoding) {
          t.metadata.Unicode.widths;

          for (var i = t.metadata.rawData, o = "", a = 0; a < i.length; a++) {
            o += String.fromCharCode(i[a]);
          }

          var s = n();
          r({
            data: o,
            addLength1: !0
          }), e("endobj");
          var l = n();
          r({
            data: p(t.metadata.toUnicode),
            addLength1: !0
          }), e("endobj");
          var h = n();

          for (e("<<"), e("/Descent " + t.metadata.decender), e("/CapHeight " + t.metadata.capHeight), e("/StemV " + t.metadata.stemV), e("/Type /FontDescriptor"), e("/FontFile2 " + s + " 0 R"), e("/Flags 96"), e("/FontBBox " + f.API.PDFObject.convert(t.metadata.bbox)), e("/FontName /" + t.fontName), e("/ItalicAngle " + t.metadata.italicAngle), e("/Ascent " + t.metadata.ascender), e(">>"), e("endobj"), t.objectNumber = n(), a = 0; a < t.metadata.hmtx.widths.length; a++) {
            t.metadata.hmtx.widths[a] = parseInt(t.metadata.hmtx.widths[a] * (1e3 / t.metadata.head.unitsPerEm));
          }

          e("<</Subtype/TrueType/Type/Font/ToUnicode " + l + " 0 R/BaseFont/" + t.fontName + "/FontDescriptor " + h + " 0 R/Encoding/" + t.encoding + " /FirstChar 29 /LastChar 255 /Widths " + f.API.PDFObject.convert(t.metadata.hmtx.widths) + ">>"), e("endobj"), t.isAlreadyPutted = !0;
        }
      }(t.font, t.out, t.newObject, t.putStream);
    }]);

    var h = function h(t) {
      var e,
          n,
          r = t.text || "",
          i = t.x,
          o = t.y,
          a = t.options || {},
          s = t.mutex || {},
          l = s.pdfEscape,
          h = s.activeFontKey,
          u = s.fonts,
          c = (s.activeFontSize, ""),
          f = 0,
          p = "",
          d = u[n = h].encoding;
      if ("Identity-H" !== u[n].encoding) return {
        text: r,
        x: i,
        y: o,
        options: a,
        mutex: s
      };

      for (p = r, n = h, "[object Array]" === Object.prototype.toString.call(r) && (p = r[0]), f = 0; f < p.length; f += 1) {
        u[n].metadata.hasOwnProperty("cmap") && (e = u[n].metadata.cmap.unicode.codeMap[p[f].charCodeAt(0)]), e ? c += p[f] : p[f].charCodeAt(0) < 256 && u[n].metadata.hasOwnProperty("Unicode") ? c += p[f] : c += "";
      }

      var g = "";
      return parseInt(n.slice(1)) < 14 || "WinAnsiEncoding" === d ? g = function (t) {
        for (var e = "", n = 0; n < t.length; n++) {
          e += "" + t.charCodeAt(n).toString(16);
        }

        return e;
      }(l(c, n)) : "Identity-H" === d && (g = m(c, u[n])), s.isHex = !0, {
        text: g,
        x: i,
        y: o,
        options: a,
        mutex: s
      };
    };

    e.events.push(["postProcessText", function (t) {
      var e = t.text || "",
          n = t.x,
          r = t.y,
          i = t.options,
          o = t.mutex,
          a = (i.lang, []),
          s = {
        text: e,
        x: n,
        y: r,
        options: i,
        mutex: o
      };

      if ("[object Array]" === Object.prototype.toString.call(e)) {
        var l = 0;

        for (l = 0; l < e.length; l += 1) {
          "[object Array]" === Object.prototype.toString.call(e[l]) && 3 === e[l].length ? a.push([h(Object.assign({}, s, {
            text: e[l][0]
          })).text, e[l][1], e[l][2]]) : a.push(h(Object.assign({}, s, {
            text: e[l]
          })).text);
        }

        t.text = a;
      } else t.text = h(Object.assign({}, s, {
        text: e
      })).text;
    }]);
  }(lt, "undefined" != typeof self && self || "undefined" != typeof global && global || "undefined" != typeof window && window || Function("return this")()), at = lt.API, st = function st(t) {
    return void 0 !== t && (void 0 === t.vFS && (t.vFS = {}), !0);
  }, at.existsFileInVFS = function (t) {
    return !!st(this.internal) && void 0 !== this.internal.vFS[t];
  }, at.addFileToVFS = function (t, e) {
    return st(this.internal), this.internal.vFS[t] = e, this;
  }, at.getFileFromVFS = function (t) {
    return st(this.internal), void 0 !== this.internal.vFS[t] ? this.internal.vFS[t] : null;
  }, lt.API.addHTML = function (t, d, g, s, m) {
    if ("undefined" == typeof html2canvas && "undefined" == typeof rasterizeHTML) throw new Error("You need either https://github.com/niklasvh/html2canvas or https://github.com/cburgmer/rasterizeHTML.js");
    "number" != typeof d && (s = d, m = g), "function" == typeof s && (m = s, s = null), "function" != typeof m && (m = function m() {});
    var e = this.internal,
        y = e.scaleFactor,
        v = e.pageSize.getWidth(),
        w = e.pageSize.getHeight();
    if ((s = s || {}).onrendered = function (l) {
      d = parseInt(d) || 0, g = parseInt(g) || 0;
      var t = s.dim || {},
          h = Object.assign({
        top: 0,
        right: 0,
        bottom: 0,
        left: 0,
        useFor: "content"
      }, s.margin),
          e = t.h || Math.min(w, l.height / y),
          u = t.w || Math.min(v, l.width / y) - d,
          c = s.format || "JPEG",
          f = s.imageCompression || "SLOW";

      if (l.height > w - h.top - h.bottom && s.pagesplit) {
        var p = function p(t, e, n, r, i) {
          var o = document.createElement("canvas");
          o.height = i, o.width = r;
          var a = o.getContext("2d");
          return a.mozImageSmoothingEnabled = !1, a.webkitImageSmoothingEnabled = !1, a.msImageSmoothingEnabled = !1, a.imageSmoothingEnabled = !1, a.fillStyle = s.backgroundColor || "#ffffff", a.fillRect(0, 0, r, i), a.drawImage(t, e, n, r, i, 0, 0, r, i), o;
        },
            n = function () {
          for (var t, e, n = 0, r = 0, i = {}, o = !1;;) {
            var a;
            if (r = 0, i.top = 0 !== n ? h.top : g, i.left = 0 !== n ? h.left : d, o = (v - h.left - h.right) * y < l.width, "content" === h.useFor ? 0 === n ? (t = Math.min((v - h.left) * y, l.width), e = Math.min((w - h.top) * y, l.height - n)) : (t = Math.min(v * y, l.width), e = Math.min(w * y, l.height - n), i.top = 0) : (t = Math.min((v - h.left - h.right) * y, l.width), e = Math.min((w - h.bottom - h.top) * y, l.height - n)), o) for (;;) {
              "content" === h.useFor && (0 === r ? t = Math.min((v - h.left) * y, l.width) : (t = Math.min(v * y, l.width - r), i.left = 0));
              var s = [a = p(l, r, n, t, e), i.left, i.top, a.width / y, a.height / y, c, null, f];
              if (this.addImage.apply(this, s), (r += t) >= l.width) break;
              this.addPage();
            } else s = [a = p(l, 0, n, t, e), i.left, i.top, a.width / y, a.height / y, c, null, f], this.addImage.apply(this, s);
            if ((n += e) >= l.height) break;
            this.addPage();
          }

          m(u, n, null, s);
        }.bind(this);

        if ("CANVAS" === l.nodeName) {
          var r = new Image();
          r.onload = n, r.src = l.toDataURL("image/png"), l = r;
        } else n();
      } else {
        var i = Math.random().toString(35),
            o = [l, d, g, u, e, c, i, f];
        this.addImage.apply(this, o), m(u, e, i, o);
      }
    }.bind(this), "undefined" != typeof html2canvas && !s.rstz) return html2canvas(t, s);
    if ("undefined" == typeof rasterizeHTML) return null;
    var n = "drawDocument";
    return "string" == typeof t && (n = /^http/.test(t) ? "drawURL" : "drawHTML"), s.width = s.width || v * y, rasterizeHTML[n](t, void 0, s).then(function (t) {
      s.onrendered(t.image);
    }, function (t) {
      m(null, t);
    });
  },
  /**
     * jsPDF fromHTML plugin. BETA stage. API subject to change. Needs browser
     * Copyright (c) 2012 Willow Systems Corporation, willow-systems.com
     *               2014 Juan Pablo Gaviria, https://github.com/juanpgaviria
     *               2014 Diego Casorran, https://github.com/diegocr
     *               2014 Daniel Husar, https://github.com/danielhusar
     *               2014 Wolfgang Gassler, https://github.com/woolfg
     *               2014 Steven Spungin, https://github.com/flamenco
     *
     * @license
     * 
     * ====================================================================
     */
  function (t) {
    var P, _k, i, a, s, l, h, u, I, w, f, c, p, n, C, B, d, g, m, j;

    P = function () {
      return function (t) {
        return e.prototype = t, new e();
      };

      function e() {}
    }(), w = function w(t) {
      var e, n, r, i, o, a, s;

      for (n = 0, r = t.length, e = void 0, a = i = !1; !i && n !== r;) {
        (e = t[n] = t[n].trimLeft()) && (i = !0), n++;
      }

      for (n = r - 1; r && !a && -1 !== n;) {
        (e = t[n] = t[n].trimRight()) && (a = !0), n--;
      }

      for (o = /\s+$/g, s = !0, n = 0; n !== r;) {
        "\u2028" != t[n] && (e = t[n].replace(/\s+/g, " "), s && (e = e.trimLeft()), e && (s = o.test(e)), t[n] = e), n++;
      }

      return t;
    }, c = function c(t) {
      var e, n, r;

      for (e = void 0, n = (r = t.split(",")).shift(); !e && n;) {
        e = i[n.trim().toLowerCase()], n = r.shift();
      }

      return e;
    }, p = function p(t) {
      var e;
      return -1 < (t = "auto" === t ? "0px" : t).indexOf("em") && !isNaN(Number(t.replace("em", ""))) && (t = 18.719 * Number(t.replace("em", "")) + "px"), -1 < t.indexOf("pt") && !isNaN(Number(t.replace("pt", ""))) && (t = 1.333 * Number(t.replace("pt", "")) + "px"), void 0, 16, (e = n[t]) ? e : void 0 !== (e = {
        "xx-small": 9,
        "x-small": 11,
        small: 13,
        medium: 16,
        large: 19,
        "x-large": 23,
        "xx-large": 28,
        auto: 0
      }[t]) ? n[t] = e / 16 : (e = parseFloat(t)) ? n[t] = e / 16 : (e = t.match(/([\d\.]+)(px)/), Array.isArray(e) && 3 === e.length ? n[t] = parseFloat(e[1]) / 16 : n[t] = 1);
    }, I = function I(t) {
      var e, n, r, i, o;
      return o = t, i = document.defaultView && document.defaultView.getComputedStyle ? document.defaultView.getComputedStyle(o, null) : o.currentStyle ? o.currentStyle : o.style, n = void 0, (e = {})["font-family"] = c((r = function r(t) {
        return t = t.replace(/-\D/g, function (t) {
          return t.charAt(1).toUpperCase();
        }), i[t];
      })("font-family")) || "times", e["font-style"] = a[r("font-style")] || "normal", e["text-align"] = s[r("text-align")] || "left", "bold" === (n = l[r("font-weight")] || "normal") && ("normal" === e["font-style"] ? e["font-style"] = n : e["font-style"] = n + e["font-style"]), e["font-size"] = p(r("font-size")) || 1, e["line-height"] = p(r("line-height")) || 1, e.display = "inline" === r("display") ? "inline" : "block", n = "block" === e.display, e["margin-top"] = n && p(r("margin-top")) || 0, e["margin-bottom"] = n && p(r("margin-bottom")) || 0, e["padding-top"] = n && p(r("padding-top")) || 0, e["padding-bottom"] = n && p(r("padding-bottom")) || 0, e["margin-left"] = n && p(r("margin-left")) || 0, e["margin-right"] = n && p(r("margin-right")) || 0, e["padding-left"] = n && p(r("padding-left")) || 0, e["padding-right"] = n && p(r("padding-right")) || 0, e["page-break-before"] = r("page-break-before") || "auto", e.float = h[r("cssFloat")] || "none", e.clear = u[r("clear")] || "none", e.color = r("color"), e;
    }, C = function C(t, e, n) {
      var r, i, o, a, s;
      if (o = !1, a = i = void 0, r = n["#" + t.id]) if ("function" == typeof r) o = r(t, e);else for (i = 0, a = r.length; !o && i !== a;) {
        o = r[i](t, e), i++;
      }
      if (r = n[t.nodeName], !o && r) if ("function" == typeof r) o = r(t, e);else for (i = 0, a = r.length; !o && i !== a;) {
        o = r[i](t, e), i++;
      }

      for (s = "string" == typeof t.className ? t.className.split(" ") : [], i = 0; i < s.length; i++) {
        if (r = n["." + s[i]], !o && r) if ("function" == typeof r) o = r(t, e);else for (i = 0, a = r.length; !o && i !== a;) {
          o = r[i](t, e), i++;
        }
      }

      return o;
    }, j = function j(t, e) {
      var n, r, i, o, a, s, l, h, u;

      for (n = [], r = [], i = 0, u = t.rows[0].cells.length, l = t.clientWidth; i < u;) {
        h = t.rows[0].cells[i], r[i] = {
          name: h.textContent.toLowerCase().replace(/\s+/g, ""),
          prompt: h.textContent.replace(/\r?\n/g, ""),
          width: h.clientWidth / l * e.pdf.internal.pageSize.getWidth()
        }, i++;
      }

      for (i = 1; i < t.rows.length;) {
        for (s = t.rows[i], a = {}, o = 0; o < s.cells.length;) {
          a[r[o].name] = s.cells[o].textContent.replace(/\r?\n/g, ""), o++;
        }

        n.push(a), i++;
      }

      return {
        rows: n,
        headers: r
      };
    };
    var E = {
      SCRIPT: 1,
      STYLE: 1,
      NOSCRIPT: 1,
      OBJECT: 1,
      EMBED: 1,
      SELECT: 1
    },
        M = 1;
    _k = function k(t, i, e) {
      var n, r, o, a, s, l, h, u;

      for (r = t.childNodes, n = void 0, (s = "block" === (o = I(t)).display) && (i.setBlockBoundary(), i.setBlockStyle(o)), a = 0, l = r.length; a < l;) {
        if ("object" === se(n = r[a])) {
          if (i.executeWatchFunctions(n), 1 === n.nodeType && "HEADER" === n.nodeName) {
            var c = n,
                f = i.pdf.margins_doc.top;
            i.pdf.internal.events.subscribe("addPage", function (t) {
              i.y = f, _k(c, i, e), i.pdf.margins_doc.top = i.y + 10, i.y += 10;
            }, !1);
          }

          if (8 === n.nodeType && "#comment" === n.nodeName) ~n.textContent.indexOf("ADD_PAGE") && (i.pdf.addPage(), i.y = i.pdf.margins_doc.top);else if (1 !== n.nodeType || E[n.nodeName]) {
            if (3 === n.nodeType) {
              var p = n.nodeValue;
              if (n.nodeValue && "LI" === n.parentNode.nodeName) if ("OL" === n.parentNode.parentNode.nodeName) p = M++ + ". " + p;else {
                var d = o["font-size"],
                    g = (3 - .75 * d) * i.pdf.internal.scaleFactor,
                    m = .75 * d * i.pdf.internal.scaleFactor,
                    y = 1.74 * d / i.pdf.internal.scaleFactor;

                u = function u(t, e) {
                  this.pdf.circle(t + g, e + m, y, "FD");
                };
              }
              16 & n.ownerDocument.body.compareDocumentPosition(n) && i.addText(p, o);
            } else "string" == typeof n && i.addText(n, o);
          } else {
            var v;

            if ("IMG" === n.nodeName) {
              var w = n.getAttribute("src");
              v = B[i.pdf.sHashCode(w) || w];
            }

            if (v) {
              i.pdf.internal.pageSize.getHeight() - i.pdf.margins_doc.bottom < i.y + n.height && i.y > i.pdf.margins_doc.top && (i.pdf.addPage(), i.y = i.pdf.margins_doc.top, i.executeWatchFunctions(n));

              var b = I(n),
                  x = i.x,
                  N = 12 / i.pdf.internal.scaleFactor,
                  L = (b["margin-left"] + b["padding-left"]) * N,
                  A = (b["margin-right"] + b["padding-right"]) * N,
                  S = (b["margin-top"] + b["padding-top"]) * N,
                  _ = (b["margin-bottom"] + b["padding-bottom"]) * N;

              void 0 !== b.float && "right" === b.float ? x += i.settings.width - n.width - A : x += L, i.pdf.addImage(v, x, i.y + S, n.width, n.height), v = void 0, "right" === b.float || "left" === b.float ? (i.watchFunctions.push(function (t, e, n, r) {
                return i.y >= e ? (i.x += t, i.settings.width += n, !0) : !!(r && 1 === r.nodeType && !E[r.nodeName] && i.x + r.width > i.pdf.margins_doc.left + i.pdf.margins_doc.width) && (i.x += t, i.y = e, i.settings.width += n, !0);
              }.bind(this, "left" === b.float ? -n.width - L - A : 0, i.y + n.height + S + _, n.width)), i.watchFunctions.push(function (t, e, n) {
                return !(i.y < t && e === i.pdf.internal.getNumberOfPages()) || 1 === n.nodeType && "both" === I(n).clear && (i.y = t, !0);
              }.bind(this, i.y + n.height, i.pdf.internal.getNumberOfPages())), i.settings.width -= n.width + L + A, "left" === b.float && (i.x += n.width + L + A)) : i.y += n.height + S + _;
            } else if ("TABLE" === n.nodeName) h = j(n, i), i.y += 10, i.pdf.table(i.x, i.y, h.rows, h.headers, {
              autoSize: !1,
              printHeaders: e.printHeaders,
              margins: i.pdf.margins_doc,
              css: I(n)
            }), i.y = i.pdf.lastCellPos.y + i.pdf.lastCellPos.h + 20;else if ("OL" === n.nodeName || "UL" === n.nodeName) M = 1, C(n, i, e) || _k(n, i, e), i.y += 10;else if ("LI" === n.nodeName) {
              var F = i.x;
              i.x += 20 / i.pdf.internal.scaleFactor, i.y += 3, C(n, i, e) || _k(n, i, e), i.x = F;
            } else "BR" === n.nodeName ? (i.y += o["font-size"] * i.pdf.internal.scaleFactor, i.addText("\u2028", P(o))) : C(n, i, e) || _k(n, i, e);
          }
        }

        a++;
      }

      if (e.outY = i.y, s) return i.setBlockBoundary(u);
    }, B = {}, d = function d(t, o, e, n) {
      var a,
          r = t.getElementsByTagName("img"),
          i = r.length,
          s = 0;

      function l() {
        o.pdf.internal.events.publish("imagesLoaded"), n(a);
      }

      function h(e, n, r) {
        if (e) {
          var i = new Image();
          a = ++s, i.crossOrigin = "", i.onerror = i.onload = function () {
            if (i.complete && (0 === i.src.indexOf("data:image/") && (i.width = n || i.width || 0, i.height = r || i.height || 0), i.width + i.height)) {
              var t = o.pdf.sHashCode(e) || e;
              B[t] = B[t] || i;
            }

            --s || l();
          }, i.src = e;
        }
      }

      for (; i--;) {
        h(r[i].getAttribute("src"), r[i].width, r[i].height);
      }

      return s || l();
    }, g = function g(t, o, a) {
      var s = t.getElementsByTagName("footer");

      if (0 < s.length) {
        s = s[0];
        var e = o.pdf.internal.write,
            n = o.y;
        o.pdf.internal.write = function () {}, _k(s, o, a);
        var l = Math.ceil(o.y - n) + 5;
        o.y = n, o.pdf.internal.write = e, o.pdf.margins_doc.bottom += l;

        for (var r = function r(t) {
          var e = void 0 !== t ? t.pageNumber : 1,
              n = o.y;
          o.y = o.pdf.internal.pageSize.getHeight() - o.pdf.margins_doc.bottom, o.pdf.margins_doc.bottom -= l;

          for (var r = s.getElementsByTagName("span"), i = 0; i < r.length; ++i) {
            -1 < (" " + r[i].className + " ").replace(/[\n\t]/g, " ").indexOf(" pageCounter ") && (r[i].innerHTML = e), -1 < (" " + r[i].className + " ").replace(/[\n\t]/g, " ").indexOf(" totalPages ") && (r[i].innerHTML = "###jsPDFVarTotalPages###");
          }

          _k(s, o, a), o.pdf.margins_doc.bottom += l, o.y = n;
        }, i = s.getElementsByTagName("span"), h = 0; h < i.length; ++h) {
          -1 < (" " + i[h].className + " ").replace(/[\n\t]/g, " ").indexOf(" totalPages ") && o.pdf.internal.events.subscribe("htmlRenderingFinished", o.pdf.putTotalPages.bind(o.pdf, "###jsPDFVarTotalPages###"), !0);
        }

        o.pdf.internal.events.subscribe("addPage", r, !1), r(), E.FOOTER = 1;
      }
    }, m = function m(t, e, n, r, i, o) {
      if (!e) return !1;
      var a, s, l, h;
      "string" == typeof e || e.parentNode || (e = "" + e.innerHTML), "string" == typeof e && (a = e.replace(/<\/?script[^>]*?>/gi, ""), h = "jsPDFhtmlText" + Date.now().toString() + (1e3 * Math.random()).toFixed(0), (l = document.createElement("div")).style.cssText = "position: absolute !important;clip: rect(1px 1px 1px 1px); /* IE6, IE7 */clip: rect(1px, 1px, 1px, 1px);padding:0 !important;border:0 !important;height: 1px !important;width: 1px !important; top:auto;left:-100px;overflow: hidden;", l.innerHTML = '<iframe style="height:1px;width:1px" name="' + h + '" />', document.body.appendChild(l), (s = window.frames[h]).document.open(), s.document.writeln(a), s.document.close(), e = s.document.body);
      var u,
          c = new f(t, n, r, i);
      return d.call(this, e, c, i.elementHandlers, function (t) {
        g(e, c, i.elementHandlers), _k(e, c, i.elementHandlers), c.pdf.internal.events.publish("htmlRenderingFinished"), u = c.dispose(), "function" == typeof o ? o(u) : t && console.error("jsPDF Warning: rendering issues? provide a callback to fromHTML!");
      }), u || {
        x: c.x,
        y: c.y
      };
    }, (f = function f(t, e, n, r) {
      return this.pdf = t, this.x = e, this.y = n, this.settings = r, this.watchFunctions = [], this.init(), this;
    }).prototype.init = function () {
      return this.paragraph = {
        text: [],
        style: []
      }, this.pdf.internal.write("q");
    }, f.prototype.dispose = function () {
      return this.pdf.internal.write("Q"), {
        x: this.x,
        y: this.y,
        ready: !0
      };
    }, f.prototype.executeWatchFunctions = function (t) {
      var e = !1,
          n = [];

      if (0 < this.watchFunctions.length) {
        for (var r = 0; r < this.watchFunctions.length; ++r) {
          !0 === this.watchFunctions[r](t) ? e = !0 : n.push(this.watchFunctions[r]);
        }

        this.watchFunctions = n;
      }

      return e;
    }, f.prototype.splitFragmentsIntoLines = function (t, e) {
      var n, r, i, o, a, s, l, h, u, c, f, p, d, g;

      for (12, c = this.pdf.internal.scaleFactor, o = {}, s = l = h = g = a = i = u = r = void 0, p = [f = []], n = 0, d = this.settings.width; t.length;) {
        if (a = t.shift(), g = e.shift(), a) if ((i = o[(r = g["font-family"]) + (u = g["font-style"])]) || (i = this.pdf.internal.getFont(r, u).metadata.Unicode, o[r + u] = i), h = {
          widths: i.widths,
          kerning: i.kerning,
          fontSize: 12 * g["font-size"],
          textIndent: n
        }, l = this.pdf.getStringUnitWidth(a, h) * h.fontSize / c, "\u2028" == a) f = [], p.push(f);else if (d < n + l) {
          for (s = this.pdf.splitTextToSize(a, d, h), f.push([s.shift(), g]); s.length;) {
            f = [[s.shift(), g]], p.push(f);
          }

          n = this.pdf.getStringUnitWidth(f[0][0], h) * h.fontSize / c;
        } else f.push([a, g]), n += l;
      }

      if (void 0 !== g["text-align"] && ("center" === g["text-align"] || "right" === g["text-align"] || "justify" === g["text-align"])) for (var m = 0; m < p.length; ++m) {
        var y = this.pdf.getStringUnitWidth(p[m][0][0], h) * h.fontSize / c;
        0 < m && (p[m][0][1] = P(p[m][0][1]));
        var v = d - y;
        if ("right" === g["text-align"]) p[m][0][1]["margin-left"] = v;else if ("center" === g["text-align"]) p[m][0][1]["margin-left"] = v / 2;else if ("justify" === g["text-align"]) {
          var w = p[m][0][0].split(" ").length - 1;
          p[m][0][1]["word-spacing"] = v / w, m === p.length - 1 && (p[m][0][1]["word-spacing"] = 0);
        }
      }
      return p;
    }, f.prototype.RenderTextFragment = function (t, e) {
      var n, r;
      r = 0, this.pdf.internal.pageSize.getHeight() - this.pdf.margins_doc.bottom < this.y + this.pdf.internal.getFontSize() && (this.pdf.internal.write("ET", "Q"), this.pdf.addPage(), this.y = this.pdf.margins_doc.top, this.pdf.internal.write("q", "BT", this.getPdfColor(e.color), this.pdf.internal.getCoordinateString(this.x), this.pdf.internal.getVerticalCoordinateString(this.y), "Td"), r = Math.max(r, e["line-height"], e["font-size"]), this.pdf.internal.write(0, (-12 * r).toFixed(2), "Td")), n = this.pdf.internal.getFont(e["font-family"], e["font-style"]);
      var i = this.getPdfColor(e.color);
      i !== this.lastTextColor && (this.pdf.internal.write(i), this.lastTextColor = i), void 0 !== e["word-spacing"] && 0 < e["word-spacing"] && this.pdf.internal.write(e["word-spacing"].toFixed(2), "Tw"), this.pdf.internal.write("/" + n.id, (12 * e["font-size"]).toFixed(2), "Tf", "(" + this.pdf.internal.pdfEscape(t) + ") Tj"), void 0 !== e["word-spacing"] && this.pdf.internal.write(0, "Tw");
    }, f.prototype.getPdfColor = function (t) {
      var e,
          n,
          r,
          i = /rgb\s*\(\s*(\d+),\s*(\d+),\s*(\d+\s*)\)/.exec(t);
      if (null != i) e = parseInt(i[1]), n = parseInt(i[2]), r = parseInt(i[3]);else {
        if ("string" == typeof t && "#" != t.charAt(0)) {
          var o = new RGBColor(t);
          t = o.ok ? o.toHex() : "#000000";
        }

        e = t.substring(1, 3), e = parseInt(e, 16), n = t.substring(3, 5), n = parseInt(n, 16), r = t.substring(5, 7), r = parseInt(r, 16);
      }

      if ("string" == typeof e && /^#[0-9A-Fa-f]{6}$/.test(e)) {
        var a = parseInt(e.substr(1), 16);
        e = a >> 16 & 255, n = a >> 8 & 255, r = 255 & a;
      }

      var s = this.f3;
      return 0 === e && 0 === n && 0 === r || void 0 === n ? s(e / 255) + " g" : [s(e / 255), s(n / 255), s(r / 255), "rg"].join(" ");
    }, f.prototype.f3 = function (t) {
      return t.toFixed(3);
    }, f.prototype.renderParagraph = function (t) {
      var e, n, r, i, o, a, s, l, h, u, c, f, p;

      if (r = w(this.paragraph.text), f = this.paragraph.style, e = this.paragraph.blockstyle, this.paragraph.priorblockstyle || {}, this.paragraph = {
        text: [],
        style: [],
        blockstyle: {},
        priorblockstyle: e
      }, r.join("").trim()) {
        s = this.splitFragmentsIntoLines(r, f), l = a = void 0, n = 12 / this.pdf.internal.scaleFactor, this.priorMarginBottom = this.priorMarginBottom || 0, c = (Math.max((e["margin-top"] || 0) - this.priorMarginBottom, 0) + (e["padding-top"] || 0)) * n, u = ((e["margin-bottom"] || 0) + (e["padding-bottom"] || 0)) * n, this.priorMarginBottom = e["margin-bottom"] || 0, "always" === e["page-break-before"] && (this.pdf.addPage(), this.y = 0, c = ((e["margin-top"] || 0) + (e["padding-top"] || 0)) * n), h = this.pdf.internal.write, o = i = void 0, this.y += c, h("q", "BT 0 g", this.pdf.internal.getCoordinateString(this.x), this.pdf.internal.getVerticalCoordinateString(this.y), "Td");

        for (var d = 0; s.length;) {
          for (i = l = 0, o = (a = s.shift()).length; i !== o;) {
            a[i][0].trim() && (l = Math.max(l, a[i][1]["line-height"], a[i][1]["font-size"]), p = 7 * a[i][1]["font-size"]), i++;
          }

          var g = 0,
              m = 0;

          for (void 0 !== a[0][1]["margin-left"] && 0 < a[0][1]["margin-left"] && (g = (m = this.pdf.internal.getCoordinateString(a[0][1]["margin-left"])) - d, d = m), h(g + Math.max(e["margin-left"] || 0, 0) * n, (-12 * l).toFixed(2), "Td"), i = 0, o = a.length; i !== o;) {
            a[i][0] && this.RenderTextFragment(a[i][0], a[i][1]), i++;
          }

          if (this.y += l * n, this.executeWatchFunctions(a[0][1]) && 0 < s.length) {
            var y = [],
                v = [];
            s.forEach(function (t) {
              for (var e = 0, n = t.length; e !== n;) {
                t[e][0] && (y.push(t[e][0] + " "), v.push(t[e][1])), ++e;
              }
            }), s = this.splitFragmentsIntoLines(w(y), v), h("ET", "Q"), h("q", "BT 0 g", this.pdf.internal.getCoordinateString(this.x), this.pdf.internal.getVerticalCoordinateString(this.y), "Td");
          }
        }

        return t && "function" == typeof t && t.call(this, this.x - 9, this.y - p / 2), h("ET", "Q"), this.y += u;
      }
    }, f.prototype.setBlockBoundary = function (t) {
      return this.renderParagraph(t);
    }, f.prototype.setBlockStyle = function (t) {
      return this.paragraph.blockstyle = t;
    }, f.prototype.addText = function (t, e) {
      return this.paragraph.text.push(t), this.paragraph.style.push(e);
    }, i = {
      helvetica: "helvetica",
      "sans-serif": "helvetica",
      "times new roman": "times",
      serif: "times",
      times: "times",
      monospace: "courier",
      courier: "courier"
    }, l = {
      100: "normal",
      200: "normal",
      300: "normal",
      400: "normal",
      500: "bold",
      600: "bold",
      700: "bold",
      800: "bold",
      900: "bold",
      normal: "normal",
      bold: "bold",
      bolder: "bold",
      lighter: "normal"
    }, a = {
      normal: "normal",
      italic: "italic",
      oblique: "italic"
    }, s = {
      left: "left",
      right: "right",
      center: "center",
      justify: "justify"
    }, h = {
      none: "none",
      right: "right",
      left: "left"
    }, u = {
      none: "none",
      both: "both"
    }, n = {
      normal: 1
    }, t.fromHTML = function (t, e, n, r, i, o) {
      return this.margins_doc = o || {
        top: 0,
        bottom: 0
      }, r || (r = {}), r.elementHandlers || (r.elementHandlers = {}), m(this, t, isNaN(e) ? 4 : e, isNaN(n) ? 4 : n, r, i);
    };
  }(lt.API), lt.API, ("undefined" != typeof window && window || "undefined" != typeof global && global).html2pdf = function (t, a, e) {
    var n = a.canvas;

    if (n) {
      var r, i;

      if ((n.pdf = a).annotations = {
        _nameMap: [],
        createAnnotation: function createAnnotation(t, e) {
          var n,
              r = a.context2d._wrapX(e.left),
              i = a.context2d._wrapY(e.top),
              o = (a.context2d._page(e.top), t.indexOf("#"));

          n = 0 <= o ? {
            name: t.substring(o + 1)
          } : {
            url: t
          }, a.link(r, i, e.right - e.left, e.bottom - e.top, n);
        },
        setName: function setName(t, e) {
          var n = a.context2d._wrapX(e.left),
              r = a.context2d._wrapY(e.top),
              i = a.context2d._page(e.top);

          this._nameMap[t] = {
            page: i,
            x: n,
            y: r
          };
        }
      }, n.annotations = a.annotations, a.context2d._pageBreakAt = function (t) {
        this.pageBreaks.push(t);
      }, a.context2d._gotoPage = function (t) {
        for (; a.internal.getNumberOfPages() < t;) {
          a.addPage();
        }

        a.setPage(t);
      }, "string" == typeof t) {
        t = t.replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, "");
        var o,
            s,
            l = document.createElement("iframe");
        document.body.appendChild(l), null != (o = l.contentDocument) && null != o || (o = l.contentWindow.document), o.open(), o.write(t), o.close(), r = o.body, s = o.body || {}, t = o.documentElement || {}, i = Math.max(s.scrollHeight, s.offsetHeight, t.clientHeight, t.scrollHeight, t.offsetHeight);
      } else s = (r = t).body || {}, i = Math.max(s.scrollHeight, s.offsetHeight, t.clientHeight, t.scrollHeight, t.offsetHeight);

      var h = {
        async: !0,
        allowTaint: !0,
        backgroundColor: "#ffffff",
        canvas: n,
        imageTimeout: 15e3,
        logging: !0,
        proxy: null,
        removeContainer: !0,
        foreignObjectRendering: !1,
        useCORS: !1,
        windowHeight: i = a.internal.pageSize.getHeight(),
        scrollY: i
      };
      a.context2d.pageWrapYEnabled = !0, a.context2d.pageWrapY = a.internal.pageSize.getHeight(), html2canvas(r, h).then(function (t) {
        e && (l && l.parentElement.removeChild(l), e(a));
      });
    } else alert("jsPDF canvas plugin not installed");
  }, window.tmp = html2pdf, function (f) {
    var r = f.BlobBuilder || f.WebKitBlobBuilder || f.MSBlobBuilder || f.MozBlobBuilder;

    f.URL = f.URL || f.webkitURL || function (t, e) {
      return (e = document.createElement("a")).href = t, e;
    };

    var n = f.Blob,
        p = URL.createObjectURL,
        d = URL.revokeObjectURL,
        o = f.Symbol && f.Symbol.toStringTag,
        t = !1,
        e = !1,
        g = !!f.ArrayBuffer,
        i = r && r.prototype.append && r.prototype.getBlob;

    try {
      t = 2 === new Blob(["ä"]).size, e = 2 === new Blob([new Uint8Array([1, 2])]).size;
    } catch (t) {}

    function a(t) {
      return t.map(function (t) {
        if (t.buffer instanceof ArrayBuffer) {
          var e = t.buffer;

          if (t.byteLength !== e.byteLength) {
            var n = new Uint8Array(t.byteLength);
            n.set(new Uint8Array(e, t.byteOffset, t.byteLength)), e = n.buffer;
          }

          return e;
        }

        return t;
      });
    }

    function s(t, e) {
      e = e || {};
      var n = new r();
      return a(t).forEach(function (t) {
        n.append(t);
      }), e.type ? n.getBlob(e.type) : n.getBlob();
    }

    function l(t, e) {
      return new n(a(t), e || {});
    }

    if (f.Blob && (s.prototype = Blob.prototype, l.prototype = Blob.prototype), o) try {
      File.prototype[o] = "File", Blob.prototype[o] = "Blob", FileReader.prototype[o] = "FileReader";
    } catch (t) {}

    function h() {
      var t = !!f.ActiveXObject || "-ms-scroll-limit" in document.documentElement.style && "-ms-ime-align" in document.documentElement.style,
          e = f.XMLHttpRequest && f.XMLHttpRequest.prototype.send;
      t && e && (XMLHttpRequest.prototype.send = function (t) {
        t instanceof Blob && this.setRequestHeader("Content-Type", t.type), e.call(this, t);
      });

      try {
        new File([], "");
      } catch (t) {
        try {
          var n = new Function('class File extends Blob {constructor(chunks, name, opts) {opts = opts || {};super(chunks, opts || {});this.name = name;this.lastModifiedDate = opts.lastModified ? new Date(opts.lastModified) : new Date;this.lastModified = +this.lastModifiedDate;}};return new File([], ""), File')();
          f.File = n;
        } catch (t) {
          n = function n(t, e, _n) {
            var r = new Blob(t, _n),
                i = _n && void 0 !== _n.lastModified ? new Date(_n.lastModified) : new Date();
            return r.name = e, r.lastModifiedDate = i, r.lastModified = +i, r.toString = function () {
              return "[object File]";
            }, o && (r[o] = "File"), r;
          };

          f.File = n;
        }
      }
    }

    t ? (h(), f.Blob = e ? f.Blob : l) : i ? (h(), f.Blob = s) : function () {
      function a(t) {
        for (var e = [], n = 0; n < t.length; n++) {
          var r = t.charCodeAt(n);
          r < 128 ? e.push(r) : r < 2048 ? e.push(192 | r >> 6, 128 | 63 & r) : r < 55296 || 57344 <= r ? e.push(224 | r >> 12, 128 | r >> 6 & 63, 128 | 63 & r) : (n++, r = 65536 + ((1023 & r) << 10 | 1023 & t.charCodeAt(n)), e.push(240 | r >> 18, 128 | r >> 12 & 63, 128 | r >> 6 & 63, 128 | 63 & r));
        }

        return e;
      }

      function e(t) {
        var e, n, r, i, o, a;

        for (e = "", r = t.length, n = 0; n < r;) {
          switch ((i = t[n++]) >> 4) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
              e += String.fromCharCode(i);
              break;

            case 12:
            case 13:
              o = t[n++], e += String.fromCharCode((31 & i) << 6 | 63 & o);
              break;

            case 14:
              o = t[n++], a = t[n++], e += String.fromCharCode((15 & i) << 12 | (63 & o) << 6 | (63 & a) << 0);
          }
        }

        return e;
      }

      function s(t) {
        for (var e = new Array(t.byteLength), n = new Uint8Array(t), r = e.length; r--;) {
          e[r] = n[r];
        }

        return e;
      }

      function n(t) {
        for (var e = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", n = [], r = 0; r < t.length; r += 3) {
          var i = t[r],
              o = r + 1 < t.length,
              a = o ? t[r + 1] : 0,
              s = r + 2 < t.length,
              l = s ? t[r + 2] : 0,
              h = i >> 2,
              u = (3 & i) << 4 | a >> 4,
              c = (15 & a) << 2 | l >> 6,
              f = 63 & l;
          s || (f = 64, o || (c = 64)), n.push(e[h], e[u], e[c], e[f]);
        }

        return n.join("");
      }

      var t = Object.create || function (t) {
        function e() {}

        return e.prototype = t, new e();
      };

      if (g) var r = ["[object Int8Array]", "[object Uint8Array]", "[object Uint8ClampedArray]", "[object Int16Array]", "[object Uint16Array]", "[object Int32Array]", "[object Uint32Array]", "[object Float32Array]", "[object Float64Array]"],
          l = ArrayBuffer.isView || function (t) {
        return t && -1 < r.indexOf(Object.prototype.toString.call(t));
      };

      function h(t, e) {
        for (var n = 0, r = (t = t || []).length; n < r; n++) {
          var i = t[n];
          i instanceof h ? t[n] = i._buffer : "string" == typeof i ? t[n] = a(i) : g && (ArrayBuffer.prototype.isPrototypeOf(i) || l(i)) ? t[n] = s(i) : g && (o = i) && DataView.prototype.isPrototypeOf(o) ? t[n] = s(i.buffer) : t[n] = a(String(i));
        }

        var o;
        this._buffer = [].concat.apply([], t), this.size = this._buffer.length, this.type = e && e.type || "";
      }

      function i(t, e, n) {
        var r = h.call(this, t, n = n || {}) || this;
        return r.name = e, r.lastModifiedDate = n.lastModified ? new Date(n.lastModified) : new Date(), r.lastModified = +r.lastModifiedDate, r;
      }

      if (h.prototype.slice = function (t, e, n) {
        return new h([this._buffer.slice(t || 0, e || this._buffer.length)], {
          type: n
        });
      }, h.prototype.toString = function () {
        return "[object Blob]";
      }, (i.prototype = t(h.prototype)).constructor = i, Object.setPrototypeOf) Object.setPrototypeOf(i, h);else try {
        i.__proto__ = h;
      } catch (t) {}

      function o() {
        if (!(this instanceof o)) throw new TypeError("Failed to construct 'FileReader': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");
        var n = document.createDocumentFragment();
        this.addEventListener = n.addEventListener, this.dispatchEvent = function (t) {
          var e = this["on" + t.type];
          "function" == typeof e && e(t), n.dispatchEvent(t);
        }, this.removeEventListener = n.removeEventListener;
      }

      function u(t, e, n) {
        if (!(e instanceof h)) throw new TypeError("Failed to execute '" + n + "' on 'FileReader': parameter 1 is not of type 'Blob'.");
        t.result = "", setTimeout(function () {
          this.readyState = o.LOADING, t.dispatchEvent(new Event("load")), t.dispatchEvent(new Event("loadend"));
        });
      }

      i.prototype.toString = function () {
        return "[object File]";
      }, o.EMPTY = 0, o.LOADING = 1, o.DONE = 2, o.prototype.error = null, o.prototype.onabort = null, o.prototype.onerror = null, o.prototype.onload = null, o.prototype.onloadend = null, o.prototype.onloadstart = null, o.prototype.onprogress = null, o.prototype.readAsDataURL = function (t) {
        u(this, t, "readAsDataURL"), this.result = "data:" + t.type + ";base64," + n(t._buffer);
      }, o.prototype.readAsText = function (t) {
        u(this, t, "readAsText"), this.result = e(t._buffer);
      }, o.prototype.readAsArrayBuffer = function (t) {
        u(this, t, "readAsText"), this.result = t._buffer.slice();
      }, o.prototype.abort = function () {}, URL.createObjectURL = function (t) {
        return t instanceof h ? "data:" + t.type + ";base64," + n(t._buffer) : p.call(URL, t);
      }, URL.revokeObjectURL = function (t) {
        d && d.call(URL, t);
      };
      var c = f.XMLHttpRequest && f.XMLHttpRequest.prototype.send;
      c && (XMLHttpRequest.prototype.send = function (t) {
        t instanceof h ? (this.setRequestHeader("Content-Type", t.type), c.call(this, e(t._buffer))) : c.call(this, t);
      }), f.FileReader = o, f.File = i, f.Blob = h;
    }();
  }("undefined" != typeof self && self || "undefined" != typeof window && window || "undefined" != typeof global && global || Function('return typeof this === "object" && this.content')() || Function("return this")());

  var ht,
      ut,
      ct,
      _ft,
      pt,
      dt,
      gt,
      mt,
      yt,
      vt,
      wt,
      bt,
      xt,
      Nt,
      Lt,
      le = le || function (s) {
    if (!(void 0 === s || "undefined" != typeof navigator && /MSIE [1-9]\./.test(navigator.userAgent))) {
      var t = s.document,
          l = function l() {
        return s.URL || s.webkitURL || s;
      },
          h = t.createElementNS("http://www.w3.org/1999/xhtml", "a"),
          u = "download" in h,
          c = /constructor/i.test(s.HTMLElement) || s.safari,
          f = /CriOS\/[\d]+/.test(navigator.userAgent),
          p = s.setImmediate || s.setTimeout,
          d = function d(t) {
        p(function () {
          throw t;
        }, 0);
      },
          g = function g(t) {
        setTimeout(function () {
          "string" == typeof t ? l().revokeObjectURL(t) : t.remove();
        }, 4e4);
      },
          m = function m(t) {
        return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(t.type) ? new Blob([String.fromCharCode(65279), t], {
          type: t.type
        }) : t;
      },
          r = function r(t, n, e) {
        e || (t = m(t));

        var r,
            i = this,
            o = "application/octet-stream" === t.type,
            a = function a() {
          !function (t, e, n) {
            for (var r = (e = [].concat(e)).length; r--;) {
              var i = t["on" + e[r]];
              if ("function" == typeof i) try {
                i.call(t, n || t);
              } catch (t) {
                d(t);
              }
            }
          }(i, "writestart progress write writeend".split(" "));
        };

        if (i.readyState = i.INIT, u) return r = l().createObjectURL(t), void p(function () {
          var t, e;
          h.href = r, h.download = n, t = h, e = new MouseEvent("click"), t.dispatchEvent(e), a(), g(r), i.readyState = i.DONE;
        }, 0);
        !function () {
          if ((f || o && c) && s.FileReader) {
            var e = new FileReader();
            return e.onloadend = function () {
              var t = f ? e.result : e.result.replace(/^data:[^;]*;/, "data:attachment/file;");
              s.open(t, "_blank") || (s.location.href = t), t = void 0, i.readyState = i.DONE, a();
            }, e.readAsDataURL(t), i.readyState = i.INIT;
          }

          r || (r = l().createObjectURL(t)), o ? s.location.href = r : s.open(r, "_blank") || (s.location.href = r);
          i.readyState = i.DONE, a(), g(r);
        }();
      },
          e = r.prototype;

      return "undefined" != typeof navigator && navigator.msSaveOrOpenBlob ? function (t, e, n) {
        return e = e || t.name || "download", n || (t = m(t)), navigator.msSaveOrOpenBlob(t, e);
      } : (e.abort = function () {}, e.readyState = e.INIT = 0, e.WRITING = 1, e.DONE = 2, e.error = e.onwritestart = e.onprogress = e.onwrite = e.onabort = e.onerror = e.onwriteend = null, function (t, e, n) {
        return new r(t, e || t.name || "download", n);
      });
    }
  }("undefined" != typeof self && self || "undefined" != typeof window && window || void 0);

  function At(x) {
    var t = 0;
    if (71 !== x[t++] || 73 !== x[t++] || 70 !== x[t++] || 56 !== x[t++] || 56 != (x[t++] + 1 & 253) || 97 !== x[t++]) throw "Invalid GIF 87a/89a header.";
    var N = x[t++] | x[t++] << 8,
        e = x[t++] | x[t++] << 8,
        n = x[t++],
        r = n >> 7,
        i = 1 << (7 & n) + 1;
    x[t++];
    x[t++];
    var o = null;
    r && (o = t, t += 3 * i);
    var a = !0,
        s = [],
        l = 0,
        h = null,
        u = 0,
        c = null;

    for (this.width = N, this.height = e; a && t < x.length;) {
      switch (x[t++]) {
        case 33:
          switch (x[t++]) {
            case 255:
              if (11 !== x[t] || 78 == x[t + 1] && 69 == x[t + 2] && 84 == x[t + 3] && 83 == x[t + 4] && 67 == x[t + 5] && 65 == x[t + 6] && 80 == x[t + 7] && 69 == x[t + 8] && 50 == x[t + 9] && 46 == x[t + 10] && 48 == x[t + 11] && 3 == x[t + 12] && 1 == x[t + 13] && 0 == x[t + 16]) t += 14, c = x[t++] | x[t++] << 8, t++;else for (t += 12;;) {
                if (0 === (A = x[t++])) break;
                t += A;
              }
              break;

            case 249:
              if (4 !== x[t++] || 0 !== x[t + 4]) throw "Invalid graphics extension block.";
              var f = x[t++];
              l = x[t++] | x[t++] << 8, h = x[t++], 0 == (1 & f) && (h = null), u = f >> 2 & 7, t++;
              break;

            case 254:
              for (;;) {
                if (0 === (A = x[t++])) break;
                t += A;
              }

              break;

            default:
              throw "Unknown graphic control label: 0x" + x[t - 1].toString(16);
          }

          break;

        case 44:
          var p = x[t++] | x[t++] << 8,
              d = x[t++] | x[t++] << 8,
              g = x[t++] | x[t++] << 8,
              m = x[t++] | x[t++] << 8,
              y = x[t++],
              v = y >> 6 & 1,
              w = o,
              b = !1;

          if (y >> 7) {
            b = !0;
            w = t, t += 3 * (1 << (7 & y) + 1);
          }

          var L = t;

          for (t++;;) {
            var A;
            if (0 === (A = x[t++])) break;
            t += A;
          }

          s.push({
            x: p,
            y: d,
            width: g,
            height: m,
            has_local_palette: b,
            palette_offset: w,
            data_offset: L,
            data_length: t - L,
            transparent_index: h,
            interlaced: !!v,
            delay: l,
            disposal: u
          });
          break;

        case 59:
          a = !1;
          break;

        default:
          throw "Unknown gif block: 0x" + x[t - 1].toString(16);
      }
    }

    this.numFrames = function () {
      return s.length;
    }, this.loopCount = function () {
      return c;
    }, this.frameInfo = function (t) {
      if (t < 0 || t >= s.length) throw "Frame index out of range.";
      return s[t];
    }, this.decodeAndBlitFrameBGRA = function (t, e) {
      var n = this.frameInfo(t),
          r = n.width * n.height,
          i = new Uint8Array(r);
      St(x, n.data_offset, i, r);
      var o = n.palette_offset,
          a = n.transparent_index;
      null === a && (a = 256);
      var s = n.width,
          l = N - s,
          h = s,
          u = 4 * (n.y * N + n.x),
          c = 4 * ((n.y + n.height) * N + n.x),
          f = u,
          p = 4 * l;
      !0 === n.interlaced && (p += 4 * (s + l) * 7);

      for (var d = 8, g = 0, m = i.length; g < m; ++g) {
        var y = i[g];
        if (0 === h && (h = s, c <= (f += p) && (p = l + 4 * (s + l) * (d - 1), f = u + (s + l) * (d << 1), d >>= 1)), y === a) f += 4;else {
          var v = x[o + 3 * y],
              w = x[o + 3 * y + 1],
              b = x[o + 3 * y + 2];
          e[f++] = b, e[f++] = w, e[f++] = v, e[f++] = 255;
        }
        --h;
      }
    }, this.decodeAndBlitFrameRGBA = function (t, e) {
      var n = this.frameInfo(t),
          r = n.width * n.height,
          i = new Uint8Array(r);
      St(x, n.data_offset, i, r);
      var o = n.palette_offset,
          a = n.transparent_index;
      null === a && (a = 256);
      var s = n.width,
          l = N - s,
          h = s,
          u = 4 * (n.y * N + n.x),
          c = 4 * ((n.y + n.height) * N + n.x),
          f = u,
          p = 4 * l;
      !0 === n.interlaced && (p += 4 * (s + l) * 7);

      for (var d = 8, g = 0, m = i.length; g < m; ++g) {
        var y = i[g];
        if (0 === h && (h = s, c <= (f += p) && (p = l + 4 * (s + l) * (d - 1), f = u + (s + l) * (d << 1), d >>= 1)), y === a) f += 4;else {
          var v = x[o + 3 * y],
              w = x[o + 3 * y + 1],
              b = x[o + 3 * y + 2];
          e[f++] = v, e[f++] = w, e[f++] = b, e[f++] = 255;
        }
        --h;
      }
    };
  }

  function St(t, e, n, r) {
    for (var i = t[e++], o = 1 << i, a = o + 1, s = a + 1, l = i + 1, h = (1 << l) - 1, u = 0, c = 0, f = 0, p = t[e++], d = new Int32Array(4096), g = null;;) {
      for (; u < 16 && 0 !== p;) {
        c |= t[e++] << u, u += 8, 1 === p ? p = t[e++] : --p;
      }

      if (u < l) break;
      var m = c & h;

      if (c >>= l, u -= l, m !== o) {
        if (m === a) break;

        for (var y = m < s ? m : g, v = 0, w = y; o < w;) {
          w = d[w] >> 8, ++v;
        }

        var b = w;
        if (r < f + v + (y !== m ? 1 : 0)) return void console.log("Warning, gif stream longer than expected.");
        n[f++] = b;
        var x = f += v;

        for (y !== m && (n[f++] = b), w = y; v--;) {
          w = d[w], n[--x] = 255 & w, w >>= 8;
        }

        null !== g && s < 4096 && (d[s++] = g << 8 | b, h + 1 <= s && l < 12 && (++l, h = h << 1 | 1)), g = m;
      } else s = a + 1, h = (1 << (l = i + 1)) - 1, g = null;
    }

    return f !== r && console.log("Warning, gif stream shorter than expected."), n;
  }

  try {
    exports.GifWriter = function (y, t, e, n) {
      var v = 0,
          r = void 0 === (n = void 0 === n ? {} : n).loop ? null : n.loop,
          w = void 0 === n.palette ? null : n.palette;
      if (t <= 0 || e <= 0 || 65535 < t || 65535 < e) throw "Width/Height invalid.";

      function b(t) {
        var e = t.length;
        if (e < 2 || 256 < e || e & e - 1) throw "Invalid code/color length, must be power of 2 and 2 .. 256.";
        return e;
      }

      y[v++] = 71, y[v++] = 73, y[v++] = 70, y[v++] = 56, y[v++] = 57, y[v++] = 97;
      var i = 0,
          o = 0;

      if (null !== w) {
        for (var a = b(w); a >>= 1;) {
          ++i;
        }

        if (a = 1 << i, --i, void 0 !== n.background) {
          if (a <= (o = n.background)) throw "Background index out of range.";
          if (0 === o) throw "Background index explicitly passed as 0.";
        }
      }

      if (y[v++] = 255 & t, y[v++] = t >> 8 & 255, y[v++] = 255 & e, y[v++] = e >> 8 & 255, y[v++] = (null !== w ? 128 : 0) | i, y[v++] = o, y[v++] = 0, null !== w) for (var s = 0, l = w.length; s < l; ++s) {
        var h = w[s];
        y[v++] = h >> 16 & 255, y[v++] = h >> 8 & 255, y[v++] = 255 & h;
      }

      if (null !== r) {
        if (r < 0 || 65535 < r) throw "Loop count invalid.";
        y[v++] = 33, y[v++] = 255, y[v++] = 11, y[v++] = 78, y[v++] = 69, y[v++] = 84, y[v++] = 83, y[v++] = 67, y[v++] = 65, y[v++] = 80, y[v++] = 69, y[v++] = 50, y[v++] = 46, y[v++] = 48, y[v++] = 3, y[v++] = 1, y[v++] = 255 & r, y[v++] = r >> 8 & 255, y[v++] = 0;
      }

      var x = !1;
      this.addFrame = function (t, e, n, r, i, o) {
        if (!0 === x && (--v, x = !1), o = void 0 === o ? {} : o, t < 0 || e < 0 || 65535 < t || 65535 < e) throw "x/y invalid.";
        if (n <= 0 || r <= 0 || 65535 < n || 65535 < r) throw "Width/Height invalid.";
        if (i.length < n * r) throw "Not enough pixels for the frame size.";
        var a = !0,
            s = o.palette;
        if (null == s && (a = !1, s = w), null == s) throw "Must supply either a local or global palette.";

        for (var l = b(s), h = 0; l >>= 1;) {
          ++h;
        }

        l = 1 << h;
        var u = void 0 === o.delay ? 0 : o.delay,
            c = void 0 === o.disposal ? 0 : o.disposal;
        if (c < 0 || 3 < c) throw "Disposal out of range.";
        var f = !1,
            p = 0;
        if (void 0 !== o.transparent && null !== o.transparent && (f = !0, (p = o.transparent) < 0 || l <= p)) throw "Transparent color index.";
        if ((0 !== c || f || 0 !== u) && (y[v++] = 33, y[v++] = 249, y[v++] = 4, y[v++] = c << 2 | (!0 === f ? 1 : 0), y[v++] = 255 & u, y[v++] = u >> 8 & 255, y[v++] = p, y[v++] = 0), y[v++] = 44, y[v++] = 255 & t, y[v++] = t >> 8 & 255, y[v++] = 255 & e, y[v++] = e >> 8 & 255, y[v++] = 255 & n, y[v++] = n >> 8 & 255, y[v++] = 255 & r, y[v++] = r >> 8 & 255, y[v++] = !0 === a ? 128 | h - 1 : 0, !0 === a) for (var d = 0, g = s.length; d < g; ++d) {
          var m = s[d];
          y[v++] = m >> 16 & 255, y[v++] = m >> 8 & 255, y[v++] = 255 & m;
        }

        v = function (e, n, t, r) {
          e[n++] = t;
          var i = n++,
              o = 1 << t,
              a = o - 1,
              s = o + 1,
              l = s + 1,
              h = t + 1,
              u = 0,
              c = 0;

          function f(t) {
            for (; t <= u;) {
              e[n++] = 255 & c, c >>= 8, u -= 8, n === i + 256 && (e[i] = 255, i = n++);
            }
          }

          function p(t) {
            c |= t << u, u += h, f(8);
          }

          var d = r[0] & a,
              g = {};
          p(o);

          for (var m = 1, y = r.length; m < y; ++m) {
            var v = r[m] & a,
                w = d << 8 | v,
                b = g[w];

            if (void 0 === b) {
              for (c |= d << u, u += h; 8 <= u;) {
                e[n++] = 255 & c, c >>= 8, u -= 8, n === i + 256 && (e[i] = 255, i = n++);
              }

              4096 === l ? (p(o), l = s + 1, h = t + 1, g = {}) : (1 << h <= l && ++h, g[w] = l++), d = v;
            } else d = b;
          }

          return p(d), p(s), f(1), i + 1 === n ? e[i] = 0 : (e[i] = n - i - 1, e[n++] = 0), n;
        }(y, v, h < 2 ? 2 : h, i);
      }, this.end = function () {
        return !1 === x && (y[v++] = 59, x = !0), v;
      };
    }, exports.GifReader = At;
  } catch (t) {}
  /*
      Copyright (c) 2008, Adobe Systems Incorporated
      All rights reserved.
  
      Redistribution and use in source and binary forms, with or without 
      modification, are permitted provided that the following conditions are
      met:
  
      * Redistributions of source code must retain the above copyright notice, 
        this list of conditions and the following disclaimer.
      
      * Redistributions in binary form must reproduce the above copyright
        notice, this list of conditions and the following disclaimer in the 
        documentation and/or other materials provided with the distribution.
      
      * Neither the name of Adobe Systems Incorporated nor the names of its 
        contributors may be used to endorse or promote products derived from 
        this software without specific prior written permission.
  
      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
      IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
      THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
      PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR 
      CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
      EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
      PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
      PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
      LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
      NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
      SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    */


  function _t(t) {
    var N,
        L,
        A,
        S,
        e,
        c = Math.floor,
        _ = new Array(64),
        F = new Array(64),
        P = new Array(64),
        k = new Array(64),
        y = new Array(65535),
        v = new Array(65535),
        Z = new Array(64),
        w = new Array(64),
        I = [],
        C = 0,
        B = 7,
        j = new Array(64),
        E = new Array(64),
        M = new Array(64),
        n = new Array(256),
        O = new Array(2048),
        b = [0, 1, 5, 6, 14, 15, 27, 28, 2, 4, 7, 13, 16, 26, 29, 42, 3, 8, 12, 17, 25, 30, 41, 43, 9, 11, 18, 24, 31, 40, 44, 53, 10, 19, 23, 32, 39, 45, 52, 54, 20, 22, 33, 38, 46, 51, 55, 60, 21, 34, 37, 47, 50, 56, 59, 61, 35, 36, 48, 49, 57, 58, 62, 63],
        q = [0, 0, 1, 5, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0],
        T = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],
        R = [0, 0, 2, 1, 3, 3, 2, 4, 3, 5, 5, 4, 4, 0, 0, 1, 125],
        D = [1, 2, 3, 0, 4, 17, 5, 18, 33, 49, 65, 6, 19, 81, 97, 7, 34, 113, 20, 50, 129, 145, 161, 8, 35, 66, 177, 193, 21, 82, 209, 240, 36, 51, 98, 114, 130, 9, 10, 22, 23, 24, 25, 26, 37, 38, 39, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 67, 68, 69, 70, 71, 72, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 99, 100, 101, 102, 103, 104, 105, 106, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 136, 137, 138, 146, 147, 148, 149, 150, 151, 152, 153, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210, 211, 212, 213, 214, 215, 216, 217, 218, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250],
        U = [0, 0, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0],
        z = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],
        H = [0, 0, 2, 1, 2, 4, 4, 3, 4, 7, 5, 4, 4, 0, 1, 2, 119],
        W = [0, 1, 2, 3, 17, 4, 5, 33, 49, 6, 18, 65, 81, 7, 97, 113, 19, 34, 50, 129, 8, 20, 66, 145, 161, 177, 193, 9, 35, 51, 82, 240, 21, 98, 114, 209, 10, 22, 36, 52, 225, 37, 241, 23, 24, 25, 26, 38, 39, 40, 41, 42, 53, 54, 55, 56, 57, 58, 67, 68, 69, 70, 71, 72, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 99, 100, 101, 102, 103, 104, 105, 106, 115, 116, 117, 118, 119, 120, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 146, 147, 148, 149, 150, 151, 152, 153, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210, 211, 212, 213, 214, 215, 216, 217, 218, 226, 227, 228, 229, 230, 231, 232, 233, 234, 242, 243, 244, 245, 246, 247, 248, 249, 250];

    function r(t, e) {
      for (var n = 0, r = 0, i = new Array(), o = 1; o <= 16; o++) {
        for (var a = 1; a <= t[o]; a++) {
          i[e[r]] = [], i[e[r]][0] = n, i[e[r]][1] = o, r++, n++;
        }

        n *= 2;
      }

      return i;
    }

    function V(t) {
      for (var e = t[0], n = t[1] - 1; 0 <= n;) {
        e & 1 << n && (C |= 1 << B), n--, --B < 0 && (255 == C ? (G(255), G(0)) : G(C), B = 7, C = 0);
      }
    }

    function G(t) {
      I.push(t);
    }

    function Y(t) {
      G(t >> 8 & 255), G(255 & t);
    }

    function J(t, e, n, r, i) {
      for (var o, a = i[0], s = i[240], l = function (t, e) {
        var n,
            r,
            i,
            o,
            a,
            s,
            l,
            h,
            u,
            c,
            f = 0;

        for (u = 0; u < 8; ++u) {
          n = t[f], r = t[f + 1], i = t[f + 2], o = t[f + 3], a = t[f + 4], s = t[f + 5], l = t[f + 6];
          var p = n + (h = t[f + 7]),
              d = n - h,
              g = r + l,
              m = r - l,
              y = i + s,
              v = i - s,
              w = o + a,
              b = o - a,
              x = p + w,
              N = p - w,
              L = g + y,
              A = g - y;
          t[f] = x + L, t[f + 4] = x - L;
          var S = .707106781 * (A + N);
          t[f + 2] = N + S, t[f + 6] = N - S;

          var _ = .382683433 * ((x = b + v) - (A = m + d)),
              F = .5411961 * x + _,
              P = 1.306562965 * A + _,
              k = .707106781 * (L = v + m),
              I = d + k,
              C = d - k;

          t[f + 5] = C + F, t[f + 3] = C - F, t[f + 1] = I + P, t[f + 7] = I - P, f += 8;
        }

        for (u = f = 0; u < 8; ++u) {
          n = t[f], r = t[f + 8], i = t[f + 16], o = t[f + 24], a = t[f + 32], s = t[f + 40], l = t[f + 48];
          var B = n + (h = t[f + 56]),
              j = n - h,
              E = r + l,
              M = r - l,
              O = i + s,
              q = i - s,
              T = o + a,
              R = o - a,
              D = B + T,
              U = B - T,
              z = E + O,
              H = E - O;
          t[f] = D + z, t[f + 32] = D - z;
          var W = .707106781 * (H + U);
          t[f + 16] = U + W, t[f + 48] = U - W;
          var V = .382683433 * ((D = R + q) - (H = M + j)),
              G = .5411961 * D + V,
              Y = 1.306562965 * H + V,
              J = .707106781 * (z = q + M),
              X = j + J,
              K = j - J;
          t[f + 40] = K + G, t[f + 24] = K - G, t[f + 8] = X + Y, t[f + 56] = X - Y, f++;
        }

        for (u = 0; u < 64; ++u) {
          c = t[u] * e[u], Z[u] = 0 < c ? c + .5 | 0 : c - .5 | 0;
        }

        return Z;
      }(t, e), h = 0; h < 64; ++h) {
        w[b[h]] = l[h];
      }

      var u = w[0] - n;
      n = w[0], 0 == u ? V(r[0]) : (V(r[v[o = 32767 + u]]), V(y[o]));

      for (var c = 63; 0 < c && 0 == w[c]; c--) {
        ;
      }

      if (0 == c) return V(a), n;

      for (var f, p = 1; p <= c;) {
        for (var d = p; 0 == w[p] && p <= c; ++p) {
          ;
        }

        var g = p - d;

        if (16 <= g) {
          f = g >> 4;

          for (var m = 1; m <= f; ++m) {
            V(s);
          }

          g &= 15;
        }

        o = 32767 + w[p], V(i[(g << 4) + v[o]]), V(y[o]), p++;
      }

      return 63 != c && V(a), n;
    }

    function X(t) {
      if (t <= 0 && (t = 1), 100 < t && (t = 100), e != t) {
        (function (t) {
          for (var e = [16, 11, 10, 16, 24, 40, 51, 61, 12, 12, 14, 19, 26, 58, 60, 55, 14, 13, 16, 24, 40, 57, 69, 56, 14, 17, 22, 29, 51, 87, 80, 62, 18, 22, 37, 56, 68, 109, 103, 77, 24, 35, 55, 64, 81, 104, 113, 92, 49, 64, 78, 87, 103, 121, 120, 101, 72, 92, 95, 98, 112, 100, 103, 99], n = 0; n < 64; n++) {
            var r = c((e[n] * t + 50) / 100);
            r < 1 ? r = 1 : 255 < r && (r = 255), _[b[n]] = r;
          }

          for (var i = [17, 18, 24, 47, 99, 99, 99, 99, 18, 21, 26, 66, 99, 99, 99, 99, 24, 26, 56, 99, 99, 99, 99, 99, 47, 66, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99], o = 0; o < 64; o++) {
            var a = c((i[o] * t + 50) / 100);
            a < 1 ? a = 1 : 255 < a && (a = 255), F[b[o]] = a;
          }

          for (var s = [1, 1.387039845, 1.306562965, 1.175875602, 1, .785694958, .5411961, .275899379], l = 0, h = 0; h < 8; h++) {
            for (var u = 0; u < 8; u++) {
              P[l] = 1 / (_[b[l]] * s[h] * s[u] * 8), k[l] = 1 / (F[b[l]] * s[h] * s[u] * 8), l++;
            }
          }
        })(t < 50 ? Math.floor(5e3 / t) : Math.floor(200 - 2 * t)), e = t;
      }
    }

    this.encode = function (t, e) {
      var n, r;
      new Date().getTime();
      e && X(e), I = new Array(), C = 0, B = 7, Y(65496), Y(65504), Y(16), G(74), G(70), G(73), G(70), G(0), G(1), G(1), G(0), Y(1), Y(1), G(0), G(0), function () {
        Y(65499), Y(132), G(0);

        for (var t = 0; t < 64; t++) {
          G(_[t]);
        }

        G(1);

        for (var e = 0; e < 64; e++) {
          G(F[e]);
        }
      }(), n = t.width, r = t.height, Y(65472), Y(17), G(8), Y(r), Y(n), G(3), G(1), G(17), G(0), G(2), G(17), G(1), G(3), G(17), G(1), function () {
        Y(65476), Y(418), G(0);

        for (var t = 0; t < 16; t++) {
          G(q[t + 1]);
        }

        for (var e = 0; e <= 11; e++) {
          G(T[e]);
        }

        G(16);

        for (var n = 0; n < 16; n++) {
          G(R[n + 1]);
        }

        for (var r = 0; r <= 161; r++) {
          G(D[r]);
        }

        G(1);

        for (var i = 0; i < 16; i++) {
          G(U[i + 1]);
        }

        for (var o = 0; o <= 11; o++) {
          G(z[o]);
        }

        G(17);

        for (var a = 0; a < 16; a++) {
          G(H[a + 1]);
        }

        for (var s = 0; s <= 161; s++) {
          G(W[s]);
        }
      }(), Y(65498), Y(12), G(3), G(1), G(0), G(2), G(17), G(3), G(17), G(0), G(63), G(0);
      var i = 0,
          o = 0,
          a = 0;
      C = 0, B = 7, this.encode.displayName = "_encode_";

      for (var s, l, h, u, c, f, p, d, g, m = t.data, y = t.width, v = t.height, w = 4 * y, b = 0; b < v;) {
        for (s = 0; s < w;) {
          for (f = c = w * b + s, p = -1, g = d = 0; g < 64; g++) {
            f = c + (d = g >> 3) * w + (p = 4 * (7 & g)), v <= b + d && (f -= w * (b + 1 + d - v)), w <= s + p && (f -= s + p - w + 4), l = m[f++], h = m[f++], u = m[f++], j[g] = (O[l] + O[h + 256 >> 0] + O[u + 512 >> 0] >> 16) - 128, E[g] = (O[l + 768 >> 0] + O[h + 1024 >> 0] + O[u + 1280 >> 0] >> 16) - 128, M[g] = (O[l + 1280 >> 0] + O[h + 1536 >> 0] + O[u + 1792 >> 0] >> 16) - 128;
          }

          i = J(j, P, i, N, A), o = J(E, k, o, L, S), a = J(M, k, a, L, S), s += 32;
        }

        b += 8;
      }

      if (0 <= B) {
        var x = [];
        x[1] = B + 1, x[0] = (1 << B + 1) - 1, V(x);
      }

      return Y(65497), new Uint8Array(I);
    }, function () {
      new Date().getTime();
      t || (t = 50), function () {
        for (var t = String.fromCharCode, e = 0; e < 256; e++) {
          n[e] = t(e);
        }
      }(), N = r(q, T), L = r(U, z), A = r(R, D), S = r(H, W), function () {
        for (var t = 1, e = 2, n = 1; n <= 15; n++) {
          for (var r = t; r < e; r++) {
            v[32767 + r] = n, y[32767 + r] = [], y[32767 + r][1] = n, y[32767 + r][0] = r;
          }

          for (var i = -(e - 1); i <= -t; i++) {
            v[32767 + i] = n, y[32767 + i] = [], y[32767 + i][1] = n, y[32767 + i][0] = e - 1 + i;
          }

          t <<= 1, e <<= 1;
        }
      }(), function () {
        for (var t = 0; t < 256; t++) {
          O[t] = 19595 * t, O[t + 256 >> 0] = 38470 * t, O[t + 512 >> 0] = 7471 * t + 32768, O[t + 768 >> 0] = -11059 * t, O[t + 1024 >> 0] = -21709 * t, O[t + 1280 >> 0] = 32768 * t + 8421375, O[t + 1536 >> 0] = -27439 * t, O[t + 1792 >> 0] = -5329 * t;
        }
      }(), X(t), new Date().getTime();
    }();
  }

  function Ft(t, e) {
    if (this.pos = 0, this.buffer = t, this.datav = new DataView(t.buffer), this.is_with_alpha = !!e, this.bottom_up = !0, this.flag = String.fromCharCode(this.buffer[0]) + String.fromCharCode(this.buffer[1]), this.pos += 2, -1 === ["BM", "BA", "CI", "CP", "IC", "PT"].indexOf(this.flag)) throw new Error("Invalid BMP File");
    this.parseHeader(), this.parseBGR();
  }

  window.tmp = At, lt.API.adler32cs = (dt = "function" == typeof ArrayBuffer && "function" == typeof Uint8Array, gt = null, mt = function () {
    if (!dt) return function () {
      return !1;
    };

    try {
      var t = {};
      "function" == typeof t.Buffer && (gt = t.Buffer);
    } catch (t) {}

    return function (t) {
      return t instanceof ArrayBuffer || null !== gt && t instanceof gt;
    };
  }(), yt = null !== gt ? function (t) {
    return new gt(t, "utf8").toString("binary");
  } : function (t) {
    return unescape(encodeURIComponent(t));
  }, vt = function vt(t, e) {
    for (var n = 65535 & t, r = t >>> 16, i = 0, o = e.length; i < o; i++) {
      n = (n + (255 & e.charCodeAt(i))) % 65521, r = (r + n) % 65521;
    }

    return (r << 16 | n) >>> 0;
  }, wt = function wt(t, e) {
    for (var n = 65535 & t, r = t >>> 16, i = 0, o = e.length; i < o; i++) {
      n = (n + e[i]) % 65521, r = (r + n) % 65521;
    }

    return (r << 16 | n) >>> 0;
  }, xt = (bt = {}).Adler32 = (((pt = (_ft = function ft(t) {
    if (!(this instanceof _ft)) throw new TypeError("Constructor cannot called be as a function.");
    if (!isFinite(t = null == t ? 1 : +t)) throw new Error("First arguments needs to be a finite number.");
    this.checksum = t >>> 0;
  }).prototype = {}).constructor = _ft).from = ((ht = function ht(t) {
    if (!(this instanceof _ft)) throw new TypeError("Constructor cannot called be as a function.");
    if (null == t) throw new Error("First argument needs to be a string.");
    this.checksum = vt(1, t.toString());
  }).prototype = pt, ht), _ft.fromUtf8 = ((ut = function ut(t) {
    if (!(this instanceof _ft)) throw new TypeError("Constructor cannot called be as a function.");
    if (null == t) throw new Error("First argument needs to be a string.");
    var e = yt(t.toString());
    this.checksum = vt(1, e);
  }).prototype = pt, ut), dt && (_ft.fromBuffer = ((ct = function ct(t) {
    if (!(this instanceof _ft)) throw new TypeError("Constructor cannot called be as a function.");
    if (!mt(t)) throw new Error("First argument needs to be ArrayBuffer.");
    var e = new Uint8Array(t);
    return this.checksum = wt(1, e);
  }).prototype = pt, ct)), pt.update = function (t) {
    if (null == t) throw new Error("First argument needs to be a string.");
    return t = t.toString(), this.checksum = vt(this.checksum, t);
  }, pt.updateUtf8 = function (t) {
    if (null == t) throw new Error("First argument needs to be a string.");
    var e = yt(t.toString());
    return this.checksum = vt(this.checksum, e);
  }, dt && (pt.updateBuffer = function (t) {
    if (!mt(t)) throw new Error("First argument needs to be ArrayBuffer.");
    var e = new Uint8Array(t);
    return this.checksum = wt(this.checksum, e);
  }), pt.clone = function () {
    return new xt(this.checksum);
  }, _ft), bt.from = function (t) {
    if (null == t) throw new Error("First argument needs to be a string.");
    return vt(1, t.toString());
  }, bt.fromUtf8 = function (t) {
    if (null == t) throw new Error("First argument needs to be a string.");
    var e = yt(t.toString());
    return vt(1, e);
  }, dt && (bt.fromBuffer = function (t) {
    if (!mt(t)) throw new Error("First argument need to be ArrayBuffer.");
    var e = new Uint8Array(t);
    return wt(1, e);
  }), bt), function (t) {
    t.__bidiEngine__ = t.prototype.__bidiEngine__ = function (t) {
      var d,
          g,
          c,
          f,
          i,
          o,
          a,
          s = e,
          m = [[0, 3, 0, 1, 0, 0, 0], [0, 3, 0, 1, 2, 2, 0], [0, 3, 0, 17, 2, 0, 1], [0, 3, 5, 5, 4, 1, 0], [0, 3, 21, 21, 4, 0, 1], [0, 3, 5, 5, 4, 2, 0]],
          y = [[2, 0, 1, 1, 0, 1, 0], [2, 0, 1, 1, 0, 2, 0], [2, 0, 2, 1, 3, 2, 0], [2, 0, 2, 33, 3, 1, 1]],
          v = {
        L: 0,
        R: 1,
        EN: 2,
        AN: 3,
        N: 4,
        B: 5,
        S: 6
      },
          l = {
        0: 0,
        5: 1,
        6: 2,
        7: 3,
        32: 4,
        251: 5,
        254: 6,
        255: 7
      },
          h = ["(", ")", "(", "<", ">", "<", "[", "]", "[", "{", "}", "{", "«", "»", "«", "‹", "›", "‹", "⁅", "⁆", "⁅", "⁽", "⁾", "⁽", "₍", "₎", "₍", "≤", "≥", "≤", "〈", "〉", "〈", "﹙", "﹚", "﹙", "﹛", "﹜", "﹛", "﹝", "﹞", "﹝", "﹤", "﹥", "﹤"],
          u = new RegExp(/^([1-4|9]|1[0-9]|2[0-9]|3[0168]|4[04589]|5[012]|7[78]|159|16[0-9]|17[0-2]|21[569]|22[03489]|250)$/),
          w = !1,
          b = 0;
      this.__bidiEngine__ = {};

      var x = function x(t) {
        var e = t.charCodeAt(),
            n = e >> 8,
            r = l[n];
        return void 0 !== r ? s[256 * r + (255 & e)] : 252 === n || 253 === n ? "AL" : u.test(n) ? "L" : 8 === n ? "R" : "N";
      },
          p = function p(t) {
        for (var e, n = 0; n < t.length; n++) {
          if ("L" === (e = x(t.charAt(n)))) return !1;
          if ("R" === e) return !0;
        }

        return !1;
      },
          N = function N(t, e, n, r) {
        var i,
            o,
            a,
            s,
            l = e[r];

        switch (l) {
          case "L":
          case "R":
            w = !1;
            break;

          case "N":
          case "AN":
            break;

          case "EN":
            w && (l = "AN");
            break;

          case "AL":
            w = !0, l = "R";
            break;

          case "WS":
            l = "N";
            break;

          case "CS":
            r < 1 || r + 1 >= e.length || "EN" !== (i = n[r - 1]) && "AN" !== i || "EN" !== (o = e[r + 1]) && "AN" !== o ? l = "N" : w && (o = "AN"), l = o === i ? o : "N";
            break;

          case "ES":
            l = "EN" === (i = 0 < r ? n[r - 1] : "B") && r + 1 < e.length && "EN" === e[r + 1] ? "EN" : "N";
            break;

          case "ET":
            if (0 < r && "EN" === n[r - 1]) {
              l = "EN";
              break;
            }

            if (w) {
              l = "N";
              break;
            }

            for (a = r + 1, s = e.length; a < s && "ET" === e[a];) {
              a++;
            }

            l = a < s && "EN" === e[a] ? "EN" : "N";
            break;

          case "NSM":
            if (c && !f) {
              for (s = e.length, a = r + 1; a < s && "NSM" === e[a];) {
                a++;
              }

              if (a < s) {
                var h = t[r],
                    u = 1425 <= h && h <= 2303 || 64286 === h;

                if (i = e[a], u && ("R" === i || "AL" === i)) {
                  l = "R";
                  break;
                }
              }
            }

            l = r < 1 || "B" === (i = e[r - 1]) ? "N" : n[r - 1];
            break;

          case "B":
            d = !(w = !1), l = b;
            break;

          case "S":
            g = !0, l = "N";
            break;

          case "LRE":
          case "RLE":
          case "LRO":
          case "RLO":
          case "PDF":
            w = !1;
            break;

          case "BN":
            l = "N";
        }

        return l;
      },
          L = function L(t, e, n) {
        var r = t.split("");
        return n && A(r, n, {
          hiLevel: b
        }), r.reverse(), e && e.reverse(), r.join("");
      },
          A = function A(t, e, n) {
        var r,
            i,
            o,
            a,
            s,
            l = -1,
            h = t.length,
            u = 0,
            c = [],
            f = b ? y : m,
            p = [];

        for (g = d = w = !1, i = 0; i < h; i++) {
          p[i] = x(t[i]);
        }

        for (o = 0; o < h; o++) {
          if (s = u, c[o] = N(t, p, c, o), r = 240 & (u = f[s][v[c[o]]]), u &= 15, e[o] = a = f[u][5], 0 < r) if (16 === r) {
            for (i = l; i < o; i++) {
              e[i] = 1;
            }

            l = -1;
          } else l = -1;
          if (f[u][6]) -1 === l && (l = o);else if (-1 < l) {
            for (i = l; i < o; i++) {
              e[i] = a;
            }

            l = -1;
          }
          "B" === p[o] && (e[o] = 0), n.hiLevel |= a;
        }

        g && function (t, e, n) {
          for (var r = 0; r < n; r++) {
            if ("S" === t[r]) {
              e[r] = b;

              for (var i = r - 1; 0 <= i && "WS" === t[i]; i--) {
                e[i] = b;
              }
            }
          }
        }(p, e, h);
      },
          S = function S(t, e, n, r, i) {
        if (!(i.hiLevel < t)) {
          if (1 === t && 1 === b && !d) return e.reverse(), void (n && n.reverse());

          for (var o, a, s, l, h = e.length, u = 0; u < h;) {
            if (r[u] >= t) {
              for (s = u + 1; s < h && r[s] >= t;) {
                s++;
              }

              for (l = u, a = s - 1; l < a; l++, a--) {
                o = e[l], e[l] = e[a], e[a] = o, n && (o = n[l], n[l] = n[a], n[a] = o);
              }

              u = s;
            }

            u++;
          }
        }
      },
          _ = function _(t, e, n) {
        var r = t.split(""),
            i = {
          hiLevel: b
        };
        return n || (n = []), A(r, n, i), function (t, e, n) {
          if (0 !== n.hiLevel && a) for (var r, i = 0; i < t.length; i++) {
            1 === e[i] && 0 <= (r = h.indexOf(t[i])) && (t[i] = h[r + 1]);
          }
        }(r, n, i), S(2, r, e, n, i), S(1, r, e, n, i), r.join("");
      };

      return this.__bidiEngine__.doBidiReorder = function (t, e, n) {
        if (function (t, e) {
          if (e) for (var n = 0; n < t.length; n++) {
            e[n] = n;
          }
          void 0 === f && (f = p(t)), void 0 === o && (o = p(t));
        }(t, e), c || !i || o) {
          if (c && i && f ^ o) b = f ? 1 : 0, t = L(t, e, n);else if (!c && i && o) b = f ? 1 : 0, t = _(t, e, n), t = L(t, e);else if (!c || f || i || o) {
            if (c && !i && f ^ o) t = L(t, e), t = f ? (b = 0, _(t, e, n)) : (b = 1, t = _(t, e, n), L(t, e));else if (c && f && !i && o) b = 1, t = _(t, e, n), t = L(t, e);else if (!c && !i && f ^ o) {
              var r = a;
              f ? (b = 1, t = _(t, e, n), b = 0, a = !1, t = _(t, e, n), a = r) : (b = 0, t = _(t, e, n), t = L(t, e), a = !(b = 1), t = _(t, e, n), a = r, t = L(t, e));
            }
          } else b = 0, t = _(t, e, n);
        } else b = f ? 1 : 0, t = _(t, e, n);
        return t;
      }, this.__bidiEngine__.setOptions = function (t) {
        t && (c = t.isInputVisual, i = t.isOutputVisual, f = t.isInputRtl, o = t.isOutputRtl, a = t.isSymmetricSwapping);
      }, this.__bidiEngine__.setOptions(t), this.__bidiEngine__;
    };

    var e = ["BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "S", "B", "S", "WS", "B", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "B", "B", "B", "S", "WS", "N", "N", "ET", "ET", "ET", "N", "N", "N", "N", "N", "ES", "CS", "ES", "CS", "CS", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "CS", "N", "N", "N", "N", "N", "N", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "N", "N", "N", "N", "N", "N", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "N", "N", "N", "N", "BN", "BN", "BN", "BN", "BN", "BN", "B", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "BN", "CS", "N", "ET", "ET", "ET", "ET", "N", "N", "N", "N", "L", "N", "N", "BN", "N", "N", "ET", "ET", "EN", "EN", "N", "L", "N", "N", "N", "EN", "L", "N", "N", "N", "N", "N", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "N", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "N", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "N", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "N", "N", "L", "L", "L", "L", "L", "L", "L", "N", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "N", "L", "N", "N", "N", "N", "N", "ET", "N", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "R", "NSM", "R", "NSM", "NSM", "R", "NSM", "NSM", "R", "NSM", "N", "N", "N", "N", "N", "N", "N", "N", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "N", "N", "N", "N", "N", "R", "R", "R", "R", "R", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "AN", "AN", "AN", "AN", "AN", "AN", "N", "N", "AL", "ET", "ET", "AL", "CS", "AL", "N", "N", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "AL", "AL", "N", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "AN", "AN", "AN", "AN", "AN", "AN", "AN", "AN", "AN", "AN", "ET", "AN", "AN", "AL", "AL", "AL", "NSM", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "AN", "N", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "AL", "AL", "NSM", "NSM", "N", "NSM", "NSM", "NSM", "NSM", "AL", "AL", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "N", "AL", "AL", "NSM", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "N", "N", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "AL", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "R", "R", "N", "N", "N", "N", "R", "N", "N", "N", "N", "N", "WS", "WS", "WS", "WS", "WS", "WS", "WS", "WS", "WS", "WS", "WS", "BN", "BN", "BN", "L", "R", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "WS", "B", "LRE", "RLE", "PDF", "LRO", "RLO", "CS", "ET", "ET", "ET", "ET", "ET", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "CS", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "WS", "BN", "BN", "BN", "BN", "BN", "N", "LRI", "RLI", "FSI", "PDI", "BN", "BN", "BN", "BN", "BN", "BN", "EN", "L", "N", "N", "EN", "EN", "EN", "EN", "EN", "EN", "ES", "ES", "N", "N", "N", "L", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "ES", "ES", "N", "N", "N", "N", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "N", "N", "N", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "ET", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "L", "L", "L", "L", "L", "L", "L", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "L", "L", "L", "L", "L", "N", "N", "N", "N", "N", "R", "NSM", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "ES", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "N", "R", "R", "R", "R", "R", "N", "R", "N", "R", "R", "N", "R", "R", "N", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "NSM", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "CS", "N", "CS", "N", "N", "CS", "N", "N", "N", "N", "N", "N", "N", "N", "N", "ET", "N", "N", "ES", "ES", "N", "N", "N", "N", "N", "ET", "ET", "N", "N", "N", "N", "N", "AL", "AL", "AL", "AL", "AL", "N", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "AL", "N", "N", "BN", "N", "N", "N", "ET", "ET", "ET", "N", "N", "N", "N", "N", "ES", "CS", "ES", "CS", "CS", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "EN", "CS", "N", "N", "N", "N", "N", "N", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "N", "N", "N", "N", "N", "N", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "N", "N", "N", "L", "L", "L", "L", "L", "L", "N", "N", "L", "L", "L", "L", "L", "L", "N", "N", "L", "L", "L", "L", "L", "L", "N", "N", "L", "L", "L", "N", "N", "N", "ET", "ET", "N", "N", "N", "ET", "ET", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N"],
        o = new t.__bidiEngine__({
      isInputVisual: !0
    });
    t.API.events.push(["postProcessText", function (t) {
      var e = t.text,
          n = (t.x, t.y, t.options || {}),
          r = (t.mutex, n.lang, []);

      if ("[object Array]" === Object.prototype.toString.call(e)) {
        var i = 0;

        for (r = [], i = 0; i < e.length; i += 1) {
          "[object Array]" === Object.prototype.toString.call(e[i]) ? r.push([o.doBidiReorder(e[i][0]), e[i][1], e[i][2]]) : r.push([o.doBidiReorder(e[i])]);
        }

        t.text = r;
      } else t.text = o.doBidiReorder(e);
    }]);
  }(lt), window.tmp = _t, Ft.prototype.parseHeader = function () {
    if (this.fileSize = this.datav.getUint32(this.pos, !0), this.pos += 4, this.reserved = this.datav.getUint32(this.pos, !0), this.pos += 4, this.offset = this.datav.getUint32(this.pos, !0), this.pos += 4, this.headerSize = this.datav.getUint32(this.pos, !0), this.pos += 4, this.width = this.datav.getUint32(this.pos, !0), this.pos += 4, this.height = this.datav.getInt32(this.pos, !0), this.pos += 4, this.planes = this.datav.getUint16(this.pos, !0), this.pos += 2, this.bitPP = this.datav.getUint16(this.pos, !0), this.pos += 2, this.compress = this.datav.getUint32(this.pos, !0), this.pos += 4, this.rawSize = this.datav.getUint32(this.pos, !0), this.pos += 4, this.hr = this.datav.getUint32(this.pos, !0), this.pos += 4, this.vr = this.datav.getUint32(this.pos, !0), this.pos += 4, this.colors = this.datav.getUint32(this.pos, !0), this.pos += 4, this.importantColors = this.datav.getUint32(this.pos, !0), this.pos += 4, 16 === this.bitPP && this.is_with_alpha && (this.bitPP = 15), this.bitPP < 15) {
      var t = 0 === this.colors ? 1 << this.bitPP : this.colors;
      this.palette = new Array(t);

      for (var e = 0; e < t; e++) {
        var n = this.datav.getUint8(this.pos++, !0),
            r = this.datav.getUint8(this.pos++, !0),
            i = this.datav.getUint8(this.pos++, !0),
            o = this.datav.getUint8(this.pos++, !0);
        this.palette[e] = {
          red: i,
          green: r,
          blue: n,
          quad: o
        };
      }
    }

    this.height < 0 && (this.height *= -1, this.bottom_up = !1);
  }, Ft.prototype.parseBGR = function () {
    this.pos = this.offset;

    try {
      var t = "bit" + this.bitPP,
          e = this.width * this.height * 4;
      this.data = new Uint8Array(e), this[t]();
    } catch (t) {
      console.log("bit decode error:" + t);
    }
  }, Ft.prototype.bit1 = function () {
    var t = Math.ceil(this.width / 8),
        e = t % 4,
        n = 0 <= this.height ? this.height - 1 : -this.height;

    for (n = this.height - 1; 0 <= n; n--) {
      for (var r = this.bottom_up ? n : this.height - 1 - n, i = 0; i < t; i++) {
        for (var o = this.datav.getUint8(this.pos++, !0), a = r * this.width * 4 + 8 * i * 4, s = 0; s < 8 && 8 * i + s < this.width; s++) {
          var l = this.palette[o >> 7 - s & 1];
          this.data[a + 4 * s] = l.blue, this.data[a + 4 * s + 1] = l.green, this.data[a + 4 * s + 2] = l.red, this.data[a + 4 * s + 3] = 255;
        }
      }

      0 != e && (this.pos += 4 - e);
    }
  }, Ft.prototype.bit4 = function () {
    for (var t = Math.ceil(this.width / 2), e = t % 4, n = this.height - 1; 0 <= n; n--) {
      for (var r = this.bottom_up ? n : this.height - 1 - n, i = 0; i < t; i++) {
        var o = this.datav.getUint8(this.pos++, !0),
            a = r * this.width * 4 + 2 * i * 4,
            s = o >> 4,
            l = 15 & o,
            h = this.palette[s];
        if (this.data[a] = h.blue, this.data[a + 1] = h.green, this.data[a + 2] = h.red, this.data[a + 3] = 255, 2 * i + 1 >= this.width) break;
        h = this.palette[l], this.data[a + 4] = h.blue, this.data[a + 4 + 1] = h.green, this.data[a + 4 + 2] = h.red, this.data[a + 4 + 3] = 255;
      }

      0 != e && (this.pos += 4 - e);
    }
  }, Ft.prototype.bit8 = function () {
    for (var t = this.width % 4, e = this.height - 1; 0 <= e; e--) {
      for (var n = this.bottom_up ? e : this.height - 1 - e, r = 0; r < this.width; r++) {
        var i = this.datav.getUint8(this.pos++, !0),
            o = n * this.width * 4 + 4 * r;

        if (i < this.palette.length) {
          var a = this.palette[i];
          this.data[o] = a.red, this.data[o + 1] = a.green, this.data[o + 2] = a.blue, this.data[o + 3] = 255;
        } else this.data[o] = 255, this.data[o + 1] = 255, this.data[o + 2] = 255, this.data[o + 3] = 255;
      }

      0 != t && (this.pos += 4 - t);
    }
  }, Ft.prototype.bit15 = function () {
    for (var t = this.width % 3, e = parseInt("11111", 2), n = this.height - 1; 0 <= n; n--) {
      for (var r = this.bottom_up ? n : this.height - 1 - n, i = 0; i < this.width; i++) {
        var o = this.datav.getUint16(this.pos, !0);
        this.pos += 2;
        var a = (o & e) / e * 255 | 0,
            s = (o >> 5 & e) / e * 255 | 0,
            l = (o >> 10 & e) / e * 255 | 0,
            h = o >> 15 ? 255 : 0,
            u = r * this.width * 4 + 4 * i;
        this.data[u] = l, this.data[u + 1] = s, this.data[u + 2] = a, this.data[u + 3] = h;
      }

      this.pos += t;
    }
  }, Ft.prototype.bit16 = function () {
    for (var t = this.width % 3, e = parseInt("11111", 2), n = parseInt("111111", 2), r = this.height - 1; 0 <= r; r--) {
      for (var i = this.bottom_up ? r : this.height - 1 - r, o = 0; o < this.width; o++) {
        var a = this.datav.getUint16(this.pos, !0);
        this.pos += 2;
        var s = (a & e) / e * 255 | 0,
            l = (a >> 5 & n) / n * 255 | 0,
            h = (a >> 11) / e * 255 | 0,
            u = i * this.width * 4 + 4 * o;
        this.data[u] = h, this.data[u + 1] = l, this.data[u + 2] = s, this.data[u + 3] = 255;
      }

      this.pos += t;
    }
  }, Ft.prototype.bit24 = function () {
    for (var t = this.height - 1; 0 <= t; t--) {
      for (var e = this.bottom_up ? t : this.height - 1 - t, n = 0; n < this.width; n++) {
        var r = this.datav.getUint8(this.pos++, !0),
            i = this.datav.getUint8(this.pos++, !0),
            o = this.datav.getUint8(this.pos++, !0),
            a = e * this.width * 4 + 4 * n;
        this.data[a] = o, this.data[a + 1] = i, this.data[a + 2] = r, this.data[a + 3] = 255;
      }

      this.pos += this.width % 4;
    }
  }, Ft.prototype.bit32 = function () {
    for (var t = this.height - 1; 0 <= t; t--) {
      for (var e = this.bottom_up ? t : this.height - 1 - t, n = 0; n < this.width; n++) {
        var r = this.datav.getUint8(this.pos++, !0),
            i = this.datav.getUint8(this.pos++, !0),
            o = this.datav.getUint8(this.pos++, !0),
            a = this.datav.getUint8(this.pos++, !0),
            s = e * this.width * 4 + 4 * n;
        this.data[s] = o, this.data[s + 1] = i, this.data[s + 2] = r, this.data[s + 3] = a;
      }
    }
  }, Ft.prototype.getData = function () {
    return this.data;
  }, window.tmp = Ft,
  /*
     Copyright (c) 2013 Gildas Lormeau. All rights reserved.
  
     Redistribution and use in source and binary forms, with or without
     modification, are permitted provided that the following conditions are met:
  
     1. Redistributions of source code must retain the above copyright notice,
     this list of conditions and the following disclaimer.
  
     2. Redistributions in binary form must reproduce the above copyright 
     notice, this list of conditions and the following disclaimer in 
     the documentation and/or other materials provided with the distribution.
  
     3. The names of the authors may not be used to endorse or promote products
     derived from this software without specific prior written permission.
  
     THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,
     INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
     FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,
     INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,
     INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
     LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
     OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
     LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
     NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
     EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     */
  function (t) {
    var d = 15,
        g = 573,
        e = [0, 1, 2, 3, 4, 4, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 0, 0, 16, 17, 18, 18, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29];

    function ct() {
      var p = this;

      function l(t, e) {
        for (var n = 0; n |= 1 & t, t >>>= 1, n <<= 1, 0 < --e;) {
          ;
        }

        return n >>> 1;
      }

      p.build_tree = function (t) {
        var e,
            n,
            r,
            i = p.dyn_tree,
            o = p.stat_desc.static_tree,
            a = p.stat_desc.elems,
            s = -1;

        for (t.heap_len = 0, t.heap_max = g, e = 0; e < a; e++) {
          0 !== i[2 * e] ? (t.heap[++t.heap_len] = s = e, t.depth[e] = 0) : i[2 * e + 1] = 0;
        }

        for (; t.heap_len < 2;) {
          i[2 * (r = t.heap[++t.heap_len] = s < 2 ? ++s : 0)] = 1, t.depth[r] = 0, t.opt_len--, o && (t.static_len -= o[2 * r + 1]);
        }

        for (p.max_code = s, e = Math.floor(t.heap_len / 2); 1 <= e; e--) {
          t.pqdownheap(i, e);
        }

        for (r = a; e = t.heap[1], t.heap[1] = t.heap[t.heap_len--], t.pqdownheap(i, 1), n = t.heap[1], t.heap[--t.heap_max] = e, t.heap[--t.heap_max] = n, i[2 * r] = i[2 * e] + i[2 * n], t.depth[r] = Math.max(t.depth[e], t.depth[n]) + 1, i[2 * e + 1] = i[2 * n + 1] = r, t.heap[1] = r++, t.pqdownheap(i, 1), 2 <= t.heap_len;) {
          ;
        }

        t.heap[--t.heap_max] = t.heap[1], function (t) {
          var e,
              n,
              r,
              i,
              o,
              a,
              s = p.dyn_tree,
              l = p.stat_desc.static_tree,
              h = p.stat_desc.extra_bits,
              u = p.stat_desc.extra_base,
              c = p.stat_desc.max_length,
              f = 0;

          for (i = 0; i <= d; i++) {
            t.bl_count[i] = 0;
          }

          for (s[2 * t.heap[t.heap_max] + 1] = 0, e = t.heap_max + 1; e < g; e++) {
            c < (i = s[2 * s[2 * (n = t.heap[e]) + 1] + 1] + 1) && (i = c, f++), s[2 * n + 1] = i, n > p.max_code || (t.bl_count[i]++, o = 0, u <= n && (o = h[n - u]), a = s[2 * n], t.opt_len += a * (i + o), l && (t.static_len += a * (l[2 * n + 1] + o)));
          }

          if (0 !== f) {
            do {
              for (i = c - 1; 0 === t.bl_count[i];) {
                i--;
              }

              t.bl_count[i]--, t.bl_count[i + 1] += 2, t.bl_count[c]--, f -= 2;
            } while (0 < f);

            for (i = c; 0 !== i; i--) {
              for (n = t.bl_count[i]; 0 !== n;) {
                (r = t.heap[--e]) > p.max_code || (s[2 * r + 1] != i && (t.opt_len += (i - s[2 * r + 1]) * s[2 * r], s[2 * r + 1] = i), n--);
              }
            }
          }
        }(t), function (t, e, n) {
          var r,
              i,
              o,
              a = [],
              s = 0;

          for (r = 1; r <= d; r++) {
            a[r] = s = s + n[r - 1] << 1;
          }

          for (i = 0; i <= e; i++) {
            0 !== (o = t[2 * i + 1]) && (t[2 * i] = l(a[o]++, o));
          }
        }(i, p.max_code, t.bl_count);
      };
    }

    function ft(t, e, n, r, i) {
      this.static_tree = t, this.extra_bits = e, this.extra_base = n, this.elems = r, this.max_length = i;
    }

    ct._length_code = [0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 28], ct.base_length = [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 16, 20, 24, 28, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 0], ct.base_dist = [0, 1, 2, 3, 4, 6, 8, 12, 16, 24, 32, 48, 64, 96, 128, 192, 256, 384, 512, 768, 1024, 1536, 2048, 3072, 4096, 6144, 8192, 12288, 16384, 24576], ct.d_code = function (t) {
      return t < 256 ? e[t] : e[256 + (t >>> 7)];
    }, ct.extra_lbits = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0], ct.extra_dbits = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13], ct.extra_blbits = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7], ct.bl_order = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], ft.static_ltree = [12, 8, 140, 8, 76, 8, 204, 8, 44, 8, 172, 8, 108, 8, 236, 8, 28, 8, 156, 8, 92, 8, 220, 8, 60, 8, 188, 8, 124, 8, 252, 8, 2, 8, 130, 8, 66, 8, 194, 8, 34, 8, 162, 8, 98, 8, 226, 8, 18, 8, 146, 8, 82, 8, 210, 8, 50, 8, 178, 8, 114, 8, 242, 8, 10, 8, 138, 8, 74, 8, 202, 8, 42, 8, 170, 8, 106, 8, 234, 8, 26, 8, 154, 8, 90, 8, 218, 8, 58, 8, 186, 8, 122, 8, 250, 8, 6, 8, 134, 8, 70, 8, 198, 8, 38, 8, 166, 8, 102, 8, 230, 8, 22, 8, 150, 8, 86, 8, 214, 8, 54, 8, 182, 8, 118, 8, 246, 8, 14, 8, 142, 8, 78, 8, 206, 8, 46, 8, 174, 8, 110, 8, 238, 8, 30, 8, 158, 8, 94, 8, 222, 8, 62, 8, 190, 8, 126, 8, 254, 8, 1, 8, 129, 8, 65, 8, 193, 8, 33, 8, 161, 8, 97, 8, 225, 8, 17, 8, 145, 8, 81, 8, 209, 8, 49, 8, 177, 8, 113, 8, 241, 8, 9, 8, 137, 8, 73, 8, 201, 8, 41, 8, 169, 8, 105, 8, 233, 8, 25, 8, 153, 8, 89, 8, 217, 8, 57, 8, 185, 8, 121, 8, 249, 8, 5, 8, 133, 8, 69, 8, 197, 8, 37, 8, 165, 8, 101, 8, 229, 8, 21, 8, 149, 8, 85, 8, 213, 8, 53, 8, 181, 8, 117, 8, 245, 8, 13, 8, 141, 8, 77, 8, 205, 8, 45, 8, 173, 8, 109, 8, 237, 8, 29, 8, 157, 8, 93, 8, 221, 8, 61, 8, 189, 8, 125, 8, 253, 8, 19, 9, 275, 9, 147, 9, 403, 9, 83, 9, 339, 9, 211, 9, 467, 9, 51, 9, 307, 9, 179, 9, 435, 9, 115, 9, 371, 9, 243, 9, 499, 9, 11, 9, 267, 9, 139, 9, 395, 9, 75, 9, 331, 9, 203, 9, 459, 9, 43, 9, 299, 9, 171, 9, 427, 9, 107, 9, 363, 9, 235, 9, 491, 9, 27, 9, 283, 9, 155, 9, 411, 9, 91, 9, 347, 9, 219, 9, 475, 9, 59, 9, 315, 9, 187, 9, 443, 9, 123, 9, 379, 9, 251, 9, 507, 9, 7, 9, 263, 9, 135, 9, 391, 9, 71, 9, 327, 9, 199, 9, 455, 9, 39, 9, 295, 9, 167, 9, 423, 9, 103, 9, 359, 9, 231, 9, 487, 9, 23, 9, 279, 9, 151, 9, 407, 9, 87, 9, 343, 9, 215, 9, 471, 9, 55, 9, 311, 9, 183, 9, 439, 9, 119, 9, 375, 9, 247, 9, 503, 9, 15, 9, 271, 9, 143, 9, 399, 9, 79, 9, 335, 9, 207, 9, 463, 9, 47, 9, 303, 9, 175, 9, 431, 9, 111, 9, 367, 9, 239, 9, 495, 9, 31, 9, 287, 9, 159, 9, 415, 9, 95, 9, 351, 9, 223, 9, 479, 9, 63, 9, 319, 9, 191, 9, 447, 9, 127, 9, 383, 9, 255, 9, 511, 9, 0, 7, 64, 7, 32, 7, 96, 7, 16, 7, 80, 7, 48, 7, 112, 7, 8, 7, 72, 7, 40, 7, 104, 7, 24, 7, 88, 7, 56, 7, 120, 7, 4, 7, 68, 7, 36, 7, 100, 7, 20, 7, 84, 7, 52, 7, 116, 7, 3, 8, 131, 8, 67, 8, 195, 8, 35, 8, 163, 8, 99, 8, 227, 8], ft.static_dtree = [0, 5, 16, 5, 8, 5, 24, 5, 4, 5, 20, 5, 12, 5, 28, 5, 2, 5, 18, 5, 10, 5, 26, 5, 6, 5, 22, 5, 14, 5, 30, 5, 1, 5, 17, 5, 9, 5, 25, 5, 5, 5, 21, 5, 13, 5, 29, 5, 3, 5, 19, 5, 11, 5, 27, 5, 7, 5, 23, 5], ft.static_l_desc = new ft(ft.static_ltree, ct.extra_lbits, 257, 286, d), ft.static_d_desc = new ft(ft.static_dtree, ct.extra_dbits, 0, 30, d), ft.static_bl_desc = new ft(null, ct.extra_blbits, 0, 19, 7);

    function n(t, e, n, r, i) {
      this.good_length = t, this.max_lazy = e, this.nice_length = n, this.max_chain = r, this.func = i;
    }

    var pt = [new n(0, 0, 0, 0, 0), new n(4, 4, 8, 4, 1), new n(4, 5, 16, 8, 1), new n(4, 6, 32, 32, 1), new n(4, 4, 16, 16, 2), new n(8, 16, 32, 32, 2), new n(8, 16, 128, 128, 2), new n(8, 32, 128, 256, 2), new n(32, 128, 258, 1024, 2), new n(32, 258, 258, 4096, 2)],
        dt = ["need dictionary", "stream end", "", "", "stream error", "data error", "", "buffer error", "", ""];

    function gt(t, e, n, r) {
      var i = t[2 * e],
          o = t[2 * n];
      return i < o || i == o && r[e] <= r[n];
    }

    function r() {
      var l,
          h,
          u,
          c,
          f,
          p,
          d,
          g,
          i,
          m,
          y,
          v,
          w,
          a,
          b,
          x,
          N,
          L,
          A,
          S,
          _,
          F,
          P,
          k,
          I,
          C,
          B,
          j,
          E,
          M,
          s,
          O,
          q,
          T,
          R,
          D,
          U,
          o,
          z,
          H,
          W,
          V = this,
          G = new ct(),
          Y = new ct(),
          J = new ct();

      function X() {
        var t;

        for (t = 0; t < 286; t++) {
          s[2 * t] = 0;
        }

        for (t = 0; t < 30; t++) {
          O[2 * t] = 0;
        }

        for (t = 0; t < 19; t++) {
          q[2 * t] = 0;
        }

        s[512] = 1, V.opt_len = V.static_len = 0, D = o = 0;
      }

      function K(t, e) {
        var n,
            r,
            i = -1,
            o = t[1],
            a = 0,
            s = 7,
            l = 4;

        for (0 === o && (s = 138, l = 3), t[2 * (e + 1) + 1] = 65535, n = 0; n <= e; n++) {
          r = o, o = t[2 * (n + 1) + 1], ++a < s && r == o || (a < l ? q[2 * r] += a : 0 !== r ? (r != i && q[2 * r]++, q[32]++) : a <= 10 ? q[34]++ : q[36]++, i = r, l = (a = 0) === o ? (s = 138, 3) : r == o ? (s = 6, 3) : (s = 7, 4));
        }
      }

      function Z(t) {
        V.pending_buf[V.pending++] = t;
      }

      function Q(t) {
        Z(255 & t), Z(t >>> 8 & 255);
      }

      function $(t, e) {
        var n,
            r = e;
        16 - r < W ? (Q(H |= (n = t) << W & 65535), H = n >>> 16 - W, W += r - 16) : (H |= t << W & 65535, W += r);
      }

      function tt(t, e) {
        var n = 2 * t;
        $(65535 & e[n], 65535 & e[n + 1]);
      }

      function et(t, e) {
        var n,
            r,
            i = -1,
            o = t[1],
            a = 0,
            s = 7,
            l = 4;

        for (0 === o && (s = 138, l = 3), n = 0; n <= e; n++) {
          if (r = o, o = t[2 * (n + 1) + 1], !(++a < s && r == o)) {
            if (a < l) for (; tt(r, q), 0 != --a;) {
              ;
            } else 0 !== r ? (r != i && (tt(r, q), a--), tt(16, q), $(a - 3, 2)) : a <= 10 ? (tt(17, q), $(a - 3, 3)) : (tt(18, q), $(a - 11, 7));
            i = r, l = (a = 0) === o ? (s = 138, 3) : r == o ? (s = 6, 3) : (s = 7, 4);
          }
        }
      }

      function nt() {
        16 == W ? (Q(H), W = H = 0) : 8 <= W && (Z(255 & H), H >>>= 8, W -= 8);
      }

      function rt(t, e) {
        var n, r, i;

        if (V.pending_buf[U + 2 * D] = t >>> 8 & 255, V.pending_buf[U + 2 * D + 1] = 255 & t, V.pending_buf[T + D] = 255 & e, D++, 0 === t ? s[2 * e]++ : (o++, t--, s[2 * (ct._length_code[e] + 256 + 1)]++, O[2 * ct.d_code(t)]++), 0 == (8191 & D) && 2 < B) {
          for (n = 8 * D, r = _ - N, i = 0; i < 30; i++) {
            n += O[2 * i] * (5 + ct.extra_dbits[i]);
          }

          if (n >>>= 3, o < Math.floor(D / 2) && n < Math.floor(r / 2)) return !0;
        }

        return D == R - 1;
      }

      function it(t, e) {
        var n,
            r,
            i,
            o,
            a = 0;
        if (0 !== D) for (; n = V.pending_buf[U + 2 * a] << 8 & 65280 | 255 & V.pending_buf[U + 2 * a + 1], r = 255 & V.pending_buf[T + a], a++, 0 === n ? tt(r, t) : (tt((i = ct._length_code[r]) + 256 + 1, t), 0 !== (o = ct.extra_lbits[i]) && $(r -= ct.base_length[i], o), tt(i = ct.d_code(--n), e), 0 !== (o = ct.extra_dbits[i]) && $(n -= ct.base_dist[i], o)), a < D;) {
          ;
        }
        tt(256, t), z = t[513];
      }

      function ot() {
        8 < W ? Q(H) : 0 < W && Z(255 & H), W = H = 0;
      }

      function at(t, e, n) {
        var r, i, o;
        $(0 + (n ? 1 : 0), 3), r = t, i = e, o = !0, ot(), z = 8, o && (Q(i), Q(~i)), V.pending_buf.set(g.subarray(r, r + i), V.pending), V.pending += i;
      }

      function e(t, e, n) {
        var r,
            i,
            o = 0;
        0 < B ? (G.build_tree(V), Y.build_tree(V), o = function () {
          var t;

          for (K(s, G.max_code), K(O, Y.max_code), J.build_tree(V), t = 18; 3 <= t && 0 === q[2 * ct.bl_order[t] + 1]; t--) {
            ;
          }

          return V.opt_len += 3 * (t + 1) + 5 + 5 + 4, t;
        }(), r = V.opt_len + 3 + 7 >>> 3, (i = V.static_len + 3 + 7 >>> 3) <= r && (r = i)) : r = i = e + 5, e + 4 <= r && -1 != t ? at(t, e, n) : i == r ? ($(2 + (n ? 1 : 0), 3), it(ft.static_ltree, ft.static_dtree)) : ($(4 + (n ? 1 : 0), 3), function (t, e, n) {
          var r;

          for ($(t - 257, 5), $(e - 1, 5), $(n - 4, 4), r = 0; r < n; r++) {
            $(q[2 * ct.bl_order[r] + 1], 3);
          }

          et(s, t - 1), et(O, e - 1);
        }(G.max_code + 1, Y.max_code + 1, o + 1), it(s, O)), X(), n && ot();
      }

      function st(t) {
        e(0 <= N ? N : -1, _ - N, t), N = _, l.flush_pending();
      }

      function lt() {
        var t, e, n, r;

        do {
          if (0 === (r = i - P - _) && 0 === _ && 0 === P) r = f;else if (-1 == r) r--;else if (f + f - 262 <= _) {
            for (g.set(g.subarray(f, f + f), 0), F -= f, _ -= f, N -= f, n = t = w; e = 65535 & y[--n], y[n] = f <= e ? e - f : 0, 0 != --t;) {
              ;
            }

            for (n = t = f; e = 65535 & m[--n], m[n] = f <= e ? e - f : 0, 0 != --t;) {
              ;
            }

            r += f;
          }
          if (0 === l.avail_in) return;
          t = l.read_buf(g, _ + P, r), 3 <= (P += t) && (v = ((v = 255 & g[_]) << x ^ 255 & g[_ + 1]) & b);
        } while (P < 262 && 0 !== l.avail_in);
      }

      function ht(t) {
        var e,
            n,
            r = I,
            i = _,
            o = k,
            a = f - 262 < _ ? _ - (f - 262) : 0,
            s = M,
            l = d,
            h = _ + 258,
            u = g[i + o - 1],
            c = g[i + o];
        E <= k && (r >>= 2), P < s && (s = P);

        do {
          if (g[(e = t) + o] == c && g[e + o - 1] == u && g[e] == g[i] && g[++e] == g[i + 1]) {
            i += 2, e++;

            do {} while (g[++i] == g[++e] && g[++i] == g[++e] && g[++i] == g[++e] && g[++i] == g[++e] && g[++i] == g[++e] && g[++i] == g[++e] && g[++i] == g[++e] && g[++i] == g[++e] && i < h);

            if (n = 258 - (h - i), i = h - 258, o < n) {
              if (F = t, s <= (o = n)) break;
              u = g[i + o - 1], c = g[i + o];
            }
          }
        } while ((t = 65535 & m[t & l]) > a && 0 != --r);

        return o <= P ? o : P;
      }

      function ut(t) {
        return t.total_in = t.total_out = 0, t.msg = null, V.pending = 0, V.pending_out = 0, h = 113, c = 0, G.dyn_tree = s, G.stat_desc = ft.static_l_desc, Y.dyn_tree = O, Y.stat_desc = ft.static_d_desc, J.dyn_tree = q, J.stat_desc = ft.static_bl_desc, W = H = 0, z = 8, X(), function () {
          var t;

          for (i = 2 * f, t = y[w - 1] = 0; t < w - 1; t++) {
            y[t] = 0;
          }

          C = pt[B].max_lazy, E = pt[B].good_length, M = pt[B].nice_length, I = pt[B].max_chain, L = k = 2, v = S = P = N = _ = 0;
        }(), 0;
      }

      V.depth = [], V.bl_count = [], V.heap = [], s = [], O = [], q = [], V.pqdownheap = function (t, e) {
        for (var n = V.heap, r = n[e], i = e << 1; i <= V.heap_len && (i < V.heap_len && gt(t, n[i + 1], n[i], V.depth) && i++, !gt(t, r, n[i], V.depth));) {
          n[e] = n[i], e = i, i <<= 1;
        }

        n[e] = r;
      }, V.deflateInit = function (t, e, n, r, i, o) {
        return r || (r = 8), i || (i = 8), o || (o = 0), t.msg = null, -1 == e && (e = 6), i < 1 || 9 < i || 8 != r || n < 9 || 15 < n || e < 0 || 9 < e || o < 0 || 2 < o ? -2 : (t.dstate = V, d = (f = 1 << (p = n)) - 1, b = (w = 1 << (a = i + 7)) - 1, x = Math.floor((a + 3 - 1) / 3), g = new Uint8Array(2 * f), m = [], y = [], R = 1 << i + 6, V.pending_buf = new Uint8Array(4 * R), u = 4 * R, U = Math.floor(R / 2), T = 3 * R, B = e, j = o, ut(t));
      }, V.deflateEnd = function () {
        return 42 != h && 113 != h && 666 != h ? -2 : (V.pending_buf = null, g = m = y = null, V.dstate = null, 113 == h ? -3 : 0);
      }, V.deflateParams = function (t, e, n) {
        var r = 0;
        return -1 == e && (e = 6), e < 0 || 9 < e || n < 0 || 2 < n ? -2 : (pt[B].func != pt[e].func && 0 !== t.total_in && (r = t.deflate(1)), B != e && (C = pt[B = e].max_lazy, E = pt[B].good_length, M = pt[B].nice_length, I = pt[B].max_chain), j = n, r);
      }, V.deflateSetDictionary = function (t, e, n) {
        var r,
            i = n,
            o = 0;
        if (!e || 42 != h) return -2;
        if (i < 3) return 0;

        for (f - 262 < i && (o = n - (i = f - 262)), g.set(e.subarray(o, o + i), 0), N = _ = i, v = ((v = 255 & g[0]) << x ^ 255 & g[1]) & b, r = 0; r <= i - 3; r++) {
          v = (v << x ^ 255 & g[r + 2]) & b, m[r & d] = y[v], y[v] = r;
        }

        return 0;
      }, V.deflate = function (t, e) {
        var n, r, i, o, a, s;
        if (4 < e || e < 0) return -2;
        if (!t.next_out || !t.next_in && 0 !== t.avail_in || 666 == h && 4 != e) return t.msg = dt[4], -2;
        if (0 === t.avail_out) return t.msg = dt[7], -5;

        if (l = t, o = c, c = e, 42 == h && (r = 8 + (p - 8 << 4) << 8, 3 < (i = (B - 1 & 255) >> 1) && (i = 3), r |= i << 6, 0 !== _ && (r |= 32), h = 113, Z((s = r += 31 - r % 31) >> 8 & 255), Z(255 & s)), 0 !== V.pending) {
          if (l.flush_pending(), 0 === l.avail_out) return c = -1, 0;
        } else if (0 === l.avail_in && e <= o && 4 != e) return l.msg = dt[7], -5;

        if (666 == h && 0 !== l.avail_in) return t.msg = dt[7], -5;

        if (0 !== l.avail_in || 0 !== P || 0 != e && 666 != h) {
          switch (a = -1, pt[B].func) {
            case 0:
              a = function (t) {
                var e,
                    n = 65535;

                for (u - 5 < n && (n = u - 5);;) {
                  if (P <= 1) {
                    if (lt(), 0 === P && 0 == t) return 0;
                    if (0 === P) break;
                  }

                  if (_ += P, e = N + n, ((P = 0) === _ || e <= _) && (P = _ - e, _ = e, st(!1), 0 === l.avail_out)) return 0;
                  if (f - 262 <= _ - N && (st(!1), 0 === l.avail_out)) return 0;
                }

                return st(4 == t), 0 === l.avail_out ? 4 == t ? 2 : 0 : 4 == t ? 3 : 1;
              }(e);

              break;

            case 1:
              a = function (t) {
                for (var e, n = 0;;) {
                  if (P < 262) {
                    if (lt(), P < 262 && 0 == t) return 0;
                    if (0 === P) break;
                  }

                  if (3 <= P && (v = (v << x ^ 255 & g[_ + 2]) & b, n = 65535 & y[v], m[_ & d] = y[v], y[v] = _), 0 !== n && (_ - n & 65535) <= f - 262 && 2 != j && (L = ht(n)), 3 <= L) {
                    if (e = rt(_ - F, L - 3), P -= L, L <= C && 3 <= P) {
                      for (L--; v = (v << x ^ 255 & g[++_ + 2]) & b, n = 65535 & y[v], m[_ & d] = y[v], y[v] = _, 0 != --L;) {
                        ;
                      }

                      _++;
                    } else _ += L, L = 0, v = ((v = 255 & g[_]) << x ^ 255 & g[_ + 1]) & b;
                  } else e = rt(0, 255 & g[_]), P--, _++;
                  if (e && (st(!1), 0 === l.avail_out)) return 0;
                }

                return st(4 == t), 0 === l.avail_out ? 4 == t ? 2 : 0 : 4 == t ? 3 : 1;
              }(e);

              break;

            case 2:
              a = function (t) {
                for (var e, n, r = 0;;) {
                  if (P < 262) {
                    if (lt(), P < 262 && 0 == t) return 0;
                    if (0 === P) break;
                  }

                  if (3 <= P && (v = (v << x ^ 255 & g[_ + 2]) & b, r = 65535 & y[v], m[_ & d] = y[v], y[v] = _), k = L, A = F, L = 2, 0 !== r && k < C && (_ - r & 65535) <= f - 262 && (2 != j && (L = ht(r)), L <= 5 && (1 == j || 3 == L && 4096 < _ - F) && (L = 2)), 3 <= k && L <= k) {
                    for (n = _ + P - 3, e = rt(_ - 1 - A, k - 3), P -= k - 1, k -= 2; ++_ <= n && (v = (v << x ^ 255 & g[_ + 2]) & b, r = 65535 & y[v], m[_ & d] = y[v], y[v] = _), 0 != --k;) {
                      ;
                    }

                    if (S = 0, L = 2, _++, e && (st(!1), 0 === l.avail_out)) return 0;
                  } else if (0 !== S) {
                    if ((e = rt(0, 255 & g[_ - 1])) && st(!1), _++, P--, 0 === l.avail_out) return 0;
                  } else S = 1, _++, P--;
                }

                return 0 !== S && (e = rt(0, 255 & g[_ - 1]), S = 0), st(4 == t), 0 === l.avail_out ? 4 == t ? 2 : 0 : 4 == t ? 3 : 1;
              }(e);

          }

          if (2 != a && 3 != a || (h = 666), 0 == a || 2 == a) return 0 === l.avail_out && (c = -1), 0;

          if (1 == a) {
            if (1 == e) $(2, 3), tt(256, ft.static_ltree), nt(), 1 + z + 10 - W < 9 && ($(2, 3), tt(256, ft.static_ltree), nt()), z = 7;else if (at(0, 0, !1), 3 == e) for (n = 0; n < w; n++) {
              y[n] = 0;
            }
            if (l.flush_pending(), 0 === l.avail_out) return c = -1, 0;
          }
        }

        return 4 != e ? 0 : 1;
      };
    }

    function i() {
      this.next_in_index = 0, this.next_out_index = 0, this.avail_in = 0, this.total_in = 0, this.avail_out = 0, this.total_out = 0;
    }

    i.prototype = {
      deflateInit: function deflateInit(t, e) {
        return this.dstate = new r(), e || (e = d), this.dstate.deflateInit(this, t, e);
      },
      deflate: function deflate(t) {
        return this.dstate ? this.dstate.deflate(this, t) : -2;
      },
      deflateEnd: function deflateEnd() {
        if (!this.dstate) return -2;
        var t = this.dstate.deflateEnd();
        return this.dstate = null, t;
      },
      deflateParams: function deflateParams(t, e) {
        return this.dstate ? this.dstate.deflateParams(this, t, e) : -2;
      },
      deflateSetDictionary: function deflateSetDictionary(t, e) {
        return this.dstate ? this.dstate.deflateSetDictionary(this, t, e) : -2;
      },
      read_buf: function read_buf(t, e, n) {
        var r = this.avail_in;
        return n < r && (r = n), 0 === r ? 0 : (this.avail_in -= r, t.set(this.next_in.subarray(this.next_in_index, this.next_in_index + r), e), this.next_in_index += r, this.total_in += r, r);
      },
      flush_pending: function flush_pending() {
        var t = this,
            e = t.dstate.pending;
        e > t.avail_out && (e = t.avail_out), 0 !== e && (t.next_out.set(t.dstate.pending_buf.subarray(t.dstate.pending_out, t.dstate.pending_out + e), t.next_out_index), t.next_out_index += e, t.dstate.pending_out += e, t.total_out += e, t.avail_out -= e, t.dstate.pending -= e, 0 === t.dstate.pending && (t.dstate.pending_out = 0));
      }
    };
    var o = t.zip || t;

    o.Deflater = o._jzlib_Deflater = function (t) {
      var s = new i(),
          l = new Uint8Array(512),
          e = t ? t.level : -1;
      void 0 === e && (e = -1), s.deflateInit(e), s.next_out = l, this.append = function (t, e) {
        var n,
            r = [],
            i = 0,
            o = 0,
            a = 0;

        if (t.length) {
          s.next_in_index = 0, s.next_in = t, s.avail_in = t.length;

          do {
            if (s.next_out_index = 0, s.avail_out = 512, 0 != s.deflate(0)) throw new Error("deflating: " + s.msg);
            s.next_out_index && (512 == s.next_out_index ? r.push(new Uint8Array(l)) : r.push(new Uint8Array(l.subarray(0, s.next_out_index)))), a += s.next_out_index, e && 0 < s.next_in_index && s.next_in_index != i && (e(s.next_in_index), i = s.next_in_index);
          } while (0 < s.avail_in || 0 === s.avail_out);

          return n = new Uint8Array(a), r.forEach(function (t) {
            n.set(t, o), o += t.length;
          }), n;
        }
      }, this.flush = function () {
        var t,
            e,
            n = [],
            r = 0,
            i = 0;

        do {
          if (s.next_out_index = 0, s.avail_out = 512, 1 != (t = s.deflate(4)) && 0 != t) throw new Error("deflating: " + s.msg);
          0 < 512 - s.avail_out && n.push(new Uint8Array(l.subarray(0, s.next_out_index))), i += s.next_out_index;
        } while (0 < s.avail_in || 0 === s.avail_out);

        return s.deflateEnd(), e = new Uint8Array(i), n.forEach(function (t) {
          e.set(t, r), r += t.length;
        }), e;
      };
    };
  }("undefined" != typeof self && self || "undefined" != typeof window && window || "undefined" != typeof global && global || Function('return typeof this === "object" && this.content')() || Function("return this")()), ("undefined" != typeof self && self || "undefined" != typeof window && window || "undefined" != typeof global && global || Function('return typeof this === "object" && this.content')() || Function("return this")()).RGBColor = function (t) {
    var e;
    t = t || "", this.ok = !1, "#" == t.charAt(0) && (t = t.substr(1, 6)), t = (t = t.replace(/ /g, "")).toLowerCase();
    var n = {
      aliceblue: "f0f8ff",
      antiquewhite: "faebd7",
      aqua: "00ffff",
      aquamarine: "7fffd4",
      azure: "f0ffff",
      beige: "f5f5dc",
      bisque: "ffe4c4",
      black: "000000",
      blanchedalmond: "ffebcd",
      blue: "0000ff",
      blueviolet: "8a2be2",
      brown: "a52a2a",
      burlywood: "deb887",
      cadetblue: "5f9ea0",
      chartreuse: "7fff00",
      chocolate: "d2691e",
      coral: "ff7f50",
      cornflowerblue: "6495ed",
      cornsilk: "fff8dc",
      crimson: "dc143c",
      cyan: "00ffff",
      darkblue: "00008b",
      darkcyan: "008b8b",
      darkgoldenrod: "b8860b",
      darkgray: "a9a9a9",
      darkgreen: "006400",
      darkkhaki: "bdb76b",
      darkmagenta: "8b008b",
      darkolivegreen: "556b2f",
      darkorange: "ff8c00",
      darkorchid: "9932cc",
      darkred: "8b0000",
      darksalmon: "e9967a",
      darkseagreen: "8fbc8f",
      darkslateblue: "483d8b",
      darkslategray: "2f4f4f",
      darkturquoise: "00ced1",
      darkviolet: "9400d3",
      deeppink: "ff1493",
      deepskyblue: "00bfff",
      dimgray: "696969",
      dodgerblue: "1e90ff",
      feldspar: "d19275",
      firebrick: "b22222",
      floralwhite: "fffaf0",
      forestgreen: "228b22",
      fuchsia: "ff00ff",
      gainsboro: "dcdcdc",
      ghostwhite: "f8f8ff",
      gold: "ffd700",
      goldenrod: "daa520",
      gray: "808080",
      green: "008000",
      greenyellow: "adff2f",
      honeydew: "f0fff0",
      hotpink: "ff69b4",
      indianred: "cd5c5c",
      indigo: "4b0082",
      ivory: "fffff0",
      khaki: "f0e68c",
      lavender: "e6e6fa",
      lavenderblush: "fff0f5",
      lawngreen: "7cfc00",
      lemonchiffon: "fffacd",
      lightblue: "add8e6",
      lightcoral: "f08080",
      lightcyan: "e0ffff",
      lightgoldenrodyellow: "fafad2",
      lightgrey: "d3d3d3",
      lightgreen: "90ee90",
      lightpink: "ffb6c1",
      lightsalmon: "ffa07a",
      lightseagreen: "20b2aa",
      lightskyblue: "87cefa",
      lightslateblue: "8470ff",
      lightslategray: "778899",
      lightsteelblue: "b0c4de",
      lightyellow: "ffffe0",
      lime: "00ff00",
      limegreen: "32cd32",
      linen: "faf0e6",
      magenta: "ff00ff",
      maroon: "800000",
      mediumaquamarine: "66cdaa",
      mediumblue: "0000cd",
      mediumorchid: "ba55d3",
      mediumpurple: "9370d8",
      mediumseagreen: "3cb371",
      mediumslateblue: "7b68ee",
      mediumspringgreen: "00fa9a",
      mediumturquoise: "48d1cc",
      mediumvioletred: "c71585",
      midnightblue: "191970",
      mintcream: "f5fffa",
      mistyrose: "ffe4e1",
      moccasin: "ffe4b5",
      navajowhite: "ffdead",
      navy: "000080",
      oldlace: "fdf5e6",
      olive: "808000",
      olivedrab: "6b8e23",
      orange: "ffa500",
      orangered: "ff4500",
      orchid: "da70d6",
      palegoldenrod: "eee8aa",
      palegreen: "98fb98",
      paleturquoise: "afeeee",
      palevioletred: "d87093",
      papayawhip: "ffefd5",
      peachpuff: "ffdab9",
      peru: "cd853f",
      pink: "ffc0cb",
      plum: "dda0dd",
      powderblue: "b0e0e6",
      purple: "800080",
      red: "ff0000",
      rosybrown: "bc8f8f",
      royalblue: "4169e1",
      saddlebrown: "8b4513",
      salmon: "fa8072",
      sandybrown: "f4a460",
      seagreen: "2e8b57",
      seashell: "fff5ee",
      sienna: "a0522d",
      silver: "c0c0c0",
      skyblue: "87ceeb",
      slateblue: "6a5acd",
      slategray: "708090",
      snow: "fffafa",
      springgreen: "00ff7f",
      steelblue: "4682b4",
      tan: "d2b48c",
      teal: "008080",
      thistle: "d8bfd8",
      tomato: "ff6347",
      turquoise: "40e0d0",
      violet: "ee82ee",
      violetred: "d02090",
      wheat: "f5deb3",
      white: "ffffff",
      whitesmoke: "f5f5f5",
      yellow: "ffff00",
      yellowgreen: "9acd32"
    };

    for (var r in n) {
      t == r && (t = n[r]);
    }

    for (var i = [{
      re: /^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/,
      example: ["rgb(123, 234, 45)", "rgb(255,234,245)"],
      process: function process(t) {
        return [parseInt(t[1]), parseInt(t[2]), parseInt(t[3])];
      }
    }, {
      re: /^(\w{2})(\w{2})(\w{2})$/,
      example: ["#00ff00", "336699"],
      process: function process(t) {
        return [parseInt(t[1], 16), parseInt(t[2], 16), parseInt(t[3], 16)];
      }
    }, {
      re: /^(\w{1})(\w{1})(\w{1})$/,
      example: ["#fb0", "f0f"],
      process: function process(t) {
        return [parseInt(t[1] + t[1], 16), parseInt(t[2] + t[2], 16), parseInt(t[3] + t[3], 16)];
      }
    }], o = 0; o < i.length; o++) {
      var a = i[o].re,
          s = i[o].process,
          l = a.exec(t);
      l && (e = s(l), this.r = e[0], this.g = e[1], this.b = e[2], this.ok = !0);
    }

    this.r = this.r < 0 || isNaN(this.r) ? 0 : 255 < this.r ? 255 : this.r, this.g = this.g < 0 || isNaN(this.g) ? 0 : 255 < this.g ? 255 : this.g, this.b = this.b < 0 || isNaN(this.b) ? 0 : 255 < this.b ? 255 : this.b, this.toRGB = function () {
      return "rgb(" + this.r + ", " + this.g + ", " + this.b + ")";
    }, this.toHex = function () {
      var t = this.r.toString(16),
          e = this.g.toString(16),
          n = this.b.toString(16);
      return 1 == t.length && (t = "0" + t), 1 == e.length && (e = "0" + e), 1 == n.length && (n = "0" + n), "#" + t + e + n;
    };
  }, function (t) {
    var n = "+".charCodeAt(0),
        r = "/".charCodeAt(0),
        i = "0".charCodeAt(0),
        o = "a".charCodeAt(0),
        a = "A".charCodeAt(0),
        s = "-".charCodeAt(0),
        l = "_".charCodeAt(0),
        u = function u(t) {
      var e = t.charCodeAt(0);
      return e === n || e === s ? 62 : e === r || e === l ? 63 : e < i ? -1 : e < i + 10 ? e - i + 26 + 26 : e < a + 26 ? e - a : e < o + 26 ? e - o + 26 : void 0;
    };

    t.API.TTFFont = function () {
      function i(t, e, n) {
        var r;

        if (this.rawData = t, r = this.contents = new J(t), this.contents.pos = 4, "ttcf" === r.readString(4)) {
          if (!e) throw new Error("Must specify a font name for TTC files.");
          throw new Error("Font " + e + " not found in TTC file.");
        }

        r.pos = 0, this.parse(), this.subset = new P(this), this.registerTTF();
      }

      return i.open = function (t, e, n, r) {
        if ("string" != typeof n) throw new Error("Invalid argument supplied in TTFFont.open");
        return new i(function (t) {
          var e, n, r, i, o, a;
          if (0 < t.length % 4) throw new Error("Invalid string. Length must be a multiple of 4");
          var s = t.length;
          o = "=" === t.charAt(s - 2) ? 2 : "=" === t.charAt(s - 1) ? 1 : 0, a = new Uint8Array(3 * t.length / 4 - o), r = 0 < o ? t.length - 4 : t.length;
          var l = 0;

          function h(t) {
            a[l++] = t;
          }

          for (n = e = 0; e < r; e += 4, n += 3) {
            h((16711680 & (i = u(t.charAt(e)) << 18 | u(t.charAt(e + 1)) << 12 | u(t.charAt(e + 2)) << 6 | u(t.charAt(e + 3)))) >> 16), h((65280 & i) >> 8), h(255 & i);
          }

          return 2 === o ? h(255 & (i = u(t.charAt(e)) << 2 | u(t.charAt(e + 1)) >> 4)) : 1 === o && (h((i = u(t.charAt(e)) << 10 | u(t.charAt(e + 1)) << 4 | u(t.charAt(e + 2)) >> 2) >> 8 & 255), h(255 & i)), a;
        }(n), e, r);
      }, i.prototype.parse = function () {
        return this.directory = new e(this.contents), this.head = new p(this), this.name = new b(this), this.cmap = new y(this), this.toUnicode = new Map(), this.hhea = new g(this), this.maxp = new x(this), this.hmtx = new N(this), this.post = new v(this), this.os2 = new m(this), this.loca = new F(this), this.glyf = new A(this), this.ascender = this.os2.exists && this.os2.ascender || this.hhea.ascender, this.decender = this.os2.exists && this.os2.decender || this.hhea.decender, this.lineGap = this.os2.exists && this.os2.lineGap || this.hhea.lineGap, this.bbox = [this.head.xMin, this.head.yMin, this.head.xMax, this.head.yMax];
      }, i.prototype.registerTTF = function () {
        var i, t, e, n, r;
        if (this.scaleFactor = 1e3 / this.head.unitsPerEm, this.bbox = function () {
          var t, e, n, r;

          for (r = [], t = 0, e = (n = this.bbox).length; t < e; t++) {
            i = n[t], r.push(Math.round(i * this.scaleFactor));
          }

          return r;
        }.call(this), this.stemV = 0, this.post.exists ? (e = 255 & (n = this.post.italic_angle), !0 & (t = n >> 16) && (t = -(1 + (65535 ^ t))), this.italicAngle = +(t + "." + e)) : this.italicAngle = 0, this.ascender = Math.round(this.ascender * this.scaleFactor), this.decender = Math.round(this.decender * this.scaleFactor), this.lineGap = Math.round(this.lineGap * this.scaleFactor), this.capHeight = this.os2.exists && this.os2.capHeight || this.ascender, this.xHeight = this.os2.exists && this.os2.xHeight || 0, this.familyClass = (this.os2.exists && this.os2.familyClass || 0) >> 8, this.isSerif = 1 === (r = this.familyClass) || 2 === r || 3 === r || 4 === r || 5 === r || 7 === r, this.isScript = 10 === this.familyClass, this.flags = 0, this.post.isFixedPitch && (this.flags |= 1), this.isSerif && (this.flags |= 2), this.isScript && (this.flags |= 8), 0 !== this.italicAngle && (this.flags |= 64), this.flags |= 32, !this.cmap.unicode) throw new Error("No unicode cmap for font");
      }, i.prototype.characterToGlyph = function (t) {
        var e;
        return (null != (e = this.cmap.unicode) ? e.codeMap[t] : void 0) || 0;
      }, i.prototype.widthOfGlyph = function (t) {
        var e;
        return e = 1e3 / this.head.unitsPerEm, this.hmtx.forGlyph(t).advance * e;
      }, i.prototype.widthOfString = function (t, e, n) {
        var r, i, o, a, s;

        for (i = a = o = 0, s = (t = "" + t).length; 0 <= s ? a < s : s < a; i = 0 <= s ? ++a : --a) {
          r = t.charCodeAt(i), o += this.widthOfGlyph(this.characterToGlyph(r)) + n * (1e3 / e) || 0;
        }

        return o * (e / 1e3);
      }, i.prototype.lineHeight = function (t, e) {
        var n;
        return null == e && (e = !1), n = e ? this.lineGap : 0, (this.ascender + n - this.decender) / 1e3 * t;
      }, i;
    }();

    var h,
        J = function () {
      function t(t) {
        this.data = null != t ? t : [], this.pos = 0, this.length = this.data.length;
      }

      return t.prototype.readByte = function () {
        return this.data[this.pos++];
      }, t.prototype.writeByte = function (t) {
        return this.data[this.pos++] = t;
      }, t.prototype.readUInt32 = function () {
        return 16777216 * this.readByte() + (this.readByte() << 16) + (this.readByte() << 8) + this.readByte();
      }, t.prototype.writeUInt32 = function (t) {
        return this.writeByte(t >>> 24 & 255), this.writeByte(t >> 16 & 255), this.writeByte(t >> 8 & 255), this.writeByte(255 & t);
      }, t.prototype.readInt32 = function () {
        var t;
        return 2147483648 <= (t = this.readUInt32()) ? t - 4294967296 : t;
      }, t.prototype.writeInt32 = function (t) {
        return t < 0 && (t += 4294967296), this.writeUInt32(t);
      }, t.prototype.readUInt16 = function () {
        return this.readByte() << 8 | this.readByte();
      }, t.prototype.writeUInt16 = function (t) {
        return this.writeByte(t >> 8 & 255), this.writeByte(255 & t);
      }, t.prototype.readInt16 = function () {
        var t;
        return 32768 <= (t = this.readUInt16()) ? t - 65536 : t;
      }, t.prototype.writeInt16 = function (t) {
        return t < 0 && (t += 65536), this.writeUInt16(t);
      }, t.prototype.readString = function (t) {
        var e, n, r;

        for (n = [], e = r = 0; 0 <= t ? r < t : t < r; e = 0 <= t ? ++r : --r) {
          n[e] = String.fromCharCode(this.readByte());
        }

        return n.join("");
      }, t.prototype.writeString = function (t) {
        var e, n, r, i;

        for (i = [], e = n = 0, r = t.length; 0 <= r ? n < r : r < n; e = 0 <= r ? ++n : --n) {
          i.push(this.writeByte(t.charCodeAt(e)));
        }

        return i;
      }, t.prototype.readShort = function () {
        return this.readInt16();
      }, t.prototype.writeShort = function (t) {
        return this.writeInt16(t);
      }, t.prototype.readLongLong = function () {
        var t, e, n, r, i, o, a, s;
        return t = this.readByte(), e = this.readByte(), n = this.readByte(), r = this.readByte(), i = this.readByte(), o = this.readByte(), a = this.readByte(), s = this.readByte(), 128 & t ? -1 * (72057594037927940 * (255 ^ t) + 281474976710656 * (255 ^ e) + 1099511627776 * (255 ^ n) + 4294967296 * (255 ^ r) + 16777216 * (255 ^ i) + 65536 * (255 ^ o) + 256 * (255 ^ a) + (255 ^ s) + 1) : 72057594037927940 * t + 281474976710656 * e + 1099511627776 * n + 4294967296 * r + 16777216 * i + 65536 * o + 256 * a + s;
      }, t.prototype.writeLongLong = function (t) {
        var e, n;
        return e = Math.floor(t / 4294967296), n = 4294967295 & t, this.writeByte(e >> 24 & 255), this.writeByte(e >> 16 & 255), this.writeByte(e >> 8 & 255), this.writeByte(255 & e), this.writeByte(n >> 24 & 255), this.writeByte(n >> 16 & 255), this.writeByte(n >> 8 & 255), this.writeByte(255 & n);
      }, t.prototype.readInt = function () {
        return this.readInt32();
      }, t.prototype.writeInt = function (t) {
        return this.writeInt32(t);
      }, t.prototype.read = function (t) {
        var e, n;

        for (e = [], n = 0; 0 <= t ? n < t : t < n; 0 <= t ? ++n : --n) {
          e.push(this.readByte());
        }

        return e;
      }, t.prototype.write = function (t) {
        var e, n, r, i;

        for (i = [], n = 0, r = t.length; n < r; n++) {
          e = t[n], i.push(this.writeByte(e));
        }

        return i;
      }, t;
    }(),
        e = function () {
      var d;

      function t(t) {
        var e, n, r;

        for (this.scalarType = t.readInt(), this.tableCount = t.readShort(), this.searchRange = t.readShort(), this.entrySelector = t.readShort(), this.rangeShift = t.readShort(), this.tables = {}, n = 0, r = this.tableCount; 0 <= r ? n < r : r < n; 0 <= r ? ++n : --n) {
          e = {
            tag: t.readString(4),
            checksum: t.readInt(),
            offset: t.readInt(),
            length: t.readInt()
          }, this.tables[e.tag] = e;
        }
      }

      return t.prototype.encode = function (t) {
        var e, n, r, i, o, a, s, l, h, u, c, f, p;

        for (p in c = Object.keys(t).length, a = Math.log(2), h = 16 * Math.floor(Math.log(c) / a), i = Math.floor(h / a), l = 16 * c - h, (n = new J()).writeInt(this.scalarType), n.writeShort(c), n.writeShort(h), n.writeShort(i), n.writeShort(l), r = 16 * c, s = n.pos + r, o = null, f = [], t) {
          for (u = t[p], n.writeString(p), n.writeInt(d(u)), n.writeInt(s), n.writeInt(u.length), f = f.concat(u), "head" === p && (o = s), s += u.length; s % 4;) {
            f.push(0), s++;
          }
        }

        return n.write(f), e = 2981146554 - d(n.data), n.pos = o + 8, n.writeUInt32(e), n.data;
      }, d = function d(t) {
        var e, n, r, i;

        for (t = L.call(t); t.length % 4;) {
          t.push(0);
        }

        for (n = new J(t), r = e = 0, i = t.length; r < i; r += 4) {
          e += n.readUInt32();
        }

        return 4294967295 & e;
      }, t;
    }(),
        c = {}.hasOwnProperty,
        f = function f(t, e) {
      for (var n in e) {
        c.call(e, n) && (t[n] = e[n]);
      }

      function r() {
        this.constructor = t;
      }

      return r.prototype = e.prototype, t.prototype = new r(), t.__super__ = e.prototype, t;
    };

    h = function () {
      function t(t) {
        var e;
        this.file = t, e = this.file.directory.tables[this.tag], this.exists = !!e, e && (this.offset = e.offset, this.length = e.length, this.parse(this.file.contents));
      }

      return t.prototype.parse = function () {}, t.prototype.encode = function () {}, t.prototype.raw = function () {
        return this.exists ? (this.file.contents.pos = this.offset, this.file.contents.read(this.length)) : null;
      }, t;
    }();

    var p = function (t) {
      function e() {
        return e.__super__.constructor.apply(this, arguments);
      }

      return f(e, h), e.prototype.tag = "head", e.prototype.parse = function (t) {
        return t.pos = this.offset, this.version = t.readInt(), this.revision = t.readInt(), this.checkSumAdjustment = t.readInt(), this.magicNumber = t.readInt(), this.flags = t.readShort(), this.unitsPerEm = t.readShort(), this.created = t.readLongLong(), this.modified = t.readLongLong(), this.xMin = t.readShort(), this.yMin = t.readShort(), this.xMax = t.readShort(), this.yMax = t.readShort(), this.macStyle = t.readShort(), this.lowestRecPPEM = t.readShort(), this.fontDirectionHint = t.readShort(), this.indexToLocFormat = t.readShort(), this.glyphDataFormat = t.readShort();
      }, e.prototype.encode = function (t) {
        var e;
        return (e = new J()).writeInt(this.version), e.writeInt(this.revision), e.writeInt(this.checkSumAdjustment), e.writeInt(this.magicNumber), e.writeShort(this.flags), e.writeShort(this.unitsPerEm), e.writeLongLong(this.created), e.writeLongLong(this.modified), e.writeShort(this.xMin), e.writeShort(this.yMin), e.writeShort(this.xMax), e.writeShort(this.yMax), e.writeShort(this.macStyle), e.writeShort(this.lowestRecPPEM), e.writeShort(this.fontDirectionHint), e.writeShort(t), e.writeShort(this.glyphDataFormat), e.data;
      }, e;
    }(),
        d = function () {
      function t(n, t) {
        var e, r, i, o, a, s, l, h, u, c, f, p, d, g, m, y, v, w;

        switch (this.platformID = n.readUInt16(), this.encodingID = n.readShort(), this.offset = t + n.readInt(), u = n.pos, n.pos = this.offset, this.format = n.readUInt16(), this.length = n.readUInt16(), this.language = n.readUInt16(), this.isUnicode = 3 === this.platformID && 1 === this.encodingID && 4 === this.format || 0 === this.platformID && 4 === this.format, this.codeMap = {}, this.format) {
          case 0:
            for (s = m = 0; m < 256; s = ++m) {
              this.codeMap[s] = n.readByte();
            }

            break;

          case 4:
            for (f = n.readUInt16(), c = f / 2, n.pos += 6, i = function () {
              var t, e;

              for (e = [], s = t = 0; 0 <= c ? t < c : c < t; s = 0 <= c ? ++t : --t) {
                e.push(n.readUInt16());
              }

              return e;
            }(), n.pos += 2, d = function () {
              var t, e;

              for (e = [], s = t = 0; 0 <= c ? t < c : c < t; s = 0 <= c ? ++t : --t) {
                e.push(n.readUInt16());
              }

              return e;
            }(), l = function () {
              var t, e;

              for (e = [], s = t = 0; 0 <= c ? t < c : c < t; s = 0 <= c ? ++t : --t) {
                e.push(n.readUInt16());
              }

              return e;
            }(), h = function () {
              var t, e;

              for (e = [], s = t = 0; 0 <= c ? t < c : c < t; s = 0 <= c ? ++t : --t) {
                e.push(n.readUInt16());
              }

              return e;
            }(), r = (this.length - n.pos + this.offset) / 2, a = function () {
              var t, e;

              for (e = [], s = t = 0; 0 <= r ? t < r : r < t; s = 0 <= r ? ++t : --t) {
                e.push(n.readUInt16());
              }

              return e;
            }(), s = y = 0, w = i.length; y < w; s = ++y) {
              for (g = i[s], e = v = p = d[s]; p <= g ? v <= g : g <= v; e = p <= g ? ++v : --v) {
                0 === h[s] ? o = e + l[s] : 0 !== (o = a[h[s] / 2 + (e - p) - (c - s)] || 0) && (o += l[s]), this.codeMap[e] = 65535 & o;
              }
            }

        }

        n.pos = u;
      }

      return t.encode = function (t, e) {
        var n, r, i, o, a, s, l, h, u, c, f, p, d, g, m, y, v, w, b, x, N, L, A, S, _, F, P, k, I, C, B, j, E, M, O, q, T, R, D, U, z, H, W, V, G, Y;

        switch (k = new J(), o = Object.keys(t).sort(function (t, e) {
          return t - e;
        }), e) {
          case "macroman":
            for (d = 0, g = function () {
              var t, e;

              for (e = [], p = t = 0; t < 256; p = ++t) {
                e.push(0);
              }

              return e;
            }(), y = {
              0: 0
            }, i = {}, I = 0, E = o.length; I < E; I++) {
              null == y[W = t[r = o[I]]] && (y[W] = ++d), i[r] = {
                old: t[r],
                new: y[t[r]]
              }, g[r] = y[t[r]];
            }

            return k.writeUInt16(1), k.writeUInt16(0), k.writeUInt32(12), k.writeUInt16(0), k.writeUInt16(262), k.writeUInt16(0), k.write(g), {
              charMap: i,
              subtable: k.data,
              maxGlyphID: d + 1
            };

          case "unicode":
            for (F = [], u = [], y = {}, n = {}, m = l = null, C = v = 0, M = o.length; C < M; C++) {
              null == y[b = t[r = o[C]]] && (y[b] = ++v), n[r] = {
                old: b,
                new: y[b]
              }, a = y[b] - r, null != m && a === l || (m && u.push(m), F.push(r), l = a), m = r;
            }

            for (m && u.push(m), u.push(65535), F.push(65535), S = 2 * (A = F.length), L = 2 * Math.pow(Math.log(A) / Math.LN2, 2), c = Math.log(L / 2) / Math.LN2, N = 2 * A - L, s = [], x = [], f = [], p = B = 0, O = F.length; B < O; p = ++B) {
              if (_ = F[p], h = u[p], 65535 === _) {
                s.push(0), x.push(0);
                break;
              }

              if (32768 <= _ - (P = n[_].new)) for (s.push(0), x.push(2 * (f.length + A - p)), r = j = _; _ <= h ? j <= h : h <= j; r = _ <= h ? ++j : --j) {
                f.push(n[r].new);
              } else s.push(P - _), x.push(0);
            }

            for (k.writeUInt16(3), k.writeUInt16(1), k.writeUInt32(12), k.writeUInt16(4), k.writeUInt16(16 + 8 * A + 2 * f.length), k.writeUInt16(0), k.writeUInt16(S), k.writeUInt16(L), k.writeUInt16(c), k.writeUInt16(N), z = 0, q = u.length; z < q; z++) {
              r = u[z], k.writeUInt16(r);
            }

            for (k.writeUInt16(0), H = 0, T = F.length; H < T; H++) {
              r = F[H], k.writeUInt16(r);
            }

            for (V = 0, R = s.length; V < R; V++) {
              a = s[V], k.writeUInt16(a);
            }

            for (G = 0, D = x.length; G < D; G++) {
              w = x[G], k.writeUInt16(w);
            }

            for (Y = 0, U = f.length; Y < U; Y++) {
              d = f[Y], k.writeUInt16(d);
            }

            return {
              charMap: n,
              subtable: k.data,
              maxGlyphID: v + 1
            };
        }
      }, t;
    }(),
        y = function (t) {
      function e() {
        return e.__super__.constructor.apply(this, arguments);
      }

      return f(e, h), e.prototype.tag = "cmap", e.prototype.parse = function (t) {
        var e, n, r;

        for (t.pos = this.offset, this.version = t.readUInt16(), n = t.readUInt16(), this.tables = [], this.unicode = null, r = 0; 0 <= n ? r < n : n < r; 0 <= n ? ++r : --r) {
          e = new d(t, this.offset), this.tables.push(e), e.isUnicode && null == this.unicode && (this.unicode = e);
        }

        return !0;
      }, e.encode = function (t, e) {
        var n, r;
        return null == e && (e = "macroman"), n = d.encode(t, e), (r = new J()).writeUInt16(0), r.writeUInt16(1), n.table = r.data.concat(n.subtable), n;
      }, e;
    }(),
        g = function (t) {
      function e() {
        return e.__super__.constructor.apply(this, arguments);
      }

      return f(e, h), e.prototype.tag = "hhea", e.prototype.parse = function (t) {
        return t.pos = this.offset, this.version = t.readInt(), this.ascender = t.readShort(), this.decender = t.readShort(), this.lineGap = t.readShort(), this.advanceWidthMax = t.readShort(), this.minLeftSideBearing = t.readShort(), this.minRightSideBearing = t.readShort(), this.xMaxExtent = t.readShort(), this.caretSlopeRise = t.readShort(), this.caretSlopeRun = t.readShort(), this.caretOffset = t.readShort(), t.pos += 8, this.metricDataFormat = t.readShort(), this.numberOfMetrics = t.readUInt16();
      }, e;
    }(),
        m = function (t) {
      function e() {
        return e.__super__.constructor.apply(this, arguments);
      }

      return f(e, h), e.prototype.tag = "OS/2", e.prototype.parse = function (n) {
        if (n.pos = this.offset, this.version = n.readUInt16(), this.averageCharWidth = n.readShort(), this.weightClass = n.readUInt16(), this.widthClass = n.readUInt16(), this.type = n.readShort(), this.ySubscriptXSize = n.readShort(), this.ySubscriptYSize = n.readShort(), this.ySubscriptXOffset = n.readShort(), this.ySubscriptYOffset = n.readShort(), this.ySuperscriptXSize = n.readShort(), this.ySuperscriptYSize = n.readShort(), this.ySuperscriptXOffset = n.readShort(), this.ySuperscriptYOffset = n.readShort(), this.yStrikeoutSize = n.readShort(), this.yStrikeoutPosition = n.readShort(), this.familyClass = n.readShort(), this.panose = function () {
          var t, e;

          for (e = [], t = 0; t < 10; ++t) {
            e.push(n.readByte());
          }

          return e;
        }(), this.charRange = function () {
          var t, e;

          for (e = [], t = 0; t < 4; ++t) {
            e.push(n.readInt());
          }

          return e;
        }(), this.vendorID = n.readString(4), this.selection = n.readShort(), this.firstCharIndex = n.readShort(), this.lastCharIndex = n.readShort(), 0 < this.version && (this.ascent = n.readShort(), this.descent = n.readShort(), this.lineGap = n.readShort(), this.winAscent = n.readShort(), this.winDescent = n.readShort(), this.codePageRange = function () {
          var t, e;

          for (e = [], t = 0; t < 2; ++t) {
            e.push(n.readInt());
          }

          return e;
        }(), 1 < this.version)) return this.xHeight = n.readShort(), this.capHeight = n.readShort(), this.defaultChar = n.readShort(), this.breakChar = n.readShort(), this.maxContext = n.readShort();
      }, e;
    }(),
        v = function (t) {
      function e() {
        return e.__super__.constructor.apply(this, arguments);
      }

      return f(e, h), e.prototype.tag = "post", e.prototype.parse = function (r) {
        var t, e, n, i;

        switch (r.pos = this.offset, this.format = r.readInt(), this.italicAngle = r.readInt(), this.underlinePosition = r.readShort(), this.underlineThickness = r.readShort(), this.isFixedPitch = r.readInt(), this.minMemType42 = r.readInt(), this.maxMemType42 = r.readInt(), this.minMemType1 = r.readInt(), this.maxMemType1 = r.readInt(), this.format) {
          case 65536:
            break;

          case 131072:
            for (e = r.readUInt16(), this.glyphNameIndex = [], n = 0; 0 <= e ? n < e : e < n; 0 <= e ? ++n : --n) {
              this.glyphNameIndex.push(r.readUInt16());
            }

            for (this.names = [], i = []; r.pos < this.offset + this.length;) {
              t = r.readByte(), i.push(this.names.push(r.readString(t)));
            }

            return i;

          case 151552:
            return e = r.readUInt16(), this.offsets = r.read(e);

          case 196608:
            break;

          case 262144:
            return this.map = function () {
              var t, e, n;

              for (n = [], t = 0, e = this.file.maxp.numGlyphs; 0 <= e ? t < e : e < t; 0 <= e ? ++t : --t) {
                n.push(r.readUInt32());
              }

              return n;
            }.call(this);
        }
      }, e;
    }(),
        w = function w(t, e) {
      this.raw = t, this.length = t.length, this.platformID = e.platformID, this.encodingID = e.encodingID, this.languageID = e.languageID;
    },
        b = function (t) {
      function e() {
        return e.__super__.constructor.apply(this, arguments);
      }

      return f(e, h), e.prototype.tag = "name", e.prototype.parse = function (t) {
        var e, n, r, i, o, a, s, l, h, u, c, f;

        for (t.pos = this.offset, t.readShort(), e = t.readShort(), a = t.readShort(), n = [], i = h = 0; 0 <= e ? h < e : e < h; i = 0 <= e ? ++h : --h) {
          n.push({
            platformID: t.readShort(),
            encodingID: t.readShort(),
            languageID: t.readShort(),
            nameID: t.readShort(),
            length: t.readShort(),
            offset: this.offset + a + t.readShort()
          });
        }

        for (s = {}, i = u = 0, c = n.length; u < c; i = ++u) {
          r = n[i], t.pos = r.offset, l = t.readString(r.length), o = new w(l, r), null == s[f = r.nameID] && (s[f] = []), s[r.nameID].push(o);
        }

        this.strings = s, this.copyright = s[0], this.fontFamily = s[1], this.fontSubfamily = s[2], this.uniqueSubfamily = s[3], this.fontName = s[4], this.version = s[5];

        try {
          this.postscriptName = s[6][0].raw.replace(/[\x00-\x19\x80-\xff]/g, "");
        } catch (t) {
          this.postscriptName = s[4][0].raw.replace(/[\x00-\x19\x80-\xff]/g, "");
        }

        return this.trademark = s[7], this.manufacturer = s[8], this.designer = s[9], this.description = s[10], this.vendorUrl = s[11], this.designerUrl = s[12], this.license = s[13], this.licenseUrl = s[14], this.preferredFamily = s[15], this.preferredSubfamily = s[17], this.compatibleFull = s[18], this.sampleText = s[19];
      }, e;
    }(),
        x = function (t) {
      function e() {
        return e.__super__.constructor.apply(this, arguments);
      }

      return f(e, h), e.prototype.tag = "maxp", e.prototype.parse = function (t) {
        return t.pos = this.offset, this.version = t.readInt(), this.numGlyphs = t.readUInt16(), this.maxPoints = t.readUInt16(), this.maxContours = t.readUInt16(), this.maxCompositePoints = t.readUInt16(), this.maxComponentContours = t.readUInt16(), this.maxZones = t.readUInt16(), this.maxTwilightPoints = t.readUInt16(), this.maxStorage = t.readUInt16(), this.maxFunctionDefs = t.readUInt16(), this.maxInstructionDefs = t.readUInt16(), this.maxStackElements = t.readUInt16(), this.maxSizeOfInstructions = t.readUInt16(), this.maxComponentElements = t.readUInt16(), this.maxComponentDepth = t.readUInt16();
      }, e;
    }(),
        N = function (t) {
      function e() {
        return e.__super__.constructor.apply(this, arguments);
      }

      return f(e, h), e.prototype.tag = "hmtx", e.prototype.parse = function (n) {
        var t, r, i, e, o, a, s;

        for (n.pos = this.offset, this.metrics = [], e = 0, a = this.file.hhea.numberOfMetrics; 0 <= a ? e < a : a < e; 0 <= a ? ++e : --e) {
          this.metrics.push({
            advance: n.readUInt16(),
            lsb: n.readInt16()
          });
        }

        for (r = this.file.maxp.numGlyphs - this.file.hhea.numberOfMetrics, this.leftSideBearings = function () {
          var t, e;

          for (e = [], t = 0; 0 <= r ? t < r : r < t; 0 <= r ? ++t : --t) {
            e.push(n.readInt16());
          }

          return e;
        }(), this.widths = function () {
          var t, e, n, r;

          for (r = [], t = 0, e = (n = this.metrics).length; t < e; t++) {
            i = n[t], r.push(i.advance);
          }

          return r;
        }.call(this), t = this.widths[this.widths.length - 1], s = [], o = 0; 0 <= r ? o < r : r < o; 0 <= r ? ++o : --o) {
          s.push(this.widths.push(t));
        }

        return s;
      }, e.prototype.forGlyph = function (t) {
        return t in this.metrics ? this.metrics[t] : {
          advance: this.metrics[this.metrics.length - 1].advance,
          lsb: this.leftSideBearings[t - this.metrics.length]
        };
      }, e;
    }(),
        L = [].slice,
        A = function (t) {
      function e() {
        return e.__super__.constructor.apply(this, arguments);
      }

      return f(e, h), e.prototype.tag = "glyf", e.prototype.parse = function (t) {
        return this.cache = {};
      }, e.prototype.glyphFor = function (t) {
        var e, n, r, i, o, a, s, l, h, u;
        return (t = t) in this.cache ? this.cache[t] : (i = this.file.loca, e = this.file.contents, n = i.indexOf(t), 0 === (r = i.lengthOf(t)) ? this.cache[t] = null : (e.pos = this.offset + n, o = (a = new J(e.read(r))).readShort(), l = a.readShort(), u = a.readShort(), s = a.readShort(), h = a.readShort(), this.cache[t] = -1 === o ? new _(a, l, u, s, h) : new S(a, o, l, u, s, h), this.cache[t]));
      }, e.prototype.encode = function (t, e, n) {
        var r, i, o, a, s;

        for (o = [], i = [], a = 0, s = e.length; a < s; a++) {
          r = t[e[a]], i.push(o.length), r && (o = o.concat(r.encode(n)));
        }

        return i.push(o.length), {
          table: o,
          offsets: i
        };
      }, e;
    }(),
        S = function () {
      function t(t, e, n, r, i, o) {
        this.raw = t, this.numberOfContours = e, this.xMin = n, this.yMin = r, this.xMax = i, this.yMax = o, this.compound = !1;
      }

      return t.prototype.encode = function () {
        return this.raw.data;
      }, t;
    }(),
        _ = function () {
      function t(t, e, n, r, i) {
        var o, a;

        for (this.raw = t, this.xMin = e, this.yMin = n, this.xMax = r, this.yMax = i, this.compound = !0, this.glyphIDs = [], this.glyphOffsets = [], o = this.raw; a = o.readShort(), this.glyphOffsets.push(o.pos), this.glyphIDs.push(o.readShort()), 32 & a;) {
          o.pos += 1 & a ? 4 : 2, 128 & a ? o.pos += 8 : 64 & a ? o.pos += 4 : 8 & a && (o.pos += 2);
        }
      }

      return 1, 8, 32, 64, 128, t.prototype.encode = function (t) {
        var e, n, r, i, o;

        for (n = new J(L.call(this.raw.data)), e = r = 0, i = (o = this.glyphIDs).length; r < i; e = ++r) {
          o[e], n.pos = this.glyphOffsets[e];
        }

        return n.data;
      }, t;
    }(),
        F = function (t) {
      function e() {
        return e.__super__.constructor.apply(this, arguments);
      }

      return f(e, h), e.prototype.tag = "loca", e.prototype.parse = function (r) {
        var t;
        return r.pos = this.offset, t = this.file.head.indexToLocFormat, this.offsets = 0 === t ? function () {
          var t, e, n;

          for (n = [], t = 0, e = this.length; t < e; t += 2) {
            n.push(2 * r.readUInt16());
          }

          return n;
        }.call(this) : function () {
          var t, e, n;

          for (n = [], t = 0, e = this.length; t < e; t += 4) {
            n.push(r.readUInt32());
          }

          return n;
        }.call(this);
      }, e.prototype.indexOf = function (t) {
        return this.offsets[t];
      }, e.prototype.lengthOf = function (t) {
        return this.offsets[t + 1] - this.offsets[t];
      }, e.prototype.encode = function (t, e) {
        for (var n = new Uint32Array(this.offsets.length), r = 0, i = 0, o = 0; o < n.length; ++o) {
          if (n[o] = r, i < e.length && e[i] == o) {
            ++i, n[o] = r;
            var a = this.offsets[o],
                s = this.offsets[o + 1] - a;
            0 < s && (r += s);
          }
        }

        for (var l = new Array(4 * n.length), h = 0; h < n.length; ++h) {
          l[4 * h + 3] = 255 & n[h], l[4 * h + 2] = (65280 & n[h]) >> 8, l[4 * h + 1] = (16711680 & n[h]) >> 16, l[4 * h] = (4278190080 & n[h]) >> 24;
        }

        return l;
      }, e;
    }(),
        P = function () {
      function t(t) {
        this.font = t, this.subset = {}, this.unicodes = {}, this.next = 33;
      }

      return t.prototype.generateCmap = function () {
        var t, e, n, r, i;

        for (e in r = this.font.cmap.tables[0].codeMap, t = {}, i = this.subset) {
          n = i[e], t[e] = r[n];
        }

        return t;
      }, t.prototype.glyphsFor = function (t) {
        var e, n, r, i, o, a, s;

        for (r = {}, o = 0, a = t.length; o < a; o++) {
          r[i = t[o]] = this.font.glyf.glyphFor(i);
        }

        for (i in e = [], r) {
          (null != (n = r[i]) ? n.compound : void 0) && e.push.apply(e, n.glyphIDs);
        }

        if (0 < e.length) for (i in s = this.glyphsFor(e)) {
          n = s[i], r[i] = n;
        }
        return r;
      }, t.prototype.encode = function (t, e) {
        var n, r, i, o, a, s, l, h, u, c, f, p, d, g, m;

        for (r in n = y.encode(this.generateCmap(), "unicode"), o = this.glyphsFor(t), f = {
          0: 0
        }, m = n.charMap) {
          f[(s = m[r]).old] = s.new;
        }

        for (p in c = n.maxGlyphID, o) {
          p in f || (f[p] = c++);
        }

        return h = function (t) {
          var e, n;

          for (e in n = {}, t) {
            n[t[e]] = e;
          }

          return n;
        }(f), u = Object.keys(h).sort(function (t, e) {
          return t - e;
        }), d = function () {
          var t, e, n;

          for (n = [], t = 0, e = u.length; t < e; t++) {
            a = u[t], n.push(h[a]);
          }

          return n;
        }(), i = this.font.glyf.encode(o, d, f), l = this.font.loca.encode(i.offsets, d), g = {
          cmap: this.font.cmap.raw(),
          glyf: i.table,
          loca: l,
          hmtx: this.font.hmtx.raw(),
          hhea: this.font.hhea.raw(),
          maxp: this.font.maxp.raw(),
          post: this.font.post.raw(),
          name: this.font.name.raw(),
          head: this.font.head.encode(e)
        }, this.font.os2.exists && (g["OS/2"] = this.font.os2.raw()), this.font.directory.encode(g);
      }, t;
    }();

    t.API.PDFObject = function () {
      var o;

      function a() {}

      return o = function o(t, e) {
        return (Array(e + 1).join("0") + t).slice(-e);
      }, a.convert = function (r) {
        var i, t, e, n;
        if (Array.isArray(r)) return "[" + function () {
          var t, e, n;

          for (n = [], t = 0, e = r.length; t < e; t++) {
            i = r[t], n.push(a.convert(i));
          }

          return n;
        }().join(" ") + "]";
        if ("string" == typeof r) return "/" + r;
        if (null != r ? r.isString : void 0) return "(" + r + ")";
        if (r instanceof Date) return "(D:" + o(r.getUTCFullYear(), 4) + o(r.getUTCMonth(), 2) + o(r.getUTCDate(), 2) + o(r.getUTCHours(), 2) + o(r.getUTCMinutes(), 2) + o(r.getUTCSeconds(), 2) + "Z)";
        if ("[object Object]" !== {}.toString.call(r)) return "" + r;

        for (t in e = ["<<"], r) {
          n = r[t], e.push("/" + t + " " + a.convert(n));
        }

        return e.push(">>"), e.join("\n");
      }, a;
    }();
  }(lt),
  /*
    # PNG.js
    # Copyright (c) 2011 Devon Govett
    # MIT LICENSE
    # 
    # 
    */
  Nt = "undefined" != typeof self && self || "undefined" != typeof window && window || "undefined" != typeof global && global || Function('return typeof this === "object" && this.content')() || Function("return this")(), Lt = function () {
    var h, n, r;

    function i(t) {
      var e, n, r, i, o, a, s, l, h, u, c, f, p, d;

      for (this.data = t, this.pos = 8, this.palette = [], this.imgData = [], this.transparency = {}, this.animation = null, this.text = {}, a = null;;) {
        switch (e = this.readUInt32(), h = function () {
          var t, e;

          for (e = [], t = 0; t < 4; ++t) {
            e.push(String.fromCharCode(this.data[this.pos++]));
          }

          return e;
        }.call(this).join("")) {
          case "IHDR":
            this.width = this.readUInt32(), this.height = this.readUInt32(), this.bits = this.data[this.pos++], this.colorType = this.data[this.pos++], this.compressionMethod = this.data[this.pos++], this.filterMethod = this.data[this.pos++], this.interlaceMethod = this.data[this.pos++];
            break;

          case "acTL":
            this.animation = {
              numFrames: this.readUInt32(),
              numPlays: this.readUInt32() || 1 / 0,
              frames: []
            };
            break;

          case "PLTE":
            this.palette = this.read(e);
            break;

          case "fcTL":
            a && this.animation.frames.push(a), this.pos += 4, a = {
              width: this.readUInt32(),
              height: this.readUInt32(),
              xOffset: this.readUInt32(),
              yOffset: this.readUInt32()
            }, o = this.readUInt16(), i = this.readUInt16() || 100, a.delay = 1e3 * o / i, a.disposeOp = this.data[this.pos++], a.blendOp = this.data[this.pos++], a.data = [];
            break;

          case "IDAT":
          case "fdAT":
            for ("fdAT" === h && (this.pos += 4, e -= 4), t = (null != a ? a.data : void 0) || this.imgData, f = 0; 0 <= e ? f < e : e < f; 0 <= e ? ++f : --f) {
              t.push(this.data[this.pos++]);
            }

            break;

          case "tRNS":
            switch (this.transparency = {}, this.colorType) {
              case 3:
                if (r = this.palette.length / 3, this.transparency.indexed = this.read(e), this.transparency.indexed.length > r) throw new Error("More transparent colors than palette size");
                if (0 < (u = r - this.transparency.indexed.length)) for (p = 0; 0 <= u ? p < u : u < p; 0 <= u ? ++p : --p) {
                  this.transparency.indexed.push(255);
                }
                break;

              case 0:
                this.transparency.grayscale = this.read(e)[0];
                break;

              case 2:
                this.transparency.rgb = this.read(e);
            }

            break;

          case "tEXt":
            s = (c = this.read(e)).indexOf(0), l = String.fromCharCode.apply(String, c.slice(0, s)), this.text[l] = String.fromCharCode.apply(String, c.slice(s + 1));
            break;

          case "IEND":
            return a && this.animation.frames.push(a), this.colors = function () {
              switch (this.colorType) {
                case 0:
                case 3:
                case 4:
                  return 1;

                case 2:
                case 6:
                  return 3;
              }
            }.call(this), this.hasAlphaChannel = 4 === (d = this.colorType) || 6 === d, n = this.colors + (this.hasAlphaChannel ? 1 : 0), this.pixelBitlength = this.bits * n, this.colorSpace = function () {
              switch (this.colors) {
                case 1:
                  return "DeviceGray";

                case 3:
                  return "DeviceRGB";
              }
            }.call(this), void (this.imgData = new Uint8Array(this.imgData));

          default:
            this.pos += e;
        }

        if (this.pos += 4, this.pos > this.data.length) throw new Error("Incomplete or corrupt PNG file");
      }
    }

    i.load = function (t, e, n) {
      var r;
      return "function" == typeof e && (n = e), (r = new XMLHttpRequest()).open("GET", t, !0), r.responseType = "arraybuffer", r.onload = function () {
        var t;
        return t = new i(new Uint8Array(r.response || r.mozResponseArrayBuffer)), "function" == typeof (null != e ? e.getContext : void 0) && t.render(e), "function" == typeof n ? n(t) : void 0;
      }, r.send(null);
    }, i.prototype.read = function (t) {
      var e, n;

      for (n = [], e = 0; 0 <= t ? e < t : t < e; 0 <= t ? ++e : --e) {
        n.push(this.data[this.pos++]);
      }

      return n;
    }, i.prototype.readUInt32 = function () {
      return this.data[this.pos++] << 24 | this.data[this.pos++] << 16 | this.data[this.pos++] << 8 | this.data[this.pos++];
    }, i.prototype.readUInt16 = function () {
      return this.data[this.pos++] << 8 | this.data[this.pos++];
    }, i.prototype.decodePixels = function (C) {
      var B = this.pixelBitlength / 8,
          j = new Uint8Array(this.width * this.height * B),
          E = 0,
          M = this;
      if (null == C && (C = this.imgData), 0 === C.length) return new Uint8Array(0);

      function t(t, e, n, r) {
        var i,
            o,
            a,
            s,
            l,
            h,
            u,
            c,
            f,
            p,
            d,
            g,
            m,
            y,
            v,
            w,
            b,
            x,
            N,
            L,
            A,
            S = Math.ceil((M.width - t) / n),
            _ = Math.ceil((M.height - e) / r),
            F = M.width == S && M.height == _;

        for (y = B * S, g = F ? j : new Uint8Array(y * _), h = C.length, o = m = 0; m < _ && E < h;) {
          switch (C[E++]) {
            case 0:
              for (s = b = 0; b < y; s = b += 1) {
                g[o++] = C[E++];
              }

              break;

            case 1:
              for (s = x = 0; x < y; s = x += 1) {
                i = C[E++], l = s < B ? 0 : g[o - B], g[o++] = (i + l) % 256;
              }

              break;

            case 2:
              for (s = N = 0; N < y; s = N += 1) {
                i = C[E++], a = (s - s % B) / B, v = m && g[(m - 1) * y + a * B + s % B], g[o++] = (v + i) % 256;
              }

              break;

            case 3:
              for (s = L = 0; L < y; s = L += 1) {
                i = C[E++], a = (s - s % B) / B, l = s < B ? 0 : g[o - B], v = m && g[(m - 1) * y + a * B + s % B], g[o++] = (i + Math.floor((l + v) / 2)) % 256;
              }

              break;

            case 4:
              for (s = A = 0; A < y; s = A += 1) {
                i = C[E++], a = (s - s % B) / B, l = s < B ? 0 : g[o - B], 0 === m ? v = w = 0 : (v = g[(m - 1) * y + a * B + s % B], w = a && g[(m - 1) * y + (a - 1) * B + s % B]), u = l + v - w, c = Math.abs(u - l), p = Math.abs(u - v), d = Math.abs(u - w), f = c <= p && c <= d ? l : p <= d ? v : w, g[o++] = (i + f) % 256;
              }

              break;

            default:
              throw new Error("Invalid filter algorithm: " + C[E - 1]);
          }

          if (!F) {
            var P = ((e + m * r) * M.width + t) * B,
                k = m * y;

            for (s = 0; s < S; s += 1) {
              for (var I = 0; I < B; I += 1) {
                j[P++] = g[k++];
              }

              P += (n - 1) * B;
            }
          }

          m++;
        }
      }

      return C = (C = new kt(C)).getBytes(), 1 == M.interlaceMethod ? (t(0, 0, 8, 8), t(4, 0, 8, 8), t(0, 4, 4, 8), t(2, 0, 4, 4), t(0, 2, 2, 4), t(1, 0, 2, 2), t(0, 1, 1, 2)) : t(0, 0, 1, 1), j;
    }, i.prototype.decodePalette = function () {
      var t, e, n, r, i, o, a, s, l;

      for (n = this.palette, o = this.transparency.indexed || [], i = new Uint8Array((o.length || 0) + n.length), r = 0, n.length, e = a = t = 0, s = n.length; a < s; e = a += 3) {
        i[r++] = n[e], i[r++] = n[e + 1], i[r++] = n[e + 2], i[r++] = null != (l = o[t++]) ? l : 255;
      }

      return i;
    }, i.prototype.copyToImageData = function (t, e) {
      var n, r, i, o, a, s, l, h, u, c, f;
      if (r = this.colors, u = null, n = this.hasAlphaChannel, this.palette.length && (u = null != (f = this._decodedPalette) ? f : this._decodedPalette = this.decodePalette(), r = 4, n = !0), h = (i = t.data || t).length, a = u || e, o = s = 0, 1 === r) for (; o < h;) {
        l = u ? 4 * e[o / 4] : s, c = a[l++], i[o++] = c, i[o++] = c, i[o++] = c, i[o++] = n ? a[l++] : 255, s = l;
      } else for (; o < h;) {
        l = u ? 4 * e[o / 4] : s, i[o++] = a[l++], i[o++] = a[l++], i[o++] = a[l++], i[o++] = n ? a[l++] : 255, s = l;
      }
    }, i.prototype.decode = function () {
      var t;
      return t = new Uint8Array(this.width * this.height * 4), this.copyToImageData(t, this.decodePixels()), t;
    };

    try {
      n = Nt.document.createElement("canvas"), r = n.getContext("2d");
    } catch (t) {
      return -1;
    }

    return h = function h(t) {
      var e;
      return r.width = t.width, r.height = t.height, r.clearRect(0, 0, t.width, t.height), r.putImageData(t, 0, 0), (e = new Image()).src = n.toDataURL(), e;
    }, i.prototype.decodeFrames = function (t) {
      var e, n, r, i, o, a, s, l;

      if (this.animation) {
        for (l = [], n = o = 0, a = (s = this.animation.frames).length; o < a; n = ++o) {
          e = s[n], r = t.createImageData(e.width, e.height), i = this.decodePixels(new Uint8Array(e.data)), this.copyToImageData(r, i), e.imageData = r, l.push(e.image = h(r));
        }

        return l;
      }
    }, i.prototype.renderFrame = function (t, e) {
      var n, r, i;
      return n = (r = this.animation.frames)[e], i = r[e - 1], 0 === e && t.clearRect(0, 0, this.width, this.height), 1 === (null != i ? i.disposeOp : void 0) ? t.clearRect(i.xOffset, i.yOffset, i.width, i.height) : 2 === (null != i ? i.disposeOp : void 0) && t.putImageData(i.imageData, i.xOffset, i.yOffset), 0 === n.blendOp && t.clearRect(n.xOffset, n.yOffset, n.width, n.height), t.drawImage(n.image, n.xOffset, n.yOffset);
    }, i.prototype.animate = function (n) {
      var _r,
          i,
          o,
          a,
          s,
          t,
          l = this;

      return i = 0, t = this.animation, a = t.numFrames, o = t.frames, s = t.numPlays, (_r = function r() {
        var t, e;
        if (t = i++ % a, e = o[t], l.renderFrame(n, t), 1 < a && i / a < s) return l.animation._timeout = setTimeout(_r, e.delay);
      })();
    }, i.prototype.stopAnimation = function () {
      var t;
      return clearTimeout(null != (t = this.animation) ? t._timeout : void 0);
    }, i.prototype.render = function (t) {
      var e, n;
      return t._png && t._png.stopAnimation(), t._png = this, t.width = this.width, t.height = this.height, e = t.getContext("2d"), this.animation ? (this.decodeFrames(e), this.animate(e)) : (n = e.createImageData(this.width, this.height), this.copyToImageData(n, this.decodePixels()), e.putImageData(n, 0, 0));
    }, i;
  }(), Nt.PNG = Lt;
  /*
     * Extracted from pdf.js
     * https://github.com/andreasgal/pdf.js
     *
     * Copyright (c) 2011 Mozilla Foundation
     *
     * Contributors: Andreas Gal <gal@mozilla.com>
     *               Chris G Jones <cjones@mozilla.com>
     *               Shaon Barman <shaon.barman@gmail.com>
     *               Vivien Nicolas <21@vingtetun.org>
     *               Justin D'Arcangelo <justindarc@gmail.com>
     *               Yury Delendik
     *
     * 
     */

  var Pt = function () {
    function t() {
      this.pos = 0, this.bufferLength = 0, this.eof = !1, this.buffer = null;
    }

    return t.prototype = {
      ensureBuffer: function ensureBuffer(t) {
        var e = this.buffer,
            n = e ? e.byteLength : 0;
        if (t < n) return e;

        for (var r = 512; r < t;) {
          r <<= 1;
        }

        for (var i = new Uint8Array(r), o = 0; o < n; ++o) {
          i[o] = e[o];
        }

        return this.buffer = i;
      },
      getByte: function getByte() {
        for (var t = this.pos; this.bufferLength <= t;) {
          if (this.eof) return null;
          this.readBlock();
        }

        return this.buffer[this.pos++];
      },
      getBytes: function getBytes(t) {
        var e = this.pos;

        if (t) {
          this.ensureBuffer(e + t);

          for (var n = e + t; !this.eof && this.bufferLength < n;) {
            this.readBlock();
          }

          var r = this.bufferLength;
          r < n && (n = r);
        } else {
          for (; !this.eof;) {
            this.readBlock();
          }

          n = this.bufferLength;
        }

        return this.pos = n, this.buffer.subarray(e, n);
      },
      lookChar: function lookChar() {
        for (var t = this.pos; this.bufferLength <= t;) {
          if (this.eof) return null;
          this.readBlock();
        }

        return String.fromCharCode(this.buffer[this.pos]);
      },
      getChar: function getChar() {
        for (var t = this.pos; this.bufferLength <= t;) {
          if (this.eof) return null;
          this.readBlock();
        }

        return String.fromCharCode(this.buffer[this.pos++]);
      },
      makeSubStream: function makeSubStream(t, e, n) {
        for (var r = t + e; this.bufferLength <= r && !this.eof;) {
          this.readBlock();
        }

        return new Stream(this.buffer, t, e, n);
      },
      skip: function skip(t) {
        t || (t = 1), this.pos += t;
      },
      reset: function reset() {
        this.pos = 0;
      }
    }, t;
  }(),
      kt = function () {
    if ("undefined" != typeof Uint32Array) {
      var k = new Uint32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]),
          I = new Uint32Array([3, 4, 5, 6, 7, 8, 9, 10, 65547, 65549, 65551, 65553, 131091, 131095, 131099, 131103, 196643, 196651, 196659, 196667, 262211, 262227, 262243, 262259, 327811, 327843, 327875, 327907, 258, 258, 258]),
          C = new Uint32Array([1, 2, 3, 4, 65541, 65543, 131081, 131085, 196625, 196633, 262177, 262193, 327745, 327777, 393345, 393409, 459009, 459137, 524801, 525057, 590849, 591361, 657409, 658433, 724993, 727041, 794625, 798721, 868353, 876545]),
          B = [new Uint32Array([459008, 524368, 524304, 524568, 459024, 524400, 524336, 590016, 459016, 524384, 524320, 589984, 524288, 524416, 524352, 590048, 459012, 524376, 524312, 589968, 459028, 524408, 524344, 590032, 459020, 524392, 524328, 59e4, 524296, 524424, 524360, 590064, 459010, 524372, 524308, 524572, 459026, 524404, 524340, 590024, 459018, 524388, 524324, 589992, 524292, 524420, 524356, 590056, 459014, 524380, 524316, 589976, 459030, 524412, 524348, 590040, 459022, 524396, 524332, 590008, 524300, 524428, 524364, 590072, 459009, 524370, 524306, 524570, 459025, 524402, 524338, 590020, 459017, 524386, 524322, 589988, 524290, 524418, 524354, 590052, 459013, 524378, 524314, 589972, 459029, 524410, 524346, 590036, 459021, 524394, 524330, 590004, 524298, 524426, 524362, 590068, 459011, 524374, 524310, 524574, 459027, 524406, 524342, 590028, 459019, 524390, 524326, 589996, 524294, 524422, 524358, 590060, 459015, 524382, 524318, 589980, 459031, 524414, 524350, 590044, 459023, 524398, 524334, 590012, 524302, 524430, 524366, 590076, 459008, 524369, 524305, 524569, 459024, 524401, 524337, 590018, 459016, 524385, 524321, 589986, 524289, 524417, 524353, 590050, 459012, 524377, 524313, 589970, 459028, 524409, 524345, 590034, 459020, 524393, 524329, 590002, 524297, 524425, 524361, 590066, 459010, 524373, 524309, 524573, 459026, 524405, 524341, 590026, 459018, 524389, 524325, 589994, 524293, 524421, 524357, 590058, 459014, 524381, 524317, 589978, 459030, 524413, 524349, 590042, 459022, 524397, 524333, 590010, 524301, 524429, 524365, 590074, 459009, 524371, 524307, 524571, 459025, 524403, 524339, 590022, 459017, 524387, 524323, 589990, 524291, 524419, 524355, 590054, 459013, 524379, 524315, 589974, 459029, 524411, 524347, 590038, 459021, 524395, 524331, 590006, 524299, 524427, 524363, 590070, 459011, 524375, 524311, 524575, 459027, 524407, 524343, 590030, 459019, 524391, 524327, 589998, 524295, 524423, 524359, 590062, 459015, 524383, 524319, 589982, 459031, 524415, 524351, 590046, 459023, 524399, 524335, 590014, 524303, 524431, 524367, 590078, 459008, 524368, 524304, 524568, 459024, 524400, 524336, 590017, 459016, 524384, 524320, 589985, 524288, 524416, 524352, 590049, 459012, 524376, 524312, 589969, 459028, 524408, 524344, 590033, 459020, 524392, 524328, 590001, 524296, 524424, 524360, 590065, 459010, 524372, 524308, 524572, 459026, 524404, 524340, 590025, 459018, 524388, 524324, 589993, 524292, 524420, 524356, 590057, 459014, 524380, 524316, 589977, 459030, 524412, 524348, 590041, 459022, 524396, 524332, 590009, 524300, 524428, 524364, 590073, 459009, 524370, 524306, 524570, 459025, 524402, 524338, 590021, 459017, 524386, 524322, 589989, 524290, 524418, 524354, 590053, 459013, 524378, 524314, 589973, 459029, 524410, 524346, 590037, 459021, 524394, 524330, 590005, 524298, 524426, 524362, 590069, 459011, 524374, 524310, 524574, 459027, 524406, 524342, 590029, 459019, 524390, 524326, 589997, 524294, 524422, 524358, 590061, 459015, 524382, 524318, 589981, 459031, 524414, 524350, 590045, 459023, 524398, 524334, 590013, 524302, 524430, 524366, 590077, 459008, 524369, 524305, 524569, 459024, 524401, 524337, 590019, 459016, 524385, 524321, 589987, 524289, 524417, 524353, 590051, 459012, 524377, 524313, 589971, 459028, 524409, 524345, 590035, 459020, 524393, 524329, 590003, 524297, 524425, 524361, 590067, 459010, 524373, 524309, 524573, 459026, 524405, 524341, 590027, 459018, 524389, 524325, 589995, 524293, 524421, 524357, 590059, 459014, 524381, 524317, 589979, 459030, 524413, 524349, 590043, 459022, 524397, 524333, 590011, 524301, 524429, 524365, 590075, 459009, 524371, 524307, 524571, 459025, 524403, 524339, 590023, 459017, 524387, 524323, 589991, 524291, 524419, 524355, 590055, 459013, 524379, 524315, 589975, 459029, 524411, 524347, 590039, 459021, 524395, 524331, 590007, 524299, 524427, 524363, 590071, 459011, 524375, 524311, 524575, 459027, 524407, 524343, 590031, 459019, 524391, 524327, 589999, 524295, 524423, 524359, 590063, 459015, 524383, 524319, 589983, 459031, 524415, 524351, 590047, 459023, 524399, 524335, 590015, 524303, 524431, 524367, 590079]), 9],
          j = [new Uint32Array([327680, 327696, 327688, 327704, 327684, 327700, 327692, 327708, 327682, 327698, 327690, 327706, 327686, 327702, 327694, 0, 327681, 327697, 327689, 327705, 327685, 327701, 327693, 327709, 327683, 327699, 327691, 327707, 327687, 327703, 327695, 0]), 5];
      return (t.prototype = Object.create(Pt.prototype)).getBits = function (t) {
        for (var e, n = this.codeSize, r = this.codeBuf, i = this.bytes, o = this.bytesPos; n < t;) {
          void 0 === (e = i[o++]) && E("Bad encoding in flate stream"), r |= e << n, n += 8;
        }

        return e = r & (1 << t) - 1, this.codeBuf = r >> t, this.codeSize = n -= t, this.bytesPos = o, e;
      }, t.prototype.getCode = function (t) {
        for (var e = t[0], n = t[1], r = this.codeSize, i = this.codeBuf, o = this.bytes, a = this.bytesPos; r < n;) {
          var s;
          void 0 === (s = o[a++]) && E("Bad encoding in flate stream"), i |= s << r, r += 8;
        }

        var l = e[i & (1 << n) - 1],
            h = l >> 16,
            u = 65535 & l;
        return (0 == r || r < h || 0 == h) && E("Bad encoding in flate stream"), this.codeBuf = i >> h, this.codeSize = r - h, this.bytesPos = a, u;
      }, t.prototype.generateHuffmanTable = function (t) {
        for (var e = t.length, n = 0, r = 0; r < e; ++r) {
          t[r] > n && (n = t[r]);
        }

        for (var i = 1 << n, o = new Uint32Array(i), a = 1, s = 0, l = 2; a <= n; ++a, s <<= 1, l <<= 1) {
          for (var h = 0; h < e; ++h) {
            if (t[h] == a) {
              var u = 0,
                  c = s;

              for (r = 0; r < a; ++r) {
                u = u << 1 | 1 & c, c >>= 1;
              }

              for (r = u; r < i; r += l) {
                o[r] = a << 16 | h;
              }

              ++s;
            }
          }
        }

        return [o, n];
      }, t.prototype.readBlock = function () {
        function t(t, e, n, r, i) {
          for (var o = t.getBits(n) + r; 0 < o--;) {
            e[l++] = i;
          }
        }

        var e = this.getBits(3);

        if (1 & e && (this.eof = !0), 0 != (e >>= 1)) {
          var n, r;
          if (1 == e) n = B, r = j;else if (2 == e) {
            for (var i = this.getBits(5) + 257, o = this.getBits(5) + 1, a = this.getBits(4) + 4, s = Array(k.length), l = 0; l < a;) {
              s[k[l++]] = this.getBits(3);
            }

            for (var h = this.generateHuffmanTable(s), u = 0, c = (l = 0, i + o), f = new Array(c); l < c;) {
              var p = this.getCode(h);
              16 == p ? t(this, f, 2, 3, u) : 17 == p ? t(this, f, 3, 3, u = 0) : 18 == p ? t(this, f, 7, 11, u = 0) : f[l++] = u = p;
            }

            n = this.generateHuffmanTable(f.slice(0, i)), r = this.generateHuffmanTable(f.slice(i, c));
          } else E("Unknown block type in flate stream");

          for (var d = (_ = this.buffer) ? _.length : 0, g = this.bufferLength;;) {
            var m = this.getCode(n);
            if (m < 256) d <= g + 1 && (d = (_ = this.ensureBuffer(g + 1)).length), _[g++] = m;else {
              if (256 == m) return void (this.bufferLength = g);
              var y = (m = I[m -= 257]) >> 16;
              0 < y && (y = this.getBits(y));
              u = (65535 & m) + y;
              m = this.getCode(r), 0 < (y = (m = C[m]) >> 16) && (y = this.getBits(y));
              var v = (65535 & m) + y;
              d <= g + u && (d = (_ = this.ensureBuffer(g + u)).length);

              for (var w = 0; w < u; ++w, ++g) {
                _[g] = _[g - v];
              }
            }
          }
        } else {
          var b,
              x = this.bytes,
              N = this.bytesPos;
          void 0 === (b = x[N++]) && E("Bad block header in flate stream");
          var L = b;
          void 0 === (b = x[N++]) && E("Bad block header in flate stream"), L |= b << 8, void 0 === (b = x[N++]) && E("Bad block header in flate stream");
          var A = b;
          void 0 === (b = x[N++]) && E("Bad block header in flate stream"), (A |= b << 8) != (65535 & ~L) && E("Bad uncompressed block length in flate stream"), this.codeBuf = 0, this.codeSize = 0;

          var S = this.bufferLength,
              _ = this.ensureBuffer(S + L),
              F = S + L;

          this.bufferLength = F;

          for (var P = S; P < F; ++P) {
            if (void 0 === (b = x[N++])) {
              this.eof = !0;
              break;
            }

            _[P] = b;
          }

          this.bytesPos = N;
        }
      }, t;
    }

    function E(t) {
      throw new Error(t);
    }

    function t(t) {
      var e = 0,
          n = t[e++],
          r = t[e++];
      -1 != n && -1 != r || E("Invalid header in flate stream"), 8 != (15 & n) && E("Unknown compression method in flate stream"), ((n << 8) + r) % 31 != 0 && E("Bad FCHECK in flate stream"), 32 & r && E("FDICT bit set in flate stream"), this.bytes = t, this.bytesPos = 2, this.codeSize = 0, this.codeBuf = 0, Pt.call(this);
    }
  }();

  window.tmp = kt;
});

try {
  module.exports = jsPDF;
} catch (t) {}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./src/pdfWorker.js":
/*!**************************!*\
  !*** ./src/pdfWorker.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer, global, process, module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof3(obj){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof3=function _typeof3(obj){return typeof obj;};}else{_typeof3=function _typeof3(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof3(obj);}/**
 * @licstart The following is the entire license notice for the
 * Javascript code in this page
 *
 * Copyright 2018 Mozilla Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @licend The above is the entire license notice for the
 * Javascript code in this page
 */(function webpackUniversalModuleDefinition(root,factory){if(( false?undefined:_typeof3(exports))==='object'&&( false?undefined:_typeof3(module))==='object')module.exports=factory();else if(true)!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else {}})(this,function(){return(/******/function(modules){// webpackBootstrap
/******/ // The module cache
/******/var installedModules={};/******/ /******/ // The require function
/******/function __w_pdfjs_require__(moduleId){/******/ /******/ // Check if module is in cache
/******/if(installedModules[moduleId]){/******/return installedModules[moduleId].exports;/******/}/******/ // Create a new module (and put it into the cache)
/******/var module=installedModules[moduleId]={/******/i:moduleId,/******/l:false,/******/exports:{}/******/};/******/ /******/ // Execute the module function
/******/modules[moduleId].call(module.exports,module,module.exports,__w_pdfjs_require__);/******/ /******/ // Flag the module as loaded
/******/module.l=true;/******/ /******/ // Return the exports of the module
/******/return module.exports;/******/}/******/ /******/ /******/ // expose the modules object (__webpack_modules__)
/******/__w_pdfjs_require__.m=modules;/******/ /******/ // expose the module cache
/******/__w_pdfjs_require__.c=installedModules;/******/ /******/ // define getter function for harmony exports
/******/__w_pdfjs_require__.d=function(exports,name,getter){/******/if(!__w_pdfjs_require__.o(exports,name)){/******/Object.defineProperty(exports,name,{enumerable:true,get:getter});/******/}/******/};/******/ /******/ // define __esModule on exports
/******/__w_pdfjs_require__.r=function(exports){/******/if(typeof Symbol!=='undefined'&&Symbol.toStringTag){/******/Object.defineProperty(exports,Symbol.toStringTag,{value:'Module'});/******/}/******/Object.defineProperty(exports,'__esModule',{value:true});/******/};/******/ /******/ // create a fake namespace object
/******/ // mode & 1: value is a module id, require it
/******/ // mode & 2: merge all properties of value into the ns
/******/ // mode & 4: return value when already ns object
/******/ // mode & 8|1: behave like require
/******/__w_pdfjs_require__.t=function(value,mode){/******/if(mode&1)value=__w_pdfjs_require__(value);/******/if(mode&8)return value;/******/if(mode&4&&_typeof3(value)==='object'&&value&&value.__esModule)return value;/******/var ns=Object.create(null);/******/__w_pdfjs_require__.r(ns);/******/Object.defineProperty(ns,'default',{enumerable:true,value:value});/******/if(mode&2&&typeof value!='string')for(var key in value){__w_pdfjs_require__.d(ns,key,function(key){return value[key];}.bind(null,key));}/******/return ns;/******/};/******/ /******/ // getDefaultExport function for compatibility with non-harmony modules
/******/__w_pdfjs_require__.n=function(module){/******/var getter=module&&module.__esModule?/******/function getDefault(){return module['default'];}:/******/function getModuleExports(){return module;};/******/__w_pdfjs_require__.d(getter,'a',getter);/******/return getter;/******/};/******/ /******/ // Object.prototype.hasOwnProperty.call
/******/__w_pdfjs_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property);};/******/ /******/ // __webpack_public_path__
/******/__w_pdfjs_require__.p="";/******/ /******/ /******/ // Load entry module and return exports
/******/return __w_pdfjs_require__(__w_pdfjs_require__.s=0);/******/}(/************************************************************************/ /******/[/* 0 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var pdfjsVersion='2.0.943';var pdfjsBuild='dc98bf76';var pdfjsCoreWorker=__w_pdfjs_require__(1);exports.WorkerMessageHandler=pdfjsCoreWorker.WorkerMessageHandler;/***/},/* 1 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.WorkerMessageHandler=exports.WorkerTask=undefined;var _typeof=typeof Symbol==="function"&&_typeof3(Symbol.iterator)==="symbol"?function(obj){return _typeof3(obj);}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":_typeof3(obj);};var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _util=__w_pdfjs_require__(2);var _pdf_manager=__w_pdfjs_require__(130);var _is_node=__w_pdfjs_require__(5);var _is_node2=_interopRequireDefault(_is_node);var _message_handler=__w_pdfjs_require__(172);var _primitives=__w_pdfjs_require__(138);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var WorkerTask=function WorkerTaskClosure(){function WorkerTask(name){this.name=name;this.terminated=false;this._capability=(0,_util.createPromiseCapability)();}WorkerTask.prototype={get finished(){return this._capability.promise;},finish:function finish(){this._capability.resolve();},terminate:function terminate(){this.terminated=true;},ensureNotTerminated:function ensureNotTerminated(){if(this.terminated){throw new Error('Worker task was terminated');}}};return WorkerTask;}();;var PDFWorkerStream=function PDFWorkerStreamClosure(){function PDFWorkerStream(msgHandler){this._msgHandler=msgHandler;this._contentLength=null;this._fullRequestReader=null;this._rangeRequestReaders=[];}PDFWorkerStream.prototype={getFullReader:function getFullReader(){(0,_util.assert)(!this._fullRequestReader);this._fullRequestReader=new PDFWorkerStreamReader(this._msgHandler);return this._fullRequestReader;},getRangeReader:function getRangeReader(begin,end){var reader=new PDFWorkerStreamRangeReader(begin,end,this._msgHandler);this._rangeRequestReaders.push(reader);return reader;},cancelAllRequests:function cancelAllRequests(reason){if(this._fullRequestReader){this._fullRequestReader.cancel(reason);}var readers=this._rangeRequestReaders.slice(0);readers.forEach(function(reader){reader.cancel(reason);});}};function PDFWorkerStreamReader(msgHandler){var _this=this;this._msgHandler=msgHandler;this._contentLength=null;this._isRangeSupported=false;this._isStreamingSupported=false;var readableStream=this._msgHandler.sendWithStream('GetReader');this._reader=readableStream.getReader();this._headersReady=this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function(data){_this._isStreamingSupported=data.isStreamingSupported;_this._isRangeSupported=data.isRangeSupported;_this._contentLength=data.contentLength;});}PDFWorkerStreamReader.prototype={get headersReady(){return this._headersReady;},get contentLength(){return this._contentLength;},get isStreamingSupported(){return this._isStreamingSupported;},get isRangeSupported(){return this._isRangeSupported;},read:function read(){return this._reader.read().then(function(_ref){var value=_ref.value,done=_ref.done;if(done){return{value:undefined,done:true};}return{value:value.buffer,done:false};});},cancel:function cancel(reason){this._reader.cancel(reason);}};function PDFWorkerStreamRangeReader(begin,end,msgHandler){this._msgHandler=msgHandler;this.onProgress=null;var readableStream=this._msgHandler.sendWithStream('GetRangeReader',{begin:begin,end:end});this._reader=readableStream.getReader();}PDFWorkerStreamRangeReader.prototype={get isStreamingSupported(){return false;},read:function read(){return this._reader.read().then(function(_ref2){var value=_ref2.value,done=_ref2.done;if(done){return{value:undefined,done:true};}return{value:value.buffer,done:false};});},cancel:function cancel(reason){this._reader.cancel(reason);}};return PDFWorkerStream;}();var WorkerMessageHandler={setup:function setup(handler,port){var testMessageProcessed=false;handler.on('test',function wphSetupTest(data){if(testMessageProcessed){return;}testMessageProcessed=true;if(!(data instanceof Uint8Array)){handler.send('test',false);return;}var supportTransfers=data[0]===255;handler.postMessageTransfers=supportTransfers;var xhr=new XMLHttpRequest();var responseExists='response'in xhr;try{xhr.responseType;}catch(e){responseExists=false;}if(!responseExists){handler.send('test',false);return;}handler.send('test',{supportTypedArray:true,supportTransfers:supportTransfers});});handler.on('configure',function wphConfigure(data){(0,_util.setVerbosityLevel)(data.verbosity);});handler.on('GetDocRequest',function wphSetupDoc(data){return WorkerMessageHandler.createDocumentHandler(data,port);});},createDocumentHandler:function createDocumentHandler(docParams,port){var pdfManager;var terminated=false;var cancelXHRs=null;var WorkerTasks=[];var apiVersion=docParams.apiVersion;var workerVersion='2.0.943';if(apiVersion!==workerVersion){throw new Error('The API version "'+apiVersion+'" does not match '+('the Worker version "'+workerVersion+'".'));}var docId=docParams.docId;var docBaseUrl=docParams.docBaseUrl;var workerHandlerName=docParams.docId+'_worker';var handler=new _message_handler.MessageHandler(workerHandlerName,docId,port);handler.postMessageTransfers=docParams.postMessageTransfers;function ensureNotTerminated(){if(terminated){throw new Error('Worker was terminated');}}function startWorkerTask(task){WorkerTasks.push(task);}function finishWorkerTask(task){task.finish();var i=WorkerTasks.indexOf(task);WorkerTasks.splice(i,1);}function loadDocument(recoveryMode){var loadDocumentCapability=(0,_util.createPromiseCapability)();var parseSuccess=function parseSuccess(){Promise.all([pdfManager.ensureDoc('numPages'),pdfManager.ensureDoc('fingerprint')]).then(function(_ref3){var _ref4=_slicedToArray(_ref3,2),numPages=_ref4[0],fingerprint=_ref4[1];loadDocumentCapability.resolve({numPages:numPages,fingerprint:fingerprint});},parseFailure);};var parseFailure=function parseFailure(e){loadDocumentCapability.reject(e);};pdfManager.ensureDoc('checkHeader',[]).then(function(){pdfManager.ensureDoc('parseStartXRef',[]).then(function(){pdfManager.ensureDoc('parse',[recoveryMode]).then(parseSuccess,parseFailure);},parseFailure);},parseFailure);return loadDocumentCapability.promise;}function getPdfManager(data,evaluatorOptions){var pdfManagerCapability=(0,_util.createPromiseCapability)();var pdfManager;var source=data.source;if(source.data){try{pdfManager=new _pdf_manager.LocalPdfManager(docId,source.data,source.password,evaluatorOptions,docBaseUrl);pdfManagerCapability.resolve(pdfManager);}catch(ex){pdfManagerCapability.reject(ex);}return pdfManagerCapability.promise;}var pdfStream,cachedChunks=[];try{pdfStream=new PDFWorkerStream(handler);}catch(ex){pdfManagerCapability.reject(ex);return pdfManagerCapability.promise;}var fullRequest=pdfStream.getFullReader();fullRequest.headersReady.then(function(){if(!fullRequest.isRangeSupported){return;}var disableAutoFetch=source.disableAutoFetch||fullRequest.isStreamingSupported;pdfManager=new _pdf_manager.NetworkPdfManager(docId,pdfStream,{msgHandler:handler,url:source.url,password:source.password,length:fullRequest.contentLength,disableAutoFetch:disableAutoFetch,rangeChunkSize:source.rangeChunkSize},evaluatorOptions,docBaseUrl);for(var i=0;i<cachedChunks.length;i++){pdfManager.sendProgressiveData(cachedChunks[i]);}cachedChunks=[];pdfManagerCapability.resolve(pdfManager);cancelXHRs=null;}).catch(function(reason){pdfManagerCapability.reject(reason);cancelXHRs=null;});var loaded=0;var flushChunks=function flushChunks(){var pdfFile=(0,_util.arraysToBytes)(cachedChunks);if(source.length&&pdfFile.length!==source.length){(0,_util.warn)('reported HTTP length is different from actual');}try{pdfManager=new _pdf_manager.LocalPdfManager(docId,pdfFile,source.password,evaluatorOptions,docBaseUrl);pdfManagerCapability.resolve(pdfManager);}catch(ex){pdfManagerCapability.reject(ex);}cachedChunks=[];};var readPromise=new Promise(function(resolve,reject){var readChunk=function readChunk(chunk){try{ensureNotTerminated();if(chunk.done){if(!pdfManager){flushChunks();}cancelXHRs=null;return;}var data=chunk.value;loaded+=(0,_util.arrayByteLength)(data);if(!fullRequest.isStreamingSupported){handler.send('DocProgress',{loaded:loaded,total:Math.max(loaded,fullRequest.contentLength||0)});}if(pdfManager){pdfManager.sendProgressiveData(data);}else{cachedChunks.push(data);}fullRequest.read().then(readChunk,reject);}catch(e){reject(e);}};fullRequest.read().then(readChunk,reject);});readPromise.catch(function(e){pdfManagerCapability.reject(e);cancelXHRs=null;});cancelXHRs=function cancelXHRs(){pdfStream.cancelAllRequests('abort');};return pdfManagerCapability.promise;}function setupDoc(data){function onSuccess(doc){ensureNotTerminated();handler.send('GetDoc',{pdfInfo:doc});}function onFailure(e){ensureNotTerminated();if(e instanceof _util.PasswordException){var task=new WorkerTask('PasswordException: response '+e.code);startWorkerTask(task);handler.sendWithPromise('PasswordRequest',e).then(function(data){finishWorkerTask(task);pdfManager.updatePassword(data.password);pdfManagerReady();}).catch(function(boundException){finishWorkerTask(task);handler.send('PasswordException',boundException);}.bind(null,e));}else if(e instanceof _util.InvalidPDFException){handler.send('InvalidPDF',e);}else if(e instanceof _util.MissingPDFException){handler.send('MissingPDF',e);}else if(e instanceof _util.UnexpectedResponseException){handler.send('UnexpectedResponse',e);}else{handler.send('UnknownError',new _util.UnknownErrorException(e.message,e.toString()));}}function pdfManagerReady(){ensureNotTerminated();loadDocument(false).then(onSuccess,function loadFailure(ex){ensureNotTerminated();if(!(ex instanceof _util.XRefParseException)){onFailure(ex);return;}pdfManager.requestLoadedStream();pdfManager.onLoadedStream().then(function(){ensureNotTerminated();loadDocument(true).then(onSuccess,onFailure);});},onFailure);}ensureNotTerminated();var evaluatorOptions={forceDataSchema:data.disableCreateObjectURL,maxImageSize:data.maxImageSize,disableFontFace:data.disableFontFace,nativeImageDecoderSupport:data.nativeImageDecoderSupport,ignoreErrors:data.ignoreErrors,isEvalSupported:data.isEvalSupported};getPdfManager(data,evaluatorOptions).then(function(newPdfManager){if(terminated){newPdfManager.terminate();throw new Error('Worker was terminated');}pdfManager=newPdfManager;pdfManager.onLoadedStream().then(function(stream){handler.send('DataLoaded',{length:stream.bytes.byteLength});});}).then(pdfManagerReady,onFailure);}handler.on('GetPage',function wphSetupGetPage(data){return pdfManager.getPage(data.pageIndex).then(function(page){return Promise.all([pdfManager.ensure(page,'rotate'),pdfManager.ensure(page,'ref'),pdfManager.ensure(page,'userUnit'),pdfManager.ensure(page,'view')]).then(function(_ref5){var _ref6=_slicedToArray(_ref5,4),rotate=_ref6[0],ref=_ref6[1],userUnit=_ref6[2],view=_ref6[3];return{rotate:rotate,ref:ref,userUnit:userUnit,view:view};});});});handler.on('GetPageIndex',function wphSetupGetPageIndex(data){var ref=new _primitives.Ref(data.ref.num,data.ref.gen);var catalog=pdfManager.pdfDocument.catalog;return catalog.getPageIndex(ref);});handler.on('GetDestinations',function wphSetupGetDestinations(data){return pdfManager.ensureCatalog('destinations');});handler.on('GetDestination',function wphSetupGetDestination(data){return pdfManager.ensureCatalog('getDestination',[data.id]);});handler.on('GetPageLabels',function wphSetupGetPageLabels(data){return pdfManager.ensureCatalog('pageLabels');});handler.on('GetPageMode',function wphSetupGetPageMode(data){return pdfManager.ensureCatalog('pageMode');});handler.on('GetAttachments',function wphSetupGetAttachments(data){return pdfManager.ensureCatalog('attachments');});handler.on('GetJavaScript',function wphSetupGetJavaScript(data){return pdfManager.ensureCatalog('javaScript');});handler.on('GetOutline',function wphSetupGetOutline(data){return pdfManager.ensureCatalog('documentOutline');});handler.on('GetPermissions',function(data){return pdfManager.ensureCatalog('permissions');});handler.on('GetMetadata',function wphSetupGetMetadata(data){return Promise.all([pdfManager.ensureDoc('documentInfo'),pdfManager.ensureCatalog('metadata')]);});handler.on('GetData',function wphSetupGetData(data){pdfManager.requestLoadedStream();return pdfManager.onLoadedStream().then(function(stream){return stream.bytes;});});handler.on('GetStats',function wphSetupGetStats(data){return pdfManager.pdfDocument.xref.stats;});handler.on('GetAnnotations',function(_ref7){var pageIndex=_ref7.pageIndex,intent=_ref7.intent;return pdfManager.getPage(pageIndex).then(function(page){return page.getAnnotationsData(intent);});});handler.on('RenderPageRequest',function wphSetupRenderPage(data){var pageIndex=data.pageIndex;pdfManager.getPage(pageIndex).then(function(page){var task=new WorkerTask('RenderPageRequest: page '+pageIndex);startWorkerTask(task);var pageNum=pageIndex+1;var start=Date.now();page.getOperatorList({handler:handler,task:task,intent:data.intent,renderInteractiveForms:data.renderInteractiveForms}).then(function(operatorList){finishWorkerTask(task);(0,_util.info)('page='+pageNum+' - getOperatorList: time='+(Date.now()-start)+'ms, len='+operatorList.totalLength);},function(e){finishWorkerTask(task);if(task.terminated){return;}handler.send('UnsupportedFeature',{featureId:_util.UNSUPPORTED_FEATURES.unknown});var minimumStackMessage='worker.js: while trying to getPage() and getOperatorList()';var wrappedException;if(typeof e==='string'){wrappedException={message:e,stack:minimumStackMessage};}else if((typeof e==='undefined'?'undefined':_typeof(e))==='object'){wrappedException={message:e.message||e.toString(),stack:e.stack||minimumStackMessage};}else{wrappedException={message:'Unknown exception type: '+(typeof e==='undefined'?'undefined':_typeof(e)),stack:minimumStackMessage};}handler.send('PageError',{pageNum:pageNum,error:wrappedException,intent:data.intent});});});},this);handler.on('GetTextContent',function wphExtractText(data,sink){var pageIndex=data.pageIndex;sink.onPull=function(desiredSize){};sink.onCancel=function(reason){};pdfManager.getPage(pageIndex).then(function(page){var task=new WorkerTask('GetTextContent: page '+pageIndex);startWorkerTask(task);var pageNum=pageIndex+1;var start=Date.now();page.extractTextContent({handler:handler,task:task,sink:sink,normalizeWhitespace:data.normalizeWhitespace,combineTextItems:data.combineTextItems}).then(function(){finishWorkerTask(task);(0,_util.info)('text indexing: page='+pageNum+' - time='+(Date.now()-start)+'ms');sink.close();},function(reason){finishWorkerTask(task);if(task.terminated){return;}sink.error(reason);throw reason;});});});handler.on('Cleanup',function wphCleanup(data){return pdfManager.cleanup();});handler.on('Terminate',function wphTerminate(data){terminated=true;if(pdfManager){pdfManager.terminate();pdfManager=null;}if(cancelXHRs){cancelXHRs();}var waitOn=[];WorkerTasks.forEach(function(task){waitOn.push(task.finished);task.terminate();});return Promise.all(waitOn).then(function(){handler.destroy();handler=null;});});handler.on('Ready',function wphReady(data){setupDoc(docParams);docParams=null;});return workerHandlerName;},initializeFromPort:function initializeFromPort(port){var handler=new _message_handler.MessageHandler('worker','main',port);WorkerMessageHandler.setup(handler,port);handler.send('ready',null);}};function isMessagePort(maybePort){return typeof maybePort.postMessage==='function'&&'onmessage'in maybePort;}if(typeof window==='undefined'&&!(0,_is_node2.default)()&&typeof self!=='undefined'&&isMessagePort(self)){WorkerMessageHandler.initializeFromPort(self);}exports.WorkerTask=WorkerTask;exports.WorkerMessageHandler=WorkerMessageHandler;/***/},/* 2 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.unreachable=exports.warn=exports.utf8StringToString=exports.stringToUTF8String=exports.stringToPDFString=exports.stringToBytes=exports.string32=exports.shadow=exports.setVerbosityLevel=exports.URL=exports.ReadableStream=exports.removeNullCharacters=exports.readUint32=exports.readUint16=exports.readInt8=exports.log2=exports.isEvalSupported=exports.isLittleEndian=exports.createValidAbsoluteUrl=exports.isSameOrigin=exports.isSpace=exports.isString=exports.isNum=exports.isEmptyObj=exports.isBool=exports.isArrayBuffer=exports.info=exports.getVerbosityLevel=exports.getLookupTableFactory=exports.getInheritableProperty=exports.deprecated=exports.createObjectURL=exports.createPromiseCapability=exports.bytesToString=exports.assert=exports.arraysToBytes=exports.arrayByteLength=exports.FormatError=exports.XRefParseException=exports.toRomanNumerals=exports.Util=exports.UnknownErrorException=exports.UnexpectedResponseException=exports.TextRenderingMode=exports.StreamType=exports.PermissionFlag=exports.PasswordResponses=exports.PasswordException=exports.NativeImageDecoding=exports.MissingPDFException=exports.MissingDataException=exports.InvalidPDFException=exports.AbortException=exports.CMapCompressionType=exports.ImageKind=exports.FontType=exports.AnnotationType=exports.AnnotationFlag=exports.AnnotationFieldFlag=exports.AnnotationBorderStyleType=exports.UNSUPPORTED_FEATURES=exports.VerbosityLevel=exports.OPS=exports.IDENTITY_MATRIX=exports.FONT_IDENTITY_MATRIX=undefined;var _typeof=typeof Symbol==="function"&&_typeof3(Symbol.iterator)==="symbol"?function(obj){return _typeof3(obj);}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":_typeof3(obj);};__w_pdfjs_require__(3);var _streams_polyfill=__w_pdfjs_require__(126);var _url_polyfill=__w_pdfjs_require__(128);var IDENTITY_MATRIX=[1,0,0,1,0,0];var FONT_IDENTITY_MATRIX=[0.001,0,0,0.001,0,0];var NativeImageDecoding={NONE:'none',DECODE:'decode',DISPLAY:'display'};var PermissionFlag={PRINT:0x04,MODIFY_CONTENTS:0x08,COPY:0x10,MODIFY_ANNOTATIONS:0x20,FILL_INTERACTIVE_FORMS:0x100,COPY_FOR_ACCESSIBILITY:0x200,ASSEMBLE:0x400,PRINT_HIGH_QUALITY:0x800};var TextRenderingMode={FILL:0,STROKE:1,FILL_STROKE:2,INVISIBLE:3,FILL_ADD_TO_PATH:4,STROKE_ADD_TO_PATH:5,FILL_STROKE_ADD_TO_PATH:6,ADD_TO_PATH:7,FILL_STROKE_MASK:3,ADD_TO_PATH_FLAG:4};var ImageKind={GRAYSCALE_1BPP:1,RGB_24BPP:2,RGBA_32BPP:3};var AnnotationType={TEXT:1,LINK:2,FREETEXT:3,LINE:4,SQUARE:5,CIRCLE:6,POLYGON:7,POLYLINE:8,HIGHLIGHT:9,UNDERLINE:10,SQUIGGLY:11,STRIKEOUT:12,STAMP:13,CARET:14,INK:15,POPUP:16,FILEATTACHMENT:17,SOUND:18,MOVIE:19,WIDGET:20,SCREEN:21,PRINTERMARK:22,TRAPNET:23,WATERMARK:24,THREED:25,REDACT:26};var AnnotationFlag={INVISIBLE:0x01,HIDDEN:0x02,PRINT:0x04,NOZOOM:0x08,NOROTATE:0x10,NOVIEW:0x20,READONLY:0x40,LOCKED:0x80,TOGGLENOVIEW:0x100,LOCKEDCONTENTS:0x200};var AnnotationFieldFlag={READONLY:0x0000001,REQUIRED:0x0000002,NOEXPORT:0x0000004,MULTILINE:0x0001000,PASSWORD:0x0002000,NOTOGGLETOOFF:0x0004000,RADIO:0x0008000,PUSHBUTTON:0x0010000,COMBO:0x0020000,EDIT:0x0040000,SORT:0x0080000,FILESELECT:0x0100000,MULTISELECT:0x0200000,DONOTSPELLCHECK:0x0400000,DONOTSCROLL:0x0800000,COMB:0x1000000,RICHTEXT:0x2000000,RADIOSINUNISON:0x2000000,COMMITONSELCHANGE:0x4000000};var AnnotationBorderStyleType={SOLID:1,DASHED:2,BEVELED:3,INSET:4,UNDERLINE:5};var StreamType={UNKNOWN:0,FLATE:1,LZW:2,DCT:3,JPX:4,JBIG:5,A85:6,AHX:7,CCF:8,RL:9};var FontType={UNKNOWN:0,TYPE1:1,TYPE1C:2,CIDFONTTYPE0:3,CIDFONTTYPE0C:4,TRUETYPE:5,CIDFONTTYPE2:6,TYPE3:7,OPENTYPE:8,TYPE0:9,MMTYPE1:10};var VerbosityLevel={ERRORS:0,WARNINGS:1,INFOS:5};var CMapCompressionType={NONE:0,BINARY:1,STREAM:2};var OPS={dependency:1,setLineWidth:2,setLineCap:3,setLineJoin:4,setMiterLimit:5,setDash:6,setRenderingIntent:7,setFlatness:8,setGState:9,save:10,restore:11,transform:12,moveTo:13,lineTo:14,curveTo:15,curveTo2:16,curveTo3:17,closePath:18,rectangle:19,stroke:20,closeStroke:21,fill:22,eoFill:23,fillStroke:24,eoFillStroke:25,closeFillStroke:26,closeEOFillStroke:27,endPath:28,clip:29,eoClip:30,beginText:31,endText:32,setCharSpacing:33,setWordSpacing:34,setHScale:35,setLeading:36,setFont:37,setTextRenderingMode:38,setTextRise:39,moveText:40,setLeadingMoveText:41,setTextMatrix:42,nextLine:43,showText:44,showSpacedText:45,nextLineShowText:46,nextLineSetSpacingShowText:47,setCharWidth:48,setCharWidthAndBounds:49,setStrokeColorSpace:50,setFillColorSpace:51,setStrokeColor:52,setStrokeColorN:53,setFillColor:54,setFillColorN:55,setStrokeGray:56,setFillGray:57,setStrokeRGBColor:58,setFillRGBColor:59,setStrokeCMYKColor:60,setFillCMYKColor:61,shadingFill:62,beginInlineImage:63,beginImageData:64,endInlineImage:65,paintXObject:66,markPoint:67,markPointProps:68,beginMarkedContent:69,beginMarkedContentProps:70,endMarkedContent:71,beginCompat:72,endCompat:73,paintFormXObjectBegin:74,paintFormXObjectEnd:75,beginGroup:76,endGroup:77,beginAnnotations:78,endAnnotations:79,beginAnnotation:80,endAnnotation:81,paintJpegXObject:82,paintImageMaskXObject:83,paintImageMaskXObjectGroup:84,paintImageXObject:85,paintInlineImageXObject:86,paintInlineImageXObjectGroup:87,paintImageXObjectRepeat:88,paintImageMaskXObjectRepeat:89,paintSolidColorImageMask:90,constructPath:91};var UNSUPPORTED_FEATURES={unknown:'unknown',forms:'forms',javaScript:'javaScript',smask:'smask',shadingPattern:'shadingPattern',font:'font'};var PasswordResponses={NEED_PASSWORD:1,INCORRECT_PASSWORD:2};var verbosity=VerbosityLevel.WARNINGS;function setVerbosityLevel(level){if(Number.isInteger(level)){verbosity=level;}}function getVerbosityLevel(){return verbosity;}function info(msg){if(verbosity>=VerbosityLevel.INFOS){console.log('Info: '+msg);}}function warn(msg){if(verbosity>=VerbosityLevel.WARNINGS){console.log('Warning: '+msg);}}function deprecated(details){console.log('Deprecated API usage: '+details);}function unreachable(msg){throw new Error(msg);}function assert(cond,msg){if(!cond){unreachable(msg);}}function isSameOrigin(baseUrl,otherUrl){try{var base=new _url_polyfill.URL(baseUrl);if(!base.origin||base.origin==='null'){return false;}}catch(e){return false;}var other=new _url_polyfill.URL(otherUrl,base);return base.origin===other.origin;}function _isValidProtocol(url){if(!url){return false;}switch(url.protocol){case'http:':case'https:':case'ftp:':case'mailto:':case'tel:':return true;default:return false;}}function createValidAbsoluteUrl(url,baseUrl){if(!url){return null;}try{var absoluteUrl=baseUrl?new _url_polyfill.URL(url,baseUrl):new _url_polyfill.URL(url);if(_isValidProtocol(absoluteUrl)){return absoluteUrl;}}catch(ex){}return null;}function shadow(obj,prop,value){Object.defineProperty(obj,prop,{value:value,enumerable:true,configurable:true,writable:false});return value;}function getLookupTableFactory(initializer){var lookup;return function(){if(initializer){lookup=Object.create(null);initializer(lookup);initializer=null;}return lookup;};}var PasswordException=function PasswordExceptionClosure(){function PasswordException(msg,code){this.name='PasswordException';this.message=msg;this.code=code;}PasswordException.prototype=new Error();PasswordException.constructor=PasswordException;return PasswordException;}();var UnknownErrorException=function UnknownErrorExceptionClosure(){function UnknownErrorException(msg,details){this.name='UnknownErrorException';this.message=msg;this.details=details;}UnknownErrorException.prototype=new Error();UnknownErrorException.constructor=UnknownErrorException;return UnknownErrorException;}();var InvalidPDFException=function InvalidPDFExceptionClosure(){function InvalidPDFException(msg){this.name='InvalidPDFException';this.message=msg;}InvalidPDFException.prototype=new Error();InvalidPDFException.constructor=InvalidPDFException;return InvalidPDFException;}();var MissingPDFException=function MissingPDFExceptionClosure(){function MissingPDFException(msg){this.name='MissingPDFException';this.message=msg;}MissingPDFException.prototype=new Error();MissingPDFException.constructor=MissingPDFException;return MissingPDFException;}();var UnexpectedResponseException=function UnexpectedResponseExceptionClosure(){function UnexpectedResponseException(msg,status){this.name='UnexpectedResponseException';this.message=msg;this.status=status;}UnexpectedResponseException.prototype=new Error();UnexpectedResponseException.constructor=UnexpectedResponseException;return UnexpectedResponseException;}();var MissingDataException=function MissingDataExceptionClosure(){function MissingDataException(begin,end){this.begin=begin;this.end=end;this.message='Missing data ['+begin+', '+end+')';}MissingDataException.prototype=new Error();MissingDataException.prototype.name='MissingDataException';MissingDataException.constructor=MissingDataException;return MissingDataException;}();var XRefParseException=function XRefParseExceptionClosure(){function XRefParseException(msg){this.message=msg;}XRefParseException.prototype=new Error();XRefParseException.prototype.name='XRefParseException';XRefParseException.constructor=XRefParseException;return XRefParseException;}();var FormatError=function FormatErrorClosure(){function FormatError(msg){this.message=msg;}FormatError.prototype=new Error();FormatError.prototype.name='FormatError';FormatError.constructor=FormatError;return FormatError;}();var AbortException=function AbortExceptionClosure(){function AbortException(msg){this.name='AbortException';this.message=msg;}AbortException.prototype=new Error();AbortException.constructor=AbortException;return AbortException;}();var NullCharactersRegExp=/\x00/g;function removeNullCharacters(str){if(typeof str!=='string'){warn('The argument for removeNullCharacters must be a string.');return str;}return str.replace(NullCharactersRegExp,'');}function bytesToString(bytes){assert(bytes!==null&&(typeof bytes==='undefined'?'undefined':_typeof(bytes))==='object'&&bytes.length!==undefined,'Invalid argument for bytesToString');var length=bytes.length;var MAX_ARGUMENT_COUNT=8192;if(length<MAX_ARGUMENT_COUNT){return String.fromCharCode.apply(null,bytes);}var strBuf=[];for(var i=0;i<length;i+=MAX_ARGUMENT_COUNT){var chunkEnd=Math.min(i+MAX_ARGUMENT_COUNT,length);var chunk=bytes.subarray(i,chunkEnd);strBuf.push(String.fromCharCode.apply(null,chunk));}return strBuf.join('');}function stringToBytes(str){assert(typeof str==='string','Invalid argument for stringToBytes');var length=str.length;var bytes=new Uint8Array(length);for(var i=0;i<length;++i){bytes[i]=str.charCodeAt(i)&0xFF;}return bytes;}function arrayByteLength(arr){if(arr.length!==undefined){return arr.length;}assert(arr.byteLength!==undefined);return arr.byteLength;}function arraysToBytes(arr){if(arr.length===1&&arr[0]instanceof Uint8Array){return arr[0];}var resultLength=0;var i,ii=arr.length;var item,itemLength;for(i=0;i<ii;i++){item=arr[i];itemLength=arrayByteLength(item);resultLength+=itemLength;}var pos=0;var data=new Uint8Array(resultLength);for(i=0;i<ii;i++){item=arr[i];if(!(item instanceof Uint8Array)){if(typeof item==='string'){item=stringToBytes(item);}else{item=new Uint8Array(item);}}itemLength=item.byteLength;data.set(item,pos);pos+=itemLength;}return data;}function string32(value){return String.fromCharCode(value>>24&0xff,value>>16&0xff,value>>8&0xff,value&0xff);}function log2(x){if(x<=0){return 0;}return Math.ceil(Math.log2(x));}function readInt8(data,start){return data[start]<<24>>24;}function readUint16(data,offset){return data[offset]<<8|data[offset+1];}function readUint32(data,offset){return(data[offset]<<24|data[offset+1]<<16|data[offset+2]<<8|data[offset+3])>>>0;}function isLittleEndian(){var buffer8=new Uint8Array(4);buffer8[0]=1;var view32=new Uint32Array(buffer8.buffer,0,1);return view32[0]===1;}function isEvalSupported(){try{new Function('');return true;}catch(e){return false;}}function getInheritableProperty(_ref){var dict=_ref.dict,key=_ref.key,_ref$getArray=_ref.getArray,getArray=_ref$getArray===undefined?false:_ref$getArray,_ref$stopWhenFound=_ref.stopWhenFound,stopWhenFound=_ref$stopWhenFound===undefined?true:_ref$stopWhenFound;var LOOP_LIMIT=100;var loopCount=0;var values=void 0;while(dict){var value=getArray?dict.getArray(key):dict.get(key);if(value!==undefined){if(stopWhenFound){return value;}if(!values){values=[];}values.push(value);}if(++loopCount>LOOP_LIMIT){warn('getInheritableProperty: maximum loop count exceeded for "'+key+'"');break;}dict=dict.get('Parent');}return values;}var Util=function UtilClosure(){function Util(){}var rgbBuf=['rgb(',0,',',0,',',0,')'];Util.makeCssRgb=function Util_makeCssRgb(r,g,b){rgbBuf[1]=r;rgbBuf[3]=g;rgbBuf[5]=b;return rgbBuf.join('');};Util.transform=function Util_transform(m1,m2){return[m1[0]*m2[0]+m1[2]*m2[1],m1[1]*m2[0]+m1[3]*m2[1],m1[0]*m2[2]+m1[2]*m2[3],m1[1]*m2[2]+m1[3]*m2[3],m1[0]*m2[4]+m1[2]*m2[5]+m1[4],m1[1]*m2[4]+m1[3]*m2[5]+m1[5]];};Util.applyTransform=function Util_applyTransform(p,m){var xt=p[0]*m[0]+p[1]*m[2]+m[4];var yt=p[0]*m[1]+p[1]*m[3]+m[5];return[xt,yt];};Util.applyInverseTransform=function Util_applyInverseTransform(p,m){var d=m[0]*m[3]-m[1]*m[2];var xt=(p[0]*m[3]-p[1]*m[2]+m[2]*m[5]-m[4]*m[3])/d;var yt=(-p[0]*m[1]+p[1]*m[0]+m[4]*m[1]-m[5]*m[0])/d;return[xt,yt];};Util.getAxialAlignedBoundingBox=function Util_getAxialAlignedBoundingBox(r,m){var p1=Util.applyTransform(r,m);var p2=Util.applyTransform(r.slice(2,4),m);var p3=Util.applyTransform([r[0],r[3]],m);var p4=Util.applyTransform([r[2],r[1]],m);return[Math.min(p1[0],p2[0],p3[0],p4[0]),Math.min(p1[1],p2[1],p3[1],p4[1]),Math.max(p1[0],p2[0],p3[0],p4[0]),Math.max(p1[1],p2[1],p3[1],p4[1])];};Util.inverseTransform=function Util_inverseTransform(m){var d=m[0]*m[3]-m[1]*m[2];return[m[3]/d,-m[1]/d,-m[2]/d,m[0]/d,(m[2]*m[5]-m[4]*m[3])/d,(m[4]*m[1]-m[5]*m[0])/d];};Util.apply3dTransform=function Util_apply3dTransform(m,v){return[m[0]*v[0]+m[1]*v[1]+m[2]*v[2],m[3]*v[0]+m[4]*v[1]+m[5]*v[2],m[6]*v[0]+m[7]*v[1]+m[8]*v[2]];};Util.singularValueDecompose2dScale=function Util_singularValueDecompose2dScale(m){var transpose=[m[0],m[2],m[1],m[3]];var a=m[0]*transpose[0]+m[1]*transpose[2];var b=m[0]*transpose[1]+m[1]*transpose[3];var c=m[2]*transpose[0]+m[3]*transpose[2];var d=m[2]*transpose[1]+m[3]*transpose[3];var first=(a+d)/2;var second=Math.sqrt((a+d)*(a+d)-4*(a*d-c*b))/2;var sx=first+second||1;var sy=first-second||1;return[Math.sqrt(sx),Math.sqrt(sy)];};Util.normalizeRect=function Util_normalizeRect(rect){var r=rect.slice(0);if(rect[0]>rect[2]){r[0]=rect[2];r[2]=rect[0];}if(rect[1]>rect[3]){r[1]=rect[3];r[3]=rect[1];}return r;};Util.intersect=function Util_intersect(rect1,rect2){function compare(a,b){return a-b;}var orderedX=[rect1[0],rect1[2],rect2[0],rect2[2]].sort(compare),orderedY=[rect1[1],rect1[3],rect2[1],rect2[3]].sort(compare),result=[];rect1=Util.normalizeRect(rect1);rect2=Util.normalizeRect(rect2);if(orderedX[0]===rect1[0]&&orderedX[1]===rect2[0]||orderedX[0]===rect2[0]&&orderedX[1]===rect1[0]){result[0]=orderedX[1];result[2]=orderedX[2];}else{return false;}if(orderedY[0]===rect1[1]&&orderedY[1]===rect2[1]||orderedY[0]===rect2[1]&&orderedY[1]===rect1[1]){result[1]=orderedY[1];result[3]=orderedY[2];}else{return false;}return result;};return Util;}();var ROMAN_NUMBER_MAP=['','C','CC','CCC','CD','D','DC','DCC','DCCC','CM','','X','XX','XXX','XL','L','LX','LXX','LXXX','XC','','I','II','III','IV','V','VI','VII','VIII','IX'];function toRomanNumerals(number){var lowerCase=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;assert(Number.isInteger(number)&&number>0,'The number should be a positive integer.');var pos=void 0,romanBuf=[];while(number>=1000){number-=1000;romanBuf.push('M');}pos=number/100|0;number%=100;romanBuf.push(ROMAN_NUMBER_MAP[pos]);pos=number/10|0;number%=10;romanBuf.push(ROMAN_NUMBER_MAP[10+pos]);romanBuf.push(ROMAN_NUMBER_MAP[20+number]);var romanStr=romanBuf.join('');return lowerCase?romanStr.toLowerCase():romanStr;}var PDFStringTranslateTable=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0x2D8,0x2C7,0x2C6,0x2D9,0x2DD,0x2DB,0x2DA,0x2DC,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0x2022,0x2020,0x2021,0x2026,0x2014,0x2013,0x192,0x2044,0x2039,0x203A,0x2212,0x2030,0x201E,0x201C,0x201D,0x2018,0x2019,0x201A,0x2122,0xFB01,0xFB02,0x141,0x152,0x160,0x178,0x17D,0x131,0x142,0x153,0x161,0x17E,0,0x20AC];function stringToPDFString(str){var i,n=str.length,strBuf=[];if(str[0]==='\xFE'&&str[1]==='\xFF'){for(i=2;i<n;i+=2){strBuf.push(String.fromCharCode(str.charCodeAt(i)<<8|str.charCodeAt(i+1)));}}else{for(i=0;i<n;++i){var code=PDFStringTranslateTable[str.charCodeAt(i)];strBuf.push(code?String.fromCharCode(code):str.charAt(i));}}return strBuf.join('');}function stringToUTF8String(str){return decodeURIComponent(escape(str));}function utf8StringToString(str){return unescape(encodeURIComponent(str));}function isEmptyObj(obj){for(var key in obj){return false;}return true;}function isBool(v){return typeof v==='boolean';}function isNum(v){return typeof v==='number';}function isString(v){return typeof v==='string';}function isArrayBuffer(v){return(typeof v==='undefined'?'undefined':_typeof(v))==='object'&&v!==null&&v.byteLength!==undefined;}function isSpace(ch){return ch===0x20||ch===0x09||ch===0x0D||ch===0x0A;}function createPromiseCapability(){var capability={};capability.promise=new Promise(function(resolve,reject){capability.resolve=resolve;capability.reject=reject;});return capability;}var createObjectURL=function createObjectURLClosure(){var digits='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';return function createObjectURL(data,contentType){var forceDataSchema=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;if(!forceDataSchema&&_url_polyfill.URL.createObjectURL){var blob=new Blob([data],{type:contentType});return _url_polyfill.URL.createObjectURL(blob);}var buffer='data:'+contentType+';base64,';for(var i=0,ii=data.length;i<ii;i+=3){var b1=data[i]&0xFF;var b2=data[i+1]&0xFF;var b3=data[i+2]&0xFF;var d1=b1>>2,d2=(b1&3)<<4|b2>>4;var d3=i+1<ii?(b2&0xF)<<2|b3>>6:64;var d4=i+2<ii?b3&0x3F:64;buffer+=digits[d1]+digits[d2]+digits[d3]+digits[d4];}return buffer;};}();exports.FONT_IDENTITY_MATRIX=FONT_IDENTITY_MATRIX;exports.IDENTITY_MATRIX=IDENTITY_MATRIX;exports.OPS=OPS;exports.VerbosityLevel=VerbosityLevel;exports.UNSUPPORTED_FEATURES=UNSUPPORTED_FEATURES;exports.AnnotationBorderStyleType=AnnotationBorderStyleType;exports.AnnotationFieldFlag=AnnotationFieldFlag;exports.AnnotationFlag=AnnotationFlag;exports.AnnotationType=AnnotationType;exports.FontType=FontType;exports.ImageKind=ImageKind;exports.CMapCompressionType=CMapCompressionType;exports.AbortException=AbortException;exports.InvalidPDFException=InvalidPDFException;exports.MissingDataException=MissingDataException;exports.MissingPDFException=MissingPDFException;exports.NativeImageDecoding=NativeImageDecoding;exports.PasswordException=PasswordException;exports.PasswordResponses=PasswordResponses;exports.PermissionFlag=PermissionFlag;exports.StreamType=StreamType;exports.TextRenderingMode=TextRenderingMode;exports.UnexpectedResponseException=UnexpectedResponseException;exports.UnknownErrorException=UnknownErrorException;exports.Util=Util;exports.toRomanNumerals=toRomanNumerals;exports.XRefParseException=XRefParseException;exports.FormatError=FormatError;exports.arrayByteLength=arrayByteLength;exports.arraysToBytes=arraysToBytes;exports.assert=assert;exports.bytesToString=bytesToString;exports.createPromiseCapability=createPromiseCapability;exports.createObjectURL=createObjectURL;exports.deprecated=deprecated;exports.getInheritableProperty=getInheritableProperty;exports.getLookupTableFactory=getLookupTableFactory;exports.getVerbosityLevel=getVerbosityLevel;exports.info=info;exports.isArrayBuffer=isArrayBuffer;exports.isBool=isBool;exports.isEmptyObj=isEmptyObj;exports.isNum=isNum;exports.isString=isString;exports.isSpace=isSpace;exports.isSameOrigin=isSameOrigin;exports.createValidAbsoluteUrl=createValidAbsoluteUrl;exports.isLittleEndian=isLittleEndian;exports.isEvalSupported=isEvalSupported;exports.log2=log2;exports.readInt8=readInt8;exports.readUint16=readUint16;exports.readUint32=readUint32;exports.removeNullCharacters=removeNullCharacters;exports.ReadableStream=_streams_polyfill.ReadableStream;exports.URL=_url_polyfill.URL;exports.setVerbosityLevel=setVerbosityLevel;exports.shadow=shadow;exports.string32=string32;exports.stringToBytes=stringToBytes;exports.stringToPDFString=stringToPDFString;exports.stringToUTF8String=stringToUTF8String;exports.utf8StringToString=utf8StringToString;exports.warn=warn;exports.unreachable=unreachable;/***/},/* 3 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var _typeof=typeof Symbol==="function"&&_typeof3(Symbol.iterator)==="symbol"?function(obj){return _typeof3(obj);}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":_typeof3(obj);};var globalScope=__w_pdfjs_require__(4);if(!globalScope._pdfjsCompatibilityChecked){globalScope._pdfjsCompatibilityChecked=true;var isNodeJS=__w_pdfjs_require__(5);var hasDOM=(typeof window==='undefined'?'undefined':_typeof(window))==='object'&&(typeof document==='undefined'?'undefined':_typeof(document))==='object';(function checkNodeBtoa(){if(globalScope.btoa||!isNodeJS()){return;}globalScope.btoa=function(chars){return Buffer.from(chars,'binary').toString('base64');};})();(function checkNodeAtob(){if(globalScope.atob||!isNodeJS()){return;}globalScope.atob=function(input){return Buffer.from(input,'base64').toString('binary');};})();(function checkCurrentScript(){if(!hasDOM){return;}if('currentScript'in document){return;}Object.defineProperty(document,'currentScript',{get:function get(){var scripts=document.getElementsByTagName('script');return scripts[scripts.length-1];},enumerable:true,configurable:true});})();(function checkChildNodeRemove(){if(!hasDOM){return;}if(typeof Element.prototype.remove!=='undefined'){return;}Element.prototype.remove=function(){if(this.parentNode){this.parentNode.removeChild(this);}};})();(function checkDOMTokenListToggle(){if(!hasDOM||isNodeJS()){return;}var div=document.createElement('div');if(div.classList.toggle('test',0)===false){return;}var originalDOMTokenListToggle=DOMTokenList.prototype.toggle;DOMTokenList.prototype.toggle=function(token){if(arguments.length>1){var force=!!arguments[1];return this[force?'add':'remove'](token),force;}return originalDOMTokenListToggle(token);};})();(function checkStringIncludes(){if(String.prototype.includes){return;}__w_pdfjs_require__(6);})();(function checkArrayIncludes(){if(Array.prototype.includes){return;}__w_pdfjs_require__(34);})();(function checkObjectAssign(){if(Object.assign){return;}__w_pdfjs_require__(43);})();(function checkMathLog2(){if(Math.log2){return;}Math.log2=__w_pdfjs_require__(53);})();(function checkNumberIsNaN(){if(Number.isNaN){return;}Number.isNaN=__w_pdfjs_require__(55);})();(function checkNumberIsInteger(){if(Number.isInteger){return;}Number.isInteger=__w_pdfjs_require__(57);})();(function checkPromise(){if(globalScope.Promise){return;}globalScope.Promise=__w_pdfjs_require__(60);})();(function checkWeakMap(){if(globalScope.WeakMap){return;}globalScope.WeakMap=__w_pdfjs_require__(95);})();(function checkStringCodePointAt(){if(String.codePointAt){return;}String.codePointAt=__w_pdfjs_require__(112);})();(function checkStringFromCodePoint(){if(String.fromCodePoint){return;}String.fromCodePoint=__w_pdfjs_require__(114);})();(function checkSymbol(){if(globalScope.Symbol){return;}__w_pdfjs_require__(116);})();(function checkObjectValues(){if(Object.values){return;}Object.values=__w_pdfjs_require__(123);})();}/***/},/* 4 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";module.exports=typeof window!=='undefined'&&window.Math===Math?window:typeof global!=='undefined'&&global.Math===Math?global:typeof self!=='undefined'&&self.Math===Math?self:{};/***/},/* 5 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var _typeof=typeof Symbol==="function"&&_typeof3(Symbol.iterator)==="symbol"?function(obj){return _typeof3(obj);}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":_typeof3(obj);};module.exports=function isNodeJS(){return(typeof process==='undefined'?'undefined':_typeof(process))==='object'&&process+''==='[object process]';};/***/},/* 6 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";__w_pdfjs_require__(7);module.exports=__w_pdfjs_require__(10).String.includes;/***/},/* 7 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var $export=__w_pdfjs_require__(8);var context=__w_pdfjs_require__(26);var INCLUDES='includes';$export($export.P+$export.F*__w_pdfjs_require__(33)(INCLUDES),'String',{includes:function includes(searchString){return!!~context(this,searchString,INCLUDES).indexOf(searchString,arguments.length>1?arguments[1]:undefined);}});/***/},/* 8 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var global=__w_pdfjs_require__(9);var core=__w_pdfjs_require__(10);var hide=__w_pdfjs_require__(11);var redefine=__w_pdfjs_require__(21);var ctx=__w_pdfjs_require__(24);var PROTOTYPE='prototype';var $export=function $export(type,name,source){var IS_FORCED=type&$export.F;var IS_GLOBAL=type&$export.G;var IS_STATIC=type&$export.S;var IS_PROTO=type&$export.P;var IS_BIND=type&$export.B;var target=IS_GLOBAL?global:IS_STATIC?global[name]||(global[name]={}):(global[name]||{})[PROTOTYPE];var exports=IS_GLOBAL?core:core[name]||(core[name]={});var expProto=exports[PROTOTYPE]||(exports[PROTOTYPE]={});var key,own,out,exp;if(IS_GLOBAL)source=name;for(key in source){own=!IS_FORCED&&target&&target[key]!==undefined;out=(own?target:source)[key];exp=IS_BIND&&own?ctx(out,global):IS_PROTO&&typeof out=='function'?ctx(Function.call,out):out;if(target)redefine(target,key,out,type&$export.U);if(exports[key]!=out)hide(exports,key,exp);if(IS_PROTO&&expProto[key]!=out)expProto[key]=out;}};global.core=core;$export.F=1;$export.G=2;$export.S=4;$export.P=8;$export.B=16;$export.W=32;$export.U=64;$export.R=128;module.exports=$export;/***/},/* 9 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var global=module.exports=typeof window!='undefined'&&window.Math==Math?window:typeof self!='undefined'&&self.Math==Math?self:Function('return this')();if(typeof __g=='number')__g=global;/***/},/* 10 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var core=module.exports={version:'2.5.7'};if(typeof __e=='number')__e=core;/***/},/* 11 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var dP=__w_pdfjs_require__(12);var createDesc=__w_pdfjs_require__(20);module.exports=__w_pdfjs_require__(16)?function(object,key,value){return dP.f(object,key,createDesc(1,value));}:function(object,key,value){object[key]=value;return object;};/***/},/* 12 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var anObject=__w_pdfjs_require__(13);var IE8_DOM_DEFINE=__w_pdfjs_require__(15);var toPrimitive=__w_pdfjs_require__(19);var dP=Object.defineProperty;exports.f=__w_pdfjs_require__(16)?Object.defineProperty:function defineProperty(O,P,Attributes){anObject(O);P=toPrimitive(P,true);anObject(Attributes);if(IE8_DOM_DEFINE)try{return dP(O,P,Attributes);}catch(e){}if('get'in Attributes||'set'in Attributes)throw TypeError('Accessors not supported!');if('value'in Attributes)O[P]=Attributes.value;return O;};/***/},/* 13 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var isObject=__w_pdfjs_require__(14);module.exports=function(it){if(!isObject(it))throw TypeError(it+' is not an object!');return it;};/***/},/* 14 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var _typeof=typeof Symbol==="function"&&_typeof3(Symbol.iterator)==="symbol"?function(obj){return _typeof3(obj);}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":_typeof3(obj);};module.exports=function(it){return(typeof it==='undefined'?'undefined':_typeof(it))==='object'?it!==null:typeof it==='function';};/***/},/* 15 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";module.exports=!__w_pdfjs_require__(16)&&!__w_pdfjs_require__(17)(function(){return Object.defineProperty(__w_pdfjs_require__(18)('div'),'a',{get:function get(){return 7;}}).a!=7;});/***/},/* 16 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";module.exports=!__w_pdfjs_require__(17)(function(){return Object.defineProperty({},'a',{get:function get(){return 7;}}).a!=7;});/***/},/* 17 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";module.exports=function(exec){try{return!!exec();}catch(e){return true;}};/***/},/* 18 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var isObject=__w_pdfjs_require__(14);var document=__w_pdfjs_require__(9).document;var is=isObject(document)&&isObject(document.createElement);module.exports=function(it){return is?document.createElement(it):{};};/***/},/* 19 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var isObject=__w_pdfjs_require__(14);module.exports=function(it,S){if(!isObject(it))return it;var fn,val;if(S&&typeof(fn=it.toString)=='function'&&!isObject(val=fn.call(it)))return val;if(typeof(fn=it.valueOf)=='function'&&!isObject(val=fn.call(it)))return val;if(!S&&typeof(fn=it.toString)=='function'&&!isObject(val=fn.call(it)))return val;throw TypeError("Can't convert object to primitive value");};/***/},/* 20 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";module.exports=function(bitmap,value){return{enumerable:!(bitmap&1),configurable:!(bitmap&2),writable:!(bitmap&4),value:value};};/***/},/* 21 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var global=__w_pdfjs_require__(9);var hide=__w_pdfjs_require__(11);var has=__w_pdfjs_require__(22);var SRC=__w_pdfjs_require__(23)('src');var TO_STRING='toString';var $toString=Function[TO_STRING];var TPL=(''+$toString).split(TO_STRING);__w_pdfjs_require__(10).inspectSource=function(it){return $toString.call(it);};(module.exports=function(O,key,val,safe){var isFunction=typeof val=='function';if(isFunction)has(val,'name')||hide(val,'name',key);if(O[key]===val)return;if(isFunction)has(val,SRC)||hide(val,SRC,O[key]?''+O[key]:TPL.join(String(key)));if(O===global){O[key]=val;}else if(!safe){delete O[key];hide(O,key,val);}else if(O[key]){O[key]=val;}else{hide(O,key,val);}})(Function.prototype,TO_STRING,function toString(){return typeof this=='function'&&this[SRC]||$toString.call(this);});/***/},/* 22 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var hasOwnProperty={}.hasOwnProperty;module.exports=function(it,key){return hasOwnProperty.call(it,key);};/***/},/* 23 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var id=0;var px=Math.random();module.exports=function(key){return'Symbol('.concat(key===undefined?'':key,')_',(++id+px).toString(36));};/***/},/* 24 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var aFunction=__w_pdfjs_require__(25);module.exports=function(fn,that,length){aFunction(fn);if(that===undefined)return fn;switch(length){case 1:return function(a){return fn.call(that,a);};case 2:return function(a,b){return fn.call(that,a,b);};case 3:return function(a,b,c){return fn.call(that,a,b,c);};}return function(){return fn.apply(that,arguments);};};/***/},/* 25 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";module.exports=function(it){if(typeof it!='function')throw TypeError(it+' is not a function!');return it;};/***/},/* 26 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var isRegExp=__w_pdfjs_require__(27);var defined=__w_pdfjs_require__(32);module.exports=function(that,searchString,NAME){if(isRegExp(searchString))throw TypeError('String#'+NAME+" doesn't accept regex!");return String(defined(that));};/***/},/* 27 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var isObject=__w_pdfjs_require__(14);var cof=__w_pdfjs_require__(28);var MATCH=__w_pdfjs_require__(29)('match');module.exports=function(it){var isRegExp;return isObject(it)&&((isRegExp=it[MATCH])!==undefined?!!isRegExp:cof(it)=='RegExp');};/***/},/* 28 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var toString={}.toString;module.exports=function(it){return toString.call(it).slice(8,-1);};/***/},/* 29 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var store=__w_pdfjs_require__(30)('wks');var uid=__w_pdfjs_require__(23);var _Symbol=__w_pdfjs_require__(9).Symbol;var USE_SYMBOL=typeof _Symbol=='function';var $exports=module.exports=function(name){return store[name]||(store[name]=USE_SYMBOL&&_Symbol[name]||(USE_SYMBOL?_Symbol:uid)('Symbol.'+name));};$exports.store=store;/***/},/* 30 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var core=__w_pdfjs_require__(10);var global=__w_pdfjs_require__(9);var SHARED='__core-js_shared__';var store=global[SHARED]||(global[SHARED]={});(module.exports=function(key,value){return store[key]||(store[key]=value!==undefined?value:{});})('versions',[]).push({version:core.version,mode:__w_pdfjs_require__(31)?'pure':'global',copyright:'© 2018 Denis Pushkarev (zloirock.ru)'});/***/},/* 31 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";module.exports=false;/***/},/* 32 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";module.exports=function(it){if(it==undefined)throw TypeError("Can't call method on  "+it);return it;};/***/},/* 33 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var MATCH=__w_pdfjs_require__(29)('match');module.exports=function(KEY){var re=/./;try{'/./'[KEY](re);}catch(e){try{re[MATCH]=false;return!'/./'[KEY](re);}catch(f){}}return true;};/***/},/* 34 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";__w_pdfjs_require__(35);module.exports=__w_pdfjs_require__(10).Array.includes;/***/},/* 35 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var $export=__w_pdfjs_require__(8);var $includes=__w_pdfjs_require__(36)(true);$export($export.P,'Array',{includes:function includes(el){return $includes(this,el,arguments.length>1?arguments[1]:undefined);}});__w_pdfjs_require__(42)('includes');/***/},/* 36 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var toIObject=__w_pdfjs_require__(37);var toLength=__w_pdfjs_require__(39);var toAbsoluteIndex=__w_pdfjs_require__(41);module.exports=function(IS_INCLUDES){return function($this,el,fromIndex){var O=toIObject($this);var length=toLength(O.length);var index=toAbsoluteIndex(fromIndex,length);var value;if(IS_INCLUDES&&el!=el)while(length>index){value=O[index++];if(value!=value)return true;}else for(;length>index;index++){if(IS_INCLUDES||index in O){if(O[index]===el)return IS_INCLUDES||index||0;}}return!IS_INCLUDES&&-1;};};/***/},/* 37 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var IObject=__w_pdfjs_require__(38);var defined=__w_pdfjs_require__(32);module.exports=function(it){return IObject(defined(it));};/***/},/* 38 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var cof=__w_pdfjs_require__(28);module.exports=Object('z').propertyIsEnumerable(0)?Object:function(it){return cof(it)=='String'?it.split(''):Object(it);};/***/},/* 39 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var toInteger=__w_pdfjs_require__(40);var min=Math.min;module.exports=function(it){return it>0?min(toInteger(it),0x1fffffffffffff):0;};/***/},/* 40 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var ceil=Math.ceil;var floor=Math.floor;module.exports=function(it){return isNaN(it=+it)?0:(it>0?floor:ceil)(it);};/***/},/* 41 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var toInteger=__w_pdfjs_require__(40);var max=Math.max;var min=Math.min;module.exports=function(index,length){index=toInteger(index);return index<0?max(index+length,0):min(index,length);};/***/},/* 42 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var UNSCOPABLES=__w_pdfjs_require__(29)('unscopables');var ArrayProto=Array.prototype;if(ArrayProto[UNSCOPABLES]==undefined)__w_pdfjs_require__(11)(ArrayProto,UNSCOPABLES,{});module.exports=function(key){ArrayProto[UNSCOPABLES][key]=true;};/***/},/* 43 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";__w_pdfjs_require__(44);module.exports=__w_pdfjs_require__(10).Object.assign;/***/},/* 44 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var $export=__w_pdfjs_require__(8);$export($export.S+$export.F,'Object',{assign:__w_pdfjs_require__(45)});/***/},/* 45 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var getKeys=__w_pdfjs_require__(46);var gOPS=__w_pdfjs_require__(50);var pIE=__w_pdfjs_require__(51);var toObject=__w_pdfjs_require__(52);var IObject=__w_pdfjs_require__(38);var $assign=Object.assign;module.exports=!$assign||__w_pdfjs_require__(17)(function(){var A={};var B={};var S=Symbol();var K='abcdefghijklmnopqrst';A[S]=7;K.split('').forEach(function(k){B[k]=k;});return $assign({},A)[S]!=7||Object.keys($assign({},B)).join('')!=K;})?function assign(target,source){var T=toObject(target);var aLen=arguments.length;var index=1;var getSymbols=gOPS.f;var isEnum=pIE.f;while(aLen>index){var S=IObject(arguments[index++]);var keys=getSymbols?getKeys(S).concat(getSymbols(S)):getKeys(S);var length=keys.length;var j=0;var key;while(length>j){if(isEnum.call(S,key=keys[j++]))T[key]=S[key];}}return T;}:$assign;/***/},/* 46 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var $keys=__w_pdfjs_require__(47);var enumBugKeys=__w_pdfjs_require__(49);module.exports=Object.keys||function keys(O){return $keys(O,enumBugKeys);};/***/},/* 47 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var has=__w_pdfjs_require__(22);var toIObject=__w_pdfjs_require__(37);var arrayIndexOf=__w_pdfjs_require__(36)(false);var IE_PROTO=__w_pdfjs_require__(48)('IE_PROTO');module.exports=function(object,names){var O=toIObject(object);var i=0;var result=[];var key;for(key in O){if(key!=IE_PROTO)has(O,key)&&result.push(key);}while(names.length>i){if(has(O,key=names[i++])){~arrayIndexOf(result,key)||result.push(key);}}return result;};/***/},/* 48 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var shared=__w_pdfjs_require__(30)('keys');var uid=__w_pdfjs_require__(23);module.exports=function(key){return shared[key]||(shared[key]=uid(key));};/***/},/* 49 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";module.exports='constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');/***/},/* 50 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";exports.f=Object.getOwnPropertySymbols;/***/},/* 51 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";exports.f={}.propertyIsEnumerable;/***/},/* 52 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var defined=__w_pdfjs_require__(32);module.exports=function(it){return Object(defined(it));};/***/},/* 53 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";__w_pdfjs_require__(54);module.exports=__w_pdfjs_require__(10).Math.log2;/***/},/* 54 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var $export=__w_pdfjs_require__(8);$export($export.S,'Math',{log2:function log2(x){return Math.log(x)/Math.LN2;}});/***/},/* 55 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";__w_pdfjs_require__(56);module.exports=__w_pdfjs_require__(10).Number.isNaN;/***/},/* 56 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var $export=__w_pdfjs_require__(8);$export($export.S,'Number',{isNaN:function isNaN(number){return number!=number;}});/***/},/* 57 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";__w_pdfjs_require__(58);module.exports=__w_pdfjs_require__(10).Number.isInteger;/***/},/* 58 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var $export=__w_pdfjs_require__(8);$export($export.S,'Number',{isInteger:__w_pdfjs_require__(59)});/***/},/* 59 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var isObject=__w_pdfjs_require__(14);var floor=Math.floor;module.exports=function isInteger(it){return!isObject(it)&&isFinite(it)&&floor(it)===it;};/***/},/* 60 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";__w_pdfjs_require__(61);__w_pdfjs_require__(63);__w_pdfjs_require__(73);__w_pdfjs_require__(76);__w_pdfjs_require__(93);__w_pdfjs_require__(94);module.exports=__w_pdfjs_require__(10).Promise;/***/},/* 61 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var classof=__w_pdfjs_require__(62);var test={};test[__w_pdfjs_require__(29)('toStringTag')]='z';if(test+''!='[object z]'){__w_pdfjs_require__(21)(Object.prototype,'toString',function toString(){return'[object '+classof(this)+']';},true);}/***/},/* 62 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var cof=__w_pdfjs_require__(28);var TAG=__w_pdfjs_require__(29)('toStringTag');var ARG=cof(function(){return arguments;}())=='Arguments';var tryGet=function tryGet(it,key){try{return it[key];}catch(e){}};module.exports=function(it){var O,T,B;return it===undefined?'Undefined':it===null?'Null':typeof(T=tryGet(O=Object(it),TAG))=='string'?T:ARG?cof(O):(B=cof(O))=='Object'&&typeof O.callee=='function'?'Arguments':B;};/***/},/* 63 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var $at=__w_pdfjs_require__(64)(true);__w_pdfjs_require__(65)(String,'String',function(iterated){this._t=String(iterated);this._i=0;},function(){var O=this._t;var index=this._i;var point;if(index>=O.length)return{value:undefined,done:true};point=$at(O,index);this._i+=point.length;return{value:point,done:false};});/***/},/* 64 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var toInteger=__w_pdfjs_require__(40);var defined=__w_pdfjs_require__(32);module.exports=function(TO_STRING){return function(that,pos){var s=String(defined(that));var i=toInteger(pos);var l=s.length;var a,b;if(i<0||i>=l)return TO_STRING?'':undefined;a=s.charCodeAt(i);return a<0xd800||a>0xdbff||i+1===l||(b=s.charCodeAt(i+1))<0xdc00||b>0xdfff?TO_STRING?s.charAt(i):a:TO_STRING?s.slice(i,i+2):(a-0xd800<<10)+(b-0xdc00)+0x10000;};};/***/},/* 65 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var LIBRARY=__w_pdfjs_require__(31);var $export=__w_pdfjs_require__(8);var redefine=__w_pdfjs_require__(21);var hide=__w_pdfjs_require__(11);var Iterators=__w_pdfjs_require__(66);var $iterCreate=__w_pdfjs_require__(67);var setToStringTag=__w_pdfjs_require__(71);var getPrototypeOf=__w_pdfjs_require__(72);var ITERATOR=__w_pdfjs_require__(29)('iterator');var BUGGY=!([].keys&&'next'in[].keys());var FF_ITERATOR='@@iterator';var KEYS='keys';var VALUES='values';var returnThis=function returnThis(){return this;};module.exports=function(Base,NAME,Constructor,next,DEFAULT,IS_SET,FORCED){$iterCreate(Constructor,NAME,next);var getMethod=function getMethod(kind){if(!BUGGY&&kind in proto)return proto[kind];switch(kind){case KEYS:return function keys(){return new Constructor(this,kind);};case VALUES:return function values(){return new Constructor(this,kind);};}return function entries(){return new Constructor(this,kind);};};var TAG=NAME+' Iterator';var DEF_VALUES=DEFAULT==VALUES;var VALUES_BUG=false;var proto=Base.prototype;var $native=proto[ITERATOR]||proto[FF_ITERATOR]||DEFAULT&&proto[DEFAULT];var $default=$native||getMethod(DEFAULT);var $entries=DEFAULT?!DEF_VALUES?$default:getMethod('entries'):undefined;var $anyNative=NAME=='Array'?proto.entries||$native:$native;var methods,key,IteratorPrototype;if($anyNative){IteratorPrototype=getPrototypeOf($anyNative.call(new Base()));if(IteratorPrototype!==Object.prototype&&IteratorPrototype.next){setToStringTag(IteratorPrototype,TAG,true);if(!LIBRARY&&typeof IteratorPrototype[ITERATOR]!='function')hide(IteratorPrototype,ITERATOR,returnThis);}}if(DEF_VALUES&&$native&&$native.name!==VALUES){VALUES_BUG=true;$default=function values(){return $native.call(this);};}if((!LIBRARY||FORCED)&&(BUGGY||VALUES_BUG||!proto[ITERATOR])){hide(proto,ITERATOR,$default);}Iterators[NAME]=$default;Iterators[TAG]=returnThis;if(DEFAULT){methods={values:DEF_VALUES?$default:getMethod(VALUES),keys:IS_SET?$default:getMethod(KEYS),entries:$entries};if(FORCED)for(key in methods){if(!(key in proto))redefine(proto,key,methods[key]);}else $export($export.P+$export.F*(BUGGY||VALUES_BUG),NAME,methods);}return methods;};/***/},/* 66 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";module.exports={};/***/},/* 67 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var create=__w_pdfjs_require__(68);var descriptor=__w_pdfjs_require__(20);var setToStringTag=__w_pdfjs_require__(71);var IteratorPrototype={};__w_pdfjs_require__(11)(IteratorPrototype,__w_pdfjs_require__(29)('iterator'),function(){return this;});module.exports=function(Constructor,NAME,next){Constructor.prototype=create(IteratorPrototype,{next:descriptor(1,next)});setToStringTag(Constructor,NAME+' Iterator');};/***/},/* 68 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var anObject=__w_pdfjs_require__(13);var dPs=__w_pdfjs_require__(69);var enumBugKeys=__w_pdfjs_require__(49);var IE_PROTO=__w_pdfjs_require__(48)('IE_PROTO');var Empty=function Empty(){};var PROTOTYPE='prototype';var _createDict=function createDict(){var iframe=__w_pdfjs_require__(18)('iframe');var i=enumBugKeys.length;var lt='<';var gt='>';var iframeDocument;iframe.style.display='none';__w_pdfjs_require__(70).appendChild(iframe);iframe.src='javascript:';iframeDocument=iframe.contentWindow.document;iframeDocument.open();iframeDocument.write(lt+'script'+gt+'document.F=Object'+lt+'/script'+gt);iframeDocument.close();_createDict=iframeDocument.F;while(i--){delete _createDict[PROTOTYPE][enumBugKeys[i]];}return _createDict();};module.exports=Object.create||function create(O,Properties){var result;if(O!==null){Empty[PROTOTYPE]=anObject(O);result=new Empty();Empty[PROTOTYPE]=null;result[IE_PROTO]=O;}else result=_createDict();return Properties===undefined?result:dPs(result,Properties);};/***/},/* 69 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var dP=__w_pdfjs_require__(12);var anObject=__w_pdfjs_require__(13);var getKeys=__w_pdfjs_require__(46);module.exports=__w_pdfjs_require__(16)?Object.defineProperties:function defineProperties(O,Properties){anObject(O);var keys=getKeys(Properties);var length=keys.length;var i=0;var P;while(length>i){dP.f(O,P=keys[i++],Properties[P]);}return O;};/***/},/* 70 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var document=__w_pdfjs_require__(9).document;module.exports=document&&document.documentElement;/***/},/* 71 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var def=__w_pdfjs_require__(12).f;var has=__w_pdfjs_require__(22);var TAG=__w_pdfjs_require__(29)('toStringTag');module.exports=function(it,tag,stat){if(it&&!has(it=stat?it:it.prototype,TAG))def(it,TAG,{configurable:true,value:tag});};/***/},/* 72 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var has=__w_pdfjs_require__(22);var toObject=__w_pdfjs_require__(52);var IE_PROTO=__w_pdfjs_require__(48)('IE_PROTO');var ObjectProto=Object.prototype;module.exports=Object.getPrototypeOf||function(O){O=toObject(O);if(has(O,IE_PROTO))return O[IE_PROTO];if(typeof O.constructor=='function'&&O instanceof O.constructor){return O.constructor.prototype;}return O instanceof Object?ObjectProto:null;};/***/},/* 73 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var $iterators=__w_pdfjs_require__(74);var getKeys=__w_pdfjs_require__(46);var redefine=__w_pdfjs_require__(21);var global=__w_pdfjs_require__(9);var hide=__w_pdfjs_require__(11);var Iterators=__w_pdfjs_require__(66);var wks=__w_pdfjs_require__(29);var ITERATOR=wks('iterator');var TO_STRING_TAG=wks('toStringTag');var ArrayValues=Iterators.Array;var DOMIterables={CSSRuleList:true,CSSStyleDeclaration:false,CSSValueList:false,ClientRectList:false,DOMRectList:false,DOMStringList:false,DOMTokenList:true,DataTransferItemList:false,FileList:false,HTMLAllCollection:false,HTMLCollection:false,HTMLFormElement:false,HTMLSelectElement:false,MediaList:true,MimeTypeArray:false,NamedNodeMap:false,NodeList:true,PaintRequestList:false,Plugin:false,PluginArray:false,SVGLengthList:false,SVGNumberList:false,SVGPathSegList:false,SVGPointList:false,SVGStringList:false,SVGTransformList:false,SourceBufferList:false,StyleSheetList:true,TextTrackCueList:false,TextTrackList:false,TouchList:false};for(var collections=getKeys(DOMIterables),i=0;i<collections.length;i++){var NAME=collections[i];var explicit=DOMIterables[NAME];var Collection=global[NAME];var proto=Collection&&Collection.prototype;var key;if(proto){if(!proto[ITERATOR])hide(proto,ITERATOR,ArrayValues);if(!proto[TO_STRING_TAG])hide(proto,TO_STRING_TAG,NAME);Iterators[NAME]=ArrayValues;if(explicit)for(key in $iterators){if(!proto[key])redefine(proto,key,$iterators[key],true);}}}/***/},/* 74 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var addToUnscopables=__w_pdfjs_require__(42);var step=__w_pdfjs_require__(75);var Iterators=__w_pdfjs_require__(66);var toIObject=__w_pdfjs_require__(37);module.exports=__w_pdfjs_require__(65)(Array,'Array',function(iterated,kind){this._t=toIObject(iterated);this._i=0;this._k=kind;},function(){var O=this._t;var kind=this._k;var index=this._i++;if(!O||index>=O.length){this._t=undefined;return step(1);}if(kind=='keys')return step(0,index);if(kind=='values')return step(0,O[index]);return step(0,[index,O[index]]);},'values');Iterators.Arguments=Iterators.Array;addToUnscopables('keys');addToUnscopables('values');addToUnscopables('entries');/***/},/* 75 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";module.exports=function(done,value){return{value:value,done:!!done};};/***/},/* 76 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var LIBRARY=__w_pdfjs_require__(31);var global=__w_pdfjs_require__(9);var ctx=__w_pdfjs_require__(24);var classof=__w_pdfjs_require__(62);var $export=__w_pdfjs_require__(8);var isObject=__w_pdfjs_require__(14);var aFunction=__w_pdfjs_require__(25);var anInstance=__w_pdfjs_require__(77);var forOf=__w_pdfjs_require__(78);var speciesConstructor=__w_pdfjs_require__(82);var task=__w_pdfjs_require__(83).set;var microtask=__w_pdfjs_require__(85)();var newPromiseCapabilityModule=__w_pdfjs_require__(86);var perform=__w_pdfjs_require__(87);var userAgent=__w_pdfjs_require__(88);var promiseResolve=__w_pdfjs_require__(89);var PROMISE='Promise';var TypeError=global.TypeError;var process=global.process;var versions=process&&process.versions;var v8=versions&&versions.v8||'';var $Promise=global[PROMISE];var isNode=classof(process)=='process';var empty=function empty(){};var Internal,newGenericPromiseCapability,OwnPromiseCapability,Wrapper;var newPromiseCapability=newGenericPromiseCapability=newPromiseCapabilityModule.f;var USE_NATIVE=!!function(){try{var promise=$Promise.resolve(1);var FakePromise=(promise.constructor={})[__w_pdfjs_require__(29)('species')]=function(exec){exec(empty,empty);};return(isNode||typeof PromiseRejectionEvent=='function')&&promise.then(empty)instanceof FakePromise&&v8.indexOf('6.6')!==0&&userAgent.indexOf('Chrome/66')===-1;}catch(e){}}();var isThenable=function isThenable(it){var then;return isObject(it)&&typeof(then=it.then)=='function'?then:false;};var notify=function notify(promise,isReject){if(promise._n)return;promise._n=true;var chain=promise._c;microtask(function(){var value=promise._v;var ok=promise._s==1;var i=0;var run=function run(reaction){var handler=ok?reaction.ok:reaction.fail;var resolve=reaction.resolve;var reject=reaction.reject;var domain=reaction.domain;var result,then,exited;try{if(handler){if(!ok){if(promise._h==2)onHandleUnhandled(promise);promise._h=1;}if(handler===true)result=value;else{if(domain)domain.enter();result=handler(value);if(domain){domain.exit();exited=true;}}if(result===reaction.promise){reject(TypeError('Promise-chain cycle'));}else if(then=isThenable(result)){then.call(result,resolve,reject);}else resolve(result);}else reject(value);}catch(e){if(domain&&!exited)domain.exit();reject(e);}};while(chain.length>i){run(chain[i++]);}promise._c=[];promise._n=false;if(isReject&&!promise._h)onUnhandled(promise);});};var onUnhandled=function onUnhandled(promise){task.call(global,function(){var value=promise._v;var unhandled=isUnhandled(promise);var result,handler,console;if(unhandled){result=perform(function(){if(isNode){process.emit('unhandledRejection',value,promise);}else if(handler=global.onunhandledrejection){handler({promise:promise,reason:value});}else if((console=global.console)&&console.error){console.error('Unhandled promise rejection',value);}});promise._h=isNode||isUnhandled(promise)?2:1;}promise._a=undefined;if(unhandled&&result.e)throw result.v;});};var isUnhandled=function isUnhandled(promise){return promise._h!==1&&(promise._a||promise._c).length===0;};var onHandleUnhandled=function onHandleUnhandled(promise){task.call(global,function(){var handler;if(isNode){process.emit('rejectionHandled',promise);}else if(handler=global.onrejectionhandled){handler({promise:promise,reason:promise._v});}});};var $reject=function $reject(value){var promise=this;if(promise._d)return;promise._d=true;promise=promise._w||promise;promise._v=value;promise._s=2;if(!promise._a)promise._a=promise._c.slice();notify(promise,true);};var $resolve=function $resolve(value){var promise=this;var then;if(promise._d)return;promise._d=true;promise=promise._w||promise;try{if(promise===value)throw TypeError("Promise can't be resolved itself");if(then=isThenable(value)){microtask(function(){var wrapper={_w:promise,_d:false};try{then.call(value,ctx($resolve,wrapper,1),ctx($reject,wrapper,1));}catch(e){$reject.call(wrapper,e);}});}else{promise._v=value;promise._s=1;notify(promise,false);}}catch(e){$reject.call({_w:promise,_d:false},e);}};if(!USE_NATIVE){$Promise=function Promise(executor){anInstance(this,$Promise,PROMISE,'_h');aFunction(executor);Internal.call(this);try{executor(ctx($resolve,this,1),ctx($reject,this,1));}catch(err){$reject.call(this,err);}};Internal=function Promise(executor){this._c=[];this._a=undefined;this._s=0;this._d=false;this._v=undefined;this._h=0;this._n=false;};Internal.prototype=__w_pdfjs_require__(90)($Promise.prototype,{then:function then(onFulfilled,onRejected){var reaction=newPromiseCapability(speciesConstructor(this,$Promise));reaction.ok=typeof onFulfilled=='function'?onFulfilled:true;reaction.fail=typeof onRejected=='function'&&onRejected;reaction.domain=isNode?process.domain:undefined;this._c.push(reaction);if(this._a)this._a.push(reaction);if(this._s)notify(this,false);return reaction.promise;},'catch':function _catch(onRejected){return this.then(undefined,onRejected);}});OwnPromiseCapability=function OwnPromiseCapability(){var promise=new Internal();this.promise=promise;this.resolve=ctx($resolve,promise,1);this.reject=ctx($reject,promise,1);};newPromiseCapabilityModule.f=newPromiseCapability=function newPromiseCapability(C){return C===$Promise||C===Wrapper?new OwnPromiseCapability(C):newGenericPromiseCapability(C);};}$export($export.G+$export.W+$export.F*!USE_NATIVE,{Promise:$Promise});__w_pdfjs_require__(71)($Promise,PROMISE);__w_pdfjs_require__(91)(PROMISE);Wrapper=__w_pdfjs_require__(10)[PROMISE];$export($export.S+$export.F*!USE_NATIVE,PROMISE,{reject:function reject(r){var capability=newPromiseCapability(this);var $$reject=capability.reject;$$reject(r);return capability.promise;}});$export($export.S+$export.F*(LIBRARY||!USE_NATIVE),PROMISE,{resolve:function resolve(x){return promiseResolve(LIBRARY&&this===Wrapper?$Promise:this,x);}});$export($export.S+$export.F*!(USE_NATIVE&&__w_pdfjs_require__(92)(function(iter){$Promise.all(iter)['catch'](empty);})),PROMISE,{all:function all(iterable){var C=this;var capability=newPromiseCapability(C);var resolve=capability.resolve;var reject=capability.reject;var result=perform(function(){var values=[];var index=0;var remaining=1;forOf(iterable,false,function(promise){var $index=index++;var alreadyCalled=false;values.push(undefined);remaining++;C.resolve(promise).then(function(value){if(alreadyCalled)return;alreadyCalled=true;values[$index]=value;--remaining||resolve(values);},reject);});--remaining||resolve(values);});if(result.e)reject(result.v);return capability.promise;},race:function race(iterable){var C=this;var capability=newPromiseCapability(C);var reject=capability.reject;var result=perform(function(){forOf(iterable,false,function(promise){C.resolve(promise).then(capability.resolve,reject);});});if(result.e)reject(result.v);return capability.promise;}});/***/},/* 77 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";module.exports=function(it,Constructor,name,forbiddenField){if(!(it instanceof Constructor)||forbiddenField!==undefined&&forbiddenField in it){throw TypeError(name+': incorrect invocation!');}return it;};/***/},/* 78 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var ctx=__w_pdfjs_require__(24);var call=__w_pdfjs_require__(79);var isArrayIter=__w_pdfjs_require__(80);var anObject=__w_pdfjs_require__(13);var toLength=__w_pdfjs_require__(39);var getIterFn=__w_pdfjs_require__(81);var BREAK={};var RETURN={};var _exports=module.exports=function(iterable,entries,fn,that,ITERATOR){var iterFn=ITERATOR?function(){return iterable;}:getIterFn(iterable);var f=ctx(fn,that,entries?2:1);var index=0;var length,step,iterator,result;if(typeof iterFn!='function')throw TypeError(iterable+' is not iterable!');if(isArrayIter(iterFn))for(length=toLength(iterable.length);length>index;index++){result=entries?f(anObject(step=iterable[index])[0],step[1]):f(iterable[index]);if(result===BREAK||result===RETURN)return result;}else for(iterator=iterFn.call(iterable);!(step=iterator.next()).done;){result=call(iterator,f,step.value,entries);if(result===BREAK||result===RETURN)return result;}};_exports.BREAK=BREAK;_exports.RETURN=RETURN;/***/},/* 79 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var anObject=__w_pdfjs_require__(13);module.exports=function(iterator,fn,value,entries){try{return entries?fn(anObject(value)[0],value[1]):fn(value);}catch(e){var ret=iterator['return'];if(ret!==undefined)anObject(ret.call(iterator));throw e;}};/***/},/* 80 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var Iterators=__w_pdfjs_require__(66);var ITERATOR=__w_pdfjs_require__(29)('iterator');var ArrayProto=Array.prototype;module.exports=function(it){return it!==undefined&&(Iterators.Array===it||ArrayProto[ITERATOR]===it);};/***/},/* 81 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var classof=__w_pdfjs_require__(62);var ITERATOR=__w_pdfjs_require__(29)('iterator');var Iterators=__w_pdfjs_require__(66);module.exports=__w_pdfjs_require__(10).getIteratorMethod=function(it){if(it!=undefined)return it[ITERATOR]||it['@@iterator']||Iterators[classof(it)];};/***/},/* 82 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var anObject=__w_pdfjs_require__(13);var aFunction=__w_pdfjs_require__(25);var SPECIES=__w_pdfjs_require__(29)('species');module.exports=function(O,D){var C=anObject(O).constructor;var S;return C===undefined||(S=anObject(C)[SPECIES])==undefined?D:aFunction(S);};/***/},/* 83 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var ctx=__w_pdfjs_require__(24);var invoke=__w_pdfjs_require__(84);var html=__w_pdfjs_require__(70);var cel=__w_pdfjs_require__(18);var global=__w_pdfjs_require__(9);var process=global.process;var setTask=global.setImmediate;var clearTask=global.clearImmediate;var MessageChannel=global.MessageChannel;var Dispatch=global.Dispatch;var counter=0;var queue={};var ONREADYSTATECHANGE='onreadystatechange';var defer,channel,port;var run=function run(){var id=+this;if(queue.hasOwnProperty(id)){var fn=queue[id];delete queue[id];fn();}};var listener=function listener(event){run.call(event.data);};if(!setTask||!clearTask){setTask=function setImmediate(fn){var args=[];var i=1;while(arguments.length>i){args.push(arguments[i++]);}queue[++counter]=function(){invoke(typeof fn=='function'?fn:Function(fn),args);};defer(counter);return counter;};clearTask=function clearImmediate(id){delete queue[id];};if(__w_pdfjs_require__(28)(process)=='process'){defer=function defer(id){process.nextTick(ctx(run,id,1));};}else if(Dispatch&&Dispatch.now){defer=function defer(id){Dispatch.now(ctx(run,id,1));};}else if(MessageChannel){channel=new MessageChannel();port=channel.port2;channel.port1.onmessage=listener;defer=ctx(port.postMessage,port,1);}else if(global.addEventListener&&typeof postMessage=='function'&&!global.importScripts){defer=function defer(id){global.postMessage(id+'','*');};global.addEventListener('message',listener,false);}else if(ONREADYSTATECHANGE in cel('script')){defer=function defer(id){html.appendChild(cel('script'))[ONREADYSTATECHANGE]=function(){html.removeChild(this);run.call(id);};};}else{defer=function defer(id){setTimeout(ctx(run,id,1),0);};}}module.exports={set:setTask,clear:clearTask};/***/},/* 84 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";module.exports=function(fn,args,that){var un=that===undefined;switch(args.length){case 0:return un?fn():fn.call(that);case 1:return un?fn(args[0]):fn.call(that,args[0]);case 2:return un?fn(args[0],args[1]):fn.call(that,args[0],args[1]);case 3:return un?fn(args[0],args[1],args[2]):fn.call(that,args[0],args[1],args[2]);case 4:return un?fn(args[0],args[1],args[2],args[3]):fn.call(that,args[0],args[1],args[2],args[3]);}return fn.apply(that,args);};/***/},/* 85 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var global=__w_pdfjs_require__(9);var macrotask=__w_pdfjs_require__(83).set;var Observer=global.MutationObserver||global.WebKitMutationObserver;var process=global.process;var Promise=global.Promise;var isNode=__w_pdfjs_require__(28)(process)=='process';module.exports=function(){var head,last,notify;var flush=function flush(){var parent,fn;if(isNode&&(parent=process.domain))parent.exit();while(head){fn=head.fn;head=head.next;try{fn();}catch(e){if(head)notify();else last=undefined;throw e;}}last=undefined;if(parent)parent.enter();};if(isNode){notify=function notify(){process.nextTick(flush);};}else if(Observer&&!(global.navigator&&global.navigator.standalone)){var toggle=true;var node=document.createTextNode('');new Observer(flush).observe(node,{characterData:true});notify=function notify(){node.data=toggle=!toggle;};}else if(Promise&&Promise.resolve){var promise=Promise.resolve(undefined);notify=function notify(){promise.then(flush);};}else{notify=function notify(){macrotask.call(global,flush);};}return function(fn){var task={fn:fn,next:undefined};if(last)last.next=task;if(!head){head=task;notify();}last=task;};};/***/},/* 86 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var aFunction=__w_pdfjs_require__(25);function PromiseCapability(C){var resolve,reject;this.promise=new C(function($$resolve,$$reject){if(resolve!==undefined||reject!==undefined)throw TypeError('Bad Promise constructor');resolve=$$resolve;reject=$$reject;});this.resolve=aFunction(resolve);this.reject=aFunction(reject);}module.exports.f=function(C){return new PromiseCapability(C);};/***/},/* 87 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";module.exports=function(exec){try{return{e:false,v:exec()};}catch(e){return{e:true,v:e};}};/***/},/* 88 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var global=__w_pdfjs_require__(9);var navigator=global.navigator;module.exports=navigator&&navigator.userAgent||'';/***/},/* 89 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var anObject=__w_pdfjs_require__(13);var isObject=__w_pdfjs_require__(14);var newPromiseCapability=__w_pdfjs_require__(86);module.exports=function(C,x){anObject(C);if(isObject(x)&&x.constructor===C)return x;var promiseCapability=newPromiseCapability.f(C);var resolve=promiseCapability.resolve;resolve(x);return promiseCapability.promise;};/***/},/* 90 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var redefine=__w_pdfjs_require__(21);module.exports=function(target,src,safe){for(var key in src){redefine(target,key,src[key],safe);}return target;};/***/},/* 91 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var global=__w_pdfjs_require__(9);var dP=__w_pdfjs_require__(12);var DESCRIPTORS=__w_pdfjs_require__(16);var SPECIES=__w_pdfjs_require__(29)('species');module.exports=function(KEY){var C=global[KEY];if(DESCRIPTORS&&C&&!C[SPECIES])dP.f(C,SPECIES,{configurable:true,get:function get(){return this;}});};/***/},/* 92 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var ITERATOR=__w_pdfjs_require__(29)('iterator');var SAFE_CLOSING=false;try{var riter=[7][ITERATOR]();riter['return']=function(){SAFE_CLOSING=true;};Array.from(riter,function(){throw 2;});}catch(e){}module.exports=function(exec,skipClosing){if(!skipClosing&&!SAFE_CLOSING)return false;var safe=false;try{var arr=[7];var iter=arr[ITERATOR]();iter.next=function(){return{done:safe=true};};arr[ITERATOR]=function(){return iter;};exec(arr);}catch(e){}return safe;};/***/},/* 93 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var $export=__w_pdfjs_require__(8);var core=__w_pdfjs_require__(10);var global=__w_pdfjs_require__(9);var speciesConstructor=__w_pdfjs_require__(82);var promiseResolve=__w_pdfjs_require__(89);$export($export.P+$export.R,'Promise',{'finally':function _finally(onFinally){var C=speciesConstructor(this,core.Promise||global.Promise);var isFunction=typeof onFinally=='function';return this.then(isFunction?function(x){return promiseResolve(C,onFinally()).then(function(){return x;});}:onFinally,isFunction?function(e){return promiseResolve(C,onFinally()).then(function(){throw e;});}:onFinally);}});/***/},/* 94 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var $export=__w_pdfjs_require__(8);var newPromiseCapability=__w_pdfjs_require__(86);var perform=__w_pdfjs_require__(87);$export($export.S,'Promise',{'try':function _try(callbackfn){var promiseCapability=newPromiseCapability.f(this);var result=perform(callbackfn);(result.e?promiseCapability.reject:promiseCapability.resolve)(result.v);return promiseCapability.promise;}});/***/},/* 95 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";__w_pdfjs_require__(61);__w_pdfjs_require__(73);__w_pdfjs_require__(96);__w_pdfjs_require__(108);__w_pdfjs_require__(110);module.exports=__w_pdfjs_require__(10).WeakMap;/***/},/* 96 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var each=__w_pdfjs_require__(97)(0);var redefine=__w_pdfjs_require__(21);var meta=__w_pdfjs_require__(101);var assign=__w_pdfjs_require__(45);var weak=__w_pdfjs_require__(102);var isObject=__w_pdfjs_require__(14);var fails=__w_pdfjs_require__(17);var validate=__w_pdfjs_require__(103);var WEAK_MAP='WeakMap';var getWeak=meta.getWeak;var isExtensible=Object.isExtensible;var uncaughtFrozenStore=weak.ufstore;var tmp={};var InternalMap;var wrapper=function wrapper(get){return function WeakMap(){return get(this,arguments.length>0?arguments[0]:undefined);};};var methods={get:function get(key){if(isObject(key)){var data=getWeak(key);if(data===true)return uncaughtFrozenStore(validate(this,WEAK_MAP)).get(key);return data?data[this._i]:undefined;}},set:function set(key,value){return weak.def(validate(this,WEAK_MAP),key,value);}};var $WeakMap=module.exports=__w_pdfjs_require__(104)(WEAK_MAP,wrapper,methods,weak,true,true);if(fails(function(){return new $WeakMap().set((Object.freeze||Object)(tmp),7).get(tmp)!=7;})){InternalMap=weak.getConstructor(wrapper,WEAK_MAP);assign(InternalMap.prototype,methods);meta.NEED=true;each(['delete','has','get','set'],function(key){var proto=$WeakMap.prototype;var method=proto[key];redefine(proto,key,function(a,b){if(isObject(a)&&!isExtensible(a)){if(!this._f)this._f=new InternalMap();var result=this._f[key](a,b);return key=='set'?this:result;}return method.call(this,a,b);});});}/***/},/* 97 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var ctx=__w_pdfjs_require__(24);var IObject=__w_pdfjs_require__(38);var toObject=__w_pdfjs_require__(52);var toLength=__w_pdfjs_require__(39);var asc=__w_pdfjs_require__(98);module.exports=function(TYPE,$create){var IS_MAP=TYPE==1;var IS_FILTER=TYPE==2;var IS_SOME=TYPE==3;var IS_EVERY=TYPE==4;var IS_FIND_INDEX=TYPE==6;var NO_HOLES=TYPE==5||IS_FIND_INDEX;var create=$create||asc;return function($this,callbackfn,that){var O=toObject($this);var self=IObject(O);var f=ctx(callbackfn,that,3);var length=toLength(self.length);var index=0;var result=IS_MAP?create($this,length):IS_FILTER?create($this,0):undefined;var val,res;for(;length>index;index++){if(NO_HOLES||index in self){val=self[index];res=f(val,index,O);if(TYPE){if(IS_MAP)result[index]=res;else if(res)switch(TYPE){case 3:return true;case 5:return val;case 6:return index;case 2:result.push(val);}else if(IS_EVERY)return false;}}}return IS_FIND_INDEX?-1:IS_SOME||IS_EVERY?IS_EVERY:result;};};/***/},/* 98 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var speciesConstructor=__w_pdfjs_require__(99);module.exports=function(original,length){return new(speciesConstructor(original))(length);};/***/},/* 99 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var isObject=__w_pdfjs_require__(14);var isArray=__w_pdfjs_require__(100);var SPECIES=__w_pdfjs_require__(29)('species');module.exports=function(original){var C;if(isArray(original)){C=original.constructor;if(typeof C=='function'&&(C===Array||isArray(C.prototype)))C=undefined;if(isObject(C)){C=C[SPECIES];if(C===null)C=undefined;}}return C===undefined?Array:C;};/***/},/* 100 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var cof=__w_pdfjs_require__(28);module.exports=Array.isArray||function isArray(arg){return cof(arg)=='Array';};/***/},/* 101 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var _typeof=typeof Symbol==="function"&&_typeof3(Symbol.iterator)==="symbol"?function(obj){return _typeof3(obj);}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":_typeof3(obj);};var META=__w_pdfjs_require__(23)('meta');var isObject=__w_pdfjs_require__(14);var has=__w_pdfjs_require__(22);var setDesc=__w_pdfjs_require__(12).f;var id=0;var isExtensible=Object.isExtensible||function(){return true;};var FREEZE=!__w_pdfjs_require__(17)(function(){return isExtensible(Object.preventExtensions({}));});var setMeta=function setMeta(it){setDesc(it,META,{value:{i:'O'+ ++id,w:{}}});};var fastKey=function fastKey(it,create){if(!isObject(it))return(typeof it==='undefined'?'undefined':_typeof(it))=='symbol'?it:(typeof it=='string'?'S':'P')+it;if(!has(it,META)){if(!isExtensible(it))return'F';if(!create)return'E';setMeta(it);}return it[META].i;};var getWeak=function getWeak(it,create){if(!has(it,META)){if(!isExtensible(it))return true;if(!create)return false;setMeta(it);}return it[META].w;};var onFreeze=function onFreeze(it){if(FREEZE&&meta.NEED&&isExtensible(it)&&!has(it,META))setMeta(it);return it;};var meta=module.exports={KEY:META,NEED:false,fastKey:fastKey,getWeak:getWeak,onFreeze:onFreeze};/***/},/* 102 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var redefineAll=__w_pdfjs_require__(90);var getWeak=__w_pdfjs_require__(101).getWeak;var anObject=__w_pdfjs_require__(13);var isObject=__w_pdfjs_require__(14);var anInstance=__w_pdfjs_require__(77);var forOf=__w_pdfjs_require__(78);var createArrayMethod=__w_pdfjs_require__(97);var $has=__w_pdfjs_require__(22);var validate=__w_pdfjs_require__(103);var arrayFind=createArrayMethod(5);var arrayFindIndex=createArrayMethod(6);var id=0;var uncaughtFrozenStore=function uncaughtFrozenStore(that){return that._l||(that._l=new UncaughtFrozenStore());};var UncaughtFrozenStore=function UncaughtFrozenStore(){this.a=[];};var findUncaughtFrozen=function findUncaughtFrozen(store,key){return arrayFind(store.a,function(it){return it[0]===key;});};UncaughtFrozenStore.prototype={get:function get(key){var entry=findUncaughtFrozen(this,key);if(entry)return entry[1];},has:function has(key){return!!findUncaughtFrozen(this,key);},set:function set(key,value){var entry=findUncaughtFrozen(this,key);if(entry)entry[1]=value;else this.a.push([key,value]);},'delete':function _delete(key){var index=arrayFindIndex(this.a,function(it){return it[0]===key;});if(~index)this.a.splice(index,1);return!!~index;}};module.exports={getConstructor:function getConstructor(wrapper,NAME,IS_MAP,ADDER){var C=wrapper(function(that,iterable){anInstance(that,C,NAME,'_i');that._t=NAME;that._i=id++;that._l=undefined;if(iterable!=undefined)forOf(iterable,IS_MAP,that[ADDER],that);});redefineAll(C.prototype,{'delete':function _delete(key){if(!isObject(key))return false;var data=getWeak(key);if(data===true)return uncaughtFrozenStore(validate(this,NAME))['delete'](key);return data&&$has(data,this._i)&&delete data[this._i];},has:function has(key){if(!isObject(key))return false;var data=getWeak(key);if(data===true)return uncaughtFrozenStore(validate(this,NAME)).has(key);return data&&$has(data,this._i);}});return C;},def:function def(that,key,value){var data=getWeak(anObject(key),true);if(data===true)uncaughtFrozenStore(that).set(key,value);else data[that._i]=value;return that;},ufstore:uncaughtFrozenStore};/***/},/* 103 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var isObject=__w_pdfjs_require__(14);module.exports=function(it,TYPE){if(!isObject(it)||it._t!==TYPE)throw TypeError('Incompatible receiver, '+TYPE+' required!');return it;};/***/},/* 104 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var global=__w_pdfjs_require__(9);var $export=__w_pdfjs_require__(8);var redefine=__w_pdfjs_require__(21);var redefineAll=__w_pdfjs_require__(90);var meta=__w_pdfjs_require__(101);var forOf=__w_pdfjs_require__(78);var anInstance=__w_pdfjs_require__(77);var isObject=__w_pdfjs_require__(14);var fails=__w_pdfjs_require__(17);var $iterDetect=__w_pdfjs_require__(92);var setToStringTag=__w_pdfjs_require__(71);var inheritIfRequired=__w_pdfjs_require__(105);module.exports=function(NAME,wrapper,methods,common,IS_MAP,IS_WEAK){var Base=global[NAME];var C=Base;var ADDER=IS_MAP?'set':'add';var proto=C&&C.prototype;var O={};var fixMethod=function fixMethod(KEY){var fn=proto[KEY];redefine(proto,KEY,KEY=='delete'?function(a){return IS_WEAK&&!isObject(a)?false:fn.call(this,a===0?0:a);}:KEY=='has'?function has(a){return IS_WEAK&&!isObject(a)?false:fn.call(this,a===0?0:a);}:KEY=='get'?function get(a){return IS_WEAK&&!isObject(a)?undefined:fn.call(this,a===0?0:a);}:KEY=='add'?function add(a){fn.call(this,a===0?0:a);return this;}:function set(a,b){fn.call(this,a===0?0:a,b);return this;});};if(typeof C!='function'||!(IS_WEAK||proto.forEach&&!fails(function(){new C().entries().next();}))){C=common.getConstructor(wrapper,NAME,IS_MAP,ADDER);redefineAll(C.prototype,methods);meta.NEED=true;}else{var instance=new C();var HASNT_CHAINING=instance[ADDER](IS_WEAK?{}:-0,1)!=instance;var THROWS_ON_PRIMITIVES=fails(function(){instance.has(1);});var ACCEPT_ITERABLES=$iterDetect(function(iter){new C(iter);});var BUGGY_ZERO=!IS_WEAK&&fails(function(){var $instance=new C();var index=5;while(index--){$instance[ADDER](index,index);}return!$instance.has(-0);});if(!ACCEPT_ITERABLES){C=wrapper(function(target,iterable){anInstance(target,C,NAME);var that=inheritIfRequired(new Base(),target,C);if(iterable!=undefined)forOf(iterable,IS_MAP,that[ADDER],that);return that;});C.prototype=proto;proto.constructor=C;}if(THROWS_ON_PRIMITIVES||BUGGY_ZERO){fixMethod('delete');fixMethod('has');IS_MAP&&fixMethod('get');}if(BUGGY_ZERO||HASNT_CHAINING)fixMethod(ADDER);if(IS_WEAK&&proto.clear)delete proto.clear;}setToStringTag(C,NAME);O[NAME]=C;$export($export.G+$export.W+$export.F*(C!=Base),O);if(!IS_WEAK)common.setStrong(C,NAME,IS_MAP);return C;};/***/},/* 105 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var isObject=__w_pdfjs_require__(14);var setPrototypeOf=__w_pdfjs_require__(106).set;module.exports=function(that,target,C){var S=target.constructor;var P;if(S!==C&&typeof S=='function'&&(P=S.prototype)!==C.prototype&&isObject(P)&&setPrototypeOf){setPrototypeOf(that,P);}return that;};/***/},/* 106 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var isObject=__w_pdfjs_require__(14);var anObject=__w_pdfjs_require__(13);var check=function check(O,proto){anObject(O);if(!isObject(proto)&&proto!==null)throw TypeError(proto+": can't set as prototype!");};module.exports={set:Object.setPrototypeOf||('__proto__'in{}?function(test,buggy,set){try{set=__w_pdfjs_require__(24)(Function.call,__w_pdfjs_require__(107).f(Object.prototype,'__proto__').set,2);set(test,[]);buggy=!(test instanceof Array);}catch(e){buggy=true;}return function setPrototypeOf(O,proto){check(O,proto);if(buggy)O.__proto__=proto;else set(O,proto);return O;};}({},false):undefined),check:check};/***/},/* 107 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var pIE=__w_pdfjs_require__(51);var createDesc=__w_pdfjs_require__(20);var toIObject=__w_pdfjs_require__(37);var toPrimitive=__w_pdfjs_require__(19);var has=__w_pdfjs_require__(22);var IE8_DOM_DEFINE=__w_pdfjs_require__(15);var gOPD=Object.getOwnPropertyDescriptor;exports.f=__w_pdfjs_require__(16)?gOPD:function getOwnPropertyDescriptor(O,P){O=toIObject(O);P=toPrimitive(P,true);if(IE8_DOM_DEFINE)try{return gOPD(O,P);}catch(e){}if(has(O,P))return createDesc(!pIE.f.call(O,P),O[P]);};/***/},/* 108 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";__w_pdfjs_require__(109)('WeakMap');/***/},/* 109 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var $export=__w_pdfjs_require__(8);module.exports=function(COLLECTION){$export($export.S,COLLECTION,{of:function of(){var length=arguments.length;var A=new Array(length);while(length--){A[length]=arguments[length];}return new this(A);}});};/***/},/* 110 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";__w_pdfjs_require__(111)('WeakMap');/***/},/* 111 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var $export=__w_pdfjs_require__(8);var aFunction=__w_pdfjs_require__(25);var ctx=__w_pdfjs_require__(24);var forOf=__w_pdfjs_require__(78);module.exports=function(COLLECTION){$export($export.S,COLLECTION,{from:function from(source){var mapFn=arguments[1];var mapping,A,n,cb;aFunction(this);mapping=mapFn!==undefined;if(mapping)aFunction(mapFn);if(source==undefined)return new this();A=[];if(mapping){n=0;cb=ctx(mapFn,arguments[2],2);forOf(source,false,function(nextItem){A.push(cb(nextItem,n++));});}else{forOf(source,false,A.push,A);}return new this(A);}});};/***/},/* 112 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";__w_pdfjs_require__(113);module.exports=__w_pdfjs_require__(10).String.codePointAt;/***/},/* 113 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var $export=__w_pdfjs_require__(8);var $at=__w_pdfjs_require__(64)(false);$export($export.P,'String',{codePointAt:function codePointAt(pos){return $at(this,pos);}});/***/},/* 114 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";__w_pdfjs_require__(115);module.exports=__w_pdfjs_require__(10).String.fromCodePoint;/***/},/* 115 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var $export=__w_pdfjs_require__(8);var toAbsoluteIndex=__w_pdfjs_require__(41);var fromCharCode=String.fromCharCode;var $fromCodePoint=String.fromCodePoint;$export($export.S+$export.F*(!!$fromCodePoint&&$fromCodePoint.length!=1),'String',{fromCodePoint:function fromCodePoint(x){var res=[];var aLen=arguments.length;var i=0;var code;while(aLen>i){code=+arguments[i++];if(toAbsoluteIndex(code,0x10ffff)!==code)throw RangeError(code+' is not a valid code point');res.push(code<0x10000?fromCharCode(code):fromCharCode(((code-=0x10000)>>10)+0xd800,code%0x400+0xdc00));}return res.join('');}});/***/},/* 116 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";__w_pdfjs_require__(117);__w_pdfjs_require__(61);module.exports=__w_pdfjs_require__(10).Symbol;/***/},/* 117 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var _typeof=typeof Symbol==="function"&&_typeof3(Symbol.iterator)==="symbol"?function(obj){return _typeof3(obj);}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":_typeof3(obj);};var global=__w_pdfjs_require__(9);var has=__w_pdfjs_require__(22);var DESCRIPTORS=__w_pdfjs_require__(16);var $export=__w_pdfjs_require__(8);var redefine=__w_pdfjs_require__(21);var META=__w_pdfjs_require__(101).KEY;var $fails=__w_pdfjs_require__(17);var shared=__w_pdfjs_require__(30);var setToStringTag=__w_pdfjs_require__(71);var uid=__w_pdfjs_require__(23);var wks=__w_pdfjs_require__(29);var wksExt=__w_pdfjs_require__(118);var wksDefine=__w_pdfjs_require__(119);var enumKeys=__w_pdfjs_require__(120);var isArray=__w_pdfjs_require__(100);var anObject=__w_pdfjs_require__(13);var isObject=__w_pdfjs_require__(14);var toIObject=__w_pdfjs_require__(37);var toPrimitive=__w_pdfjs_require__(19);var createDesc=__w_pdfjs_require__(20);var _create=__w_pdfjs_require__(68);var gOPNExt=__w_pdfjs_require__(121);var $GOPD=__w_pdfjs_require__(107);var $DP=__w_pdfjs_require__(12);var $keys=__w_pdfjs_require__(46);var gOPD=$GOPD.f;var dP=$DP.f;var gOPN=gOPNExt.f;var $Symbol=global.Symbol;var $JSON=global.JSON;var _stringify=$JSON&&$JSON.stringify;var PROTOTYPE='prototype';var HIDDEN=wks('_hidden');var TO_PRIMITIVE=wks('toPrimitive');var isEnum={}.propertyIsEnumerable;var SymbolRegistry=shared('symbol-registry');var AllSymbols=shared('symbols');var OPSymbols=shared('op-symbols');var ObjectProto=Object[PROTOTYPE];var USE_NATIVE=typeof $Symbol=='function';var QObject=global.QObject;var setter=!QObject||!QObject[PROTOTYPE]||!QObject[PROTOTYPE].findChild;var setSymbolDesc=DESCRIPTORS&&$fails(function(){return _create(dP({},'a',{get:function get(){return dP(this,'a',{value:7}).a;}})).a!=7;})?function(it,key,D){var protoDesc=gOPD(ObjectProto,key);if(protoDesc)delete ObjectProto[key];dP(it,key,D);if(protoDesc&&it!==ObjectProto)dP(ObjectProto,key,protoDesc);}:dP;var wrap=function wrap(tag){var sym=AllSymbols[tag]=_create($Symbol[PROTOTYPE]);sym._k=tag;return sym;};var isSymbol=USE_NATIVE&&_typeof($Symbol.iterator)=='symbol'?function(it){return(typeof it==='undefined'?'undefined':_typeof(it))=='symbol';}:function(it){return it instanceof $Symbol;};var $defineProperty=function defineProperty(it,key,D){if(it===ObjectProto)$defineProperty(OPSymbols,key,D);anObject(it);key=toPrimitive(key,true);anObject(D);if(has(AllSymbols,key)){if(!D.enumerable){if(!has(it,HIDDEN))dP(it,HIDDEN,createDesc(1,{}));it[HIDDEN][key]=true;}else{if(has(it,HIDDEN)&&it[HIDDEN][key])it[HIDDEN][key]=false;D=_create(D,{enumerable:createDesc(0,false)});}return setSymbolDesc(it,key,D);}return dP(it,key,D);};var $defineProperties=function defineProperties(it,P){anObject(it);var keys=enumKeys(P=toIObject(P));var i=0;var l=keys.length;var key;while(l>i){$defineProperty(it,key=keys[i++],P[key]);}return it;};var $create=function create(it,P){return P===undefined?_create(it):$defineProperties(_create(it),P);};var $propertyIsEnumerable=function propertyIsEnumerable(key){var E=isEnum.call(this,key=toPrimitive(key,true));if(this===ObjectProto&&has(AllSymbols,key)&&!has(OPSymbols,key))return false;return E||!has(this,key)||!has(AllSymbols,key)||has(this,HIDDEN)&&this[HIDDEN][key]?E:true;};var $getOwnPropertyDescriptor=function getOwnPropertyDescriptor(it,key){it=toIObject(it);key=toPrimitive(key,true);if(it===ObjectProto&&has(AllSymbols,key)&&!has(OPSymbols,key))return;var D=gOPD(it,key);if(D&&has(AllSymbols,key)&&!(has(it,HIDDEN)&&it[HIDDEN][key]))D.enumerable=true;return D;};var $getOwnPropertyNames=function getOwnPropertyNames(it){var names=gOPN(toIObject(it));var result=[];var i=0;var key;while(names.length>i){if(!has(AllSymbols,key=names[i++])&&key!=HIDDEN&&key!=META)result.push(key);}return result;};var $getOwnPropertySymbols=function getOwnPropertySymbols(it){var IS_OP=it===ObjectProto;var names=gOPN(IS_OP?OPSymbols:toIObject(it));var result=[];var i=0;var key;while(names.length>i){if(has(AllSymbols,key=names[i++])&&(IS_OP?has(ObjectProto,key):true))result.push(AllSymbols[key]);}return result;};if(!USE_NATIVE){$Symbol=function _Symbol(){if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');var tag=uid(arguments.length>0?arguments[0]:undefined);var $set=function $set(value){if(this===ObjectProto)$set.call(OPSymbols,value);if(has(this,HIDDEN)&&has(this[HIDDEN],tag))this[HIDDEN][tag]=false;setSymbolDesc(this,tag,createDesc(1,value));};if(DESCRIPTORS&&setter)setSymbolDesc(ObjectProto,tag,{configurable:true,set:$set});return wrap(tag);};redefine($Symbol[PROTOTYPE],'toString',function toString(){return this._k;});$GOPD.f=$getOwnPropertyDescriptor;$DP.f=$defineProperty;__w_pdfjs_require__(122).f=gOPNExt.f=$getOwnPropertyNames;__w_pdfjs_require__(51).f=$propertyIsEnumerable;__w_pdfjs_require__(50).f=$getOwnPropertySymbols;if(DESCRIPTORS&&!__w_pdfjs_require__(31)){redefine(ObjectProto,'propertyIsEnumerable',$propertyIsEnumerable,true);}wksExt.f=function(name){return wrap(wks(name));};}$export($export.G+$export.W+$export.F*!USE_NATIVE,{Symbol:$Symbol});for(var es6Symbols='hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'.split(','),j=0;es6Symbols.length>j;){wks(es6Symbols[j++]);}for(var wellKnownSymbols=$keys(wks.store),k=0;wellKnownSymbols.length>k;){wksDefine(wellKnownSymbols[k++]);}$export($export.S+$export.F*!USE_NATIVE,'Symbol',{'for':function _for(key){return has(SymbolRegistry,key+='')?SymbolRegistry[key]:SymbolRegistry[key]=$Symbol(key);},keyFor:function keyFor(sym){if(!isSymbol(sym))throw TypeError(sym+' is not a symbol!');for(var key in SymbolRegistry){if(SymbolRegistry[key]===sym)return key;}},useSetter:function useSetter(){setter=true;},useSimple:function useSimple(){setter=false;}});$export($export.S+$export.F*!USE_NATIVE,'Object',{create:$create,defineProperty:$defineProperty,defineProperties:$defineProperties,getOwnPropertyDescriptor:$getOwnPropertyDescriptor,getOwnPropertyNames:$getOwnPropertyNames,getOwnPropertySymbols:$getOwnPropertySymbols});$JSON&&$export($export.S+$export.F*(!USE_NATIVE||$fails(function(){var S=$Symbol();return _stringify([S])!='[null]'||_stringify({a:S})!='{}'||_stringify(Object(S))!='{}';})),'JSON',{stringify:function stringify(it){var args=[it];var i=1;var replacer,$replacer;while(arguments.length>i){args.push(arguments[i++]);}$replacer=replacer=args[1];if(!isObject(replacer)&&it===undefined||isSymbol(it))return;if(!isArray(replacer))replacer=function replacer(key,value){if(typeof $replacer=='function')value=$replacer.call(this,key,value);if(!isSymbol(value))return value;};args[1]=replacer;return _stringify.apply($JSON,args);}});$Symbol[PROTOTYPE][TO_PRIMITIVE]||__w_pdfjs_require__(11)($Symbol[PROTOTYPE],TO_PRIMITIVE,$Symbol[PROTOTYPE].valueOf);setToStringTag($Symbol,'Symbol');setToStringTag(Math,'Math',true);setToStringTag(global.JSON,'JSON',true);/***/},/* 118 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";exports.f=__w_pdfjs_require__(29);/***/},/* 119 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var global=__w_pdfjs_require__(9);var core=__w_pdfjs_require__(10);var LIBRARY=__w_pdfjs_require__(31);var wksExt=__w_pdfjs_require__(118);var defineProperty=__w_pdfjs_require__(12).f;module.exports=function(name){var $Symbol=core.Symbol||(core.Symbol=LIBRARY?{}:global.Symbol||{});if(name.charAt(0)!='_'&&!(name in $Symbol))defineProperty($Symbol,name,{value:wksExt.f(name)});};/***/},/* 120 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var getKeys=__w_pdfjs_require__(46);var gOPS=__w_pdfjs_require__(50);var pIE=__w_pdfjs_require__(51);module.exports=function(it){var result=getKeys(it);var getSymbols=gOPS.f;if(getSymbols){var symbols=getSymbols(it);var isEnum=pIE.f;var i=0;var key;while(symbols.length>i){if(isEnum.call(it,key=symbols[i++]))result.push(key);}}return result;};/***/},/* 121 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var _typeof=typeof Symbol==="function"&&_typeof3(Symbol.iterator)==="symbol"?function(obj){return _typeof3(obj);}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":_typeof3(obj);};var toIObject=__w_pdfjs_require__(37);var gOPN=__w_pdfjs_require__(122).f;var toString={}.toString;var windowNames=(typeof window==='undefined'?'undefined':_typeof(window))=='object'&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];var getWindowNames=function getWindowNames(it){try{return gOPN(it);}catch(e){return windowNames.slice();}};module.exports.f=function getOwnPropertyNames(it){return windowNames&&toString.call(it)=='[object Window]'?getWindowNames(it):gOPN(toIObject(it));};/***/},/* 122 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var $keys=__w_pdfjs_require__(47);var hiddenKeys=__w_pdfjs_require__(49).concat('length','prototype');exports.f=Object.getOwnPropertyNames||function getOwnPropertyNames(O){return $keys(O,hiddenKeys);};/***/},/* 123 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";__w_pdfjs_require__(124);module.exports=__w_pdfjs_require__(10).Object.values;/***/},/* 124 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var $export=__w_pdfjs_require__(8);var $values=__w_pdfjs_require__(125)(false);$export($export.S,'Object',{values:function values(it){return $values(it);}});/***/},/* 125 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var getKeys=__w_pdfjs_require__(46);var toIObject=__w_pdfjs_require__(37);var isEnum=__w_pdfjs_require__(51).f;module.exports=function(isEntries){return function(it){var O=toIObject(it);var keys=getKeys(O);var length=keys.length;var i=0;var result=[];var key;while(length>i){if(isEnum.call(O,key=keys[i++])){result.push(isEntries?[key,O[key]]:O[key]);}}return result;};};/***/},/* 126 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var isReadableStreamSupported=false;if(typeof ReadableStream!=='undefined'){try{new ReadableStream({start:function start(controller){controller.close();}});isReadableStreamSupported=true;}catch(e){}}if(isReadableStreamSupported){exports.ReadableStream=ReadableStream;}else{exports.ReadableStream=__w_pdfjs_require__(127).ReadableStream;}/***/},/* 127 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var _typeof2=typeof Symbol==="function"&&_typeof3(Symbol.iterator)==="symbol"?function(obj){return _typeof3(obj);}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":_typeof3(obj);};(function(e,a){for(var i in a){e[i]=a[i];}})(exports,function(modules){var installedModules={};function __w_pdfjs_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={i:moduleId,l:false,exports:{}};modules[moduleId].call(module.exports,module,module.exports,__w_pdfjs_require__);module.l=true;return module.exports;}__w_pdfjs_require__.m=modules;__w_pdfjs_require__.c=installedModules;__w_pdfjs_require__.i=function(value){return value;};__w_pdfjs_require__.d=function(exports,name,getter){if(!__w_pdfjs_require__.o(exports,name)){Object.defineProperty(exports,name,{configurable:false,enumerable:true,get:getter});}};__w_pdfjs_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module['default'];}:function getModuleExports(){return module;};__w_pdfjs_require__.d(getter,'a',getter);return getter;};__w_pdfjs_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property);};__w_pdfjs_require__.p="";return __w_pdfjs_require__(__w_pdfjs_require__.s=7);}([function(module,exports,__w_pdfjs_require__){"use strict";var _typeof=typeof Symbol==="function"&&_typeof2(Symbol.iterator)==="symbol"?function(obj){return typeof obj==='undefined'?'undefined':_typeof2(obj);}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj==='undefined'?'undefined':_typeof2(obj);};var _require=__w_pdfjs_require__(1),assert=_require.assert;function IsPropertyKey(argument){return typeof argument==='string'||(typeof argument==='undefined'?'undefined':_typeof(argument))==='symbol';}exports.typeIsObject=function(x){return(typeof x==='undefined'?'undefined':_typeof(x))==='object'&&x!==null||typeof x==='function';};exports.createDataProperty=function(o,p,v){assert(exports.typeIsObject(o));Object.defineProperty(o,p,{value:v,writable:true,enumerable:true,configurable:true});};exports.createArrayFromList=function(elements){return elements.slice();};exports.ArrayBufferCopy=function(dest,destOffset,src,srcOffset,n){new Uint8Array(dest).set(new Uint8Array(src,srcOffset,n),destOffset);};exports.CreateIterResultObject=function(value,done){assert(typeof done==='boolean');var obj={};Object.defineProperty(obj,'value',{value:value,enumerable:true,writable:true,configurable:true});Object.defineProperty(obj,'done',{value:done,enumerable:true,writable:true,configurable:true});return obj;};exports.IsFiniteNonNegativeNumber=function(v){if(Number.isNaN(v)){return false;}if(v===Infinity){return false;}if(v<0){return false;}return true;};function Call(F,V,args){if(typeof F!=='function'){throw new TypeError('Argument is not a function');}return Function.prototype.apply.call(F,V,args);}exports.InvokeOrNoop=function(O,P,args){assert(O!==undefined);assert(IsPropertyKey(P));assert(Array.isArray(args));var method=O[P];if(method===undefined){return undefined;}return Call(method,O,args);};exports.PromiseInvokeOrNoop=function(O,P,args){assert(O!==undefined);assert(IsPropertyKey(P));assert(Array.isArray(args));try{return Promise.resolve(exports.InvokeOrNoop(O,P,args));}catch(returnValueE){return Promise.reject(returnValueE);}};exports.PromiseInvokeOrPerformFallback=function(O,P,args,F,argsF){assert(O!==undefined);assert(IsPropertyKey(P));assert(Array.isArray(args));assert(Array.isArray(argsF));var method=void 0;try{method=O[P];}catch(methodE){return Promise.reject(methodE);}if(method===undefined){return F.apply(null,argsF);}try{return Promise.resolve(Call(method,O,args));}catch(e){return Promise.reject(e);}};exports.TransferArrayBuffer=function(O){return O.slice();};exports.ValidateAndNormalizeHighWaterMark=function(highWaterMark){highWaterMark=Number(highWaterMark);if(Number.isNaN(highWaterMark)||highWaterMark<0){throw new RangeError('highWaterMark property of a queuing strategy must be non-negative and non-NaN');}return highWaterMark;};exports.ValidateAndNormalizeQueuingStrategy=function(size,highWaterMark){if(size!==undefined&&typeof size!=='function'){throw new TypeError('size property of a queuing strategy must be a function');}highWaterMark=exports.ValidateAndNormalizeHighWaterMark(highWaterMark);return{size:size,highWaterMark:highWaterMark};};},function(module,exports,__w_pdfjs_require__){"use strict";function rethrowAssertionErrorRejection(e){if(e&&e.constructor===AssertionError){setTimeout(function(){throw e;},0);}}function AssertionError(message){this.name='AssertionError';this.message=message||'';this.stack=new Error().stack;}AssertionError.prototype=Object.create(Error.prototype);AssertionError.prototype.constructor=AssertionError;function assert(value,message){if(!value){throw new AssertionError(message);}}module.exports={rethrowAssertionErrorRejection:rethrowAssertionErrorRejection,AssertionError:AssertionError,assert:assert};},function(module,exports,__w_pdfjs_require__){"use strict";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var _require=__w_pdfjs_require__(0),InvokeOrNoop=_require.InvokeOrNoop,PromiseInvokeOrNoop=_require.PromiseInvokeOrNoop,ValidateAndNormalizeQueuingStrategy=_require.ValidateAndNormalizeQueuingStrategy,typeIsObject=_require.typeIsObject;var _require2=__w_pdfjs_require__(1),assert=_require2.assert,rethrowAssertionErrorRejection=_require2.rethrowAssertionErrorRejection;var _require3=__w_pdfjs_require__(3),DequeueValue=_require3.DequeueValue,EnqueueValueWithSize=_require3.EnqueueValueWithSize,PeekQueueValue=_require3.PeekQueueValue,ResetQueue=_require3.ResetQueue;var WritableStream=function(){function WritableStream(){var underlyingSink=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var _ref=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},size=_ref.size,_ref$highWaterMark=_ref.highWaterMark,highWaterMark=_ref$highWaterMark===undefined?1:_ref$highWaterMark;_classCallCheck(this,WritableStream);this._state='writable';this._storedError=undefined;this._writer=undefined;this._writableStreamController=undefined;this._writeRequests=[];this._inFlightWriteRequest=undefined;this._closeRequest=undefined;this._inFlightCloseRequest=undefined;this._pendingAbortRequest=undefined;this._backpressure=false;var type=underlyingSink.type;if(type!==undefined){throw new RangeError('Invalid type is specified');}this._writableStreamController=new WritableStreamDefaultController(this,underlyingSink,size,highWaterMark);this._writableStreamController.__startSteps();}_createClass(WritableStream,[{key:'abort',value:function abort(reason){if(IsWritableStream(this)===false){return Promise.reject(streamBrandCheckException('abort'));}if(IsWritableStreamLocked(this)===true){return Promise.reject(new TypeError('Cannot abort a stream that already has a writer'));}return WritableStreamAbort(this,reason);}},{key:'getWriter',value:function getWriter(){if(IsWritableStream(this)===false){throw streamBrandCheckException('getWriter');}return AcquireWritableStreamDefaultWriter(this);}},{key:'locked',get:function get(){if(IsWritableStream(this)===false){throw streamBrandCheckException('locked');}return IsWritableStreamLocked(this);}}]);return WritableStream;}();module.exports={AcquireWritableStreamDefaultWriter:AcquireWritableStreamDefaultWriter,IsWritableStream:IsWritableStream,IsWritableStreamLocked:IsWritableStreamLocked,WritableStream:WritableStream,WritableStreamAbort:WritableStreamAbort,WritableStreamDefaultControllerError:WritableStreamDefaultControllerError,WritableStreamDefaultWriterCloseWithErrorPropagation:WritableStreamDefaultWriterCloseWithErrorPropagation,WritableStreamDefaultWriterRelease:WritableStreamDefaultWriterRelease,WritableStreamDefaultWriterWrite:WritableStreamDefaultWriterWrite,WritableStreamCloseQueuedOrInFlight:WritableStreamCloseQueuedOrInFlight};function AcquireWritableStreamDefaultWriter(stream){return new WritableStreamDefaultWriter(stream);}function IsWritableStream(x){if(!typeIsObject(x)){return false;}if(!Object.prototype.hasOwnProperty.call(x,'_writableStreamController')){return false;}return true;}function IsWritableStreamLocked(stream){assert(IsWritableStream(stream)===true,'IsWritableStreamLocked should only be used on known writable streams');if(stream._writer===undefined){return false;}return true;}function WritableStreamAbort(stream,reason){var state=stream._state;if(state==='closed'){return Promise.resolve(undefined);}if(state==='errored'){return Promise.reject(stream._storedError);}var error=new TypeError('Requested to abort');if(stream._pendingAbortRequest!==undefined){return Promise.reject(error);}assert(state==='writable'||state==='erroring','state must be writable or erroring');var wasAlreadyErroring=false;if(state==='erroring'){wasAlreadyErroring=true;reason=undefined;}var promise=new Promise(function(resolve,reject){stream._pendingAbortRequest={_resolve:resolve,_reject:reject,_reason:reason,_wasAlreadyErroring:wasAlreadyErroring};});if(wasAlreadyErroring===false){WritableStreamStartErroring(stream,error);}return promise;}function WritableStreamAddWriteRequest(stream){assert(IsWritableStreamLocked(stream)===true);assert(stream._state==='writable');var promise=new Promise(function(resolve,reject){var writeRequest={_resolve:resolve,_reject:reject};stream._writeRequests.push(writeRequest);});return promise;}function WritableStreamDealWithRejection(stream,error){var state=stream._state;if(state==='writable'){WritableStreamStartErroring(stream,error);return;}assert(state==='erroring');WritableStreamFinishErroring(stream);}function WritableStreamStartErroring(stream,reason){assert(stream._storedError===undefined,'stream._storedError === undefined');assert(stream._state==='writable','state must be writable');var controller=stream._writableStreamController;assert(controller!==undefined,'controller must not be undefined');stream._state='erroring';stream._storedError=reason;var writer=stream._writer;if(writer!==undefined){WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer,reason);}if(WritableStreamHasOperationMarkedInFlight(stream)===false&&controller._started===true){WritableStreamFinishErroring(stream);}}function WritableStreamFinishErroring(stream){assert(stream._state==='erroring','stream._state === erroring');assert(WritableStreamHasOperationMarkedInFlight(stream)===false,'WritableStreamHasOperationMarkedInFlight(stream) === false');stream._state='errored';stream._writableStreamController.__errorSteps();var storedError=stream._storedError;for(var i=0;i<stream._writeRequests.length;i++){var writeRequest=stream._writeRequests[i];writeRequest._reject(storedError);}stream._writeRequests=[];if(stream._pendingAbortRequest===undefined){WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);return;}var abortRequest=stream._pendingAbortRequest;stream._pendingAbortRequest=undefined;if(abortRequest._wasAlreadyErroring===true){abortRequest._reject(storedError);WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);return;}var promise=stream._writableStreamController.__abortSteps(abortRequest._reason);promise.then(function(){abortRequest._resolve();WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);},function(reason){abortRequest._reject(reason);WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);});}function WritableStreamFinishInFlightWrite(stream){assert(stream._inFlightWriteRequest!==undefined);stream._inFlightWriteRequest._resolve(undefined);stream._inFlightWriteRequest=undefined;}function WritableStreamFinishInFlightWriteWithError(stream,error){assert(stream._inFlightWriteRequest!==undefined);stream._inFlightWriteRequest._reject(error);stream._inFlightWriteRequest=undefined;assert(stream._state==='writable'||stream._state==='erroring');WritableStreamDealWithRejection(stream,error);}function WritableStreamFinishInFlightClose(stream){assert(stream._inFlightCloseRequest!==undefined);stream._inFlightCloseRequest._resolve(undefined);stream._inFlightCloseRequest=undefined;var state=stream._state;assert(state==='writable'||state==='erroring');if(state==='erroring'){stream._storedError=undefined;if(stream._pendingAbortRequest!==undefined){stream._pendingAbortRequest._resolve();stream._pendingAbortRequest=undefined;}}stream._state='closed';var writer=stream._writer;if(writer!==undefined){defaultWriterClosedPromiseResolve(writer);}assert(stream._pendingAbortRequest===undefined,'stream._pendingAbortRequest === undefined');assert(stream._storedError===undefined,'stream._storedError === undefined');}function WritableStreamFinishInFlightCloseWithError(stream,error){assert(stream._inFlightCloseRequest!==undefined);stream._inFlightCloseRequest._reject(error);stream._inFlightCloseRequest=undefined;assert(stream._state==='writable'||stream._state==='erroring');if(stream._pendingAbortRequest!==undefined){stream._pendingAbortRequest._reject(error);stream._pendingAbortRequest=undefined;}WritableStreamDealWithRejection(stream,error);}function WritableStreamCloseQueuedOrInFlight(stream){if(stream._closeRequest===undefined&&stream._inFlightCloseRequest===undefined){return false;}return true;}function WritableStreamHasOperationMarkedInFlight(stream){if(stream._inFlightWriteRequest===undefined&&stream._inFlightCloseRequest===undefined){return false;}return true;}function WritableStreamMarkCloseRequestInFlight(stream){assert(stream._inFlightCloseRequest===undefined);assert(stream._closeRequest!==undefined);stream._inFlightCloseRequest=stream._closeRequest;stream._closeRequest=undefined;}function WritableStreamMarkFirstWriteRequestInFlight(stream){assert(stream._inFlightWriteRequest===undefined,'there must be no pending write request');assert(stream._writeRequests.length!==0,'writeRequests must not be empty');stream._inFlightWriteRequest=stream._writeRequests.shift();}function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream){assert(stream._state==='errored','_stream_.[[state]] is `"errored"`');if(stream._closeRequest!==undefined){assert(stream._inFlightCloseRequest===undefined);stream._closeRequest._reject(stream._storedError);stream._closeRequest=undefined;}var writer=stream._writer;if(writer!==undefined){defaultWriterClosedPromiseReject(writer,stream._storedError);writer._closedPromise.catch(function(){});}}function WritableStreamUpdateBackpressure(stream,backpressure){assert(stream._state==='writable');assert(WritableStreamCloseQueuedOrInFlight(stream)===false);var writer=stream._writer;if(writer!==undefined&&backpressure!==stream._backpressure){if(backpressure===true){defaultWriterReadyPromiseReset(writer);}else{assert(backpressure===false);defaultWriterReadyPromiseResolve(writer);}}stream._backpressure=backpressure;}var WritableStreamDefaultWriter=function(){function WritableStreamDefaultWriter(stream){_classCallCheck(this,WritableStreamDefaultWriter);if(IsWritableStream(stream)===false){throw new TypeError('WritableStreamDefaultWriter can only be constructed with a WritableStream instance');}if(IsWritableStreamLocked(stream)===true){throw new TypeError('This stream has already been locked for exclusive writing by another writer');}this._ownerWritableStream=stream;stream._writer=this;var state=stream._state;if(state==='writable'){if(WritableStreamCloseQueuedOrInFlight(stream)===false&&stream._backpressure===true){defaultWriterReadyPromiseInitialize(this);}else{defaultWriterReadyPromiseInitializeAsResolved(this);}defaultWriterClosedPromiseInitialize(this);}else if(state==='erroring'){defaultWriterReadyPromiseInitializeAsRejected(this,stream._storedError);this._readyPromise.catch(function(){});defaultWriterClosedPromiseInitialize(this);}else if(state==='closed'){defaultWriterReadyPromiseInitializeAsResolved(this);defaultWriterClosedPromiseInitializeAsResolved(this);}else{assert(state==='errored','state must be errored');var storedError=stream._storedError;defaultWriterReadyPromiseInitializeAsRejected(this,storedError);this._readyPromise.catch(function(){});defaultWriterClosedPromiseInitializeAsRejected(this,storedError);this._closedPromise.catch(function(){});}}_createClass(WritableStreamDefaultWriter,[{key:'abort',value:function abort(reason){if(IsWritableStreamDefaultWriter(this)===false){return Promise.reject(defaultWriterBrandCheckException('abort'));}if(this._ownerWritableStream===undefined){return Promise.reject(defaultWriterLockException('abort'));}return WritableStreamDefaultWriterAbort(this,reason);}},{key:'close',value:function close(){if(IsWritableStreamDefaultWriter(this)===false){return Promise.reject(defaultWriterBrandCheckException('close'));}var stream=this._ownerWritableStream;if(stream===undefined){return Promise.reject(defaultWriterLockException('close'));}if(WritableStreamCloseQueuedOrInFlight(stream)===true){return Promise.reject(new TypeError('cannot close an already-closing stream'));}return WritableStreamDefaultWriterClose(this);}},{key:'releaseLock',value:function releaseLock(){if(IsWritableStreamDefaultWriter(this)===false){throw defaultWriterBrandCheckException('releaseLock');}var stream=this._ownerWritableStream;if(stream===undefined){return;}assert(stream._writer!==undefined);WritableStreamDefaultWriterRelease(this);}},{key:'write',value:function write(chunk){if(IsWritableStreamDefaultWriter(this)===false){return Promise.reject(defaultWriterBrandCheckException('write'));}if(this._ownerWritableStream===undefined){return Promise.reject(defaultWriterLockException('write to'));}return WritableStreamDefaultWriterWrite(this,chunk);}},{key:'closed',get:function get(){if(IsWritableStreamDefaultWriter(this)===false){return Promise.reject(defaultWriterBrandCheckException('closed'));}return this._closedPromise;}},{key:'desiredSize',get:function get(){if(IsWritableStreamDefaultWriter(this)===false){throw defaultWriterBrandCheckException('desiredSize');}if(this._ownerWritableStream===undefined){throw defaultWriterLockException('desiredSize');}return WritableStreamDefaultWriterGetDesiredSize(this);}},{key:'ready',get:function get(){if(IsWritableStreamDefaultWriter(this)===false){return Promise.reject(defaultWriterBrandCheckException('ready'));}return this._readyPromise;}}]);return WritableStreamDefaultWriter;}();function IsWritableStreamDefaultWriter(x){if(!typeIsObject(x)){return false;}if(!Object.prototype.hasOwnProperty.call(x,'_ownerWritableStream')){return false;}return true;}function WritableStreamDefaultWriterAbort(writer,reason){var stream=writer._ownerWritableStream;assert(stream!==undefined);return WritableStreamAbort(stream,reason);}function WritableStreamDefaultWriterClose(writer){var stream=writer._ownerWritableStream;assert(stream!==undefined);var state=stream._state;if(state==='closed'||state==='errored'){return Promise.reject(new TypeError('The stream (in '+state+' state) is not in the writable state and cannot be closed'));}assert(state==='writable'||state==='erroring');assert(WritableStreamCloseQueuedOrInFlight(stream)===false);var promise=new Promise(function(resolve,reject){var closeRequest={_resolve:resolve,_reject:reject};stream._closeRequest=closeRequest;});if(stream._backpressure===true&&state==='writable'){defaultWriterReadyPromiseResolve(writer);}WritableStreamDefaultControllerClose(stream._writableStreamController);return promise;}function WritableStreamDefaultWriterCloseWithErrorPropagation(writer){var stream=writer._ownerWritableStream;assert(stream!==undefined);var state=stream._state;if(WritableStreamCloseQueuedOrInFlight(stream)===true||state==='closed'){return Promise.resolve();}if(state==='errored'){return Promise.reject(stream._storedError);}assert(state==='writable'||state==='erroring');return WritableStreamDefaultWriterClose(writer);}function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer,error){if(writer._closedPromiseState==='pending'){defaultWriterClosedPromiseReject(writer,error);}else{defaultWriterClosedPromiseResetToRejected(writer,error);}writer._closedPromise.catch(function(){});}function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer,error){if(writer._readyPromiseState==='pending'){defaultWriterReadyPromiseReject(writer,error);}else{defaultWriterReadyPromiseResetToRejected(writer,error);}writer._readyPromise.catch(function(){});}function WritableStreamDefaultWriterGetDesiredSize(writer){var stream=writer._ownerWritableStream;var state=stream._state;if(state==='errored'||state==='erroring'){return null;}if(state==='closed'){return 0;}return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);}function WritableStreamDefaultWriterRelease(writer){var stream=writer._ownerWritableStream;assert(stream!==undefined);assert(stream._writer===writer);var releasedError=new TypeError('Writer was released and can no longer be used to monitor the stream\'s closedness');WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer,releasedError);WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer,releasedError);stream._writer=undefined;writer._ownerWritableStream=undefined;}function WritableStreamDefaultWriterWrite(writer,chunk){var stream=writer._ownerWritableStream;assert(stream!==undefined);var controller=stream._writableStreamController;var chunkSize=WritableStreamDefaultControllerGetChunkSize(controller,chunk);if(stream!==writer._ownerWritableStream){return Promise.reject(defaultWriterLockException('write to'));}var state=stream._state;if(state==='errored'){return Promise.reject(stream._storedError);}if(WritableStreamCloseQueuedOrInFlight(stream)===true||state==='closed'){return Promise.reject(new TypeError('The stream is closing or closed and cannot be written to'));}if(state==='erroring'){return Promise.reject(stream._storedError);}assert(state==='writable');var promise=WritableStreamAddWriteRequest(stream);WritableStreamDefaultControllerWrite(controller,chunk,chunkSize);return promise;}var WritableStreamDefaultController=function(){function WritableStreamDefaultController(stream,underlyingSink,size,highWaterMark){_classCallCheck(this,WritableStreamDefaultController);if(IsWritableStream(stream)===false){throw new TypeError('WritableStreamDefaultController can only be constructed with a WritableStream instance');}if(stream._writableStreamController!==undefined){throw new TypeError('WritableStreamDefaultController instances can only be created by the WritableStream constructor');}this._controlledWritableStream=stream;this._underlyingSink=underlyingSink;this._queue=undefined;this._queueTotalSize=undefined;ResetQueue(this);this._started=false;var normalizedStrategy=ValidateAndNormalizeQueuingStrategy(size,highWaterMark);this._strategySize=normalizedStrategy.size;this._strategyHWM=normalizedStrategy.highWaterMark;var backpressure=WritableStreamDefaultControllerGetBackpressure(this);WritableStreamUpdateBackpressure(stream,backpressure);}_createClass(WritableStreamDefaultController,[{key:'error',value:function error(e){if(IsWritableStreamDefaultController(this)===false){throw new TypeError('WritableStreamDefaultController.prototype.error can only be used on a WritableStreamDefaultController');}var state=this._controlledWritableStream._state;if(state!=='writable'){return;}WritableStreamDefaultControllerError(this,e);}},{key:'__abortSteps',value:function __abortSteps(reason){return PromiseInvokeOrNoop(this._underlyingSink,'abort',[reason]);}},{key:'__errorSteps',value:function __errorSteps(){ResetQueue(this);}},{key:'__startSteps',value:function __startSteps(){var _this=this;var startResult=InvokeOrNoop(this._underlyingSink,'start',[this]);var stream=this._controlledWritableStream;Promise.resolve(startResult).then(function(){assert(stream._state==='writable'||stream._state==='erroring');_this._started=true;WritableStreamDefaultControllerAdvanceQueueIfNeeded(_this);},function(r){assert(stream._state==='writable'||stream._state==='erroring');_this._started=true;WritableStreamDealWithRejection(stream,r);}).catch(rethrowAssertionErrorRejection);}}]);return WritableStreamDefaultController;}();function WritableStreamDefaultControllerClose(controller){EnqueueValueWithSize(controller,'close',0);WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);}function WritableStreamDefaultControllerGetChunkSize(controller,chunk){var strategySize=controller._strategySize;if(strategySize===undefined){return 1;}try{return strategySize(chunk);}catch(chunkSizeE){WritableStreamDefaultControllerErrorIfNeeded(controller,chunkSizeE);return 1;}}function WritableStreamDefaultControllerGetDesiredSize(controller){return controller._strategyHWM-controller._queueTotalSize;}function WritableStreamDefaultControllerWrite(controller,chunk,chunkSize){var writeRecord={chunk:chunk};try{EnqueueValueWithSize(controller,writeRecord,chunkSize);}catch(enqueueE){WritableStreamDefaultControllerErrorIfNeeded(controller,enqueueE);return;}var stream=controller._controlledWritableStream;if(WritableStreamCloseQueuedOrInFlight(stream)===false&&stream._state==='writable'){var backpressure=WritableStreamDefaultControllerGetBackpressure(controller);WritableStreamUpdateBackpressure(stream,backpressure);}WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);}function IsWritableStreamDefaultController(x){if(!typeIsObject(x)){return false;}if(!Object.prototype.hasOwnProperty.call(x,'_underlyingSink')){return false;}return true;}function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller){var stream=controller._controlledWritableStream;if(controller._started===false){return;}if(stream._inFlightWriteRequest!==undefined){return;}var state=stream._state;if(state==='closed'||state==='errored'){return;}if(state==='erroring'){WritableStreamFinishErroring(stream);return;}if(controller._queue.length===0){return;}var writeRecord=PeekQueueValue(controller);if(writeRecord==='close'){WritableStreamDefaultControllerProcessClose(controller);}else{WritableStreamDefaultControllerProcessWrite(controller,writeRecord.chunk);}}function WritableStreamDefaultControllerErrorIfNeeded(controller,error){if(controller._controlledWritableStream._state==='writable'){WritableStreamDefaultControllerError(controller,error);}}function WritableStreamDefaultControllerProcessClose(controller){var stream=controller._controlledWritableStream;WritableStreamMarkCloseRequestInFlight(stream);DequeueValue(controller);assert(controller._queue.length===0,'queue must be empty once the final write record is dequeued');var sinkClosePromise=PromiseInvokeOrNoop(controller._underlyingSink,'close',[]);sinkClosePromise.then(function(){WritableStreamFinishInFlightClose(stream);},function(reason){WritableStreamFinishInFlightCloseWithError(stream,reason);}).catch(rethrowAssertionErrorRejection);}function WritableStreamDefaultControllerProcessWrite(controller,chunk){var stream=controller._controlledWritableStream;WritableStreamMarkFirstWriteRequestInFlight(stream);var sinkWritePromise=PromiseInvokeOrNoop(controller._underlyingSink,'write',[chunk,controller]);sinkWritePromise.then(function(){WritableStreamFinishInFlightWrite(stream);var state=stream._state;assert(state==='writable'||state==='erroring');DequeueValue(controller);if(WritableStreamCloseQueuedOrInFlight(stream)===false&&state==='writable'){var backpressure=WritableStreamDefaultControllerGetBackpressure(controller);WritableStreamUpdateBackpressure(stream,backpressure);}WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);},function(reason){WritableStreamFinishInFlightWriteWithError(stream,reason);}).catch(rethrowAssertionErrorRejection);}function WritableStreamDefaultControllerGetBackpressure(controller){var desiredSize=WritableStreamDefaultControllerGetDesiredSize(controller);return desiredSize<=0;}function WritableStreamDefaultControllerError(controller,error){var stream=controller._controlledWritableStream;assert(stream._state==='writable');WritableStreamStartErroring(stream,error);}function streamBrandCheckException(name){return new TypeError('WritableStream.prototype.'+name+' can only be used on a WritableStream');}function defaultWriterBrandCheckException(name){return new TypeError('WritableStreamDefaultWriter.prototype.'+name+' can only be used on a WritableStreamDefaultWriter');}function defaultWriterLockException(name){return new TypeError('Cannot '+name+' a stream using a released writer');}function defaultWriterClosedPromiseInitialize(writer){writer._closedPromise=new Promise(function(resolve,reject){writer._closedPromise_resolve=resolve;writer._closedPromise_reject=reject;writer._closedPromiseState='pending';});}function defaultWriterClosedPromiseInitializeAsRejected(writer,reason){writer._closedPromise=Promise.reject(reason);writer._closedPromise_resolve=undefined;writer._closedPromise_reject=undefined;writer._closedPromiseState='rejected';}function defaultWriterClosedPromiseInitializeAsResolved(writer){writer._closedPromise=Promise.resolve(undefined);writer._closedPromise_resolve=undefined;writer._closedPromise_reject=undefined;writer._closedPromiseState='resolved';}function defaultWriterClosedPromiseReject(writer,reason){assert(writer._closedPromise_resolve!==undefined,'writer._closedPromise_resolve !== undefined');assert(writer._closedPromise_reject!==undefined,'writer._closedPromise_reject !== undefined');assert(writer._closedPromiseState==='pending','writer._closedPromiseState is pending');writer._closedPromise_reject(reason);writer._closedPromise_resolve=undefined;writer._closedPromise_reject=undefined;writer._closedPromiseState='rejected';}function defaultWriterClosedPromiseResetToRejected(writer,reason){assert(writer._closedPromise_resolve===undefined,'writer._closedPromise_resolve === undefined');assert(writer._closedPromise_reject===undefined,'writer._closedPromise_reject === undefined');assert(writer._closedPromiseState!=='pending','writer._closedPromiseState is not pending');writer._closedPromise=Promise.reject(reason);writer._closedPromiseState='rejected';}function defaultWriterClosedPromiseResolve(writer){assert(writer._closedPromise_resolve!==undefined,'writer._closedPromise_resolve !== undefined');assert(writer._closedPromise_reject!==undefined,'writer._closedPromise_reject !== undefined');assert(writer._closedPromiseState==='pending','writer._closedPromiseState is pending');writer._closedPromise_resolve(undefined);writer._closedPromise_resolve=undefined;writer._closedPromise_reject=undefined;writer._closedPromiseState='resolved';}function defaultWriterReadyPromiseInitialize(writer){writer._readyPromise=new Promise(function(resolve,reject){writer._readyPromise_resolve=resolve;writer._readyPromise_reject=reject;});writer._readyPromiseState='pending';}function defaultWriterReadyPromiseInitializeAsRejected(writer,reason){writer._readyPromise=Promise.reject(reason);writer._readyPromise_resolve=undefined;writer._readyPromise_reject=undefined;writer._readyPromiseState='rejected';}function defaultWriterReadyPromiseInitializeAsResolved(writer){writer._readyPromise=Promise.resolve(undefined);writer._readyPromise_resolve=undefined;writer._readyPromise_reject=undefined;writer._readyPromiseState='fulfilled';}function defaultWriterReadyPromiseReject(writer,reason){assert(writer._readyPromise_resolve!==undefined,'writer._readyPromise_resolve !== undefined');assert(writer._readyPromise_reject!==undefined,'writer._readyPromise_reject !== undefined');writer._readyPromise_reject(reason);writer._readyPromise_resolve=undefined;writer._readyPromise_reject=undefined;writer._readyPromiseState='rejected';}function defaultWriterReadyPromiseReset(writer){assert(writer._readyPromise_resolve===undefined,'writer._readyPromise_resolve === undefined');assert(writer._readyPromise_reject===undefined,'writer._readyPromise_reject === undefined');writer._readyPromise=new Promise(function(resolve,reject){writer._readyPromise_resolve=resolve;writer._readyPromise_reject=reject;});writer._readyPromiseState='pending';}function defaultWriterReadyPromiseResetToRejected(writer,reason){assert(writer._readyPromise_resolve===undefined,'writer._readyPromise_resolve === undefined');assert(writer._readyPromise_reject===undefined,'writer._readyPromise_reject === undefined');writer._readyPromise=Promise.reject(reason);writer._readyPromiseState='rejected';}function defaultWriterReadyPromiseResolve(writer){assert(writer._readyPromise_resolve!==undefined,'writer._readyPromise_resolve !== undefined');assert(writer._readyPromise_reject!==undefined,'writer._readyPromise_reject !== undefined');writer._readyPromise_resolve(undefined);writer._readyPromise_resolve=undefined;writer._readyPromise_reject=undefined;writer._readyPromiseState='fulfilled';}},function(module,exports,__w_pdfjs_require__){"use strict";var _require=__w_pdfjs_require__(0),IsFiniteNonNegativeNumber=_require.IsFiniteNonNegativeNumber;var _require2=__w_pdfjs_require__(1),assert=_require2.assert;exports.DequeueValue=function(container){assert('_queue'in container&&'_queueTotalSize'in container,'Spec-level failure: DequeueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');assert(container._queue.length>0,'Spec-level failure: should never dequeue from an empty queue.');var pair=container._queue.shift();container._queueTotalSize-=pair.size;if(container._queueTotalSize<0){container._queueTotalSize=0;}return pair.value;};exports.EnqueueValueWithSize=function(container,value,size){assert('_queue'in container&&'_queueTotalSize'in container,'Spec-level failure: EnqueueValueWithSize should only be used on containers with [[queue]] and '+'[[queueTotalSize]].');size=Number(size);if(!IsFiniteNonNegativeNumber(size)){throw new RangeError('Size must be a finite, non-NaN, non-negative number.');}container._queue.push({value:value,size:size});container._queueTotalSize+=size;};exports.PeekQueueValue=function(container){assert('_queue'in container&&'_queueTotalSize'in container,'Spec-level failure: PeekQueueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');assert(container._queue.length>0,'Spec-level failure: should never peek at an empty queue.');var pair=container._queue[0];return pair.value;};exports.ResetQueue=function(container){assert('_queue'in container&&'_queueTotalSize'in container,'Spec-level failure: ResetQueue should only be used on containers with [[queue]] and [[queueTotalSize]].');container._queue=[];container._queueTotalSize=0;};},function(module,exports,__w_pdfjs_require__){"use strict";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var _require=__w_pdfjs_require__(0),ArrayBufferCopy=_require.ArrayBufferCopy,CreateIterResultObject=_require.CreateIterResultObject,IsFiniteNonNegativeNumber=_require.IsFiniteNonNegativeNumber,InvokeOrNoop=_require.InvokeOrNoop,PromiseInvokeOrNoop=_require.PromiseInvokeOrNoop,TransferArrayBuffer=_require.TransferArrayBuffer,ValidateAndNormalizeQueuingStrategy=_require.ValidateAndNormalizeQueuingStrategy,ValidateAndNormalizeHighWaterMark=_require.ValidateAndNormalizeHighWaterMark;var _require2=__w_pdfjs_require__(0),createArrayFromList=_require2.createArrayFromList,createDataProperty=_require2.createDataProperty,typeIsObject=_require2.typeIsObject;var _require3=__w_pdfjs_require__(1),assert=_require3.assert,rethrowAssertionErrorRejection=_require3.rethrowAssertionErrorRejection;var _require4=__w_pdfjs_require__(3),DequeueValue=_require4.DequeueValue,EnqueueValueWithSize=_require4.EnqueueValueWithSize,ResetQueue=_require4.ResetQueue;var _require5=__w_pdfjs_require__(2),AcquireWritableStreamDefaultWriter=_require5.AcquireWritableStreamDefaultWriter,IsWritableStream=_require5.IsWritableStream,IsWritableStreamLocked=_require5.IsWritableStreamLocked,WritableStreamAbort=_require5.WritableStreamAbort,WritableStreamDefaultWriterCloseWithErrorPropagation=_require5.WritableStreamDefaultWriterCloseWithErrorPropagation,WritableStreamDefaultWriterRelease=_require5.WritableStreamDefaultWriterRelease,WritableStreamDefaultWriterWrite=_require5.WritableStreamDefaultWriterWrite,WritableStreamCloseQueuedOrInFlight=_require5.WritableStreamCloseQueuedOrInFlight;var ReadableStream=function(){function ReadableStream(){var underlyingSource=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var _ref=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},size=_ref.size,highWaterMark=_ref.highWaterMark;_classCallCheck(this,ReadableStream);this._state='readable';this._reader=undefined;this._storedError=undefined;this._disturbed=false;this._readableStreamController=undefined;var type=underlyingSource.type;var typeString=String(type);if(typeString==='bytes'){if(highWaterMark===undefined){highWaterMark=0;}this._readableStreamController=new ReadableByteStreamController(this,underlyingSource,highWaterMark);}else if(type===undefined){if(highWaterMark===undefined){highWaterMark=1;}this._readableStreamController=new ReadableStreamDefaultController(this,underlyingSource,size,highWaterMark);}else{throw new RangeError('Invalid type is specified');}}_createClass(ReadableStream,[{key:'cancel',value:function cancel(reason){if(IsReadableStream(this)===false){return Promise.reject(streamBrandCheckException('cancel'));}if(IsReadableStreamLocked(this)===true){return Promise.reject(new TypeError('Cannot cancel a stream that already has a reader'));}return ReadableStreamCancel(this,reason);}},{key:'getReader',value:function getReader(){var _ref2=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},mode=_ref2.mode;if(IsReadableStream(this)===false){throw streamBrandCheckException('getReader');}if(mode===undefined){return AcquireReadableStreamDefaultReader(this);}mode=String(mode);if(mode==='byob'){return AcquireReadableStreamBYOBReader(this);}throw new RangeError('Invalid mode is specified');}},{key:'pipeThrough',value:function pipeThrough(_ref3,options){var writable=_ref3.writable,readable=_ref3.readable;var promise=this.pipeTo(writable,options);ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise);return readable;}},{key:'pipeTo',value:function pipeTo(dest){var _this=this;var _ref4=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},preventClose=_ref4.preventClose,preventAbort=_ref4.preventAbort,preventCancel=_ref4.preventCancel;if(IsReadableStream(this)===false){return Promise.reject(streamBrandCheckException('pipeTo'));}if(IsWritableStream(dest)===false){return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo\'s first argument must be a WritableStream'));}preventClose=Boolean(preventClose);preventAbort=Boolean(preventAbort);preventCancel=Boolean(preventCancel);if(IsReadableStreamLocked(this)===true){return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));}if(IsWritableStreamLocked(dest)===true){return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));}var reader=AcquireReadableStreamDefaultReader(this);var writer=AcquireWritableStreamDefaultWriter(dest);var shuttingDown=false;var currentWrite=Promise.resolve();return new Promise(function(resolve,reject){function pipeLoop(){currentWrite=Promise.resolve();if(shuttingDown===true){return Promise.resolve();}return writer._readyPromise.then(function(){return ReadableStreamDefaultReaderRead(reader).then(function(_ref5){var value=_ref5.value,done=_ref5.done;if(done===true){return;}currentWrite=WritableStreamDefaultWriterWrite(writer,value).catch(function(){});});}).then(pipeLoop);}isOrBecomesErrored(_this,reader._closedPromise,function(storedError){if(preventAbort===false){shutdownWithAction(function(){return WritableStreamAbort(dest,storedError);},true,storedError);}else{shutdown(true,storedError);}});isOrBecomesErrored(dest,writer._closedPromise,function(storedError){if(preventCancel===false){shutdownWithAction(function(){return ReadableStreamCancel(_this,storedError);},true,storedError);}else{shutdown(true,storedError);}});isOrBecomesClosed(_this,reader._closedPromise,function(){if(preventClose===false){shutdownWithAction(function(){return WritableStreamDefaultWriterCloseWithErrorPropagation(writer);});}else{shutdown();}});if(WritableStreamCloseQueuedOrInFlight(dest)===true||dest._state==='closed'){var destClosed=new TypeError('the destination writable stream closed before all data could be piped to it');if(preventCancel===false){shutdownWithAction(function(){return ReadableStreamCancel(_this,destClosed);},true,destClosed);}else{shutdown(true,destClosed);}}pipeLoop().catch(function(err){currentWrite=Promise.resolve();rethrowAssertionErrorRejection(err);});function waitForWritesToFinish(){var oldCurrentWrite=currentWrite;return currentWrite.then(function(){return oldCurrentWrite!==currentWrite?waitForWritesToFinish():undefined;});}function isOrBecomesErrored(stream,promise,action){if(stream._state==='errored'){action(stream._storedError);}else{promise.catch(action).catch(rethrowAssertionErrorRejection);}}function isOrBecomesClosed(stream,promise,action){if(stream._state==='closed'){action();}else{promise.then(action).catch(rethrowAssertionErrorRejection);}}function shutdownWithAction(action,originalIsError,originalError){if(shuttingDown===true){return;}shuttingDown=true;if(dest._state==='writable'&&WritableStreamCloseQueuedOrInFlight(dest)===false){waitForWritesToFinish().then(doTheRest);}else{doTheRest();}function doTheRest(){action().then(function(){return finalize(originalIsError,originalError);},function(newError){return finalize(true,newError);}).catch(rethrowAssertionErrorRejection);}}function shutdown(isError,error){if(shuttingDown===true){return;}shuttingDown=true;if(dest._state==='writable'&&WritableStreamCloseQueuedOrInFlight(dest)===false){waitForWritesToFinish().then(function(){return finalize(isError,error);}).catch(rethrowAssertionErrorRejection);}else{finalize(isError,error);}}function finalize(isError,error){WritableStreamDefaultWriterRelease(writer);ReadableStreamReaderGenericRelease(reader);if(isError){reject(error);}else{resolve(undefined);}}});}},{key:'tee',value:function tee(){if(IsReadableStream(this)===false){throw streamBrandCheckException('tee');}var branches=ReadableStreamTee(this,false);return createArrayFromList(branches);}},{key:'locked',get:function get(){if(IsReadableStream(this)===false){throw streamBrandCheckException('locked');}return IsReadableStreamLocked(this);}}]);return ReadableStream;}();module.exports={ReadableStream:ReadableStream,IsReadableStreamDisturbed:IsReadableStreamDisturbed,ReadableStreamDefaultControllerClose:ReadableStreamDefaultControllerClose,ReadableStreamDefaultControllerEnqueue:ReadableStreamDefaultControllerEnqueue,ReadableStreamDefaultControllerError:ReadableStreamDefaultControllerError,ReadableStreamDefaultControllerGetDesiredSize:ReadableStreamDefaultControllerGetDesiredSize};function AcquireReadableStreamBYOBReader(stream){return new ReadableStreamBYOBReader(stream);}function AcquireReadableStreamDefaultReader(stream){return new ReadableStreamDefaultReader(stream);}function IsReadableStream(x){if(!typeIsObject(x)){return false;}if(!Object.prototype.hasOwnProperty.call(x,'_readableStreamController')){return false;}return true;}function IsReadableStreamDisturbed(stream){assert(IsReadableStream(stream)===true,'IsReadableStreamDisturbed should only be used on known readable streams');return stream._disturbed;}function IsReadableStreamLocked(stream){assert(IsReadableStream(stream)===true,'IsReadableStreamLocked should only be used on known readable streams');if(stream._reader===undefined){return false;}return true;}function ReadableStreamTee(stream,cloneForBranch2){assert(IsReadableStream(stream)===true);assert(typeof cloneForBranch2==='boolean');var reader=AcquireReadableStreamDefaultReader(stream);var teeState={closedOrErrored:false,canceled1:false,canceled2:false,reason1:undefined,reason2:undefined};teeState.promise=new Promise(function(resolve){teeState._resolve=resolve;});var pull=create_ReadableStreamTeePullFunction();pull._reader=reader;pull._teeState=teeState;pull._cloneForBranch2=cloneForBranch2;var cancel1=create_ReadableStreamTeeBranch1CancelFunction();cancel1._stream=stream;cancel1._teeState=teeState;var cancel2=create_ReadableStreamTeeBranch2CancelFunction();cancel2._stream=stream;cancel2._teeState=teeState;var underlyingSource1=Object.create(Object.prototype);createDataProperty(underlyingSource1,'pull',pull);createDataProperty(underlyingSource1,'cancel',cancel1);var branch1Stream=new ReadableStream(underlyingSource1);var underlyingSource2=Object.create(Object.prototype);createDataProperty(underlyingSource2,'pull',pull);createDataProperty(underlyingSource2,'cancel',cancel2);var branch2Stream=new ReadableStream(underlyingSource2);pull._branch1=branch1Stream._readableStreamController;pull._branch2=branch2Stream._readableStreamController;reader._closedPromise.catch(function(r){if(teeState.closedOrErrored===true){return;}ReadableStreamDefaultControllerError(pull._branch1,r);ReadableStreamDefaultControllerError(pull._branch2,r);teeState.closedOrErrored=true;});return[branch1Stream,branch2Stream];}function create_ReadableStreamTeePullFunction(){function f(){var reader=f._reader,branch1=f._branch1,branch2=f._branch2,teeState=f._teeState;return ReadableStreamDefaultReaderRead(reader).then(function(result){assert(typeIsObject(result));var value=result.value;var done=result.done;assert(typeof done==='boolean');if(done===true&&teeState.closedOrErrored===false){if(teeState.canceled1===false){ReadableStreamDefaultControllerClose(branch1);}if(teeState.canceled2===false){ReadableStreamDefaultControllerClose(branch2);}teeState.closedOrErrored=true;}if(teeState.closedOrErrored===true){return;}var value1=value;var value2=value;if(teeState.canceled1===false){ReadableStreamDefaultControllerEnqueue(branch1,value1);}if(teeState.canceled2===false){ReadableStreamDefaultControllerEnqueue(branch2,value2);}});}return f;}function create_ReadableStreamTeeBranch1CancelFunction(){function f(reason){var stream=f._stream,teeState=f._teeState;teeState.canceled1=true;teeState.reason1=reason;if(teeState.canceled2===true){var compositeReason=createArrayFromList([teeState.reason1,teeState.reason2]);var cancelResult=ReadableStreamCancel(stream,compositeReason);teeState._resolve(cancelResult);}return teeState.promise;}return f;}function create_ReadableStreamTeeBranch2CancelFunction(){function f(reason){var stream=f._stream,teeState=f._teeState;teeState.canceled2=true;teeState.reason2=reason;if(teeState.canceled1===true){var compositeReason=createArrayFromList([teeState.reason1,teeState.reason2]);var cancelResult=ReadableStreamCancel(stream,compositeReason);teeState._resolve(cancelResult);}return teeState.promise;}return f;}function ReadableStreamAddReadIntoRequest(stream){assert(IsReadableStreamBYOBReader(stream._reader)===true);assert(stream._state==='readable'||stream._state==='closed');var promise=new Promise(function(resolve,reject){var readIntoRequest={_resolve:resolve,_reject:reject};stream._reader._readIntoRequests.push(readIntoRequest);});return promise;}function ReadableStreamAddReadRequest(stream){assert(IsReadableStreamDefaultReader(stream._reader)===true);assert(stream._state==='readable');var promise=new Promise(function(resolve,reject){var readRequest={_resolve:resolve,_reject:reject};stream._reader._readRequests.push(readRequest);});return promise;}function ReadableStreamCancel(stream,reason){stream._disturbed=true;if(stream._state==='closed'){return Promise.resolve(undefined);}if(stream._state==='errored'){return Promise.reject(stream._storedError);}ReadableStreamClose(stream);var sourceCancelPromise=stream._readableStreamController.__cancelSteps(reason);return sourceCancelPromise.then(function(){return undefined;});}function ReadableStreamClose(stream){assert(stream._state==='readable');stream._state='closed';var reader=stream._reader;if(reader===undefined){return undefined;}if(IsReadableStreamDefaultReader(reader)===true){for(var i=0;i<reader._readRequests.length;i++){var _resolve=reader._readRequests[i]._resolve;_resolve(CreateIterResultObject(undefined,true));}reader._readRequests=[];}defaultReaderClosedPromiseResolve(reader);return undefined;}function ReadableStreamError(stream,e){assert(IsReadableStream(stream)===true,'stream must be ReadableStream');assert(stream._state==='readable','state must be readable');stream._state='errored';stream._storedError=e;var reader=stream._reader;if(reader===undefined){return undefined;}if(IsReadableStreamDefaultReader(reader)===true){for(var i=0;i<reader._readRequests.length;i++){var readRequest=reader._readRequests[i];readRequest._reject(e);}reader._readRequests=[];}else{assert(IsReadableStreamBYOBReader(reader),'reader must be ReadableStreamBYOBReader');for(var _i=0;_i<reader._readIntoRequests.length;_i++){var readIntoRequest=reader._readIntoRequests[_i];readIntoRequest._reject(e);}reader._readIntoRequests=[];}defaultReaderClosedPromiseReject(reader,e);reader._closedPromise.catch(function(){});}function ReadableStreamFulfillReadIntoRequest(stream,chunk,done){var reader=stream._reader;assert(reader._readIntoRequests.length>0);var readIntoRequest=reader._readIntoRequests.shift();readIntoRequest._resolve(CreateIterResultObject(chunk,done));}function ReadableStreamFulfillReadRequest(stream,chunk,done){var reader=stream._reader;assert(reader._readRequests.length>0);var readRequest=reader._readRequests.shift();readRequest._resolve(CreateIterResultObject(chunk,done));}function ReadableStreamGetNumReadIntoRequests(stream){return stream._reader._readIntoRequests.length;}function ReadableStreamGetNumReadRequests(stream){return stream._reader._readRequests.length;}function ReadableStreamHasBYOBReader(stream){var reader=stream._reader;if(reader===undefined){return false;}if(IsReadableStreamBYOBReader(reader)===false){return false;}return true;}function ReadableStreamHasDefaultReader(stream){var reader=stream._reader;if(reader===undefined){return false;}if(IsReadableStreamDefaultReader(reader)===false){return false;}return true;}var ReadableStreamDefaultReader=function(){function ReadableStreamDefaultReader(stream){_classCallCheck(this,ReadableStreamDefaultReader);if(IsReadableStream(stream)===false){throw new TypeError('ReadableStreamDefaultReader can only be constructed with a ReadableStream instance');}if(IsReadableStreamLocked(stream)===true){throw new TypeError('This stream has already been locked for exclusive reading by another reader');}ReadableStreamReaderGenericInitialize(this,stream);this._readRequests=[];}_createClass(ReadableStreamDefaultReader,[{key:'cancel',value:function cancel(reason){if(IsReadableStreamDefaultReader(this)===false){return Promise.reject(defaultReaderBrandCheckException('cancel'));}if(this._ownerReadableStream===undefined){return Promise.reject(readerLockException('cancel'));}return ReadableStreamReaderGenericCancel(this,reason);}},{key:'read',value:function read(){if(IsReadableStreamDefaultReader(this)===false){return Promise.reject(defaultReaderBrandCheckException('read'));}if(this._ownerReadableStream===undefined){return Promise.reject(readerLockException('read from'));}return ReadableStreamDefaultReaderRead(this);}},{key:'releaseLock',value:function releaseLock(){if(IsReadableStreamDefaultReader(this)===false){throw defaultReaderBrandCheckException('releaseLock');}if(this._ownerReadableStream===undefined){return;}if(this._readRequests.length>0){throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');}ReadableStreamReaderGenericRelease(this);}},{key:'closed',get:function get(){if(IsReadableStreamDefaultReader(this)===false){return Promise.reject(defaultReaderBrandCheckException('closed'));}return this._closedPromise;}}]);return ReadableStreamDefaultReader;}();var ReadableStreamBYOBReader=function(){function ReadableStreamBYOBReader(stream){_classCallCheck(this,ReadableStreamBYOBReader);if(!IsReadableStream(stream)){throw new TypeError('ReadableStreamBYOBReader can only be constructed with a ReadableStream instance given a '+'byte source');}if(IsReadableByteStreamController(stream._readableStreamController)===false){throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte '+'source');}if(IsReadableStreamLocked(stream)){throw new TypeError('This stream has already been locked for exclusive reading by another reader');}ReadableStreamReaderGenericInitialize(this,stream);this._readIntoRequests=[];}_createClass(ReadableStreamBYOBReader,[{key:'cancel',value:function cancel(reason){if(!IsReadableStreamBYOBReader(this)){return Promise.reject(byobReaderBrandCheckException('cancel'));}if(this._ownerReadableStream===undefined){return Promise.reject(readerLockException('cancel'));}return ReadableStreamReaderGenericCancel(this,reason);}},{key:'read',value:function read(view){if(!IsReadableStreamBYOBReader(this)){return Promise.reject(byobReaderBrandCheckException('read'));}if(this._ownerReadableStream===undefined){return Promise.reject(readerLockException('read from'));}if(!ArrayBuffer.isView(view)){return Promise.reject(new TypeError('view must be an array buffer view'));}if(view.byteLength===0){return Promise.reject(new TypeError('view must have non-zero byteLength'));}return ReadableStreamBYOBReaderRead(this,view);}},{key:'releaseLock',value:function releaseLock(){if(!IsReadableStreamBYOBReader(this)){throw byobReaderBrandCheckException('releaseLock');}if(this._ownerReadableStream===undefined){return;}if(this._readIntoRequests.length>0){throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');}ReadableStreamReaderGenericRelease(this);}},{key:'closed',get:function get(){if(!IsReadableStreamBYOBReader(this)){return Promise.reject(byobReaderBrandCheckException('closed'));}return this._closedPromise;}}]);return ReadableStreamBYOBReader;}();function IsReadableStreamBYOBReader(x){if(!typeIsObject(x)){return false;}if(!Object.prototype.hasOwnProperty.call(x,'_readIntoRequests')){return false;}return true;}function IsReadableStreamDefaultReader(x){if(!typeIsObject(x)){return false;}if(!Object.prototype.hasOwnProperty.call(x,'_readRequests')){return false;}return true;}function ReadableStreamReaderGenericInitialize(reader,stream){reader._ownerReadableStream=stream;stream._reader=reader;if(stream._state==='readable'){defaultReaderClosedPromiseInitialize(reader);}else if(stream._state==='closed'){defaultReaderClosedPromiseInitializeAsResolved(reader);}else{assert(stream._state==='errored','state must be errored');defaultReaderClosedPromiseInitializeAsRejected(reader,stream._storedError);reader._closedPromise.catch(function(){});}}function ReadableStreamReaderGenericCancel(reader,reason){var stream=reader._ownerReadableStream;assert(stream!==undefined);return ReadableStreamCancel(stream,reason);}function ReadableStreamReaderGenericRelease(reader){assert(reader._ownerReadableStream!==undefined);assert(reader._ownerReadableStream._reader===reader);if(reader._ownerReadableStream._state==='readable'){defaultReaderClosedPromiseReject(reader,new TypeError('Reader was released and can no longer be used to monitor the stream\'s closedness'));}else{defaultReaderClosedPromiseResetToRejected(reader,new TypeError('Reader was released and can no longer be used to monitor the stream\'s closedness'));}reader._closedPromise.catch(function(){});reader._ownerReadableStream._reader=undefined;reader._ownerReadableStream=undefined;}function ReadableStreamBYOBReaderRead(reader,view){var stream=reader._ownerReadableStream;assert(stream!==undefined);stream._disturbed=true;if(stream._state==='errored'){return Promise.reject(stream._storedError);}return ReadableByteStreamControllerPullInto(stream._readableStreamController,view);}function ReadableStreamDefaultReaderRead(reader){var stream=reader._ownerReadableStream;assert(stream!==undefined);stream._disturbed=true;if(stream._state==='closed'){return Promise.resolve(CreateIterResultObject(undefined,true));}if(stream._state==='errored'){return Promise.reject(stream._storedError);}assert(stream._state==='readable');return stream._readableStreamController.__pullSteps();}var ReadableStreamDefaultController=function(){function ReadableStreamDefaultController(stream,underlyingSource,size,highWaterMark){_classCallCheck(this,ReadableStreamDefaultController);if(IsReadableStream(stream)===false){throw new TypeError('ReadableStreamDefaultController can only be constructed with a ReadableStream instance');}if(stream._readableStreamController!==undefined){throw new TypeError('ReadableStreamDefaultController instances can only be created by the ReadableStream constructor');}this._controlledReadableStream=stream;this._underlyingSource=underlyingSource;this._queue=undefined;this._queueTotalSize=undefined;ResetQueue(this);this._started=false;this._closeRequested=false;this._pullAgain=false;this._pulling=false;var normalizedStrategy=ValidateAndNormalizeQueuingStrategy(size,highWaterMark);this._strategySize=normalizedStrategy.size;this._strategyHWM=normalizedStrategy.highWaterMark;var controller=this;var startResult=InvokeOrNoop(underlyingSource,'start',[this]);Promise.resolve(startResult).then(function(){controller._started=true;assert(controller._pulling===false);assert(controller._pullAgain===false);ReadableStreamDefaultControllerCallPullIfNeeded(controller);},function(r){ReadableStreamDefaultControllerErrorIfNeeded(controller,r);}).catch(rethrowAssertionErrorRejection);}_createClass(ReadableStreamDefaultController,[{key:'close',value:function close(){if(IsReadableStreamDefaultController(this)===false){throw defaultControllerBrandCheckException('close');}if(this._closeRequested===true){throw new TypeError('The stream has already been closed; do not close it again!');}var state=this._controlledReadableStream._state;if(state!=='readable'){throw new TypeError('The stream (in '+state+' state) is not in the readable state and cannot be closed');}ReadableStreamDefaultControllerClose(this);}},{key:'enqueue',value:function enqueue(chunk){if(IsReadableStreamDefaultController(this)===false){throw defaultControllerBrandCheckException('enqueue');}if(this._closeRequested===true){throw new TypeError('stream is closed or draining');}var state=this._controlledReadableStream._state;if(state!=='readable'){throw new TypeError('The stream (in '+state+' state) is not in the readable state and cannot be enqueued to');}return ReadableStreamDefaultControllerEnqueue(this,chunk);}},{key:'error',value:function error(e){if(IsReadableStreamDefaultController(this)===false){throw defaultControllerBrandCheckException('error');}var stream=this._controlledReadableStream;if(stream._state!=='readable'){throw new TypeError('The stream is '+stream._state+' and so cannot be errored');}ReadableStreamDefaultControllerError(this,e);}},{key:'__cancelSteps',value:function __cancelSteps(reason){ResetQueue(this);return PromiseInvokeOrNoop(this._underlyingSource,'cancel',[reason]);}},{key:'__pullSteps',value:function __pullSteps(){var stream=this._controlledReadableStream;if(this._queue.length>0){var chunk=DequeueValue(this);if(this._closeRequested===true&&this._queue.length===0){ReadableStreamClose(stream);}else{ReadableStreamDefaultControllerCallPullIfNeeded(this);}return Promise.resolve(CreateIterResultObject(chunk,false));}var pendingPromise=ReadableStreamAddReadRequest(stream);ReadableStreamDefaultControllerCallPullIfNeeded(this);return pendingPromise;}},{key:'desiredSize',get:function get(){if(IsReadableStreamDefaultController(this)===false){throw defaultControllerBrandCheckException('desiredSize');}return ReadableStreamDefaultControllerGetDesiredSize(this);}}]);return ReadableStreamDefaultController;}();function IsReadableStreamDefaultController(x){if(!typeIsObject(x)){return false;}if(!Object.prototype.hasOwnProperty.call(x,'_underlyingSource')){return false;}return true;}function ReadableStreamDefaultControllerCallPullIfNeeded(controller){var shouldPull=ReadableStreamDefaultControllerShouldCallPull(controller);if(shouldPull===false){return undefined;}if(controller._pulling===true){controller._pullAgain=true;return undefined;}assert(controller._pullAgain===false);controller._pulling=true;var pullPromise=PromiseInvokeOrNoop(controller._underlyingSource,'pull',[controller]);pullPromise.then(function(){controller._pulling=false;if(controller._pullAgain===true){controller._pullAgain=false;return ReadableStreamDefaultControllerCallPullIfNeeded(controller);}return undefined;},function(e){ReadableStreamDefaultControllerErrorIfNeeded(controller,e);}).catch(rethrowAssertionErrorRejection);return undefined;}function ReadableStreamDefaultControllerShouldCallPull(controller){var stream=controller._controlledReadableStream;if(stream._state==='closed'||stream._state==='errored'){return false;}if(controller._closeRequested===true){return false;}if(controller._started===false){return false;}if(IsReadableStreamLocked(stream)===true&&ReadableStreamGetNumReadRequests(stream)>0){return true;}var desiredSize=ReadableStreamDefaultControllerGetDesiredSize(controller);if(desiredSize>0){return true;}return false;}function ReadableStreamDefaultControllerClose(controller){var stream=controller._controlledReadableStream;assert(controller._closeRequested===false);assert(stream._state==='readable');controller._closeRequested=true;if(controller._queue.length===0){ReadableStreamClose(stream);}}function ReadableStreamDefaultControllerEnqueue(controller,chunk){var stream=controller._controlledReadableStream;assert(controller._closeRequested===false);assert(stream._state==='readable');if(IsReadableStreamLocked(stream)===true&&ReadableStreamGetNumReadRequests(stream)>0){ReadableStreamFulfillReadRequest(stream,chunk,false);}else{var chunkSize=1;if(controller._strategySize!==undefined){var strategySize=controller._strategySize;try{chunkSize=strategySize(chunk);}catch(chunkSizeE){ReadableStreamDefaultControllerErrorIfNeeded(controller,chunkSizeE);throw chunkSizeE;}}try{EnqueueValueWithSize(controller,chunk,chunkSize);}catch(enqueueE){ReadableStreamDefaultControllerErrorIfNeeded(controller,enqueueE);throw enqueueE;}}ReadableStreamDefaultControllerCallPullIfNeeded(controller);return undefined;}function ReadableStreamDefaultControllerError(controller,e){var stream=controller._controlledReadableStream;assert(stream._state==='readable');ResetQueue(controller);ReadableStreamError(stream,e);}function ReadableStreamDefaultControllerErrorIfNeeded(controller,e){if(controller._controlledReadableStream._state==='readable'){ReadableStreamDefaultControllerError(controller,e);}}function ReadableStreamDefaultControllerGetDesiredSize(controller){var stream=controller._controlledReadableStream;var state=stream._state;if(state==='errored'){return null;}if(state==='closed'){return 0;}return controller._strategyHWM-controller._queueTotalSize;}var ReadableStreamBYOBRequest=function(){function ReadableStreamBYOBRequest(controller,view){_classCallCheck(this,ReadableStreamBYOBRequest);this._associatedReadableByteStreamController=controller;this._view=view;}_createClass(ReadableStreamBYOBRequest,[{key:'respond',value:function respond(bytesWritten){if(IsReadableStreamBYOBRequest(this)===false){throw byobRequestBrandCheckException('respond');}if(this._associatedReadableByteStreamController===undefined){throw new TypeError('This BYOB request has been invalidated');}ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController,bytesWritten);}},{key:'respondWithNewView',value:function respondWithNewView(view){if(IsReadableStreamBYOBRequest(this)===false){throw byobRequestBrandCheckException('respond');}if(this._associatedReadableByteStreamController===undefined){throw new TypeError('This BYOB request has been invalidated');}if(!ArrayBuffer.isView(view)){throw new TypeError('You can only respond with array buffer views');}ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController,view);}},{key:'view',get:function get(){return this._view;}}]);return ReadableStreamBYOBRequest;}();var ReadableByteStreamController=function(){function ReadableByteStreamController(stream,underlyingByteSource,highWaterMark){_classCallCheck(this,ReadableByteStreamController);if(IsReadableStream(stream)===false){throw new TypeError('ReadableByteStreamController can only be constructed with a ReadableStream instance given '+'a byte source');}if(stream._readableStreamController!==undefined){throw new TypeError('ReadableByteStreamController instances can only be created by the ReadableStream constructor given a byte '+'source');}this._controlledReadableStream=stream;this._underlyingByteSource=underlyingByteSource;this._pullAgain=false;this._pulling=false;ReadableByteStreamControllerClearPendingPullIntos(this);this._queue=this._queueTotalSize=undefined;ResetQueue(this);this._closeRequested=false;this._started=false;this._strategyHWM=ValidateAndNormalizeHighWaterMark(highWaterMark);var autoAllocateChunkSize=underlyingByteSource.autoAllocateChunkSize;if(autoAllocateChunkSize!==undefined){if(Number.isInteger(autoAllocateChunkSize)===false||autoAllocateChunkSize<=0){throw new RangeError('autoAllocateChunkSize must be a positive integer');}}this._autoAllocateChunkSize=autoAllocateChunkSize;this._pendingPullIntos=[];var controller=this;var startResult=InvokeOrNoop(underlyingByteSource,'start',[this]);Promise.resolve(startResult).then(function(){controller._started=true;assert(controller._pulling===false);assert(controller._pullAgain===false);ReadableByteStreamControllerCallPullIfNeeded(controller);},function(r){if(stream._state==='readable'){ReadableByteStreamControllerError(controller,r);}}).catch(rethrowAssertionErrorRejection);}_createClass(ReadableByteStreamController,[{key:'close',value:function close(){if(IsReadableByteStreamController(this)===false){throw byteStreamControllerBrandCheckException('close');}if(this._closeRequested===true){throw new TypeError('The stream has already been closed; do not close it again!');}var state=this._controlledReadableStream._state;if(state!=='readable'){throw new TypeError('The stream (in '+state+' state) is not in the readable state and cannot be closed');}ReadableByteStreamControllerClose(this);}},{key:'enqueue',value:function enqueue(chunk){if(IsReadableByteStreamController(this)===false){throw byteStreamControllerBrandCheckException('enqueue');}if(this._closeRequested===true){throw new TypeError('stream is closed or draining');}var state=this._controlledReadableStream._state;if(state!=='readable'){throw new TypeError('The stream (in '+state+' state) is not in the readable state and cannot be enqueued to');}if(!ArrayBuffer.isView(chunk)){throw new TypeError('You can only enqueue array buffer views when using a ReadableByteStreamController');}ReadableByteStreamControllerEnqueue(this,chunk);}},{key:'error',value:function error(e){if(IsReadableByteStreamController(this)===false){throw byteStreamControllerBrandCheckException('error');}var stream=this._controlledReadableStream;if(stream._state!=='readable'){throw new TypeError('The stream is '+stream._state+' and so cannot be errored');}ReadableByteStreamControllerError(this,e);}},{key:'__cancelSteps',value:function __cancelSteps(reason){if(this._pendingPullIntos.length>0){var firstDescriptor=this._pendingPullIntos[0];firstDescriptor.bytesFilled=0;}ResetQueue(this);return PromiseInvokeOrNoop(this._underlyingByteSource,'cancel',[reason]);}},{key:'__pullSteps',value:function __pullSteps(){var stream=this._controlledReadableStream;assert(ReadableStreamHasDefaultReader(stream)===true);if(this._queueTotalSize>0){assert(ReadableStreamGetNumReadRequests(stream)===0);var entry=this._queue.shift();this._queueTotalSize-=entry.byteLength;ReadableByteStreamControllerHandleQueueDrain(this);var view=void 0;try{view=new Uint8Array(entry.buffer,entry.byteOffset,entry.byteLength);}catch(viewE){return Promise.reject(viewE);}return Promise.resolve(CreateIterResultObject(view,false));}var autoAllocateChunkSize=this._autoAllocateChunkSize;if(autoAllocateChunkSize!==undefined){var buffer=void 0;try{buffer=new ArrayBuffer(autoAllocateChunkSize);}catch(bufferE){return Promise.reject(bufferE);}var pullIntoDescriptor={buffer:buffer,byteOffset:0,byteLength:autoAllocateChunkSize,bytesFilled:0,elementSize:1,ctor:Uint8Array,readerType:'default'};this._pendingPullIntos.push(pullIntoDescriptor);}var promise=ReadableStreamAddReadRequest(stream);ReadableByteStreamControllerCallPullIfNeeded(this);return promise;}},{key:'byobRequest',get:function get(){if(IsReadableByteStreamController(this)===false){throw byteStreamControllerBrandCheckException('byobRequest');}if(this._byobRequest===undefined&&this._pendingPullIntos.length>0){var firstDescriptor=this._pendingPullIntos[0];var view=new Uint8Array(firstDescriptor.buffer,firstDescriptor.byteOffset+firstDescriptor.bytesFilled,firstDescriptor.byteLength-firstDescriptor.bytesFilled);this._byobRequest=new ReadableStreamBYOBRequest(this,view);}return this._byobRequest;}},{key:'desiredSize',get:function get(){if(IsReadableByteStreamController(this)===false){throw byteStreamControllerBrandCheckException('desiredSize');}return ReadableByteStreamControllerGetDesiredSize(this);}}]);return ReadableByteStreamController;}();function IsReadableByteStreamController(x){if(!typeIsObject(x)){return false;}if(!Object.prototype.hasOwnProperty.call(x,'_underlyingByteSource')){return false;}return true;}function IsReadableStreamBYOBRequest(x){if(!typeIsObject(x)){return false;}if(!Object.prototype.hasOwnProperty.call(x,'_associatedReadableByteStreamController')){return false;}return true;}function ReadableByteStreamControllerCallPullIfNeeded(controller){var shouldPull=ReadableByteStreamControllerShouldCallPull(controller);if(shouldPull===false){return undefined;}if(controller._pulling===true){controller._pullAgain=true;return undefined;}assert(controller._pullAgain===false);controller._pulling=true;var pullPromise=PromiseInvokeOrNoop(controller._underlyingByteSource,'pull',[controller]);pullPromise.then(function(){controller._pulling=false;if(controller._pullAgain===true){controller._pullAgain=false;ReadableByteStreamControllerCallPullIfNeeded(controller);}},function(e){if(controller._controlledReadableStream._state==='readable'){ReadableByteStreamControllerError(controller,e);}}).catch(rethrowAssertionErrorRejection);return undefined;}function ReadableByteStreamControllerClearPendingPullIntos(controller){ReadableByteStreamControllerInvalidateBYOBRequest(controller);controller._pendingPullIntos=[];}function ReadableByteStreamControllerCommitPullIntoDescriptor(stream,pullIntoDescriptor){assert(stream._state!=='errored','state must not be errored');var done=false;if(stream._state==='closed'){assert(pullIntoDescriptor.bytesFilled===0);done=true;}var filledView=ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);if(pullIntoDescriptor.readerType==='default'){ReadableStreamFulfillReadRequest(stream,filledView,done);}else{assert(pullIntoDescriptor.readerType==='byob');ReadableStreamFulfillReadIntoRequest(stream,filledView,done);}}function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor){var bytesFilled=pullIntoDescriptor.bytesFilled;var elementSize=pullIntoDescriptor.elementSize;assert(bytesFilled<=pullIntoDescriptor.byteLength);assert(bytesFilled%elementSize===0);return new pullIntoDescriptor.ctor(pullIntoDescriptor.buffer,pullIntoDescriptor.byteOffset,bytesFilled/elementSize);}function ReadableByteStreamControllerEnqueueChunkToQueue(controller,buffer,byteOffset,byteLength){controller._queue.push({buffer:buffer,byteOffset:byteOffset,byteLength:byteLength});controller._queueTotalSize+=byteLength;}function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller,pullIntoDescriptor){var elementSize=pullIntoDescriptor.elementSize;var currentAlignedBytes=pullIntoDescriptor.bytesFilled-pullIntoDescriptor.bytesFilled%elementSize;var maxBytesToCopy=Math.min(controller._queueTotalSize,pullIntoDescriptor.byteLength-pullIntoDescriptor.bytesFilled);var maxBytesFilled=pullIntoDescriptor.bytesFilled+maxBytesToCopy;var maxAlignedBytes=maxBytesFilled-maxBytesFilled%elementSize;var totalBytesToCopyRemaining=maxBytesToCopy;var ready=false;if(maxAlignedBytes>currentAlignedBytes){totalBytesToCopyRemaining=maxAlignedBytes-pullIntoDescriptor.bytesFilled;ready=true;}var queue=controller._queue;while(totalBytesToCopyRemaining>0){var headOfQueue=queue[0];var bytesToCopy=Math.min(totalBytesToCopyRemaining,headOfQueue.byteLength);var destStart=pullIntoDescriptor.byteOffset+pullIntoDescriptor.bytesFilled;ArrayBufferCopy(pullIntoDescriptor.buffer,destStart,headOfQueue.buffer,headOfQueue.byteOffset,bytesToCopy);if(headOfQueue.byteLength===bytesToCopy){queue.shift();}else{headOfQueue.byteOffset+=bytesToCopy;headOfQueue.byteLength-=bytesToCopy;}controller._queueTotalSize-=bytesToCopy;ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller,bytesToCopy,pullIntoDescriptor);totalBytesToCopyRemaining-=bytesToCopy;}if(ready===false){assert(controller._queueTotalSize===0,'queue must be empty');assert(pullIntoDescriptor.bytesFilled>0);assert(pullIntoDescriptor.bytesFilled<pullIntoDescriptor.elementSize);}return ready;}function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller,size,pullIntoDescriptor){assert(controller._pendingPullIntos.length===0||controller._pendingPullIntos[0]===pullIntoDescriptor);ReadableByteStreamControllerInvalidateBYOBRequest(controller);pullIntoDescriptor.bytesFilled+=size;}function ReadableByteStreamControllerHandleQueueDrain(controller){assert(controller._controlledReadableStream._state==='readable');if(controller._queueTotalSize===0&&controller._closeRequested===true){ReadableStreamClose(controller._controlledReadableStream);}else{ReadableByteStreamControllerCallPullIfNeeded(controller);}}function ReadableByteStreamControllerInvalidateBYOBRequest(controller){if(controller._byobRequest===undefined){return;}controller._byobRequest._associatedReadableByteStreamController=undefined;controller._byobRequest._view=undefined;controller._byobRequest=undefined;}function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller){assert(controller._closeRequested===false);while(controller._pendingPullIntos.length>0){if(controller._queueTotalSize===0){return;}var pullIntoDescriptor=controller._pendingPullIntos[0];if(ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller,pullIntoDescriptor)===true){ReadableByteStreamControllerShiftPendingPullInto(controller);ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream,pullIntoDescriptor);}}}function ReadableByteStreamControllerPullInto(controller,view){var stream=controller._controlledReadableStream;var elementSize=1;if(view.constructor!==DataView){elementSize=view.constructor.BYTES_PER_ELEMENT;}var ctor=view.constructor;var pullIntoDescriptor={buffer:view.buffer,byteOffset:view.byteOffset,byteLength:view.byteLength,bytesFilled:0,elementSize:elementSize,ctor:ctor,readerType:'byob'};if(controller._pendingPullIntos.length>0){pullIntoDescriptor.buffer=TransferArrayBuffer(pullIntoDescriptor.buffer);controller._pendingPullIntos.push(pullIntoDescriptor);return ReadableStreamAddReadIntoRequest(stream);}if(stream._state==='closed'){var emptyView=new view.constructor(pullIntoDescriptor.buffer,pullIntoDescriptor.byteOffset,0);return Promise.resolve(CreateIterResultObject(emptyView,true));}if(controller._queueTotalSize>0){if(ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller,pullIntoDescriptor)===true){var filledView=ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);ReadableByteStreamControllerHandleQueueDrain(controller);return Promise.resolve(CreateIterResultObject(filledView,false));}if(controller._closeRequested===true){var e=new TypeError('Insufficient bytes to fill elements in the given buffer');ReadableByteStreamControllerError(controller,e);return Promise.reject(e);}}pullIntoDescriptor.buffer=TransferArrayBuffer(pullIntoDescriptor.buffer);controller._pendingPullIntos.push(pullIntoDescriptor);var promise=ReadableStreamAddReadIntoRequest(stream);ReadableByteStreamControllerCallPullIfNeeded(controller);return promise;}function ReadableByteStreamControllerRespondInClosedState(controller,firstDescriptor){firstDescriptor.buffer=TransferArrayBuffer(firstDescriptor.buffer);assert(firstDescriptor.bytesFilled===0,'bytesFilled must be 0');var stream=controller._controlledReadableStream;if(ReadableStreamHasBYOBReader(stream)===true){while(ReadableStreamGetNumReadIntoRequests(stream)>0){var pullIntoDescriptor=ReadableByteStreamControllerShiftPendingPullInto(controller);ReadableByteStreamControllerCommitPullIntoDescriptor(stream,pullIntoDescriptor);}}}function ReadableByteStreamControllerRespondInReadableState(controller,bytesWritten,pullIntoDescriptor){if(pullIntoDescriptor.bytesFilled+bytesWritten>pullIntoDescriptor.byteLength){throw new RangeError('bytesWritten out of range');}ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller,bytesWritten,pullIntoDescriptor);if(pullIntoDescriptor.bytesFilled<pullIntoDescriptor.elementSize){return;}ReadableByteStreamControllerShiftPendingPullInto(controller);var remainderSize=pullIntoDescriptor.bytesFilled%pullIntoDescriptor.elementSize;if(remainderSize>0){var end=pullIntoDescriptor.byteOffset+pullIntoDescriptor.bytesFilled;var remainder=pullIntoDescriptor.buffer.slice(end-remainderSize,end);ReadableByteStreamControllerEnqueueChunkToQueue(controller,remainder,0,remainder.byteLength);}pullIntoDescriptor.buffer=TransferArrayBuffer(pullIntoDescriptor.buffer);pullIntoDescriptor.bytesFilled-=remainderSize;ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream,pullIntoDescriptor);ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);}function ReadableByteStreamControllerRespondInternal(controller,bytesWritten){var firstDescriptor=controller._pendingPullIntos[0];var stream=controller._controlledReadableStream;if(stream._state==='closed'){if(bytesWritten!==0){throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');}ReadableByteStreamControllerRespondInClosedState(controller,firstDescriptor);}else{assert(stream._state==='readable');ReadableByteStreamControllerRespondInReadableState(controller,bytesWritten,firstDescriptor);}}function ReadableByteStreamControllerShiftPendingPullInto(controller){var descriptor=controller._pendingPullIntos.shift();ReadableByteStreamControllerInvalidateBYOBRequest(controller);return descriptor;}function ReadableByteStreamControllerShouldCallPull(controller){var stream=controller._controlledReadableStream;if(stream._state!=='readable'){return false;}if(controller._closeRequested===true){return false;}if(controller._started===false){return false;}if(ReadableStreamHasDefaultReader(stream)===true&&ReadableStreamGetNumReadRequests(stream)>0){return true;}if(ReadableStreamHasBYOBReader(stream)===true&&ReadableStreamGetNumReadIntoRequests(stream)>0){return true;}if(ReadableByteStreamControllerGetDesiredSize(controller)>0){return true;}return false;}function ReadableByteStreamControllerClose(controller){var stream=controller._controlledReadableStream;assert(controller._closeRequested===false);assert(stream._state==='readable');if(controller._queueTotalSize>0){controller._closeRequested=true;return;}if(controller._pendingPullIntos.length>0){var firstPendingPullInto=controller._pendingPullIntos[0];if(firstPendingPullInto.bytesFilled>0){var e=new TypeError('Insufficient bytes to fill elements in the given buffer');ReadableByteStreamControllerError(controller,e);throw e;}}ReadableStreamClose(stream);}function ReadableByteStreamControllerEnqueue(controller,chunk){var stream=controller._controlledReadableStream;assert(controller._closeRequested===false);assert(stream._state==='readable');var buffer=chunk.buffer;var byteOffset=chunk.byteOffset;var byteLength=chunk.byteLength;var transferredBuffer=TransferArrayBuffer(buffer);if(ReadableStreamHasDefaultReader(stream)===true){if(ReadableStreamGetNumReadRequests(stream)===0){ReadableByteStreamControllerEnqueueChunkToQueue(controller,transferredBuffer,byteOffset,byteLength);}else{assert(controller._queue.length===0);var transferredView=new Uint8Array(transferredBuffer,byteOffset,byteLength);ReadableStreamFulfillReadRequest(stream,transferredView,false);}}else if(ReadableStreamHasBYOBReader(stream)===true){ReadableByteStreamControllerEnqueueChunkToQueue(controller,transferredBuffer,byteOffset,byteLength);ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);}else{assert(IsReadableStreamLocked(stream)===false,'stream must not be locked');ReadableByteStreamControllerEnqueueChunkToQueue(controller,transferredBuffer,byteOffset,byteLength);}}function ReadableByteStreamControllerError(controller,e){var stream=controller._controlledReadableStream;assert(stream._state==='readable');ReadableByteStreamControllerClearPendingPullIntos(controller);ResetQueue(controller);ReadableStreamError(stream,e);}function ReadableByteStreamControllerGetDesiredSize(controller){var stream=controller._controlledReadableStream;var state=stream._state;if(state==='errored'){return null;}if(state==='closed'){return 0;}return controller._strategyHWM-controller._queueTotalSize;}function ReadableByteStreamControllerRespond(controller,bytesWritten){bytesWritten=Number(bytesWritten);if(IsFiniteNonNegativeNumber(bytesWritten)===false){throw new RangeError('bytesWritten must be a finite');}assert(controller._pendingPullIntos.length>0);ReadableByteStreamControllerRespondInternal(controller,bytesWritten);}function ReadableByteStreamControllerRespondWithNewView(controller,view){assert(controller._pendingPullIntos.length>0);var firstDescriptor=controller._pendingPullIntos[0];if(firstDescriptor.byteOffset+firstDescriptor.bytesFilled!==view.byteOffset){throw new RangeError('The region specified by view does not match byobRequest');}if(firstDescriptor.byteLength!==view.byteLength){throw new RangeError('The buffer of view has different capacity than byobRequest');}firstDescriptor.buffer=view.buffer;ReadableByteStreamControllerRespondInternal(controller,view.byteLength);}function streamBrandCheckException(name){return new TypeError('ReadableStream.prototype.'+name+' can only be used on a ReadableStream');}function readerLockException(name){return new TypeError('Cannot '+name+' a stream using a released reader');}function defaultReaderBrandCheckException(name){return new TypeError('ReadableStreamDefaultReader.prototype.'+name+' can only be used on a ReadableStreamDefaultReader');}function defaultReaderClosedPromiseInitialize(reader){reader._closedPromise=new Promise(function(resolve,reject){reader._closedPromise_resolve=resolve;reader._closedPromise_reject=reject;});}function defaultReaderClosedPromiseInitializeAsRejected(reader,reason){reader._closedPromise=Promise.reject(reason);reader._closedPromise_resolve=undefined;reader._closedPromise_reject=undefined;}function defaultReaderClosedPromiseInitializeAsResolved(reader){reader._closedPromise=Promise.resolve(undefined);reader._closedPromise_resolve=undefined;reader._closedPromise_reject=undefined;}function defaultReaderClosedPromiseReject(reader,reason){assert(reader._closedPromise_resolve!==undefined);assert(reader._closedPromise_reject!==undefined);reader._closedPromise_reject(reason);reader._closedPromise_resolve=undefined;reader._closedPromise_reject=undefined;}function defaultReaderClosedPromiseResetToRejected(reader,reason){assert(reader._closedPromise_resolve===undefined);assert(reader._closedPromise_reject===undefined);reader._closedPromise=Promise.reject(reason);}function defaultReaderClosedPromiseResolve(reader){assert(reader._closedPromise_resolve!==undefined);assert(reader._closedPromise_reject!==undefined);reader._closedPromise_resolve(undefined);reader._closedPromise_resolve=undefined;reader._closedPromise_reject=undefined;}function byobReaderBrandCheckException(name){return new TypeError('ReadableStreamBYOBReader.prototype.'+name+' can only be used on a ReadableStreamBYOBReader');}function defaultControllerBrandCheckException(name){return new TypeError('ReadableStreamDefaultController.prototype.'+name+' can only be used on a ReadableStreamDefaultController');}function byobRequestBrandCheckException(name){return new TypeError('ReadableStreamBYOBRequest.prototype.'+name+' can only be used on a ReadableStreamBYOBRequest');}function byteStreamControllerBrandCheckException(name){return new TypeError('ReadableByteStreamController.prototype.'+name+' can only be used on a ReadableByteStreamController');}function ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise){try{Promise.prototype.then.call(promise,undefined,function(){});}catch(e){}}},function(module,exports,__w_pdfjs_require__){"use strict";var transformStream=__w_pdfjs_require__(6);var readableStream=__w_pdfjs_require__(4);var writableStream=__w_pdfjs_require__(2);exports.TransformStream=transformStream.TransformStream;exports.ReadableStream=readableStream.ReadableStream;exports.IsReadableStreamDisturbed=readableStream.IsReadableStreamDisturbed;exports.ReadableStreamDefaultControllerClose=readableStream.ReadableStreamDefaultControllerClose;exports.ReadableStreamDefaultControllerEnqueue=readableStream.ReadableStreamDefaultControllerEnqueue;exports.ReadableStreamDefaultControllerError=readableStream.ReadableStreamDefaultControllerError;exports.ReadableStreamDefaultControllerGetDesiredSize=readableStream.ReadableStreamDefaultControllerGetDesiredSize;exports.AcquireWritableStreamDefaultWriter=writableStream.AcquireWritableStreamDefaultWriter;exports.IsWritableStream=writableStream.IsWritableStream;exports.IsWritableStreamLocked=writableStream.IsWritableStreamLocked;exports.WritableStream=writableStream.WritableStream;exports.WritableStreamAbort=writableStream.WritableStreamAbort;exports.WritableStreamDefaultControllerError=writableStream.WritableStreamDefaultControllerError;exports.WritableStreamDefaultWriterCloseWithErrorPropagation=writableStream.WritableStreamDefaultWriterCloseWithErrorPropagation;exports.WritableStreamDefaultWriterRelease=writableStream.WritableStreamDefaultWriterRelease;exports.WritableStreamDefaultWriterWrite=writableStream.WritableStreamDefaultWriterWrite;},function(module,exports,__w_pdfjs_require__){"use strict";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var _require=__w_pdfjs_require__(1),assert=_require.assert;var _require2=__w_pdfjs_require__(0),InvokeOrNoop=_require2.InvokeOrNoop,PromiseInvokeOrPerformFallback=_require2.PromiseInvokeOrPerformFallback,PromiseInvokeOrNoop=_require2.PromiseInvokeOrNoop,typeIsObject=_require2.typeIsObject;var _require3=__w_pdfjs_require__(4),ReadableStream=_require3.ReadableStream,ReadableStreamDefaultControllerClose=_require3.ReadableStreamDefaultControllerClose,ReadableStreamDefaultControllerEnqueue=_require3.ReadableStreamDefaultControllerEnqueue,ReadableStreamDefaultControllerError=_require3.ReadableStreamDefaultControllerError,ReadableStreamDefaultControllerGetDesiredSize=_require3.ReadableStreamDefaultControllerGetDesiredSize;var _require4=__w_pdfjs_require__(2),WritableStream=_require4.WritableStream,WritableStreamDefaultControllerError=_require4.WritableStreamDefaultControllerError;function TransformStreamCloseReadable(transformStream){if(transformStream._errored===true){throw new TypeError('TransformStream is already errored');}if(transformStream._readableClosed===true){throw new TypeError('Readable side is already closed');}TransformStreamCloseReadableInternal(transformStream);}function TransformStreamEnqueueToReadable(transformStream,chunk){if(transformStream._errored===true){throw new TypeError('TransformStream is already errored');}if(transformStream._readableClosed===true){throw new TypeError('Readable side is already closed');}var controller=transformStream._readableController;try{ReadableStreamDefaultControllerEnqueue(controller,chunk);}catch(e){transformStream._readableClosed=true;TransformStreamErrorIfNeeded(transformStream,e);throw transformStream._storedError;}var desiredSize=ReadableStreamDefaultControllerGetDesiredSize(controller);var maybeBackpressure=desiredSize<=0;if(maybeBackpressure===true&&transformStream._backpressure===false){TransformStreamSetBackpressure(transformStream,true);}}function TransformStreamError(transformStream,e){if(transformStream._errored===true){throw new TypeError('TransformStream is already errored');}TransformStreamErrorInternal(transformStream,e);}function TransformStreamCloseReadableInternal(transformStream){assert(transformStream._errored===false);assert(transformStream._readableClosed===false);try{ReadableStreamDefaultControllerClose(transformStream._readableController);}catch(e){assert(false);}transformStream._readableClosed=true;}function TransformStreamErrorIfNeeded(transformStream,e){if(transformStream._errored===false){TransformStreamErrorInternal(transformStream,e);}}function TransformStreamErrorInternal(transformStream,e){assert(transformStream._errored===false);transformStream._errored=true;transformStream._storedError=e;if(transformStream._writableDone===false){WritableStreamDefaultControllerError(transformStream._writableController,e);}if(transformStream._readableClosed===false){ReadableStreamDefaultControllerError(transformStream._readableController,e);}}function TransformStreamReadableReadyPromise(transformStream){assert(transformStream._backpressureChangePromise!==undefined,'_backpressureChangePromise should have been initialized');if(transformStream._backpressure===false){return Promise.resolve();}assert(transformStream._backpressure===true,'_backpressure should have been initialized');return transformStream._backpressureChangePromise;}function TransformStreamSetBackpressure(transformStream,backpressure){assert(transformStream._backpressure!==backpressure,'TransformStreamSetBackpressure() should be called only when backpressure is changed');if(transformStream._backpressureChangePromise!==undefined){transformStream._backpressureChangePromise_resolve(backpressure);}transformStream._backpressureChangePromise=new Promise(function(resolve){transformStream._backpressureChangePromise_resolve=resolve;});transformStream._backpressureChangePromise.then(function(resolution){assert(resolution!==backpressure,'_backpressureChangePromise should be fulfilled only when backpressure is changed');});transformStream._backpressure=backpressure;}function TransformStreamDefaultTransform(chunk,transformStreamController){var transformStream=transformStreamController._controlledTransformStream;TransformStreamEnqueueToReadable(transformStream,chunk);return Promise.resolve();}function TransformStreamTransform(transformStream,chunk){assert(transformStream._errored===false);assert(transformStream._transforming===false);assert(transformStream._backpressure===false);transformStream._transforming=true;var transformer=transformStream._transformer;var controller=transformStream._transformStreamController;var transformPromise=PromiseInvokeOrPerformFallback(transformer,'transform',[chunk,controller],TransformStreamDefaultTransform,[chunk,controller]);return transformPromise.then(function(){transformStream._transforming=false;return TransformStreamReadableReadyPromise(transformStream);},function(e){TransformStreamErrorIfNeeded(transformStream,e);return Promise.reject(e);});}function IsTransformStreamDefaultController(x){if(!typeIsObject(x)){return false;}if(!Object.prototype.hasOwnProperty.call(x,'_controlledTransformStream')){return false;}return true;}function IsTransformStream(x){if(!typeIsObject(x)){return false;}if(!Object.prototype.hasOwnProperty.call(x,'_transformStreamController')){return false;}return true;}var TransformStreamSink=function(){function TransformStreamSink(transformStream,startPromise){_classCallCheck(this,TransformStreamSink);this._transformStream=transformStream;this._startPromise=startPromise;}_createClass(TransformStreamSink,[{key:'start',value:function start(c){var transformStream=this._transformStream;transformStream._writableController=c;return this._startPromise.then(function(){return TransformStreamReadableReadyPromise(transformStream);});}},{key:'write',value:function write(chunk){var transformStream=this._transformStream;return TransformStreamTransform(transformStream,chunk);}},{key:'abort',value:function abort(){var transformStream=this._transformStream;transformStream._writableDone=true;TransformStreamErrorInternal(transformStream,new TypeError('Writable side aborted'));}},{key:'close',value:function close(){var transformStream=this._transformStream;assert(transformStream._transforming===false);transformStream._writableDone=true;var flushPromise=PromiseInvokeOrNoop(transformStream._transformer,'flush',[transformStream._transformStreamController]);return flushPromise.then(function(){if(transformStream._errored===true){return Promise.reject(transformStream._storedError);}if(transformStream._readableClosed===false){TransformStreamCloseReadableInternal(transformStream);}return Promise.resolve();}).catch(function(r){TransformStreamErrorIfNeeded(transformStream,r);return Promise.reject(transformStream._storedError);});}}]);return TransformStreamSink;}();var TransformStreamSource=function(){function TransformStreamSource(transformStream,startPromise){_classCallCheck(this,TransformStreamSource);this._transformStream=transformStream;this._startPromise=startPromise;}_createClass(TransformStreamSource,[{key:'start',value:function start(c){var transformStream=this._transformStream;transformStream._readableController=c;return this._startPromise.then(function(){assert(transformStream._backpressureChangePromise!==undefined,'_backpressureChangePromise should have been initialized');if(transformStream._backpressure===true){return Promise.resolve();}assert(transformStream._backpressure===false,'_backpressure should have been initialized');return transformStream._backpressureChangePromise;});}},{key:'pull',value:function pull(){var transformStream=this._transformStream;assert(transformStream._backpressure===true,'pull() should be never called while _backpressure is false');assert(transformStream._backpressureChangePromise!==undefined,'_backpressureChangePromise should have been initialized');TransformStreamSetBackpressure(transformStream,false);return transformStream._backpressureChangePromise;}},{key:'cancel',value:function cancel(){var transformStream=this._transformStream;transformStream._readableClosed=true;TransformStreamErrorInternal(transformStream,new TypeError('Readable side canceled'));}}]);return TransformStreamSource;}();var TransformStreamDefaultController=function(){function TransformStreamDefaultController(transformStream){_classCallCheck(this,TransformStreamDefaultController);if(IsTransformStream(transformStream)===false){throw new TypeError('TransformStreamDefaultController can only be '+'constructed with a TransformStream instance');}if(transformStream._transformStreamController!==undefined){throw new TypeError('TransformStreamDefaultController instances can '+'only be created by the TransformStream constructor');}this._controlledTransformStream=transformStream;}_createClass(TransformStreamDefaultController,[{key:'enqueue',value:function enqueue(chunk){if(IsTransformStreamDefaultController(this)===false){throw defaultControllerBrandCheckException('enqueue');}TransformStreamEnqueueToReadable(this._controlledTransformStream,chunk);}},{key:'close',value:function close(){if(IsTransformStreamDefaultController(this)===false){throw defaultControllerBrandCheckException('close');}TransformStreamCloseReadable(this._controlledTransformStream);}},{key:'error',value:function error(reason){if(IsTransformStreamDefaultController(this)===false){throw defaultControllerBrandCheckException('error');}TransformStreamError(this._controlledTransformStream,reason);}},{key:'desiredSize',get:function get(){if(IsTransformStreamDefaultController(this)===false){throw defaultControllerBrandCheckException('desiredSize');}var transformStream=this._controlledTransformStream;var readableController=transformStream._readableController;return ReadableStreamDefaultControllerGetDesiredSize(readableController);}}]);return TransformStreamDefaultController;}();var TransformStream=function(){function TransformStream(){var transformer=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,TransformStream);this._transformer=transformer;var readableStrategy=transformer.readableStrategy,writableStrategy=transformer.writableStrategy;this._transforming=false;this._errored=false;this._storedError=undefined;this._writableController=undefined;this._readableController=undefined;this._transformStreamController=undefined;this._writableDone=false;this._readableClosed=false;this._backpressure=undefined;this._backpressureChangePromise=undefined;this._backpressureChangePromise_resolve=undefined;this._transformStreamController=new TransformStreamDefaultController(this);var startPromise_resolve=void 0;var startPromise=new Promise(function(resolve){startPromise_resolve=resolve;});var source=new TransformStreamSource(this,startPromise);this._readable=new ReadableStream(source,readableStrategy);var sink=new TransformStreamSink(this,startPromise);this._writable=new WritableStream(sink,writableStrategy);assert(this._writableController!==undefined);assert(this._readableController!==undefined);var desiredSize=ReadableStreamDefaultControllerGetDesiredSize(this._readableController);TransformStreamSetBackpressure(this,desiredSize<=0);var transformStream=this;var startResult=InvokeOrNoop(transformer,'start',[transformStream._transformStreamController]);startPromise_resolve(startResult);startPromise.catch(function(e){if(transformStream._errored===false){transformStream._errored=true;transformStream._storedError=e;}});}_createClass(TransformStream,[{key:'readable',get:function get(){if(IsTransformStream(this)===false){throw streamBrandCheckException('readable');}return this._readable;}},{key:'writable',get:function get(){if(IsTransformStream(this)===false){throw streamBrandCheckException('writable');}return this._writable;}}]);return TransformStream;}();module.exports={TransformStream:TransformStream};function defaultControllerBrandCheckException(name){return new TypeError('TransformStreamDefaultController.prototype.'+name+' can only be used on a TransformStreamDefaultController');}function streamBrandCheckException(name){return new TypeError('TransformStream.prototype.'+name+' can only be used on a TransformStream');}},function(module,exports,__w_pdfjs_require__){module.exports=__w_pdfjs_require__(5);}]));/***/},/* 128 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var _typeof=typeof Symbol==="function"&&_typeof3(Symbol.iterator)==="symbol"?function(obj){return _typeof3(obj);}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":_typeof3(obj);};{var isURLSupported=false;try{if(typeof URL==='function'&&_typeof(URL.prototype)==='object'&&'origin'in URL.prototype){var u=new URL('b','http://a');u.pathname='c%20d';isURLSupported=u.href==='http://a/c%20d';}}catch(ex){}if(isURLSupported){exports.URL=URL;}else{var PolyfillURL=__w_pdfjs_require__(129).URL;var OriginalURL=__w_pdfjs_require__(4).URL;if(OriginalURL){PolyfillURL.createObjectURL=function(blob){return OriginalURL.createObjectURL.apply(OriginalURL,arguments);};PolyfillURL.revokeObjectURL=function(url){OriginalURL.revokeObjectURL(url);};}exports.URL=PolyfillURL;}}/***/},/* 129 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";(function URLConstructorClosure(){'use strict';var relative=Object.create(null);relative['ftp']=21;relative['file']=0;relative['gopher']=70;relative['http']=80;relative['https']=443;relative['ws']=80;relative['wss']=443;var relativePathDotMapping=Object.create(null);relativePathDotMapping['%2e']='.';relativePathDotMapping['.%2e']='..';relativePathDotMapping['%2e.']='..';relativePathDotMapping['%2e%2e']='..';function isRelativeScheme(scheme){return relative[scheme]!==undefined;}function invalid(){clear.call(this);this._isInvalid=true;}function IDNAToASCII(h){if(h===''){invalid.call(this);}return h.toLowerCase();}function percentEscape(c){var unicode=c.charCodeAt(0);if(unicode>0x20&&unicode<0x7F&&[0x22,0x23,0x3C,0x3E,0x3F,0x60].indexOf(unicode)===-1){return c;}return encodeURIComponent(c);}function percentEscapeQuery(c){var unicode=c.charCodeAt(0);if(unicode>0x20&&unicode<0x7F&&[0x22,0x23,0x3C,0x3E,0x60].indexOf(unicode)===-1){return c;}return encodeURIComponent(c);}var EOF,ALPHA=/[a-zA-Z]/,ALPHANUMERIC=/[a-zA-Z0-9\+\-\.]/;function parse(input,stateOverride,base){function err(message){errors.push(message);}var state=stateOverride||'scheme start',cursor=0,buffer='',seenAt=false,seenBracket=false,errors=[];loop:while((input[cursor-1]!==EOF||cursor===0)&&!this._isInvalid){var c=input[cursor];switch(state){case'scheme start':if(c&&ALPHA.test(c)){buffer+=c.toLowerCase();state='scheme';}else if(!stateOverride){buffer='';state='no scheme';continue;}else{err('Invalid scheme.');break loop;}break;case'scheme':if(c&&ALPHANUMERIC.test(c)){buffer+=c.toLowerCase();}else if(c===':'){this._scheme=buffer;buffer='';if(stateOverride){break loop;}if(isRelativeScheme(this._scheme)){this._isRelative=true;}if(this._scheme==='file'){state='relative';}else if(this._isRelative&&base&&base._scheme===this._scheme){state='relative or authority';}else if(this._isRelative){state='authority first slash';}else{state='scheme data';}}else if(!stateOverride){buffer='';cursor=0;state='no scheme';continue;}else if(c===EOF){break loop;}else{err('Code point not allowed in scheme: '+c);break loop;}break;case'scheme data':if(c==='?'){this._query='?';state='query';}else if(c==='#'){this._fragment='#';state='fragment';}else{if(c!==EOF&&c!=='\t'&&c!=='\n'&&c!=='\r'){this._schemeData+=percentEscape(c);}}break;case'no scheme':if(!base||!isRelativeScheme(base._scheme)){err('Missing scheme.');invalid.call(this);}else{state='relative';continue;}break;case'relative or authority':if(c==='/'&&input[cursor+1]==='/'){state='authority ignore slashes';}else{err('Expected /, got: '+c);state='relative';continue;}break;case'relative':this._isRelative=true;if(this._scheme!=='file'){this._scheme=base._scheme;}if(c===EOF){this._host=base._host;this._port=base._port;this._path=base._path.slice();this._query=base._query;this._username=base._username;this._password=base._password;break loop;}else if(c==='/'||c==='\\'){if(c==='\\'){err('\\ is an invalid code point.');}state='relative slash';}else if(c==='?'){this._host=base._host;this._port=base._port;this._path=base._path.slice();this._query='?';this._username=base._username;this._password=base._password;state='query';}else if(c==='#'){this._host=base._host;this._port=base._port;this._path=base._path.slice();this._query=base._query;this._fragment='#';this._username=base._username;this._password=base._password;state='fragment';}else{var nextC=input[cursor+1];var nextNextC=input[cursor+2];if(this._scheme!=='file'||!ALPHA.test(c)||nextC!==':'&&nextC!=='|'||nextNextC!==EOF&&nextNextC!=='/'&&nextNextC!=='\\'&&nextNextC!=='?'&&nextNextC!=='#'){this._host=base._host;this._port=base._port;this._username=base._username;this._password=base._password;this._path=base._path.slice();this._path.pop();}state='relative path';continue;}break;case'relative slash':if(c==='/'||c==='\\'){if(c==='\\'){err('\\ is an invalid code point.');}if(this._scheme==='file'){state='file host';}else{state='authority ignore slashes';}}else{if(this._scheme!=='file'){this._host=base._host;this._port=base._port;this._username=base._username;this._password=base._password;}state='relative path';continue;}break;case'authority first slash':if(c==='/'){state='authority second slash';}else{err('Expected \'/\', got: '+c);state='authority ignore slashes';continue;}break;case'authority second slash':state='authority ignore slashes';if(c!=='/'){err('Expected \'/\', got: '+c);continue;}break;case'authority ignore slashes':if(c!=='/'&&c!=='\\'){state='authority';continue;}else{err('Expected authority, got: '+c);}break;case'authority':if(c==='@'){if(seenAt){err('@ already seen.');buffer+='%40';}seenAt=true;for(var i=0;i<buffer.length;i++){var cp=buffer[i];if(cp==='\t'||cp==='\n'||cp==='\r'){err('Invalid whitespace in authority.');continue;}if(cp===':'&&this._password===null){this._password='';continue;}var tempC=percentEscape(cp);if(this._password!==null){this._password+=tempC;}else{this._username+=tempC;}}buffer='';}else if(c===EOF||c==='/'||c==='\\'||c==='?'||c==='#'){cursor-=buffer.length;buffer='';state='host';continue;}else{buffer+=c;}break;case'file host':if(c===EOF||c==='/'||c==='\\'||c==='?'||c==='#'){if(buffer.length===2&&ALPHA.test(buffer[0])&&(buffer[1]===':'||buffer[1]==='|')){state='relative path';}else if(buffer.length===0){state='relative path start';}else{this._host=IDNAToASCII.call(this,buffer);buffer='';state='relative path start';}continue;}else if(c==='\t'||c==='\n'||c==='\r'){err('Invalid whitespace in file host.');}else{buffer+=c;}break;case'host':case'hostname':if(c===':'&&!seenBracket){this._host=IDNAToASCII.call(this,buffer);buffer='';state='port';if(stateOverride==='hostname'){break loop;}}else if(c===EOF||c==='/'||c==='\\'||c==='?'||c==='#'){this._host=IDNAToASCII.call(this,buffer);buffer='';state='relative path start';if(stateOverride){break loop;}continue;}else if(c!=='\t'&&c!=='\n'&&c!=='\r'){if(c==='['){seenBracket=true;}else if(c===']'){seenBracket=false;}buffer+=c;}else{err('Invalid code point in host/hostname: '+c);}break;case'port':if(/[0-9]/.test(c)){buffer+=c;}else if(c===EOF||c==='/'||c==='\\'||c==='?'||c==='#'||stateOverride){if(buffer!==''){var temp=parseInt(buffer,10);if(temp!==relative[this._scheme]){this._port=temp+'';}buffer='';}if(stateOverride){break loop;}state='relative path start';continue;}else if(c==='\t'||c==='\n'||c==='\r'){err('Invalid code point in port: '+c);}else{invalid.call(this);}break;case'relative path start':if(c==='\\'){err('\'\\\' not allowed in path.');}state='relative path';if(c!=='/'&&c!=='\\'){continue;}break;case'relative path':if(c===EOF||c==='/'||c==='\\'||!stateOverride&&(c==='?'||c==='#')){if(c==='\\'){err('\\ not allowed in relative path.');}var tmp;if(tmp=relativePathDotMapping[buffer.toLowerCase()]){buffer=tmp;}if(buffer==='..'){this._path.pop();if(c!=='/'&&c!=='\\'){this._path.push('');}}else if(buffer==='.'&&c!=='/'&&c!=='\\'){this._path.push('');}else if(buffer!=='.'){if(this._scheme==='file'&&this._path.length===0&&buffer.length===2&&ALPHA.test(buffer[0])&&buffer[1]==='|'){buffer=buffer[0]+':';}this._path.push(buffer);}buffer='';if(c==='?'){this._query='?';state='query';}else if(c==='#'){this._fragment='#';state='fragment';}}else if(c!=='\t'&&c!=='\n'&&c!=='\r'){buffer+=percentEscape(c);}break;case'query':if(!stateOverride&&c==='#'){this._fragment='#';state='fragment';}else if(c!==EOF&&c!=='\t'&&c!=='\n'&&c!=='\r'){this._query+=percentEscapeQuery(c);}break;case'fragment':if(c!==EOF&&c!=='\t'&&c!=='\n'&&c!=='\r'){this._fragment+=c;}break;}cursor++;}}function clear(){this._scheme='';this._schemeData='';this._username='';this._password=null;this._host='';this._port='';this._path=[];this._query='';this._fragment='';this._isInvalid=false;this._isRelative=false;}function JURL(url,base){if(base!==undefined&&!(base instanceof JURL)){base=new JURL(String(base));}this._url=url;clear.call(this);var input=url.replace(/^[ \t\r\n\f]+|[ \t\r\n\f]+$/g,'');parse.call(this,input,null,base);}JURL.prototype={toString:function toString(){return this.href;},get href(){if(this._isInvalid){return this._url;}var authority='';if(this._username!==''||this._password!==null){authority=this._username+(this._password!==null?':'+this._password:'')+'@';}return this.protocol+(this._isRelative?'//'+authority+this.host:'')+this.pathname+this._query+this._fragment;},set href(value){clear.call(this);parse.call(this,value);},get protocol(){return this._scheme+':';},set protocol(value){if(this._isInvalid){return;}parse.call(this,value+':','scheme start');},get host(){return this._isInvalid?'':this._port?this._host+':'+this._port:this._host;},set host(value){if(this._isInvalid||!this._isRelative){return;}parse.call(this,value,'host');},get hostname(){return this._host;},set hostname(value){if(this._isInvalid||!this._isRelative){return;}parse.call(this,value,'hostname');},get port(){return this._port;},set port(value){if(this._isInvalid||!this._isRelative){return;}parse.call(this,value,'port');},get pathname(){return this._isInvalid?'':this._isRelative?'/'+this._path.join('/'):this._schemeData;},set pathname(value){if(this._isInvalid||!this._isRelative){return;}this._path=[];parse.call(this,value,'relative path start');},get search(){return this._isInvalid||!this._query||this._query==='?'?'':this._query;},set search(value){if(this._isInvalid||!this._isRelative){return;}this._query='?';if(value[0]==='?'){value=value.slice(1);}parse.call(this,value,'query');},get hash(){return this._isInvalid||!this._fragment||this._fragment==='#'?'':this._fragment;},set hash(value){if(this._isInvalid){return;}this._fragment='#';if(value[0]==='#'){value=value.slice(1);}parse.call(this,value,'fragment');},get origin(){var host;if(this._isInvalid||!this._scheme){return'';}switch(this._scheme){case'data':case'file':case'javascript':case'mailto':return'null';case'blob':try{return new JURL(this._schemeData).origin||'null';}catch(_){}return'null';}host=this.host;if(!host){return'';}return this._scheme+'://'+host;}};exports.URL=JURL;})();/***/},/* 130 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.NetworkPdfManager=exports.LocalPdfManager=undefined;var _regenerator=__w_pdfjs_require__(131);var _regenerator2=_interopRequireDefault(_regenerator);var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _util=__w_pdfjs_require__(2);var _chunked_stream=__w_pdfjs_require__(135);var _document=__w_pdfjs_require__(136);var _stream=__w_pdfjs_require__(140);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(_typeof3(call)==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+_typeof3(superClass));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step("next",value);},function(err){step("throw",err);});}}return step("next");});};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var BasePdfManager=function(){function BasePdfManager(){_classCallCheck(this,BasePdfManager);if(this.constructor===BasePdfManager){(0,_util.unreachable)('Cannot initialize BasePdfManager.');}}_createClass(BasePdfManager,[{key:'onLoadedStream',value:function onLoadedStream(){(0,_util.unreachable)('Abstract method `onLoadedStream` called');}},{key:'ensureDoc',value:function ensureDoc(prop,args){return this.ensure(this.pdfDocument,prop,args);}},{key:'ensureXRef',value:function ensureXRef(prop,args){return this.ensure(this.pdfDocument.xref,prop,args);}},{key:'ensureCatalog',value:function ensureCatalog(prop,args){return this.ensure(this.pdfDocument.catalog,prop,args);}},{key:'getPage',value:function getPage(pageIndex){return this.pdfDocument.getPage(pageIndex);}},{key:'cleanup',value:function cleanup(){return this.pdfDocument.cleanup();}},{key:'ensure',value:function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee(obj,prop,args){return _regenerator2.default.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:(0,_util.unreachable)('Abstract method `ensure` called');case 1:case'end':return _context.stop();}}},_callee,this);}));function ensure(_x,_x2,_x3){return _ref.apply(this,arguments);}return ensure;}()},{key:'requestRange',value:function requestRange(begin,end){(0,_util.unreachable)('Abstract method `requestRange` called');}},{key:'requestLoadedStream',value:function requestLoadedStream(){(0,_util.unreachable)('Abstract method `requestLoadedStream` called');}},{key:'sendProgressiveData',value:function sendProgressiveData(chunk){(0,_util.unreachable)('Abstract method `sendProgressiveData` called');}},{key:'updatePassword',value:function updatePassword(password){this._password=password;}},{key:'terminate',value:function terminate(){(0,_util.unreachable)('Abstract method `terminate` called');}},{key:'docId',get:function get(){return this._docId;}},{key:'password',get:function get(){return this._password;}},{key:'docBaseUrl',get:function get(){var docBaseUrl=null;if(this._docBaseUrl){var absoluteUrl=(0,_util.createValidAbsoluteUrl)(this._docBaseUrl);if(absoluteUrl){docBaseUrl=absoluteUrl.href;}else{(0,_util.warn)('Invalid absolute docBaseUrl: "'+this._docBaseUrl+'".');}}return(0,_util.shadow)(this,'docBaseUrl',docBaseUrl);}}]);return BasePdfManager;}();var LocalPdfManager=function(_BasePdfManager){_inherits(LocalPdfManager,_BasePdfManager);function LocalPdfManager(docId,data,password,evaluatorOptions,docBaseUrl){_classCallCheck(this,LocalPdfManager);var _this=_possibleConstructorReturn(this,(LocalPdfManager.__proto__||Object.getPrototypeOf(LocalPdfManager)).call(this));_this._docId=docId;_this._password=password;_this._docBaseUrl=docBaseUrl;_this.evaluatorOptions=evaluatorOptions;var stream=new _stream.Stream(data);_this.pdfDocument=new _document.PDFDocument(_this,stream);_this._loadedStreamPromise=Promise.resolve(stream);return _this;}_createClass(LocalPdfManager,[{key:'ensure',value:function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee2(obj,prop,args){var value;return _regenerator2.default.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:value=obj[prop];if(!(typeof value==='function')){_context2.next=3;break;}return _context2.abrupt('return',value.apply(obj,args));case 3:return _context2.abrupt('return',value);case 4:case'end':return _context2.stop();}}},_callee2,this);}));function ensure(_x4,_x5,_x6){return _ref2.apply(this,arguments);}return ensure;}()},{key:'requestRange',value:function requestRange(begin,end){return Promise.resolve();}},{key:'requestLoadedStream',value:function requestLoadedStream(){}},{key:'onLoadedStream',value:function onLoadedStream(){return this._loadedStreamPromise;}},{key:'terminate',value:function terminate(){}}]);return LocalPdfManager;}(BasePdfManager);var NetworkPdfManager=function(_BasePdfManager2){_inherits(NetworkPdfManager,_BasePdfManager2);function NetworkPdfManager(docId,pdfNetworkStream,args,evaluatorOptions,docBaseUrl){_classCallCheck(this,NetworkPdfManager);var _this2=_possibleConstructorReturn(this,(NetworkPdfManager.__proto__||Object.getPrototypeOf(NetworkPdfManager)).call(this));_this2._docId=docId;_this2._password=args.password;_this2._docBaseUrl=docBaseUrl;_this2.msgHandler=args.msgHandler;_this2.evaluatorOptions=evaluatorOptions;_this2.streamManager=new _chunked_stream.ChunkedStreamManager(pdfNetworkStream,{msgHandler:args.msgHandler,url:args.url,length:args.length,disableAutoFetch:args.disableAutoFetch,rangeChunkSize:args.rangeChunkSize});_this2.pdfDocument=new _document.PDFDocument(_this2,_this2.streamManager.getStream());return _this2;}_createClass(NetworkPdfManager,[{key:'ensure',value:function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee3(obj,prop,args){var value;return _regenerator2.default.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;value=obj[prop];if(!(typeof value==='function')){_context3.next=4;break;}return _context3.abrupt('return',value.apply(obj,args));case 4:return _context3.abrupt('return',value);case 7:_context3.prev=7;_context3.t0=_context3['catch'](0);if(_context3.t0 instanceof _util.MissingDataException){_context3.next=11;break;}throw _context3.t0;case 11:_context3.next=13;return this.requestRange(_context3.t0.begin,_context3.t0.end);case 13:return _context3.abrupt('return',this.ensure(obj,prop,args));case 14:case'end':return _context3.stop();}}},_callee3,this,[[0,7]]);}));function ensure(_x7,_x8,_x9){return _ref3.apply(this,arguments);}return ensure;}()},{key:'requestRange',value:function requestRange(begin,end){return this.streamManager.requestRange(begin,end);}},{key:'requestLoadedStream',value:function requestLoadedStream(){this.streamManager.requestAllChunks();}},{key:'sendProgressiveData',value:function sendProgressiveData(chunk){this.streamManager.onReceiveData({chunk:chunk});}},{key:'onLoadedStream',value:function onLoadedStream(){return this.streamManager.onLoadedStream();}},{key:'terminate',value:function terminate(){this.streamManager.abort();}}]);return NetworkPdfManager;}(BasePdfManager);exports.LocalPdfManager=LocalPdfManager;exports.NetworkPdfManager=NetworkPdfManager;/***/},/* 131 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";module.exports=__w_pdfjs_require__(132);/***/},/* 132 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";var g=function(){return this;}()||Function("return this")();var hadRuntime=g.regeneratorRuntime&&Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime")>=0;var oldRuntime=hadRuntime&&g.regeneratorRuntime;g.regeneratorRuntime=undefined;module.exports=__w_pdfjs_require__(133);if(hadRuntime){g.regeneratorRuntime=oldRuntime;}else{try{delete g.regeneratorRuntime;}catch(e){g.regeneratorRuntime=undefined;}}/***/},/* 133 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";/* WEBPACK VAR INJECTION */(function(module){var _typeof=typeof Symbol==="function"&&_typeof3(Symbol.iterator)==="symbol"?function(obj){return _typeof3(obj);}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":_typeof3(obj);};!function(global){"use strict";var Op=Object.prototype;var hasOwn=Op.hasOwnProperty;var undefined;var $Symbol=typeof Symbol==="function"?Symbol:{};var iteratorSymbol=$Symbol.iterator||"@@iterator";var asyncIteratorSymbol=$Symbol.asyncIterator||"@@asyncIterator";var toStringTagSymbol=$Symbol.toStringTag||"@@toStringTag";var inModule=(false?undefined:_typeof(module))==="object";var runtime=global.regeneratorRuntime;if(runtime){if(inModule){module.exports=runtime;}return;}runtime=global.regeneratorRuntime=inModule?module.exports:{};function wrap(innerFn,outerFn,self,tryLocsList){var protoGenerator=outerFn&&outerFn.prototype instanceof Generator?outerFn:Generator;var generator=Object.create(protoGenerator.prototype);var context=new Context(tryLocsList||[]);generator._invoke=makeInvokeMethod(innerFn,self,context);return generator;}runtime.wrap=wrap;function tryCatch(fn,obj,arg){try{return{type:"normal",arg:fn.call(obj,arg)};}catch(err){return{type:"throw",arg:err};}}var GenStateSuspendedStart="suspendedStart";var GenStateSuspendedYield="suspendedYield";var GenStateExecuting="executing";var GenStateCompleted="completed";var ContinueSentinel={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}var IteratorPrototype={};IteratorPrototype[iteratorSymbol]=function(){return this;};var getProto=Object.getPrototypeOf;var NativeIteratorPrototype=getProto&&getProto(getProto(values([])));if(NativeIteratorPrototype&&NativeIteratorPrototype!==Op&&hasOwn.call(NativeIteratorPrototype,iteratorSymbol)){IteratorPrototype=NativeIteratorPrototype;}var Gp=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(IteratorPrototype);GeneratorFunction.prototype=Gp.constructor=GeneratorFunctionPrototype;GeneratorFunctionPrototype.constructor=GeneratorFunction;GeneratorFunctionPrototype[toStringTagSymbol]=GeneratorFunction.displayName="GeneratorFunction";function defineIteratorMethods(prototype){["next","throw","return"].forEach(function(method){prototype[method]=function(arg){return this._invoke(method,arg);};});}runtime.isGeneratorFunction=function(genFun){var ctor=typeof genFun==="function"&&genFun.constructor;return ctor?ctor===GeneratorFunction||(ctor.displayName||ctor.name)==="GeneratorFunction":false;};runtime.mark=function(genFun){if(Object.setPrototypeOf){Object.setPrototypeOf(genFun,GeneratorFunctionPrototype);}else{genFun.__proto__=GeneratorFunctionPrototype;if(!(toStringTagSymbol in genFun)){genFun[toStringTagSymbol]="GeneratorFunction";}}genFun.prototype=Object.create(Gp);return genFun;};runtime.awrap=function(arg){return{__await:arg};};function AsyncIterator(generator){function invoke(method,arg,resolve,reject){var record=tryCatch(generator[method],generator,arg);if(record.type==="throw"){reject(record.arg);}else{var result=record.arg;var value=result.value;if(value&&(typeof value==="undefined"?"undefined":_typeof(value))==="object"&&hasOwn.call(value,"__await")){return Promise.resolve(value.__await).then(function(value){invoke("next",value,resolve,reject);},function(err){invoke("throw",err,resolve,reject);});}return Promise.resolve(value).then(function(unwrapped){result.value=unwrapped;resolve(result);},reject);}}var previousPromise;function enqueue(method,arg){function callInvokeWithMethodAndArg(){return new Promise(function(resolve,reject){invoke(method,arg,resolve,reject);});}return previousPromise=previousPromise?previousPromise.then(callInvokeWithMethodAndArg,callInvokeWithMethodAndArg):callInvokeWithMethodAndArg();}this._invoke=enqueue;}defineIteratorMethods(AsyncIterator.prototype);AsyncIterator.prototype[asyncIteratorSymbol]=function(){return this;};runtime.AsyncIterator=AsyncIterator;runtime.async=function(innerFn,outerFn,self,tryLocsList){var iter=new AsyncIterator(wrap(innerFn,outerFn,self,tryLocsList));return runtime.isGeneratorFunction(outerFn)?iter:iter.next().then(function(result){return result.done?result.value:iter.next();});};function makeInvokeMethod(innerFn,self,context){var state=GenStateSuspendedStart;return function invoke(method,arg){if(state===GenStateExecuting){throw new Error("Generator is already running");}if(state===GenStateCompleted){if(method==="throw"){throw arg;}return doneResult();}context.method=method;context.arg=arg;while(true){var delegate=context.delegate;if(delegate){var delegateResult=maybeInvokeDelegate(delegate,context);if(delegateResult){if(delegateResult===ContinueSentinel)continue;return delegateResult;}}if(context.method==="next"){context.sent=context._sent=context.arg;}else if(context.method==="throw"){if(state===GenStateSuspendedStart){state=GenStateCompleted;throw context.arg;}context.dispatchException(context.arg);}else if(context.method==="return"){context.abrupt("return",context.arg);}state=GenStateExecuting;var record=tryCatch(innerFn,self,context);if(record.type==="normal"){state=context.done?GenStateCompleted:GenStateSuspendedYield;if(record.arg===ContinueSentinel){continue;}return{value:record.arg,done:context.done};}else if(record.type==="throw"){state=GenStateCompleted;context.method="throw";context.arg=record.arg;}}};}function maybeInvokeDelegate(delegate,context){var method=delegate.iterator[context.method];if(method===undefined){context.delegate=null;if(context.method==="throw"){if(delegate.iterator.return){context.method="return";context.arg=undefined;maybeInvokeDelegate(delegate,context);if(context.method==="throw"){return ContinueSentinel;}}context.method="throw";context.arg=new TypeError("The iterator does not provide a 'throw' method");}return ContinueSentinel;}var record=tryCatch(method,delegate.iterator,context.arg);if(record.type==="throw"){context.method="throw";context.arg=record.arg;context.delegate=null;return ContinueSentinel;}var info=record.arg;if(!info){context.method="throw";context.arg=new TypeError("iterator result is not an object");context.delegate=null;return ContinueSentinel;}if(info.done){context[delegate.resultName]=info.value;context.next=delegate.nextLoc;if(context.method!=="return"){context.method="next";context.arg=undefined;}}else{return info;}context.delegate=null;return ContinueSentinel;}defineIteratorMethods(Gp);Gp[toStringTagSymbol]="Generator";Gp[iteratorSymbol]=function(){return this;};Gp.toString=function(){return"[object Generator]";};function pushTryEntry(locs){var entry={tryLoc:locs[0]};if(1 in locs){entry.catchLoc=locs[1];}if(2 in locs){entry.finallyLoc=locs[2];entry.afterLoc=locs[3];}this.tryEntries.push(entry);}function resetTryEntry(entry){var record=entry.completion||{};record.type="normal";delete record.arg;entry.completion=record;}function Context(tryLocsList){this.tryEntries=[{tryLoc:"root"}];tryLocsList.forEach(pushTryEntry,this);this.reset(true);}runtime.keys=function(object){var keys=[];for(var key in object){keys.push(key);}keys.reverse();return function next(){while(keys.length){var key=keys.pop();if(key in object){next.value=key;next.done=false;return next;}}next.done=true;return next;};};function values(iterable){if(iterable){var iteratorMethod=iterable[iteratorSymbol];if(iteratorMethod){return iteratorMethod.call(iterable);}if(typeof iterable.next==="function"){return iterable;}if(!isNaN(iterable.length)){var i=-1,next=function next(){while(++i<iterable.length){if(hasOwn.call(iterable,i)){next.value=iterable[i];next.done=false;return next;}}next.value=undefined;next.done=true;return next;};return next.next=next;}}return{next:doneResult};}runtime.values=values;function doneResult(){return{value:undefined,done:true};}Context.prototype={constructor:Context,reset:function reset(skipTempReset){this.prev=0;this.next=0;this.sent=this._sent=undefined;this.done=false;this.delegate=null;this.method="next";this.arg=undefined;this.tryEntries.forEach(resetTryEntry);if(!skipTempReset){for(var name in this){if(name.charAt(0)==="t"&&hasOwn.call(this,name)&&!isNaN(+name.slice(1))){this[name]=undefined;}}}},stop:function stop(){this.done=true;var rootEntry=this.tryEntries[0];var rootRecord=rootEntry.completion;if(rootRecord.type==="throw"){throw rootRecord.arg;}return this.rval;},dispatchException:function dispatchException(exception){if(this.done){throw exception;}var context=this;function handle(loc,caught){record.type="throw";record.arg=exception;context.next=loc;if(caught){context.method="next";context.arg=undefined;}return!!caught;}for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];var record=entry.completion;if(entry.tryLoc==="root"){return handle("end");}if(entry.tryLoc<=this.prev){var hasCatch=hasOwn.call(entry,"catchLoc");var hasFinally=hasOwn.call(entry,"finallyLoc");if(hasCatch&&hasFinally){if(this.prev<entry.catchLoc){return handle(entry.catchLoc,true);}else if(this.prev<entry.finallyLoc){return handle(entry.finallyLoc);}}else if(hasCatch){if(this.prev<entry.catchLoc){return handle(entry.catchLoc,true);}}else if(hasFinally){if(this.prev<entry.finallyLoc){return handle(entry.finallyLoc);}}else{throw new Error("try statement without catch or finally");}}}},abrupt:function abrupt(type,arg){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc<=this.prev&&hasOwn.call(entry,"finallyLoc")&&this.prev<entry.finallyLoc){var finallyEntry=entry;break;}}if(finallyEntry&&(type==="break"||type==="continue")&&finallyEntry.tryLoc<=arg&&arg<=finallyEntry.finallyLoc){finallyEntry=null;}var record=finallyEntry?finallyEntry.completion:{};record.type=type;record.arg=arg;if(finallyEntry){this.method="next";this.next=finallyEntry.finallyLoc;return ContinueSentinel;}return this.complete(record);},complete:function complete(record,afterLoc){if(record.type==="throw"){throw record.arg;}if(record.type==="break"||record.type==="continue"){this.next=record.arg;}else if(record.type==="return"){this.rval=this.arg=record.arg;this.method="return";this.next="end";}else if(record.type==="normal"&&afterLoc){this.next=afterLoc;}return ContinueSentinel;},finish:function finish(finallyLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.finallyLoc===finallyLoc){this.complete(entry.completion,entry.afterLoc);resetTryEntry(entry);return ContinueSentinel;}}},"catch":function _catch(tryLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc===tryLoc){var record=entry.completion;if(record.type==="throw"){var thrown=record.arg;resetTryEntry(entry);}return thrown;}}throw new Error("illegal catch attempt");},delegateYield:function delegateYield(iterable,resultName,nextLoc){this.delegate={iterator:values(iterable),resultName:resultName,nextLoc:nextLoc};if(this.method==="next"){this.arg=undefined;}return ContinueSentinel;}};}(function(){return this;}()||Function("return this")());/* WEBPACK VAR INJECTION */}).call(this,__w_pdfjs_require__(134)(module));/***/},/* 134 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";module.exports=function(module){if(!module.webpackPolyfill){module.deprecate=function(){};module.paths=[];if(!module.children)module.children=[];Object.defineProperty(module,"loaded",{enumerable:true,get:function get(){return module.l;}});Object.defineProperty(module,"id",{enumerable:true,get:function get(){return module.i;}});module.webpackPolyfill=1;}return module;};/***/},/* 135 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ChunkedStreamManager=exports.ChunkedStream=undefined;var _util=__w_pdfjs_require__(2);var ChunkedStream=function ChunkedStreamClosure(){function ChunkedStream(length,chunkSize,manager){this.bytes=new Uint8Array(length);this.start=0;this.pos=0;this.end=length;this.chunkSize=chunkSize;this.loadedChunks=[];this.numChunksLoaded=0;this.numChunks=Math.ceil(length/chunkSize);this.manager=manager;this.progressiveDataLength=0;this.lastSuccessfulEnsureByteChunk=-1;}ChunkedStream.prototype={getMissingChunks:function ChunkedStream_getMissingChunks(){var chunks=[];for(var chunk=0,n=this.numChunks;chunk<n;++chunk){if(!this.loadedChunks[chunk]){chunks.push(chunk);}}return chunks;},getBaseStreams:function ChunkedStream_getBaseStreams(){return[this];},allChunksLoaded:function ChunkedStream_allChunksLoaded(){return this.numChunksLoaded===this.numChunks;},onReceiveData:function ChunkedStream_onReceiveData(begin,chunk){var end=begin+chunk.byteLength;if(begin%this.chunkSize!==0){throw new Error('Bad begin offset: '+begin);}var length=this.bytes.length;if(end%this.chunkSize!==0&&end!==length){throw new Error('Bad end offset: '+end);}this.bytes.set(new Uint8Array(chunk),begin);var chunkSize=this.chunkSize;var beginChunk=Math.floor(begin/chunkSize);var endChunk=Math.floor((end-1)/chunkSize)+1;var curChunk;for(curChunk=beginChunk;curChunk<endChunk;++curChunk){if(!this.loadedChunks[curChunk]){this.loadedChunks[curChunk]=true;++this.numChunksLoaded;}}},onReceiveProgressiveData:function ChunkedStream_onReceiveProgressiveData(data){var position=this.progressiveDataLength;var beginChunk=Math.floor(position/this.chunkSize);this.bytes.set(new Uint8Array(data),position);position+=data.byteLength;this.progressiveDataLength=position;var endChunk=position>=this.end?this.numChunks:Math.floor(position/this.chunkSize);var curChunk;for(curChunk=beginChunk;curChunk<endChunk;++curChunk){if(!this.loadedChunks[curChunk]){this.loadedChunks[curChunk]=true;++this.numChunksLoaded;}}},ensureByte:function ChunkedStream_ensureByte(pos){var chunk=Math.floor(pos/this.chunkSize);if(chunk===this.lastSuccessfulEnsureByteChunk){return;}if(!this.loadedChunks[chunk]){throw new _util.MissingDataException(pos,pos+1);}this.lastSuccessfulEnsureByteChunk=chunk;},ensureRange:function ChunkedStream_ensureRange(begin,end){if(begin>=end){return;}if(end<=this.progressiveDataLength){return;}var chunkSize=this.chunkSize;var beginChunk=Math.floor(begin/chunkSize);var endChunk=Math.floor((end-1)/chunkSize)+1;for(var chunk=beginChunk;chunk<endChunk;++chunk){if(!this.loadedChunks[chunk]){throw new _util.MissingDataException(begin,end);}}},nextEmptyChunk:function ChunkedStream_nextEmptyChunk(beginChunk){var chunk,numChunks=this.numChunks;for(var i=0;i<numChunks;++i){chunk=(beginChunk+i)%numChunks;if(!this.loadedChunks[chunk]){return chunk;}}return null;},hasChunk:function ChunkedStream_hasChunk(chunk){return!!this.loadedChunks[chunk];},get length(){return this.end-this.start;},get isEmpty(){return this.length===0;},getByte:function ChunkedStream_getByte(){var pos=this.pos;if(pos>=this.end){return-1;}this.ensureByte(pos);return this.bytes[this.pos++];},getUint16:function ChunkedStream_getUint16(){var b0=this.getByte();var b1=this.getByte();if(b0===-1||b1===-1){return-1;}return(b0<<8)+b1;},getInt32:function ChunkedStream_getInt32(){var b0=this.getByte();var b1=this.getByte();var b2=this.getByte();var b3=this.getByte();return(b0<<24)+(b1<<16)+(b2<<8)+b3;},getBytes:function getBytes(length){var forceClamped=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var bytes=this.bytes;var pos=this.pos;var strEnd=this.end;if(!length){this.ensureRange(pos,strEnd);var _subarray=bytes.subarray(pos,strEnd);return forceClamped?new Uint8ClampedArray(_subarray):_subarray;}var end=pos+length;if(end>strEnd){end=strEnd;}this.ensureRange(pos,end);this.pos=end;var subarray=bytes.subarray(pos,end);return forceClamped?new Uint8ClampedArray(subarray):subarray;},peekByte:function ChunkedStream_peekByte(){var peekedByte=this.getByte();this.pos--;return peekedByte;},peekBytes:function peekBytes(length){var forceClamped=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var bytes=this.getBytes(length,forceClamped);this.pos-=bytes.length;return bytes;},getByteRange:function ChunkedStream_getBytes(begin,end){this.ensureRange(begin,end);return this.bytes.subarray(begin,end);},skip:function ChunkedStream_skip(n){if(!n){n=1;}this.pos+=n;},reset:function ChunkedStream_reset(){this.pos=this.start;},moveStart:function ChunkedStream_moveStart(){this.start=this.pos;},makeSubStream:function ChunkedStream_makeSubStream(start,length,dict){this.ensureRange(start,start+length);function ChunkedStreamSubstream(){}ChunkedStreamSubstream.prototype=Object.create(this);ChunkedStreamSubstream.prototype.getMissingChunks=function(){var chunkSize=this.chunkSize;var beginChunk=Math.floor(this.start/chunkSize);var endChunk=Math.floor((this.end-1)/chunkSize)+1;var missingChunks=[];for(var chunk=beginChunk;chunk<endChunk;++chunk){if(!this.loadedChunks[chunk]){missingChunks.push(chunk);}}return missingChunks;};var subStream=new ChunkedStreamSubstream();subStream.pos=subStream.start=start;subStream.end=start+length||this.end;subStream.dict=dict;return subStream;}};return ChunkedStream;}();var ChunkedStreamManager=function ChunkedStreamManagerClosure(){function ChunkedStreamManager(pdfNetworkStream,args){var chunkSize=args.rangeChunkSize;var length=args.length;this.stream=new ChunkedStream(length,chunkSize,this);this.length=length;this.chunkSize=chunkSize;this.pdfNetworkStream=pdfNetworkStream;this.url=args.url;this.disableAutoFetch=args.disableAutoFetch;this.msgHandler=args.msgHandler;this.currRequestId=0;this.chunksNeededByRequest=Object.create(null);this.requestsByChunk=Object.create(null);this.promisesByRequest=Object.create(null);this.progressiveDataLength=0;this.aborted=false;this._loadedStreamCapability=(0,_util.createPromiseCapability)();}ChunkedStreamManager.prototype={onLoadedStream:function ChunkedStreamManager_getLoadedStream(){return this._loadedStreamCapability.promise;},sendRequest:function ChunkedStreamManager_sendRequest(begin,end){var _this=this;var rangeReader=this.pdfNetworkStream.getRangeReader(begin,end);if(!rangeReader.isStreamingSupported){rangeReader.onProgress=this.onProgress.bind(this);}var chunks=[],loaded=0;var manager=this;var promise=new Promise(function(resolve,reject){var readChunk=function readChunk(chunk){try{if(!chunk.done){var data=chunk.value;chunks.push(data);loaded+=(0,_util.arrayByteLength)(data);if(rangeReader.isStreamingSupported){manager.onProgress({loaded:loaded});}rangeReader.read().then(readChunk,reject);return;}var chunkData=(0,_util.arraysToBytes)(chunks);chunks=null;resolve(chunkData);}catch(e){reject(e);}};rangeReader.read().then(readChunk,reject);});promise.then(function(data){if(_this.aborted){return;}_this.onReceiveData({chunk:data,begin:begin});});},requestAllChunks:function ChunkedStreamManager_requestAllChunks(){var missingChunks=this.stream.getMissingChunks();this._requestChunks(missingChunks);return this._loadedStreamCapability.promise;},_requestChunks:function ChunkedStreamManager_requestChunks(chunks){var requestId=this.currRequestId++;var i,ii;var chunksNeeded=Object.create(null);this.chunksNeededByRequest[requestId]=chunksNeeded;for(i=0,ii=chunks.length;i<ii;i++){if(!this.stream.hasChunk(chunks[i])){chunksNeeded[chunks[i]]=true;}}if((0,_util.isEmptyObj)(chunksNeeded)){return Promise.resolve();}var capability=(0,_util.createPromiseCapability)();this.promisesByRequest[requestId]=capability;var chunksToRequest=[];for(var chunk in chunksNeeded){chunk=chunk|0;if(!(chunk in this.requestsByChunk)){this.requestsByChunk[chunk]=[];chunksToRequest.push(chunk);}this.requestsByChunk[chunk].push(requestId);}if(!chunksToRequest.length){return capability.promise;}var groupedChunksToRequest=this.groupChunks(chunksToRequest);for(i=0;i<groupedChunksToRequest.length;++i){var groupedChunk=groupedChunksToRequest[i];var begin=groupedChunk.beginChunk*this.chunkSize;var end=Math.min(groupedChunk.endChunk*this.chunkSize,this.length);this.sendRequest(begin,end);}return capability.promise;},getStream:function ChunkedStreamManager_getStream(){return this.stream;},requestRange:function ChunkedStreamManager_requestRange(begin,end){end=Math.min(end,this.length);var beginChunk=this.getBeginChunk(begin);var endChunk=this.getEndChunk(end);var chunks=[];for(var chunk=beginChunk;chunk<endChunk;++chunk){chunks.push(chunk);}return this._requestChunks(chunks);},requestRanges:function ChunkedStreamManager_requestRanges(ranges){ranges=ranges||[];var chunksToRequest=[];for(var i=0;i<ranges.length;i++){var beginChunk=this.getBeginChunk(ranges[i].begin);var endChunk=this.getEndChunk(ranges[i].end);for(var chunk=beginChunk;chunk<endChunk;++chunk){if(!chunksToRequest.includes(chunk)){chunksToRequest.push(chunk);}}}chunksToRequest.sort(function(a,b){return a-b;});return this._requestChunks(chunksToRequest);},groupChunks:function ChunkedStreamManager_groupChunks(chunks){var groupedChunks=[];var beginChunk=-1;var prevChunk=-1;for(var i=0;i<chunks.length;++i){var chunk=chunks[i];if(beginChunk<0){beginChunk=chunk;}if(prevChunk>=0&&prevChunk+1!==chunk){groupedChunks.push({beginChunk:beginChunk,endChunk:prevChunk+1});beginChunk=chunk;}if(i+1===chunks.length){groupedChunks.push({beginChunk:beginChunk,endChunk:chunk+1});}prevChunk=chunk;}return groupedChunks;},onProgress:function ChunkedStreamManager_onProgress(args){var bytesLoaded=this.stream.numChunksLoaded*this.chunkSize+args.loaded;this.msgHandler.send('DocProgress',{loaded:bytesLoaded,total:this.length});},onReceiveData:function ChunkedStreamManager_onReceiveData(args){var chunk=args.chunk;var isProgressive=args.begin===undefined;var begin=isProgressive?this.progressiveDataLength:args.begin;var end=begin+chunk.byteLength;var beginChunk=Math.floor(begin/this.chunkSize);var endChunk=end<this.length?Math.floor(end/this.chunkSize):Math.ceil(end/this.chunkSize);if(isProgressive){this.stream.onReceiveProgressiveData(chunk);this.progressiveDataLength=end;}else{this.stream.onReceiveData(begin,chunk);}if(this.stream.allChunksLoaded()){this._loadedStreamCapability.resolve(this.stream);}var loadedRequests=[];var i,requestId;for(chunk=beginChunk;chunk<endChunk;++chunk){var requestIds=this.requestsByChunk[chunk]||[];delete this.requestsByChunk[chunk];for(i=0;i<requestIds.length;++i){requestId=requestIds[i];var chunksNeeded=this.chunksNeededByRequest[requestId];if(chunk in chunksNeeded){delete chunksNeeded[chunk];}if(!(0,_util.isEmptyObj)(chunksNeeded)){continue;}loadedRequests.push(requestId);}}if(!this.disableAutoFetch&&(0,_util.isEmptyObj)(this.requestsByChunk)){var nextEmptyChunk;if(this.stream.numChunksLoaded===1){var lastChunk=this.stream.numChunks-1;if(!this.stream.hasChunk(lastChunk)){nextEmptyChunk=lastChunk;}}else{nextEmptyChunk=this.stream.nextEmptyChunk(endChunk);}if(Number.isInteger(nextEmptyChunk)){this._requestChunks([nextEmptyChunk]);}}for(i=0;i<loadedRequests.length;++i){requestId=loadedRequests[i];var capability=this.promisesByRequest[requestId];delete this.promisesByRequest[requestId];capability.resolve();}this.msgHandler.send('DocProgress',{loaded:this.stream.numChunksLoaded*this.chunkSize,total:this.length});},onError:function ChunkedStreamManager_onError(err){this._loadedStreamCapability.reject(err);},getBeginChunk:function ChunkedStreamManager_getBeginChunk(begin){var chunk=Math.floor(begin/this.chunkSize);return chunk;},getEndChunk:function ChunkedStreamManager_getEndChunk(end){var chunk=Math.floor((end-1)/this.chunkSize)+1;return chunk;},abort:function ChunkedStreamManager_abort(){this.aborted=true;if(this.pdfNetworkStream){this.pdfNetworkStream.cancelAllRequests('abort');}for(var requestId in this.promisesByRequest){var capability=this.promisesByRequest[requestId];capability.reject(new Error('Request was aborted'));}}};return ChunkedStreamManager;}();exports.ChunkedStream=ChunkedStream;exports.ChunkedStreamManager=ChunkedStreamManager;/***/},/* 136 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.PDFDocument=exports.Page=undefined;var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _util=__w_pdfjs_require__(2);var _obj=__w_pdfjs_require__(137);var _primitives=__w_pdfjs_require__(138);var _stream=__w_pdfjs_require__(140);var _annotation=__w_pdfjs_require__(152);var _crypto=__w_pdfjs_require__(150);var _parser=__w_pdfjs_require__(139);var _operator_list=__w_pdfjs_require__(153);var _evaluator=__w_pdfjs_require__(154);var _function=__w_pdfjs_require__(168);var Page=function PageClosure(){var DEFAULT_USER_UNIT=1.0;var LETTER_SIZE_MEDIABOX=[0,0,612,792];function isAnnotationRenderable(annotation,intent){return intent==='display'&&annotation.viewable||intent==='print'&&annotation.printable;}function Page(_ref){var pdfManager=_ref.pdfManager,xref=_ref.xref,pageIndex=_ref.pageIndex,pageDict=_ref.pageDict,ref=_ref.ref,fontCache=_ref.fontCache,builtInCMapCache=_ref.builtInCMapCache,pdfFunctionFactory=_ref.pdfFunctionFactory;this.pdfManager=pdfManager;this.pageIndex=pageIndex;this.pageDict=pageDict;this.xref=xref;this.ref=ref;this.fontCache=fontCache;this.builtInCMapCache=builtInCMapCache;this.pdfFunctionFactory=pdfFunctionFactory;this.evaluatorOptions=pdfManager.evaluatorOptions;this.resourcesPromise=null;var uniquePrefix='p'+this.pageIndex+'_';var idCounters={obj:0};this.idFactory={createObjId:function createObjId(){return uniquePrefix+ ++idCounters.obj;}};}Page.prototype={_getInheritableProperty:function _getInheritableProperty(key){var getArray=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var value=(0,_util.getInheritableProperty)({dict:this.pageDict,key:key,getArray:getArray,stopWhenFound:false});if(!Array.isArray(value)){return value;}if(value.length===1||!(0,_primitives.isDict)(value[0])){return value[0];}return _primitives.Dict.merge(this.xref,value);},get content(){return this.pageDict.get('Contents');},get resources(){return(0,_util.shadow)(this,'resources',this._getInheritableProperty('Resources')||_primitives.Dict.empty);},get mediaBox(){var mediaBox=this._getInheritableProperty('MediaBox',true);if(!Array.isArray(mediaBox)||mediaBox.length!==4){return(0,_util.shadow)(this,'mediaBox',LETTER_SIZE_MEDIABOX);}return(0,_util.shadow)(this,'mediaBox',mediaBox);},get cropBox(){var cropBox=this._getInheritableProperty('CropBox',true);if(!Array.isArray(cropBox)||cropBox.length!==4){return(0,_util.shadow)(this,'cropBox',this.mediaBox);}return(0,_util.shadow)(this,'cropBox',cropBox);},get userUnit(){var obj=this.pageDict.get('UserUnit');if(!(0,_util.isNum)(obj)||obj<=0){obj=DEFAULT_USER_UNIT;}return(0,_util.shadow)(this,'userUnit',obj);},get view(){var mediaBox=this.mediaBox,cropBox=this.cropBox;if(mediaBox===cropBox){return(0,_util.shadow)(this,'view',mediaBox);}var intersection=_util.Util.intersect(cropBox,mediaBox);return(0,_util.shadow)(this,'view',intersection||mediaBox);},get rotate(){var rotate=this._getInheritableProperty('Rotate')||0;if(rotate%90!==0){rotate=0;}else if(rotate>=360){rotate=rotate%360;}else if(rotate<0){rotate=(rotate%360+360)%360;}return(0,_util.shadow)(this,'rotate',rotate);},getContentStream:function Page_getContentStream(){var content=this.content;var stream;if(Array.isArray(content)){var xref=this.xref;var i,n=content.length;var streams=[];for(i=0;i<n;++i){streams.push(xref.fetchIfRef(content[i]));}stream=new _stream.StreamsSequenceStream(streams);}else if((0,_primitives.isStream)(content)){stream=content;}else{stream=new _stream.NullStream();}return stream;},loadResources:function Page_loadResources(keys){var _this=this;if(!this.resourcesPromise){this.resourcesPromise=this.pdfManager.ensure(this,'resources');}return this.resourcesPromise.then(function(){var objectLoader=new _obj.ObjectLoader(_this.resources,keys,_this.xref);return objectLoader.load();});},getOperatorList:function getOperatorList(_ref2){var _this2=this;var handler=_ref2.handler,task=_ref2.task,intent=_ref2.intent,renderInteractiveForms=_ref2.renderInteractiveForms;var contentStreamPromise=this.pdfManager.ensure(this,'getContentStream');var resourcesPromise=this.loadResources(['ExtGState','ColorSpace','Pattern','Shading','XObject','Font']);var partialEvaluator=new _evaluator.PartialEvaluator({pdfManager:this.pdfManager,xref:this.xref,handler:handler,pageIndex:this.pageIndex,idFactory:this.idFactory,fontCache:this.fontCache,builtInCMapCache:this.builtInCMapCache,options:this.evaluatorOptions,pdfFunctionFactory:this.pdfFunctionFactory});var dataPromises=Promise.all([contentStreamPromise,resourcesPromise]);var pageListPromise=dataPromises.then(function(_ref3){var _ref4=_slicedToArray(_ref3,1),contentStream=_ref4[0];var opList=new _operator_list.OperatorList(intent,handler,_this2.pageIndex);handler.send('StartRenderPage',{transparency:partialEvaluator.hasBlendModes(_this2.resources),pageIndex:_this2.pageIndex,intent:intent});return partialEvaluator.getOperatorList({stream:contentStream,task:task,resources:_this2.resources,operatorList:opList}).then(function(){return opList;});});return Promise.all([pageListPromise,this._parsedAnnotations]).then(function(_ref5){var _ref6=_slicedToArray(_ref5,2),pageOpList=_ref6[0],annotations=_ref6[1];if(annotations.length===0){pageOpList.flush(true);return pageOpList;}var i,ii,opListPromises=[];for(i=0,ii=annotations.length;i<ii;i++){if(isAnnotationRenderable(annotations[i],intent)){opListPromises.push(annotations[i].getOperatorList(partialEvaluator,task,renderInteractiveForms));}}return Promise.all(opListPromises).then(function(opLists){pageOpList.addOp(_util.OPS.beginAnnotations,[]);for(i=0,ii=opLists.length;i<ii;i++){pageOpList.addOpList(opLists[i]);}pageOpList.addOp(_util.OPS.endAnnotations,[]);pageOpList.flush(true);return pageOpList;});});},extractTextContent:function extractTextContent(_ref7){var _this3=this;var handler=_ref7.handler,task=_ref7.task,normalizeWhitespace=_ref7.normalizeWhitespace,sink=_ref7.sink,combineTextItems=_ref7.combineTextItems;var contentStreamPromise=this.pdfManager.ensure(this,'getContentStream');var resourcesPromise=this.loadResources(['ExtGState','XObject','Font']);var dataPromises=Promise.all([contentStreamPromise,resourcesPromise]);return dataPromises.then(function(_ref8){var _ref9=_slicedToArray(_ref8,1),contentStream=_ref9[0];var partialEvaluator=new _evaluator.PartialEvaluator({pdfManager:_this3.pdfManager,xref:_this3.xref,handler:handler,pageIndex:_this3.pageIndex,idFactory:_this3.idFactory,fontCache:_this3.fontCache,builtInCMapCache:_this3.builtInCMapCache,options:_this3.evaluatorOptions,pdfFunctionFactory:_this3.pdfFunctionFactory});return partialEvaluator.getTextContent({stream:contentStream,task:task,resources:_this3.resources,normalizeWhitespace:normalizeWhitespace,combineTextItems:combineTextItems,sink:sink});});},getAnnotationsData:function getAnnotationsData(intent){return this._parsedAnnotations.then(function(annotations){var annotationsData=[];for(var i=0,ii=annotations.length;i<ii;i++){if(!intent||isAnnotationRenderable(annotations[i],intent)){annotationsData.push(annotations[i].data);}}return annotationsData;});},get annotations(){return(0,_util.shadow)(this,'annotations',this._getInheritableProperty('Annots')||[]);},get _parsedAnnotations(){var _this4=this;var parsedAnnotations=this.pdfManager.ensure(this,'annotations').then(function(){var annotationRefs=_this4.annotations;var annotationPromises=[];for(var i=0,ii=annotationRefs.length;i<ii;i++){annotationPromises.push(_annotation.AnnotationFactory.create(_this4.xref,annotationRefs[i],_this4.pdfManager,_this4.idFactory));}return Promise.all(annotationPromises).then(function(annotations){return annotations.filter(function isDefined(annotation){return!!annotation;});},function(reason){(0,_util.warn)('_parsedAnnotations: "'+reason+'".');return[];});});return(0,_util.shadow)(this,'_parsedAnnotations',parsedAnnotations);}};return Page;}();var PDFDocument=function PDFDocumentClosure(){var FINGERPRINT_FIRST_BYTES=1024;var EMPTY_FINGERPRINT='\x00\x00\x00\x00\x00\x00\x00'+'\x00\x00\x00\x00\x00\x00\x00\x00\x00';function PDFDocument(pdfManager,arg){var stream;if((0,_primitives.isStream)(arg)){stream=arg;}else if((0,_util.isArrayBuffer)(arg)){stream=new _stream.Stream(arg);}else{throw new Error('PDFDocument: Unknown argument type');}if(stream.length<=0){throw new Error('PDFDocument: stream must have data');}this.pdfManager=pdfManager;this.stream=stream;this.xref=new _obj.XRef(stream,pdfManager);var evaluatorOptions=pdfManager.evaluatorOptions;this.pdfFunctionFactory=new _function.PDFFunctionFactory({xref:this.xref,isEvalSupported:evaluatorOptions.isEvalSupported});this._pagePromises=[];}function find(stream,needle,limit,backwards){var pos=stream.pos;var end=stream.end;var strBuf=[];if(pos+limit>end){limit=end-pos;}for(var n=0;n<limit;++n){strBuf.push(String.fromCharCode(stream.getByte()));}var str=strBuf.join('');stream.pos=pos;var index=backwards?str.lastIndexOf(needle):str.indexOf(needle);if(index===-1){return false;}stream.pos+=index;return true;}var DocumentInfoValidators={Title:_util.isString,Author:_util.isString,Subject:_util.isString,Keywords:_util.isString,Creator:_util.isString,Producer:_util.isString,CreationDate:_util.isString,ModDate:_util.isString,Trapped:_primitives.isName};PDFDocument.prototype={parse:function PDFDocument_parse(recoveryMode){this.setup(recoveryMode);var version=this.catalog.catDict.get('Version');if((0,_primitives.isName)(version)){this.pdfFormatVersion=version.name;}try{this.acroForm=this.catalog.catDict.get('AcroForm');if(this.acroForm){this.xfa=this.acroForm.get('XFA');var fields=this.acroForm.get('Fields');if((!fields||!Array.isArray(fields)||fields.length===0)&&!this.xfa){this.acroForm=null;}}}catch(ex){if(ex instanceof _util.MissingDataException){throw ex;}(0,_util.info)('Something wrong with AcroForm entry');this.acroForm=null;}},get linearization(){var linearization=null;try{linearization=_parser.Linearization.create(this.stream);}catch(err){if(err instanceof _util.MissingDataException){throw err;}(0,_util.info)(err);}return(0,_util.shadow)(this,'linearization',linearization);},get startXRef(){var stream=this.stream;var startXRef=0;var linearization=this.linearization;if(linearization){stream.reset();if(find(stream,'endobj',1024)){startXRef=stream.pos+6;}}else{var step=1024;var found=false,pos=stream.end;while(!found&&pos>0){pos-=step-'startxref'.length;if(pos<0){pos=0;}stream.pos=pos;found=find(stream,'startxref',step,true);}if(found){stream.skip(9);var ch;do{ch=stream.getByte();}while((0,_util.isSpace)(ch));var str='';while(ch>=0x20&&ch<=0x39){str+=String.fromCharCode(ch);ch=stream.getByte();}startXRef=parseInt(str,10);if(isNaN(startXRef)){startXRef=0;}}}return(0,_util.shadow)(this,'startXRef',startXRef);},checkHeader:function PDFDocument_checkHeader(){var stream=this.stream;stream.reset();if(find(stream,'%PDF-',1024)){stream.moveStart();var MAX_VERSION_LENGTH=12;var version='',ch;while((ch=stream.getByte())>0x20){if(version.length>=MAX_VERSION_LENGTH){break;}version+=String.fromCharCode(ch);}if(!this.pdfFormatVersion){this.pdfFormatVersion=version.substring(5);}return;}},parseStartXRef:function PDFDocument_parseStartXRef(){var startXRef=this.startXRef;this.xref.setStartXRef(startXRef);},setup:function PDFDocument_setup(recoveryMode){this.xref.parse(recoveryMode);this.catalog=new _obj.Catalog(this.pdfManager,this.xref);},get numPages(){var linearization=this.linearization;var num=linearization?linearization.numPages:this.catalog.numPages;return(0,_util.shadow)(this,'numPages',num);},get documentInfo(){var docInfo={PDFFormatVersion:this.pdfFormatVersion,IsLinearized:!!this.linearization,IsAcroFormPresent:!!this.acroForm,IsXFAPresent:!!this.xfa};var infoDict=void 0;try{infoDict=this.xref.trailer.get('Info');}catch(err){if(err instanceof _util.MissingDataException){throw err;}(0,_util.info)('The document information dictionary is invalid.');}if((0,_primitives.isDict)(infoDict)){for(var key in DocumentInfoValidators){if(infoDict.has(key)){var value=infoDict.get(key);if(DocumentInfoValidators[key](value)){docInfo[key]=typeof value!=='string'?value:(0,_util.stringToPDFString)(value);}else{(0,_util.info)('Bad value in document info for "'+key+'"');}}}}return(0,_util.shadow)(this,'documentInfo',docInfo);},get fingerprint(){var xref=this.xref,hash,fileID='';var idArray=xref.trailer.get('ID');if(Array.isArray(idArray)&&idArray[0]&&(0,_util.isString)(idArray[0])&&idArray[0]!==EMPTY_FINGERPRINT){hash=(0,_util.stringToBytes)(idArray[0]);}else{if(this.stream.ensureRange){this.stream.ensureRange(0,Math.min(FINGERPRINT_FIRST_BYTES,this.stream.end));}hash=(0,_crypto.calculateMD5)(this.stream.bytes.subarray(0,FINGERPRINT_FIRST_BYTES),0,FINGERPRINT_FIRST_BYTES);}for(var i=0,n=hash.length;i<n;i++){var hex=hash[i].toString(16);fileID+=hex.length===1?'0'+hex:hex;}return(0,_util.shadow)(this,'fingerprint',fileID);},_getLinearizationPage:function _getLinearizationPage(pageIndex){var catalog=this.catalog,linearization=this.linearization;(0,_util.assert)(linearization&&linearization.pageFirst===pageIndex);var ref=new _primitives.Ref(linearization.objectNumberFirst,0);return this.xref.fetchAsync(ref).then(function(obj){if((0,_primitives.isDict)(obj,'Page')||(0,_primitives.isDict)(obj)&&!obj.has('Type')&&obj.has('Contents')){if(ref&&!catalog.pageKidsCountCache.has(ref)){catalog.pageKidsCountCache.put(ref,1);}return[obj,ref];}throw new _util.FormatError('The Linearization dictionary doesn\'t point '+'to a valid Page dictionary.');}).catch(function(reason){(0,_util.info)(reason);return catalog.getPageDict(pageIndex);});},getPage:function getPage(pageIndex){var _this5=this;if(this._pagePromises[pageIndex]!==undefined){return this._pagePromises[pageIndex];}var catalog=this.catalog,linearization=this.linearization;var promise=linearization&&linearization.pageFirst===pageIndex?this._getLinearizationPage(pageIndex):catalog.getPageDict(pageIndex);return this._pagePromises[pageIndex]=promise.then(function(_ref10){var _ref11=_slicedToArray(_ref10,2),pageDict=_ref11[0],ref=_ref11[1];return new Page({pdfManager:_this5.pdfManager,xref:_this5.xref,pageIndex:pageIndex,pageDict:pageDict,ref:ref,fontCache:catalog.fontCache,builtInCMapCache:catalog.builtInCMapCache,pdfFunctionFactory:_this5.pdfFunctionFactory});});},cleanup:function PDFDocument_cleanup(){return this.catalog.cleanup();}};return PDFDocument;}();exports.Page=Page;exports.PDFDocument=PDFDocument;/***/},/* 137 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.FileSpec=exports.XRef=exports.ObjectLoader=exports.Catalog=undefined;var _regenerator=__w_pdfjs_require__(131);var _regenerator2=_interopRequireDefault(_regenerator);var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _typeof=typeof Symbol==="function"&&_typeof3(Symbol.iterator)==="symbol"?function(obj){return _typeof3(obj);}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":_typeof3(obj);};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _util=__w_pdfjs_require__(2);var _primitives=__w_pdfjs_require__(138);var _parser=__w_pdfjs_require__(139);var _chunked_stream=__w_pdfjs_require__(135);var _crypto=__w_pdfjs_require__(150);var _colorspace=__w_pdfjs_require__(151);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(_typeof3(call)==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+_typeof3(superClass));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step("next",value);},function(err){step("throw",err);});}}return step("next");});};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function fetchDestination(dest){return(0,_primitives.isDict)(dest)?dest.get('D'):dest;}var Catalog=function(){function Catalog(pdfManager,xref){_classCallCheck(this,Catalog);this.pdfManager=pdfManager;this.xref=xref;this.catDict=xref.getCatalogObj();if(!(0,_primitives.isDict)(this.catDict)){throw new _util.FormatError('Catalog object is not a dictionary.');}this.fontCache=new _primitives.RefSetCache();this.builtInCMapCache=new Map();this.pageKidsCountCache=new _primitives.RefSetCache();}_createClass(Catalog,[{key:'_readDocumentOutline',value:function _readDocumentOutline(){var obj=this.catDict.get('Outlines');if(!(0,_primitives.isDict)(obj)){return null;}obj=obj.getRaw('First');if(!(0,_primitives.isRef)(obj)){return null;}var root={items:[]};var queue=[{obj:obj,parent:root}];var processed=new _primitives.RefSet();processed.put(obj);var xref=this.xref,blackColor=new Uint8ClampedArray(3);while(queue.length>0){var i=queue.shift();var outlineDict=xref.fetchIfRef(i.obj);if(outlineDict===null){continue;}if(!outlineDict.has('Title')){throw new _util.FormatError('Invalid outline item encountered.');}var data={url:null,dest:null};Catalog.parseDestDictionary({destDict:outlineDict,resultObj:data,docBaseUrl:this.pdfManager.docBaseUrl});var title=outlineDict.get('Title');var flags=outlineDict.get('F')||0;var color=outlineDict.getArray('C');var rgbColor=blackColor;if(Array.isArray(color)&&color.length===3&&(color[0]!==0||color[1]!==0||color[2]!==0)){rgbColor=_colorspace.ColorSpace.singletons.rgb.getRgb(color,0);}var outlineItem={dest:data.dest,url:data.url,unsafeUrl:data.unsafeUrl,newWindow:data.newWindow,title:(0,_util.stringToPDFString)(title),color:rgbColor,count:outlineDict.get('Count'),bold:!!(flags&2),italic:!!(flags&1),items:[]};i.parent.items.push(outlineItem);obj=outlineDict.getRaw('First');if((0,_primitives.isRef)(obj)&&!processed.has(obj)){queue.push({obj:obj,parent:outlineItem});processed.put(obj);}obj=outlineDict.getRaw('Next');if((0,_primitives.isRef)(obj)&&!processed.has(obj)){queue.push({obj:obj,parent:i.parent});processed.put(obj);}}return root.items.length>0?root.items:null;}},{key:'_readPermissions',value:function _readPermissions(){var encrypt=this.xref.trailer.get('Encrypt');if(!(0,_primitives.isDict)(encrypt)){return null;}var flags=encrypt.get('P');if(!(0,_util.isNum)(flags)){return null;}flags+=Math.pow(2,32);var permissions=[];for(var key in _util.PermissionFlag){var value=_util.PermissionFlag[key];if(flags&value){permissions.push(value);}}return permissions;}},{key:'getDestination',value:function getDestination(destinationId){var obj=this._readDests();if(obj instanceof NameTree||obj instanceof _primitives.Dict){return fetchDestination(obj.get(destinationId)||null);}return null;}},{key:'_readDests',value:function _readDests(){var obj=this.catDict.get('Names');if(obj&&obj.has('Dests')){return new NameTree(obj.getRaw('Dests'),this.xref);}else if(this.catDict.has('Dests')){return this.catDict.get('Dests');}}},{key:'_readPageLabels',value:function _readPageLabels(){var obj=this.catDict.getRaw('PageLabels');if(!obj){return null;}var pageLabels=new Array(this.numPages);var style=null,prefix='';var numberTree=new NumberTree(obj,this.xref);var nums=numberTree.getAll();var currentLabel='',currentIndex=1;for(var i=0,ii=this.numPages;i<ii;i++){if(i in nums){var labelDict=nums[i];if(!(0,_primitives.isDict)(labelDict)){throw new _util.FormatError('PageLabel is not a dictionary.');}if(labelDict.has('Type')&&!(0,_primitives.isName)(labelDict.get('Type'),'PageLabel')){throw new _util.FormatError('Invalid type in PageLabel dictionary.');}if(labelDict.has('S')){var s=labelDict.get('S');if(!(0,_primitives.isName)(s)){throw new _util.FormatError('Invalid style in PageLabel dictionary.');}style=s.name;}else{style=null;}if(labelDict.has('P')){var p=labelDict.get('P');if(!(0,_util.isString)(p)){throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');}prefix=(0,_util.stringToPDFString)(p);}else{prefix='';}if(labelDict.has('St')){var st=labelDict.get('St');if(!(Number.isInteger(st)&&st>=1)){throw new _util.FormatError('Invalid start in PageLabel dictionary.');}currentIndex=st;}else{currentIndex=1;}}switch(style){case'D':currentLabel=currentIndex;break;case'R':case'r':currentLabel=(0,_util.toRomanNumerals)(currentIndex,style==='r');break;case'A':case'a':var LIMIT=26;var A_UPPER_CASE=0x41,A_LOWER_CASE=0x61;var baseCharCode=style==='a'?A_LOWER_CASE:A_UPPER_CASE;var letterIndex=currentIndex-1;var character=String.fromCharCode(baseCharCode+letterIndex%LIMIT);var charBuf=[];for(var j=0,jj=letterIndex/LIMIT|0;j<=jj;j++){charBuf.push(character);}currentLabel=charBuf.join('');break;default:if(style){throw new _util.FormatError('Invalid style "'+style+'" in PageLabel dictionary.');}currentLabel='';}pageLabels[i]=prefix+currentLabel;currentIndex++;}return pageLabels;}},{key:'cleanup',value:function cleanup(){var _this=this;this.pageKidsCountCache.clear();var promises=[];this.fontCache.forEach(function(promise){promises.push(promise);});return Promise.all(promises).then(function(translatedFonts){for(var i=0,ii=translatedFonts.length;i<ii;i++){var font=translatedFonts[i].dict;delete font.translated;}_this.fontCache.clear();_this.builtInCMapCache.clear();});}},{key:'getPageDict',value:function getPageDict(pageIndex){var capability=(0,_util.createPromiseCapability)();var nodesToVisit=[this.catDict.getRaw('Pages')];var xref=this.xref,pageKidsCountCache=this.pageKidsCountCache;var count=void 0,currentPageIndex=0;function next(){var _loop=function _loop(){var currentNode=nodesToVisit.pop();if((0,_primitives.isRef)(currentNode)){count=pageKidsCountCache.get(currentNode);if(count>0&&currentPageIndex+count<pageIndex){currentPageIndex+=count;return'continue';}xref.fetchAsync(currentNode).then(function(obj){if((0,_primitives.isDict)(obj,'Page')||(0,_primitives.isDict)(obj)&&!obj.has('Kids')){if(pageIndex===currentPageIndex){if(currentNode&&!pageKidsCountCache.has(currentNode)){pageKidsCountCache.put(currentNode,1);}capability.resolve([obj,currentNode]);}else{currentPageIndex++;next();}return;}nodesToVisit.push(obj);next();},capability.reject);return{v:void 0};}if(!(0,_primitives.isDict)(currentNode)){capability.reject(new _util.FormatError('Page dictionary kid reference points to wrong type of object.'));return{v:void 0};}count=currentNode.get('Count');if(Number.isInteger(count)&&count>=0){var objId=currentNode.objId;if(objId&&!pageKidsCountCache.has(objId)){pageKidsCountCache.put(objId,count);}if(currentPageIndex+count<=pageIndex){currentPageIndex+=count;return'continue';}}var kids=currentNode.get('Kids');if(!Array.isArray(kids)){if((0,_primitives.isName)(currentNode.get('Type'),'Page')||!currentNode.has('Type')&&currentNode.has('Contents')){if(currentPageIndex===pageIndex){capability.resolve([currentNode,null]);return{v:void 0};}currentPageIndex++;return'continue';}capability.reject(new _util.FormatError('Page dictionary kids object is not an array.'));return{v:void 0};}for(var last=kids.length-1;last>=0;last--){nodesToVisit.push(kids[last]);}};while(nodesToVisit.length){var _ret=_loop();switch(_ret){case'continue':continue;default:if((typeof _ret==='undefined'?'undefined':_typeof(_ret))==="object")return _ret.v;}}capability.reject(new Error('Page index '+pageIndex+' not found.'));}next();return capability.promise;}},{key:'getPageIndex',value:function getPageIndex(pageRef){var xref=this.xref;function pagesBeforeRef(kidRef){var total=0,parentRef=void 0;return xref.fetchAsync(kidRef).then(function(node){if((0,_primitives.isRefsEqual)(kidRef,pageRef)&&!(0,_primitives.isDict)(node,'Page')&&!((0,_primitives.isDict)(node)&&!node.has('Type')&&node.has('Contents'))){throw new _util.FormatError('The reference does not point to a /Page dictionary.');}if(!node){return null;}if(!(0,_primitives.isDict)(node)){throw new _util.FormatError('Node must be a dictionary.');}parentRef=node.getRaw('Parent');return node.getAsync('Parent');}).then(function(parent){if(!parent){return null;}if(!(0,_primitives.isDict)(parent)){throw new _util.FormatError('Parent must be a dictionary.');}return parent.getAsync('Kids');}).then(function(kids){if(!kids){return null;}var kidPromises=[];var found=false;for(var i=0,ii=kids.length;i<ii;i++){var kid=kids[i];if(!(0,_primitives.isRef)(kid)){throw new _util.FormatError('Kid must be a reference.');}if((0,_primitives.isRefsEqual)(kid,kidRef)){found=true;break;}kidPromises.push(xref.fetchAsync(kid).then(function(kid){if(!(0,_primitives.isDict)(kid)){throw new _util.FormatError('Kid node must be a dictionary.');}if(kid.has('Count')){total+=kid.get('Count');}else{total++;}}));}if(!found){throw new _util.FormatError('Kid reference not found in parent\'s kids.');}return Promise.all(kidPromises).then(function(){return[total,parentRef];});});}var total=0;function next(ref){return pagesBeforeRef(ref).then(function(args){if(!args){return total;}var _args=_slicedToArray(args,2),count=_args[0],parentRef=_args[1];total+=count;return next(parentRef);});}return next(pageRef);}},{key:'metadata',get:function get(){var streamRef=this.catDict.getRaw('Metadata');if(!(0,_primitives.isRef)(streamRef)){return(0,_util.shadow)(this,'metadata',null);}var suppressEncryption=!(this.xref.encrypt&&this.xref.encrypt.encryptMetadata);var stream=this.xref.fetch(streamRef,suppressEncryption);var metadata=void 0;if(stream&&(0,_primitives.isDict)(stream.dict)){var type=stream.dict.get('Type');var subtype=stream.dict.get('Subtype');if((0,_primitives.isName)(type,'Metadata')&&(0,_primitives.isName)(subtype,'XML')){try{metadata=(0,_util.stringToUTF8String)((0,_util.bytesToString)(stream.getBytes()));}catch(e){if(e instanceof _util.MissingDataException){throw e;}(0,_util.info)('Skipping invalid metadata.');}}}return(0,_util.shadow)(this,'metadata',metadata);}},{key:'toplevelPagesDict',get:function get(){var pagesObj=this.catDict.get('Pages');if(!(0,_primitives.isDict)(pagesObj)){throw new _util.FormatError('Invalid top-level pages dictionary.');}return(0,_util.shadow)(this,'toplevelPagesDict',pagesObj);}},{key:'documentOutline',get:function get(){var obj=null;try{obj=this._readDocumentOutline();}catch(ex){if(ex instanceof _util.MissingDataException){throw ex;}(0,_util.warn)('Unable to read document outline.');}return(0,_util.shadow)(this,'documentOutline',obj);}},{key:'permissions',get:function get(){var permissions=null;try{permissions=this._readPermissions();}catch(ex){if(ex instanceof _util.MissingDataException){throw ex;}(0,_util.warn)('Unable to read permissions.');}return(0,_util.shadow)(this,'permissions',permissions);}},{key:'numPages',get:function get(){var obj=this.toplevelPagesDict.get('Count');if(!Number.isInteger(obj)){throw new _util.FormatError('Page count in top-level pages dictionary is not an integer.');}return(0,_util.shadow)(this,'numPages',obj);}},{key:'destinations',get:function get(){var obj=this._readDests(),dests=Object.create(null);if(obj instanceof NameTree){var names=obj.getAll();for(var name in names){dests[name]=fetchDestination(names[name]);}}else if(obj instanceof _primitives.Dict){obj.forEach(function(key,value){if(value){dests[key]=fetchDestination(value);}});}return(0,_util.shadow)(this,'destinations',dests);}},{key:'pageLabels',get:function get(){var obj=null;try{obj=this._readPageLabels();}catch(ex){if(ex instanceof _util.MissingDataException){throw ex;}(0,_util.warn)('Unable to read page labels.');}return(0,_util.shadow)(this,'pageLabels',obj);}},{key:'pageMode',get:function get(){var obj=this.catDict.get('PageMode');var pageMode='UseNone';if((0,_primitives.isName)(obj)){switch(obj.name){case'UseNone':case'UseOutlines':case'UseThumbs':case'FullScreen':case'UseOC':case'UseAttachments':pageMode=obj.name;}}return(0,_util.shadow)(this,'pageMode',pageMode);}},{key:'attachments',get:function get(){var obj=this.catDict.get('Names');var attachments=null;if(obj&&obj.has('EmbeddedFiles')){var nameTree=new NameTree(obj.getRaw('EmbeddedFiles'),this.xref);var names=nameTree.getAll();for(var name in names){var fs=new FileSpec(names[name],this.xref);if(!attachments){attachments=Object.create(null);}attachments[(0,_util.stringToPDFString)(name)]=fs.serializable;}}return(0,_util.shadow)(this,'attachments',attachments);}},{key:'javaScript',get:function get(){var obj=this.catDict.get('Names');var javaScript=null;function appendIfJavaScriptDict(jsDict){var type=jsDict.get('S');if(!(0,_primitives.isName)(type,'JavaScript')){return;}var js=jsDict.get('JS');if((0,_primitives.isStream)(js)){js=(0,_util.bytesToString)(js.getBytes());}else if(!(0,_util.isString)(js)){return;}if(!javaScript){javaScript=[];}javaScript.push((0,_util.stringToPDFString)(js));}if(obj&&obj.has('JavaScript')){var nameTree=new NameTree(obj.getRaw('JavaScript'),this.xref);var names=nameTree.getAll();for(var name in names){var jsDict=names[name];if((0,_primitives.isDict)(jsDict)){appendIfJavaScriptDict(jsDict);}}}var openActionDict=this.catDict.get('OpenAction');if((0,_primitives.isDict)(openActionDict,'Action')){var actionType=openActionDict.get('S');if((0,_primitives.isName)(actionType,'Named')){var action=openActionDict.get('N');if((0,_primitives.isName)(action,'Print')){if(!javaScript){javaScript=[];}javaScript.push('print({});');}}else{appendIfJavaScriptDict(openActionDict);}}return(0,_util.shadow)(this,'javaScript',javaScript);}}],[{key:'parseDestDictionary',value:function parseDestDictionary(params){function addDefaultProtocolToUrl(url){if(url.indexOf('www.')===0){return'http://'+url;}return url;}function tryConvertUrlEncoding(url){try{return(0,_util.stringToUTF8String)(url);}catch(e){return url;}}var destDict=params.destDict;if(!(0,_primitives.isDict)(destDict)){(0,_util.warn)('parseDestDictionary: `destDict` must be a dictionary.');return;}var resultObj=params.resultObj;if((typeof resultObj==='undefined'?'undefined':_typeof(resultObj))!=='object'){(0,_util.warn)('parseDestDictionary: `resultObj` must be an object.');return;}var docBaseUrl=params.docBaseUrl||null;var action=destDict.get('A'),url=void 0,dest=void 0;if(!(0,_primitives.isDict)(action)&&destDict.has('Dest')){action=destDict.get('Dest');}if((0,_primitives.isDict)(action)){var actionType=action.get('S');if(!(0,_primitives.isName)(actionType)){(0,_util.warn)('parseDestDictionary: Invalid type in Action dictionary.');return;}var actionName=actionType.name;switch(actionName){case'URI':url=action.get('URI');if((0,_primitives.isName)(url)){url='/'+url.name;}else if((0,_util.isString)(url)){url=addDefaultProtocolToUrl(url);}break;case'GoTo':dest=action.get('D');break;case'Launch':case'GoToR':var urlDict=action.get('F');if((0,_primitives.isDict)(urlDict)){url=urlDict.get('F')||null;}else if((0,_util.isString)(urlDict)){url=urlDict;}var remoteDest=action.get('D');if(remoteDest){if((0,_primitives.isName)(remoteDest)){remoteDest=remoteDest.name;}if((0,_util.isString)(url)){var baseUrl=url.split('#')[0];if((0,_util.isString)(remoteDest)){url=baseUrl+'#'+remoteDest;}else if(Array.isArray(remoteDest)){url=baseUrl+'#'+JSON.stringify(remoteDest);}}}var newWindow=action.get('NewWindow');if((0,_util.isBool)(newWindow)){resultObj.newWindow=newWindow;}break;case'Named':var namedAction=action.get('N');if((0,_primitives.isName)(namedAction)){resultObj.action=namedAction.name;}break;case'JavaScript':var jsAction=action.get('JS');var js=void 0;if((0,_primitives.isStream)(jsAction)){js=(0,_util.bytesToString)(jsAction.getBytes());}else if((0,_util.isString)(jsAction)){js=jsAction;}if(js){var URL_OPEN_METHODS=['app.launchURL','window.open'];var regex=new RegExp('^\\s*('+URL_OPEN_METHODS.join('|').split('.').join('\\.')+')\\((?:\'|\")([^\'\"]*)(?:\'|\")(?:,\\s*(\\w+)\\)|\\))','i');var jsUrl=regex.exec((0,_util.stringToPDFString)(js));if(jsUrl&&jsUrl[2]){url=jsUrl[2];if(jsUrl[3]==='true'&&jsUrl[1]==='app.launchURL'){resultObj.newWindow=true;}break;}}default:(0,_util.warn)('parseDestDictionary: unsupported action type "'+actionName+'".');break;}}else if(destDict.has('Dest')){dest=destDict.get('Dest');}if((0,_util.isString)(url)){url=tryConvertUrlEncoding(url);var absoluteUrl=(0,_util.createValidAbsoluteUrl)(url,docBaseUrl);if(absoluteUrl){resultObj.url=absoluteUrl.href;}resultObj.unsafeUrl=url;}if(dest){if((0,_primitives.isName)(dest)){dest=dest.name;}if((0,_util.isString)(dest)||Array.isArray(dest)){resultObj.dest=dest;}}}}]);return Catalog;}();var XRef=function XRefClosure(){function XRef(stream,pdfManager){this.stream=stream;this.pdfManager=pdfManager;this.entries=[];this.xrefstms=Object.create(null);this.cache=[];this.stats={streamTypes:[],fontTypes:[]};}XRef.prototype={setStartXRef:function XRef_setStartXRef(startXRef){this.startXRefQueue=[startXRef];},parse:function XRef_parse(recoveryMode){var trailerDict;if(!recoveryMode){trailerDict=this.readXRef();}else{(0,_util.warn)('Indexing all PDF objects');trailerDict=this.indexObjects();}trailerDict.assignXref(this);this.trailer=trailerDict;var encrypt=void 0;try{encrypt=trailerDict.get('Encrypt');}catch(ex){if(ex instanceof _util.MissingDataException){throw ex;}(0,_util.warn)('XRef.parse - Invalid "Encrypt" reference: "'+ex+'".');}if((0,_primitives.isDict)(encrypt)){var ids=trailerDict.get('ID');var fileId=ids&&ids.length?ids[0]:'';encrypt.suppressEncryption=true;this.encrypt=new _crypto.CipherTransformFactory(encrypt,fileId,this.pdfManager.password);}var root=void 0;try{root=trailerDict.get('Root');}catch(ex){if(ex instanceof _util.MissingDataException){throw ex;}(0,_util.warn)('XRef.parse - Invalid "Root" reference: "'+ex+'".');}if((0,_primitives.isDict)(root)&&root.has('Pages')){this.root=root;}else{if(!recoveryMode){throw new _util.XRefParseException();}throw new _util.FormatError('Invalid root reference');}},processXRefTable:function XRef_processXRefTable(parser){if(!('tableState'in this)){this.tableState={entryNum:0,streamPos:parser.lexer.stream.pos,parserBuf1:parser.buf1,parserBuf2:parser.buf2};}var obj=this.readXRefTable(parser);if(!(0,_primitives.isCmd)(obj,'trailer')){throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');}var dict=parser.getObj();if(!(0,_primitives.isDict)(dict)&&dict.dict){dict=dict.dict;}if(!(0,_primitives.isDict)(dict)){throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');}delete this.tableState;return dict;},readXRefTable:function XRef_readXRefTable(parser){var stream=parser.lexer.stream;var tableState=this.tableState;stream.pos=tableState.streamPos;parser.buf1=tableState.parserBuf1;parser.buf2=tableState.parserBuf2;var obj;while(true){if(!('firstEntryNum'in tableState)||!('entryCount'in tableState)){if((0,_primitives.isCmd)(obj=parser.getObj(),'trailer')){break;}tableState.firstEntryNum=obj;tableState.entryCount=parser.getObj();}var first=tableState.firstEntryNum;var count=tableState.entryCount;if(!Number.isInteger(first)||!Number.isInteger(count)){throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');}for(var i=tableState.entryNum;i<count;i++){tableState.streamPos=stream.pos;tableState.entryNum=i;tableState.parserBuf1=parser.buf1;tableState.parserBuf2=parser.buf2;var entry={};entry.offset=parser.getObj();entry.gen=parser.getObj();var type=parser.getObj();if((0,_primitives.isCmd)(type,'f')){entry.free=true;}else if((0,_primitives.isCmd)(type,'n')){entry.uncompressed=true;}if(!Number.isInteger(entry.offset)||!Number.isInteger(entry.gen)||!(entry.free||entry.uncompressed)){throw new _util.FormatError('Invalid entry in XRef subsection: '+first+', '+count);}if(i===0&&entry.free&&first===1){first=0;}if(!this.entries[i+first]){this.entries[i+first]=entry;}}tableState.entryNum=0;tableState.streamPos=stream.pos;tableState.parserBuf1=parser.buf1;tableState.parserBuf2=parser.buf2;delete tableState.firstEntryNum;delete tableState.entryCount;}if(this.entries[0]&&!this.entries[0].free){throw new _util.FormatError('Invalid XRef table: unexpected first object');}return obj;},processXRefStream:function XRef_processXRefStream(stream){if(!('streamState'in this)){var streamParameters=stream.dict;var byteWidths=streamParameters.get('W');var range=streamParameters.get('Index');if(!range){range=[0,streamParameters.get('Size')];}this.streamState={entryRanges:range,byteWidths:byteWidths,entryNum:0,streamPos:stream.pos};}this.readXRefStream(stream);delete this.streamState;return stream.dict;},readXRefStream:function XRef_readXRefStream(stream){var i,j;var streamState=this.streamState;stream.pos=streamState.streamPos;var byteWidths=streamState.byteWidths;var typeFieldWidth=byteWidths[0];var offsetFieldWidth=byteWidths[1];var generationFieldWidth=byteWidths[2];var entryRanges=streamState.entryRanges;while(entryRanges.length>0){var first=entryRanges[0];var n=entryRanges[1];if(!Number.isInteger(first)||!Number.isInteger(n)){throw new _util.FormatError('Invalid XRef range fields: '+first+', '+n);}if(!Number.isInteger(typeFieldWidth)||!Number.isInteger(offsetFieldWidth)||!Number.isInteger(generationFieldWidth)){throw new _util.FormatError('Invalid XRef entry fields length: '+first+', '+n);}for(i=streamState.entryNum;i<n;++i){streamState.entryNum=i;streamState.streamPos=stream.pos;var type=0,offset=0,generation=0;for(j=0;j<typeFieldWidth;++j){type=type<<8|stream.getByte();}if(typeFieldWidth===0){type=1;}for(j=0;j<offsetFieldWidth;++j){offset=offset<<8|stream.getByte();}for(j=0;j<generationFieldWidth;++j){generation=generation<<8|stream.getByte();}var entry={};entry.offset=offset;entry.gen=generation;switch(type){case 0:entry.free=true;break;case 1:entry.uncompressed=true;break;case 2:break;default:throw new _util.FormatError('Invalid XRef entry type: '+type);}if(!this.entries[first+i]){this.entries[first+i]=entry;}}streamState.entryNum=0;streamState.streamPos=stream.pos;entryRanges.splice(0,2);}},indexObjects:function XRef_indexObjects(){var TAB=0x9,LF=0xA,CR=0xD,SPACE=0x20;var PERCENT=0x25,LT=0x3C;function readToken(data,offset){var token='',ch=data[offset];while(ch!==LF&&ch!==CR&&ch!==LT){if(++offset>=data.length){break;}token+=String.fromCharCode(ch);ch=data[offset];}return token;}function skipUntil(data,offset,what){var length=what.length,dataLength=data.length;var skipped=0;while(offset<dataLength){var i=0;while(i<length&&data[offset+i]===what[i]){++i;}if(i>=length){break;}offset++;skipped++;}return skipped;}var objRegExp=/^(\d+)\s+(\d+)\s+obj\b/;var endobjRegExp=/\bendobj[\b\s]$/;var nestedObjRegExp=/\s+(\d+\s+\d+\s+obj[\b\s])$/;var CHECK_CONTENT_LENGTH=25;var trailerBytes=new Uint8Array([116,114,97,105,108,101,114]);var startxrefBytes=new Uint8Array([115,116,97,114,116,120,114,101,102]);var objBytes=new Uint8Array([111,98,106]);var xrefBytes=new Uint8Array([47,88,82,101,102]);this.entries.length=0;var stream=this.stream;stream.pos=0;var buffer=stream.getBytes();var position=stream.start,length=buffer.length;var trailers=[],xrefStms=[];while(position<length){var ch=buffer[position];if(ch===TAB||ch===LF||ch===CR||ch===SPACE){++position;continue;}if(ch===PERCENT){do{++position;if(position>=length){break;}ch=buffer[position];}while(ch!==LF&&ch!==CR);continue;}var token=readToken(buffer,position);var m;if(token.indexOf('xref')===0&&(token.length===4||/\s/.test(token[4]))){position+=skipUntil(buffer,position,trailerBytes);trailers.push(position);position+=skipUntil(buffer,position,startxrefBytes);}else if(m=objRegExp.exec(token)){if(typeof this.entries[m[1]]==='undefined'){this.entries[m[1]]={offset:position-stream.start,gen:m[2]|0,uncompressed:true};}var contentLength=void 0,startPos=position+token.length;while(startPos<buffer.length){var endPos=startPos+skipUntil(buffer,startPos,objBytes)+4;contentLength=endPos-position;var checkPos=Math.max(endPos-CHECK_CONTENT_LENGTH,startPos);var tokenStr=(0,_util.bytesToString)(buffer.subarray(checkPos,endPos));if(endobjRegExp.test(tokenStr)){break;}else{var objToken=nestedObjRegExp.exec(tokenStr);if(objToken&&objToken[1]){(0,_util.warn)('indexObjects: Found new "obj" inside of another "obj", '+'caused by missing "endobj" -- trying to recover.');contentLength-=objToken[1].length;break;}}startPos=endPos;}var content=buffer.subarray(position,position+contentLength);var xrefTagOffset=skipUntil(content,0,xrefBytes);if(xrefTagOffset<contentLength&&content[xrefTagOffset+5]<64){xrefStms.push(position-stream.start);this.xrefstms[position-stream.start]=1;}position+=contentLength;}else if(token.indexOf('trailer')===0&&(token.length===7||/\s/.test(token[7]))){trailers.push(position);position+=skipUntil(buffer,position,startxrefBytes);}else{position+=token.length+1;}}var i,ii;for(i=0,ii=xrefStms.length;i<ii;++i){this.startXRefQueue.push(xrefStms[i]);this.readXRef(true);}var trailerDict=void 0;for(i=0,ii=trailers.length;i<ii;++i){stream.pos=trailers[i];var parser=new _parser.Parser(new _parser.Lexer(stream),true,this,true);var obj=parser.getObj();if(!(0,_primitives.isCmd)(obj,'trailer')){continue;}var dict=parser.getObj();if(!(0,_primitives.isDict)(dict)){continue;}var rootDict=void 0;try{rootDict=dict.get('Root');}catch(ex){if(ex instanceof _util.MissingDataException){throw ex;}continue;}if(!(0,_primitives.isDict)(rootDict)||!rootDict.has('Pages')){continue;}if(dict.has('ID')){return dict;}trailerDict=dict;}if(trailerDict){return trailerDict;}throw new _util.InvalidPDFException('Invalid PDF structure');},readXRef:function XRef_readXRef(recoveryMode){var stream=this.stream;var startXRefParsedCache=Object.create(null);try{while(this.startXRefQueue.length){var startXRef=this.startXRefQueue[0];if(startXRefParsedCache[startXRef]){(0,_util.warn)('readXRef - skipping XRef table since it was already parsed.');this.startXRefQueue.shift();continue;}startXRefParsedCache[startXRef]=true;stream.pos=startXRef+stream.start;var parser=new _parser.Parser(new _parser.Lexer(stream),true,this);var obj=parser.getObj();var dict;if((0,_primitives.isCmd)(obj,'xref')){dict=this.processXRefTable(parser);if(!this.topDict){this.topDict=dict;}obj=dict.get('XRefStm');if(Number.isInteger(obj)){var pos=obj;if(!(pos in this.xrefstms)){this.xrefstms[pos]=1;this.startXRefQueue.push(pos);}}}else if(Number.isInteger(obj)){if(!Number.isInteger(parser.getObj())||!(0,_primitives.isCmd)(parser.getObj(),'obj')||!(0,_primitives.isStream)(obj=parser.getObj())){throw new _util.FormatError('Invalid XRef stream');}dict=this.processXRefStream(obj);if(!this.topDict){this.topDict=dict;}if(!dict){throw new _util.FormatError('Failed to read XRef stream');}}else{throw new _util.FormatError('Invalid XRef stream header');}obj=dict.get('Prev');if(Number.isInteger(obj)){this.startXRefQueue.push(obj);}else if((0,_primitives.isRef)(obj)){this.startXRefQueue.push(obj.num);}this.startXRefQueue.shift();}return this.topDict;}catch(e){if(e instanceof _util.MissingDataException){throw e;}(0,_util.info)('(while reading XRef): '+e);}if(recoveryMode){return;}throw new _util.XRefParseException();},getEntry:function XRef_getEntry(i){var xrefEntry=this.entries[i];if(xrefEntry&&!xrefEntry.free&&xrefEntry.offset){return xrefEntry;}return null;},fetchIfRef:function XRef_fetchIfRef(obj,suppressEncryption){if(!(0,_primitives.isRef)(obj)){return obj;}return this.fetch(obj,suppressEncryption);},fetch:function XRef_fetch(ref,suppressEncryption){if(!(0,_primitives.isRef)(ref)){throw new Error('ref object is not a reference');}var num=ref.num;if(num in this.cache){var cacheEntry=this.cache[num];if(cacheEntry instanceof _primitives.Dict&&!cacheEntry.objId){cacheEntry.objId=ref.toString();}return cacheEntry;}var xrefEntry=this.getEntry(num);if(xrefEntry===null){return this.cache[num]=null;}if(xrefEntry.uncompressed){xrefEntry=this.fetchUncompressed(ref,xrefEntry,suppressEncryption);}else{xrefEntry=this.fetchCompressed(xrefEntry,suppressEncryption);}if((0,_primitives.isDict)(xrefEntry)){xrefEntry.objId=ref.toString();}else if((0,_primitives.isStream)(xrefEntry)){xrefEntry.dict.objId=ref.toString();}return xrefEntry;},fetchUncompressed:function XRef_fetchUncompressed(ref,xrefEntry,suppressEncryption){var gen=ref.gen;var num=ref.num;if(xrefEntry.gen!==gen){throw new _util.FormatError('inconsistent generation in XRef');}var stream=this.stream.makeSubStream(xrefEntry.offset+this.stream.start);var parser=new _parser.Parser(new _parser.Lexer(stream),true,this);var obj1=parser.getObj();var obj2=parser.getObj();var obj3=parser.getObj();if(!Number.isInteger(obj1)){obj1=parseInt(obj1,10);}if(!Number.isInteger(obj2)){obj2=parseInt(obj2,10);}if(obj1!==num||obj2!==gen||!(0,_primitives.isCmd)(obj3)){throw new _util.FormatError('bad XRef entry');}if(obj3.cmd!=='obj'){if(obj3.cmd.indexOf('obj')===0){num=parseInt(obj3.cmd.substring(3),10);if(!Number.isNaN(num)){return num;}}throw new _util.FormatError('bad XRef entry');}if(this.encrypt&&!suppressEncryption){xrefEntry=parser.getObj(this.encrypt.createCipherTransform(num,gen));}else{xrefEntry=parser.getObj();}if(!(0,_primitives.isStream)(xrefEntry)){this.cache[num]=xrefEntry;}return xrefEntry;},fetchCompressed:function XRef_fetchCompressed(xrefEntry,suppressEncryption){var tableOffset=xrefEntry.offset;var stream=this.fetch(new _primitives.Ref(tableOffset,0));if(!(0,_primitives.isStream)(stream)){throw new _util.FormatError('bad ObjStm stream');}var first=stream.dict.get('First');var n=stream.dict.get('N');if(!Number.isInteger(first)||!Number.isInteger(n)){throw new _util.FormatError('invalid first and n parameters for ObjStm stream');}var parser=new _parser.Parser(new _parser.Lexer(stream),false,this);parser.allowStreams=true;var i,entries=[],num,nums=[];for(i=0;i<n;++i){num=parser.getObj();if(!Number.isInteger(num)){throw new _util.FormatError('invalid object number in the ObjStm stream: '+num);}nums.push(num);var offset=parser.getObj();if(!Number.isInteger(offset)){throw new _util.FormatError('invalid object offset in the ObjStm stream: '+offset);}}for(i=0;i<n;++i){entries.push(parser.getObj());if((0,_primitives.isCmd)(parser.buf1,'endobj')){parser.shift();}num=nums[i];var entry=this.entries[num];if(entry&&entry.offset===tableOffset&&entry.gen===i){this.cache[num]=entries[i];}}xrefEntry=entries[xrefEntry.gen];if(xrefEntry===undefined){throw new _util.FormatError('bad XRef entry for compressed object');}return xrefEntry;},fetchIfRefAsync:function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee(obj,suppressEncryption){return _regenerator2.default.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if((0,_primitives.isRef)(obj)){_context.next=2;break;}return _context.abrupt('return',obj);case 2:return _context.abrupt('return',this.fetchAsync(obj,suppressEncryption));case 3:case'end':return _context.stop();}}},_callee,this);}));function fetchIfRefAsync(_x,_x2){return _ref.apply(this,arguments);}return fetchIfRefAsync;}(),fetchAsync:function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee2(ref,suppressEncryption){return _regenerator2.default.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;return _context2.abrupt('return',this.fetch(ref,suppressEncryption));case 4:_context2.prev=4;_context2.t0=_context2['catch'](0);if(_context2.t0 instanceof _util.MissingDataException){_context2.next=8;break;}throw _context2.t0;case 8:_context2.next=10;return this.pdfManager.requestRange(_context2.t0.begin,_context2.t0.end);case 10:return _context2.abrupt('return',this.fetchAsync(ref,suppressEncryption));case 11:case'end':return _context2.stop();}}},_callee2,this,[[0,4]]);}));function fetchAsync(_x3,_x4){return _ref2.apply(this,arguments);}return fetchAsync;}(),getCatalogObj:function XRef_getCatalogObj(){return this.root;}};return XRef;}();var NameOrNumberTree=function(){function NameOrNumberTree(root,xref,type){_classCallCheck(this,NameOrNumberTree);if(this.constructor===NameOrNumberTree){(0,_util.unreachable)('Cannot initialize NameOrNumberTree.');}this.root=root;this.xref=xref;this._type=type;}_createClass(NameOrNumberTree,[{key:'getAll',value:function getAll(){var dict=Object.create(null);if(!this.root){return dict;}var xref=this.xref;var processed=new _primitives.RefSet();processed.put(this.root);var queue=[this.root];while(queue.length>0){var obj=xref.fetchIfRef(queue.shift());if(!(0,_primitives.isDict)(obj)){continue;}if(obj.has('Kids')){var _kids=obj.get('Kids');for(var i=0,ii=_kids.length;i<ii;i++){var kid=_kids[i];if(processed.has(kid)){throw new _util.FormatError('Duplicate entry in "'+this._type+'" tree.');}queue.push(kid);processed.put(kid);}continue;}var entries=obj.get(this._type);if(Array.isArray(entries)){for(var _i2=0,_ii=entries.length;_i2<_ii;_i2+=2){dict[xref.fetchIfRef(entries[_i2])]=xref.fetchIfRef(entries[_i2+1]);}}}return dict;}},{key:'get',value:function get(key){if(!this.root){return null;}var xref=this.xref;var kidsOrEntries=xref.fetchIfRef(this.root);var loopCount=0;var MAX_LEVELS=10;while(kidsOrEntries.has('Kids')){if(++loopCount>MAX_LEVELS){(0,_util.warn)('Search depth limit reached for "'+this._type+'" tree.');return null;}var _kids2=kidsOrEntries.get('Kids');if(!Array.isArray(_kids2)){return null;}var l=0,r=_kids2.length-1;while(l<=r){var m=l+r>>1;var kid=xref.fetchIfRef(_kids2[m]);var limits=kid.get('Limits');if(key<xref.fetchIfRef(limits[0])){r=m-1;}else if(key>xref.fetchIfRef(limits[1])){l=m+1;}else{kidsOrEntries=xref.fetchIfRef(_kids2[m]);break;}}if(l>r){return null;}}var entries=kidsOrEntries.get(this._type);if(Array.isArray(entries)){var _l=0,_r=entries.length-2;while(_l<=_r){var _m=_l+_r&~1;var currentKey=xref.fetchIfRef(entries[_m]);if(key<currentKey){_r=_m-2;}else if(key>currentKey){_l=_m+2;}else{return xref.fetchIfRef(entries[_m+1]);}}}return null;}}]);return NameOrNumberTree;}();var NameTree=function(_NameOrNumberTree){_inherits(NameTree,_NameOrNumberTree);function NameTree(root,xref){_classCallCheck(this,NameTree);return _possibleConstructorReturn(this,(NameTree.__proto__||Object.getPrototypeOf(NameTree)).call(this,root,xref,'Names'));}return NameTree;}(NameOrNumberTree);var NumberTree=function(_NameOrNumberTree2){_inherits(NumberTree,_NameOrNumberTree2);function NumberTree(root,xref){_classCallCheck(this,NumberTree);return _possibleConstructorReturn(this,(NumberTree.__proto__||Object.getPrototypeOf(NumberTree)).call(this,root,xref,'Nums'));}return NumberTree;}(NameOrNumberTree);var FileSpec=function FileSpecClosure(){function FileSpec(root,xref){if(!root||!(0,_primitives.isDict)(root)){return;}this.xref=xref;this.root=root;if(root.has('FS')){this.fs=root.get('FS');}this.description=root.has('Desc')?(0,_util.stringToPDFString)(root.get('Desc')):'';if(root.has('RF')){(0,_util.warn)('Related file specifications are not supported');}this.contentAvailable=true;if(!root.has('EF')){this.contentAvailable=false;(0,_util.warn)('Non-embedded file specifications are not supported');}}function pickPlatformItem(dict){if(dict.has('UF')){return dict.get('UF');}else if(dict.has('F')){return dict.get('F');}else if(dict.has('Unix')){return dict.get('Unix');}else if(dict.has('Mac')){return dict.get('Mac');}else if(dict.has('DOS')){return dict.get('DOS');}return null;}FileSpec.prototype={get filename(){if(!this._filename&&this.root){var filename=pickPlatformItem(this.root)||'unnamed';this._filename=(0,_util.stringToPDFString)(filename).replace(/\\\\/g,'\\').replace(/\\\//g,'/').replace(/\\/g,'/');}return this._filename;},get content(){if(!this.contentAvailable){return null;}if(!this.contentRef&&this.root){this.contentRef=pickPlatformItem(this.root.get('EF'));}var content=null;if(this.contentRef){var xref=this.xref;var fileObj=xref.fetchIfRef(this.contentRef);if(fileObj&&(0,_primitives.isStream)(fileObj)){content=fileObj.getBytes();}else{(0,_util.warn)('Embedded file specification points to non-existing/invalid '+'content');}}else{(0,_util.warn)('Embedded file specification does not have a content');}return content;},get serializable(){return{filename:this.filename,content:this.content};}};return FileSpec;}();var ObjectLoader=function(){function mayHaveChildren(value){return(0,_primitives.isRef)(value)||(0,_primitives.isDict)(value)||Array.isArray(value)||(0,_primitives.isStream)(value);}function addChildren(node,nodesToVisit){if((0,_primitives.isDict)(node)||(0,_primitives.isStream)(node)){var dict=(0,_primitives.isDict)(node)?node:node.dict;var dictKeys=dict.getKeys();for(var i=0,ii=dictKeys.length;i<ii;i++){var rawValue=dict.getRaw(dictKeys[i]);if(mayHaveChildren(rawValue)){nodesToVisit.push(rawValue);}}}else if(Array.isArray(node)){for(var _i3=0,_ii2=node.length;_i3<_ii2;_i3++){var value=node[_i3];if(mayHaveChildren(value)){nodesToVisit.push(value);}}}}function ObjectLoader(dict,keys,xref){this.dict=dict;this.keys=keys;this.xref=xref;this.refSet=null;this.capability=null;}ObjectLoader.prototype={load:function load(){this.capability=(0,_util.createPromiseCapability)();if(!(this.xref.stream instanceof _chunked_stream.ChunkedStream)||this.xref.stream.getMissingChunks().length===0){this.capability.resolve();return this.capability.promise;}var keys=this.keys,dict=this.dict;this.refSet=new _primitives.RefSet();var nodesToVisit=[];for(var i=0,ii=keys.length;i<ii;i++){var rawValue=dict.getRaw(keys[i]);if(rawValue!==undefined){nodesToVisit.push(rawValue);}}this._walk(nodesToVisit);return this.capability.promise;},_walk:function _walk(nodesToVisit){var _this4=this;var nodesToRevisit=[];var pendingRequests=[];while(nodesToVisit.length){var _currentNode=nodesToVisit.pop();if((0,_primitives.isRef)(_currentNode)){if(this.refSet.has(_currentNode)){continue;}try{this.refSet.put(_currentNode);_currentNode=this.xref.fetch(_currentNode);}catch(ex){if(!(ex instanceof _util.MissingDataException)){throw ex;}nodesToRevisit.push(_currentNode);pendingRequests.push({begin:ex.begin,end:ex.end});}}if(_currentNode&&_currentNode.getBaseStreams){var baseStreams=_currentNode.getBaseStreams();var foundMissingData=false;for(var i=0,ii=baseStreams.length;i<ii;i++){var stream=baseStreams[i];if(stream.getMissingChunks&&stream.getMissingChunks().length){foundMissingData=true;pendingRequests.push({begin:stream.start,end:stream.end});}}if(foundMissingData){nodesToRevisit.push(_currentNode);}}addChildren(_currentNode,nodesToVisit);}if(pendingRequests.length){this.xref.stream.manager.requestRanges(pendingRequests).then(function(){for(var _i4=0,_ii3=nodesToRevisit.length;_i4<_ii3;_i4++){var node=nodesToRevisit[_i4];if((0,_primitives.isRef)(node)){_this4.refSet.remove(node);}}_this4._walk(nodesToRevisit);},this.capability.reject);return;}this.refSet=null;this.capability.resolve();}};return ObjectLoader;}();exports.Catalog=Catalog;exports.ObjectLoader=ObjectLoader;exports.XRef=XRef;exports.FileSpec=FileSpec;/***/},/* 138 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _typeof=typeof Symbol==="function"&&_typeof3(Symbol.iterator)==="symbol"?function(obj){return _typeof3(obj);}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":_typeof3(obj);};var EOF={};var Name=function NameClosure(){function Name(name){this.name=name;}Name.prototype={};var nameCache=Object.create(null);Name.get=function Name_get(name){var nameValue=nameCache[name];return nameValue?nameValue:nameCache[name]=new Name(name);};return Name;}();var Cmd=function CmdClosure(){function Cmd(cmd){this.cmd=cmd;}Cmd.prototype={};var cmdCache=Object.create(null);Cmd.get=function Cmd_get(cmd){var cmdValue=cmdCache[cmd];return cmdValue?cmdValue:cmdCache[cmd]=new Cmd(cmd);};return Cmd;}();var Dict=function DictClosure(){var nonSerializable=function nonSerializableClosure(){return nonSerializable;};function Dict(xref){this._map=Object.create(null);this.xref=xref;this.objId=null;this.suppressEncryption=false;this.__nonSerializable__=nonSerializable;}Dict.prototype={assignXref:function Dict_assignXref(newXref){this.xref=newXref;},get:function Dict_get(key1,key2,key3){var value;var xref=this.xref,suppressEncryption=this.suppressEncryption;if(typeof(value=this._map[key1])!=='undefined'||key1 in this._map||typeof key2==='undefined'){return xref?xref.fetchIfRef(value,suppressEncryption):value;}if(typeof(value=this._map[key2])!=='undefined'||key2 in this._map||typeof key3==='undefined'){return xref?xref.fetchIfRef(value,suppressEncryption):value;}value=this._map[key3]||null;return xref?xref.fetchIfRef(value,suppressEncryption):value;},getAsync:function Dict_getAsync(key1,key2,key3){var value;var xref=this.xref,suppressEncryption=this.suppressEncryption;if(typeof(value=this._map[key1])!=='undefined'||key1 in this._map||typeof key2==='undefined'){if(xref){return xref.fetchIfRefAsync(value,suppressEncryption);}return Promise.resolve(value);}if(typeof(value=this._map[key2])!=='undefined'||key2 in this._map||typeof key3==='undefined'){if(xref){return xref.fetchIfRefAsync(value,suppressEncryption);}return Promise.resolve(value);}value=this._map[key3]||null;if(xref){return xref.fetchIfRefAsync(value,suppressEncryption);}return Promise.resolve(value);},getArray:function Dict_getArray(key1,key2,key3){var value=this.get(key1,key2,key3);var xref=this.xref,suppressEncryption=this.suppressEncryption;if(!Array.isArray(value)||!xref){return value;}value=value.slice();for(var i=0,ii=value.length;i<ii;i++){if(!isRef(value[i])){continue;}value[i]=xref.fetch(value[i],suppressEncryption);}return value;},getRaw:function Dict_getRaw(key){return this._map[key];},getKeys:function Dict_getKeys(){return Object.keys(this._map);},set:function Dict_set(key,value){this._map[key]=value;},has:function Dict_has(key){return key in this._map;},forEach:function Dict_forEach(callback){for(var key in this._map){callback(key,this.get(key));}}};Dict.empty=new Dict(null);Dict.merge=function(xref,dictArray){var mergedDict=new Dict(xref);for(var i=0,ii=dictArray.length;i<ii;i++){var dict=dictArray[i];if(!isDict(dict)){continue;}for(var keyName in dict._map){if(mergedDict._map[keyName]!==undefined){continue;}mergedDict._map[keyName]=dict._map[keyName];}}return mergedDict;};return Dict;}();var Ref=function RefClosure(){function Ref(num,gen){this.num=num;this.gen=gen;}Ref.prototype={toString:function Ref_toString(){var str=this.num+'R';if(this.gen!==0){str+=this.gen;}return str;}};return Ref;}();var RefSet=function RefSetClosure(){function RefSet(){this.dict=Object.create(null);}RefSet.prototype={has:function RefSet_has(ref){return ref.toString()in this.dict;},put:function RefSet_put(ref){this.dict[ref.toString()]=true;},remove:function RefSet_remove(ref){delete this.dict[ref.toString()];}};return RefSet;}();var RefSetCache=function RefSetCacheClosure(){function RefSetCache(){this.dict=Object.create(null);}RefSetCache.prototype={get:function RefSetCache_get(ref){return this.dict[ref.toString()];},has:function RefSetCache_has(ref){return ref.toString()in this.dict;},put:function RefSetCache_put(ref,obj){this.dict[ref.toString()]=obj;},putAlias:function RefSetCache_putAlias(ref,aliasRef){this.dict[ref.toString()]=this.get(aliasRef);},forEach:function RefSetCache_forEach(fn,thisArg){for(var i in this.dict){fn.call(thisArg,this.dict[i]);}},clear:function RefSetCache_clear(){this.dict=Object.create(null);}};return RefSetCache;}();function isEOF(v){return v===EOF;}function isName(v,name){return v instanceof Name&&(name===undefined||v.name===name);}function isCmd(v,cmd){return v instanceof Cmd&&(cmd===undefined||v.cmd===cmd);}function isDict(v,type){return v instanceof Dict&&(type===undefined||isName(v.get('Type'),type));}function isRef(v){return v instanceof Ref;}function isRefsEqual(v1,v2){return v1.num===v2.num&&v1.gen===v2.gen;}function isStream(v){return(typeof v==='undefined'?'undefined':_typeof(v))==='object'&&v!==null&&v.getBytes!==undefined;}exports.EOF=EOF;exports.Cmd=Cmd;exports.Dict=Dict;exports.Name=Name;exports.Ref=Ref;exports.RefSet=RefSet;exports.RefSetCache=RefSetCache;exports.isEOF=isEOF;exports.isCmd=isCmd;exports.isDict=isDict;exports.isName=isName;exports.isRef=isRef;exports.isRefsEqual=isRefsEqual;exports.isStream=isStream;/***/},/* 139 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.Parser=exports.Linearization=exports.Lexer=undefined;var _stream=__w_pdfjs_require__(140);var _util=__w_pdfjs_require__(2);var _primitives=__w_pdfjs_require__(138);var _ccitt_stream=__w_pdfjs_require__(141);var _jbig2_stream=__w_pdfjs_require__(143);var _jpeg_stream=__w_pdfjs_require__(146);var _jpx_stream=__w_pdfjs_require__(148);var MAX_LENGTH_TO_CACHE=1000;var MAX_ADLER32_LENGTH=5552;function computeAdler32(bytes){var bytesLength=bytes.length;var a=1,b=0;for(var i=0;i<bytesLength;++i){a+=bytes[i]&0xFF;b+=a;}return b%65521<<16|a%65521;}var Parser=function ParserClosure(){function Parser(lexer,allowStreams,xref,recoveryMode){this.lexer=lexer;this.allowStreams=allowStreams;this.xref=xref;this.recoveryMode=recoveryMode||false;this.imageCache=Object.create(null);this.refill();}Parser.prototype={refill:function Parser_refill(){this.buf1=this.lexer.getObj();this.buf2=this.lexer.getObj();},shift:function Parser_shift(){if((0,_primitives.isCmd)(this.buf2,'ID')){this.buf1=this.buf2;this.buf2=null;}else{this.buf1=this.buf2;this.buf2=this.lexer.getObj();}},tryShift:function Parser_tryShift(){try{this.shift();return true;}catch(e){if(e instanceof _util.MissingDataException){throw e;}return false;}},getObj:function Parser_getObj(cipherTransform){var buf1=this.buf1;this.shift();if(buf1 instanceof _primitives.Cmd){switch(buf1.cmd){case'BI':return this.makeInlineImage(cipherTransform);case'[':var array=[];while(!(0,_primitives.isCmd)(this.buf1,']')&&!(0,_primitives.isEOF)(this.buf1)){array.push(this.getObj(cipherTransform));}if((0,_primitives.isEOF)(this.buf1)){if(!this.recoveryMode){throw new _util.FormatError('End of file inside array');}return array;}this.shift();return array;case'<<':var dict=new _primitives.Dict(this.xref);while(!(0,_primitives.isCmd)(this.buf1,'>>')&&!(0,_primitives.isEOF)(this.buf1)){if(!(0,_primitives.isName)(this.buf1)){(0,_util.info)('Malformed dictionary: key must be a name object');this.shift();continue;}var key=this.buf1.name;this.shift();if((0,_primitives.isEOF)(this.buf1)){break;}dict.set(key,this.getObj(cipherTransform));}if((0,_primitives.isEOF)(this.buf1)){if(!this.recoveryMode){throw new _util.FormatError('End of file inside dictionary');}return dict;}if((0,_primitives.isCmd)(this.buf2,'stream')){return this.allowStreams?this.makeStream(dict,cipherTransform):dict;}this.shift();return dict;default:return buf1;}}if(Number.isInteger(buf1)){var num=buf1;if(Number.isInteger(this.buf1)&&(0,_primitives.isCmd)(this.buf2,'R')){var ref=new _primitives.Ref(num,this.buf1);this.shift();this.shift();return ref;}return num;}if((0,_util.isString)(buf1)){var str=buf1;if(cipherTransform){str=cipherTransform.decryptString(str);}return str;}return buf1;},findDefaultInlineStreamEnd:function findDefaultInlineStreamEnd(stream){var E=0x45,I=0x49,SPACE=0x20,LF=0xA,CR=0xD;var n=10,NUL=0x0;var startPos=stream.pos,state=0,ch=void 0,maybeEIPos=void 0;while((ch=stream.getByte())!==-1){if(state===0){state=ch===E?1:0;}else if(state===1){state=ch===I?2:0;}else{(0,_util.assert)(state===2);if(ch===SPACE||ch===LF||ch===CR){maybeEIPos=stream.pos;var followingBytes=stream.peekBytes(n);for(var i=0,ii=followingBytes.length;i<ii;i++){ch=followingBytes[i];if(ch===NUL&&followingBytes[i+1]!==NUL){continue;}if(ch!==LF&&ch!==CR&&(ch<SPACE||ch>0x7F)){state=0;break;}}if(state===2){break;}}else{state=0;}}}if(ch===-1){(0,_util.warn)('findDefaultInlineStreamEnd: '+'Reached the end of the stream without finding a valid EI marker');if(maybeEIPos){(0,_util.warn)('... trying to recover by using the last "EI" occurrence.');stream.skip(-(stream.pos-maybeEIPos));}}return stream.pos-4-startPos;},findDCTDecodeInlineStreamEnd:function Parser_findDCTDecodeInlineStreamEnd(stream){var startPos=stream.pos,foundEOI=false,b,markerLength,length;while((b=stream.getByte())!==-1){if(b!==0xFF){continue;}switch(stream.getByte()){case 0x00:break;case 0xFF:stream.skip(-1);break;case 0xD9:foundEOI=true;break;case 0xC0:case 0xC1:case 0xC2:case 0xC3:case 0xC5:case 0xC6:case 0xC7:case 0xC9:case 0xCA:case 0xCB:case 0xCD:case 0xCE:case 0xCF:case 0xC4:case 0xCC:case 0xDA:case 0xDB:case 0xDC:case 0xDD:case 0xDE:case 0xDF:case 0xE0:case 0xE1:case 0xE2:case 0xE3:case 0xE4:case 0xE5:case 0xE6:case 0xE7:case 0xE8:case 0xE9:case 0xEA:case 0xEB:case 0xEC:case 0xED:case 0xEE:case 0xEF:case 0xFE:markerLength=stream.getUint16();if(markerLength>2){stream.skip(markerLength-2);}else{stream.skip(-2);}break;}if(foundEOI){break;}}length=stream.pos-startPos;if(b===-1){(0,_util.warn)('Inline DCTDecode image stream: '+'EOI marker not found, searching for /EI/ instead.');stream.skip(-length);return this.findDefaultInlineStreamEnd(stream);}this.inlineStreamSkipEI(stream);return length;},findASCII85DecodeInlineStreamEnd:function Parser_findASCII85DecodeInlineStreamEnd(stream){var TILDE=0x7E,GT=0x3E;var startPos=stream.pos,ch,length;while((ch=stream.getByte())!==-1){if(ch===TILDE&&stream.peekByte()===GT){stream.skip();break;}}length=stream.pos-startPos;if(ch===-1){(0,_util.warn)('Inline ASCII85Decode image stream: '+'EOD marker not found, searching for /EI/ instead.');stream.skip(-length);return this.findDefaultInlineStreamEnd(stream);}this.inlineStreamSkipEI(stream);return length;},findASCIIHexDecodeInlineStreamEnd:function Parser_findASCIIHexDecodeInlineStreamEnd(stream){var GT=0x3E;var startPos=stream.pos,ch,length;while((ch=stream.getByte())!==-1){if(ch===GT){break;}}length=stream.pos-startPos;if(ch===-1){(0,_util.warn)('Inline ASCIIHexDecode image stream: '+'EOD marker not found, searching for /EI/ instead.');stream.skip(-length);return this.findDefaultInlineStreamEnd(stream);}this.inlineStreamSkipEI(stream);return length;},inlineStreamSkipEI:function Parser_inlineStreamSkipEI(stream){var E=0x45,I=0x49;var state=0,ch;while((ch=stream.getByte())!==-1){if(state===0){state=ch===E?1:0;}else if(state===1){state=ch===I?2:0;}else if(state===2){break;}}},makeInlineImage:function Parser_makeInlineImage(cipherTransform){var lexer=this.lexer;var stream=lexer.stream;var dict=new _primitives.Dict(this.xref),dictLength=void 0;while(!(0,_primitives.isCmd)(this.buf1,'ID')&&!(0,_primitives.isEOF)(this.buf1)){if(!(0,_primitives.isName)(this.buf1)){throw new _util.FormatError('Dictionary key must be a name object');}var key=this.buf1.name;this.shift();if((0,_primitives.isEOF)(this.buf1)){break;}dict.set(key,this.getObj(cipherTransform));}if(lexer.beginInlineImagePos!==-1){dictLength=stream.pos-lexer.beginInlineImagePos;}var filter=dict.get('Filter','F'),filterName;if((0,_primitives.isName)(filter)){filterName=filter.name;}else if(Array.isArray(filter)){var filterZero=this.xref.fetchIfRef(filter[0]);if((0,_primitives.isName)(filterZero)){filterName=filterZero.name;}}var startPos=stream.pos,length=void 0;if(filterName==='DCTDecode'||filterName==='DCT'){length=this.findDCTDecodeInlineStreamEnd(stream);}else if(filterName==='ASCII85Decode'||filterName==='A85'){length=this.findASCII85DecodeInlineStreamEnd(stream);}else if(filterName==='ASCIIHexDecode'||filterName==='AHx'){length=this.findASCIIHexDecodeInlineStreamEnd(stream);}else{length=this.findDefaultInlineStreamEnd(stream);}var imageStream=stream.makeSubStream(startPos,length,dict);var cacheKey=void 0;if(length<MAX_LENGTH_TO_CACHE&&dictLength<MAX_ADLER32_LENGTH){var imageBytes=imageStream.getBytes();imageStream.reset();var initialStreamPos=stream.pos;stream.pos=lexer.beginInlineImagePos;var dictBytes=stream.getBytes(dictLength);stream.pos=initialStreamPos;cacheKey=computeAdler32(imageBytes)+'_'+computeAdler32(dictBytes);var cacheEntry=this.imageCache[cacheKey];if(cacheEntry!==undefined){this.buf2=_primitives.Cmd.get('EI');this.shift();cacheEntry.reset();return cacheEntry;}}if(cipherTransform){imageStream=cipherTransform.createStream(imageStream,length);}imageStream=this.filter(imageStream,dict,length);imageStream.dict=dict;if(cacheKey!==undefined){imageStream.cacheKey='inline_'+length+'_'+cacheKey;this.imageCache[cacheKey]=imageStream;}this.buf2=_primitives.Cmd.get('EI');this.shift();return imageStream;},_findStreamLength:function _findStreamLength(startPos,signature){var stream=this.lexer.stream;stream.pos=startPos;var SCAN_BLOCK_LENGTH=2048;var signatureLength=signature.length;while(stream.pos<stream.end){var scanBytes=stream.peekBytes(SCAN_BLOCK_LENGTH);var scanLength=scanBytes.length-signatureLength;if(scanLength<=0){break;}var pos=0;while(pos<scanLength){var j=0;while(j<signatureLength&&scanBytes[pos+j]===signature[j]){j++;}if(j>=signatureLength){stream.pos+=pos;return stream.pos-startPos;}pos++;}stream.pos+=scanLength;}return-1;},makeStream:function Parser_makeStream(dict,cipherTransform){var lexer=this.lexer;var stream=lexer.stream;lexer.skipToNextLine();var startPos=stream.pos-1;var length=dict.get('Length');if(!Number.isInteger(length)){(0,_util.info)('Bad '+length+' attribute in stream');length=0;}stream.pos=startPos+length;lexer.nextChar();if(this.tryShift()&&(0,_primitives.isCmd)(this.buf2,'endstream')){this.shift();}else{var ENDSTREAM_SIGNATURE=new Uint8Array([0x65,0x6E,0x64,0x73,0x74,0x72,0x65,0x61,0x6D]);var actualLength=this._findStreamLength(startPos,ENDSTREAM_SIGNATURE);if(actualLength<0){var MAX_TRUNCATION=1;for(var i=1;i<=MAX_TRUNCATION;i++){var end=ENDSTREAM_SIGNATURE.length-i;var TRUNCATED_SIGNATURE=ENDSTREAM_SIGNATURE.slice(0,end);var maybeLength=this._findStreamLength(startPos,TRUNCATED_SIGNATURE);if(maybeLength>=0){var lastByte=stream.peekBytes(end+1)[end];if(!(0,_util.isSpace)(lastByte)){break;}(0,_util.info)('Found "'+(0,_util.bytesToString)(TRUNCATED_SIGNATURE)+'" when '+'searching for endstream command.');actualLength=maybeLength;break;}}if(actualLength<0){throw new _util.FormatError('Missing endstream command.');}}length=actualLength;lexer.nextChar();this.shift();this.shift();}this.shift();stream=stream.makeSubStream(startPos,length,dict);if(cipherTransform){stream=cipherTransform.createStream(stream,length);}stream=this.filter(stream,dict,length);stream.dict=dict;return stream;},filter:function Parser_filter(stream,dict,length){var filter=dict.get('Filter','F');var params=dict.get('DecodeParms','DP');if((0,_primitives.isName)(filter)){if(Array.isArray(params)){(0,_util.warn)('/DecodeParms should not contain an Array, '+'when /Filter contains a Name.');}return this.makeFilter(stream,filter.name,length,params);}var maybeLength=length;if(Array.isArray(filter)){var filterArray=filter;var paramsArray=params;for(var i=0,ii=filterArray.length;i<ii;++i){filter=this.xref.fetchIfRef(filterArray[i]);if(!(0,_primitives.isName)(filter)){throw new _util.FormatError('Bad filter name: '+filter);}params=null;if(Array.isArray(paramsArray)&&i in paramsArray){params=this.xref.fetchIfRef(paramsArray[i]);}stream=this.makeFilter(stream,filter.name,maybeLength,params);maybeLength=null;}}return stream;},makeFilter:function Parser_makeFilter(stream,name,maybeLength,params){if(maybeLength===0){(0,_util.warn)('Empty "'+name+'" stream.');return new _stream.NullStream();}try{var xrefStreamStats=this.xref.stats.streamTypes;if(name==='FlateDecode'||name==='Fl'){xrefStreamStats[_util.StreamType.FLATE]=true;if(params){return new _stream.PredictorStream(new _stream.FlateStream(stream,maybeLength),maybeLength,params);}return new _stream.FlateStream(stream,maybeLength);}if(name==='LZWDecode'||name==='LZW'){xrefStreamStats[_util.StreamType.LZW]=true;var earlyChange=1;if(params){if(params.has('EarlyChange')){earlyChange=params.get('EarlyChange');}return new _stream.PredictorStream(new _stream.LZWStream(stream,maybeLength,earlyChange),maybeLength,params);}return new _stream.LZWStream(stream,maybeLength,earlyChange);}if(name==='DCTDecode'||name==='DCT'){xrefStreamStats[_util.StreamType.DCT]=true;return new _jpeg_stream.JpegStream(stream,maybeLength,stream.dict,params);}if(name==='JPXDecode'||name==='JPX'){xrefStreamStats[_util.StreamType.JPX]=true;return new _jpx_stream.JpxStream(stream,maybeLength,stream.dict,params);}if(name==='ASCII85Decode'||name==='A85'){xrefStreamStats[_util.StreamType.A85]=true;return new _stream.Ascii85Stream(stream,maybeLength);}if(name==='ASCIIHexDecode'||name==='AHx'){xrefStreamStats[_util.StreamType.AHX]=true;return new _stream.AsciiHexStream(stream,maybeLength);}if(name==='CCITTFaxDecode'||name==='CCF'){xrefStreamStats[_util.StreamType.CCF]=true;return new _ccitt_stream.CCITTFaxStream(stream,maybeLength,params);}if(name==='RunLengthDecode'||name==='RL'){xrefStreamStats[_util.StreamType.RL]=true;return new _stream.RunLengthStream(stream,maybeLength);}if(name==='JBIG2Decode'){xrefStreamStats[_util.StreamType.JBIG]=true;return new _jbig2_stream.Jbig2Stream(stream,maybeLength,stream.dict,params);}(0,_util.warn)('filter "'+name+'" not supported yet');return stream;}catch(ex){if(ex instanceof _util.MissingDataException){throw ex;}(0,_util.warn)('Invalid stream: \"'+ex+'\"');return new _stream.NullStream();}}};return Parser;}();var Lexer=function LexerClosure(){function Lexer(stream,knownCommands){this.stream=stream;this.nextChar();this.strBuf=[];this.knownCommands=knownCommands;this.beginInlineImagePos=-1;}var specialChars=[1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,0,0,2,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];function toHexDigit(ch){if(ch>=0x30&&ch<=0x39){return ch&0x0F;}if(ch>=0x41&&ch<=0x46||ch>=0x61&&ch<=0x66){return(ch&0x0F)+9;}return-1;}Lexer.prototype={nextChar:function Lexer_nextChar(){return this.currentChar=this.stream.getByte();},peekChar:function Lexer_peekChar(){return this.stream.peekByte();},getNumber:function Lexer_getNumber(){var ch=this.currentChar;var eNotation=false;var divideBy=0;var sign=0;if(ch===0x2D){sign=-1;ch=this.nextChar();if(ch===0x2D){ch=this.nextChar();}}else if(ch===0x2B){sign=1;ch=this.nextChar();}if(ch===0x0A||ch===0x0D){do{ch=this.nextChar();}while(ch===0x0A||ch===0x0D);}if(ch===0x2E){divideBy=10;ch=this.nextChar();}if(ch<0x30||ch>0x39){if(divideBy===10&&sign===0&&((0,_util.isSpace)(ch)||ch===-1)){(0,_util.warn)('Lexer.getNumber - treating a single decimal point as zero.');return 0;}throw new _util.FormatError('Invalid number: '+String.fromCharCode(ch)+' (charCode '+ch+')');}sign=sign||1;var baseValue=ch-0x30;var powerValue=0;var powerValueSign=1;while((ch=this.nextChar())>=0){if(0x30<=ch&&ch<=0x39){var currentDigit=ch-0x30;if(eNotation){powerValue=powerValue*10+currentDigit;}else{if(divideBy!==0){divideBy*=10;}baseValue=baseValue*10+currentDigit;}}else if(ch===0x2E){if(divideBy===0){divideBy=1;}else{break;}}else if(ch===0x2D){(0,_util.warn)('Badly formatted number');}else if(ch===0x45||ch===0x65){ch=this.peekChar();if(ch===0x2B||ch===0x2D){powerValueSign=ch===0x2D?-1:1;this.nextChar();}else if(ch<0x30||ch>0x39){break;}eNotation=true;}else{break;}}if(divideBy!==0){baseValue/=divideBy;}if(eNotation){baseValue*=Math.pow(10,powerValueSign*powerValue);}return sign*baseValue;},getString:function Lexer_getString(){var numParen=1;var done=false;var strBuf=this.strBuf;strBuf.length=0;var ch=this.nextChar();while(true){var charBuffered=false;switch(ch|0){case-1:(0,_util.warn)('Unterminated string');done=true;break;case 0x28:++numParen;strBuf.push('(');break;case 0x29:if(--numParen===0){this.nextChar();done=true;}else{strBuf.push(')');}break;case 0x5C:ch=this.nextChar();switch(ch){case-1:(0,_util.warn)('Unterminated string');done=true;break;case 0x6E:strBuf.push('\n');break;case 0x72:strBuf.push('\r');break;case 0x74:strBuf.push('\t');break;case 0x62:strBuf.push('\b');break;case 0x66:strBuf.push('\f');break;case 0x5C:case 0x28:case 0x29:strBuf.push(String.fromCharCode(ch));break;case 0x30:case 0x31:case 0x32:case 0x33:case 0x34:case 0x35:case 0x36:case 0x37:var x=ch&0x0F;ch=this.nextChar();charBuffered=true;if(ch>=0x30&&ch<=0x37){x=(x<<3)+(ch&0x0F);ch=this.nextChar();if(ch>=0x30&&ch<=0x37){charBuffered=false;x=(x<<3)+(ch&0x0F);}}strBuf.push(String.fromCharCode(x));break;case 0x0D:if(this.peekChar()===0x0A){this.nextChar();}break;case 0x0A:break;default:strBuf.push(String.fromCharCode(ch));break;}break;default:strBuf.push(String.fromCharCode(ch));break;}if(done){break;}if(!charBuffered){ch=this.nextChar();}}return strBuf.join('');},getName:function Lexer_getName(){var ch,previousCh;var strBuf=this.strBuf;strBuf.length=0;while((ch=this.nextChar())>=0&&!specialChars[ch]){if(ch===0x23){ch=this.nextChar();if(specialChars[ch]){(0,_util.warn)('Lexer_getName: '+'NUMBER SIGN (#) should be followed by a hexadecimal number.');strBuf.push('#');break;}var x=toHexDigit(ch);if(x!==-1){previousCh=ch;ch=this.nextChar();var x2=toHexDigit(ch);if(x2===-1){(0,_util.warn)('Lexer_getName: Illegal digit ('+String.fromCharCode(ch)+') in hexadecimal number.');strBuf.push('#',String.fromCharCode(previousCh));if(specialChars[ch]){break;}strBuf.push(String.fromCharCode(ch));continue;}strBuf.push(String.fromCharCode(x<<4|x2));}else{strBuf.push('#',String.fromCharCode(ch));}}else{strBuf.push(String.fromCharCode(ch));}}if(strBuf.length>127){(0,_util.warn)('name token is longer than allowed by the spec: '+strBuf.length);}return _primitives.Name.get(strBuf.join(''));},getHexString:function Lexer_getHexString(){var strBuf=this.strBuf;strBuf.length=0;var ch=this.currentChar;var isFirstHex=true;var firstDigit;var secondDigit;while(true){if(ch<0){(0,_util.warn)('Unterminated hex string');break;}else if(ch===0x3E){this.nextChar();break;}else if(specialChars[ch]===1){ch=this.nextChar();continue;}else{if(isFirstHex){firstDigit=toHexDigit(ch);if(firstDigit===-1){(0,_util.warn)('Ignoring invalid character "'+ch+'" in hex string');ch=this.nextChar();continue;}}else{secondDigit=toHexDigit(ch);if(secondDigit===-1){(0,_util.warn)('Ignoring invalid character "'+ch+'" in hex string');ch=this.nextChar();continue;}strBuf.push(String.fromCharCode(firstDigit<<4|secondDigit));}isFirstHex=!isFirstHex;ch=this.nextChar();}}return strBuf.join('');},getObj:function Lexer_getObj(){var comment=false;var ch=this.currentChar;while(true){if(ch<0){return _primitives.EOF;}if(comment){if(ch===0x0A||ch===0x0D){comment=false;}}else if(ch===0x25){comment=true;}else if(specialChars[ch]!==1){break;}ch=this.nextChar();}switch(ch|0){case 0x30:case 0x31:case 0x32:case 0x33:case 0x34:case 0x35:case 0x36:case 0x37:case 0x38:case 0x39:case 0x2B:case 0x2D:case 0x2E:return this.getNumber();case 0x28:return this.getString();case 0x2F:return this.getName();case 0x5B:this.nextChar();return _primitives.Cmd.get('[');case 0x5D:this.nextChar();return _primitives.Cmd.get(']');case 0x3C:ch=this.nextChar();if(ch===0x3C){this.nextChar();return _primitives.Cmd.get('<<');}return this.getHexString();case 0x3E:ch=this.nextChar();if(ch===0x3E){this.nextChar();return _primitives.Cmd.get('>>');}return _primitives.Cmd.get('>');case 0x7B:this.nextChar();return _primitives.Cmd.get('{');case 0x7D:this.nextChar();return _primitives.Cmd.get('}');case 0x29:this.nextChar();throw new _util.FormatError('Illegal character: '+ch);}var str=String.fromCharCode(ch);var knownCommands=this.knownCommands;var knownCommandFound=knownCommands&&knownCommands[str]!==undefined;while((ch=this.nextChar())>=0&&!specialChars[ch]){var possibleCommand=str+String.fromCharCode(ch);if(knownCommandFound&&knownCommands[possibleCommand]===undefined){break;}if(str.length===128){throw new _util.FormatError('Command token too long: '+str.length);}str=possibleCommand;knownCommandFound=knownCommands&&knownCommands[str]!==undefined;}if(str==='true'){return true;}if(str==='false'){return false;}if(str==='null'){return null;}if(str==='BI'){this.beginInlineImagePos=this.stream.pos;}return _primitives.Cmd.get(str);},skipToNextLine:function Lexer_skipToNextLine(){var ch=this.currentChar;while(ch>=0){if(ch===0x0D){ch=this.nextChar();if(ch===0x0A){this.nextChar();}break;}else if(ch===0x0A){this.nextChar();break;}ch=this.nextChar();}}};return Lexer;}();var Linearization={create:function LinearizationCreate(stream){function getInt(name,allowZeroValue){var obj=linDict.get(name);if(Number.isInteger(obj)&&(allowZeroValue?obj>=0:obj>0)){return obj;}throw new Error('The "'+name+'" parameter in the linearization '+'dictionary is invalid.');}function getHints(){var hints=linDict.get('H'),hintsLength,item;if(Array.isArray(hints)&&((hintsLength=hints.length)===2||hintsLength===4)){for(var index=0;index<hintsLength;index++){if(!(Number.isInteger(item=hints[index])&&item>0)){throw new Error('Hint ('+index+') in the linearization dictionary is invalid.');}}return hints;}throw new Error('Hint array in the linearization dictionary is invalid.');}var parser=new Parser(new Lexer(stream),false,null);var obj1=parser.getObj();var obj2=parser.getObj();var obj3=parser.getObj();var linDict=parser.getObj();var obj,length;if(!(Number.isInteger(obj1)&&Number.isInteger(obj2)&&(0,_primitives.isCmd)(obj3,'obj')&&(0,_primitives.isDict)(linDict)&&(0,_util.isNum)(obj=linDict.get('Linearized'))&&obj>0)){return null;}else if((length=getInt('L'))!==stream.length){throw new Error('The "L" parameter in the linearization dictionary '+'does not equal the stream length.');}return{length:length,hints:getHints(),objectNumberFirst:getInt('O'),endFirst:getInt('E'),numPages:getInt('N'),mainXRefEntriesOffset:getInt('T'),pageFirst:linDict.has('P')?getInt('P',true):0};}};exports.Lexer=Lexer;exports.Linearization=Linearization;exports.Parser=Parser;/***/},/* 140 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.LZWStream=exports.StringStream=exports.StreamsSequenceStream=exports.Stream=exports.RunLengthStream=exports.PredictorStream=exports.NullStream=exports.FlateStream=exports.DecodeStream=exports.DecryptStream=exports.AsciiHexStream=exports.Ascii85Stream=undefined;var _util=__w_pdfjs_require__(2);var _primitives=__w_pdfjs_require__(138);function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}var Stream=function StreamClosure(){function Stream(arrayBuffer,start,length,dict){this.bytes=arrayBuffer instanceof Uint8Array?arrayBuffer:new Uint8Array(arrayBuffer);this.start=start||0;this.pos=this.start;this.end=start+length||this.bytes.length;this.dict=dict;}Stream.prototype={get length(){return this.end-this.start;},get isEmpty(){return this.length===0;},getByte:function Stream_getByte(){if(this.pos>=this.end){return-1;}return this.bytes[this.pos++];},getUint16:function Stream_getUint16(){var b0=this.getByte();var b1=this.getByte();if(b0===-1||b1===-1){return-1;}return(b0<<8)+b1;},getInt32:function Stream_getInt32(){var b0=this.getByte();var b1=this.getByte();var b2=this.getByte();var b3=this.getByte();return(b0<<24)+(b1<<16)+(b2<<8)+b3;},getBytes:function getBytes(length){var forceClamped=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var bytes=this.bytes;var pos=this.pos;var strEnd=this.end;if(!length){var _subarray=bytes.subarray(pos,strEnd);return forceClamped?new Uint8ClampedArray(_subarray):_subarray;}var end=pos+length;if(end>strEnd){end=strEnd;}this.pos=end;var subarray=bytes.subarray(pos,end);return forceClamped?new Uint8ClampedArray(subarray):subarray;},peekByte:function Stream_peekByte(){var peekedByte=this.getByte();this.pos--;return peekedByte;},peekBytes:function peekBytes(length){var forceClamped=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var bytes=this.getBytes(length,forceClamped);this.pos-=bytes.length;return bytes;},skip:function Stream_skip(n){if(!n){n=1;}this.pos+=n;},reset:function Stream_reset(){this.pos=this.start;},moveStart:function Stream_moveStart(){this.start=this.pos;},makeSubStream:function Stream_makeSubStream(start,length,dict){return new Stream(this.bytes.buffer,start,length,dict);}};return Stream;}();var StringStream=function StringStreamClosure(){function StringStream(str){var bytes=(0,_util.stringToBytes)(str);Stream.call(this,bytes);}StringStream.prototype=Stream.prototype;return StringStream;}();var DecodeStream=function DecodeStreamClosure(){var emptyBuffer=new Uint8Array(0);function DecodeStream(maybeMinBufferLength){this._rawMinBufferLength=maybeMinBufferLength||0;this.pos=0;this.bufferLength=0;this.eof=false;this.buffer=emptyBuffer;this.minBufferLength=512;if(maybeMinBufferLength){while(this.minBufferLength<maybeMinBufferLength){this.minBufferLength*=2;}}}DecodeStream.prototype={get isEmpty(){while(!this.eof&&this.bufferLength===0){this.readBlock();}return this.bufferLength===0;},ensureBuffer:function DecodeStream_ensureBuffer(requested){var buffer=this.buffer;if(requested<=buffer.byteLength){return buffer;}var size=this.minBufferLength;while(size<requested){size*=2;}var buffer2=new Uint8Array(size);buffer2.set(buffer);return this.buffer=buffer2;},getByte:function DecodeStream_getByte(){var pos=this.pos;while(this.bufferLength<=pos){if(this.eof){return-1;}this.readBlock();}return this.buffer[this.pos++];},getUint16:function DecodeStream_getUint16(){var b0=this.getByte();var b1=this.getByte();if(b0===-1||b1===-1){return-1;}return(b0<<8)+b1;},getInt32:function DecodeStream_getInt32(){var b0=this.getByte();var b1=this.getByte();var b2=this.getByte();var b3=this.getByte();return(b0<<24)+(b1<<16)+(b2<<8)+b3;},getBytes:function getBytes(length){var forceClamped=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var end,pos=this.pos;if(length){this.ensureBuffer(pos+length);end=pos+length;while(!this.eof&&this.bufferLength<end){this.readBlock();}var bufEnd=this.bufferLength;if(end>bufEnd){end=bufEnd;}}else{while(!this.eof){this.readBlock();}end=this.bufferLength;}this.pos=end;var subarray=this.buffer.subarray(pos,end);return forceClamped&&!(subarray instanceof Uint8ClampedArray)?new Uint8ClampedArray(subarray):subarray;},peekByte:function DecodeStream_peekByte(){var peekedByte=this.getByte();this.pos--;return peekedByte;},peekBytes:function peekBytes(length){var forceClamped=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var bytes=this.getBytes(length,forceClamped);this.pos-=bytes.length;return bytes;},makeSubStream:function DecodeStream_makeSubStream(start,length,dict){var end=start+length;while(this.bufferLength<=end&&!this.eof){this.readBlock();}return new Stream(this.buffer,start,length,dict);},skip:function DecodeStream_skip(n){if(!n){n=1;}this.pos+=n;},reset:function DecodeStream_reset(){this.pos=0;},getBaseStreams:function DecodeStream_getBaseStreams(){if(this.str&&this.str.getBaseStreams){return this.str.getBaseStreams();}return[];}};return DecodeStream;}();var StreamsSequenceStream=function StreamsSequenceStreamClosure(){function StreamsSequenceStream(streams){this.streams=streams;var maybeLength=0;for(var i=0,ii=streams.length;i<ii;i++){var stream=streams[i];if(stream instanceof DecodeStream){maybeLength+=stream._rawMinBufferLength;}else{maybeLength+=stream.length;}}DecodeStream.call(this,maybeLength);}StreamsSequenceStream.prototype=Object.create(DecodeStream.prototype);StreamsSequenceStream.prototype.readBlock=function streamSequenceStreamReadBlock(){var streams=this.streams;if(streams.length===0){this.eof=true;return;}var stream=streams.shift();var chunk=stream.getBytes();var bufferLength=this.bufferLength;var newLength=bufferLength+chunk.length;var buffer=this.ensureBuffer(newLength);buffer.set(chunk,bufferLength);this.bufferLength=newLength;};StreamsSequenceStream.prototype.getBaseStreams=function StreamsSequenceStream_getBaseStreams(){var baseStreams=[];for(var i=0,ii=this.streams.length;i<ii;i++){var stream=this.streams[i];if(stream.getBaseStreams){baseStreams.push.apply(baseStreams,_toConsumableArray(stream.getBaseStreams()));}}return baseStreams;};return StreamsSequenceStream;}();var FlateStream=function FlateStreamClosure(){var codeLenCodeMap=new Int32Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);var lengthDecode=new Int32Array([0x00003,0x00004,0x00005,0x00006,0x00007,0x00008,0x00009,0x0000a,0x1000b,0x1000d,0x1000f,0x10011,0x20013,0x20017,0x2001b,0x2001f,0x30023,0x3002b,0x30033,0x3003b,0x40043,0x40053,0x40063,0x40073,0x50083,0x500a3,0x500c3,0x500e3,0x00102,0x00102,0x00102]);var distDecode=new Int32Array([0x00001,0x00002,0x00003,0x00004,0x10005,0x10007,0x20009,0x2000d,0x30011,0x30019,0x40021,0x40031,0x50041,0x50061,0x60081,0x600c1,0x70101,0x70181,0x80201,0x80301,0x90401,0x90601,0xa0801,0xa0c01,0xb1001,0xb1801,0xc2001,0xc3001,0xd4001,0xd6001]);var fixedLitCodeTab=[new Int32Array([0x70100,0x80050,0x80010,0x80118,0x70110,0x80070,0x80030,0x900c0,0x70108,0x80060,0x80020,0x900a0,0x80000,0x80080,0x80040,0x900e0,0x70104,0x80058,0x80018,0x90090,0x70114,0x80078,0x80038,0x900d0,0x7010c,0x80068,0x80028,0x900b0,0x80008,0x80088,0x80048,0x900f0,0x70102,0x80054,0x80014,0x8011c,0x70112,0x80074,0x80034,0x900c8,0x7010a,0x80064,0x80024,0x900a8,0x80004,0x80084,0x80044,0x900e8,0x70106,0x8005c,0x8001c,0x90098,0x70116,0x8007c,0x8003c,0x900d8,0x7010e,0x8006c,0x8002c,0x900b8,0x8000c,0x8008c,0x8004c,0x900f8,0x70101,0x80052,0x80012,0x8011a,0x70111,0x80072,0x80032,0x900c4,0x70109,0x80062,0x80022,0x900a4,0x80002,0x80082,0x80042,0x900e4,0x70105,0x8005a,0x8001a,0x90094,0x70115,0x8007a,0x8003a,0x900d4,0x7010d,0x8006a,0x8002a,0x900b4,0x8000a,0x8008a,0x8004a,0x900f4,0x70103,0x80056,0x80016,0x8011e,0x70113,0x80076,0x80036,0x900cc,0x7010b,0x80066,0x80026,0x900ac,0x80006,0x80086,0x80046,0x900ec,0x70107,0x8005e,0x8001e,0x9009c,0x70117,0x8007e,0x8003e,0x900dc,0x7010f,0x8006e,0x8002e,0x900bc,0x8000e,0x8008e,0x8004e,0x900fc,0x70100,0x80051,0x80011,0x80119,0x70110,0x80071,0x80031,0x900c2,0x70108,0x80061,0x80021,0x900a2,0x80001,0x80081,0x80041,0x900e2,0x70104,0x80059,0x80019,0x90092,0x70114,0x80079,0x80039,0x900d2,0x7010c,0x80069,0x80029,0x900b2,0x80009,0x80089,0x80049,0x900f2,0x70102,0x80055,0x80015,0x8011d,0x70112,0x80075,0x80035,0x900ca,0x7010a,0x80065,0x80025,0x900aa,0x80005,0x80085,0x80045,0x900ea,0x70106,0x8005d,0x8001d,0x9009a,0x70116,0x8007d,0x8003d,0x900da,0x7010e,0x8006d,0x8002d,0x900ba,0x8000d,0x8008d,0x8004d,0x900fa,0x70101,0x80053,0x80013,0x8011b,0x70111,0x80073,0x80033,0x900c6,0x70109,0x80063,0x80023,0x900a6,0x80003,0x80083,0x80043,0x900e6,0x70105,0x8005b,0x8001b,0x90096,0x70115,0x8007b,0x8003b,0x900d6,0x7010d,0x8006b,0x8002b,0x900b6,0x8000b,0x8008b,0x8004b,0x900f6,0x70103,0x80057,0x80017,0x8011f,0x70113,0x80077,0x80037,0x900ce,0x7010b,0x80067,0x80027,0x900ae,0x80007,0x80087,0x80047,0x900ee,0x70107,0x8005f,0x8001f,0x9009e,0x70117,0x8007f,0x8003f,0x900de,0x7010f,0x8006f,0x8002f,0x900be,0x8000f,0x8008f,0x8004f,0x900fe,0x70100,0x80050,0x80010,0x80118,0x70110,0x80070,0x80030,0x900c1,0x70108,0x80060,0x80020,0x900a1,0x80000,0x80080,0x80040,0x900e1,0x70104,0x80058,0x80018,0x90091,0x70114,0x80078,0x80038,0x900d1,0x7010c,0x80068,0x80028,0x900b1,0x80008,0x80088,0x80048,0x900f1,0x70102,0x80054,0x80014,0x8011c,0x70112,0x80074,0x80034,0x900c9,0x7010a,0x80064,0x80024,0x900a9,0x80004,0x80084,0x80044,0x900e9,0x70106,0x8005c,0x8001c,0x90099,0x70116,0x8007c,0x8003c,0x900d9,0x7010e,0x8006c,0x8002c,0x900b9,0x8000c,0x8008c,0x8004c,0x900f9,0x70101,0x80052,0x80012,0x8011a,0x70111,0x80072,0x80032,0x900c5,0x70109,0x80062,0x80022,0x900a5,0x80002,0x80082,0x80042,0x900e5,0x70105,0x8005a,0x8001a,0x90095,0x70115,0x8007a,0x8003a,0x900d5,0x7010d,0x8006a,0x8002a,0x900b5,0x8000a,0x8008a,0x8004a,0x900f5,0x70103,0x80056,0x80016,0x8011e,0x70113,0x80076,0x80036,0x900cd,0x7010b,0x80066,0x80026,0x900ad,0x80006,0x80086,0x80046,0x900ed,0x70107,0x8005e,0x8001e,0x9009d,0x70117,0x8007e,0x8003e,0x900dd,0x7010f,0x8006e,0x8002e,0x900bd,0x8000e,0x8008e,0x8004e,0x900fd,0x70100,0x80051,0x80011,0x80119,0x70110,0x80071,0x80031,0x900c3,0x70108,0x80061,0x80021,0x900a3,0x80001,0x80081,0x80041,0x900e3,0x70104,0x80059,0x80019,0x90093,0x70114,0x80079,0x80039,0x900d3,0x7010c,0x80069,0x80029,0x900b3,0x80009,0x80089,0x80049,0x900f3,0x70102,0x80055,0x80015,0x8011d,0x70112,0x80075,0x80035,0x900cb,0x7010a,0x80065,0x80025,0x900ab,0x80005,0x80085,0x80045,0x900eb,0x70106,0x8005d,0x8001d,0x9009b,0x70116,0x8007d,0x8003d,0x900db,0x7010e,0x8006d,0x8002d,0x900bb,0x8000d,0x8008d,0x8004d,0x900fb,0x70101,0x80053,0x80013,0x8011b,0x70111,0x80073,0x80033,0x900c7,0x70109,0x80063,0x80023,0x900a7,0x80003,0x80083,0x80043,0x900e7,0x70105,0x8005b,0x8001b,0x90097,0x70115,0x8007b,0x8003b,0x900d7,0x7010d,0x8006b,0x8002b,0x900b7,0x8000b,0x8008b,0x8004b,0x900f7,0x70103,0x80057,0x80017,0x8011f,0x70113,0x80077,0x80037,0x900cf,0x7010b,0x80067,0x80027,0x900af,0x80007,0x80087,0x80047,0x900ef,0x70107,0x8005f,0x8001f,0x9009f,0x70117,0x8007f,0x8003f,0x900df,0x7010f,0x8006f,0x8002f,0x900bf,0x8000f,0x8008f,0x8004f,0x900ff]),9];var fixedDistCodeTab=[new Int32Array([0x50000,0x50010,0x50008,0x50018,0x50004,0x50014,0x5000c,0x5001c,0x50002,0x50012,0x5000a,0x5001a,0x50006,0x50016,0x5000e,0x00000,0x50001,0x50011,0x50009,0x50019,0x50005,0x50015,0x5000d,0x5001d,0x50003,0x50013,0x5000b,0x5001b,0x50007,0x50017,0x5000f,0x00000]),5];function FlateStream(str,maybeLength){this.str=str;this.dict=str.dict;var cmf=str.getByte();var flg=str.getByte();if(cmf===-1||flg===-1){throw new _util.FormatError('Invalid header in flate stream: '+cmf+', '+flg);}if((cmf&0x0f)!==0x08){throw new _util.FormatError('Unknown compression method in flate stream: '+cmf+', '+flg);}if(((cmf<<8)+flg)%31!==0){throw new _util.FormatError('Bad FCHECK in flate stream: '+cmf+', '+flg);}if(flg&0x20){throw new _util.FormatError('FDICT bit set in flate stream: '+cmf+', '+flg);}this.codeSize=0;this.codeBuf=0;DecodeStream.call(this,maybeLength);}FlateStream.prototype=Object.create(DecodeStream.prototype);FlateStream.prototype.getBits=function FlateStream_getBits(bits){var str=this.str;var codeSize=this.codeSize;var codeBuf=this.codeBuf;var b;while(codeSize<bits){if((b=str.getByte())===-1){throw new _util.FormatError('Bad encoding in flate stream');}codeBuf|=b<<codeSize;codeSize+=8;}b=codeBuf&(1<<bits)-1;this.codeBuf=codeBuf>>bits;this.codeSize=codeSize-=bits;return b;};FlateStream.prototype.getCode=function FlateStream_getCode(table){var str=this.str;var codes=table[0];var maxLen=table[1];var codeSize=this.codeSize;var codeBuf=this.codeBuf;var b;while(codeSize<maxLen){if((b=str.getByte())===-1){break;}codeBuf|=b<<codeSize;codeSize+=8;}var code=codes[codeBuf&(1<<maxLen)-1];var codeLen=code>>16;var codeVal=code&0xffff;if(codeLen<1||codeSize<codeLen){throw new _util.FormatError('Bad encoding in flate stream');}this.codeBuf=codeBuf>>codeLen;this.codeSize=codeSize-codeLen;return codeVal;};FlateStream.prototype.generateHuffmanTable=function flateStreamGenerateHuffmanTable(lengths){var n=lengths.length;var maxLen=0;var i;for(i=0;i<n;++i){if(lengths[i]>maxLen){maxLen=lengths[i];}}var size=1<<maxLen;var codes=new Int32Array(size);for(var len=1,code=0,skip=2;len<=maxLen;++len,code<<=1,skip<<=1){for(var val=0;val<n;++val){if(lengths[val]===len){var code2=0;var t=code;for(i=0;i<len;++i){code2=code2<<1|t&1;t>>=1;}for(i=code2;i<size;i+=skip){codes[i]=len<<16|val;}++code;}}}return[codes,maxLen];};FlateStream.prototype.readBlock=function FlateStream_readBlock(){var buffer,len;var str=this.str;var hdr=this.getBits(3);if(hdr&1){this.eof=true;}hdr>>=1;if(hdr===0){var b;if((b=str.getByte())===-1){throw new _util.FormatError('Bad block header in flate stream');}var blockLen=b;if((b=str.getByte())===-1){throw new _util.FormatError('Bad block header in flate stream');}blockLen|=b<<8;if((b=str.getByte())===-1){throw new _util.FormatError('Bad block header in flate stream');}var check=b;if((b=str.getByte())===-1){throw new _util.FormatError('Bad block header in flate stream');}check|=b<<8;if(check!==(~blockLen&0xffff)&&(blockLen!==0||check!==0)){throw new _util.FormatError('Bad uncompressed block length in flate stream');}this.codeBuf=0;this.codeSize=0;var bufferLength=this.bufferLength;buffer=this.ensureBuffer(bufferLength+blockLen);var end=bufferLength+blockLen;this.bufferLength=end;if(blockLen===0){if(str.peekByte()===-1){this.eof=true;}}else{for(var n=bufferLength;n<end;++n){if((b=str.getByte())===-1){this.eof=true;break;}buffer[n]=b;}}return;}var litCodeTable;var distCodeTable;if(hdr===1){litCodeTable=fixedLitCodeTab;distCodeTable=fixedDistCodeTab;}else if(hdr===2){var numLitCodes=this.getBits(5)+257;var numDistCodes=this.getBits(5)+1;var numCodeLenCodes=this.getBits(4)+4;var codeLenCodeLengths=new Uint8Array(codeLenCodeMap.length);var i;for(i=0;i<numCodeLenCodes;++i){codeLenCodeLengths[codeLenCodeMap[i]]=this.getBits(3);}var codeLenCodeTab=this.generateHuffmanTable(codeLenCodeLengths);len=0;i=0;var codes=numLitCodes+numDistCodes;var codeLengths=new Uint8Array(codes);var bitsLength,bitsOffset,what;while(i<codes){var code=this.getCode(codeLenCodeTab);if(code===16){bitsLength=2;bitsOffset=3;what=len;}else if(code===17){bitsLength=3;bitsOffset=3;what=len=0;}else if(code===18){bitsLength=7;bitsOffset=11;what=len=0;}else{codeLengths[i++]=len=code;continue;}var repeatLength=this.getBits(bitsLength)+bitsOffset;while(repeatLength-->0){codeLengths[i++]=what;}}litCodeTable=this.generateHuffmanTable(codeLengths.subarray(0,numLitCodes));distCodeTable=this.generateHuffmanTable(codeLengths.subarray(numLitCodes,codes));}else{throw new _util.FormatError('Unknown block type in flate stream');}buffer=this.buffer;var limit=buffer?buffer.length:0;var pos=this.bufferLength;while(true){var code1=this.getCode(litCodeTable);if(code1<256){if(pos+1>=limit){buffer=this.ensureBuffer(pos+1);limit=buffer.length;}buffer[pos++]=code1;continue;}if(code1===256){this.bufferLength=pos;return;}code1-=257;code1=lengthDecode[code1];var code2=code1>>16;if(code2>0){code2=this.getBits(code2);}len=(code1&0xffff)+code2;code1=this.getCode(distCodeTable);code1=distDecode[code1];code2=code1>>16;if(code2>0){code2=this.getBits(code2);}var dist=(code1&0xffff)+code2;if(pos+len>=limit){buffer=this.ensureBuffer(pos+len);limit=buffer.length;}for(var k=0;k<len;++k,++pos){buffer[pos]=buffer[pos-dist];}}};return FlateStream;}();var PredictorStream=function PredictorStreamClosure(){function PredictorStream(str,maybeLength,params){if(!(0,_primitives.isDict)(params)){return str;}var predictor=this.predictor=params.get('Predictor')||1;if(predictor<=1){return str;}if(predictor!==2&&(predictor<10||predictor>15)){throw new _util.FormatError('Unsupported predictor: '+predictor);}if(predictor===2){this.readBlock=this.readBlockTiff;}else{this.readBlock=this.readBlockPng;}this.str=str;this.dict=str.dict;var colors=this.colors=params.get('Colors')||1;var bits=this.bits=params.get('BitsPerComponent')||8;var columns=this.columns=params.get('Columns')||1;this.pixBytes=colors*bits+7>>3;this.rowBytes=columns*colors*bits+7>>3;DecodeStream.call(this,maybeLength);return this;}PredictorStream.prototype=Object.create(DecodeStream.prototype);PredictorStream.prototype.readBlockTiff=function predictorStreamReadBlockTiff(){var rowBytes=this.rowBytes;var bufferLength=this.bufferLength;var buffer=this.ensureBuffer(bufferLength+rowBytes);var bits=this.bits;var colors=this.colors;var rawBytes=this.str.getBytes(rowBytes);this.eof=!rawBytes.length;if(this.eof){return;}var inbuf=0,outbuf=0;var inbits=0,outbits=0;var pos=bufferLength;var i;if(bits===1&&colors===1){for(i=0;i<rowBytes;++i){var c=rawBytes[i]^inbuf;c^=c>>1;c^=c>>2;c^=c>>4;inbuf=(c&1)<<7;buffer[pos++]=c;}}else if(bits===8){for(i=0;i<colors;++i){buffer[pos++]=rawBytes[i];}for(;i<rowBytes;++i){buffer[pos]=buffer[pos-colors]+rawBytes[i];pos++;}}else if(bits===16){var bytesPerPixel=colors*2;for(i=0;i<bytesPerPixel;++i){buffer[pos++]=rawBytes[i];}for(;i<rowBytes;i+=2){var sum=((rawBytes[i]&0xFF)<<8)+(rawBytes[i+1]&0xFF)+((buffer[pos-bytesPerPixel]&0xFF)<<8)+(buffer[pos-bytesPerPixel+1]&0xFF);buffer[pos++]=sum>>8&0xFF;buffer[pos++]=sum&0xFF;}}else{var compArray=new Uint8Array(colors+1);var bitMask=(1<<bits)-1;var j=0,k=bufferLength;var columns=this.columns;for(i=0;i<columns;++i){for(var kk=0;kk<colors;++kk){if(inbits<bits){inbuf=inbuf<<8|rawBytes[j++]&0xFF;inbits+=8;}compArray[kk]=compArray[kk]+(inbuf>>inbits-bits)&bitMask;inbits-=bits;outbuf=outbuf<<bits|compArray[kk];outbits+=bits;if(outbits>=8){buffer[k++]=outbuf>>outbits-8&0xFF;outbits-=8;}}}if(outbits>0){buffer[k++]=(outbuf<<8-outbits)+(inbuf&(1<<8-outbits)-1);}}this.bufferLength+=rowBytes;};PredictorStream.prototype.readBlockPng=function predictorStreamReadBlockPng(){var rowBytes=this.rowBytes;var pixBytes=this.pixBytes;var predictor=this.str.getByte();var rawBytes=this.str.getBytes(rowBytes);this.eof=!rawBytes.length;if(this.eof){return;}var bufferLength=this.bufferLength;var buffer=this.ensureBuffer(bufferLength+rowBytes);var prevRow=buffer.subarray(bufferLength-rowBytes,bufferLength);if(prevRow.length===0){prevRow=new Uint8Array(rowBytes);}var i,j=bufferLength,up,c;switch(predictor){case 0:for(i=0;i<rowBytes;++i){buffer[j++]=rawBytes[i];}break;case 1:for(i=0;i<pixBytes;++i){buffer[j++]=rawBytes[i];}for(;i<rowBytes;++i){buffer[j]=buffer[j-pixBytes]+rawBytes[i]&0xFF;j++;}break;case 2:for(i=0;i<rowBytes;++i){buffer[j++]=prevRow[i]+rawBytes[i]&0xFF;}break;case 3:for(i=0;i<pixBytes;++i){buffer[j++]=(prevRow[i]>>1)+rawBytes[i];}for(;i<rowBytes;++i){buffer[j]=(prevRow[i]+buffer[j-pixBytes]>>1)+rawBytes[i]&0xFF;j++;}break;case 4:for(i=0;i<pixBytes;++i){up=prevRow[i];c=rawBytes[i];buffer[j++]=up+c;}for(;i<rowBytes;++i){up=prevRow[i];var upLeft=prevRow[i-pixBytes];var left=buffer[j-pixBytes];var p=left+up-upLeft;var pa=p-left;if(pa<0){pa=-pa;}var pb=p-up;if(pb<0){pb=-pb;}var pc=p-upLeft;if(pc<0){pc=-pc;}c=rawBytes[i];if(pa<=pb&&pa<=pc){buffer[j++]=left+c;}else if(pb<=pc){buffer[j++]=up+c;}else{buffer[j++]=upLeft+c;}}break;default:throw new _util.FormatError('Unsupported predictor: '+predictor);}this.bufferLength+=rowBytes;};return PredictorStream;}();var DecryptStream=function DecryptStreamClosure(){function DecryptStream(str,maybeLength,decrypt){this.str=str;this.dict=str.dict;this.decrypt=decrypt;this.nextChunk=null;this.initialized=false;DecodeStream.call(this,maybeLength);}var chunkSize=512;DecryptStream.prototype=Object.create(DecodeStream.prototype);DecryptStream.prototype.readBlock=function DecryptStream_readBlock(){var chunk;if(this.initialized){chunk=this.nextChunk;}else{chunk=this.str.getBytes(chunkSize);this.initialized=true;}if(!chunk||chunk.length===0){this.eof=true;return;}this.nextChunk=this.str.getBytes(chunkSize);var hasMoreData=this.nextChunk&&this.nextChunk.length>0;var decrypt=this.decrypt;chunk=decrypt(chunk,!hasMoreData);var bufferLength=this.bufferLength;var i,n=chunk.length;var buffer=this.ensureBuffer(bufferLength+n);for(i=0;i<n;i++){buffer[bufferLength++]=chunk[i];}this.bufferLength=bufferLength;};return DecryptStream;}();var Ascii85Stream=function Ascii85StreamClosure(){function Ascii85Stream(str,maybeLength){this.str=str;this.dict=str.dict;this.input=new Uint8Array(5);if(maybeLength){maybeLength=0.8*maybeLength;}DecodeStream.call(this,maybeLength);}Ascii85Stream.prototype=Object.create(DecodeStream.prototype);Ascii85Stream.prototype.readBlock=function Ascii85Stream_readBlock(){var TILDA_CHAR=0x7E;var Z_LOWER_CHAR=0x7A;var EOF=-1;var str=this.str;var c=str.getByte();while((0,_util.isSpace)(c)){c=str.getByte();}if(c===EOF||c===TILDA_CHAR){this.eof=true;return;}var bufferLength=this.bufferLength,buffer;var i;if(c===Z_LOWER_CHAR){buffer=this.ensureBuffer(bufferLength+4);for(i=0;i<4;++i){buffer[bufferLength+i]=0;}this.bufferLength+=4;}else{var input=this.input;input[0]=c;for(i=1;i<5;++i){c=str.getByte();while((0,_util.isSpace)(c)){c=str.getByte();}input[i]=c;if(c===EOF||c===TILDA_CHAR){break;}}buffer=this.ensureBuffer(bufferLength+i-1);this.bufferLength+=i-1;if(i<5){for(;i<5;++i){input[i]=0x21+84;}this.eof=true;}var t=0;for(i=0;i<5;++i){t=t*85+(input[i]-0x21);}for(i=3;i>=0;--i){buffer[bufferLength+i]=t&0xFF;t>>=8;}}};return Ascii85Stream;}();var AsciiHexStream=function AsciiHexStreamClosure(){function AsciiHexStream(str,maybeLength){this.str=str;this.dict=str.dict;this.firstDigit=-1;if(maybeLength){maybeLength=0.5*maybeLength;}DecodeStream.call(this,maybeLength);}AsciiHexStream.prototype=Object.create(DecodeStream.prototype);AsciiHexStream.prototype.readBlock=function AsciiHexStream_readBlock(){var UPSTREAM_BLOCK_SIZE=8000;var bytes=this.str.getBytes(UPSTREAM_BLOCK_SIZE);if(!bytes.length){this.eof=true;return;}var maxDecodeLength=bytes.length+1>>1;var buffer=this.ensureBuffer(this.bufferLength+maxDecodeLength);var bufferLength=this.bufferLength;var firstDigit=this.firstDigit;for(var i=0,ii=bytes.length;i<ii;i++){var ch=bytes[i],digit;if(ch>=0x30&&ch<=0x39){digit=ch&0x0F;}else if(ch>=0x41&&ch<=0x46||ch>=0x61&&ch<=0x66){digit=(ch&0x0F)+9;}else if(ch===0x3E){this.eof=true;break;}else{continue;}if(firstDigit<0){firstDigit=digit;}else{buffer[bufferLength++]=firstDigit<<4|digit;firstDigit=-1;}}if(firstDigit>=0&&this.eof){buffer[bufferLength++]=firstDigit<<4;firstDigit=-1;}this.firstDigit=firstDigit;this.bufferLength=bufferLength;};return AsciiHexStream;}();var RunLengthStream=function RunLengthStreamClosure(){function RunLengthStream(str,maybeLength){this.str=str;this.dict=str.dict;DecodeStream.call(this,maybeLength);}RunLengthStream.prototype=Object.create(DecodeStream.prototype);RunLengthStream.prototype.readBlock=function RunLengthStream_readBlock(){var repeatHeader=this.str.getBytes(2);if(!repeatHeader||repeatHeader.length<2||repeatHeader[0]===128){this.eof=true;return;}var buffer;var bufferLength=this.bufferLength;var n=repeatHeader[0];if(n<128){buffer=this.ensureBuffer(bufferLength+n+1);buffer[bufferLength++]=repeatHeader[1];if(n>0){var source=this.str.getBytes(n);buffer.set(source,bufferLength);bufferLength+=n;}}else{n=257-n;var b=repeatHeader[1];buffer=this.ensureBuffer(bufferLength+n+1);for(var i=0;i<n;i++){buffer[bufferLength++]=b;}}this.bufferLength=bufferLength;};return RunLengthStream;}();var LZWStream=function LZWStreamClosure(){function LZWStream(str,maybeLength,earlyChange){this.str=str;this.dict=str.dict;this.cachedData=0;this.bitsCached=0;var maxLzwDictionarySize=4096;var lzwState={earlyChange:earlyChange,codeLength:9,nextCode:258,dictionaryValues:new Uint8Array(maxLzwDictionarySize),dictionaryLengths:new Uint16Array(maxLzwDictionarySize),dictionaryPrevCodes:new Uint16Array(maxLzwDictionarySize),currentSequence:new Uint8Array(maxLzwDictionarySize),currentSequenceLength:0};for(var i=0;i<256;++i){lzwState.dictionaryValues[i]=i;lzwState.dictionaryLengths[i]=1;}this.lzwState=lzwState;DecodeStream.call(this,maybeLength);}LZWStream.prototype=Object.create(DecodeStream.prototype);LZWStream.prototype.readBits=function LZWStream_readBits(n){var bitsCached=this.bitsCached;var cachedData=this.cachedData;while(bitsCached<n){var c=this.str.getByte();if(c===-1){this.eof=true;return null;}cachedData=cachedData<<8|c;bitsCached+=8;}this.bitsCached=bitsCached-=n;this.cachedData=cachedData;this.lastCode=null;return cachedData>>>bitsCached&(1<<n)-1;};LZWStream.prototype.readBlock=function LZWStream_readBlock(){var blockSize=512;var estimatedDecodedSize=blockSize*2,decodedSizeDelta=blockSize;var i,j,q;var lzwState=this.lzwState;if(!lzwState){return;}var earlyChange=lzwState.earlyChange;var nextCode=lzwState.nextCode;var dictionaryValues=lzwState.dictionaryValues;var dictionaryLengths=lzwState.dictionaryLengths;var dictionaryPrevCodes=lzwState.dictionaryPrevCodes;var codeLength=lzwState.codeLength;var prevCode=lzwState.prevCode;var currentSequence=lzwState.currentSequence;var currentSequenceLength=lzwState.currentSequenceLength;var decodedLength=0;var currentBufferLength=this.bufferLength;var buffer=this.ensureBuffer(this.bufferLength+estimatedDecodedSize);for(i=0;i<blockSize;i++){var code=this.readBits(codeLength);var hasPrev=currentSequenceLength>0;if(code<256){currentSequence[0]=code;currentSequenceLength=1;}else if(code>=258){if(code<nextCode){currentSequenceLength=dictionaryLengths[code];for(j=currentSequenceLength-1,q=code;j>=0;j--){currentSequence[j]=dictionaryValues[q];q=dictionaryPrevCodes[q];}}else{currentSequence[currentSequenceLength++]=currentSequence[0];}}else if(code===256){codeLength=9;nextCode=258;currentSequenceLength=0;continue;}else{this.eof=true;delete this.lzwState;break;}if(hasPrev){dictionaryPrevCodes[nextCode]=prevCode;dictionaryLengths[nextCode]=dictionaryLengths[prevCode]+1;dictionaryValues[nextCode]=currentSequence[0];nextCode++;codeLength=nextCode+earlyChange&nextCode+earlyChange-1?codeLength:Math.min(Math.log(nextCode+earlyChange)/0.6931471805599453+1,12)|0;}prevCode=code;decodedLength+=currentSequenceLength;if(estimatedDecodedSize<decodedLength){do{estimatedDecodedSize+=decodedSizeDelta;}while(estimatedDecodedSize<decodedLength);buffer=this.ensureBuffer(this.bufferLength+estimatedDecodedSize);}for(j=0;j<currentSequenceLength;j++){buffer[currentBufferLength++]=currentSequence[j];}}lzwState.nextCode=nextCode;lzwState.codeLength=codeLength;lzwState.prevCode=prevCode;lzwState.currentSequenceLength=currentSequenceLength;this.bufferLength=currentBufferLength;};return LZWStream;}();var NullStream=function NullStreamClosure(){function NullStream(){Stream.call(this,new Uint8Array(0));}NullStream.prototype=Stream.prototype;return NullStream;}();exports.Ascii85Stream=Ascii85Stream;exports.AsciiHexStream=AsciiHexStream;exports.DecryptStream=DecryptStream;exports.DecodeStream=DecodeStream;exports.FlateStream=FlateStream;exports.NullStream=NullStream;exports.PredictorStream=PredictorStream;exports.RunLengthStream=RunLengthStream;exports.Stream=Stream;exports.StreamsSequenceStream=StreamsSequenceStream;exports.StringStream=StringStream;exports.LZWStream=LZWStream;/***/},/* 141 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.CCITTFaxStream=undefined;var _primitives=__w_pdfjs_require__(138);var _ccitt=__w_pdfjs_require__(142);var _stream=__w_pdfjs_require__(140);var CCITTFaxStream=function CCITTFaxStreamClosure(){function CCITTFaxStream(str,maybeLength,params){this.str=str;this.dict=str.dict;if(!(0,_primitives.isDict)(params)){params=_primitives.Dict.empty;}var source={next:function next(){return str.getByte();}};this.ccittFaxDecoder=new _ccitt.CCITTFaxDecoder(source,{K:params.get('K'),EndOfLine:params.get('EndOfLine'),EncodedByteAlign:params.get('EncodedByteAlign'),Columns:params.get('Columns'),Rows:params.get('Rows'),EndOfBlock:params.get('EndOfBlock'),BlackIs1:params.get('BlackIs1')});_stream.DecodeStream.call(this,maybeLength);}CCITTFaxStream.prototype=Object.create(_stream.DecodeStream.prototype);CCITTFaxStream.prototype.readBlock=function(){while(!this.eof){var c=this.ccittFaxDecoder.readNextChar();if(c===-1){this.eof=true;return;}this.ensureBuffer(this.bufferLength+1);this.buffer[this.bufferLength++]=c;}};return CCITTFaxStream;}();exports.CCITTFaxStream=CCITTFaxStream;/***/},/* 142 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.CCITTFaxDecoder=undefined;var _util=__w_pdfjs_require__(2);var CCITTFaxDecoder=function CCITTFaxDecoder(){var ccittEOL=-2;var ccittEOF=-1;var twoDimPass=0;var twoDimHoriz=1;var twoDimVert0=2;var twoDimVertR1=3;var twoDimVertL1=4;var twoDimVertR2=5;var twoDimVertL2=6;var twoDimVertR3=7;var twoDimVertL3=8;var twoDimTable=[[-1,-1],[-1,-1],[7,twoDimVertL3],[7,twoDimVertR3],[6,twoDimVertL2],[6,twoDimVertL2],[6,twoDimVertR2],[6,twoDimVertR2],[4,twoDimPass],[4,twoDimPass],[4,twoDimPass],[4,twoDimPass],[4,twoDimPass],[4,twoDimPass],[4,twoDimPass],[4,twoDimPass],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0]];var whiteTable1=[[-1,-1],[12,ccittEOL],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[11,1792],[11,1792],[12,1984],[12,2048],[12,2112],[12,2176],[12,2240],[12,2304],[11,1856],[11,1856],[11,1920],[11,1920],[12,2368],[12,2432],[12,2496],[12,2560]];var whiteTable2=[[-1,-1],[-1,-1],[-1,-1],[-1,-1],[8,29],[8,29],[8,30],[8,30],[8,45],[8,45],[8,46],[8,46],[7,22],[7,22],[7,22],[7,22],[7,23],[7,23],[7,23],[7,23],[8,47],[8,47],[8,48],[8,48],[6,13],[6,13],[6,13],[6,13],[6,13],[6,13],[6,13],[6,13],[7,20],[7,20],[7,20],[7,20],[8,33],[8,33],[8,34],[8,34],[8,35],[8,35],[8,36],[8,36],[8,37],[8,37],[8,38],[8,38],[7,19],[7,19],[7,19],[7,19],[8,31],[8,31],[8,32],[8,32],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,12],[6,12],[6,12],[6,12],[6,12],[6,12],[6,12],[6,12],[8,53],[8,53],[8,54],[8,54],[7,26],[7,26],[7,26],[7,26],[8,39],[8,39],[8,40],[8,40],[8,41],[8,41],[8,42],[8,42],[8,43],[8,43],[8,44],[8,44],[7,21],[7,21],[7,21],[7,21],[7,28],[7,28],[7,28],[7,28],[8,61],[8,61],[8,62],[8,62],[8,63],[8,63],[8,0],[8,0],[8,320],[8,320],[8,384],[8,384],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[7,27],[7,27],[7,27],[7,27],[8,59],[8,59],[8,60],[8,60],[9,1472],[9,1536],[9,1600],[9,1728],[7,18],[7,18],[7,18],[7,18],[7,24],[7,24],[7,24],[7,24],[8,49],[8,49],[8,50],[8,50],[8,51],[8,51],[8,52],[8,52],[7,25],[7,25],[7,25],[7,25],[8,55],[8,55],[8,56],[8,56],[8,57],[8,57],[8,58],[8,58],[6,192],[6,192],[6,192],[6,192],[6,192],[6,192],[6,192],[6,192],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[8,448],[8,448],[8,512],[8,512],[9,704],[9,768],[8,640],[8,640],[8,576],[8,576],[9,832],[9,896],[9,960],[9,1024],[9,1088],[9,1152],[9,1216],[9,1280],[9,1344],[9,1408],[7,256],[7,256],[7,256],[7,256],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[6,16],[6,16],[6,16],[6,16],[6,16],[6,16],[6,16],[6,16],[6,17],[6,17],[6,17],[6,17],[6,17],[6,17],[6,17],[6,17],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[6,14],[6,14],[6,14],[6,14],[6,14],[6,14],[6,14],[6,14],[6,15],[6,15],[6,15],[6,15],[6,15],[6,15],[6,15],[6,15],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7]];var blackTable1=[[-1,-1],[-1,-1],[12,ccittEOL],[12,ccittEOL],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[11,1792],[11,1792],[11,1792],[11,1792],[12,1984],[12,1984],[12,2048],[12,2048],[12,2112],[12,2112],[12,2176],[12,2176],[12,2240],[12,2240],[12,2304],[12,2304],[11,1856],[11,1856],[11,1856],[11,1856],[11,1920],[11,1920],[11,1920],[11,1920],[12,2368],[12,2368],[12,2432],[12,2432],[12,2496],[12,2496],[12,2560],[12,2560],[10,18],[10,18],[10,18],[10,18],[10,18],[10,18],[10,18],[10,18],[12,52],[12,52],[13,640],[13,704],[13,768],[13,832],[12,55],[12,55],[12,56],[12,56],[13,1280],[13,1344],[13,1408],[13,1472],[12,59],[12,59],[12,60],[12,60],[13,1536],[13,1600],[11,24],[11,24],[11,24],[11,24],[11,25],[11,25],[11,25],[11,25],[13,1664],[13,1728],[12,320],[12,320],[12,384],[12,384],[12,448],[12,448],[13,512],[13,576],[12,53],[12,53],[12,54],[12,54],[13,896],[13,960],[13,1024],[13,1088],[13,1152],[13,1216],[10,64],[10,64],[10,64],[10,64],[10,64],[10,64],[10,64],[10,64]];var blackTable2=[[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[11,23],[11,23],[12,50],[12,51],[12,44],[12,45],[12,46],[12,47],[12,57],[12,58],[12,61],[12,256],[10,16],[10,16],[10,16],[10,16],[10,17],[10,17],[10,17],[10,17],[12,48],[12,49],[12,62],[12,63],[12,30],[12,31],[12,32],[12,33],[12,40],[12,41],[11,22],[11,22],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[9,15],[9,15],[9,15],[9,15],[9,15],[9,15],[9,15],[9,15],[12,128],[12,192],[12,26],[12,27],[12,28],[12,29],[11,19],[11,19],[11,20],[11,20],[12,34],[12,35],[12,36],[12,37],[12,38],[12,39],[11,21],[11,21],[12,42],[12,43],[10,0],[10,0],[10,0],[10,0],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12]];var blackTable3=[[-1,-1],[-1,-1],[-1,-1],[-1,-1],[6,9],[6,8],[5,7],[5,7],[4,6],[4,6],[4,6],[4,6],[4,5],[4,5],[4,5],[4,5],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2]];function CCITTFaxDecoder(source){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(!source||typeof source.next!=='function'){throw new Error('CCITTFaxDecoder - invalid "source" parameter.');}this.source=source;this.eof=false;this.encoding=options['K']||0;this.eoline=options['EndOfLine']||false;this.byteAlign=options['EncodedByteAlign']||false;this.columns=options['Columns']||1728;this.rows=options['Rows']||0;var eoblock=options['EndOfBlock'];if(eoblock===null||eoblock===undefined){eoblock=true;}this.eoblock=eoblock;this.black=options['BlackIs1']||false;this.codingLine=new Uint32Array(this.columns+1);this.refLine=new Uint32Array(this.columns+2);this.codingLine[0]=this.columns;this.codingPos=0;this.row=0;this.nextLine2D=this.encoding<0;this.inputBits=0;this.inputBuf=0;this.outputBits=0;this.rowsDone=false;var code1=void 0;while((code1=this._lookBits(12))===0){this._eatBits(1);}if(code1===1){this._eatBits(12);}if(this.encoding>0){this.nextLine2D=!this._lookBits(1);this._eatBits(1);}}CCITTFaxDecoder.prototype={readNextChar:function readNextChar(){if(this.eof){return-1;}var refLine=this.refLine;var codingLine=this.codingLine;var columns=this.columns;var refPos=void 0,blackPixels=void 0,bits=void 0,i=void 0;if(this.outputBits===0){if(this.rowsDone){this.eof=true;}if(this.eof){return-1;}this.err=false;var code1=void 0,code2=void 0,code3=void 0;if(this.nextLine2D){for(i=0;codingLine[i]<columns;++i){refLine[i]=codingLine[i];}refLine[i++]=columns;refLine[i]=columns;codingLine[0]=0;this.codingPos=0;refPos=0;blackPixels=0;while(codingLine[this.codingPos]<columns){code1=this._getTwoDimCode();switch(code1){case twoDimPass:this._addPixels(refLine[refPos+1],blackPixels);if(refLine[refPos+1]<columns){refPos+=2;}break;case twoDimHoriz:code1=code2=0;if(blackPixels){do{code1+=code3=this._getBlackCode();}while(code3>=64);do{code2+=code3=this._getWhiteCode();}while(code3>=64);}else{do{code1+=code3=this._getWhiteCode();}while(code3>=64);do{code2+=code3=this._getBlackCode();}while(code3>=64);}this._addPixels(codingLine[this.codingPos]+code1,blackPixels);if(codingLine[this.codingPos]<columns){this._addPixels(codingLine[this.codingPos]+code2,blackPixels^1);}while(refLine[refPos]<=codingLine[this.codingPos]&&refLine[refPos]<columns){refPos+=2;}break;case twoDimVertR3:this._addPixels(refLine[refPos]+3,blackPixels);blackPixels^=1;if(codingLine[this.codingPos]<columns){++refPos;while(refLine[refPos]<=codingLine[this.codingPos]&&refLine[refPos]<columns){refPos+=2;}}break;case twoDimVertR2:this._addPixels(refLine[refPos]+2,blackPixels);blackPixels^=1;if(codingLine[this.codingPos]<columns){++refPos;while(refLine[refPos]<=codingLine[this.codingPos]&&refLine[refPos]<columns){refPos+=2;}}break;case twoDimVertR1:this._addPixels(refLine[refPos]+1,blackPixels);blackPixels^=1;if(codingLine[this.codingPos]<columns){++refPos;while(refLine[refPos]<=codingLine[this.codingPos]&&refLine[refPos]<columns){refPos+=2;}}break;case twoDimVert0:this._addPixels(refLine[refPos],blackPixels);blackPixels^=1;if(codingLine[this.codingPos]<columns){++refPos;while(refLine[refPos]<=codingLine[this.codingPos]&&refLine[refPos]<columns){refPos+=2;}}break;case twoDimVertL3:this._addPixelsNeg(refLine[refPos]-3,blackPixels);blackPixels^=1;if(codingLine[this.codingPos]<columns){if(refPos>0){--refPos;}else{++refPos;}while(refLine[refPos]<=codingLine[this.codingPos]&&refLine[refPos]<columns){refPos+=2;}}break;case twoDimVertL2:this._addPixelsNeg(refLine[refPos]-2,blackPixels);blackPixels^=1;if(codingLine[this.codingPos]<columns){if(refPos>0){--refPos;}else{++refPos;}while(refLine[refPos]<=codingLine[this.codingPos]&&refLine[refPos]<columns){refPos+=2;}}break;case twoDimVertL1:this._addPixelsNeg(refLine[refPos]-1,blackPixels);blackPixels^=1;if(codingLine[this.codingPos]<columns){if(refPos>0){--refPos;}else{++refPos;}while(refLine[refPos]<=codingLine[this.codingPos]&&refLine[refPos]<columns){refPos+=2;}}break;case ccittEOF:this._addPixels(columns,0);this.eof=true;break;default:(0,_util.info)('bad 2d code');this._addPixels(columns,0);this.err=true;}}}else{codingLine[0]=0;this.codingPos=0;blackPixels=0;while(codingLine[this.codingPos]<columns){code1=0;if(blackPixels){do{code1+=code3=this._getBlackCode();}while(code3>=64);}else{do{code1+=code3=this._getWhiteCode();}while(code3>=64);}this._addPixels(codingLine[this.codingPos]+code1,blackPixels);blackPixels^=1;}}var gotEOL=false;if(this.byteAlign){this.inputBits&=~7;}if(!this.eoblock&&this.row===this.rows-1){this.rowsDone=true;}else{code1=this._lookBits(12);if(this.eoline){while(code1!==ccittEOF&&code1!==1){this._eatBits(1);code1=this._lookBits(12);}}else{while(code1===0){this._eatBits(1);code1=this._lookBits(12);}}if(code1===1){this._eatBits(12);gotEOL=true;}else if(code1===ccittEOF){this.eof=true;}}if(!this.eof&&this.encoding>0&&!this.rowsDone){this.nextLine2D=!this._lookBits(1);this._eatBits(1);}if(this.eoblock&&gotEOL&&this.byteAlign){code1=this._lookBits(12);if(code1===1){this._eatBits(12);if(this.encoding>0){this._lookBits(1);this._eatBits(1);}if(this.encoding>=0){for(i=0;i<4;++i){code1=this._lookBits(12);if(code1!==1){(0,_util.info)('bad rtc code: '+code1);}this._eatBits(12);if(this.encoding>0){this._lookBits(1);this._eatBits(1);}}}this.eof=true;}}else if(this.err&&this.eoline){while(true){code1=this._lookBits(13);if(code1===ccittEOF){this.eof=true;return-1;}if(code1>>1===1){break;}this._eatBits(1);}this._eatBits(12);if(this.encoding>0){this._eatBits(1);this.nextLine2D=!(code1&1);}}if(codingLine[0]>0){this.outputBits=codingLine[this.codingPos=0];}else{this.outputBits=codingLine[this.codingPos=1];}this.row++;}var c=void 0;if(this.outputBits>=8){c=this.codingPos&1?0:0xFF;this.outputBits-=8;if(this.outputBits===0&&codingLine[this.codingPos]<columns){this.codingPos++;this.outputBits=codingLine[this.codingPos]-codingLine[this.codingPos-1];}}else{bits=8;c=0;do{if(this.outputBits>bits){c<<=bits;if(!(this.codingPos&1)){c|=0xFF>>8-bits;}this.outputBits-=bits;bits=0;}else{c<<=this.outputBits;if(!(this.codingPos&1)){c|=0xFF>>8-this.outputBits;}bits-=this.outputBits;this.outputBits=0;if(codingLine[this.codingPos]<columns){this.codingPos++;this.outputBits=codingLine[this.codingPos]-codingLine[this.codingPos-1];}else if(bits>0){c<<=bits;bits=0;}}}while(bits);}if(this.black){c^=0xFF;}return c;},_addPixels:function _addPixels(a1,blackPixels){var codingLine=this.codingLine;var codingPos=this.codingPos;if(a1>codingLine[codingPos]){if(a1>this.columns){(0,_util.info)('row is wrong length');this.err=true;a1=this.columns;}if(codingPos&1^blackPixels){++codingPos;}codingLine[codingPos]=a1;}this.codingPos=codingPos;},_addPixelsNeg:function _addPixelsNeg(a1,blackPixels){var codingLine=this.codingLine;var codingPos=this.codingPos;if(a1>codingLine[codingPos]){if(a1>this.columns){(0,_util.info)('row is wrong length');this.err=true;a1=this.columns;}if(codingPos&1^blackPixels){++codingPos;}codingLine[codingPos]=a1;}else if(a1<codingLine[codingPos]){if(a1<0){(0,_util.info)('invalid code');this.err=true;a1=0;}while(codingPos>0&&a1<codingLine[codingPos-1]){--codingPos;}codingLine[codingPos]=a1;}this.codingPos=codingPos;},_findTableCode:function _findTableCode(start,end,table,limit){var limitValue=limit||0;for(var i=start;i<=end;++i){var code=this._lookBits(i);if(code===ccittEOF){return[true,1,false];}if(i<end){code<<=end-i;}if(!limitValue||code>=limitValue){var p=table[code-limitValue];if(p[0]===i){this._eatBits(i);return[true,p[1],true];}}}return[false,0,false];},_getTwoDimCode:function _getTwoDimCode(){var code=0;var p=void 0;if(this.eoblock){code=this._lookBits(7);p=twoDimTable[code];if(p&&p[0]>0){this._eatBits(p[0]);return p[1];}}else{var result=this._findTableCode(1,7,twoDimTable);if(result[0]&&result[2]){return result[1];}}(0,_util.info)('Bad two dim code');return ccittEOF;},_getWhiteCode:function _getWhiteCode(){var code=0;var p=void 0;if(this.eoblock){code=this._lookBits(12);if(code===ccittEOF){return 1;}if(code>>5===0){p=whiteTable1[code];}else{p=whiteTable2[code>>3];}if(p[0]>0){this._eatBits(p[0]);return p[1];}}else{var result=this._findTableCode(1,9,whiteTable2);if(result[0]){return result[1];}result=this._findTableCode(11,12,whiteTable1);if(result[0]){return result[1];}}(0,_util.info)('bad white code');this._eatBits(1);return 1;},_getBlackCode:function _getBlackCode(){var code=void 0,p=void 0;if(this.eoblock){code=this._lookBits(13);if(code===ccittEOF){return 1;}if(code>>7===0){p=blackTable1[code];}else if(code>>9===0&&code>>7!==0){p=blackTable2[(code>>1)-64];}else{p=blackTable3[code>>7];}if(p[0]>0){this._eatBits(p[0]);return p[1];}}else{var result=this._findTableCode(2,6,blackTable3);if(result[0]){return result[1];}result=this._findTableCode(7,12,blackTable2,64);if(result[0]){return result[1];}result=this._findTableCode(10,13,blackTable1);if(result[0]){return result[1];}}(0,_util.info)('bad black code');this._eatBits(1);return 1;},_lookBits:function _lookBits(n){var c=void 0;while(this.inputBits<n){if((c=this.source.next())===-1){if(this.inputBits===0){return ccittEOF;}return this.inputBuf<<n-this.inputBits&0xFFFF>>16-n;}this.inputBuf=this.inputBuf<<8|c;this.inputBits+=8;}return this.inputBuf>>this.inputBits-n&0xFFFF>>16-n;},_eatBits:function _eatBits(n){if((this.inputBits-=n)<0){this.inputBits=0;}}};return CCITTFaxDecoder;}();exports.CCITTFaxDecoder=CCITTFaxDecoder;/***/},/* 143 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.Jbig2Stream=undefined;var _primitives=__w_pdfjs_require__(138);var _stream=__w_pdfjs_require__(140);var _jbig=__w_pdfjs_require__(144);var _util=__w_pdfjs_require__(2);var Jbig2Stream=function Jbig2StreamClosure(){function Jbig2Stream(stream,maybeLength,dict,params){this.stream=stream;this.maybeLength=maybeLength;this.dict=dict;this.params=params;_stream.DecodeStream.call(this,maybeLength);}Jbig2Stream.prototype=Object.create(_stream.DecodeStream.prototype);Object.defineProperty(Jbig2Stream.prototype,'bytes',{get:function get(){return(0,_util.shadow)(this,'bytes',this.stream.getBytes(this.maybeLength));},configurable:true});Jbig2Stream.prototype.ensureBuffer=function(requested){};Jbig2Stream.prototype.readBlock=function(){if(this.eof){return;}var jbig2Image=new _jbig.Jbig2Image();var chunks=[];if((0,_primitives.isDict)(this.params)){var globalsStream=this.params.get('JBIG2Globals');if((0,_primitives.isStream)(globalsStream)){var globals=globalsStream.getBytes();chunks.push({data:globals,start:0,end:globals.length});}}chunks.push({data:this.bytes,start:0,end:this.bytes.length});var data=jbig2Image.parseChunks(chunks);var dataLength=data.length;for(var i=0;i<dataLength;i++){data[i]^=0xFF;}this.buffer=data;this.bufferLength=dataLength;this.eof=true;};return Jbig2Stream;}();exports.Jbig2Stream=Jbig2Stream;/***/},/* 144 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.Jbig2Image=undefined;var _util=__w_pdfjs_require__(2);var _arithmetic_decoder=__w_pdfjs_require__(145);var _ccitt=__w_pdfjs_require__(142);var Jbig2Error=function Jbig2ErrorClosure(){function Jbig2Error(msg){this.message='JBIG2 error: '+msg;}Jbig2Error.prototype=new Error();Jbig2Error.prototype.name='Jbig2Error';Jbig2Error.constructor=Jbig2Error;return Jbig2Error;}();var Jbig2Image=function Jbig2ImageClosure(){function ContextCache(){}ContextCache.prototype={getContexts:function getContexts(id){if(id in this){return this[id];}return this[id]=new Int8Array(1<<16);}};function DecodingContext(data,start,end){this.data=data;this.start=start;this.end=end;}DecodingContext.prototype={get decoder(){var decoder=new _arithmetic_decoder.ArithmeticDecoder(this.data,this.start,this.end);return(0,_util.shadow)(this,'decoder',decoder);},get contextCache(){var cache=new ContextCache();return(0,_util.shadow)(this,'contextCache',cache);}};function decodeInteger(contextCache,procedure,decoder){var contexts=contextCache.getContexts(procedure);var prev=1;function readBits(length){var v=0;for(var i=0;i<length;i++){var bit=decoder.readBit(contexts,prev);prev=prev<256?prev<<1|bit:(prev<<1|bit)&511|256;v=v<<1|bit;}return v>>>0;}var sign=readBits(1);var value=readBits(1)?readBits(1)?readBits(1)?readBits(1)?readBits(1)?readBits(32)+4436:readBits(12)+340:readBits(8)+84:readBits(6)+20:readBits(4)+4:readBits(2);return sign===0?value:value>0?-value:null;}function decodeIAID(contextCache,decoder,codeLength){var contexts=contextCache.getContexts('IAID');var prev=1;for(var i=0;i<codeLength;i++){var bit=decoder.readBit(contexts,prev);prev=prev<<1|bit;}if(codeLength<31){return prev&(1<<codeLength)-1;}return prev&0x7FFFFFFF;}var SegmentTypes=['SymbolDictionary',null,null,null,'IntermediateTextRegion',null,'ImmediateTextRegion','ImmediateLosslessTextRegion',null,null,null,null,null,null,null,null,'PatternDictionary',null,null,null,'IntermediateHalftoneRegion',null,'ImmediateHalftoneRegion','ImmediateLosslessHalftoneRegion',null,null,null,null,null,null,null,null,null,null,null,null,'IntermediateGenericRegion',null,'ImmediateGenericRegion','ImmediateLosslessGenericRegion','IntermediateGenericRefinementRegion',null,'ImmediateGenericRefinementRegion','ImmediateLosslessGenericRefinementRegion',null,null,null,null,'PageInformation','EndOfPage','EndOfStripe','EndOfFile','Profiles','Tables',null,null,null,null,null,null,null,null,'Extension'];var CodingTemplates=[[{x:-1,y:-2},{x:0,y:-2},{x:1,y:-2},{x:-2,y:-1},{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:2,y:-1},{x:-4,y:0},{x:-3,y:0},{x:-2,y:0},{x:-1,y:0}],[{x:-1,y:-2},{x:0,y:-2},{x:1,y:-2},{x:2,y:-2},{x:-2,y:-1},{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:2,y:-1},{x:-3,y:0},{x:-2,y:0},{x:-1,y:0}],[{x:-1,y:-2},{x:0,y:-2},{x:1,y:-2},{x:-2,y:-1},{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:-2,y:0},{x:-1,y:0}],[{x:-3,y:-1},{x:-2,y:-1},{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:-4,y:0},{x:-3,y:0},{x:-2,y:0},{x:-1,y:0}]];var RefinementTemplates=[{coding:[{x:0,y:-1},{x:1,y:-1},{x:-1,y:0}],reference:[{x:0,y:-1},{x:1,y:-1},{x:-1,y:0},{x:0,y:0},{x:1,y:0},{x:-1,y:1},{x:0,y:1},{x:1,y:1}]},{coding:[{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:-1,y:0}],reference:[{x:0,y:-1},{x:-1,y:0},{x:0,y:0},{x:1,y:0},{x:0,y:1},{x:1,y:1}]}];var ReusedContexts=[0x9B25,0x0795,0x00E5,0x0195];var RefinementReusedContexts=[0x0020,0x0008];function decodeBitmapTemplate0(width,height,decodingContext){var decoder=decodingContext.decoder;var contexts=decodingContext.contextCache.getContexts('GB');var contextLabel,i,j,pixel,row,row1,row2,bitmap=[];var OLD_PIXEL_MASK=0x7BF7;for(i=0;i<height;i++){row=bitmap[i]=new Uint8Array(width);row1=i<1?row:bitmap[i-1];row2=i<2?row:bitmap[i-2];contextLabel=row2[0]<<13|row2[1]<<12|row2[2]<<11|row1[0]<<7|row1[1]<<6|row1[2]<<5|row1[3]<<4;for(j=0;j<width;j++){row[j]=pixel=decoder.readBit(contexts,contextLabel);contextLabel=(contextLabel&OLD_PIXEL_MASK)<<1|(j+3<width?row2[j+3]<<11:0)|(j+4<width?row1[j+4]<<4:0)|pixel;}}return bitmap;}function decodeBitmap(mmr,width,height,templateIndex,prediction,skip,at,decodingContext){if(mmr){var input=new Reader(decodingContext.data,decodingContext.start,decodingContext.end);return decodeMMRBitmap(input,width,height,false);}if(templateIndex===0&&!skip&&!prediction&&at.length===4&&at[0].x===3&&at[0].y===-1&&at[1].x===-3&&at[1].y===-1&&at[2].x===2&&at[2].y===-2&&at[3].x===-2&&at[3].y===-2){return decodeBitmapTemplate0(width,height,decodingContext);}var useskip=!!skip;var template=CodingTemplates[templateIndex].concat(at);template.sort(function(a,b){return a.y-b.y||a.x-b.x;});var templateLength=template.length;var templateX=new Int8Array(templateLength);var templateY=new Int8Array(templateLength);var changingTemplateEntries=[];var reuseMask=0,minX=0,maxX=0,minY=0;var c,k;for(k=0;k<templateLength;k++){templateX[k]=template[k].x;templateY[k]=template[k].y;minX=Math.min(minX,template[k].x);maxX=Math.max(maxX,template[k].x);minY=Math.min(minY,template[k].y);if(k<templateLength-1&&template[k].y===template[k+1].y&&template[k].x===template[k+1].x-1){reuseMask|=1<<templateLength-1-k;}else{changingTemplateEntries.push(k);}}var changingEntriesLength=changingTemplateEntries.length;var changingTemplateX=new Int8Array(changingEntriesLength);var changingTemplateY=new Int8Array(changingEntriesLength);var changingTemplateBit=new Uint16Array(changingEntriesLength);for(c=0;c<changingEntriesLength;c++){k=changingTemplateEntries[c];changingTemplateX[c]=template[k].x;changingTemplateY[c]=template[k].y;changingTemplateBit[c]=1<<templateLength-1-k;}var sbb_left=-minX;var sbb_top=-minY;var sbb_right=width-maxX;var pseudoPixelContext=ReusedContexts[templateIndex];var row=new Uint8Array(width);var bitmap=[];var decoder=decodingContext.decoder;var contexts=decodingContext.contextCache.getContexts('GB');var ltp=0,j,i0,j0,contextLabel=0,bit,shift;for(var i=0;i<height;i++){if(prediction){var sltp=decoder.readBit(contexts,pseudoPixelContext);ltp^=sltp;if(ltp){bitmap.push(row);continue;}}row=new Uint8Array(row);bitmap.push(row);for(j=0;j<width;j++){if(useskip&&skip[i][j]){row[j]=0;continue;}if(j>=sbb_left&&j<sbb_right&&i>=sbb_top){contextLabel=contextLabel<<1&reuseMask;for(k=0;k<changingEntriesLength;k++){i0=i+changingTemplateY[k];j0=j+changingTemplateX[k];bit=bitmap[i0][j0];if(bit){bit=changingTemplateBit[k];contextLabel|=bit;}}}else{contextLabel=0;shift=templateLength-1;for(k=0;k<templateLength;k++,shift--){j0=j+templateX[k];if(j0>=0&&j0<width){i0=i+templateY[k];if(i0>=0){bit=bitmap[i0][j0];if(bit){contextLabel|=bit<<shift;}}}}}var pixel=decoder.readBit(contexts,contextLabel);row[j]=pixel;}}return bitmap;}function decodeRefinement(width,height,templateIndex,referenceBitmap,offsetX,offsetY,prediction,at,decodingContext){var codingTemplate=RefinementTemplates[templateIndex].coding;if(templateIndex===0){codingTemplate=codingTemplate.concat([at[0]]);}var codingTemplateLength=codingTemplate.length;var codingTemplateX=new Int32Array(codingTemplateLength);var codingTemplateY=new Int32Array(codingTemplateLength);var k;for(k=0;k<codingTemplateLength;k++){codingTemplateX[k]=codingTemplate[k].x;codingTemplateY[k]=codingTemplate[k].y;}var referenceTemplate=RefinementTemplates[templateIndex].reference;if(templateIndex===0){referenceTemplate=referenceTemplate.concat([at[1]]);}var referenceTemplateLength=referenceTemplate.length;var referenceTemplateX=new Int32Array(referenceTemplateLength);var referenceTemplateY=new Int32Array(referenceTemplateLength);for(k=0;k<referenceTemplateLength;k++){referenceTemplateX[k]=referenceTemplate[k].x;referenceTemplateY[k]=referenceTemplate[k].y;}var referenceWidth=referenceBitmap[0].length;var referenceHeight=referenceBitmap.length;var pseudoPixelContext=RefinementReusedContexts[templateIndex];var bitmap=[];var decoder=decodingContext.decoder;var contexts=decodingContext.contextCache.getContexts('GR');var ltp=0;for(var i=0;i<height;i++){if(prediction){var sltp=decoder.readBit(contexts,pseudoPixelContext);ltp^=sltp;if(ltp){throw new Jbig2Error('prediction is not supported');}}var row=new Uint8Array(width);bitmap.push(row);for(var j=0;j<width;j++){var i0,j0;var contextLabel=0;for(k=0;k<codingTemplateLength;k++){i0=i+codingTemplateY[k];j0=j+codingTemplateX[k];if(i0<0||j0<0||j0>=width){contextLabel<<=1;}else{contextLabel=contextLabel<<1|bitmap[i0][j0];}}for(k=0;k<referenceTemplateLength;k++){i0=i+referenceTemplateY[k]-offsetY;j0=j+referenceTemplateX[k]-offsetX;if(i0<0||i0>=referenceHeight||j0<0||j0>=referenceWidth){contextLabel<<=1;}else{contextLabel=contextLabel<<1|referenceBitmap[i0][j0];}}var pixel=decoder.readBit(contexts,contextLabel);row[j]=pixel;}}return bitmap;}function decodeSymbolDictionary(huffman,refinement,symbols,numberOfNewSymbols,numberOfExportedSymbols,huffmanTables,templateIndex,at,refinementTemplateIndex,refinementAt,decodingContext,huffmanInput){if(huffman&&refinement){throw new Jbig2Error('symbol refinement with Huffman is not supported');}var newSymbols=[];var currentHeight=0;var symbolCodeLength=(0,_util.log2)(symbols.length+numberOfNewSymbols);var decoder=decodingContext.decoder;var contextCache=decodingContext.contextCache;var tableB1=void 0,symbolWidths=void 0;if(huffman){tableB1=getStandardTable(1);symbolWidths=[];symbolCodeLength=Math.max(symbolCodeLength,1);}while(newSymbols.length<numberOfNewSymbols){var deltaHeight=huffman?huffmanTables.tableDeltaHeight.decode(huffmanInput):decodeInteger(contextCache,'IADH',decoder);currentHeight+=deltaHeight;var currentWidth=0,totalWidth=0;var firstSymbol=huffman?symbolWidths.length:0;while(true){var deltaWidth=huffman?huffmanTables.tableDeltaWidth.decode(huffmanInput):decodeInteger(contextCache,'IADW',decoder);if(deltaWidth===null){break;}currentWidth+=deltaWidth;totalWidth+=currentWidth;var bitmap;if(refinement){var numberOfInstances=decodeInteger(contextCache,'IAAI',decoder);if(numberOfInstances>1){bitmap=decodeTextRegion(huffman,refinement,currentWidth,currentHeight,0,numberOfInstances,1,symbols.concat(newSymbols),symbolCodeLength,0,0,1,0,huffmanTables,refinementTemplateIndex,refinementAt,decodingContext,0,huffmanInput);}else{var symbolId=decodeIAID(contextCache,decoder,symbolCodeLength);var rdx=decodeInteger(contextCache,'IARDX',decoder);var rdy=decodeInteger(contextCache,'IARDY',decoder);var symbol=symbolId<symbols.length?symbols[symbolId]:newSymbols[symbolId-symbols.length];bitmap=decodeRefinement(currentWidth,currentHeight,refinementTemplateIndex,symbol,rdx,rdy,false,refinementAt,decodingContext);}newSymbols.push(bitmap);}else if(huffman){symbolWidths.push(currentWidth);}else{bitmap=decodeBitmap(false,currentWidth,currentHeight,templateIndex,false,null,at,decodingContext);newSymbols.push(bitmap);}}if(huffman&&!refinement){var bitmapSize=huffmanTables.tableBitmapSize.decode(huffmanInput);huffmanInput.byteAlign();var collectiveBitmap=void 0;if(bitmapSize===0){collectiveBitmap=readUncompressedBitmap(huffmanInput,totalWidth,currentHeight);}else{var originalEnd=huffmanInput.end;var bitmapEnd=huffmanInput.position+bitmapSize;huffmanInput.end=bitmapEnd;collectiveBitmap=decodeMMRBitmap(huffmanInput,totalWidth,currentHeight,false);huffmanInput.end=originalEnd;huffmanInput.position=bitmapEnd;}var numberOfSymbolsDecoded=symbolWidths.length;if(firstSymbol===numberOfSymbolsDecoded-1){newSymbols.push(collectiveBitmap);}else{var _i=void 0,y=void 0,xMin=0,xMax=void 0,bitmapWidth=void 0,symbolBitmap=void 0;for(_i=firstSymbol;_i<numberOfSymbolsDecoded;_i++){bitmapWidth=symbolWidths[_i];xMax=xMin+bitmapWidth;symbolBitmap=[];for(y=0;y<currentHeight;y++){symbolBitmap.push(collectiveBitmap[y].subarray(xMin,xMax));}newSymbols.push(symbolBitmap);xMin=xMax;}}}}var exportedSymbols=[];var flags=[],currentFlag=false;var totalSymbolsLength=symbols.length+numberOfNewSymbols;while(flags.length<totalSymbolsLength){var runLength=huffman?tableB1.decode(huffmanInput):decodeInteger(contextCache,'IAEX',decoder);while(runLength--){flags.push(currentFlag);}currentFlag=!currentFlag;}for(var i=0,ii=symbols.length;i<ii;i++){if(flags[i]){exportedSymbols.push(symbols[i]);}}for(var j=0;j<numberOfNewSymbols;i++,j++){if(flags[i]){exportedSymbols.push(newSymbols[j]);}}return exportedSymbols;}function decodeTextRegion(huffman,refinement,width,height,defaultPixelValue,numberOfSymbolInstances,stripSize,inputSymbols,symbolCodeLength,transposed,dsOffset,referenceCorner,combinationOperator,huffmanTables,refinementTemplateIndex,refinementAt,decodingContext,logStripSize,huffmanInput){if(huffman&&refinement){throw new Jbig2Error('refinement with Huffman is not supported');}var bitmap=[];var i,row;for(i=0;i<height;i++){row=new Uint8Array(width);if(defaultPixelValue){for(var j=0;j<width;j++){row[j]=defaultPixelValue;}}bitmap.push(row);}var decoder=decodingContext.decoder;var contextCache=decodingContext.contextCache;var stripT=huffman?-huffmanTables.tableDeltaT.decode(huffmanInput):-decodeInteger(contextCache,'IADT',decoder);var firstS=0;i=0;while(i<numberOfSymbolInstances){var deltaT=huffman?huffmanTables.tableDeltaT.decode(huffmanInput):decodeInteger(contextCache,'IADT',decoder);stripT+=deltaT;var deltaFirstS=huffman?huffmanTables.tableFirstS.decode(huffmanInput):decodeInteger(contextCache,'IAFS',decoder);firstS+=deltaFirstS;var currentS=firstS;do{var currentT=0;if(stripSize>1){currentT=huffman?huffmanInput.readBits(logStripSize):decodeInteger(contextCache,'IAIT',decoder);}var t=stripSize*stripT+currentT;var symbolId=huffman?huffmanTables.symbolIDTable.decode(huffmanInput):decodeIAID(contextCache,decoder,symbolCodeLength);var applyRefinement=refinement&&(huffman?huffmanInput.readBit():decodeInteger(contextCache,'IARI',decoder));var symbolBitmap=inputSymbols[symbolId];var symbolWidth=symbolBitmap[0].length;var symbolHeight=symbolBitmap.length;if(applyRefinement){var rdw=decodeInteger(contextCache,'IARDW',decoder);var rdh=decodeInteger(contextCache,'IARDH',decoder);var rdx=decodeInteger(contextCache,'IARDX',decoder);var rdy=decodeInteger(contextCache,'IARDY',decoder);symbolWidth+=rdw;symbolHeight+=rdh;symbolBitmap=decodeRefinement(symbolWidth,symbolHeight,refinementTemplateIndex,symbolBitmap,(rdw>>1)+rdx,(rdh>>1)+rdy,false,refinementAt,decodingContext);}var offsetT=t-(referenceCorner&1?0:symbolHeight-1);var offsetS=currentS-(referenceCorner&2?symbolWidth-1:0);var s2,t2,symbolRow;if(transposed){for(s2=0;s2<symbolHeight;s2++){row=bitmap[offsetS+s2];if(!row){continue;}symbolRow=symbolBitmap[s2];var maxWidth=Math.min(width-offsetT,symbolWidth);switch(combinationOperator){case 0:for(t2=0;t2<maxWidth;t2++){row[offsetT+t2]|=symbolRow[t2];}break;case 2:for(t2=0;t2<maxWidth;t2++){row[offsetT+t2]^=symbolRow[t2];}break;default:throw new Jbig2Error('operator '+combinationOperator+' is not supported');}}currentS+=symbolHeight-1;}else{for(t2=0;t2<symbolHeight;t2++){row=bitmap[offsetT+t2];if(!row){continue;}symbolRow=symbolBitmap[t2];switch(combinationOperator){case 0:for(s2=0;s2<symbolWidth;s2++){row[offsetS+s2]|=symbolRow[s2];}break;case 2:for(s2=0;s2<symbolWidth;s2++){row[offsetS+s2]^=symbolRow[s2];}break;default:throw new Jbig2Error('operator '+combinationOperator+' is not supported');}}currentS+=symbolWidth-1;}i++;var deltaS=huffman?huffmanTables.tableDeltaS.decode(huffmanInput):decodeInteger(contextCache,'IADS',decoder);if(deltaS===null){break;}currentS+=deltaS+dsOffset;}while(true);}return bitmap;}function decodePatternDictionary(mmr,patternWidth,patternHeight,maxPatternIndex,template,decodingContext){var at=[];if(!mmr){at.push({x:-patternWidth,y:0});if(template===0){at.push({x:-3,y:-1});at.push({x:2,y:-2});at.push({x:-2,y:-2});}}var collectiveWidth=(maxPatternIndex+1)*patternWidth;var collectiveBitmap=decodeBitmap(mmr,collectiveWidth,patternHeight,template,false,null,at,decodingContext);var patterns=[],i=0,patternBitmap=void 0,xMin=void 0,xMax=void 0,y=void 0;while(i<=maxPatternIndex){patternBitmap=[];xMin=patternWidth*i;xMax=xMin+patternWidth;for(y=0;y<patternHeight;y++){patternBitmap.push(collectiveBitmap[y].subarray(xMin,xMax));}patterns.push(patternBitmap);i++;}return patterns;}function decodeHalftoneRegion(mmr,patterns,template,regionWidth,regionHeight,defaultPixelValue,enableSkip,combinationOperator,gridWidth,gridHeight,gridOffsetX,gridOffsetY,gridVectorX,gridVectorY,decodingContext){var skip=null;if(enableSkip){throw new Jbig2Error('skip is not supported');}if(combinationOperator!==0){throw new Jbig2Error('operator '+combinationOperator+' is not supported in halftone region');}var regionBitmap=[];var i=void 0,j=void 0,row=void 0;for(i=0;i<regionHeight;i++){row=new Uint8Array(regionWidth);if(defaultPixelValue){for(j=0;j<regionWidth;j++){row[j]=defaultPixelValue;}}regionBitmap.push(row);}var numberOfPatterns=patterns.length;var pattern0=patterns[0];var patternWidth=pattern0[0].length,patternHeight=pattern0.length;var bitsPerValue=(0,_util.log2)(numberOfPatterns);var at=[];if(!mmr){at.push({x:template<=1?3:2,y:-1});if(template===0){at.push({x:-3,y:-1});at.push({x:2,y:-2});at.push({x:-2,y:-2});}}var grayScaleBitPlanes=[],mmrInput=void 0,bitmap=void 0;if(mmr){mmrInput=new Reader(decodingContext.data,decodingContext.start,decodingContext.end);}for(i=bitsPerValue-1;i>=0;i--){if(mmr){bitmap=decodeMMRBitmap(mmrInput,gridWidth,gridHeight,true);}else{bitmap=decodeBitmap(false,gridWidth,gridHeight,template,false,skip,at,decodingContext);}grayScaleBitPlanes[i]=bitmap;}var mg=void 0,ng=void 0,bit=void 0,patternIndex=void 0,patternBitmap=void 0,x=void 0,y=void 0,patternRow=void 0,regionRow=void 0;for(mg=0;mg<gridHeight;mg++){for(ng=0;ng<gridWidth;ng++){bit=0;patternIndex=0;for(j=bitsPerValue-1;j>=0;j--){bit=grayScaleBitPlanes[j][mg][ng]^bit;patternIndex|=bit<<j;}patternBitmap=patterns[patternIndex];x=gridOffsetX+mg*gridVectorY+ng*gridVectorX>>8;y=gridOffsetY+mg*gridVectorX-ng*gridVectorY>>8;if(x>=0&&x+patternWidth<=regionWidth&&y>=0&&y+patternHeight<=regionHeight){for(i=0;i<patternHeight;i++){regionRow=regionBitmap[y+i];patternRow=patternBitmap[i];for(j=0;j<patternWidth;j++){regionRow[x+j]|=patternRow[j];}}}else{var regionX=void 0,regionY=void 0;for(i=0;i<patternHeight;i++){regionY=y+i;if(regionY<0||regionY>=regionHeight){continue;}regionRow=regionBitmap[regionY];patternRow=patternBitmap[i];for(j=0;j<patternWidth;j++){regionX=x+j;if(regionX>=0&&regionX<regionWidth){regionRow[regionX]|=patternRow[j];}}}}}}return regionBitmap;}function readSegmentHeader(data,start){var segmentHeader={};segmentHeader.number=(0,_util.readUint32)(data,start);var flags=data[start+4];var segmentType=flags&0x3F;if(!SegmentTypes[segmentType]){throw new Jbig2Error('invalid segment type: '+segmentType);}segmentHeader.type=segmentType;segmentHeader.typeName=SegmentTypes[segmentType];segmentHeader.deferredNonRetain=!!(flags&0x80);var pageAssociationFieldSize=!!(flags&0x40);var referredFlags=data[start+5];var referredToCount=referredFlags>>5&7;var retainBits=[referredFlags&31];var position=start+6;if(referredFlags===7){referredToCount=(0,_util.readUint32)(data,position-1)&0x1FFFFFFF;position+=3;var bytes=referredToCount+7>>3;retainBits[0]=data[position++];while(--bytes>0){retainBits.push(data[position++]);}}else if(referredFlags===5||referredFlags===6){throw new Jbig2Error('invalid referred-to flags');}segmentHeader.retainBits=retainBits;var referredToSegmentNumberSize=segmentHeader.number<=256?1:segmentHeader.number<=65536?2:4;var referredTo=[];var i,ii;for(i=0;i<referredToCount;i++){var number=referredToSegmentNumberSize===1?data[position]:referredToSegmentNumberSize===2?(0,_util.readUint16)(data,position):(0,_util.readUint32)(data,position);referredTo.push(number);position+=referredToSegmentNumberSize;}segmentHeader.referredTo=referredTo;if(!pageAssociationFieldSize){segmentHeader.pageAssociation=data[position++];}else{segmentHeader.pageAssociation=(0,_util.readUint32)(data,position);position+=4;}segmentHeader.length=(0,_util.readUint32)(data,position);position+=4;if(segmentHeader.length===0xFFFFFFFF){if(segmentType===38){var genericRegionInfo=readRegionSegmentInformation(data,position);var genericRegionSegmentFlags=data[position+RegionSegmentInformationFieldLength];var genericRegionMmr=!!(genericRegionSegmentFlags&1);var searchPatternLength=6;var searchPattern=new Uint8Array(searchPatternLength);if(!genericRegionMmr){searchPattern[0]=0xFF;searchPattern[1]=0xAC;}searchPattern[2]=genericRegionInfo.height>>>24&0xFF;searchPattern[3]=genericRegionInfo.height>>16&0xFF;searchPattern[4]=genericRegionInfo.height>>8&0xFF;searchPattern[5]=genericRegionInfo.height&0xFF;for(i=position,ii=data.length;i<ii;i++){var j=0;while(j<searchPatternLength&&searchPattern[j]===data[i+j]){j++;}if(j===searchPatternLength){segmentHeader.length=i+searchPatternLength;break;}}if(segmentHeader.length===0xFFFFFFFF){throw new Jbig2Error('segment end was not found');}}else{throw new Jbig2Error('invalid unknown segment length');}}segmentHeader.headerEnd=position;return segmentHeader;}function readSegments(header,data,start,end){var segments=[];var position=start;while(position<end){var segmentHeader=readSegmentHeader(data,position);position=segmentHeader.headerEnd;var segment={header:segmentHeader,data:data};if(!header.randomAccess){segment.start=position;position+=segmentHeader.length;segment.end=position;}segments.push(segment);if(segmentHeader.type===51){break;}}if(header.randomAccess){for(var i=0,ii=segments.length;i<ii;i++){segments[i].start=position;position+=segments[i].header.length;segments[i].end=position;}}return segments;}function readRegionSegmentInformation(data,start){return{width:(0,_util.readUint32)(data,start),height:(0,_util.readUint32)(data,start+4),x:(0,_util.readUint32)(data,start+8),y:(0,_util.readUint32)(data,start+12),combinationOperator:data[start+16]&7};}var RegionSegmentInformationFieldLength=17;function processSegment(segment,visitor){var header=segment.header;var data=segment.data,position=segment.start,end=segment.end;var args,at,i,atLength;switch(header.type){case 0:var dictionary={};var dictionaryFlags=(0,_util.readUint16)(data,position);dictionary.huffman=!!(dictionaryFlags&1);dictionary.refinement=!!(dictionaryFlags&2);dictionary.huffmanDHSelector=dictionaryFlags>>2&3;dictionary.huffmanDWSelector=dictionaryFlags>>4&3;dictionary.bitmapSizeSelector=dictionaryFlags>>6&1;dictionary.aggregationInstancesSelector=dictionaryFlags>>7&1;dictionary.bitmapCodingContextUsed=!!(dictionaryFlags&256);dictionary.bitmapCodingContextRetained=!!(dictionaryFlags&512);dictionary.template=dictionaryFlags>>10&3;dictionary.refinementTemplate=dictionaryFlags>>12&1;position+=2;if(!dictionary.huffman){atLength=dictionary.template===0?4:1;at=[];for(i=0;i<atLength;i++){at.push({x:(0,_util.readInt8)(data,position),y:(0,_util.readInt8)(data,position+1)});position+=2;}dictionary.at=at;}if(dictionary.refinement&&!dictionary.refinementTemplate){at=[];for(i=0;i<2;i++){at.push({x:(0,_util.readInt8)(data,position),y:(0,_util.readInt8)(data,position+1)});position+=2;}dictionary.refinementAt=at;}dictionary.numberOfExportedSymbols=(0,_util.readUint32)(data,position);position+=4;dictionary.numberOfNewSymbols=(0,_util.readUint32)(data,position);position+=4;args=[dictionary,header.number,header.referredTo,data,position,end];break;case 6:case 7:var textRegion={};textRegion.info=readRegionSegmentInformation(data,position);position+=RegionSegmentInformationFieldLength;var textRegionSegmentFlags=(0,_util.readUint16)(data,position);position+=2;textRegion.huffman=!!(textRegionSegmentFlags&1);textRegion.refinement=!!(textRegionSegmentFlags&2);textRegion.logStripSize=textRegionSegmentFlags>>2&3;textRegion.stripSize=1<<textRegion.logStripSize;textRegion.referenceCorner=textRegionSegmentFlags>>4&3;textRegion.transposed=!!(textRegionSegmentFlags&64);textRegion.combinationOperator=textRegionSegmentFlags>>7&3;textRegion.defaultPixelValue=textRegionSegmentFlags>>9&1;textRegion.dsOffset=textRegionSegmentFlags<<17>>27;textRegion.refinementTemplate=textRegionSegmentFlags>>15&1;if(textRegion.huffman){var textRegionHuffmanFlags=(0,_util.readUint16)(data,position);position+=2;textRegion.huffmanFS=textRegionHuffmanFlags&3;textRegion.huffmanDS=textRegionHuffmanFlags>>2&3;textRegion.huffmanDT=textRegionHuffmanFlags>>4&3;textRegion.huffmanRefinementDW=textRegionHuffmanFlags>>6&3;textRegion.huffmanRefinementDH=textRegionHuffmanFlags>>8&3;textRegion.huffmanRefinementDX=textRegionHuffmanFlags>>10&3;textRegion.huffmanRefinementDY=textRegionHuffmanFlags>>12&3;textRegion.huffmanRefinementSizeSelector=!!(textRegionHuffmanFlags&0x4000);}if(textRegion.refinement&&!textRegion.refinementTemplate){at=[];for(i=0;i<2;i++){at.push({x:(0,_util.readInt8)(data,position),y:(0,_util.readInt8)(data,position+1)});position+=2;}textRegion.refinementAt=at;}textRegion.numberOfSymbolInstances=(0,_util.readUint32)(data,position);position+=4;args=[textRegion,header.referredTo,data,position,end];break;case 16:var patternDictionary={};var patternDictionaryFlags=data[position++];patternDictionary.mmr=!!(patternDictionaryFlags&1);patternDictionary.template=patternDictionaryFlags>>1&3;patternDictionary.patternWidth=data[position++];patternDictionary.patternHeight=data[position++];patternDictionary.maxPatternIndex=(0,_util.readUint32)(data,position);position+=4;args=[patternDictionary,header.number,data,position,end];break;case 22:case 23:var halftoneRegion={};halftoneRegion.info=readRegionSegmentInformation(data,position);position+=RegionSegmentInformationFieldLength;var halftoneRegionFlags=data[position++];halftoneRegion.mmr=!!(halftoneRegionFlags&1);halftoneRegion.template=halftoneRegionFlags>>1&3;halftoneRegion.enableSkip=!!(halftoneRegionFlags&8);halftoneRegion.combinationOperator=halftoneRegionFlags>>4&7;halftoneRegion.defaultPixelValue=halftoneRegionFlags>>7&1;halftoneRegion.gridWidth=(0,_util.readUint32)(data,position);position+=4;halftoneRegion.gridHeight=(0,_util.readUint32)(data,position);position+=4;halftoneRegion.gridOffsetX=(0,_util.readUint32)(data,position)&0xFFFFFFFF;position+=4;halftoneRegion.gridOffsetY=(0,_util.readUint32)(data,position)&0xFFFFFFFF;position+=4;halftoneRegion.gridVectorX=(0,_util.readUint16)(data,position);position+=2;halftoneRegion.gridVectorY=(0,_util.readUint16)(data,position);position+=2;args=[halftoneRegion,header.referredTo,data,position,end];break;case 38:case 39:var genericRegion={};genericRegion.info=readRegionSegmentInformation(data,position);position+=RegionSegmentInformationFieldLength;var genericRegionSegmentFlags=data[position++];genericRegion.mmr=!!(genericRegionSegmentFlags&1);genericRegion.template=genericRegionSegmentFlags>>1&3;genericRegion.prediction=!!(genericRegionSegmentFlags&8);if(!genericRegion.mmr){atLength=genericRegion.template===0?4:1;at=[];for(i=0;i<atLength;i++){at.push({x:(0,_util.readInt8)(data,position),y:(0,_util.readInt8)(data,position+1)});position+=2;}genericRegion.at=at;}args=[genericRegion,data,position,end];break;case 48:var pageInfo={width:(0,_util.readUint32)(data,position),height:(0,_util.readUint32)(data,position+4),resolutionX:(0,_util.readUint32)(data,position+8),resolutionY:(0,_util.readUint32)(data,position+12)};if(pageInfo.height===0xFFFFFFFF){delete pageInfo.height;}var pageSegmentFlags=data[position+16];(0,_util.readUint16)(data,position+17);pageInfo.lossless=!!(pageSegmentFlags&1);pageInfo.refinement=!!(pageSegmentFlags&2);pageInfo.defaultPixelValue=pageSegmentFlags>>2&1;pageInfo.combinationOperator=pageSegmentFlags>>3&3;pageInfo.requiresBuffer=!!(pageSegmentFlags&32);pageInfo.combinationOperatorOverride=!!(pageSegmentFlags&64);args=[pageInfo];break;case 49:break;case 50:break;case 51:break;case 53:args=[header.number,data,position,end];break;case 62:break;default:throw new Jbig2Error('segment type '+header.typeName+'('+header.type+')'+' is not implemented');}var callbackName='on'+header.typeName;if(callbackName in visitor){visitor[callbackName].apply(visitor,args);}}function processSegments(segments,visitor){for(var i=0,ii=segments.length;i<ii;i++){processSegment(segments[i],visitor);}}function parseJbig2Chunks(chunks){var visitor=new SimpleSegmentVisitor();for(var i=0,ii=chunks.length;i<ii;i++){var chunk=chunks[i];var segments=readSegments({},chunk.data,chunk.start,chunk.end);processSegments(segments,visitor);}return visitor.buffer;}function parseJbig2(data){var position=0,end=data.length;if(data[position]!==0x97||data[position+1]!==0x4A||data[position+2]!==0x42||data[position+3]!==0x32||data[position+4]!==0x0D||data[position+5]!==0x0A||data[position+6]!==0x1A||data[position+7]!==0x0A){throw new Jbig2Error('parseJbig2 - invalid header.');}var header=Object.create(null);position+=8;var flags=data[position++];header.randomAccess=!(flags&1);if(!(flags&2)){header.numberOfPages=(0,_util.readUint32)(data,position);position+=4;}var segments=readSegments(header,data,position,end);var visitor=new SimpleSegmentVisitor();processSegments(segments,visitor);var _visitor$currentPageI=visitor.currentPageInfo,width=_visitor$currentPageI.width,height=_visitor$currentPageI.height;var bitPacked=visitor.buffer;var imgData=new Uint8ClampedArray(width*height);var q=0,k=0;for(var i=0;i<height;i++){var mask=0,buffer=void 0;for(var j=0;j<width;j++){if(!mask){mask=128;buffer=bitPacked[k++];}imgData[q++]=buffer&mask?0:255;mask>>=1;}}return{imgData:imgData,width:width,height:height};}function SimpleSegmentVisitor(){}SimpleSegmentVisitor.prototype={onPageInformation:function SimpleSegmentVisitor_onPageInformation(info){this.currentPageInfo=info;var rowSize=info.width+7>>3;var buffer=new Uint8ClampedArray(rowSize*info.height);if(info.defaultPixelValue){for(var i=0,ii=buffer.length;i<ii;i++){buffer[i]=0xFF;}}this.buffer=buffer;},drawBitmap:function SimpleSegmentVisitor_drawBitmap(regionInfo,bitmap){var pageInfo=this.currentPageInfo;var width=regionInfo.width,height=regionInfo.height;var rowSize=pageInfo.width+7>>3;var combinationOperator=pageInfo.combinationOperatorOverride?regionInfo.combinationOperator:pageInfo.combinationOperator;var buffer=this.buffer;var mask0=128>>(regionInfo.x&7);var offset0=regionInfo.y*rowSize+(regionInfo.x>>3);var i,j,mask,offset;switch(combinationOperator){case 0:for(i=0;i<height;i++){mask=mask0;offset=offset0;for(j=0;j<width;j++){if(bitmap[i][j]){buffer[offset]|=mask;}mask>>=1;if(!mask){mask=128;offset++;}}offset0+=rowSize;}break;case 2:for(i=0;i<height;i++){mask=mask0;offset=offset0;for(j=0;j<width;j++){if(bitmap[i][j]){buffer[offset]^=mask;}mask>>=1;if(!mask){mask=128;offset++;}}offset0+=rowSize;}break;default:throw new Jbig2Error('operator '+combinationOperator+' is not supported');}},onImmediateGenericRegion:function SimpleSegmentVisitor_onImmediateGenericRegion(region,data,start,end){var regionInfo=region.info;var decodingContext=new DecodingContext(data,start,end);var bitmap=decodeBitmap(region.mmr,regionInfo.width,regionInfo.height,region.template,region.prediction,null,region.at,decodingContext);this.drawBitmap(regionInfo,bitmap);},onImmediateLosslessGenericRegion:function SimpleSegmentVisitor_onImmediateLosslessGenericRegion(){this.onImmediateGenericRegion.apply(this,arguments);},onSymbolDictionary:function SimpleSegmentVisitor_onSymbolDictionary(dictionary,currentSegment,referredSegments,data,start,end){var huffmanTables=void 0,huffmanInput=void 0;if(dictionary.huffman){huffmanTables=getSymbolDictionaryHuffmanTables(dictionary,referredSegments,this.customTables);huffmanInput=new Reader(data,start,end);}var symbols=this.symbols;if(!symbols){this.symbols=symbols={};}var inputSymbols=[];for(var i=0,ii=referredSegments.length;i<ii;i++){var referredSymbols=symbols[referredSegments[i]];if(referredSymbols){inputSymbols=inputSymbols.concat(referredSymbols);}}var decodingContext=new DecodingContext(data,start,end);symbols[currentSegment]=decodeSymbolDictionary(dictionary.huffman,dictionary.refinement,inputSymbols,dictionary.numberOfNewSymbols,dictionary.numberOfExportedSymbols,huffmanTables,dictionary.template,dictionary.at,dictionary.refinementTemplate,dictionary.refinementAt,decodingContext,huffmanInput);},onImmediateTextRegion:function SimpleSegmentVisitor_onImmediateTextRegion(region,referredSegments,data,start,end){var regionInfo=region.info;var huffmanTables=void 0,huffmanInput=void 0;var symbols=this.symbols;var inputSymbols=[];for(var i=0,ii=referredSegments.length;i<ii;i++){var referredSymbols=symbols[referredSegments[i]];if(referredSymbols){inputSymbols=inputSymbols.concat(referredSymbols);}}var symbolCodeLength=(0,_util.log2)(inputSymbols.length);if(region.huffman){huffmanInput=new Reader(data,start,end);huffmanTables=getTextRegionHuffmanTables(region,referredSegments,this.customTables,inputSymbols.length,huffmanInput);}var decodingContext=new DecodingContext(data,start,end);var bitmap=decodeTextRegion(region.huffman,region.refinement,regionInfo.width,regionInfo.height,region.defaultPixelValue,region.numberOfSymbolInstances,region.stripSize,inputSymbols,symbolCodeLength,region.transposed,region.dsOffset,region.referenceCorner,region.combinationOperator,huffmanTables,region.refinementTemplate,region.refinementAt,decodingContext,region.logStripSize,huffmanInput);this.drawBitmap(regionInfo,bitmap);},onImmediateLosslessTextRegion:function SimpleSegmentVisitor_onImmediateLosslessTextRegion(){this.onImmediateTextRegion.apply(this,arguments);},onPatternDictionary:function onPatternDictionary(dictionary,currentSegment,data,start,end){var patterns=this.patterns;if(!patterns){this.patterns=patterns={};}var decodingContext=new DecodingContext(data,start,end);patterns[currentSegment]=decodePatternDictionary(dictionary.mmr,dictionary.patternWidth,dictionary.patternHeight,dictionary.maxPatternIndex,dictionary.template,decodingContext);},onImmediateHalftoneRegion:function onImmediateHalftoneRegion(region,referredSegments,data,start,end){var patterns=this.patterns[referredSegments[0]];var regionInfo=region.info;var decodingContext=new DecodingContext(data,start,end);var bitmap=decodeHalftoneRegion(region.mmr,patterns,region.template,regionInfo.width,regionInfo.height,region.defaultPixelValue,region.enableSkip,region.combinationOperator,region.gridWidth,region.gridHeight,region.gridOffsetX,region.gridOffsetY,region.gridVectorX,region.gridVectorY,decodingContext);this.drawBitmap(regionInfo,bitmap);},onImmediateLosslessHalftoneRegion:function onImmediateLosslessHalftoneRegion(){this.onImmediateHalftoneRegion.apply(this,arguments);},onTables:function onTables(currentSegment,data,start,end){var customTables=this.customTables;if(!customTables){this.customTables=customTables={};}customTables[currentSegment]=decodeTablesSegment(data,start,end);}};function HuffmanLine(lineData){if(lineData.length===2){this.isOOB=true;this.rangeLow=0;this.prefixLength=lineData[0];this.rangeLength=0;this.prefixCode=lineData[1];this.isLowerRange=false;}else{this.isOOB=false;this.rangeLow=lineData[0];this.prefixLength=lineData[1];this.rangeLength=lineData[2];this.prefixCode=lineData[3];this.isLowerRange=lineData[4]==='lower';}}function HuffmanTreeNode(line){this.children=[];if(line){this.isLeaf=true;this.rangeLength=line.rangeLength;this.rangeLow=line.rangeLow;this.isLowerRange=line.isLowerRange;this.isOOB=line.isOOB;}else{this.isLeaf=false;}}HuffmanTreeNode.prototype={buildTree:function buildTree(line,shift){var bit=line.prefixCode>>shift&1;if(shift<=0){this.children[bit]=new HuffmanTreeNode(line);}else{var node=this.children[bit];if(!node){this.children[bit]=node=new HuffmanTreeNode(null);}node.buildTree(line,shift-1);}},decodeNode:function decodeNode(reader){if(this.isLeaf){if(this.isOOB){return null;}var htOffset=reader.readBits(this.rangeLength);return this.rangeLow+(this.isLowerRange?-htOffset:htOffset);}var node=this.children[reader.readBit()];if(!node){throw new Jbig2Error('invalid Huffman data');}return node.decodeNode(reader);}};function HuffmanTable(lines,prefixCodesDone){if(!prefixCodesDone){this.assignPrefixCodes(lines);}this.rootNode=new HuffmanTreeNode(null);var i=void 0,ii=lines.length,line=void 0;for(i=0;i<ii;i++){line=lines[i];if(line.prefixLength>0){this.rootNode.buildTree(line,line.prefixLength-1);}}}HuffmanTable.prototype={decode:function decode(reader){return this.rootNode.decodeNode(reader);},assignPrefixCodes:function assignPrefixCodes(lines){var linesLength=lines.length,prefixLengthMax=0,i=void 0;for(i=0;i<linesLength;i++){prefixLengthMax=Math.max(prefixLengthMax,lines[i].prefixLength);}var histogram=new Uint32Array(prefixLengthMax+1);for(i=0;i<linesLength;i++){histogram[lines[i].prefixLength]++;}var currentLength=1,firstCode=0,currentCode=void 0,currentTemp=void 0,line=void 0;histogram[0]=0;while(currentLength<=prefixLengthMax){firstCode=firstCode+histogram[currentLength-1]<<1;currentCode=firstCode;currentTemp=0;while(currentTemp<linesLength){line=lines[currentTemp];if(line.prefixLength===currentLength){line.prefixCode=currentCode;currentCode++;}currentTemp++;}currentLength++;}}};function decodeTablesSegment(data,start,end){var flags=data[start];var lowestValue=(0,_util.readUint32)(data,start+1)&0xFFFFFFFF;var highestValue=(0,_util.readUint32)(data,start+5)&0xFFFFFFFF;var reader=new Reader(data,start+9,end);var prefixSizeBits=(flags>>1&7)+1;var rangeSizeBits=(flags>>4&7)+1;var lines=[];var prefixLength=void 0,rangeLength=void 0,currentRangeLow=lowestValue;do{prefixLength=reader.readBits(prefixSizeBits);rangeLength=reader.readBits(rangeSizeBits);lines.push(new HuffmanLine([currentRangeLow,prefixLength,rangeLength,0]));currentRangeLow+=1<<rangeLength;}while(currentRangeLow<highestValue);prefixLength=reader.readBits(prefixSizeBits);lines.push(new HuffmanLine([lowestValue-1,prefixLength,32,0,'lower']));prefixLength=reader.readBits(prefixSizeBits);lines.push(new HuffmanLine([highestValue,prefixLength,32,0]));if(flags&1){prefixLength=reader.readBits(prefixSizeBits);lines.push(new HuffmanLine([prefixLength,0]));}return new HuffmanTable(lines,false);}var standardTablesCache={};function getStandardTable(number){var table=standardTablesCache[number];if(table){return table;}var lines=void 0;switch(number){case 1:lines=[[0,1,4,0x0],[16,2,8,0x2],[272,3,16,0x6],[65808,3,32,0x7]];break;case 2:lines=[[0,1,0,0x0],[1,2,0,0x2],[2,3,0,0x6],[3,4,3,0xE],[11,5,6,0x1E],[75,6,32,0x3E],[6,0x3F]];break;case 3:lines=[[-256,8,8,0xFE],[0,1,0,0x0],[1,2,0,0x2],[2,3,0,0x6],[3,4,3,0xE],[11,5,6,0x1E],[-257,8,32,0xFF,'lower'],[75,7,32,0x7E],[6,0x3E]];break;case 4:lines=[[1,1,0,0x0],[2,2,0,0x2],[3,3,0,0x6],[4,4,3,0xE],[12,5,6,0x1E],[76,5,32,0x1F]];break;case 5:lines=[[-255,7,8,0x7E],[1,1,0,0x0],[2,2,0,0x2],[3,3,0,0x6],[4,4,3,0xE],[12,5,6,0x1E],[-256,7,32,0x7F,'lower'],[76,6,32,0x3E]];break;case 6:lines=[[-2048,5,10,0x1C],[-1024,4,9,0x8],[-512,4,8,0x9],[-256,4,7,0xA],[-128,5,6,0x1D],[-64,5,5,0x1E],[-32,4,5,0xB],[0,2,7,0x0],[128,3,7,0x2],[256,3,8,0x3],[512,4,9,0xC],[1024,4,10,0xD],[-2049,6,32,0x3E,'lower'],[2048,6,32,0x3F]];break;case 7:lines=[[-1024,4,9,0x8],[-512,3,8,0x0],[-256,4,7,0x9],[-128,5,6,0x1A],[-64,5,5,0x1B],[-32,4,5,0xA],[0,4,5,0xB],[32,5,5,0x1C],[64,5,6,0x1D],[128,4,7,0xC],[256,3,8,0x1],[512,3,9,0x2],[1024,3,10,0x3],[-1025,5,32,0x1E,'lower'],[2048,5,32,0x1F]];break;case 8:lines=[[-15,8,3,0xFC],[-7,9,1,0x1FC],[-5,8,1,0xFD],[-3,9,0,0x1FD],[-2,7,0,0x7C],[-1,4,0,0xA],[0,2,1,0x0],[2,5,0,0x1A],[3,6,0,0x3A],[4,3,4,0x4],[20,6,1,0x3B],[22,4,4,0xB],[38,4,5,0xC],[70,5,6,0x1B],[134,5,7,0x1C],[262,6,7,0x3C],[390,7,8,0x7D],[646,6,10,0x3D],[-16,9,32,0x1FE,'lower'],[1670,9,32,0x1FF],[2,0x1]];break;case 9:lines=[[-31,8,4,0xFC],[-15,9,2,0x1FC],[-11,8,2,0xFD],[-7,9,1,0x1FD],[-5,7,1,0x7C],[-3,4,1,0xA],[-1,3,1,0x2],[1,3,1,0x3],[3,5,1,0x1A],[5,6,1,0x3A],[7,3,5,0x4],[39,6,2,0x3B],[43,4,5,0xB],[75,4,6,0xC],[139,5,7,0x1B],[267,5,8,0x1C],[523,6,8,0x3C],[779,7,9,0x7D],[1291,6,11,0x3D],[-32,9,32,0x1FE,'lower'],[3339,9,32,0x1FF],[2,0x0]];break;case 10:lines=[[-21,7,4,0x7A],[-5,8,0,0xFC],[-4,7,0,0x7B],[-3,5,0,0x18],[-2,2,2,0x0],[2,5,0,0x19],[3,6,0,0x36],[4,7,0,0x7C],[5,8,0,0xFD],[6,2,6,0x1],[70,5,5,0x1A],[102,6,5,0x37],[134,6,6,0x38],[198,6,7,0x39],[326,6,8,0x3A],[582,6,9,0x3B],[1094,6,10,0x3C],[2118,7,11,0x7D],[-22,8,32,0xFE,'lower'],[4166,8,32,0xFF],[2,0x2]];break;case 11:lines=[[1,1,0,0x0],[2,2,1,0x2],[4,4,0,0xC],[5,4,1,0xD],[7,5,1,0x1C],[9,5,2,0x1D],[13,6,2,0x3C],[17,7,2,0x7A],[21,7,3,0x7B],[29,7,4,0x7C],[45,7,5,0x7D],[77,7,6,0x7E],[141,7,32,0x7F]];break;case 12:lines=[[1,1,0,0x0],[2,2,0,0x2],[3,3,1,0x6],[5,5,0,0x1C],[6,5,1,0x1D],[8,6,1,0x3C],[10,7,0,0x7A],[11,7,1,0x7B],[13,7,2,0x7C],[17,7,3,0x7D],[25,7,4,0x7E],[41,8,5,0xFE],[73,8,32,0xFF]];break;case 13:lines=[[1,1,0,0x0],[2,3,0,0x4],[3,4,0,0xC],[4,5,0,0x1C],[5,4,1,0xD],[7,3,3,0x5],[15,6,1,0x3A],[17,6,2,0x3B],[21,6,3,0x3C],[29,6,4,0x3D],[45,6,5,0x3E],[77,7,6,0x7E],[141,7,32,0x7F]];break;case 14:lines=[[-2,3,0,0x4],[-1,3,0,0x5],[0,1,0,0x0],[1,3,0,0x6],[2,3,0,0x7]];break;case 15:lines=[[-24,7,4,0x7C],[-8,6,2,0x3C],[-4,5,1,0x1C],[-2,4,0,0xC],[-1,3,0,0x4],[0,1,0,0x0],[1,3,0,0x5],[2,4,0,0xD],[3,5,1,0x1D],[5,6,2,0x3D],[9,7,4,0x7D],[-25,7,32,0x7E,'lower'],[25,7,32,0x7F]];break;default:throw new Jbig2Error('standard table B.'+number+' does not exist');}var length=lines.length,i=void 0;for(i=0;i<length;i++){lines[i]=new HuffmanLine(lines[i]);}table=new HuffmanTable(lines,true);standardTablesCache[number]=table;return table;}function Reader(data,start,end){this.data=data;this.start=start;this.end=end;this.position=start;this.shift=-1;this.currentByte=0;}Reader.prototype={readBit:function readBit(){if(this.shift<0){if(this.position>=this.end){throw new Jbig2Error('end of data while reading bit');}this.currentByte=this.data[this.position++];this.shift=7;}var bit=this.currentByte>>this.shift&1;this.shift--;return bit;},readBits:function readBits(numBits){var result=0,i=void 0;for(i=numBits-1;i>=0;i--){result|=this.readBit()<<i;}return result;},byteAlign:function byteAlign(){this.shift=-1;},next:function next(){if(this.position>=this.end){return-1;}return this.data[this.position++];}};function getCustomHuffmanTable(index,referredTo,customTables){var currentIndex=0,i=void 0,ii=referredTo.length,table=void 0;for(i=0;i<ii;i++){table=customTables[referredTo[i]];if(table){if(index===currentIndex){return table;}currentIndex++;}}throw new Jbig2Error('can\'t find custom Huffman table');}function getTextRegionHuffmanTables(textRegion,referredTo,customTables,numberOfSymbols,reader){var codes=[],i=void 0,codeLength=void 0;for(i=0;i<=34;i++){codeLength=reader.readBits(4);codes.push(new HuffmanLine([i,codeLength,0,0]));}var runCodesTable=new HuffmanTable(codes,false);codes.length=0;for(i=0;i<numberOfSymbols;){codeLength=runCodesTable.decode(reader);if(codeLength>=32){var repeatedLength=void 0,numberOfRepeats=void 0,j=void 0;switch(codeLength){case 32:if(i===0){throw new Jbig2Error('no previous value in symbol ID table');}numberOfRepeats=reader.readBits(2)+3;repeatedLength=codes[i-1].prefixLength;break;case 33:numberOfRepeats=reader.readBits(3)+3;repeatedLength=0;break;case 34:numberOfRepeats=reader.readBits(7)+11;repeatedLength=0;break;default:throw new Jbig2Error('invalid code length in symbol ID table');}for(j=0;j<numberOfRepeats;j++){codes.push(new HuffmanLine([i,repeatedLength,0,0]));i++;}}else{codes.push(new HuffmanLine([i,codeLength,0,0]));i++;}}reader.byteAlign();var symbolIDTable=new HuffmanTable(codes,false);var customIndex=0,tableFirstS=void 0,tableDeltaS=void 0,tableDeltaT=void 0;switch(textRegion.huffmanFS){case 0:case 1:tableFirstS=getStandardTable(textRegion.huffmanFS+6);break;case 3:tableFirstS=getCustomHuffmanTable(customIndex,referredTo,customTables);customIndex++;break;default:throw new Jbig2Error('invalid Huffman FS selector');}switch(textRegion.huffmanDS){case 0:case 1:case 2:tableDeltaS=getStandardTable(textRegion.huffmanDS+8);break;case 3:tableDeltaS=getCustomHuffmanTable(customIndex,referredTo,customTables);customIndex++;break;default:throw new Jbig2Error('invalid Huffman DS selector');}switch(textRegion.huffmanDT){case 0:case 1:case 2:tableDeltaT=getStandardTable(textRegion.huffmanDT+11);break;case 3:tableDeltaT=getCustomHuffmanTable(customIndex,referredTo,customTables);customIndex++;break;default:throw new Jbig2Error('invalid Huffman DT selector');}if(textRegion.refinement){throw new Jbig2Error('refinement with Huffman is not supported');}return{symbolIDTable:symbolIDTable,tableFirstS:tableFirstS,tableDeltaS:tableDeltaS,tableDeltaT:tableDeltaT};}function getSymbolDictionaryHuffmanTables(dictionary,referredTo,customTables){var customIndex=0,tableDeltaHeight=void 0,tableDeltaWidth=void 0;switch(dictionary.huffmanDHSelector){case 0:case 1:tableDeltaHeight=getStandardTable(dictionary.huffmanDHSelector+4);break;case 3:tableDeltaHeight=getCustomHuffmanTable(customIndex,referredTo,customTables);customIndex++;break;default:throw new Jbig2Error('invalid Huffman DH selector');}switch(dictionary.huffmanDWSelector){case 0:case 1:tableDeltaWidth=getStandardTable(dictionary.huffmanDWSelector+2);break;case 3:tableDeltaWidth=getCustomHuffmanTable(customIndex,referredTo,customTables);customIndex++;break;default:throw new Jbig2Error('invalid Huffman DW selector');}var tableBitmapSize=void 0,tableAggregateInstances=void 0;if(dictionary.bitmapSizeSelector){tableBitmapSize=getCustomHuffmanTable(customIndex,referredTo,customTables);customIndex++;}else{tableBitmapSize=getStandardTable(1);}if(dictionary.aggregationInstancesSelector){tableAggregateInstances=getCustomHuffmanTable(customIndex,referredTo,customTables);}else{tableAggregateInstances=getStandardTable(1);}return{tableDeltaHeight:tableDeltaHeight,tableDeltaWidth:tableDeltaWidth,tableBitmapSize:tableBitmapSize,tableAggregateInstances:tableAggregateInstances};}function readUncompressedBitmap(reader,width,height){var bitmap=[],x=void 0,y=void 0,row=void 0;for(y=0;y<height;y++){row=new Uint8Array(width);bitmap.push(row);for(x=0;x<width;x++){row[x]=reader.readBit();}reader.byteAlign();}return bitmap;}function decodeMMRBitmap(input,width,height,endOfBlock){var params={K:-1,Columns:width,Rows:height,BlackIs1:true,EndOfBlock:endOfBlock};var decoder=new _ccitt.CCITTFaxDecoder(input,params);var bitmap=[],x=void 0,y=void 0,row=void 0,currentByte=void 0,shift=void 0,eof=false;for(y=0;y<height;y++){row=new Uint8Array(width);bitmap.push(row);shift=-1;for(x=0;x<width;x++){if(shift<0){currentByte=decoder.readNextChar();if(currentByte===-1){currentByte=0;eof=true;}shift=7;}row[x]=currentByte>>shift&1;shift--;}}if(endOfBlock&&!eof){var lookForEOFLimit=5;for(var i=0;i<lookForEOFLimit;i++){if(decoder.readNextChar()===-1){break;}}}return bitmap;}function Jbig2Image(){}Jbig2Image.prototype={parseChunks:function parseChunks(chunks){return parseJbig2Chunks(chunks);},parse:function parse(data){var _parseJbig=parseJbig2(data),imgData=_parseJbig.imgData,width=_parseJbig.width,height=_parseJbig.height;this.width=width;this.height=height;return imgData;}};return Jbig2Image;}();exports.Jbig2Image=Jbig2Image;/***/},/* 145 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var ArithmeticDecoder=function ArithmeticDecoderClosure(){var QeTable=[{qe:0x5601,nmps:1,nlps:1,switchFlag:1},{qe:0x3401,nmps:2,nlps:6,switchFlag:0},{qe:0x1801,nmps:3,nlps:9,switchFlag:0},{qe:0x0AC1,nmps:4,nlps:12,switchFlag:0},{qe:0x0521,nmps:5,nlps:29,switchFlag:0},{qe:0x0221,nmps:38,nlps:33,switchFlag:0},{qe:0x5601,nmps:7,nlps:6,switchFlag:1},{qe:0x5401,nmps:8,nlps:14,switchFlag:0},{qe:0x4801,nmps:9,nlps:14,switchFlag:0},{qe:0x3801,nmps:10,nlps:14,switchFlag:0},{qe:0x3001,nmps:11,nlps:17,switchFlag:0},{qe:0x2401,nmps:12,nlps:18,switchFlag:0},{qe:0x1C01,nmps:13,nlps:20,switchFlag:0},{qe:0x1601,nmps:29,nlps:21,switchFlag:0},{qe:0x5601,nmps:15,nlps:14,switchFlag:1},{qe:0x5401,nmps:16,nlps:14,switchFlag:0},{qe:0x5101,nmps:17,nlps:15,switchFlag:0},{qe:0x4801,nmps:18,nlps:16,switchFlag:0},{qe:0x3801,nmps:19,nlps:17,switchFlag:0},{qe:0x3401,nmps:20,nlps:18,switchFlag:0},{qe:0x3001,nmps:21,nlps:19,switchFlag:0},{qe:0x2801,nmps:22,nlps:19,switchFlag:0},{qe:0x2401,nmps:23,nlps:20,switchFlag:0},{qe:0x2201,nmps:24,nlps:21,switchFlag:0},{qe:0x1C01,nmps:25,nlps:22,switchFlag:0},{qe:0x1801,nmps:26,nlps:23,switchFlag:0},{qe:0x1601,nmps:27,nlps:24,switchFlag:0},{qe:0x1401,nmps:28,nlps:25,switchFlag:0},{qe:0x1201,nmps:29,nlps:26,switchFlag:0},{qe:0x1101,nmps:30,nlps:27,switchFlag:0},{qe:0x0AC1,nmps:31,nlps:28,switchFlag:0},{qe:0x09C1,nmps:32,nlps:29,switchFlag:0},{qe:0x08A1,nmps:33,nlps:30,switchFlag:0},{qe:0x0521,nmps:34,nlps:31,switchFlag:0},{qe:0x0441,nmps:35,nlps:32,switchFlag:0},{qe:0x02A1,nmps:36,nlps:33,switchFlag:0},{qe:0x0221,nmps:37,nlps:34,switchFlag:0},{qe:0x0141,nmps:38,nlps:35,switchFlag:0},{qe:0x0111,nmps:39,nlps:36,switchFlag:0},{qe:0x0085,nmps:40,nlps:37,switchFlag:0},{qe:0x0049,nmps:41,nlps:38,switchFlag:0},{qe:0x0025,nmps:42,nlps:39,switchFlag:0},{qe:0x0015,nmps:43,nlps:40,switchFlag:0},{qe:0x0009,nmps:44,nlps:41,switchFlag:0},{qe:0x0005,nmps:45,nlps:42,switchFlag:0},{qe:0x0001,nmps:45,nlps:43,switchFlag:0},{qe:0x5601,nmps:46,nlps:46,switchFlag:0}];function ArithmeticDecoder(data,start,end){this.data=data;this.bp=start;this.dataEnd=end;this.chigh=data[start];this.clow=0;this.byteIn();this.chigh=this.chigh<<7&0xFFFF|this.clow>>9&0x7F;this.clow=this.clow<<7&0xFFFF;this.ct-=7;this.a=0x8000;}ArithmeticDecoder.prototype={byteIn:function ArithmeticDecoder_byteIn(){var data=this.data;var bp=this.bp;if(data[bp]===0xFF){var b1=data[bp+1];if(b1>0x8F){this.clow+=0xFF00;this.ct=8;}else{bp++;this.clow+=data[bp]<<9;this.ct=7;this.bp=bp;}}else{bp++;this.clow+=bp<this.dataEnd?data[bp]<<8:0xFF00;this.ct=8;this.bp=bp;}if(this.clow>0xFFFF){this.chigh+=this.clow>>16;this.clow&=0xFFFF;}},readBit:function ArithmeticDecoder_readBit(contexts,pos){var cx_index=contexts[pos]>>1,cx_mps=contexts[pos]&1;var qeTableIcx=QeTable[cx_index];var qeIcx=qeTableIcx.qe;var d;var a=this.a-qeIcx;if(this.chigh<qeIcx){if(a<qeIcx){a=qeIcx;d=cx_mps;cx_index=qeTableIcx.nmps;}else{a=qeIcx;d=1^cx_mps;if(qeTableIcx.switchFlag===1){cx_mps=d;}cx_index=qeTableIcx.nlps;}}else{this.chigh-=qeIcx;if((a&0x8000)!==0){this.a=a;return cx_mps;}if(a<qeIcx){d=1^cx_mps;if(qeTableIcx.switchFlag===1){cx_mps=d;}cx_index=qeTableIcx.nlps;}else{d=cx_mps;cx_index=qeTableIcx.nmps;}}do{if(this.ct===0){this.byteIn();}a<<=1;this.chigh=this.chigh<<1&0xFFFF|this.clow>>15&1;this.clow=this.clow<<1&0xFFFF;this.ct--;}while((a&0x8000)===0);this.a=a;contexts[pos]=cx_index<<1|cx_mps;return d;}};return ArithmeticDecoder;}();exports.ArithmeticDecoder=ArithmeticDecoder;/***/},/* 146 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.JpegStream=undefined;var _util=__w_pdfjs_require__(2);var _stream=__w_pdfjs_require__(140);var _primitives=__w_pdfjs_require__(138);var _jpg=__w_pdfjs_require__(147);var JpegStream=function JpegStreamClosure(){function JpegStream(stream,maybeLength,dict,params){var ch=void 0;while((ch=stream.getByte())!==-1){if(ch===0xFF){stream.skip(-1);break;}}this.stream=stream;this.maybeLength=maybeLength;this.dict=dict;this.params=params;_stream.DecodeStream.call(this,maybeLength);}JpegStream.prototype=Object.create(_stream.DecodeStream.prototype);Object.defineProperty(JpegStream.prototype,'bytes',{get:function JpegStream_bytes(){return(0,_util.shadow)(this,'bytes',this.stream.getBytes(this.maybeLength));},configurable:true});JpegStream.prototype.ensureBuffer=function(requested){};JpegStream.prototype.readBlock=function(){if(this.eof){return;}var jpegOptions={decodeTransform:undefined,colorTransform:undefined};var decodeArr=this.dict.getArray('Decode','D');if(this.forceRGB&&Array.isArray(decodeArr)){var bitsPerComponent=this.dict.get('BitsPerComponent')||8;var decodeArrLength=decodeArr.length;var transform=new Int32Array(decodeArrLength);var transformNeeded=false;var maxValue=(1<<bitsPerComponent)-1;for(var i=0;i<decodeArrLength;i+=2){transform[i]=(decodeArr[i+1]-decodeArr[i])*256|0;transform[i+1]=decodeArr[i]*maxValue|0;if(transform[i]!==256||transform[i+1]!==0){transformNeeded=true;}}if(transformNeeded){jpegOptions.decodeTransform=transform;}}if((0,_primitives.isDict)(this.params)){var colorTransform=this.params.get('ColorTransform');if(Number.isInteger(colorTransform)){jpegOptions.colorTransform=colorTransform;}}var jpegImage=new _jpg.JpegImage(jpegOptions);jpegImage.parse(this.bytes);var data=jpegImage.getData({width:this.drawWidth,height:this.drawHeight,forceRGB:this.forceRGB,isSourcePDF:true});this.buffer=data;this.bufferLength=data.length;this.eof=true;};JpegStream.prototype.getIR=function(){var forceDataSchema=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;return(0,_util.createObjectURL)(this.bytes,'image/jpeg',forceDataSchema);};return JpegStream;}();exports.JpegStream=JpegStream;/***/},/* 147 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.JpegImage=undefined;var _typeof=typeof Symbol==="function"&&_typeof3(Symbol.iterator)==="symbol"?function(obj){return _typeof3(obj);}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":_typeof3(obj);};var _util=__w_pdfjs_require__(2);var JpegError=function JpegErrorClosure(){function JpegError(msg){this.message='JPEG error: '+msg;}JpegError.prototype=new Error();JpegError.prototype.name='JpegError';JpegError.constructor=JpegError;return JpegError;}();var DNLMarkerError=function DNLMarkerErrorClosure(){function DNLMarkerError(message,scanLines){this.message=message;this.scanLines=scanLines;}DNLMarkerError.prototype=new Error();DNLMarkerError.prototype.name='DNLMarkerError';DNLMarkerError.constructor=DNLMarkerError;return DNLMarkerError;}();var EOIMarkerError=function EOIMarkerErrorClosure(){function EOIMarkerError(message){this.message=message;}EOIMarkerError.prototype=new Error();EOIMarkerError.prototype.name='EOIMarkerError';EOIMarkerError.constructor=EOIMarkerError;return EOIMarkerError;}();var JpegImage=function JpegImageClosure(){var dctZigZag=new Uint8Array([0,1,8,16,9,2,3,10,17,24,32,25,18,11,4,5,12,19,26,33,40,48,41,34,27,20,13,6,7,14,21,28,35,42,49,56,57,50,43,36,29,22,15,23,30,37,44,51,58,59,52,45,38,31,39,46,53,60,61,54,47,55,62,63]);var dctCos1=4017;var dctSin1=799;var dctCos3=3406;var dctSin3=2276;var dctCos6=1567;var dctSin6=3784;var dctSqrt2=5793;var dctSqrt1d2=2896;function JpegImage(){var _ref=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},_ref$decodeTransform=_ref.decodeTransform,decodeTransform=_ref$decodeTransform===undefined?null:_ref$decodeTransform,_ref$colorTransform=_ref.colorTransform,colorTransform=_ref$colorTransform===undefined?-1:_ref$colorTransform;this._decodeTransform=decodeTransform;this._colorTransform=colorTransform;}function buildHuffmanTable(codeLengths,values){var k=0,code=[],i,j,length=16;while(length>0&&!codeLengths[length-1]){length--;}code.push({children:[],index:0});var p=code[0],q;for(i=0;i<length;i++){for(j=0;j<codeLengths[i];j++){p=code.pop();p.children[p.index]=values[k];while(p.index>0){p=code.pop();}p.index++;code.push(p);while(code.length<=i){code.push(q={children:[],index:0});p.children[p.index]=q.children;p=q;}k++;}if(i+1<length){code.push(q={children:[],index:0});p.children[p.index]=q.children;p=q;}}return code[0].children;}function getBlockBufferOffset(component,row,col){return 64*((component.blocksPerLine+1)*row+col);}function decodeScan(data,offset,frame,components,resetInterval,spectralStart,spectralEnd,successivePrev,successive){var parseDNLMarker=arguments.length>9&&arguments[9]!==undefined?arguments[9]:false;var mcusPerLine=frame.mcusPerLine;var progressive=frame.progressive;var startOffset=offset,bitsData=0,bitsCount=0;function readBit(){if(bitsCount>0){bitsCount--;return bitsData>>bitsCount&1;}bitsData=data[offset++];if(bitsData===0xFF){var nextByte=data[offset++];if(nextByte){if(nextByte===0xDC&&parseDNLMarker){offset+=2;var scanLines=data[offset++]<<8|data[offset++];if(scanLines>0&&scanLines!==frame.scanLines){throw new DNLMarkerError('Found DNL marker (0xFFDC) while parsing scan data',scanLines);}}else if(nextByte===0xD9){throw new EOIMarkerError('Found EOI marker (0xFFD9) while parsing scan data');}throw new JpegError('unexpected marker '+(bitsData<<8|nextByte).toString(16));}}bitsCount=7;return bitsData>>>7;}function decodeHuffman(tree){var node=tree;while(true){node=node[readBit()];if(typeof node==='number'){return node;}if((typeof node==='undefined'?'undefined':_typeof(node))!=='object'){throw new JpegError('invalid huffman sequence');}}}function receive(length){var n=0;while(length>0){n=n<<1|readBit();length--;}return n;}function receiveAndExtend(length){if(length===1){return readBit()===1?1:-1;}var n=receive(length);if(n>=1<<length-1){return n;}return n+(-1<<length)+1;}function decodeBaseline(component,offset){var t=decodeHuffman(component.huffmanTableDC);var diff=t===0?0:receiveAndExtend(t);component.blockData[offset]=component.pred+=diff;var k=1;while(k<64){var rs=decodeHuffman(component.huffmanTableAC);var s=rs&15,r=rs>>4;if(s===0){if(r<15){break;}k+=16;continue;}k+=r;var z=dctZigZag[k];component.blockData[offset+z]=receiveAndExtend(s);k++;}}function decodeDCFirst(component,offset){var t=decodeHuffman(component.huffmanTableDC);var diff=t===0?0:receiveAndExtend(t)<<successive;component.blockData[offset]=component.pred+=diff;}function decodeDCSuccessive(component,offset){component.blockData[offset]|=readBit()<<successive;}var eobrun=0;function decodeACFirst(component,offset){if(eobrun>0){eobrun--;return;}var k=spectralStart,e=spectralEnd;while(k<=e){var rs=decodeHuffman(component.huffmanTableAC);var s=rs&15,r=rs>>4;if(s===0){if(r<15){eobrun=receive(r)+(1<<r)-1;break;}k+=16;continue;}k+=r;var z=dctZigZag[k];component.blockData[offset+z]=receiveAndExtend(s)*(1<<successive);k++;}}var successiveACState=0,successiveACNextValue;function decodeACSuccessive(component,offset){var k=spectralStart;var e=spectralEnd;var r=0;var s;var rs;while(k<=e){var offsetZ=offset+dctZigZag[k];var sign=component.blockData[offsetZ]<0?-1:1;switch(successiveACState){case 0:rs=decodeHuffman(component.huffmanTableAC);s=rs&15;r=rs>>4;if(s===0){if(r<15){eobrun=receive(r)+(1<<r);successiveACState=4;}else{r=16;successiveACState=1;}}else{if(s!==1){throw new JpegError('invalid ACn encoding');}successiveACNextValue=receiveAndExtend(s);successiveACState=r?2:3;}continue;case 1:case 2:if(component.blockData[offsetZ]){component.blockData[offsetZ]+=sign*(readBit()<<successive);}else{r--;if(r===0){successiveACState=successiveACState===2?3:0;}}break;case 3:if(component.blockData[offsetZ]){component.blockData[offsetZ]+=sign*(readBit()<<successive);}else{component.blockData[offsetZ]=successiveACNextValue<<successive;successiveACState=0;}break;case 4:if(component.blockData[offsetZ]){component.blockData[offsetZ]+=sign*(readBit()<<successive);}break;}k++;}if(successiveACState===4){eobrun--;if(eobrun===0){successiveACState=0;}}}function decodeMcu(component,decode,mcu,row,col){var mcuRow=mcu/mcusPerLine|0;var mcuCol=mcu%mcusPerLine;var blockRow=mcuRow*component.v+row;var blockCol=mcuCol*component.h+col;var offset=getBlockBufferOffset(component,blockRow,blockCol);decode(component,offset);}function decodeBlock(component,decode,mcu){var blockRow=mcu/component.blocksPerLine|0;var blockCol=mcu%component.blocksPerLine;var offset=getBlockBufferOffset(component,blockRow,blockCol);decode(component,offset);}var componentsLength=components.length;var component,i,j,k,n;var decodeFn;if(progressive){if(spectralStart===0){decodeFn=successivePrev===0?decodeDCFirst:decodeDCSuccessive;}else{decodeFn=successivePrev===0?decodeACFirst:decodeACSuccessive;}}else{decodeFn=decodeBaseline;}var mcu=0,fileMarker;var mcuExpected;if(componentsLength===1){mcuExpected=components[0].blocksPerLine*components[0].blocksPerColumn;}else{mcuExpected=mcusPerLine*frame.mcusPerColumn;}var h,v;while(mcu<mcuExpected){var mcuToRead=resetInterval?Math.min(mcuExpected-mcu,resetInterval):mcuExpected;for(i=0;i<componentsLength;i++){components[i].pred=0;}eobrun=0;if(componentsLength===1){component=components[0];for(n=0;n<mcuToRead;n++){decodeBlock(component,decodeFn,mcu);mcu++;}}else{for(n=0;n<mcuToRead;n++){for(i=0;i<componentsLength;i++){component=components[i];h=component.h;v=component.v;for(j=0;j<v;j++){for(k=0;k<h;k++){decodeMcu(component,decodeFn,mcu,j,k);}}}mcu++;}}bitsCount=0;fileMarker=findNextFileMarker(data,offset);if(fileMarker&&fileMarker.invalid){(0,_util.warn)('decodeScan - unexpected MCU data, current marker is: '+fileMarker.invalid);offset=fileMarker.offset;}var marker=fileMarker&&fileMarker.marker;if(!marker||marker<=0xFF00){throw new JpegError('marker was not found');}if(marker>=0xFFD0&&marker<=0xFFD7){offset+=2;}else{break;}}fileMarker=findNextFileMarker(data,offset);if(fileMarker&&fileMarker.invalid){(0,_util.warn)('decodeScan - unexpected Scan data, current marker is: '+fileMarker.invalid);offset=fileMarker.offset;}return offset-startOffset;}function quantizeAndInverse(component,blockBufferOffset,p){var qt=component.quantizationTable,blockData=component.blockData;var v0,v1,v2,v3,v4,v5,v6,v7;var p0,p1,p2,p3,p4,p5,p6,p7;var t;if(!qt){throw new JpegError('missing required Quantization Table.');}for(var row=0;row<64;row+=8){p0=blockData[blockBufferOffset+row];p1=blockData[blockBufferOffset+row+1];p2=blockData[blockBufferOffset+row+2];p3=blockData[blockBufferOffset+row+3];p4=blockData[blockBufferOffset+row+4];p5=blockData[blockBufferOffset+row+5];p6=blockData[blockBufferOffset+row+6];p7=blockData[blockBufferOffset+row+7];p0*=qt[row];if((p1|p2|p3|p4|p5|p6|p7)===0){t=dctSqrt2*p0+512>>10;p[row]=t;p[row+1]=t;p[row+2]=t;p[row+3]=t;p[row+4]=t;p[row+5]=t;p[row+6]=t;p[row+7]=t;continue;}p1*=qt[row+1];p2*=qt[row+2];p3*=qt[row+3];p4*=qt[row+4];p5*=qt[row+5];p6*=qt[row+6];p7*=qt[row+7];v0=dctSqrt2*p0+128>>8;v1=dctSqrt2*p4+128>>8;v2=p2;v3=p6;v4=dctSqrt1d2*(p1-p7)+128>>8;v7=dctSqrt1d2*(p1+p7)+128>>8;v5=p3<<4;v6=p5<<4;v0=v0+v1+1>>1;v1=v0-v1;t=v2*dctSin6+v3*dctCos6+128>>8;v2=v2*dctCos6-v3*dctSin6+128>>8;v3=t;v4=v4+v6+1>>1;v6=v4-v6;v7=v7+v5+1>>1;v5=v7-v5;v0=v0+v3+1>>1;v3=v0-v3;v1=v1+v2+1>>1;v2=v1-v2;t=v4*dctSin3+v7*dctCos3+2048>>12;v4=v4*dctCos3-v7*dctSin3+2048>>12;v7=t;t=v5*dctSin1+v6*dctCos1+2048>>12;v5=v5*dctCos1-v6*dctSin1+2048>>12;v6=t;p[row]=v0+v7;p[row+7]=v0-v7;p[row+1]=v1+v6;p[row+6]=v1-v6;p[row+2]=v2+v5;p[row+5]=v2-v5;p[row+3]=v3+v4;p[row+4]=v3-v4;}for(var col=0;col<8;++col){p0=p[col];p1=p[col+8];p2=p[col+16];p3=p[col+24];p4=p[col+32];p5=p[col+40];p6=p[col+48];p7=p[col+56];if((p1|p2|p3|p4|p5|p6|p7)===0){t=dctSqrt2*p0+8192>>14;t=t<-2040?0:t>=2024?255:t+2056>>4;blockData[blockBufferOffset+col]=t;blockData[blockBufferOffset+col+8]=t;blockData[blockBufferOffset+col+16]=t;blockData[blockBufferOffset+col+24]=t;blockData[blockBufferOffset+col+32]=t;blockData[blockBufferOffset+col+40]=t;blockData[blockBufferOffset+col+48]=t;blockData[blockBufferOffset+col+56]=t;continue;}v0=dctSqrt2*p0+2048>>12;v1=dctSqrt2*p4+2048>>12;v2=p2;v3=p6;v4=dctSqrt1d2*(p1-p7)+2048>>12;v7=dctSqrt1d2*(p1+p7)+2048>>12;v5=p3;v6=p5;v0=(v0+v1+1>>1)+4112;v1=v0-v1;t=v2*dctSin6+v3*dctCos6+2048>>12;v2=v2*dctCos6-v3*dctSin6+2048>>12;v3=t;v4=v4+v6+1>>1;v6=v4-v6;v7=v7+v5+1>>1;v5=v7-v5;v0=v0+v3+1>>1;v3=v0-v3;v1=v1+v2+1>>1;v2=v1-v2;t=v4*dctSin3+v7*dctCos3+2048>>12;v4=v4*dctCos3-v7*dctSin3+2048>>12;v7=t;t=v5*dctSin1+v6*dctCos1+2048>>12;v5=v5*dctCos1-v6*dctSin1+2048>>12;v6=t;p0=v0+v7;p7=v0-v7;p1=v1+v6;p6=v1-v6;p2=v2+v5;p5=v2-v5;p3=v3+v4;p4=v3-v4;p0=p0<16?0:p0>=4080?255:p0>>4;p1=p1<16?0:p1>=4080?255:p1>>4;p2=p2<16?0:p2>=4080?255:p2>>4;p3=p3<16?0:p3>=4080?255:p3>>4;p4=p4<16?0:p4>=4080?255:p4>>4;p5=p5<16?0:p5>=4080?255:p5>>4;p6=p6<16?0:p6>=4080?255:p6>>4;p7=p7<16?0:p7>=4080?255:p7>>4;blockData[blockBufferOffset+col]=p0;blockData[blockBufferOffset+col+8]=p1;blockData[blockBufferOffset+col+16]=p2;blockData[blockBufferOffset+col+24]=p3;blockData[blockBufferOffset+col+32]=p4;blockData[blockBufferOffset+col+40]=p5;blockData[blockBufferOffset+col+48]=p6;blockData[blockBufferOffset+col+56]=p7;}}function buildComponentData(frame,component){var blocksPerLine=component.blocksPerLine;var blocksPerColumn=component.blocksPerColumn;var computationBuffer=new Int16Array(64);for(var blockRow=0;blockRow<blocksPerColumn;blockRow++){for(var blockCol=0;blockCol<blocksPerLine;blockCol++){var offset=getBlockBufferOffset(component,blockRow,blockCol);quantizeAndInverse(component,offset,computationBuffer);}}return component.blockData;}function findNextFileMarker(data,currentPos){var startPos=arguments.length>2&&arguments[2]!==undefined?arguments[2]:currentPos;function peekUint16(pos){return data[pos]<<8|data[pos+1];}var maxPos=data.length-1;var newPos=startPos<currentPos?startPos:currentPos;if(currentPos>=maxPos){return null;}var currentMarker=peekUint16(currentPos);if(currentMarker>=0xFFC0&&currentMarker<=0xFFFE){return{invalid:null,marker:currentMarker,offset:currentPos};}var newMarker=peekUint16(newPos);while(!(newMarker>=0xFFC0&&newMarker<=0xFFFE)){if(++newPos>=maxPos){return null;}newMarker=peekUint16(newPos);}return{invalid:currentMarker.toString(16),marker:newMarker,offset:newPos};}JpegImage.prototype={parse:function parse(data){var _ref2=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},_ref2$dnlScanLines=_ref2.dnlScanLines,dnlScanLines=_ref2$dnlScanLines===undefined?null:_ref2$dnlScanLines;function readUint16(){var value=data[offset]<<8|data[offset+1];offset+=2;return value;}function readDataBlock(){var length=readUint16();var endOffset=offset+length-2;var fileMarker=findNextFileMarker(data,endOffset,offset);if(fileMarker&&fileMarker.invalid){(0,_util.warn)('readDataBlock - incorrect length, current marker is: '+fileMarker.invalid);endOffset=fileMarker.offset;}var array=data.subarray(offset,endOffset);offset+=array.length;return array;}function prepareComponents(frame){var mcusPerLine=Math.ceil(frame.samplesPerLine/8/frame.maxH);var mcusPerColumn=Math.ceil(frame.scanLines/8/frame.maxV);for(var i=0;i<frame.components.length;i++){component=frame.components[i];var blocksPerLine=Math.ceil(Math.ceil(frame.samplesPerLine/8)*component.h/frame.maxH);var blocksPerColumn=Math.ceil(Math.ceil(frame.scanLines/8)*component.v/frame.maxV);var blocksPerLineForMcu=mcusPerLine*component.h;var blocksPerColumnForMcu=mcusPerColumn*component.v;var blocksBufferSize=64*blocksPerColumnForMcu*(blocksPerLineForMcu+1);component.blockData=new Int16Array(blocksBufferSize);component.blocksPerLine=blocksPerLine;component.blocksPerColumn=blocksPerColumn;}frame.mcusPerLine=mcusPerLine;frame.mcusPerColumn=mcusPerColumn;}var offset=0;var jfif=null;var adobe=null;var frame,resetInterval;var numSOSMarkers=0;var quantizationTables=[];var huffmanTablesAC=[],huffmanTablesDC=[];var fileMarker=readUint16();if(fileMarker!==0xFFD8){throw new JpegError('SOI not found');}fileMarker=readUint16();markerLoop:while(fileMarker!==0xFFD9){var i,j,l;switch(fileMarker){case 0xFFE0:case 0xFFE1:case 0xFFE2:case 0xFFE3:case 0xFFE4:case 0xFFE5:case 0xFFE6:case 0xFFE7:case 0xFFE8:case 0xFFE9:case 0xFFEA:case 0xFFEB:case 0xFFEC:case 0xFFED:case 0xFFEE:case 0xFFEF:case 0xFFFE:var appData=readDataBlock();if(fileMarker===0xFFE0){if(appData[0]===0x4A&&appData[1]===0x46&&appData[2]===0x49&&appData[3]===0x46&&appData[4]===0){jfif={version:{major:appData[5],minor:appData[6]},densityUnits:appData[7],xDensity:appData[8]<<8|appData[9],yDensity:appData[10]<<8|appData[11],thumbWidth:appData[12],thumbHeight:appData[13],thumbData:appData.subarray(14,14+3*appData[12]*appData[13])};}}if(fileMarker===0xFFEE){if(appData[0]===0x41&&appData[1]===0x64&&appData[2]===0x6F&&appData[3]===0x62&&appData[4]===0x65){adobe={version:appData[5]<<8|appData[6],flags0:appData[7]<<8|appData[8],flags1:appData[9]<<8|appData[10],transformCode:appData[11]};}}break;case 0xFFDB:var quantizationTablesLength=readUint16();var quantizationTablesEnd=quantizationTablesLength+offset-2;var z;while(offset<quantizationTablesEnd){var quantizationTableSpec=data[offset++];var tableData=new Uint16Array(64);if(quantizationTableSpec>>4===0){for(j=0;j<64;j++){z=dctZigZag[j];tableData[z]=data[offset++];}}else if(quantizationTableSpec>>4===1){for(j=0;j<64;j++){z=dctZigZag[j];tableData[z]=readUint16();}}else{throw new JpegError('DQT - invalid table spec');}quantizationTables[quantizationTableSpec&15]=tableData;}break;case 0xFFC0:case 0xFFC1:case 0xFFC2:if(frame){throw new JpegError('Only single frame JPEGs supported');}readUint16();frame={};frame.extended=fileMarker===0xFFC1;frame.progressive=fileMarker===0xFFC2;frame.precision=data[offset++];var sofScanLines=readUint16();frame.scanLines=dnlScanLines||sofScanLines;frame.samplesPerLine=readUint16();frame.components=[];frame.componentIds={};var componentsCount=data[offset++],componentId;var maxH=0,maxV=0;for(i=0;i<componentsCount;i++){componentId=data[offset];var h=data[offset+1]>>4;var v=data[offset+1]&15;if(maxH<h){maxH=h;}if(maxV<v){maxV=v;}var qId=data[offset+2];l=frame.components.push({h:h,v:v,quantizationId:qId,quantizationTable:null});frame.componentIds[componentId]=l-1;offset+=3;}frame.maxH=maxH;frame.maxV=maxV;prepareComponents(frame);break;case 0xFFC4:var huffmanLength=readUint16();for(i=2;i<huffmanLength;){var huffmanTableSpec=data[offset++];var codeLengths=new Uint8Array(16);var codeLengthSum=0;for(j=0;j<16;j++,offset++){codeLengthSum+=codeLengths[j]=data[offset];}var huffmanValues=new Uint8Array(codeLengthSum);for(j=0;j<codeLengthSum;j++,offset++){huffmanValues[j]=data[offset];}i+=17+codeLengthSum;(huffmanTableSpec>>4===0?huffmanTablesDC:huffmanTablesAC)[huffmanTableSpec&15]=buildHuffmanTable(codeLengths,huffmanValues);}break;case 0xFFDD:readUint16();resetInterval=readUint16();break;case 0xFFDA:var parseDNLMarker=++numSOSMarkers===1&&!dnlScanLines;readUint16();var selectorsCount=data[offset++];var components=[],component;for(i=0;i<selectorsCount;i++){var componentIndex=frame.componentIds[data[offset++]];component=frame.components[componentIndex];var tableSpec=data[offset++];component.huffmanTableDC=huffmanTablesDC[tableSpec>>4];component.huffmanTableAC=huffmanTablesAC[tableSpec&15];components.push(component);}var spectralStart=data[offset++];var spectralEnd=data[offset++];var successiveApproximation=data[offset++];try{var processed=decodeScan(data,offset,frame,components,resetInterval,spectralStart,spectralEnd,successiveApproximation>>4,successiveApproximation&15,parseDNLMarker);offset+=processed;}catch(ex){if(ex instanceof DNLMarkerError){(0,_util.warn)(ex.message+' -- attempting to re-parse the JPEG image.');return this.parse(data,{dnlScanLines:ex.scanLines});}else if(ex instanceof EOIMarkerError){(0,_util.warn)(ex.message+' -- ignoring the rest of the image data.');break markerLoop;}throw ex;}break;case 0xFFDC:offset+=4;break;case 0xFFFF:if(data[offset]!==0xFF){offset--;}break;default:if(data[offset-3]===0xFF&&data[offset-2]>=0xC0&&data[offset-2]<=0xFE){offset-=3;break;}var nextFileMarker=findNextFileMarker(data,offset-2);if(nextFileMarker&&nextFileMarker.invalid){(0,_util.warn)('JpegImage.parse - unexpected data, current marker is: '+nextFileMarker.invalid);offset=nextFileMarker.offset;break;}throw new JpegError('unknown marker '+fileMarker.toString(16));}fileMarker=readUint16();}this.width=frame.samplesPerLine;this.height=frame.scanLines;this.jfif=jfif;this.adobe=adobe;this.components=[];for(i=0;i<frame.components.length;i++){component=frame.components[i];var quantizationTable=quantizationTables[component.quantizationId];if(quantizationTable){component.quantizationTable=quantizationTable;}this.components.push({output:buildComponentData(frame,component),scaleX:component.h/frame.maxH,scaleY:component.v/frame.maxV,blocksPerLine:component.blocksPerLine,blocksPerColumn:component.blocksPerColumn});}this.numComponents=this.components.length;},_getLinearizedBlockData:function _getLinearizedBlockData(width,height){var isSourcePDF=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var scaleX=this.width/width,scaleY=this.height/height;var component,componentScaleX,componentScaleY,blocksPerScanline;var x,y,i,j,k;var index;var offset=0;var output;var numComponents=this.components.length;var dataLength=width*height*numComponents;var data=new Uint8ClampedArray(dataLength);var xScaleBlockOffset=new Uint32Array(width);var mask3LSB=0xfffffff8;for(i=0;i<numComponents;i++){component=this.components[i];componentScaleX=component.scaleX*scaleX;componentScaleY=component.scaleY*scaleY;offset=i;output=component.output;blocksPerScanline=component.blocksPerLine+1<<3;for(x=0;x<width;x++){j=0|x*componentScaleX;xScaleBlockOffset[x]=(j&mask3LSB)<<3|j&7;}for(y=0;y<height;y++){j=0|y*componentScaleY;index=blocksPerScanline*(j&mask3LSB)|(j&7)<<3;for(x=0;x<width;x++){data[offset]=output[index+xScaleBlockOffset[x]];offset+=numComponents;}}}var transform=this._decodeTransform;if(!isSourcePDF&&numComponents===4&&!transform){transform=new Int32Array([-256,255,-256,255,-256,255,-256,255]);}if(transform){for(i=0;i<dataLength;){for(j=0,k=0;j<numComponents;j++,i++,k+=2){data[i]=(data[i]*transform[k]>>8)+transform[k+1];}}}return data;},get _isColorConversionNeeded(){if(this.adobe){return!!this.adobe.transformCode;}if(this.numComponents===3){if(this._colorTransform===0){return false;}return true;}if(this._colorTransform===1){return true;}return false;},_convertYccToRgb:function convertYccToRgb(data){var Y,Cb,Cr;for(var i=0,length=data.length;i<length;i+=3){Y=data[i];Cb=data[i+1];Cr=data[i+2];data[i]=Y-179.456+1.402*Cr;data[i+1]=Y+135.459-0.344*Cb-0.714*Cr;data[i+2]=Y-226.816+1.772*Cb;}return data;},_convertYcckToRgb:function convertYcckToRgb(data){var Y,Cb,Cr,k;var offset=0;for(var i=0,length=data.length;i<length;i+=4){Y=data[i];Cb=data[i+1];Cr=data[i+2];k=data[i+3];data[offset++]=-122.67195406894+Cb*(-6.60635669420364e-5*Cb+0.000437130475926232*Cr-5.4080610064599e-5*Y+0.00048449797120281*k-0.154362151871126)+Cr*(-0.000957964378445773*Cr+0.000817076911346625*Y-0.00477271405408747*k+1.53380253221734)+Y*(0.000961250184130688*Y-0.00266257332283933*k+0.48357088451265)+k*(-0.000336197177618394*k+0.484791561490776);data[offset++]=107.268039397724+Cb*(2.19927104525741e-5*Cb-0.000640992018297945*Cr+0.000659397001245577*Y+0.000426105652938837*k-0.176491792462875)+Cr*(-0.000778269941513683*Cr+0.00130872261408275*Y+0.000770482631801132*k-0.151051492775562)+Y*(0.00126935368114843*Y-0.00265090189010898*k+0.25802910206845)+k*(-0.000318913117588328*k-0.213742400323665);data[offset++]=-20.810012546947+Cb*(-0.000570115196973677*Cb-2.63409051004589e-5*Cr+0.0020741088115012*Y-0.00288260236853442*k+0.814272968359295)+Cr*(-1.53496057440975e-5*Cr-0.000132689043961446*Y+0.000560833691242812*k-0.195152027534049)+Y*(0.00174418132927582*Y-0.00255243321439347*k+0.116935020465145)+k*(-0.000343531996510555*k+0.24165260232407);}return data.subarray(0,offset);},_convertYcckToCmyk:function convertYcckToCmyk(data){var Y,Cb,Cr;for(var i=0,length=data.length;i<length;i+=4){Y=data[i];Cb=data[i+1];Cr=data[i+2];data[i]=434.456-Y-1.402*Cr;data[i+1]=119.541-Y+0.344*Cb+0.714*Cr;data[i+2]=481.816-Y-1.772*Cb;}return data;},_convertCmykToRgb:function convertCmykToRgb(data){var c,m,y,k;var offset=0;var scale=1/255;for(var i=0,length=data.length;i<length;i+=4){c=data[i]*scale;m=data[i+1]*scale;y=data[i+2]*scale;k=data[i+3]*scale;data[offset++]=255+c*(-4.387332384609988*c+54.48615194189176*m+18.82290502165302*y+212.25662451639585*k-285.2331026137004)+m*(1.7149763477362134*m-5.6096736904047315*y-17.873870861415444*k-5.497006427196366)+y*(-2.5217340131683033*y-21.248923337353073*k+17.5119270841813)-k*(21.86122147463605*k+189.48180835922747);data[offset++]=255+c*(8.841041422036149*c+60.118027045597366*m+6.871425592049007*y+31.159100130055922*k-79.2970844816548)+m*(-15.310361306967817*m+17.575251261109482*y+131.35250912493976*k-190.9453302588951)+y*(4.444339102852739*y+9.8632861493405*k-24.86741582555878)-k*(20.737325471181034*k+187.80453709719578);data[offset++]=255+c*(0.8842522430003296*c+8.078677503112928*m+30.89978309703729*y-0.23883238689178934*k-14.183576799673286)+m*(10.49593273432072*m+63.02378494754052*y+50.606957656360734*k-112.23884253719248)+y*(0.03296041114873217*y+115.60384449646641*k-193.58209356861505)-k*(22.33816807309886*k+180.12613974708367);}return data.subarray(0,offset);},getData:function getData(_ref3){var width=_ref3.width,height=_ref3.height,_ref3$forceRGB=_ref3.forceRGB,forceRGB=_ref3$forceRGB===undefined?false:_ref3$forceRGB,_ref3$isSourcePDF=_ref3.isSourcePDF,isSourcePDF=_ref3$isSourcePDF===undefined?false:_ref3$isSourcePDF;if(this.numComponents>4){throw new JpegError('Unsupported color mode');}var data=this._getLinearizedBlockData(width,height,isSourcePDF);if(this.numComponents===1&&forceRGB){var dataLength=data.length;var rgbData=new Uint8ClampedArray(dataLength*3);var offset=0;for(var i=0;i<dataLength;i++){var grayColor=data[i];rgbData[offset++]=grayColor;rgbData[offset++]=grayColor;rgbData[offset++]=grayColor;}return rgbData;}else if(this.numComponents===3&&this._isColorConversionNeeded){return this._convertYccToRgb(data);}else if(this.numComponents===4){if(this._isColorConversionNeeded){if(forceRGB){return this._convertYcckToRgb(data);}return this._convertYcckToCmyk(data);}else if(forceRGB){return this._convertCmykToRgb(data);}}return data;}};return JpegImage;}();exports.JpegImage=JpegImage;/***/},/* 148 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.JpxStream=undefined;var _stream=__w_pdfjs_require__(140);var _jpx=__w_pdfjs_require__(149);var _util=__w_pdfjs_require__(2);var JpxStream=function JpxStreamClosure(){function JpxStream(stream,maybeLength,dict,params){this.stream=stream;this.maybeLength=maybeLength;this.dict=dict;this.params=params;_stream.DecodeStream.call(this,maybeLength);}JpxStream.prototype=Object.create(_stream.DecodeStream.prototype);Object.defineProperty(JpxStream.prototype,'bytes',{get:function JpxStream_bytes(){return(0,_util.shadow)(this,'bytes',this.stream.getBytes(this.maybeLength));},configurable:true});JpxStream.prototype.ensureBuffer=function(requested){};JpxStream.prototype.readBlock=function(){if(this.eof){return;}var jpxImage=new _jpx.JpxImage();jpxImage.parse(this.bytes);var width=jpxImage.width;var height=jpxImage.height;var componentsCount=jpxImage.componentsCount;var tileCount=jpxImage.tiles.length;if(tileCount===1){this.buffer=jpxImage.tiles[0].items;}else{var data=new Uint8ClampedArray(width*height*componentsCount);for(var k=0;k<tileCount;k++){var tileComponents=jpxImage.tiles[k];var tileWidth=tileComponents.width;var tileHeight=tileComponents.height;var tileLeft=tileComponents.left;var tileTop=tileComponents.top;var src=tileComponents.items;var srcPosition=0;var dataPosition=(width*tileTop+tileLeft)*componentsCount;var imgRowSize=width*componentsCount;var tileRowSize=tileWidth*componentsCount;for(var j=0;j<tileHeight;j++){var rowBytes=src.subarray(srcPosition,srcPosition+tileRowSize);data.set(rowBytes,dataPosition);srcPosition+=tileRowSize;dataPosition+=imgRowSize;}}this.buffer=data;}this.bufferLength=this.buffer.length;this.eof=true;};return JpxStream;}();exports.JpxStream=JpxStream;/***/},/* 149 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.JpxImage=undefined;var _util=__w_pdfjs_require__(2);var _arithmetic_decoder=__w_pdfjs_require__(145);var JpxError=function JpxErrorClosure(){function JpxError(msg){this.message='JPX error: '+msg;}JpxError.prototype=new Error();JpxError.prototype.name='JpxError';JpxError.constructor=JpxError;return JpxError;}();var JpxImage=function JpxImageClosure(){var SubbandsGainLog2={'LL':0,'LH':1,'HL':1,'HH':2};function JpxImage(){this.failOnCorruptedImage=false;}JpxImage.prototype={parse:function JpxImage_parse(data){var head=(0,_util.readUint16)(data,0);if(head===0xFF4F){this.parseCodestream(data,0,data.length);return;}var position=0,length=data.length;while(position<length){var headerSize=8;var lbox=(0,_util.readUint32)(data,position);var tbox=(0,_util.readUint32)(data,position+4);position+=headerSize;if(lbox===1){lbox=(0,_util.readUint32)(data,position)*4294967296+(0,_util.readUint32)(data,position+4);position+=8;headerSize+=8;}if(lbox===0){lbox=length-position+headerSize;}if(lbox<headerSize){throw new JpxError('Invalid box field size');}var dataLength=lbox-headerSize;var jumpDataLength=true;switch(tbox){case 0x6A703268:jumpDataLength=false;break;case 0x636F6C72:var method=data[position];if(method===1){var colorspace=(0,_util.readUint32)(data,position+3);switch(colorspace){case 16:case 17:case 18:break;default:(0,_util.warn)('Unknown colorspace '+colorspace);break;}}else if(method===2){(0,_util.info)('ICC profile not supported');}break;case 0x6A703263:this.parseCodestream(data,position,position+dataLength);break;case 0x6A502020:if((0,_util.readUint32)(data,position)!==0x0d0a870a){(0,_util.warn)('Invalid JP2 signature');}break;case 0x6A501A1A:case 0x66747970:case 0x72726571:case 0x72657320:case 0x69686472:break;default:var headerType=String.fromCharCode(tbox>>24&0xFF,tbox>>16&0xFF,tbox>>8&0xFF,tbox&0xFF);(0,_util.warn)('Unsupported header type '+tbox+' ('+headerType+')');break;}if(jumpDataLength){position+=dataLength;}}},parseImageProperties:function JpxImage_parseImageProperties(stream){var newByte=stream.getByte();while(newByte>=0){var oldByte=newByte;newByte=stream.getByte();var code=oldByte<<8|newByte;if(code===0xFF51){stream.skip(4);var Xsiz=stream.getInt32()>>>0;var Ysiz=stream.getInt32()>>>0;var XOsiz=stream.getInt32()>>>0;var YOsiz=stream.getInt32()>>>0;stream.skip(16);var Csiz=stream.getUint16();this.width=Xsiz-XOsiz;this.height=Ysiz-YOsiz;this.componentsCount=Csiz;this.bitsPerComponent=8;return;}}throw new JpxError('No size marker found in JPX stream');},parseCodestream:function JpxImage_parseCodestream(data,start,end){var context={};var doNotRecover=false;try{var position=start;while(position+1<end){var code=(0,_util.readUint16)(data,position);position+=2;var length=0,j,sqcd,spqcds,spqcdSize,scalarExpounded,tile;switch(code){case 0xFF4F:context.mainHeader=true;break;case 0xFFD9:break;case 0xFF51:length=(0,_util.readUint16)(data,position);var siz={};siz.Xsiz=(0,_util.readUint32)(data,position+4);siz.Ysiz=(0,_util.readUint32)(data,position+8);siz.XOsiz=(0,_util.readUint32)(data,position+12);siz.YOsiz=(0,_util.readUint32)(data,position+16);siz.XTsiz=(0,_util.readUint32)(data,position+20);siz.YTsiz=(0,_util.readUint32)(data,position+24);siz.XTOsiz=(0,_util.readUint32)(data,position+28);siz.YTOsiz=(0,_util.readUint32)(data,position+32);var componentsCount=(0,_util.readUint16)(data,position+36);siz.Csiz=componentsCount;var components=[];j=position+38;for(var i=0;i<componentsCount;i++){var component={precision:(data[j]&0x7F)+1,isSigned:!!(data[j]&0x80),XRsiz:data[j+1],YRsiz:data[j+2]};j+=3;calculateComponentDimensions(component,siz);components.push(component);}context.SIZ=siz;context.components=components;calculateTileGrids(context,components);context.QCC=[];context.COC=[];break;case 0xFF5C:length=(0,_util.readUint16)(data,position);var qcd={};j=position+2;sqcd=data[j++];switch(sqcd&0x1F){case 0:spqcdSize=8;scalarExpounded=true;break;case 1:spqcdSize=16;scalarExpounded=false;break;case 2:spqcdSize=16;scalarExpounded=true;break;default:throw new Error('Invalid SQcd value '+sqcd);}qcd.noQuantization=spqcdSize===8;qcd.scalarExpounded=scalarExpounded;qcd.guardBits=sqcd>>5;spqcds=[];while(j<length+position){var spqcd={};if(spqcdSize===8){spqcd.epsilon=data[j++]>>3;spqcd.mu=0;}else{spqcd.epsilon=data[j]>>3;spqcd.mu=(data[j]&0x7)<<8|data[j+1];j+=2;}spqcds.push(spqcd);}qcd.SPqcds=spqcds;if(context.mainHeader){context.QCD=qcd;}else{context.currentTile.QCD=qcd;context.currentTile.QCC=[];}break;case 0xFF5D:length=(0,_util.readUint16)(data,position);var qcc={};j=position+2;var cqcc;if(context.SIZ.Csiz<257){cqcc=data[j++];}else{cqcc=(0,_util.readUint16)(data,j);j+=2;}sqcd=data[j++];switch(sqcd&0x1F){case 0:spqcdSize=8;scalarExpounded=true;break;case 1:spqcdSize=16;scalarExpounded=false;break;case 2:spqcdSize=16;scalarExpounded=true;break;default:throw new Error('Invalid SQcd value '+sqcd);}qcc.noQuantization=spqcdSize===8;qcc.scalarExpounded=scalarExpounded;qcc.guardBits=sqcd>>5;spqcds=[];while(j<length+position){spqcd={};if(spqcdSize===8){spqcd.epsilon=data[j++]>>3;spqcd.mu=0;}else{spqcd.epsilon=data[j]>>3;spqcd.mu=(data[j]&0x7)<<8|data[j+1];j+=2;}spqcds.push(spqcd);}qcc.SPqcds=spqcds;if(context.mainHeader){context.QCC[cqcc]=qcc;}else{context.currentTile.QCC[cqcc]=qcc;}break;case 0xFF52:length=(0,_util.readUint16)(data,position);var cod={};j=position+2;var scod=data[j++];cod.entropyCoderWithCustomPrecincts=!!(scod&1);cod.sopMarkerUsed=!!(scod&2);cod.ephMarkerUsed=!!(scod&4);cod.progressionOrder=data[j++];cod.layersCount=(0,_util.readUint16)(data,j);j+=2;cod.multipleComponentTransform=data[j++];cod.decompositionLevelsCount=data[j++];cod.xcb=(data[j++]&0xF)+2;cod.ycb=(data[j++]&0xF)+2;var blockStyle=data[j++];cod.selectiveArithmeticCodingBypass=!!(blockStyle&1);cod.resetContextProbabilities=!!(blockStyle&2);cod.terminationOnEachCodingPass=!!(blockStyle&4);cod.verticallyStripe=!!(blockStyle&8);cod.predictableTermination=!!(blockStyle&16);cod.segmentationSymbolUsed=!!(blockStyle&32);cod.reversibleTransformation=data[j++];if(cod.entropyCoderWithCustomPrecincts){var precinctsSizes=[];while(j<length+position){var precinctsSize=data[j++];precinctsSizes.push({PPx:precinctsSize&0xF,PPy:precinctsSize>>4});}cod.precinctsSizes=precinctsSizes;}var unsupported=[];if(cod.selectiveArithmeticCodingBypass){unsupported.push('selectiveArithmeticCodingBypass');}if(cod.resetContextProbabilities){unsupported.push('resetContextProbabilities');}if(cod.terminationOnEachCodingPass){unsupported.push('terminationOnEachCodingPass');}if(cod.verticallyStripe){unsupported.push('verticallyStripe');}if(cod.predictableTermination){unsupported.push('predictableTermination');}if(unsupported.length>0){doNotRecover=true;throw new Error('Unsupported COD options ('+unsupported.join(', ')+')');}if(context.mainHeader){context.COD=cod;}else{context.currentTile.COD=cod;context.currentTile.COC=[];}break;case 0xFF90:length=(0,_util.readUint16)(data,position);tile={};tile.index=(0,_util.readUint16)(data,position+2);tile.length=(0,_util.readUint32)(data,position+4);tile.dataEnd=tile.length+position-2;tile.partIndex=data[position+8];tile.partsCount=data[position+9];context.mainHeader=false;if(tile.partIndex===0){tile.COD=context.COD;tile.COC=context.COC.slice(0);tile.QCD=context.QCD;tile.QCC=context.QCC.slice(0);}context.currentTile=tile;break;case 0xFF93:tile=context.currentTile;if(tile.partIndex===0){initializeTile(context,tile.index);buildPackets(context);}length=tile.dataEnd-position;parseTilePackets(context,data,position,length);break;case 0xFF55:case 0xFF57:case 0xFF58:case 0xFF64:length=(0,_util.readUint16)(data,position);break;case 0xFF53:throw new Error('Codestream code 0xFF53 (COC) is '+'not implemented');default:throw new Error('Unknown codestream code: '+code.toString(16));}position+=length;}}catch(e){if(doNotRecover||this.failOnCorruptedImage){throw new JpxError(e.message);}else{(0,_util.warn)('JPX: Trying to recover from: '+e.message);}}this.tiles=transformComponents(context);this.width=context.SIZ.Xsiz-context.SIZ.XOsiz;this.height=context.SIZ.Ysiz-context.SIZ.YOsiz;this.componentsCount=context.SIZ.Csiz;}};function calculateComponentDimensions(component,siz){component.x0=Math.ceil(siz.XOsiz/component.XRsiz);component.x1=Math.ceil(siz.Xsiz/component.XRsiz);component.y0=Math.ceil(siz.YOsiz/component.YRsiz);component.y1=Math.ceil(siz.Ysiz/component.YRsiz);component.width=component.x1-component.x0;component.height=component.y1-component.y0;}function calculateTileGrids(context,components){var siz=context.SIZ;var tile,tiles=[];var numXtiles=Math.ceil((siz.Xsiz-siz.XTOsiz)/siz.XTsiz);var numYtiles=Math.ceil((siz.Ysiz-siz.YTOsiz)/siz.YTsiz);for(var q=0;q<numYtiles;q++){for(var p=0;p<numXtiles;p++){tile={};tile.tx0=Math.max(siz.XTOsiz+p*siz.XTsiz,siz.XOsiz);tile.ty0=Math.max(siz.YTOsiz+q*siz.YTsiz,siz.YOsiz);tile.tx1=Math.min(siz.XTOsiz+(p+1)*siz.XTsiz,siz.Xsiz);tile.ty1=Math.min(siz.YTOsiz+(q+1)*siz.YTsiz,siz.Ysiz);tile.width=tile.tx1-tile.tx0;tile.height=tile.ty1-tile.ty0;tile.components=[];tiles.push(tile);}}context.tiles=tiles;var componentsCount=siz.Csiz;for(var i=0,ii=componentsCount;i<ii;i++){var component=components[i];for(var j=0,jj=tiles.length;j<jj;j++){var tileComponent={};tile=tiles[j];tileComponent.tcx0=Math.ceil(tile.tx0/component.XRsiz);tileComponent.tcy0=Math.ceil(tile.ty0/component.YRsiz);tileComponent.tcx1=Math.ceil(tile.tx1/component.XRsiz);tileComponent.tcy1=Math.ceil(tile.ty1/component.YRsiz);tileComponent.width=tileComponent.tcx1-tileComponent.tcx0;tileComponent.height=tileComponent.tcy1-tileComponent.tcy0;tile.components[i]=tileComponent;}}}function getBlocksDimensions(context,component,r){var codOrCoc=component.codingStyleParameters;var result={};if(!codOrCoc.entropyCoderWithCustomPrecincts){result.PPx=15;result.PPy=15;}else{result.PPx=codOrCoc.precinctsSizes[r].PPx;result.PPy=codOrCoc.precinctsSizes[r].PPy;}result.xcb_=r>0?Math.min(codOrCoc.xcb,result.PPx-1):Math.min(codOrCoc.xcb,result.PPx);result.ycb_=r>0?Math.min(codOrCoc.ycb,result.PPy-1):Math.min(codOrCoc.ycb,result.PPy);return result;}function buildPrecincts(context,resolution,dimensions){var precinctWidth=1<<dimensions.PPx;var precinctHeight=1<<dimensions.PPy;var isZeroRes=resolution.resLevel===0;var precinctWidthInSubband=1<<dimensions.PPx+(isZeroRes?0:-1);var precinctHeightInSubband=1<<dimensions.PPy+(isZeroRes?0:-1);var numprecinctswide=resolution.trx1>resolution.trx0?Math.ceil(resolution.trx1/precinctWidth)-Math.floor(resolution.trx0/precinctWidth):0;var numprecinctshigh=resolution.try1>resolution.try0?Math.ceil(resolution.try1/precinctHeight)-Math.floor(resolution.try0/precinctHeight):0;var numprecincts=numprecinctswide*numprecinctshigh;resolution.precinctParameters={precinctWidth:precinctWidth,precinctHeight:precinctHeight,numprecinctswide:numprecinctswide,numprecinctshigh:numprecinctshigh,numprecincts:numprecincts,precinctWidthInSubband:precinctWidthInSubband,precinctHeightInSubband:precinctHeightInSubband};}function buildCodeblocks(context,subband,dimensions){var xcb_=dimensions.xcb_;var ycb_=dimensions.ycb_;var codeblockWidth=1<<xcb_;var codeblockHeight=1<<ycb_;var cbx0=subband.tbx0>>xcb_;var cby0=subband.tby0>>ycb_;var cbx1=subband.tbx1+codeblockWidth-1>>xcb_;var cby1=subband.tby1+codeblockHeight-1>>ycb_;var precinctParameters=subband.resolution.precinctParameters;var codeblocks=[];var precincts=[];var i,j,codeblock,precinctNumber;for(j=cby0;j<cby1;j++){for(i=cbx0;i<cbx1;i++){codeblock={cbx:i,cby:j,tbx0:codeblockWidth*i,tby0:codeblockHeight*j,tbx1:codeblockWidth*(i+1),tby1:codeblockHeight*(j+1)};codeblock.tbx0_=Math.max(subband.tbx0,codeblock.tbx0);codeblock.tby0_=Math.max(subband.tby0,codeblock.tby0);codeblock.tbx1_=Math.min(subband.tbx1,codeblock.tbx1);codeblock.tby1_=Math.min(subband.tby1,codeblock.tby1);var pi=Math.floor((codeblock.tbx0_-subband.tbx0)/precinctParameters.precinctWidthInSubband);var pj=Math.floor((codeblock.tby0_-subband.tby0)/precinctParameters.precinctHeightInSubband);precinctNumber=pi+pj*precinctParameters.numprecinctswide;codeblock.precinctNumber=precinctNumber;codeblock.subbandType=subband.type;codeblock.Lblock=3;if(codeblock.tbx1_<=codeblock.tbx0_||codeblock.tby1_<=codeblock.tby0_){continue;}codeblocks.push(codeblock);var precinct=precincts[precinctNumber];if(precinct!==undefined){if(i<precinct.cbxMin){precinct.cbxMin=i;}else if(i>precinct.cbxMax){precinct.cbxMax=i;}if(j<precinct.cbyMin){precinct.cbxMin=j;}else if(j>precinct.cbyMax){precinct.cbyMax=j;}}else{precincts[precinctNumber]=precinct={cbxMin:i,cbyMin:j,cbxMax:i,cbyMax:j};}codeblock.precinct=precinct;}}subband.codeblockParameters={codeblockWidth:xcb_,codeblockHeight:ycb_,numcodeblockwide:cbx1-cbx0+1,numcodeblockhigh:cby1-cby0+1};subband.codeblocks=codeblocks;subband.precincts=precincts;}function createPacket(resolution,precinctNumber,layerNumber){var precinctCodeblocks=[];var subbands=resolution.subbands;for(var i=0,ii=subbands.length;i<ii;i++){var subband=subbands[i];var codeblocks=subband.codeblocks;for(var j=0,jj=codeblocks.length;j<jj;j++){var codeblock=codeblocks[j];if(codeblock.precinctNumber!==precinctNumber){continue;}precinctCodeblocks.push(codeblock);}}return{layerNumber:layerNumber,codeblocks:precinctCodeblocks};}function LayerResolutionComponentPositionIterator(context){var siz=context.SIZ;var tileIndex=context.currentTile.index;var tile=context.tiles[tileIndex];var layersCount=tile.codingStyleDefaultParameters.layersCount;var componentsCount=siz.Csiz;var maxDecompositionLevelsCount=0;for(var q=0;q<componentsCount;q++){maxDecompositionLevelsCount=Math.max(maxDecompositionLevelsCount,tile.components[q].codingStyleParameters.decompositionLevelsCount);}var l=0,r=0,i=0,k=0;this.nextPacket=function JpxImage_nextPacket(){for(;l<layersCount;l++){for(;r<=maxDecompositionLevelsCount;r++){for(;i<componentsCount;i++){var component=tile.components[i];if(r>component.codingStyleParameters.decompositionLevelsCount){continue;}var resolution=component.resolutions[r];var numprecincts=resolution.precinctParameters.numprecincts;for(;k<numprecincts;){var packet=createPacket(resolution,k,l);k++;return packet;}k=0;}i=0;}r=0;}throw new JpxError('Out of packets');};}function ResolutionLayerComponentPositionIterator(context){var siz=context.SIZ;var tileIndex=context.currentTile.index;var tile=context.tiles[tileIndex];var layersCount=tile.codingStyleDefaultParameters.layersCount;var componentsCount=siz.Csiz;var maxDecompositionLevelsCount=0;for(var q=0;q<componentsCount;q++){maxDecompositionLevelsCount=Math.max(maxDecompositionLevelsCount,tile.components[q].codingStyleParameters.decompositionLevelsCount);}var r=0,l=0,i=0,k=0;this.nextPacket=function JpxImage_nextPacket(){for(;r<=maxDecompositionLevelsCount;r++){for(;l<layersCount;l++){for(;i<componentsCount;i++){var component=tile.components[i];if(r>component.codingStyleParameters.decompositionLevelsCount){continue;}var resolution=component.resolutions[r];var numprecincts=resolution.precinctParameters.numprecincts;for(;k<numprecincts;){var packet=createPacket(resolution,k,l);k++;return packet;}k=0;}i=0;}l=0;}throw new JpxError('Out of packets');};}function ResolutionPositionComponentLayerIterator(context){var siz=context.SIZ;var tileIndex=context.currentTile.index;var tile=context.tiles[tileIndex];var layersCount=tile.codingStyleDefaultParameters.layersCount;var componentsCount=siz.Csiz;var l,r,c,p;var maxDecompositionLevelsCount=0;for(c=0;c<componentsCount;c++){var component=tile.components[c];maxDecompositionLevelsCount=Math.max(maxDecompositionLevelsCount,component.codingStyleParameters.decompositionLevelsCount);}var maxNumPrecinctsInLevel=new Int32Array(maxDecompositionLevelsCount+1);for(r=0;r<=maxDecompositionLevelsCount;++r){var maxNumPrecincts=0;for(c=0;c<componentsCount;++c){var resolutions=tile.components[c].resolutions;if(r<resolutions.length){maxNumPrecincts=Math.max(maxNumPrecincts,resolutions[r].precinctParameters.numprecincts);}}maxNumPrecinctsInLevel[r]=maxNumPrecincts;}l=0;r=0;c=0;p=0;this.nextPacket=function JpxImage_nextPacket(){for(;r<=maxDecompositionLevelsCount;r++){for(;p<maxNumPrecinctsInLevel[r];p++){for(;c<componentsCount;c++){var component=tile.components[c];if(r>component.codingStyleParameters.decompositionLevelsCount){continue;}var resolution=component.resolutions[r];var numprecincts=resolution.precinctParameters.numprecincts;if(p>=numprecincts){continue;}for(;l<layersCount;){var packet=createPacket(resolution,p,l);l++;return packet;}l=0;}c=0;}p=0;}throw new JpxError('Out of packets');};}function PositionComponentResolutionLayerIterator(context){var siz=context.SIZ;var tileIndex=context.currentTile.index;var tile=context.tiles[tileIndex];var layersCount=tile.codingStyleDefaultParameters.layersCount;var componentsCount=siz.Csiz;var precinctsSizes=getPrecinctSizesInImageScale(tile);var precinctsIterationSizes=precinctsSizes;var l=0,r=0,c=0,px=0,py=0;this.nextPacket=function JpxImage_nextPacket(){for(;py<precinctsIterationSizes.maxNumHigh;py++){for(;px<precinctsIterationSizes.maxNumWide;px++){for(;c<componentsCount;c++){var component=tile.components[c];var decompositionLevelsCount=component.codingStyleParameters.decompositionLevelsCount;for(;r<=decompositionLevelsCount;r++){var resolution=component.resolutions[r];var sizeInImageScale=precinctsSizes.components[c].resolutions[r];var k=getPrecinctIndexIfExist(px,py,sizeInImageScale,precinctsIterationSizes,resolution);if(k===null){continue;}for(;l<layersCount;){var packet=createPacket(resolution,k,l);l++;return packet;}l=0;}r=0;}c=0;}px=0;}throw new JpxError('Out of packets');};}function ComponentPositionResolutionLayerIterator(context){var siz=context.SIZ;var tileIndex=context.currentTile.index;var tile=context.tiles[tileIndex];var layersCount=tile.codingStyleDefaultParameters.layersCount;var componentsCount=siz.Csiz;var precinctsSizes=getPrecinctSizesInImageScale(tile);var l=0,r=0,c=0,px=0,py=0;this.nextPacket=function JpxImage_nextPacket(){for(;c<componentsCount;++c){var component=tile.components[c];var precinctsIterationSizes=precinctsSizes.components[c];var decompositionLevelsCount=component.codingStyleParameters.decompositionLevelsCount;for(;py<precinctsIterationSizes.maxNumHigh;py++){for(;px<precinctsIterationSizes.maxNumWide;px++){for(;r<=decompositionLevelsCount;r++){var resolution=component.resolutions[r];var sizeInImageScale=precinctsIterationSizes.resolutions[r];var k=getPrecinctIndexIfExist(px,py,sizeInImageScale,precinctsIterationSizes,resolution);if(k===null){continue;}for(;l<layersCount;){var packet=createPacket(resolution,k,l);l++;return packet;}l=0;}r=0;}px=0;}py=0;}throw new JpxError('Out of packets');};}function getPrecinctIndexIfExist(pxIndex,pyIndex,sizeInImageScale,precinctIterationSizes,resolution){var posX=pxIndex*precinctIterationSizes.minWidth;var posY=pyIndex*precinctIterationSizes.minHeight;if(posX%sizeInImageScale.width!==0||posY%sizeInImageScale.height!==0){return null;}var startPrecinctRowIndex=posY/sizeInImageScale.width*resolution.precinctParameters.numprecinctswide;return posX/sizeInImageScale.height+startPrecinctRowIndex;}function getPrecinctSizesInImageScale(tile){var componentsCount=tile.components.length;var minWidth=Number.MAX_VALUE;var minHeight=Number.MAX_VALUE;var maxNumWide=0;var maxNumHigh=0;var sizePerComponent=new Array(componentsCount);for(var c=0;c<componentsCount;c++){var component=tile.components[c];var decompositionLevelsCount=component.codingStyleParameters.decompositionLevelsCount;var sizePerResolution=new Array(decompositionLevelsCount+1);var minWidthCurrentComponent=Number.MAX_VALUE;var minHeightCurrentComponent=Number.MAX_VALUE;var maxNumWideCurrentComponent=0;var maxNumHighCurrentComponent=0;var scale=1;for(var r=decompositionLevelsCount;r>=0;--r){var resolution=component.resolutions[r];var widthCurrentResolution=scale*resolution.precinctParameters.precinctWidth;var heightCurrentResolution=scale*resolution.precinctParameters.precinctHeight;minWidthCurrentComponent=Math.min(minWidthCurrentComponent,widthCurrentResolution);minHeightCurrentComponent=Math.min(minHeightCurrentComponent,heightCurrentResolution);maxNumWideCurrentComponent=Math.max(maxNumWideCurrentComponent,resolution.precinctParameters.numprecinctswide);maxNumHighCurrentComponent=Math.max(maxNumHighCurrentComponent,resolution.precinctParameters.numprecinctshigh);sizePerResolution[r]={width:widthCurrentResolution,height:heightCurrentResolution};scale<<=1;}minWidth=Math.min(minWidth,minWidthCurrentComponent);minHeight=Math.min(minHeight,minHeightCurrentComponent);maxNumWide=Math.max(maxNumWide,maxNumWideCurrentComponent);maxNumHigh=Math.max(maxNumHigh,maxNumHighCurrentComponent);sizePerComponent[c]={resolutions:sizePerResolution,minWidth:minWidthCurrentComponent,minHeight:minHeightCurrentComponent,maxNumWide:maxNumWideCurrentComponent,maxNumHigh:maxNumHighCurrentComponent};}return{components:sizePerComponent,minWidth:minWidth,minHeight:minHeight,maxNumWide:maxNumWide,maxNumHigh:maxNumHigh};}function buildPackets(context){var siz=context.SIZ;var tileIndex=context.currentTile.index;var tile=context.tiles[tileIndex];var componentsCount=siz.Csiz;for(var c=0;c<componentsCount;c++){var component=tile.components[c];var decompositionLevelsCount=component.codingStyleParameters.decompositionLevelsCount;var resolutions=[];var subbands=[];for(var r=0;r<=decompositionLevelsCount;r++){var blocksDimensions=getBlocksDimensions(context,component,r);var resolution={};var scale=1<<decompositionLevelsCount-r;resolution.trx0=Math.ceil(component.tcx0/scale);resolution.try0=Math.ceil(component.tcy0/scale);resolution.trx1=Math.ceil(component.tcx1/scale);resolution.try1=Math.ceil(component.tcy1/scale);resolution.resLevel=r;buildPrecincts(context,resolution,blocksDimensions);resolutions.push(resolution);var subband;if(r===0){subband={};subband.type='LL';subband.tbx0=Math.ceil(component.tcx0/scale);subband.tby0=Math.ceil(component.tcy0/scale);subband.tbx1=Math.ceil(component.tcx1/scale);subband.tby1=Math.ceil(component.tcy1/scale);subband.resolution=resolution;buildCodeblocks(context,subband,blocksDimensions);subbands.push(subband);resolution.subbands=[subband];}else{var bscale=1<<decompositionLevelsCount-r+1;var resolutionSubbands=[];subband={};subband.type='HL';subband.tbx0=Math.ceil(component.tcx0/bscale-0.5);subband.tby0=Math.ceil(component.tcy0/bscale);subband.tbx1=Math.ceil(component.tcx1/bscale-0.5);subband.tby1=Math.ceil(component.tcy1/bscale);subband.resolution=resolution;buildCodeblocks(context,subband,blocksDimensions);subbands.push(subband);resolutionSubbands.push(subband);subband={};subband.type='LH';subband.tbx0=Math.ceil(component.tcx0/bscale);subband.tby0=Math.ceil(component.tcy0/bscale-0.5);subband.tbx1=Math.ceil(component.tcx1/bscale);subband.tby1=Math.ceil(component.tcy1/bscale-0.5);subband.resolution=resolution;buildCodeblocks(context,subband,blocksDimensions);subbands.push(subband);resolutionSubbands.push(subband);subband={};subband.type='HH';subband.tbx0=Math.ceil(component.tcx0/bscale-0.5);subband.tby0=Math.ceil(component.tcy0/bscale-0.5);subband.tbx1=Math.ceil(component.tcx1/bscale-0.5);subband.tby1=Math.ceil(component.tcy1/bscale-0.5);subband.resolution=resolution;buildCodeblocks(context,subband,blocksDimensions);subbands.push(subband);resolutionSubbands.push(subband);resolution.subbands=resolutionSubbands;}}component.resolutions=resolutions;component.subbands=subbands;}var progressionOrder=tile.codingStyleDefaultParameters.progressionOrder;switch(progressionOrder){case 0:tile.packetsIterator=new LayerResolutionComponentPositionIterator(context);break;case 1:tile.packetsIterator=new ResolutionLayerComponentPositionIterator(context);break;case 2:tile.packetsIterator=new ResolutionPositionComponentLayerIterator(context);break;case 3:tile.packetsIterator=new PositionComponentResolutionLayerIterator(context);break;case 4:tile.packetsIterator=new ComponentPositionResolutionLayerIterator(context);break;default:throw new JpxError('Unsupported progression order '+progressionOrder);}}function parseTilePackets(context,data,offset,dataLength){var position=0;var buffer,bufferSize=0,skipNextBit=false;function readBits(count){while(bufferSize<count){var b=data[offset+position];position++;if(skipNextBit){buffer=buffer<<7|b;bufferSize+=7;skipNextBit=false;}else{buffer=buffer<<8|b;bufferSize+=8;}if(b===0xFF){skipNextBit=true;}}bufferSize-=count;return buffer>>>bufferSize&(1<<count)-1;}function skipMarkerIfEqual(value){if(data[offset+position-1]===0xFF&&data[offset+position]===value){skipBytes(1);return true;}else if(data[offset+position]===0xFF&&data[offset+position+1]===value){skipBytes(2);return true;}return false;}function skipBytes(count){position+=count;}function alignToByte(){bufferSize=0;if(skipNextBit){position++;skipNextBit=false;}}function readCodingpasses(){if(readBits(1)===0){return 1;}if(readBits(1)===0){return 2;}var value=readBits(2);if(value<3){return value+3;}value=readBits(5);if(value<31){return value+6;}value=readBits(7);return value+37;}var tileIndex=context.currentTile.index;var tile=context.tiles[tileIndex];var sopMarkerUsed=context.COD.sopMarkerUsed;var ephMarkerUsed=context.COD.ephMarkerUsed;var packetsIterator=tile.packetsIterator;while(position<dataLength){alignToByte();if(sopMarkerUsed&&skipMarkerIfEqual(0x91)){skipBytes(4);}var packet=packetsIterator.nextPacket();if(!readBits(1)){continue;}var layerNumber=packet.layerNumber;var queue=[],codeblock;for(var i=0,ii=packet.codeblocks.length;i<ii;i++){codeblock=packet.codeblocks[i];var precinct=codeblock.precinct;var codeblockColumn=codeblock.cbx-precinct.cbxMin;var codeblockRow=codeblock.cby-precinct.cbyMin;var codeblockIncluded=false;var firstTimeInclusion=false;var valueReady;if(codeblock['included']!==undefined){codeblockIncluded=!!readBits(1);}else{precinct=codeblock.precinct;var inclusionTree,zeroBitPlanesTree;if(precinct['inclusionTree']!==undefined){inclusionTree=precinct.inclusionTree;}else{var width=precinct.cbxMax-precinct.cbxMin+1;var height=precinct.cbyMax-precinct.cbyMin+1;inclusionTree=new InclusionTree(width,height,layerNumber);zeroBitPlanesTree=new TagTree(width,height);precinct.inclusionTree=inclusionTree;precinct.zeroBitPlanesTree=zeroBitPlanesTree;}if(inclusionTree.reset(codeblockColumn,codeblockRow,layerNumber)){while(true){if(readBits(1)){valueReady=!inclusionTree.nextLevel();if(valueReady){codeblock.included=true;codeblockIncluded=firstTimeInclusion=true;break;}}else{inclusionTree.incrementValue(layerNumber);break;}}}}if(!codeblockIncluded){continue;}if(firstTimeInclusion){zeroBitPlanesTree=precinct.zeroBitPlanesTree;zeroBitPlanesTree.reset(codeblockColumn,codeblockRow);while(true){if(readBits(1)){valueReady=!zeroBitPlanesTree.nextLevel();if(valueReady){break;}}else{zeroBitPlanesTree.incrementValue();}}codeblock.zeroBitPlanes=zeroBitPlanesTree.value;}var codingpasses=readCodingpasses();while(readBits(1)){codeblock.Lblock++;}var codingpassesLog2=(0,_util.log2)(codingpasses);var bits=(codingpasses<1<<codingpassesLog2?codingpassesLog2-1:codingpassesLog2)+codeblock.Lblock;var codedDataLength=readBits(bits);queue.push({codeblock:codeblock,codingpasses:codingpasses,dataLength:codedDataLength});}alignToByte();if(ephMarkerUsed){skipMarkerIfEqual(0x92);}while(queue.length>0){var packetItem=queue.shift();codeblock=packetItem.codeblock;if(codeblock['data']===undefined){codeblock.data=[];}codeblock.data.push({data:data,start:offset+position,end:offset+position+packetItem.dataLength,codingpasses:packetItem.codingpasses});position+=packetItem.dataLength;}}return position;}function copyCoefficients(coefficients,levelWidth,levelHeight,subband,delta,mb,reversible,segmentationSymbolUsed){var x0=subband.tbx0;var y0=subband.tby0;var width=subband.tbx1-subband.tbx0;var codeblocks=subband.codeblocks;var right=subband.type.charAt(0)==='H'?1:0;var bottom=subband.type.charAt(1)==='H'?levelWidth:0;for(var i=0,ii=codeblocks.length;i<ii;++i){var codeblock=codeblocks[i];var blockWidth=codeblock.tbx1_-codeblock.tbx0_;var blockHeight=codeblock.tby1_-codeblock.tby0_;if(blockWidth===0||blockHeight===0){continue;}if(codeblock['data']===undefined){continue;}var bitModel,currentCodingpassType;bitModel=new BitModel(blockWidth,blockHeight,codeblock.subbandType,codeblock.zeroBitPlanes,mb);currentCodingpassType=2;var data=codeblock.data,totalLength=0,codingpasses=0;var j,jj,dataItem;for(j=0,jj=data.length;j<jj;j++){dataItem=data[j];totalLength+=dataItem.end-dataItem.start;codingpasses+=dataItem.codingpasses;}var encodedData=new Uint8Array(totalLength);var position=0;for(j=0,jj=data.length;j<jj;j++){dataItem=data[j];var chunk=dataItem.data.subarray(dataItem.start,dataItem.end);encodedData.set(chunk,position);position+=chunk.length;}var decoder=new _arithmetic_decoder.ArithmeticDecoder(encodedData,0,totalLength);bitModel.setDecoder(decoder);for(j=0;j<codingpasses;j++){switch(currentCodingpassType){case 0:bitModel.runSignificancePropagationPass();break;case 1:bitModel.runMagnitudeRefinementPass();break;case 2:bitModel.runCleanupPass();if(segmentationSymbolUsed){bitModel.checkSegmentationSymbol();}break;}currentCodingpassType=(currentCodingpassType+1)%3;}var offset=codeblock.tbx0_-x0+(codeblock.tby0_-y0)*width;var sign=bitModel.coefficentsSign;var magnitude=bitModel.coefficentsMagnitude;var bitsDecoded=bitModel.bitsDecoded;var magnitudeCorrection=reversible?0:0.5;var k,n,nb;position=0;var interleave=subband.type!=='LL';for(j=0;j<blockHeight;j++){var row=offset/width|0;var levelOffset=2*row*(levelWidth-width)+right+bottom;for(k=0;k<blockWidth;k++){n=magnitude[position];if(n!==0){n=(n+magnitudeCorrection)*delta;if(sign[position]!==0){n=-n;}nb=bitsDecoded[position];var pos=interleave?levelOffset+(offset<<1):offset;if(reversible&&nb>=mb){coefficients[pos]=n;}else{coefficients[pos]=n*(1<<mb-nb);}}offset++;position++;}offset+=width-blockWidth;}}}function transformTile(context,tile,c){var component=tile.components[c];var codingStyleParameters=component.codingStyleParameters;var quantizationParameters=component.quantizationParameters;var decompositionLevelsCount=codingStyleParameters.decompositionLevelsCount;var spqcds=quantizationParameters.SPqcds;var scalarExpounded=quantizationParameters.scalarExpounded;var guardBits=quantizationParameters.guardBits;var segmentationSymbolUsed=codingStyleParameters.segmentationSymbolUsed;var precision=context.components[c].precision;var reversible=codingStyleParameters.reversibleTransformation;var transform=reversible?new ReversibleTransform():new IrreversibleTransform();var subbandCoefficients=[];var b=0;for(var i=0;i<=decompositionLevelsCount;i++){var resolution=component.resolutions[i];var width=resolution.trx1-resolution.trx0;var height=resolution.try1-resolution.try0;var coefficients=new Float32Array(width*height);for(var j=0,jj=resolution.subbands.length;j<jj;j++){var mu,epsilon;if(!scalarExpounded){mu=spqcds[0].mu;epsilon=spqcds[0].epsilon+(i>0?1-i:0);}else{mu=spqcds[b].mu;epsilon=spqcds[b].epsilon;b++;}var subband=resolution.subbands[j];var gainLog2=SubbandsGainLog2[subband.type];var delta=reversible?1:Math.pow(2,precision+gainLog2-epsilon)*(1+mu/2048);var mb=guardBits+epsilon-1;copyCoefficients(coefficients,width,height,subband,delta,mb,reversible,segmentationSymbolUsed);}subbandCoefficients.push({width:width,height:height,items:coefficients});}var result=transform.calculate(subbandCoefficients,component.tcx0,component.tcy0);return{left:component.tcx0,top:component.tcy0,width:result.width,height:result.height,items:result.items};}function transformComponents(context){var siz=context.SIZ;var components=context.components;var componentsCount=siz.Csiz;var resultImages=[];for(var i=0,ii=context.tiles.length;i<ii;i++){var tile=context.tiles[i];var transformedTiles=[];var c;for(c=0;c<componentsCount;c++){transformedTiles[c]=transformTile(context,tile,c);}var tile0=transformedTiles[0];var out=new Uint8ClampedArray(tile0.items.length*componentsCount);var result={left:tile0.left,top:tile0.top,width:tile0.width,height:tile0.height,items:out};var shift,offset;var pos=0,j,jj,y0,y1,y2;if(tile.codingStyleDefaultParameters.multipleComponentTransform){var fourComponents=componentsCount===4;var y0items=transformedTiles[0].items;var y1items=transformedTiles[1].items;var y2items=transformedTiles[2].items;var y3items=fourComponents?transformedTiles[3].items:null;shift=components[0].precision-8;offset=(128<<shift)+0.5;var component0=tile.components[0];var alpha01=componentsCount-3;jj=y0items.length;if(!component0.codingStyleParameters.reversibleTransformation){for(j=0;j<jj;j++,pos+=alpha01){y0=y0items[j]+offset;y1=y1items[j];y2=y2items[j];out[pos++]=y0+1.402*y2>>shift;out[pos++]=y0-0.34413*y1-0.71414*y2>>shift;out[pos++]=y0+1.772*y1>>shift;}}else{for(j=0;j<jj;j++,pos+=alpha01){y0=y0items[j]+offset;y1=y1items[j];y2=y2items[j];var g=y0-(y2+y1>>2);out[pos++]=g+y2>>shift;out[pos++]=g>>shift;out[pos++]=g+y1>>shift;}}if(fourComponents){for(j=0,pos=3;j<jj;j++,pos+=4){out[pos]=y3items[j]+offset>>shift;}}}else{for(c=0;c<componentsCount;c++){var items=transformedTiles[c].items;shift=components[c].precision-8;offset=(128<<shift)+0.5;for(pos=c,j=0,jj=items.length;j<jj;j++){out[pos]=items[j]+offset>>shift;pos+=componentsCount;}}}resultImages.push(result);}return resultImages;}function initializeTile(context,tileIndex){var siz=context.SIZ;var componentsCount=siz.Csiz;var tile=context.tiles[tileIndex];for(var c=0;c<componentsCount;c++){var component=tile.components[c];var qcdOrQcc=context.currentTile.QCC[c]!==undefined?context.currentTile.QCC[c]:context.currentTile.QCD;component.quantizationParameters=qcdOrQcc;var codOrCoc=context.currentTile.COC[c]!==undefined?context.currentTile.COC[c]:context.currentTile.COD;component.codingStyleParameters=codOrCoc;}tile.codingStyleDefaultParameters=context.currentTile.COD;}var TagTree=function TagTreeClosure(){function TagTree(width,height){var levelsLength=(0,_util.log2)(Math.max(width,height))+1;this.levels=[];for(var i=0;i<levelsLength;i++){var level={width:width,height:height,items:[]};this.levels.push(level);width=Math.ceil(width/2);height=Math.ceil(height/2);}}TagTree.prototype={reset:function TagTree_reset(i,j){var currentLevel=0,value=0,level;while(currentLevel<this.levels.length){level=this.levels[currentLevel];var index=i+j*level.width;if(level.items[index]!==undefined){value=level.items[index];break;}level.index=index;i>>=1;j>>=1;currentLevel++;}currentLevel--;level=this.levels[currentLevel];level.items[level.index]=value;this.currentLevel=currentLevel;delete this.value;},incrementValue:function TagTree_incrementValue(){var level=this.levels[this.currentLevel];level.items[level.index]++;},nextLevel:function TagTree_nextLevel(){var currentLevel=this.currentLevel;var level=this.levels[currentLevel];var value=level.items[level.index];currentLevel--;if(currentLevel<0){this.value=value;return false;}this.currentLevel=currentLevel;level=this.levels[currentLevel];level.items[level.index]=value;return true;}};return TagTree;}();var InclusionTree=function InclusionTreeClosure(){function InclusionTree(width,height,defaultValue){var levelsLength=(0,_util.log2)(Math.max(width,height))+1;this.levels=[];for(var i=0;i<levelsLength;i++){var items=new Uint8Array(width*height);for(var j=0,jj=items.length;j<jj;j++){items[j]=defaultValue;}var level={width:width,height:height,items:items};this.levels.push(level);width=Math.ceil(width/2);height=Math.ceil(height/2);}}InclusionTree.prototype={reset:function InclusionTree_reset(i,j,stopValue){var currentLevel=0;while(currentLevel<this.levels.length){var level=this.levels[currentLevel];var index=i+j*level.width;level.index=index;var value=level.items[index];if(value===0xFF){break;}if(value>stopValue){this.currentLevel=currentLevel;this.propagateValues();return false;}i>>=1;j>>=1;currentLevel++;}this.currentLevel=currentLevel-1;return true;},incrementValue:function InclusionTree_incrementValue(stopValue){var level=this.levels[this.currentLevel];level.items[level.index]=stopValue+1;this.propagateValues();},propagateValues:function InclusionTree_propagateValues(){var levelIndex=this.currentLevel;var level=this.levels[levelIndex];var currentValue=level.items[level.index];while(--levelIndex>=0){level=this.levels[levelIndex];level.items[level.index]=currentValue;}},nextLevel:function InclusionTree_nextLevel(){var currentLevel=this.currentLevel;var level=this.levels[currentLevel];var value=level.items[level.index];level.items[level.index]=0xFF;currentLevel--;if(currentLevel<0){return false;}this.currentLevel=currentLevel;level=this.levels[currentLevel];level.items[level.index]=value;return true;}};return InclusionTree;}();var BitModel=function BitModelClosure(){var UNIFORM_CONTEXT=17;var RUNLENGTH_CONTEXT=18;var LLAndLHContextsLabel=new Uint8Array([0,5,8,0,3,7,8,0,4,7,8,0,0,0,0,0,1,6,8,0,3,7,8,0,4,7,8,0,0,0,0,0,2,6,8,0,3,7,8,0,4,7,8,0,0,0,0,0,2,6,8,0,3,7,8,0,4,7,8,0,0,0,0,0,2,6,8,0,3,7,8,0,4,7,8]);var HLContextLabel=new Uint8Array([0,3,4,0,5,7,7,0,8,8,8,0,0,0,0,0,1,3,4,0,6,7,7,0,8,8,8,0,0,0,0,0,2,3,4,0,6,7,7,0,8,8,8,0,0,0,0,0,2,3,4,0,6,7,7,0,8,8,8,0,0,0,0,0,2,3,4,0,6,7,7,0,8,8,8]);var HHContextLabel=new Uint8Array([0,1,2,0,1,2,2,0,2,2,2,0,0,0,0,0,3,4,5,0,4,5,5,0,5,5,5,0,0,0,0,0,6,7,7,0,7,7,7,0,7,7,7,0,0,0,0,0,8,8,8,0,8,8,8,0,8,8,8,0,0,0,0,0,8,8,8,0,8,8,8,0,8,8,8]);function BitModel(width,height,subband,zeroBitPlanes,mb){this.width=width;this.height=height;this.contextLabelTable=subband==='HH'?HHContextLabel:subband==='HL'?HLContextLabel:LLAndLHContextsLabel;var coefficientCount=width*height;this.neighborsSignificance=new Uint8Array(coefficientCount);this.coefficentsSign=new Uint8Array(coefficientCount);this.coefficentsMagnitude=mb>14?new Uint32Array(coefficientCount):mb>6?new Uint16Array(coefficientCount):new Uint8Array(coefficientCount);this.processingFlags=new Uint8Array(coefficientCount);var bitsDecoded=new Uint8Array(coefficientCount);if(zeroBitPlanes!==0){for(var i=0;i<coefficientCount;i++){bitsDecoded[i]=zeroBitPlanes;}}this.bitsDecoded=bitsDecoded;this.reset();}BitModel.prototype={setDecoder:function BitModel_setDecoder(decoder){this.decoder=decoder;},reset:function BitModel_reset(){this.contexts=new Int8Array(19);this.contexts[0]=4<<1|0;this.contexts[UNIFORM_CONTEXT]=46<<1|0;this.contexts[RUNLENGTH_CONTEXT]=3<<1|0;},setNeighborsSignificance:function BitModel_setNeighborsSignificance(row,column,index){var neighborsSignificance=this.neighborsSignificance;var width=this.width,height=this.height;var left=column>0;var right=column+1<width;var i;if(row>0){i=index-width;if(left){neighborsSignificance[i-1]+=0x10;}if(right){neighborsSignificance[i+1]+=0x10;}neighborsSignificance[i]+=0x04;}if(row+1<height){i=index+width;if(left){neighborsSignificance[i-1]+=0x10;}if(right){neighborsSignificance[i+1]+=0x10;}neighborsSignificance[i]+=0x04;}if(left){neighborsSignificance[index-1]+=0x01;}if(right){neighborsSignificance[index+1]+=0x01;}neighborsSignificance[index]|=0x80;},runSignificancePropagationPass:function BitModel_runSignificancePropagationPass(){var decoder=this.decoder;var width=this.width,height=this.height;var coefficentsMagnitude=this.coefficentsMagnitude;var coefficentsSign=this.coefficentsSign;var neighborsSignificance=this.neighborsSignificance;var processingFlags=this.processingFlags;var contexts=this.contexts;var labels=this.contextLabelTable;var bitsDecoded=this.bitsDecoded;var processedInverseMask=~1;var processedMask=1;var firstMagnitudeBitMask=2;for(var i0=0;i0<height;i0+=4){for(var j=0;j<width;j++){var index=i0*width+j;for(var i1=0;i1<4;i1++,index+=width){var i=i0+i1;if(i>=height){break;}processingFlags[index]&=processedInverseMask;if(coefficentsMagnitude[index]||!neighborsSignificance[index]){continue;}var contextLabel=labels[neighborsSignificance[index]];var decision=decoder.readBit(contexts,contextLabel);if(decision){var sign=this.decodeSignBit(i,j,index);coefficentsSign[index]=sign;coefficentsMagnitude[index]=1;this.setNeighborsSignificance(i,j,index);processingFlags[index]|=firstMagnitudeBitMask;}bitsDecoded[index]++;processingFlags[index]|=processedMask;}}}},decodeSignBit:function BitModel_decodeSignBit(row,column,index){var width=this.width,height=this.height;var coefficentsMagnitude=this.coefficentsMagnitude;var coefficentsSign=this.coefficentsSign;var contribution,sign0,sign1,significance1;var contextLabel,decoded;significance1=column>0&&coefficentsMagnitude[index-1]!==0;if(column+1<width&&coefficentsMagnitude[index+1]!==0){sign1=coefficentsSign[index+1];if(significance1){sign0=coefficentsSign[index-1];contribution=1-sign1-sign0;}else{contribution=1-sign1-sign1;}}else if(significance1){sign0=coefficentsSign[index-1];contribution=1-sign0-sign0;}else{contribution=0;}var horizontalContribution=3*contribution;significance1=row>0&&coefficentsMagnitude[index-width]!==0;if(row+1<height&&coefficentsMagnitude[index+width]!==0){sign1=coefficentsSign[index+width];if(significance1){sign0=coefficentsSign[index-width];contribution=1-sign1-sign0+horizontalContribution;}else{contribution=1-sign1-sign1+horizontalContribution;}}else if(significance1){sign0=coefficentsSign[index-width];contribution=1-sign0-sign0+horizontalContribution;}else{contribution=horizontalContribution;}if(contribution>=0){contextLabel=9+contribution;decoded=this.decoder.readBit(this.contexts,contextLabel);}else{contextLabel=9-contribution;decoded=this.decoder.readBit(this.contexts,contextLabel)^1;}return decoded;},runMagnitudeRefinementPass:function BitModel_runMagnitudeRefinementPass(){var decoder=this.decoder;var width=this.width,height=this.height;var coefficentsMagnitude=this.coefficentsMagnitude;var neighborsSignificance=this.neighborsSignificance;var contexts=this.contexts;var bitsDecoded=this.bitsDecoded;var processingFlags=this.processingFlags;var processedMask=1;var firstMagnitudeBitMask=2;var length=width*height;var width4=width*4;for(var index0=0,indexNext;index0<length;index0=indexNext){indexNext=Math.min(length,index0+width4);for(var j=0;j<width;j++){for(var index=index0+j;index<indexNext;index+=width){if(!coefficentsMagnitude[index]||(processingFlags[index]&processedMask)!==0){continue;}var contextLabel=16;if((processingFlags[index]&firstMagnitudeBitMask)!==0){processingFlags[index]^=firstMagnitudeBitMask;var significance=neighborsSignificance[index]&127;contextLabel=significance===0?15:14;}var bit=decoder.readBit(contexts,contextLabel);coefficentsMagnitude[index]=coefficentsMagnitude[index]<<1|bit;bitsDecoded[index]++;processingFlags[index]|=processedMask;}}}},runCleanupPass:function BitModel_runCleanupPass(){var decoder=this.decoder;var width=this.width,height=this.height;var neighborsSignificance=this.neighborsSignificance;var coefficentsMagnitude=this.coefficentsMagnitude;var coefficentsSign=this.coefficentsSign;var contexts=this.contexts;var labels=this.contextLabelTable;var bitsDecoded=this.bitsDecoded;var processingFlags=this.processingFlags;var processedMask=1;var firstMagnitudeBitMask=2;var oneRowDown=width;var twoRowsDown=width*2;var threeRowsDown=width*3;var iNext;for(var i0=0;i0<height;i0=iNext){iNext=Math.min(i0+4,height);var indexBase=i0*width;var checkAllEmpty=i0+3<height;for(var j=0;j<width;j++){var index0=indexBase+j;var allEmpty=checkAllEmpty&&processingFlags[index0]===0&&processingFlags[index0+oneRowDown]===0&&processingFlags[index0+twoRowsDown]===0&&processingFlags[index0+threeRowsDown]===0&&neighborsSignificance[index0]===0&&neighborsSignificance[index0+oneRowDown]===0&&neighborsSignificance[index0+twoRowsDown]===0&&neighborsSignificance[index0+threeRowsDown]===0;var i1=0,index=index0;var i=i0,sign;if(allEmpty){var hasSignificantCoefficent=decoder.readBit(contexts,RUNLENGTH_CONTEXT);if(!hasSignificantCoefficent){bitsDecoded[index0]++;bitsDecoded[index0+oneRowDown]++;bitsDecoded[index0+twoRowsDown]++;bitsDecoded[index0+threeRowsDown]++;continue;}i1=decoder.readBit(contexts,UNIFORM_CONTEXT)<<1|decoder.readBit(contexts,UNIFORM_CONTEXT);if(i1!==0){i=i0+i1;index+=i1*width;}sign=this.decodeSignBit(i,j,index);coefficentsSign[index]=sign;coefficentsMagnitude[index]=1;this.setNeighborsSignificance(i,j,index);processingFlags[index]|=firstMagnitudeBitMask;index=index0;for(var i2=i0;i2<=i;i2++,index+=width){bitsDecoded[index]++;}i1++;}for(i=i0+i1;i<iNext;i++,index+=width){if(coefficentsMagnitude[index]||(processingFlags[index]&processedMask)!==0){continue;}var contextLabel=labels[neighborsSignificance[index]];var decision=decoder.readBit(contexts,contextLabel);if(decision===1){sign=this.decodeSignBit(i,j,index);coefficentsSign[index]=sign;coefficentsMagnitude[index]=1;this.setNeighborsSignificance(i,j,index);processingFlags[index]|=firstMagnitudeBitMask;}bitsDecoded[index]++;}}}},checkSegmentationSymbol:function BitModel_checkSegmentationSymbol(){var decoder=this.decoder;var contexts=this.contexts;var symbol=decoder.readBit(contexts,UNIFORM_CONTEXT)<<3|decoder.readBit(contexts,UNIFORM_CONTEXT)<<2|decoder.readBit(contexts,UNIFORM_CONTEXT)<<1|decoder.readBit(contexts,UNIFORM_CONTEXT);if(symbol!==0xA){throw new JpxError('Invalid segmentation symbol');}}};return BitModel;}();var Transform=function TransformClosure(){function Transform(){}Transform.prototype.calculate=function transformCalculate(subbands,u0,v0){var ll=subbands[0];for(var i=1,ii=subbands.length;i<ii;i++){ll=this.iterate(ll,subbands[i],u0,v0);}return ll;};Transform.prototype.extend=function extend(buffer,offset,size){var i1=offset-1,j1=offset+1;var i2=offset+size-2,j2=offset+size;buffer[i1--]=buffer[j1++];buffer[j2++]=buffer[i2--];buffer[i1--]=buffer[j1++];buffer[j2++]=buffer[i2--];buffer[i1--]=buffer[j1++];buffer[j2++]=buffer[i2--];buffer[i1]=buffer[j1];buffer[j2]=buffer[i2];};Transform.prototype.iterate=function Transform_iterate(ll,hl_lh_hh,u0,v0){var llWidth=ll.width,llHeight=ll.height,llItems=ll.items;var width=hl_lh_hh.width;var height=hl_lh_hh.height;var items=hl_lh_hh.items;var i,j,k,l,u,v;for(k=0,i=0;i<llHeight;i++){l=i*2*width;for(j=0;j<llWidth;j++,k++,l+=2){items[l]=llItems[k];}}llItems=ll.items=null;var bufferPadding=4;var rowBuffer=new Float32Array(width+2*bufferPadding);if(width===1){if((u0&1)!==0){for(v=0,k=0;v<height;v++,k+=width){items[k]*=0.5;}}}else{for(v=0,k=0;v<height;v++,k+=width){rowBuffer.set(items.subarray(k,k+width),bufferPadding);this.extend(rowBuffer,bufferPadding,width);this.filter(rowBuffer,bufferPadding,width);items.set(rowBuffer.subarray(bufferPadding,bufferPadding+width),k);}}var numBuffers=16;var colBuffers=[];for(i=0;i<numBuffers;i++){colBuffers.push(new Float32Array(height+2*bufferPadding));}var b,currentBuffer=0;ll=bufferPadding+height;if(height===1){if((v0&1)!==0){for(u=0;u<width;u++){items[u]*=0.5;}}}else{for(u=0;u<width;u++){if(currentBuffer===0){numBuffers=Math.min(width-u,numBuffers);for(k=u,l=bufferPadding;l<ll;k+=width,l++){for(b=0;b<numBuffers;b++){colBuffers[b][l]=items[k+b];}}currentBuffer=numBuffers;}currentBuffer--;var buffer=colBuffers[currentBuffer];this.extend(buffer,bufferPadding,height);this.filter(buffer,bufferPadding,height);if(currentBuffer===0){k=u-numBuffers+1;for(l=bufferPadding;l<ll;k+=width,l++){for(b=0;b<numBuffers;b++){items[k+b]=colBuffers[b][l];}}}}}return{width:width,height:height,items:items};};return Transform;}();var IrreversibleTransform=function IrreversibleTransformClosure(){function IrreversibleTransform(){Transform.call(this);}IrreversibleTransform.prototype=Object.create(Transform.prototype);IrreversibleTransform.prototype.filter=function irreversibleTransformFilter(x,offset,length){var len=length>>1;offset=offset|0;var j,n,current,next;var alpha=-1.586134342059924;var beta=-0.052980118572961;var gamma=0.882911075530934;var delta=0.443506852043971;var K=1.230174104914001;var K_=1/K;j=offset-3;for(n=len+4;n--;j+=2){x[j]*=K_;}j=offset-2;current=delta*x[j-1];for(n=len+3;n--;j+=2){next=delta*x[j+1];x[j]=K*x[j]-current-next;if(n--){j+=2;current=delta*x[j+1];x[j]=K*x[j]-current-next;}else{break;}}j=offset-1;current=gamma*x[j-1];for(n=len+2;n--;j+=2){next=gamma*x[j+1];x[j]-=current+next;if(n--){j+=2;current=gamma*x[j+1];x[j]-=current+next;}else{break;}}j=offset;current=beta*x[j-1];for(n=len+1;n--;j+=2){next=beta*x[j+1];x[j]-=current+next;if(n--){j+=2;current=beta*x[j+1];x[j]-=current+next;}else{break;}}if(len!==0){j=offset+1;current=alpha*x[j-1];for(n=len;n--;j+=2){next=alpha*x[j+1];x[j]-=current+next;if(n--){j+=2;current=alpha*x[j+1];x[j]-=current+next;}else{break;}}}};return IrreversibleTransform;}();var ReversibleTransform=function ReversibleTransformClosure(){function ReversibleTransform(){Transform.call(this);}ReversibleTransform.prototype=Object.create(Transform.prototype);ReversibleTransform.prototype.filter=function reversibleTransformFilter(x,offset,length){var len=length>>1;offset=offset|0;var j,n;for(j=offset,n=len+1;n--;j+=2){x[j]-=x[j-1]+x[j+1]+2>>2;}for(j=offset+1,n=len;n--;j+=2){x[j]+=x[j-1]+x[j+1]>>1;}};return ReversibleTransform;}();return JpxImage;}();exports.JpxImage=JpxImage;/***/},/* 150 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.calculateSHA512=exports.calculateSHA384=exports.calculateSHA256=exports.calculateMD5=exports.PDF20=exports.PDF17=exports.CipherTransformFactory=exports.ARCFourCipher=exports.AES256Cipher=exports.AES128Cipher=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _util=__w_pdfjs_require__(2);var _primitives=__w_pdfjs_require__(138);var _stream=__w_pdfjs_require__(140);function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(_typeof3(call)==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+_typeof3(superClass));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var ARCFourCipher=function ARCFourCipherClosure(){function ARCFourCipher(key){this.a=0;this.b=0;var s=new Uint8Array(256);var i,j=0,tmp,keyLength=key.length;for(i=0;i<256;++i){s[i]=i;}for(i=0;i<256;++i){tmp=s[i];j=j+tmp+key[i%keyLength]&0xFF;s[i]=s[j];s[j]=tmp;}this.s=s;}ARCFourCipher.prototype={encryptBlock:function ARCFourCipher_encryptBlock(data){var i,n=data.length,tmp,tmp2;var a=this.a,b=this.b,s=this.s;var output=new Uint8Array(n);for(i=0;i<n;++i){a=a+1&0xFF;tmp=s[a];b=b+tmp&0xFF;tmp2=s[b];s[a]=tmp2;s[b]=tmp;output[i]=data[i]^s[tmp+tmp2&0xFF];}this.a=a;this.b=b;return output;}};ARCFourCipher.prototype.decryptBlock=ARCFourCipher.prototype.encryptBlock;return ARCFourCipher;}();var calculateMD5=function calculateMD5Closure(){var r=new Uint8Array([7,12,17,22,7,12,17,22,7,12,17,22,7,12,17,22,5,9,14,20,5,9,14,20,5,9,14,20,5,9,14,20,4,11,16,23,4,11,16,23,4,11,16,23,4,11,16,23,6,10,15,21,6,10,15,21,6,10,15,21,6,10,15,21]);var k=new Int32Array([-680876936,-389564586,606105819,-1044525330,-176418897,1200080426,-1473231341,-45705983,1770035416,-1958414417,-42063,-1990404162,1804603682,-40341101,-1502002290,1236535329,-165796510,-1069501632,643717713,-373897302,-701558691,38016083,-660478335,-405537848,568446438,-1019803690,-187363961,1163531501,-1444681467,-51403784,1735328473,-1926607734,-378558,-2022574463,1839030562,-35309556,-1530992060,1272893353,-155497632,-1094730640,681279174,-358537222,-722521979,76029189,-640364487,-421815835,530742520,-995338651,-198630844,1126891415,-1416354905,-57434055,1700485571,-1894986606,-1051523,-2054922799,1873313359,-30611744,-1560198380,1309151649,-145523070,-1120210379,718787259,-343485551]);function hash(data,offset,length){var h0=1732584193,h1=-271733879,h2=-1732584194,h3=271733878;var paddedLength=length+72&~63;var padded=new Uint8Array(paddedLength);var i,j,n;for(i=0;i<length;++i){padded[i]=data[offset++];}padded[i++]=0x80;n=paddedLength-8;while(i<n){padded[i++]=0;}padded[i++]=length<<3&0xFF;padded[i++]=length>>5&0xFF;padded[i++]=length>>13&0xFF;padded[i++]=length>>21&0xFF;padded[i++]=length>>>29&0xFF;padded[i++]=0;padded[i++]=0;padded[i++]=0;var w=new Int32Array(16);for(i=0;i<paddedLength;){for(j=0;j<16;++j,i+=4){w[j]=padded[i]|padded[i+1]<<8|padded[i+2]<<16|padded[i+3]<<24;}var a=h0,b=h1,c=h2,d=h3,f,g;for(j=0;j<64;++j){if(j<16){f=b&c|~b&d;g=j;}else if(j<32){f=d&b|~d&c;g=5*j+1&15;}else if(j<48){f=b^c^d;g=3*j+5&15;}else{f=c^(b|~d);g=7*j&15;}var tmp=d,rotateArg=a+f+k[j]+w[g]|0,rotate=r[j];d=c;c=b;b=b+(rotateArg<<rotate|rotateArg>>>32-rotate)|0;a=tmp;}h0=h0+a|0;h1=h1+b|0;h2=h2+c|0;h3=h3+d|0;}return new Uint8Array([h0&0xFF,h0>>8&0xFF,h0>>16&0xFF,h0>>>24&0xFF,h1&0xFF,h1>>8&0xFF,h1>>16&0xFF,h1>>>24&0xFF,h2&0xFF,h2>>8&0xFF,h2>>16&0xFF,h2>>>24&0xFF,h3&0xFF,h3>>8&0xFF,h3>>16&0xFF,h3>>>24&0xFF]);}return hash;}();var Word64=function Word64Closure(){function Word64(highInteger,lowInteger){this.high=highInteger|0;this.low=lowInteger|0;}Word64.prototype={and:function Word64_and(word){this.high&=word.high;this.low&=word.low;},xor:function Word64_xor(word){this.high^=word.high;this.low^=word.low;},or:function Word64_or(word){this.high|=word.high;this.low|=word.low;},shiftRight:function Word64_shiftRight(places){if(places>=32){this.low=this.high>>>places-32|0;this.high=0;}else{this.low=this.low>>>places|this.high<<32-places;this.high=this.high>>>places|0;}},shiftLeft:function Word64_shiftLeft(places){if(places>=32){this.high=this.low<<places-32;this.low=0;}else{this.high=this.high<<places|this.low>>>32-places;this.low=this.low<<places;}},rotateRight:function Word64_rotateRight(places){var low,high;if(places&32){high=this.low;low=this.high;}else{low=this.low;high=this.high;}places&=31;this.low=low>>>places|high<<32-places;this.high=high>>>places|low<<32-places;},not:function Word64_not(){this.high=~this.high;this.low=~this.low;},add:function Word64_add(word){var lowAdd=(this.low>>>0)+(word.low>>>0);var highAdd=(this.high>>>0)+(word.high>>>0);if(lowAdd>0xFFFFFFFF){highAdd+=1;}this.low=lowAdd|0;this.high=highAdd|0;},copyTo:function Word64_copyTo(bytes,offset){bytes[offset]=this.high>>>24&0xFF;bytes[offset+1]=this.high>>16&0xFF;bytes[offset+2]=this.high>>8&0xFF;bytes[offset+3]=this.high&0xFF;bytes[offset+4]=this.low>>>24&0xFF;bytes[offset+5]=this.low>>16&0xFF;bytes[offset+6]=this.low>>8&0xFF;bytes[offset+7]=this.low&0xFF;},assign:function Word64_assign(word){this.high=word.high;this.low=word.low;}};return Word64;}();var calculateSHA256=function calculateSHA256Closure(){function rotr(x,n){return x>>>n|x<<32-n;}function ch(x,y,z){return x&y^~x&z;}function maj(x,y,z){return x&y^x&z^y&z;}function sigma(x){return rotr(x,2)^rotr(x,13)^rotr(x,22);}function sigmaPrime(x){return rotr(x,6)^rotr(x,11)^rotr(x,25);}function littleSigma(x){return rotr(x,7)^rotr(x,18)^x>>>3;}function littleSigmaPrime(x){return rotr(x,17)^rotr(x,19)^x>>>10;}var k=[0x428a2f98,0x71374491,0xb5c0fbcf,0xe9b5dba5,0x3956c25b,0x59f111f1,0x923f82a4,0xab1c5ed5,0xd807aa98,0x12835b01,0x243185be,0x550c7dc3,0x72be5d74,0x80deb1fe,0x9bdc06a7,0xc19bf174,0xe49b69c1,0xefbe4786,0x0fc19dc6,0x240ca1cc,0x2de92c6f,0x4a7484aa,0x5cb0a9dc,0x76f988da,0x983e5152,0xa831c66d,0xb00327c8,0xbf597fc7,0xc6e00bf3,0xd5a79147,0x06ca6351,0x14292967,0x27b70a85,0x2e1b2138,0x4d2c6dfc,0x53380d13,0x650a7354,0x766a0abb,0x81c2c92e,0x92722c85,0xa2bfe8a1,0xa81a664b,0xc24b8b70,0xc76c51a3,0xd192e819,0xd6990624,0xf40e3585,0x106aa070,0x19a4c116,0x1e376c08,0x2748774c,0x34b0bcb5,0x391c0cb3,0x4ed8aa4a,0x5b9cca4f,0x682e6ff3,0x748f82ee,0x78a5636f,0x84c87814,0x8cc70208,0x90befffa,0xa4506ceb,0xbef9a3f7,0xc67178f2];function hash(data,offset,length){var h0=0x6a09e667,h1=0xbb67ae85,h2=0x3c6ef372,h3=0xa54ff53a,h4=0x510e527f,h5=0x9b05688c,h6=0x1f83d9ab,h7=0x5be0cd19;var paddedLength=Math.ceil((length+9)/64)*64;var padded=new Uint8Array(paddedLength);var i,j,n;for(i=0;i<length;++i){padded[i]=data[offset++];}padded[i++]=0x80;n=paddedLength-8;while(i<n){padded[i++]=0;}padded[i++]=0;padded[i++]=0;padded[i++]=0;padded[i++]=length>>>29&0xFF;padded[i++]=length>>21&0xFF;padded[i++]=length>>13&0xFF;padded[i++]=length>>5&0xFF;padded[i++]=length<<3&0xFF;var w=new Uint32Array(64);for(i=0;i<paddedLength;){for(j=0;j<16;++j){w[j]=padded[i]<<24|padded[i+1]<<16|padded[i+2]<<8|padded[i+3];i+=4;}for(j=16;j<64;++j){w[j]=littleSigmaPrime(w[j-2])+w[j-7]+littleSigma(w[j-15])+w[j-16]|0;}var a=h0,b=h1,c=h2,d=h3,e=h4,f=h5,g=h6,h=h7,t1,t2;for(j=0;j<64;++j){t1=h+sigmaPrime(e)+ch(e,f,g)+k[j]+w[j];t2=sigma(a)+maj(a,b,c);h=g;g=f;f=e;e=d+t1|0;d=c;c=b;b=a;a=t1+t2|0;}h0=h0+a|0;h1=h1+b|0;h2=h2+c|0;h3=h3+d|0;h4=h4+e|0;h5=h5+f|0;h6=h6+g|0;h7=h7+h|0;}return new Uint8Array([h0>>24&0xFF,h0>>16&0xFF,h0>>8&0xFF,h0&0xFF,h1>>24&0xFF,h1>>16&0xFF,h1>>8&0xFF,h1&0xFF,h2>>24&0xFF,h2>>16&0xFF,h2>>8&0xFF,h2&0xFF,h3>>24&0xFF,h3>>16&0xFF,h3>>8&0xFF,h3&0xFF,h4>>24&0xFF,h4>>16&0xFF,h4>>8&0xFF,h4&0xFF,h5>>24&0xFF,h5>>16&0xFF,h5>>8&0xFF,h5&0xFF,h6>>24&0xFF,h6>>16&0xFF,h6>>8&0xFF,h6&0xFF,h7>>24&0xFF,h7>>16&0xFF,h7>>8&0xFF,h7&0xFF]);}return hash;}();var calculateSHA512=function calculateSHA512Closure(){function ch(result,x,y,z,tmp){result.assign(x);result.and(y);tmp.assign(x);tmp.not();tmp.and(z);result.xor(tmp);}function maj(result,x,y,z,tmp){result.assign(x);result.and(y);tmp.assign(x);tmp.and(z);result.xor(tmp);tmp.assign(y);tmp.and(z);result.xor(tmp);}function sigma(result,x,tmp){result.assign(x);result.rotateRight(28);tmp.assign(x);tmp.rotateRight(34);result.xor(tmp);tmp.assign(x);tmp.rotateRight(39);result.xor(tmp);}function sigmaPrime(result,x,tmp){result.assign(x);result.rotateRight(14);tmp.assign(x);tmp.rotateRight(18);result.xor(tmp);tmp.assign(x);tmp.rotateRight(41);result.xor(tmp);}function littleSigma(result,x,tmp){result.assign(x);result.rotateRight(1);tmp.assign(x);tmp.rotateRight(8);result.xor(tmp);tmp.assign(x);tmp.shiftRight(7);result.xor(tmp);}function littleSigmaPrime(result,x,tmp){result.assign(x);result.rotateRight(19);tmp.assign(x);tmp.rotateRight(61);result.xor(tmp);tmp.assign(x);tmp.shiftRight(6);result.xor(tmp);}var k=[new Word64(0x428a2f98,0xd728ae22),new Word64(0x71374491,0x23ef65cd),new Word64(0xb5c0fbcf,0xec4d3b2f),new Word64(0xe9b5dba5,0x8189dbbc),new Word64(0x3956c25b,0xf348b538),new Word64(0x59f111f1,0xb605d019),new Word64(0x923f82a4,0xaf194f9b),new Word64(0xab1c5ed5,0xda6d8118),new Word64(0xd807aa98,0xa3030242),new Word64(0x12835b01,0x45706fbe),new Word64(0x243185be,0x4ee4b28c),new Word64(0x550c7dc3,0xd5ffb4e2),new Word64(0x72be5d74,0xf27b896f),new Word64(0x80deb1fe,0x3b1696b1),new Word64(0x9bdc06a7,0x25c71235),new Word64(0xc19bf174,0xcf692694),new Word64(0xe49b69c1,0x9ef14ad2),new Word64(0xefbe4786,0x384f25e3),new Word64(0x0fc19dc6,0x8b8cd5b5),new Word64(0x240ca1cc,0x77ac9c65),new Word64(0x2de92c6f,0x592b0275),new Word64(0x4a7484aa,0x6ea6e483),new Word64(0x5cb0a9dc,0xbd41fbd4),new Word64(0x76f988da,0x831153b5),new Word64(0x983e5152,0xee66dfab),new Word64(0xa831c66d,0x2db43210),new Word64(0xb00327c8,0x98fb213f),new Word64(0xbf597fc7,0xbeef0ee4),new Word64(0xc6e00bf3,0x3da88fc2),new Word64(0xd5a79147,0x930aa725),new Word64(0x06ca6351,0xe003826f),new Word64(0x14292967,0x0a0e6e70),new Word64(0x27b70a85,0x46d22ffc),new Word64(0x2e1b2138,0x5c26c926),new Word64(0x4d2c6dfc,0x5ac42aed),new Word64(0x53380d13,0x9d95b3df),new Word64(0x650a7354,0x8baf63de),new Word64(0x766a0abb,0x3c77b2a8),new Word64(0x81c2c92e,0x47edaee6),new Word64(0x92722c85,0x1482353b),new Word64(0xa2bfe8a1,0x4cf10364),new Word64(0xa81a664b,0xbc423001),new Word64(0xc24b8b70,0xd0f89791),new Word64(0xc76c51a3,0x0654be30),new Word64(0xd192e819,0xd6ef5218),new Word64(0xd6990624,0x5565a910),new Word64(0xf40e3585,0x5771202a),new Word64(0x106aa070,0x32bbd1b8),new Word64(0x19a4c116,0xb8d2d0c8),new Word64(0x1e376c08,0x5141ab53),new Word64(0x2748774c,0xdf8eeb99),new Word64(0x34b0bcb5,0xe19b48a8),new Word64(0x391c0cb3,0xc5c95a63),new Word64(0x4ed8aa4a,0xe3418acb),new Word64(0x5b9cca4f,0x7763e373),new Word64(0x682e6ff3,0xd6b2b8a3),new Word64(0x748f82ee,0x5defb2fc),new Word64(0x78a5636f,0x43172f60),new Word64(0x84c87814,0xa1f0ab72),new Word64(0x8cc70208,0x1a6439ec),new Word64(0x90befffa,0x23631e28),new Word64(0xa4506ceb,0xde82bde9),new Word64(0xbef9a3f7,0xb2c67915),new Word64(0xc67178f2,0xe372532b),new Word64(0xca273ece,0xea26619c),new Word64(0xd186b8c7,0x21c0c207),new Word64(0xeada7dd6,0xcde0eb1e),new Word64(0xf57d4f7f,0xee6ed178),new Word64(0x06f067aa,0x72176fba),new Word64(0x0a637dc5,0xa2c898a6),new Word64(0x113f9804,0xbef90dae),new Word64(0x1b710b35,0x131c471b),new Word64(0x28db77f5,0x23047d84),new Word64(0x32caab7b,0x40c72493),new Word64(0x3c9ebe0a,0x15c9bebc),new Word64(0x431d67c4,0x9c100d4c),new Word64(0x4cc5d4be,0xcb3e42b6),new Word64(0x597f299c,0xfc657e2a),new Word64(0x5fcb6fab,0x3ad6faec),new Word64(0x6c44198c,0x4a475817)];function hash(data,offset,length,mode384){mode384=!!mode384;var h0,h1,h2,h3,h4,h5,h6,h7;if(!mode384){h0=new Word64(0x6a09e667,0xf3bcc908);h1=new Word64(0xbb67ae85,0x84caa73b);h2=new Word64(0x3c6ef372,0xfe94f82b);h3=new Word64(0xa54ff53a,0x5f1d36f1);h4=new Word64(0x510e527f,0xade682d1);h5=new Word64(0x9b05688c,0x2b3e6c1f);h6=new Word64(0x1f83d9ab,0xfb41bd6b);h7=new Word64(0x5be0cd19,0x137e2179);}else{h0=new Word64(0xcbbb9d5d,0xc1059ed8);h1=new Word64(0x629a292a,0x367cd507);h2=new Word64(0x9159015a,0x3070dd17);h3=new Word64(0x152fecd8,0xf70e5939);h4=new Word64(0x67332667,0xffc00b31);h5=new Word64(0x8eb44a87,0x68581511);h6=new Word64(0xdb0c2e0d,0x64f98fa7);h7=new Word64(0x47b5481d,0xbefa4fa4);}var paddedLength=Math.ceil((length+17)/128)*128;var padded=new Uint8Array(paddedLength);var i,j,n;for(i=0;i<length;++i){padded[i]=data[offset++];}padded[i++]=0x80;n=paddedLength-16;while(i<n){padded[i++]=0;}padded[i++]=0;padded[i++]=0;padded[i++]=0;padded[i++]=0;padded[i++]=0;padded[i++]=0;padded[i++]=0;padded[i++]=0;padded[i++]=0;padded[i++]=0;padded[i++]=0;padded[i++]=length>>>29&0xFF;padded[i++]=length>>21&0xFF;padded[i++]=length>>13&0xFF;padded[i++]=length>>5&0xFF;padded[i++]=length<<3&0xFF;var w=new Array(80);for(i=0;i<80;i++){w[i]=new Word64(0,0);}var a=new Word64(0,0),b=new Word64(0,0),c=new Word64(0,0);var d=new Word64(0,0),e=new Word64(0,0),f=new Word64(0,0);var g=new Word64(0,0),h=new Word64(0,0);var t1=new Word64(0,0),t2=new Word64(0,0);var tmp1=new Word64(0,0),tmp2=new Word64(0,0),tmp3;for(i=0;i<paddedLength;){for(j=0;j<16;++j){w[j].high=padded[i]<<24|padded[i+1]<<16|padded[i+2]<<8|padded[i+3];w[j].low=padded[i+4]<<24|padded[i+5]<<16|padded[i+6]<<8|padded[i+7];i+=8;}for(j=16;j<80;++j){tmp3=w[j];littleSigmaPrime(tmp3,w[j-2],tmp2);tmp3.add(w[j-7]);littleSigma(tmp1,w[j-15],tmp2);tmp3.add(tmp1);tmp3.add(w[j-16]);}a.assign(h0);b.assign(h1);c.assign(h2);d.assign(h3);e.assign(h4);f.assign(h5);g.assign(h6);h.assign(h7);for(j=0;j<80;++j){t1.assign(h);sigmaPrime(tmp1,e,tmp2);t1.add(tmp1);ch(tmp1,e,f,g,tmp2);t1.add(tmp1);t1.add(k[j]);t1.add(w[j]);sigma(t2,a,tmp2);maj(tmp1,a,b,c,tmp2);t2.add(tmp1);tmp3=h;h=g;g=f;f=e;d.add(t1);e=d;d=c;c=b;b=a;tmp3.assign(t1);tmp3.add(t2);a=tmp3;}h0.add(a);h1.add(b);h2.add(c);h3.add(d);h4.add(e);h5.add(f);h6.add(g);h7.add(h);}var result;if(!mode384){result=new Uint8Array(64);h0.copyTo(result,0);h1.copyTo(result,8);h2.copyTo(result,16);h3.copyTo(result,24);h4.copyTo(result,32);h5.copyTo(result,40);h6.copyTo(result,48);h7.copyTo(result,56);}else{result=new Uint8Array(48);h0.copyTo(result,0);h1.copyTo(result,8);h2.copyTo(result,16);h3.copyTo(result,24);h4.copyTo(result,32);h5.copyTo(result,40);}return result;}return hash;}();var calculateSHA384=function calculateSHA384Closure(){function hash(data,offset,length){return calculateSHA512(data,offset,length,true);}return hash;}();var NullCipher=function NullCipherClosure(){function NullCipher(){}NullCipher.prototype={decryptBlock:function NullCipher_decryptBlock(data){return data;}};return NullCipher;}();var AESBaseCipher=function(){function AESBaseCipher(){_classCallCheck(this,AESBaseCipher);if(this.constructor===AESBaseCipher){(0,_util.unreachable)('Cannot initialize AESBaseCipher.');}this._s=new Uint8Array([0x63,0x7c,0x77,0x7b,0xf2,0x6b,0x6f,0xc5,0x30,0x01,0x67,0x2b,0xfe,0xd7,0xab,0x76,0xca,0x82,0xc9,0x7d,0xfa,0x59,0x47,0xf0,0xad,0xd4,0xa2,0xaf,0x9c,0xa4,0x72,0xc0,0xb7,0xfd,0x93,0x26,0x36,0x3f,0xf7,0xcc,0x34,0xa5,0xe5,0xf1,0x71,0xd8,0x31,0x15,0x04,0xc7,0x23,0xc3,0x18,0x96,0x05,0x9a,0x07,0x12,0x80,0xe2,0xeb,0x27,0xb2,0x75,0x09,0x83,0x2c,0x1a,0x1b,0x6e,0x5a,0xa0,0x52,0x3b,0xd6,0xb3,0x29,0xe3,0x2f,0x84,0x53,0xd1,0x00,0xed,0x20,0xfc,0xb1,0x5b,0x6a,0xcb,0xbe,0x39,0x4a,0x4c,0x58,0xcf,0xd0,0xef,0xaa,0xfb,0x43,0x4d,0x33,0x85,0x45,0xf9,0x02,0x7f,0x50,0x3c,0x9f,0xa8,0x51,0xa3,0x40,0x8f,0x92,0x9d,0x38,0xf5,0xbc,0xb6,0xda,0x21,0x10,0xff,0xf3,0xd2,0xcd,0x0c,0x13,0xec,0x5f,0x97,0x44,0x17,0xc4,0xa7,0x7e,0x3d,0x64,0x5d,0x19,0x73,0x60,0x81,0x4f,0xdc,0x22,0x2a,0x90,0x88,0x46,0xee,0xb8,0x14,0xde,0x5e,0x0b,0xdb,0xe0,0x32,0x3a,0x0a,0x49,0x06,0x24,0x5c,0xc2,0xd3,0xac,0x62,0x91,0x95,0xe4,0x79,0xe7,0xc8,0x37,0x6d,0x8d,0xd5,0x4e,0xa9,0x6c,0x56,0xf4,0xea,0x65,0x7a,0xae,0x08,0xba,0x78,0x25,0x2e,0x1c,0xa6,0xb4,0xc6,0xe8,0xdd,0x74,0x1f,0x4b,0xbd,0x8b,0x8a,0x70,0x3e,0xb5,0x66,0x48,0x03,0xf6,0x0e,0x61,0x35,0x57,0xb9,0x86,0xc1,0x1d,0x9e,0xe1,0xf8,0x98,0x11,0x69,0xd9,0x8e,0x94,0x9b,0x1e,0x87,0xe9,0xce,0x55,0x28,0xdf,0x8c,0xa1,0x89,0x0d,0xbf,0xe6,0x42,0x68,0x41,0x99,0x2d,0x0f,0xb0,0x54,0xbb,0x16]);this._inv_s=new Uint8Array([0x52,0x09,0x6a,0xd5,0x30,0x36,0xa5,0x38,0xbf,0x40,0xa3,0x9e,0x81,0xf3,0xd7,0xfb,0x7c,0xe3,0x39,0x82,0x9b,0x2f,0xff,0x87,0x34,0x8e,0x43,0x44,0xc4,0xde,0xe9,0xcb,0x54,0x7b,0x94,0x32,0xa6,0xc2,0x23,0x3d,0xee,0x4c,0x95,0x0b,0x42,0xfa,0xc3,0x4e,0x08,0x2e,0xa1,0x66,0x28,0xd9,0x24,0xb2,0x76,0x5b,0xa2,0x49,0x6d,0x8b,0xd1,0x25,0x72,0xf8,0xf6,0x64,0x86,0x68,0x98,0x16,0xd4,0xa4,0x5c,0xcc,0x5d,0x65,0xb6,0x92,0x6c,0x70,0x48,0x50,0xfd,0xed,0xb9,0xda,0x5e,0x15,0x46,0x57,0xa7,0x8d,0x9d,0x84,0x90,0xd8,0xab,0x00,0x8c,0xbc,0xd3,0x0a,0xf7,0xe4,0x58,0x05,0xb8,0xb3,0x45,0x06,0xd0,0x2c,0x1e,0x8f,0xca,0x3f,0x0f,0x02,0xc1,0xaf,0xbd,0x03,0x01,0x13,0x8a,0x6b,0x3a,0x91,0x11,0x41,0x4f,0x67,0xdc,0xea,0x97,0xf2,0xcf,0xce,0xf0,0xb4,0xe6,0x73,0x96,0xac,0x74,0x22,0xe7,0xad,0x35,0x85,0xe2,0xf9,0x37,0xe8,0x1c,0x75,0xdf,0x6e,0x47,0xf1,0x1a,0x71,0x1d,0x29,0xc5,0x89,0x6f,0xb7,0x62,0x0e,0xaa,0x18,0xbe,0x1b,0xfc,0x56,0x3e,0x4b,0xc6,0xd2,0x79,0x20,0x9a,0xdb,0xc0,0xfe,0x78,0xcd,0x5a,0xf4,0x1f,0xdd,0xa8,0x33,0x88,0x07,0xc7,0x31,0xb1,0x12,0x10,0x59,0x27,0x80,0xec,0x5f,0x60,0x51,0x7f,0xa9,0x19,0xb5,0x4a,0x0d,0x2d,0xe5,0x7a,0x9f,0x93,0xc9,0x9c,0xef,0xa0,0xe0,0x3b,0x4d,0xae,0x2a,0xf5,0xb0,0xc8,0xeb,0xbb,0x3c,0x83,0x53,0x99,0x61,0x17,0x2b,0x04,0x7e,0xba,0x77,0xd6,0x26,0xe1,0x69,0x14,0x63,0x55,0x21,0x0c,0x7d]);this._mix=new Uint32Array([0x00000000,0x0e090d0b,0x1c121a16,0x121b171d,0x3824342c,0x362d3927,0x24362e3a,0x2a3f2331,0x70486858,0x7e416553,0x6c5a724e,0x62537f45,0x486c5c74,0x4665517f,0x547e4662,0x5a774b69,0xe090d0b0,0xee99ddbb,0xfc82caa6,0xf28bc7ad,0xd8b4e49c,0xd6bde997,0xc4a6fe8a,0xcaaff381,0x90d8b8e8,0x9ed1b5e3,0x8ccaa2fe,0x82c3aff5,0xa8fc8cc4,0xa6f581cf,0xb4ee96d2,0xbae79bd9,0xdb3bbb7b,0xd532b670,0xc729a16d,0xc920ac66,0xe31f8f57,0xed16825c,0xff0d9541,0xf104984a,0xab73d323,0xa57ade28,0xb761c935,0xb968c43e,0x9357e70f,0x9d5eea04,0x8f45fd19,0x814cf012,0x3bab6bcb,0x35a266c0,0x27b971dd,0x29b07cd6,0x038f5fe7,0x0d8652ec,0x1f9d45f1,0x119448fa,0x4be30393,0x45ea0e98,0x57f11985,0x59f8148e,0x73c737bf,0x7dce3ab4,0x6fd52da9,0x61dc20a2,0xad766df6,0xa37f60fd,0xb16477e0,0xbf6d7aeb,0x955259da,0x9b5b54d1,0x894043cc,0x87494ec7,0xdd3e05ae,0xd33708a5,0xc12c1fb8,0xcf2512b3,0xe51a3182,0xeb133c89,0xf9082b94,0xf701269f,0x4de6bd46,0x43efb04d,0x51f4a750,0x5ffdaa5b,0x75c2896a,0x7bcb8461,0x69d0937c,0x67d99e77,0x3daed51e,0x33a7d815,0x21bccf08,0x2fb5c203,0x058ae132,0x0b83ec39,0x1998fb24,0x1791f62f,0x764dd68d,0x7844db86,0x6a5fcc9b,0x6456c190,0x4e69e2a1,0x4060efaa,0x527bf8b7,0x5c72f5bc,0x0605bed5,0x080cb3de,0x1a17a4c3,0x141ea9c8,0x3e218af9,0x302887f2,0x223390ef,0x2c3a9de4,0x96dd063d,0x98d40b36,0x8acf1c2b,0x84c61120,0xaef93211,0xa0f03f1a,0xb2eb2807,0xbce2250c,0xe6956e65,0xe89c636e,0xfa877473,0xf48e7978,0xdeb15a49,0xd0b85742,0xc2a3405f,0xccaa4d54,0x41ecdaf7,0x4fe5d7fc,0x5dfec0e1,0x53f7cdea,0x79c8eedb,0x77c1e3d0,0x65daf4cd,0x6bd3f9c6,0x31a4b2af,0x3fadbfa4,0x2db6a8b9,0x23bfa5b2,0x09808683,0x07898b88,0x15929c95,0x1b9b919e,0xa17c0a47,0xaf75074c,0xbd6e1051,0xb3671d5a,0x99583e6b,0x97513360,0x854a247d,0x8b432976,0xd134621f,0xdf3d6f14,0xcd267809,0xc32f7502,0xe9105633,0xe7195b38,0xf5024c25,0xfb0b412e,0x9ad7618c,0x94de6c87,0x86c57b9a,0x88cc7691,0xa2f355a0,0xacfa58ab,0xbee14fb6,0xb0e842bd,0xea9f09d4,0xe49604df,0xf68d13c2,0xf8841ec9,0xd2bb3df8,0xdcb230f3,0xcea927ee,0xc0a02ae5,0x7a47b13c,0x744ebc37,0x6655ab2a,0x685ca621,0x42638510,0x4c6a881b,0x5e719f06,0x5078920d,0x0a0fd964,0x0406d46f,0x161dc372,0x1814ce79,0x322bed48,0x3c22e043,0x2e39f75e,0x2030fa55,0xec9ab701,0xe293ba0a,0xf088ad17,0xfe81a01c,0xd4be832d,0xdab78e26,0xc8ac993b,0xc6a59430,0x9cd2df59,0x92dbd252,0x80c0c54f,0x8ec9c844,0xa4f6eb75,0xaaffe67e,0xb8e4f163,0xb6edfc68,0x0c0a67b1,0x02036aba,0x10187da7,0x1e1170ac,0x342e539d,0x3a275e96,0x283c498b,0x26354480,0x7c420fe9,0x724b02e2,0x605015ff,0x6e5918f4,0x44663bc5,0x4a6f36ce,0x587421d3,0x567d2cd8,0x37a10c7a,0x39a80171,0x2bb3166c,0x25ba1b67,0x0f853856,0x018c355d,0x13972240,0x1d9e2f4b,0x47e96422,0x49e06929,0x5bfb7e34,0x55f2733f,0x7fcd500e,0x71c45d05,0x63df4a18,0x6dd64713,0xd731dcca,0xd938d1c1,0xcb23c6dc,0xc52acbd7,0xef15e8e6,0xe11ce5ed,0xf307f2f0,0xfd0efffb,0xa779b492,0xa970b999,0xbb6bae84,0xb562a38f,0x9f5d80be,0x91548db5,0x834f9aa8,0x8d4697a3]);this._mixCol=new Uint8Array(256);for(var i=0;i<256;i++){if(i<128){this._mixCol[i]=i<<1;}else{this._mixCol[i]=i<<1^0x1b;}}this.buffer=new Uint8Array(16);this.bufferPosition=0;}_createClass(AESBaseCipher,[{key:'_expandKey',value:function _expandKey(cipherKey){(0,_util.unreachable)('Cannot call `_expandKey` on the base class');}},{key:'_decrypt',value:function _decrypt(input,key){var t=void 0,u=void 0,v=void 0;var state=new Uint8Array(16);state.set(input);for(var j=0,k=this._keySize;j<16;++j,++k){state[j]^=key[k];}for(var i=this._cyclesOfRepetition-1;i>=1;--i){t=state[13];state[13]=state[9];state[9]=state[5];state[5]=state[1];state[1]=t;t=state[14];u=state[10];state[14]=state[6];state[10]=state[2];state[6]=t;state[2]=u;t=state[15];u=state[11];v=state[7];state[15]=state[3];state[11]=t;state[7]=u;state[3]=v;for(var _j=0;_j<16;++_j){state[_j]=this._inv_s[state[_j]];}for(var _j2=0,_k=i*16;_j2<16;++_j2,++_k){state[_j2]^=key[_k];}for(var _j3=0;_j3<16;_j3+=4){var s0=this._mix[state[_j3]];var s1=this._mix[state[_j3+1]];var s2=this._mix[state[_j3+2]];var s3=this._mix[state[_j3+3]];t=s0^s1>>>8^s1<<24^s2>>>16^s2<<16^s3>>>24^s3<<8;state[_j3]=t>>>24&0xFF;state[_j3+1]=t>>16&0xFF;state[_j3+2]=t>>8&0xFF;state[_j3+3]=t&0xFF;}}t=state[13];state[13]=state[9];state[9]=state[5];state[5]=state[1];state[1]=t;t=state[14];u=state[10];state[14]=state[6];state[10]=state[2];state[6]=t;state[2]=u;t=state[15];u=state[11];v=state[7];state[15]=state[3];state[11]=t;state[7]=u;state[3]=v;for(var _j4=0;_j4<16;++_j4){state[_j4]=this._inv_s[state[_j4]];state[_j4]^=key[_j4];}return state;}},{key:'_encrypt',value:function _encrypt(input,key){var s=this._s;var t=void 0,u=void 0,v=void 0;var state=new Uint8Array(16);state.set(input);for(var j=0;j<16;++j){state[j]^=key[j];}for(var i=1;i<this._cyclesOfRepetition;i++){for(var _j5=0;_j5<16;++_j5){state[_j5]=s[state[_j5]];}v=state[1];state[1]=state[5];state[5]=state[9];state[9]=state[13];state[13]=v;v=state[2];u=state[6];state[2]=state[10];state[6]=state[14];state[10]=v;state[14]=u;v=state[3];u=state[7];t=state[11];state[3]=state[15];state[7]=v;state[11]=u;state[15]=t;for(var _j6=0;_j6<16;_j6+=4){var s0=state[_j6+0];var s1=state[_j6+1];var s2=state[_j6+2];var s3=state[_j6+3];t=s0^s1^s2^s3;state[_j6+0]^=t^this._mixCol[s0^s1];state[_j6+1]^=t^this._mixCol[s1^s2];state[_j6+2]^=t^this._mixCol[s2^s3];state[_j6+3]^=t^this._mixCol[s3^s0];}for(var _j7=0,k=i*16;_j7<16;++_j7,++k){state[_j7]^=key[k];}}for(var _j8=0;_j8<16;++_j8){state[_j8]=s[state[_j8]];}v=state[1];state[1]=state[5];state[5]=state[9];state[9]=state[13];state[13]=v;v=state[2];u=state[6];state[2]=state[10];state[6]=state[14];state[10]=v;state[14]=u;v=state[3];u=state[7];t=state[11];state[3]=state[15];state[7]=v;state[11]=u;state[15]=t;for(var _j9=0,_k2=this._keySize;_j9<16;++_j9,++_k2){state[_j9]^=key[_k2];}return state;}},{key:'_decryptBlock2',value:function _decryptBlock2(data,finalize){var sourceLength=data.length;var buffer=this.buffer,bufferLength=this.bufferPosition;var result=[],iv=this.iv;for(var i=0;i<sourceLength;++i){buffer[bufferLength]=data[i];++bufferLength;if(bufferLength<16){continue;}var plain=this._decrypt(buffer,this._key);for(var j=0;j<16;++j){plain[j]^=iv[j];}iv=buffer;result.push(plain);buffer=new Uint8Array(16);bufferLength=0;}this.buffer=buffer;this.bufferLength=bufferLength;this.iv=iv;if(result.length===0){return new Uint8Array(0);}var outputLength=16*result.length;if(finalize){var lastBlock=result[result.length-1];var psLen=lastBlock[15];if(psLen<=16){for(var _i=15,ii=16-psLen;_i>=ii;--_i){if(lastBlock[_i]!==psLen){psLen=0;break;}}outputLength-=psLen;result[result.length-1]=lastBlock.subarray(0,16-psLen);}}var output=new Uint8Array(outputLength);for(var _i2=0,_j10=0,_ii=result.length;_i2<_ii;++_i2,_j10+=16){output.set(result[_i2],_j10);}return output;}},{key:'decryptBlock',value:function decryptBlock(data,finalize){var iv=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var sourceLength=data.length;var buffer=this.buffer,bufferLength=this.bufferPosition;if(iv){this.iv=iv;}else{for(var i=0;bufferLength<16&&i<sourceLength;++i,++bufferLength){buffer[bufferLength]=data[i];}if(bufferLength<16){this.bufferLength=bufferLength;return new Uint8Array(0);}this.iv=buffer;data=data.subarray(16);}this.buffer=new Uint8Array(16);this.bufferLength=0;this.decryptBlock=this._decryptBlock2;return this.decryptBlock(data,finalize);}},{key:'encrypt',value:function encrypt(data,iv){var sourceLength=data.length;var buffer=this.buffer,bufferLength=this.bufferPosition;var result=[];if(!iv){iv=new Uint8Array(16);}for(var i=0;i<sourceLength;++i){buffer[bufferLength]=data[i];++bufferLength;if(bufferLength<16){continue;}for(var j=0;j<16;++j){buffer[j]^=iv[j];}var cipher=this._encrypt(buffer,this._key);iv=cipher;result.push(cipher);buffer=new Uint8Array(16);bufferLength=0;}this.buffer=buffer;this.bufferLength=bufferLength;this.iv=iv;if(result.length===0){return new Uint8Array(0);}var outputLength=16*result.length;var output=new Uint8Array(outputLength);for(var _i3=0,_j11=0,ii=result.length;_i3<ii;++_i3,_j11+=16){output.set(result[_i3],_j11);}return output;}}]);return AESBaseCipher;}();var AES128Cipher=function(_AESBaseCipher){_inherits(AES128Cipher,_AESBaseCipher);function AES128Cipher(key){_classCallCheck(this,AES128Cipher);var _this=_possibleConstructorReturn(this,(AES128Cipher.__proto__||Object.getPrototypeOf(AES128Cipher)).call(this));_this._cyclesOfRepetition=10;_this._keySize=160;_this._rcon=new Uint8Array([0x8d,0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80,0x1b,0x36,0x6c,0xd8,0xab,0x4d,0x9a,0x2f,0x5e,0xbc,0x63,0xc6,0x97,0x35,0x6a,0xd4,0xb3,0x7d,0xfa,0xef,0xc5,0x91,0x39,0x72,0xe4,0xd3,0xbd,0x61,0xc2,0x9f,0x25,0x4a,0x94,0x33,0x66,0xcc,0x83,0x1d,0x3a,0x74,0xe8,0xcb,0x8d,0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80,0x1b,0x36,0x6c,0xd8,0xab,0x4d,0x9a,0x2f,0x5e,0xbc,0x63,0xc6,0x97,0x35,0x6a,0xd4,0xb3,0x7d,0xfa,0xef,0xc5,0x91,0x39,0x72,0xe4,0xd3,0xbd,0x61,0xc2,0x9f,0x25,0x4a,0x94,0x33,0x66,0xcc,0x83,0x1d,0x3a,0x74,0xe8,0xcb,0x8d,0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80,0x1b,0x36,0x6c,0xd8,0xab,0x4d,0x9a,0x2f,0x5e,0xbc,0x63,0xc6,0x97,0x35,0x6a,0xd4,0xb3,0x7d,0xfa,0xef,0xc5,0x91,0x39,0x72,0xe4,0xd3,0xbd,0x61,0xc2,0x9f,0x25,0x4a,0x94,0x33,0x66,0xcc,0x83,0x1d,0x3a,0x74,0xe8,0xcb,0x8d,0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80,0x1b,0x36,0x6c,0xd8,0xab,0x4d,0x9a,0x2f,0x5e,0xbc,0x63,0xc6,0x97,0x35,0x6a,0xd4,0xb3,0x7d,0xfa,0xef,0xc5,0x91,0x39,0x72,0xe4,0xd3,0xbd,0x61,0xc2,0x9f,0x25,0x4a,0x94,0x33,0x66,0xcc,0x83,0x1d,0x3a,0x74,0xe8,0xcb,0x8d,0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80,0x1b,0x36,0x6c,0xd8,0xab,0x4d,0x9a,0x2f,0x5e,0xbc,0x63,0xc6,0x97,0x35,0x6a,0xd4,0xb3,0x7d,0xfa,0xef,0xc5,0x91,0x39,0x72,0xe4,0xd3,0xbd,0x61,0xc2,0x9f,0x25,0x4a,0x94,0x33,0x66,0xcc,0x83,0x1d,0x3a,0x74,0xe8,0xcb,0x8d]);_this._key=_this._expandKey(key);return _this;}_createClass(AES128Cipher,[{key:'_expandKey',value:function _expandKey(cipherKey){var b=176;var s=this._s;var rcon=this._rcon;var result=new Uint8Array(b);result.set(cipherKey);for(var j=16,i=1;j<b;++i){var t1=result[j-3];var t2=result[j-2];var t3=result[j-1];var t4=result[j-4];t1=s[t1];t2=s[t2];t3=s[t3];t4=s[t4];t1=t1^rcon[i];for(var n=0;n<4;++n){result[j]=t1^=result[j-16];j++;result[j]=t2^=result[j-16];j++;result[j]=t3^=result[j-16];j++;result[j]=t4^=result[j-16];j++;}}return result;}}]);return AES128Cipher;}(AESBaseCipher);var AES256Cipher=function(_AESBaseCipher2){_inherits(AES256Cipher,_AESBaseCipher2);function AES256Cipher(key){_classCallCheck(this,AES256Cipher);var _this2=_possibleConstructorReturn(this,(AES256Cipher.__proto__||Object.getPrototypeOf(AES256Cipher)).call(this));_this2._cyclesOfRepetition=14;_this2._keySize=224;_this2._key=_this2._expandKey(key);return _this2;}_createClass(AES256Cipher,[{key:'_expandKey',value:function _expandKey(cipherKey){var b=240;var s=this._s;var result=new Uint8Array(b);result.set(cipherKey);var r=1;var t1=void 0,t2=void 0,t3=void 0,t4=void 0;for(var j=32,i=1;j<b;++i){if(j%32===16){t1=s[t1];t2=s[t2];t3=s[t3];t4=s[t4];}else if(j%32===0){t1=result[j-3];t2=result[j-2];t3=result[j-1];t4=result[j-4];t1=s[t1];t2=s[t2];t3=s[t3];t4=s[t4];t1=t1^r;if((r<<=1)>=256){r=(r^0x1b)&0xFF;}}for(var n=0;n<4;++n){result[j]=t1^=result[j-32];j++;result[j]=t2^=result[j-32];j++;result[j]=t3^=result[j-32];j++;result[j]=t4^=result[j-32];j++;}}return result;}}]);return AES256Cipher;}(AESBaseCipher);var PDF17=function PDF17Closure(){function compareByteArrays(array1,array2){if(array1.length!==array2.length){return false;}for(var i=0;i<array1.length;i++){if(array1[i]!==array2[i]){return false;}}return true;}function PDF17(){}PDF17.prototype={checkOwnerPassword:function PDF17_checkOwnerPassword(password,ownerValidationSalt,userBytes,ownerPassword){var hashData=new Uint8Array(password.length+56);hashData.set(password,0);hashData.set(ownerValidationSalt,password.length);hashData.set(userBytes,password.length+ownerValidationSalt.length);var result=calculateSHA256(hashData,0,hashData.length);return compareByteArrays(result,ownerPassword);},checkUserPassword:function PDF17_checkUserPassword(password,userValidationSalt,userPassword){var hashData=new Uint8Array(password.length+8);hashData.set(password,0);hashData.set(userValidationSalt,password.length);var result=calculateSHA256(hashData,0,hashData.length);return compareByteArrays(result,userPassword);},getOwnerKey:function PDF17_getOwnerKey(password,ownerKeySalt,userBytes,ownerEncryption){var hashData=new Uint8Array(password.length+56);hashData.set(password,0);hashData.set(ownerKeySalt,password.length);hashData.set(userBytes,password.length+ownerKeySalt.length);var key=calculateSHA256(hashData,0,hashData.length);var cipher=new AES256Cipher(key);return cipher.decryptBlock(ownerEncryption,false,new Uint8Array(16));},getUserKey:function PDF17_getUserKey(password,userKeySalt,userEncryption){var hashData=new Uint8Array(password.length+8);hashData.set(password,0);hashData.set(userKeySalt,password.length);var key=calculateSHA256(hashData,0,hashData.length);var cipher=new AES256Cipher(key);return cipher.decryptBlock(userEncryption,false,new Uint8Array(16));}};return PDF17;}();var PDF20=function PDF20Closure(){function concatArrays(array1,array2){var t=new Uint8Array(array1.length+array2.length);t.set(array1,0);t.set(array2,array1.length);return t;}function calculatePDF20Hash(password,input,userBytes){var k=calculateSHA256(input,0,input.length).subarray(0,32);var e=[0];var i=0;while(i<64||e[e.length-1]>i-32){var arrayLength=password.length+k.length+userBytes.length;var k1=new Uint8Array(arrayLength*64);var array=concatArrays(password,k);array=concatArrays(array,userBytes);for(var j=0,pos=0;j<64;j++,pos+=arrayLength){k1.set(array,pos);}var cipher=new AES128Cipher(k.subarray(0,16));e=cipher.encrypt(k1,k.subarray(16,32));var remainder=0;for(var z=0;z<16;z++){remainder*=256%3;remainder%=3;remainder+=(e[z]>>>0)%3;remainder%=3;}if(remainder===0){k=calculateSHA256(e,0,e.length);}else if(remainder===1){k=calculateSHA384(e,0,e.length);}else if(remainder===2){k=calculateSHA512(e,0,e.length);}i++;}return k.subarray(0,32);}function PDF20(){}function compareByteArrays(array1,array2){if(array1.length!==array2.length){return false;}for(var i=0;i<array1.length;i++){if(array1[i]!==array2[i]){return false;}}return true;}PDF20.prototype={hash:function PDF20_hash(password,concatBytes,userBytes){return calculatePDF20Hash(password,concatBytes,userBytes);},checkOwnerPassword:function PDF20_checkOwnerPassword(password,ownerValidationSalt,userBytes,ownerPassword){var hashData=new Uint8Array(password.length+56);hashData.set(password,0);hashData.set(ownerValidationSalt,password.length);hashData.set(userBytes,password.length+ownerValidationSalt.length);var result=calculatePDF20Hash(password,hashData,userBytes);return compareByteArrays(result,ownerPassword);},checkUserPassword:function PDF20_checkUserPassword(password,userValidationSalt,userPassword){var hashData=new Uint8Array(password.length+8);hashData.set(password,0);hashData.set(userValidationSalt,password.length);var result=calculatePDF20Hash(password,hashData,[]);return compareByteArrays(result,userPassword);},getOwnerKey:function PDF20_getOwnerKey(password,ownerKeySalt,userBytes,ownerEncryption){var hashData=new Uint8Array(password.length+56);hashData.set(password,0);hashData.set(ownerKeySalt,password.length);hashData.set(userBytes,password.length+ownerKeySalt.length);var key=calculatePDF20Hash(password,hashData,userBytes);var cipher=new AES256Cipher(key);return cipher.decryptBlock(ownerEncryption,false,new Uint8Array(16));},getUserKey:function PDF20_getUserKey(password,userKeySalt,userEncryption){var hashData=new Uint8Array(password.length+8);hashData.set(password,0);hashData.set(userKeySalt,password.length);var key=calculatePDF20Hash(password,hashData,[]);var cipher=new AES256Cipher(key);return cipher.decryptBlock(userEncryption,false,new Uint8Array(16));}};return PDF20;}();var CipherTransform=function CipherTransformClosure(){function CipherTransform(stringCipherConstructor,streamCipherConstructor){this.StringCipherConstructor=stringCipherConstructor;this.StreamCipherConstructor=streamCipherConstructor;}CipherTransform.prototype={createStream:function CipherTransform_createStream(stream,length){var cipher=new this.StreamCipherConstructor();return new _stream.DecryptStream(stream,length,function cipherTransformDecryptStream(data,finalize){return cipher.decryptBlock(data,finalize);});},decryptString:function CipherTransform_decryptString(s){var cipher=new this.StringCipherConstructor();var data=(0,_util.stringToBytes)(s);data=cipher.decryptBlock(data,true);return(0,_util.bytesToString)(data);}};return CipherTransform;}();var CipherTransformFactory=function CipherTransformFactoryClosure(){var defaultPasswordBytes=new Uint8Array([0x28,0xBF,0x4E,0x5E,0x4E,0x75,0x8A,0x41,0x64,0x00,0x4E,0x56,0xFF,0xFA,0x01,0x08,0x2E,0x2E,0x00,0xB6,0xD0,0x68,0x3E,0x80,0x2F,0x0C,0xA9,0xFE,0x64,0x53,0x69,0x7A]);function createEncryptionKey20(revision,password,ownerPassword,ownerValidationSalt,ownerKeySalt,uBytes,userPassword,userValidationSalt,userKeySalt,ownerEncryption,userEncryption,perms){if(password){var passwordLength=Math.min(127,password.length);password=password.subarray(0,passwordLength);}else{password=[];}var pdfAlgorithm;if(revision===6){pdfAlgorithm=new PDF20();}else{pdfAlgorithm=new PDF17();}if(pdfAlgorithm.checkUserPassword(password,userValidationSalt,userPassword)){return pdfAlgorithm.getUserKey(password,userKeySalt,userEncryption);}else if(password.length&&pdfAlgorithm.checkOwnerPassword(password,ownerValidationSalt,uBytes,ownerPassword)){return pdfAlgorithm.getOwnerKey(password,ownerKeySalt,uBytes,ownerEncryption);}return null;}function prepareKeyData(fileId,password,ownerPassword,userPassword,flags,revision,keyLength,encryptMetadata){var hashDataSize=40+ownerPassword.length+fileId.length;var hashData=new Uint8Array(hashDataSize),i=0,j,n;if(password){n=Math.min(32,password.length);for(;i<n;++i){hashData[i]=password[i];}}j=0;while(i<32){hashData[i++]=defaultPasswordBytes[j++];}for(j=0,n=ownerPassword.length;j<n;++j){hashData[i++]=ownerPassword[j];}hashData[i++]=flags&0xFF;hashData[i++]=flags>>8&0xFF;hashData[i++]=flags>>16&0xFF;hashData[i++]=flags>>>24&0xFF;for(j=0,n=fileId.length;j<n;++j){hashData[i++]=fileId[j];}if(revision>=4&&!encryptMetadata){hashData[i++]=0xFF;hashData[i++]=0xFF;hashData[i++]=0xFF;hashData[i++]=0xFF;}var hash=calculateMD5(hashData,0,i);var keyLengthInBytes=keyLength>>3;if(revision>=3){for(j=0;j<50;++j){hash=calculateMD5(hash,0,keyLengthInBytes);}}var encryptionKey=hash.subarray(0,keyLengthInBytes);var cipher,checkData;if(revision>=3){for(i=0;i<32;++i){hashData[i]=defaultPasswordBytes[i];}for(j=0,n=fileId.length;j<n;++j){hashData[i++]=fileId[j];}cipher=new ARCFourCipher(encryptionKey);checkData=cipher.encryptBlock(calculateMD5(hashData,0,i));n=encryptionKey.length;var derivedKey=new Uint8Array(n),k;for(j=1;j<=19;++j){for(k=0;k<n;++k){derivedKey[k]=encryptionKey[k]^j;}cipher=new ARCFourCipher(derivedKey);checkData=cipher.encryptBlock(checkData);}for(j=0,n=checkData.length;j<n;++j){if(userPassword[j]!==checkData[j]){return null;}}}else{cipher=new ARCFourCipher(encryptionKey);checkData=cipher.encryptBlock(defaultPasswordBytes);for(j=0,n=checkData.length;j<n;++j){if(userPassword[j]!==checkData[j]){return null;}}}return encryptionKey;}function decodeUserPassword(password,ownerPassword,revision,keyLength){var hashData=new Uint8Array(32),i=0,j,n;n=Math.min(32,password.length);for(;i<n;++i){hashData[i]=password[i];}j=0;while(i<32){hashData[i++]=defaultPasswordBytes[j++];}var hash=calculateMD5(hashData,0,i);var keyLengthInBytes=keyLength>>3;if(revision>=3){for(j=0;j<50;++j){hash=calculateMD5(hash,0,hash.length);}}var cipher,userPassword;if(revision>=3){userPassword=ownerPassword;var derivedKey=new Uint8Array(keyLengthInBytes),k;for(j=19;j>=0;j--){for(k=0;k<keyLengthInBytes;++k){derivedKey[k]=hash[k]^j;}cipher=new ARCFourCipher(derivedKey);userPassword=cipher.encryptBlock(userPassword);}}else{cipher=new ARCFourCipher(hash.subarray(0,keyLengthInBytes));userPassword=cipher.encryptBlock(ownerPassword);}return userPassword;}var identityName=_primitives.Name.get('Identity');function CipherTransformFactory(dict,fileId,password){var filter=dict.get('Filter');if(!(0,_primitives.isName)(filter,'Standard')){throw new _util.FormatError('unknown encryption method');}this.dict=dict;var algorithm=dict.get('V');if(!Number.isInteger(algorithm)||algorithm!==1&&algorithm!==2&&algorithm!==4&&algorithm!==5){throw new _util.FormatError('unsupported encryption algorithm');}this.algorithm=algorithm;var keyLength=dict.get('Length');if(!keyLength){if(algorithm<=3){keyLength=40;}else{var cfDict=dict.get('CF');var streamCryptoName=dict.get('StmF');if((0,_primitives.isDict)(cfDict)&&(0,_primitives.isName)(streamCryptoName)){cfDict.suppressEncryption=true;var handlerDict=cfDict.get(streamCryptoName.name);keyLength=handlerDict&&handlerDict.get('Length')||128;if(keyLength<40){keyLength<<=3;}}}}if(!Number.isInteger(keyLength)||keyLength<40||keyLength%8!==0){throw new _util.FormatError('invalid key length');}var ownerPassword=(0,_util.stringToBytes)(dict.get('O')).subarray(0,32);var userPassword=(0,_util.stringToBytes)(dict.get('U')).subarray(0,32);var flags=dict.get('P');var revision=dict.get('R');var encryptMetadata=(algorithm===4||algorithm===5)&&dict.get('EncryptMetadata')!==false;this.encryptMetadata=encryptMetadata;var fileIdBytes=(0,_util.stringToBytes)(fileId);var passwordBytes;if(password){if(revision===6){try{password=(0,_util.utf8StringToString)(password);}catch(ex){(0,_util.warn)('CipherTransformFactory: '+'Unable to convert UTF8 encoded password.');}}passwordBytes=(0,_util.stringToBytes)(password);}var encryptionKey;if(algorithm!==5){encryptionKey=prepareKeyData(fileIdBytes,passwordBytes,ownerPassword,userPassword,flags,revision,keyLength,encryptMetadata);}else{var ownerValidationSalt=(0,_util.stringToBytes)(dict.get('O')).subarray(32,40);var ownerKeySalt=(0,_util.stringToBytes)(dict.get('O')).subarray(40,48);var uBytes=(0,_util.stringToBytes)(dict.get('U')).subarray(0,48);var userValidationSalt=(0,_util.stringToBytes)(dict.get('U')).subarray(32,40);var userKeySalt=(0,_util.stringToBytes)(dict.get('U')).subarray(40,48);var ownerEncryption=(0,_util.stringToBytes)(dict.get('OE'));var userEncryption=(0,_util.stringToBytes)(dict.get('UE'));var perms=(0,_util.stringToBytes)(dict.get('Perms'));encryptionKey=createEncryptionKey20(revision,passwordBytes,ownerPassword,ownerValidationSalt,ownerKeySalt,uBytes,userPassword,userValidationSalt,userKeySalt,ownerEncryption,userEncryption,perms);}if(!encryptionKey&&!password){throw new _util.PasswordException('No password given',_util.PasswordResponses.NEED_PASSWORD);}else if(!encryptionKey&&password){var decodedPassword=decodeUserPassword(passwordBytes,ownerPassword,revision,keyLength);encryptionKey=prepareKeyData(fileIdBytes,decodedPassword,ownerPassword,userPassword,flags,revision,keyLength,encryptMetadata);}if(!encryptionKey){throw new _util.PasswordException('Incorrect Password',_util.PasswordResponses.INCORRECT_PASSWORD);}this.encryptionKey=encryptionKey;if(algorithm>=4){var cf=dict.get('CF');if((0,_primitives.isDict)(cf)){cf.suppressEncryption=true;}this.cf=cf;this.stmf=dict.get('StmF')||identityName;this.strf=dict.get('StrF')||identityName;this.eff=dict.get('EFF')||this.stmf;}}function buildObjectKey(num,gen,encryptionKey,isAes){var key=new Uint8Array(encryptionKey.length+9),i,n;for(i=0,n=encryptionKey.length;i<n;++i){key[i]=encryptionKey[i];}key[i++]=num&0xFF;key[i++]=num>>8&0xFF;key[i++]=num>>16&0xFF;key[i++]=gen&0xFF;key[i++]=gen>>8&0xFF;if(isAes){key[i++]=0x73;key[i++]=0x41;key[i++]=0x6C;key[i++]=0x54;}var hash=calculateMD5(key,0,i);return hash.subarray(0,Math.min(encryptionKey.length+5,16));}function buildCipherConstructor(cf,name,num,gen,key){if(!(0,_primitives.isName)(name)){throw new _util.FormatError('Invalid crypt filter name.');}var cryptFilter=cf.get(name.name);var cfm;if(cryptFilter!==null&&cryptFilter!==undefined){cfm=cryptFilter.get('CFM');}if(!cfm||cfm.name==='None'){return function cipherTransformFactoryBuildCipherConstructorNone(){return new NullCipher();};}if(cfm.name==='V2'){return function cipherTransformFactoryBuildCipherConstructorV2(){return new ARCFourCipher(buildObjectKey(num,gen,key,false));};}if(cfm.name==='AESV2'){return function cipherTransformFactoryBuildCipherConstructorAESV2(){return new AES128Cipher(buildObjectKey(num,gen,key,true));};}if(cfm.name==='AESV3'){return function cipherTransformFactoryBuildCipherConstructorAESV3(){return new AES256Cipher(key);};}throw new _util.FormatError('Unknown crypto method');}CipherTransformFactory.prototype={createCipherTransform:function CipherTransformFactory_createCipherTransform(num,gen){if(this.algorithm===4||this.algorithm===5){return new CipherTransform(buildCipherConstructor(this.cf,this.stmf,num,gen,this.encryptionKey),buildCipherConstructor(this.cf,this.strf,num,gen,this.encryptionKey));}var key=buildObjectKey(num,gen,this.encryptionKey,false);var cipherConstructor=function buildCipherCipherConstructor(){return new ARCFourCipher(key);};return new CipherTransform(cipherConstructor,cipherConstructor);}};return CipherTransformFactory;}();exports.AES128Cipher=AES128Cipher;exports.AES256Cipher=AES256Cipher;exports.ARCFourCipher=ARCFourCipher;exports.CipherTransformFactory=CipherTransformFactory;exports.PDF17=PDF17;exports.PDF20=PDF20;exports.calculateMD5=calculateMD5;exports.calculateSHA256=calculateSHA256;exports.calculateSHA384=calculateSHA384;exports.calculateSHA512=calculateSHA512;/***/},/* 151 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ColorSpace=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _util=__w_pdfjs_require__(2);var _primitives=__w_pdfjs_require__(138);function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(_typeof3(call)==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+_typeof3(superClass));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function resizeRgbImage(src,dest,w1,h1,w2,h2,alpha01){var COMPONENTS=3;alpha01=alpha01!==1?0:alpha01;var xRatio=w1/w2;var yRatio=h1/h2;var newIndex=0,oldIndex=void 0;var xScaled=new Uint16Array(w2);var w1Scanline=w1*COMPONENTS;for(var i=0;i<w2;i++){xScaled[i]=Math.floor(i*xRatio)*COMPONENTS;}for(var _i=0;_i<h2;_i++){var py=Math.floor(_i*yRatio)*w1Scanline;for(var j=0;j<w2;j++){oldIndex=py+xScaled[j];dest[newIndex++]=src[oldIndex++];dest[newIndex++]=src[oldIndex++];dest[newIndex++]=src[oldIndex++];newIndex+=alpha01;}}}var ColorSpace=function(){function ColorSpace(name,numComps){_classCallCheck(this,ColorSpace);if(this.constructor===ColorSpace){(0,_util.unreachable)('Cannot initialize ColorSpace.');}this.name=name;this.numComps=numComps;}_createClass(ColorSpace,[{key:'getRgb',value:function getRgb(src,srcOffset){var rgb=new Uint8ClampedArray(3);this.getRgbItem(src,srcOffset,rgb,0);return rgb;}},{key:'getRgbItem',value:function getRgbItem(src,srcOffset,dest,destOffset){(0,_util.unreachable)('Should not call ColorSpace.getRgbItem');}},{key:'getRgbBuffer',value:function getRgbBuffer(src,srcOffset,count,dest,destOffset,bits,alpha01){(0,_util.unreachable)('Should not call ColorSpace.getRgbBuffer');}},{key:'getOutputLength',value:function getOutputLength(inputLength,alpha01){(0,_util.unreachable)('Should not call ColorSpace.getOutputLength');}},{key:'isPassthrough',value:function isPassthrough(bits){return false;}},{key:'fillRgb',value:function fillRgb(dest,originalWidth,originalHeight,width,height,actualHeight,bpc,comps,alpha01){var count=originalWidth*originalHeight;var rgbBuf=null;var numComponentColors=1<<bpc;var needsResizing=originalHeight!==height||originalWidth!==width;if(this.isPassthrough(bpc)){rgbBuf=comps;}else if(this.numComps===1&&count>numComponentColors&&this.name!=='DeviceGray'&&this.name!=='DeviceRGB'){var allColors=bpc<=8?new Uint8Array(numComponentColors):new Uint16Array(numComponentColors);for(var i=0;i<numComponentColors;i++){allColors[i]=i;}var colorMap=new Uint8ClampedArray(numComponentColors*3);this.getRgbBuffer(allColors,0,numComponentColors,colorMap,0,bpc,0);if(!needsResizing){var destPos=0;for(var _i2=0;_i2<count;++_i2){var key=comps[_i2]*3;dest[destPos++]=colorMap[key];dest[destPos++]=colorMap[key+1];dest[destPos++]=colorMap[key+2];destPos+=alpha01;}}else{rgbBuf=new Uint8Array(count*3);var rgbPos=0;for(var _i3=0;_i3<count;++_i3){var _key=comps[_i3]*3;rgbBuf[rgbPos++]=colorMap[_key];rgbBuf[rgbPos++]=colorMap[_key+1];rgbBuf[rgbPos++]=colorMap[_key+2];}}}else{if(!needsResizing){this.getRgbBuffer(comps,0,width*actualHeight,dest,0,bpc,alpha01);}else{rgbBuf=new Uint8ClampedArray(count*3);this.getRgbBuffer(comps,0,count,rgbBuf,0,bpc,0);}}if(rgbBuf){if(needsResizing){resizeRgbImage(rgbBuf,dest,originalWidth,originalHeight,width,height,alpha01);}else{var _destPos=0,_rgbPos=0;for(var _i4=0,ii=width*actualHeight;_i4<ii;_i4++){dest[_destPos++]=rgbBuf[_rgbPos++];dest[_destPos++]=rgbBuf[_rgbPos++];dest[_destPos++]=rgbBuf[_rgbPos++];_destPos+=alpha01;}}}}},{key:'usesZeroToOneRange',get:function get(){return(0,_util.shadow)(this,'usesZeroToOneRange',true);}}],[{key:'parse',value:function parse(cs,xref,res,pdfFunctionFactory){var IR=this.parseToIR(cs,xref,res,pdfFunctionFactory);return this.fromIR(IR);}},{key:'fromIR',value:function fromIR(IR){var name=Array.isArray(IR)?IR[0]:IR;var whitePoint=void 0,blackPoint=void 0,gamma=void 0;switch(name){case'DeviceGrayCS':return this.singletons.gray;case'DeviceRgbCS':return this.singletons.rgb;case'DeviceCmykCS':return this.singletons.cmyk;case'CalGrayCS':whitePoint=IR[1];blackPoint=IR[2];gamma=IR[3];return new CalGrayCS(whitePoint,blackPoint,gamma);case'CalRGBCS':whitePoint=IR[1];blackPoint=IR[2];gamma=IR[3];var matrix=IR[4];return new CalRGBCS(whitePoint,blackPoint,gamma,matrix);case'PatternCS':var basePatternCS=IR[1];if(basePatternCS){basePatternCS=this.fromIR(basePatternCS);}return new PatternCS(basePatternCS);case'IndexedCS':var baseIndexedCS=IR[1];var hiVal=IR[2];var lookup=IR[3];return new IndexedCS(this.fromIR(baseIndexedCS),hiVal,lookup);case'AlternateCS':var numComps=IR[1];var alt=IR[2];var tintFn=IR[3];return new AlternateCS(numComps,this.fromIR(alt),tintFn);case'LabCS':whitePoint=IR[1];blackPoint=IR[2];var range=IR[3];return new LabCS(whitePoint,blackPoint,range);default:throw new _util.FormatError('Unknown colorspace name: '+name);}}},{key:'parseToIR',value:function parseToIR(cs,xref){var res=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var pdfFunctionFactory=arguments[3];cs=xref.fetchIfRef(cs);if((0,_primitives.isName)(cs)){switch(cs.name){case'DeviceGray':case'G':return'DeviceGrayCS';case'DeviceRGB':case'RGB':return'DeviceRgbCS';case'DeviceCMYK':case'CMYK':return'DeviceCmykCS';case'Pattern':return['PatternCS',null];default:if((0,_primitives.isDict)(res)){var colorSpaces=res.get('ColorSpace');if((0,_primitives.isDict)(colorSpaces)){var resCS=colorSpaces.get(cs.name);if(resCS){if((0,_primitives.isName)(resCS)){return this.parseToIR(resCS,xref,res,pdfFunctionFactory);}cs=resCS;break;}}}throw new _util.FormatError('unrecognized colorspace '+cs.name);}}if(Array.isArray(cs)){var mode=xref.fetchIfRef(cs[0]).name;var numComps=void 0,params=void 0,alt=void 0,whitePoint=void 0,blackPoint=void 0,gamma=void 0;switch(mode){case'DeviceGray':case'G':return'DeviceGrayCS';case'DeviceRGB':case'RGB':return'DeviceRgbCS';case'DeviceCMYK':case'CMYK':return'DeviceCmykCS';case'CalGray':params=xref.fetchIfRef(cs[1]);whitePoint=params.getArray('WhitePoint');blackPoint=params.getArray('BlackPoint');gamma=params.get('Gamma');return['CalGrayCS',whitePoint,blackPoint,gamma];case'CalRGB':params=xref.fetchIfRef(cs[1]);whitePoint=params.getArray('WhitePoint');blackPoint=params.getArray('BlackPoint');gamma=params.getArray('Gamma');var matrix=params.getArray('Matrix');return['CalRGBCS',whitePoint,blackPoint,gamma,matrix];case'ICCBased':var stream=xref.fetchIfRef(cs[1]);var dict=stream.dict;numComps=dict.get('N');alt=dict.get('Alternate');if(alt){var altIR=this.parseToIR(alt,xref,res,pdfFunctionFactory);var altCS=this.fromIR(altIR,pdfFunctionFactory);if(altCS.numComps===numComps){return altIR;}(0,_util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');}if(numComps===1){return'DeviceGrayCS';}else if(numComps===3){return'DeviceRgbCS';}else if(numComps===4){return'DeviceCmykCS';}break;case'Pattern':var basePatternCS=cs[1]||null;if(basePatternCS){basePatternCS=this.parseToIR(basePatternCS,xref,res,pdfFunctionFactory);}return['PatternCS',basePatternCS];case'Indexed':case'I':var baseIndexedCS=this.parseToIR(cs[1],xref,res,pdfFunctionFactory);var hiVal=xref.fetchIfRef(cs[2])+1;var lookup=xref.fetchIfRef(cs[3]);if((0,_primitives.isStream)(lookup)){lookup=lookup.getBytes();}return['IndexedCS',baseIndexedCS,hiVal,lookup];case'Separation':case'DeviceN':var name=xref.fetchIfRef(cs[1]);numComps=Array.isArray(name)?name.length:1;alt=this.parseToIR(cs[2],xref,res,pdfFunctionFactory);var tintFn=pdfFunctionFactory.create(xref.fetchIfRef(cs[3]));return['AlternateCS',numComps,alt,tintFn];case'Lab':params=xref.fetchIfRef(cs[1]);whitePoint=params.getArray('WhitePoint');blackPoint=params.getArray('BlackPoint');var range=params.getArray('Range');return['LabCS',whitePoint,blackPoint,range];default:throw new _util.FormatError('unimplemented color space object "'+mode+'"');}}throw new _util.FormatError('unrecognized color space object: "'+cs+'"');}},{key:'isDefaultDecode',value:function isDefaultDecode(decode,n){if(!Array.isArray(decode)){return true;}if(n*2!==decode.length){(0,_util.warn)('The decode map is not the correct length');return true;}for(var i=0,ii=decode.length;i<ii;i+=2){if(decode[i]!==0||decode[i+1]!==1){return false;}}return true;}},{key:'singletons',get:function get(){return(0,_util.shadow)(this,'singletons',{get gray(){return(0,_util.shadow)(this,'gray',new DeviceGrayCS());},get rgb(){return(0,_util.shadow)(this,'rgb',new DeviceRgbCS());},get cmyk(){return(0,_util.shadow)(this,'cmyk',new DeviceCmykCS());}});}}]);return ColorSpace;}();var AlternateCS=function(_ColorSpace){_inherits(AlternateCS,_ColorSpace);function AlternateCS(numComps,base,tintFn){_classCallCheck(this,AlternateCS);var _this=_possibleConstructorReturn(this,(AlternateCS.__proto__||Object.getPrototypeOf(AlternateCS)).call(this,'Alternate',numComps));_this.base=base;_this.tintFn=tintFn;_this.tmpBuf=new Float32Array(base.numComps);return _this;}_createClass(AlternateCS,[{key:'getRgbItem',value:function getRgbItem(src,srcOffset,dest,destOffset){var tmpBuf=this.tmpBuf;this.tintFn(src,srcOffset,tmpBuf,0);this.base.getRgbItem(tmpBuf,0,dest,destOffset);}},{key:'getRgbBuffer',value:function getRgbBuffer(src,srcOffset,count,dest,destOffset,bits,alpha01){var tintFn=this.tintFn;var base=this.base;var scale=1/((1<<bits)-1);var baseNumComps=base.numComps;var usesZeroToOneRange=base.usesZeroToOneRange;var isPassthrough=(base.isPassthrough(8)||!usesZeroToOneRange)&&alpha01===0;var pos=isPassthrough?destOffset:0;var baseBuf=isPassthrough?dest:new Uint8ClampedArray(baseNumComps*count);var numComps=this.numComps;var scaled=new Float32Array(numComps);var tinted=new Float32Array(baseNumComps);var i=void 0,j=void 0;for(i=0;i<count;i++){for(j=0;j<numComps;j++){scaled[j]=src[srcOffset++]*scale;}tintFn(scaled,0,tinted,0);if(usesZeroToOneRange){for(j=0;j<baseNumComps;j++){baseBuf[pos++]=tinted[j]*255;}}else{base.getRgbItem(tinted,0,baseBuf,pos);pos+=baseNumComps;}}if(!isPassthrough){base.getRgbBuffer(baseBuf,0,count,dest,destOffset,8,alpha01);}}},{key:'getOutputLength',value:function getOutputLength(inputLength,alpha01){return this.base.getOutputLength(inputLength*this.base.numComps/this.numComps,alpha01);}},{key:'isDefaultDecode',value:function isDefaultDecode(decodeMap){return ColorSpace.isDefaultDecode(decodeMap,this.numComps);}}]);return AlternateCS;}(ColorSpace);var PatternCS=function(_ColorSpace2){_inherits(PatternCS,_ColorSpace2);function PatternCS(baseCS){_classCallCheck(this,PatternCS);var _this2=_possibleConstructorReturn(this,(PatternCS.__proto__||Object.getPrototypeOf(PatternCS)).call(this,'Pattern',null));_this2.base=baseCS;return _this2;}return PatternCS;}(ColorSpace);var IndexedCS=function(_ColorSpace3){_inherits(IndexedCS,_ColorSpace3);function IndexedCS(base,highVal,lookup){_classCallCheck(this,IndexedCS);var _this3=_possibleConstructorReturn(this,(IndexedCS.__proto__||Object.getPrototypeOf(IndexedCS)).call(this,'Indexed',1));_this3.base=base;_this3.highVal=highVal;var baseNumComps=base.numComps;var length=baseNumComps*highVal;if((0,_primitives.isStream)(lookup)){_this3.lookup=new Uint8Array(length);var bytes=lookup.getBytes(length);_this3.lookup.set(bytes);}else if((0,_util.isString)(lookup)){_this3.lookup=new Uint8Array(length);for(var i=0;i<length;++i){_this3.lookup[i]=lookup.charCodeAt(i);}}else if(lookup instanceof Uint8Array){_this3.lookup=lookup;}else{throw new _util.FormatError('Unrecognized lookup table: '+lookup);}return _this3;}_createClass(IndexedCS,[{key:'getRgbItem',value:function getRgbItem(src,srcOffset,dest,destOffset){var numComps=this.base.numComps;var start=src[srcOffset]*numComps;this.base.getRgbBuffer(this.lookup,start,1,dest,destOffset,8,0);}},{key:'getRgbBuffer',value:function getRgbBuffer(src,srcOffset,count,dest,destOffset,bits,alpha01){var base=this.base;var numComps=base.numComps;var outputDelta=base.getOutputLength(numComps,alpha01);var lookup=this.lookup;for(var i=0;i<count;++i){var lookupPos=src[srcOffset++]*numComps;base.getRgbBuffer(lookup,lookupPos,1,dest,destOffset,8,alpha01);destOffset+=outputDelta;}}},{key:'getOutputLength',value:function getOutputLength(inputLength,alpha01){return this.base.getOutputLength(inputLength*this.base.numComps,alpha01);}},{key:'isDefaultDecode',value:function isDefaultDecode(decodeMap){return true;}}]);return IndexedCS;}(ColorSpace);var DeviceGrayCS=function(_ColorSpace4){_inherits(DeviceGrayCS,_ColorSpace4);function DeviceGrayCS(){_classCallCheck(this,DeviceGrayCS);return _possibleConstructorReturn(this,(DeviceGrayCS.__proto__||Object.getPrototypeOf(DeviceGrayCS)).call(this,'DeviceGray',1));}_createClass(DeviceGrayCS,[{key:'getRgbItem',value:function getRgbItem(src,srcOffset,dest,destOffset){var c=src[srcOffset]*255;dest[destOffset]=dest[destOffset+1]=dest[destOffset+2]=c;}},{key:'getRgbBuffer',value:function getRgbBuffer(src,srcOffset,count,dest,destOffset,bits,alpha01){var scale=255/((1<<bits)-1);var j=srcOffset,q=destOffset;for(var i=0;i<count;++i){var c=scale*src[j++];dest[q++]=c;dest[q++]=c;dest[q++]=c;q+=alpha01;}}},{key:'getOutputLength',value:function getOutputLength(inputLength,alpha01){return inputLength*(3+alpha01);}},{key:'isDefaultDecode',value:function isDefaultDecode(decodeMap){return ColorSpace.isDefaultDecode(decodeMap,this.numComps);}}]);return DeviceGrayCS;}(ColorSpace);var DeviceRgbCS=function(_ColorSpace5){_inherits(DeviceRgbCS,_ColorSpace5);function DeviceRgbCS(){_classCallCheck(this,DeviceRgbCS);return _possibleConstructorReturn(this,(DeviceRgbCS.__proto__||Object.getPrototypeOf(DeviceRgbCS)).call(this,'DeviceRGB',3));}_createClass(DeviceRgbCS,[{key:'getRgbItem',value:function getRgbItem(src,srcOffset,dest,destOffset){dest[destOffset]=src[srcOffset]*255;dest[destOffset+1]=src[srcOffset+1]*255;dest[destOffset+2]=src[srcOffset+2]*255;}},{key:'getRgbBuffer',value:function getRgbBuffer(src,srcOffset,count,dest,destOffset,bits,alpha01){if(bits===8&&alpha01===0){dest.set(src.subarray(srcOffset,srcOffset+count*3),destOffset);return;}var scale=255/((1<<bits)-1);var j=srcOffset,q=destOffset;for(var i=0;i<count;++i){dest[q++]=scale*src[j++];dest[q++]=scale*src[j++];dest[q++]=scale*src[j++];q+=alpha01;}}},{key:'getOutputLength',value:function getOutputLength(inputLength,alpha01){return inputLength*(3+alpha01)/3|0;}},{key:'isPassthrough',value:function isPassthrough(bits){return bits===8;}},{key:'isDefaultDecode',value:function isDefaultDecode(decodeMap){return ColorSpace.isDefaultDecode(decodeMap,this.numComps);}}]);return DeviceRgbCS;}(ColorSpace);var DeviceCmykCS=function DeviceCmykCSClosure(){function convertToRgb(src,srcOffset,srcScale,dest,destOffset){var c=src[srcOffset]*srcScale;var m=src[srcOffset+1]*srcScale;var y=src[srcOffset+2]*srcScale;var k=src[srcOffset+3]*srcScale;dest[destOffset]=255+c*(-4.387332384609988*c+54.48615194189176*m+18.82290502165302*y+212.25662451639585*k+-285.2331026137004)+m*(1.7149763477362134*m-5.6096736904047315*y+-17.873870861415444*k-5.497006427196366)+y*(-2.5217340131683033*y-21.248923337353073*k+17.5119270841813)+k*(-21.86122147463605*k-189.48180835922747);dest[destOffset+1]=255+c*(8.841041422036149*c+60.118027045597366*m+6.871425592049007*y+31.159100130055922*k+-79.2970844816548)+m*(-15.310361306967817*m+17.575251261109482*y+131.35250912493976*k-190.9453302588951)+y*(4.444339102852739*y+9.8632861493405*k-24.86741582555878)+k*(-20.737325471181034*k-187.80453709719578);dest[destOffset+2]=255+c*(0.8842522430003296*c+8.078677503112928*m+30.89978309703729*y-0.23883238689178934*k+-14.183576799673286)+m*(10.49593273432072*m+63.02378494754052*y+50.606957656360734*k-112.23884253719248)+y*(0.03296041114873217*y+115.60384449646641*k+-193.58209356861505)+k*(-22.33816807309886*k-180.12613974708367);}var DeviceCmykCS=function(_ColorSpace6){_inherits(DeviceCmykCS,_ColorSpace6);function DeviceCmykCS(){_classCallCheck(this,DeviceCmykCS);return _possibleConstructorReturn(this,(DeviceCmykCS.__proto__||Object.getPrototypeOf(DeviceCmykCS)).call(this,'DeviceCMYK',4));}_createClass(DeviceCmykCS,[{key:'getRgbItem',value:function getRgbItem(src,srcOffset,dest,destOffset){convertToRgb(src,srcOffset,1,dest,destOffset);}},{key:'getRgbBuffer',value:function getRgbBuffer(src,srcOffset,count,dest,destOffset,bits,alpha01){var scale=1/((1<<bits)-1);for(var i=0;i<count;i++){convertToRgb(src,srcOffset,scale,dest,destOffset);srcOffset+=4;destOffset+=3+alpha01;}}},{key:'getOutputLength',value:function getOutputLength(inputLength,alpha01){return inputLength/4*(3+alpha01)|0;}},{key:'isDefaultDecode',value:function isDefaultDecode(decodeMap){return ColorSpace.isDefaultDecode(decodeMap,this.numComps);}}]);return DeviceCmykCS;}(ColorSpace);return DeviceCmykCS;}();var CalGrayCS=function CalGrayCSClosure(){function convertToRgb(cs,src,srcOffset,dest,destOffset,scale){var A=src[srcOffset]*scale;var AG=Math.pow(A,cs.G);var L=cs.YW*AG;var val=Math.max(295.8*Math.pow(L,0.333333333333333333)-40.8,0);dest[destOffset]=val;dest[destOffset+1]=val;dest[destOffset+2]=val;}var CalGrayCS=function(_ColorSpace7){_inherits(CalGrayCS,_ColorSpace7);function CalGrayCS(whitePoint,blackPoint,gamma){_classCallCheck(this,CalGrayCS);var _this7=_possibleConstructorReturn(this,(CalGrayCS.__proto__||Object.getPrototypeOf(CalGrayCS)).call(this,'CalGray',1));if(!whitePoint){throw new _util.FormatError('WhitePoint missing - required for color space CalGray');}blackPoint=blackPoint||[0,0,0];gamma=gamma||1;_this7.XW=whitePoint[0];_this7.YW=whitePoint[1];_this7.ZW=whitePoint[2];_this7.XB=blackPoint[0];_this7.YB=blackPoint[1];_this7.ZB=blackPoint[2];_this7.G=gamma;if(_this7.XW<0||_this7.ZW<0||_this7.YW!==1){throw new _util.FormatError('Invalid WhitePoint components for '+_this7.name+', no fallback available');}if(_this7.XB<0||_this7.YB<0||_this7.ZB<0){(0,_util.info)('Invalid BlackPoint for '+_this7.name+', falling back to default.');_this7.XB=_this7.YB=_this7.ZB=0;}if(_this7.XB!==0||_this7.YB!==0||_this7.ZB!==0){(0,_util.warn)(_this7.name+', BlackPoint: XB: '+_this7.XB+', YB: '+_this7.YB+', '+('ZB: '+_this7.ZB+', only default values are supported.'));}if(_this7.G<1){(0,_util.info)('Invalid Gamma: '+_this7.G+' for '+_this7.name+', '+'falling back to default.');_this7.G=1;}return _this7;}_createClass(CalGrayCS,[{key:'getRgbItem',value:function getRgbItem(src,srcOffset,dest,destOffset){convertToRgb(this,src,srcOffset,dest,destOffset,1);}},{key:'getRgbBuffer',value:function getRgbBuffer(src,srcOffset,count,dest,destOffset,bits,alpha01){var scale=1/((1<<bits)-1);for(var i=0;i<count;++i){convertToRgb(this,src,srcOffset,dest,destOffset,scale);srcOffset+=1;destOffset+=3+alpha01;}}},{key:'getOutputLength',value:function getOutputLength(inputLength,alpha01){return inputLength*(3+alpha01);}},{key:'isDefaultDecode',value:function isDefaultDecode(decodeMap){return ColorSpace.isDefaultDecode(decodeMap,this.numComps);}}]);return CalGrayCS;}(ColorSpace);return CalGrayCS;}();var CalRGBCS=function CalRGBCSClosure(){var BRADFORD_SCALE_MATRIX=new Float32Array([0.8951,0.2664,-0.1614,-0.7502,1.7135,0.0367,0.0389,-0.0685,1.0296]);var BRADFORD_SCALE_INVERSE_MATRIX=new Float32Array([0.9869929,-0.1470543,0.1599627,0.4323053,0.5183603,0.0492912,-0.0085287,0.0400428,0.9684867]);var SRGB_D65_XYZ_TO_RGB_MATRIX=new Float32Array([3.2404542,-1.5371385,-0.4985314,-0.9692660,1.8760108,0.0415560,0.0556434,-0.2040259,1.0572252]);var FLAT_WHITEPOINT_MATRIX=new Float32Array([1,1,1]);var tempNormalizeMatrix=new Float32Array(3);var tempConvertMatrix1=new Float32Array(3);var tempConvertMatrix2=new Float32Array(3);var DECODE_L_CONSTANT=Math.pow((8+16)/116,3)/8.0;function matrixProduct(a,b,result){result[0]=a[0]*b[0]+a[1]*b[1]+a[2]*b[2];result[1]=a[3]*b[0]+a[4]*b[1]+a[5]*b[2];result[2]=a[6]*b[0]+a[7]*b[1]+a[8]*b[2];}function convertToFlat(sourceWhitePoint,LMS,result){result[0]=LMS[0]*1/sourceWhitePoint[0];result[1]=LMS[1]*1/sourceWhitePoint[1];result[2]=LMS[2]*1/sourceWhitePoint[2];}function convertToD65(sourceWhitePoint,LMS,result){var D65X=0.95047;var D65Y=1;var D65Z=1.08883;result[0]=LMS[0]*D65X/sourceWhitePoint[0];result[1]=LMS[1]*D65Y/sourceWhitePoint[1];result[2]=LMS[2]*D65Z/sourceWhitePoint[2];}function sRGBTransferFunction(color){if(color<=0.0031308){return adjustToRange(0,1,12.92*color);}return adjustToRange(0,1,(1+0.055)*Math.pow(color,1/2.4)-0.055);}function adjustToRange(min,max,value){return Math.max(min,Math.min(max,value));}function decodeL(L){if(L<0){return-decodeL(-L);}if(L>8.0){return Math.pow((L+16)/116,3);}return L*DECODE_L_CONSTANT;}function compensateBlackPoint(sourceBlackPoint,XYZ_Flat,result){if(sourceBlackPoint[0]===0&&sourceBlackPoint[1]===0&&sourceBlackPoint[2]===0){result[0]=XYZ_Flat[0];result[1]=XYZ_Flat[1];result[2]=XYZ_Flat[2];return;}var zeroDecodeL=decodeL(0);var X_DST=zeroDecodeL;var X_SRC=decodeL(sourceBlackPoint[0]);var Y_DST=zeroDecodeL;var Y_SRC=decodeL(sourceBlackPoint[1]);var Z_DST=zeroDecodeL;var Z_SRC=decodeL(sourceBlackPoint[2]);var X_Scale=(1-X_DST)/(1-X_SRC);var X_Offset=1-X_Scale;var Y_Scale=(1-Y_DST)/(1-Y_SRC);var Y_Offset=1-Y_Scale;var Z_Scale=(1-Z_DST)/(1-Z_SRC);var Z_Offset=1-Z_Scale;result[0]=XYZ_Flat[0]*X_Scale+X_Offset;result[1]=XYZ_Flat[1]*Y_Scale+Y_Offset;result[2]=XYZ_Flat[2]*Z_Scale+Z_Offset;}function normalizeWhitePointToFlat(sourceWhitePoint,XYZ_In,result){if(sourceWhitePoint[0]===1&&sourceWhitePoint[2]===1){result[0]=XYZ_In[0];result[1]=XYZ_In[1];result[2]=XYZ_In[2];return;}var LMS=result;matrixProduct(BRADFORD_SCALE_MATRIX,XYZ_In,LMS);var LMS_Flat=tempNormalizeMatrix;convertToFlat(sourceWhitePoint,LMS,LMS_Flat);matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX,LMS_Flat,result);}function normalizeWhitePointToD65(sourceWhitePoint,XYZ_In,result){var LMS=result;matrixProduct(BRADFORD_SCALE_MATRIX,XYZ_In,LMS);var LMS_D65=tempNormalizeMatrix;convertToD65(sourceWhitePoint,LMS,LMS_D65);matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX,LMS_D65,result);}function convertToRgb(cs,src,srcOffset,dest,destOffset,scale){var A=adjustToRange(0,1,src[srcOffset]*scale);var B=adjustToRange(0,1,src[srcOffset+1]*scale);var C=adjustToRange(0,1,src[srcOffset+2]*scale);var AGR=Math.pow(A,cs.GR);var BGG=Math.pow(B,cs.GG);var CGB=Math.pow(C,cs.GB);var X=cs.MXA*AGR+cs.MXB*BGG+cs.MXC*CGB;var Y=cs.MYA*AGR+cs.MYB*BGG+cs.MYC*CGB;var Z=cs.MZA*AGR+cs.MZB*BGG+cs.MZC*CGB;var XYZ=tempConvertMatrix1;XYZ[0]=X;XYZ[1]=Y;XYZ[2]=Z;var XYZ_Flat=tempConvertMatrix2;normalizeWhitePointToFlat(cs.whitePoint,XYZ,XYZ_Flat);var XYZ_Black=tempConvertMatrix1;compensateBlackPoint(cs.blackPoint,XYZ_Flat,XYZ_Black);var XYZ_D65=tempConvertMatrix2;normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX,XYZ_Black,XYZ_D65);var SRGB=tempConvertMatrix1;matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX,XYZ_D65,SRGB);dest[destOffset]=sRGBTransferFunction(SRGB[0])*255;dest[destOffset+1]=sRGBTransferFunction(SRGB[1])*255;dest[destOffset+2]=sRGBTransferFunction(SRGB[2])*255;}var CalRGBCS=function(_ColorSpace8){_inherits(CalRGBCS,_ColorSpace8);function CalRGBCS(whitePoint,blackPoint,gamma,matrix){_classCallCheck(this,CalRGBCS);var _this8=_possibleConstructorReturn(this,(CalRGBCS.__proto__||Object.getPrototypeOf(CalRGBCS)).call(this,'CalRGB',3));if(!whitePoint){throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');}blackPoint=blackPoint||new Float32Array(3);gamma=gamma||new Float32Array([1,1,1]);matrix=matrix||new Float32Array([1,0,0,0,1,0,0,0,1]);var XW=whitePoint[0];var YW=whitePoint[1];var ZW=whitePoint[2];_this8.whitePoint=whitePoint;var XB=blackPoint[0];var YB=blackPoint[1];var ZB=blackPoint[2];_this8.blackPoint=blackPoint;_this8.GR=gamma[0];_this8.GG=gamma[1];_this8.GB=gamma[2];_this8.MXA=matrix[0];_this8.MYA=matrix[1];_this8.MZA=matrix[2];_this8.MXB=matrix[3];_this8.MYB=matrix[4];_this8.MZB=matrix[5];_this8.MXC=matrix[6];_this8.MYC=matrix[7];_this8.MZC=matrix[8];if(XW<0||ZW<0||YW!==1){throw new _util.FormatError('Invalid WhitePoint components for '+_this8.name+', no fallback available');}if(XB<0||YB<0||ZB<0){(0,_util.info)('Invalid BlackPoint for '+_this8.name+' ['+XB+', '+YB+', '+ZB+'], '+'falling back to default.');_this8.blackPoint=new Float32Array(3);}if(_this8.GR<0||_this8.GG<0||_this8.GB<0){(0,_util.info)('Invalid Gamma ['+_this8.GR+', '+_this8.GG+', '+_this8.GB+'] for '+(_this8.name+', falling back to default.'));_this8.GR=_this8.GG=_this8.GB=1;}return _this8;}_createClass(CalRGBCS,[{key:'getRgbItem',value:function getRgbItem(src,srcOffset,dest,destOffset){convertToRgb(this,src,srcOffset,dest,destOffset,1);}},{key:'getRgbBuffer',value:function getRgbBuffer(src,srcOffset,count,dest,destOffset,bits,alpha01){var scale=1/((1<<bits)-1);for(var i=0;i<count;++i){convertToRgb(this,src,srcOffset,dest,destOffset,scale);srcOffset+=3;destOffset+=3+alpha01;}}},{key:'getOutputLength',value:function getOutputLength(inputLength,alpha01){return inputLength*(3+alpha01)/3|0;}},{key:'isDefaultDecode',value:function isDefaultDecode(decodeMap){return ColorSpace.isDefaultDecode(decodeMap,this.numComps);}}]);return CalRGBCS;}(ColorSpace);return CalRGBCS;}();var LabCS=function LabCSClosure(){function fn_g(x){var result=void 0;if(x>=6/29){result=x*x*x;}else{result=108/841*(x-4/29);}return result;}function decode(value,high1,low2,high2){return low2+value*(high2-low2)/high1;}function convertToRgb(cs,src,srcOffset,maxVal,dest,destOffset){var Ls=src[srcOffset];var as=src[srcOffset+1];var bs=src[srcOffset+2];if(maxVal!==false){Ls=decode(Ls,maxVal,0,100);as=decode(as,maxVal,cs.amin,cs.amax);bs=decode(bs,maxVal,cs.bmin,cs.bmax);}as=as>cs.amax?cs.amax:as<cs.amin?cs.amin:as;bs=bs>cs.bmax?cs.bmax:bs<cs.bmin?cs.bmin:bs;var M=(Ls+16)/116;var L=M+as/500;var N=M-bs/200;var X=cs.XW*fn_g(L);var Y=cs.YW*fn_g(M);var Z=cs.ZW*fn_g(N);var r=void 0,g=void 0,b=void 0;if(cs.ZW<1){r=X*3.1339+Y*-1.6170+Z*-0.4906;g=X*-0.9785+Y*1.9160+Z*0.0333;b=X*0.0720+Y*-0.2290+Z*1.4057;}else{r=X*3.2406+Y*-1.5372+Z*-0.4986;g=X*-0.9689+Y*1.8758+Z*0.0415;b=X*0.0557+Y*-0.2040+Z*1.0570;}dest[destOffset]=Math.sqrt(r)*255;dest[destOffset+1]=Math.sqrt(g)*255;dest[destOffset+2]=Math.sqrt(b)*255;}var LabCS=function(_ColorSpace9){_inherits(LabCS,_ColorSpace9);function LabCS(whitePoint,blackPoint,range){_classCallCheck(this,LabCS);var _this9=_possibleConstructorReturn(this,(LabCS.__proto__||Object.getPrototypeOf(LabCS)).call(this,'Lab',3));if(!whitePoint){throw new _util.FormatError('WhitePoint missing - required for color space Lab');}blackPoint=blackPoint||[0,0,0];range=range||[-100,100,-100,100];_this9.XW=whitePoint[0];_this9.YW=whitePoint[1];_this9.ZW=whitePoint[2];_this9.amin=range[0];_this9.amax=range[1];_this9.bmin=range[2];_this9.bmax=range[3];_this9.XB=blackPoint[0];_this9.YB=blackPoint[1];_this9.ZB=blackPoint[2];if(_this9.XW<0||_this9.ZW<0||_this9.YW!==1){throw new _util.FormatError('Invalid WhitePoint components, no fallback available');}if(_this9.XB<0||_this9.YB<0||_this9.ZB<0){(0,_util.info)('Invalid BlackPoint, falling back to default');_this9.XB=_this9.YB=_this9.ZB=0;}if(_this9.amin>_this9.amax||_this9.bmin>_this9.bmax){(0,_util.info)('Invalid Range, falling back to defaults');_this9.amin=-100;_this9.amax=100;_this9.bmin=-100;_this9.bmax=100;}return _this9;}_createClass(LabCS,[{key:'getRgbItem',value:function getRgbItem(src,srcOffset,dest,destOffset){convertToRgb(this,src,srcOffset,false,dest,destOffset);}},{key:'getRgbBuffer',value:function getRgbBuffer(src,srcOffset,count,dest,destOffset,bits,alpha01){var maxVal=(1<<bits)-1;for(var i=0;i<count;i++){convertToRgb(this,src,srcOffset,maxVal,dest,destOffset);srcOffset+=3;destOffset+=3+alpha01;}}},{key:'getOutputLength',value:function getOutputLength(inputLength,alpha01){return inputLength*(3+alpha01)/3|0;}},{key:'isDefaultDecode',value:function isDefaultDecode(decodeMap){return true;}},{key:'usesZeroToOneRange',get:function get(){return(0,_util.shadow)(this,'usesZeroToOneRange',false);}}]);return LabCS;}(ColorSpace);return LabCS;}();exports.ColorSpace=ColorSpace;/***/},/* 152 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.AnnotationFactory=exports.AnnotationBorderStyle=exports.Annotation=undefined;var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _util=__w_pdfjs_require__(2);var _obj=__w_pdfjs_require__(137);var _primitives=__w_pdfjs_require__(138);var _colorspace=__w_pdfjs_require__(151);var _operator_list=__w_pdfjs_require__(153);var _stream=__w_pdfjs_require__(140);function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(_typeof3(call)==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+_typeof3(superClass));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var AnnotationFactory=function(){function AnnotationFactory(){_classCallCheck(this,AnnotationFactory);}_createClass(AnnotationFactory,null,[{key:'create',value:function create(xref,ref,pdfManager,idFactory){return pdfManager.ensure(this,'_create',[xref,ref,pdfManager,idFactory]);}},{key:'_create',value:function _create(xref,ref,pdfManager,idFactory){var dict=xref.fetchIfRef(ref);if(!(0,_primitives.isDict)(dict)){return;}var id=(0,_primitives.isRef)(ref)?ref.toString():'annot_'+idFactory.createObjId();var subtype=dict.get('Subtype');subtype=(0,_primitives.isName)(subtype)?subtype.name:null;var parameters={xref:xref,dict:dict,ref:(0,_primitives.isRef)(ref)?ref:null,subtype:subtype,id:id,pdfManager:pdfManager};switch(subtype){case'Link':return new LinkAnnotation(parameters);case'Text':return new TextAnnotation(parameters);case'Widget':var fieldType=(0,_util.getInheritableProperty)({dict:dict,key:'FT'});fieldType=(0,_primitives.isName)(fieldType)?fieldType.name:null;switch(fieldType){case'Tx':return new TextWidgetAnnotation(parameters);case'Btn':return new ButtonWidgetAnnotation(parameters);case'Ch':return new ChoiceWidgetAnnotation(parameters);}(0,_util.warn)('Unimplemented widget field type "'+fieldType+'", '+'falling back to base field type.');return new WidgetAnnotation(parameters);case'Popup':return new PopupAnnotation(parameters);case'Line':return new LineAnnotation(parameters);case'Square':return new SquareAnnotation(parameters);case'Circle':return new CircleAnnotation(parameters);case'PolyLine':return new PolylineAnnotation(parameters);case'Polygon':return new PolygonAnnotation(parameters);case'Ink':return new InkAnnotation(parameters);case'Highlight':return new HighlightAnnotation(parameters);case'Underline':return new UnderlineAnnotation(parameters);case'Squiggly':return new SquigglyAnnotation(parameters);case'StrikeOut':return new StrikeOutAnnotation(parameters);case'Stamp':return new StampAnnotation(parameters);case'FileAttachment':return new FileAttachmentAnnotation(parameters);default:if(!subtype){(0,_util.warn)('Annotation is missing the required /Subtype.');}else{(0,_util.warn)('Unimplemented annotation type "'+subtype+'", '+'falling back to base annotation.');}return new Annotation(parameters);}}}]);return AnnotationFactory;}();function getTransformMatrix(rect,bbox,matrix){var bounds=_util.Util.getAxialAlignedBoundingBox(bbox,matrix);var minX=bounds[0];var minY=bounds[1];var maxX=bounds[2];var maxY=bounds[3];if(minX===maxX||minY===maxY){return[1,0,0,1,rect[0],rect[1]];}var xRatio=(rect[2]-rect[0])/(maxX-minX);var yRatio=(rect[3]-rect[1])/(maxY-minY);return[xRatio,0,0,yRatio,rect[0]-minX*xRatio,rect[1]-minY*yRatio];}var Annotation=function(){function Annotation(params){_classCallCheck(this,Annotation);var dict=params.dict;this.setFlags(dict.get('F'));this.setRectangle(dict.getArray('Rect'));this.setColor(dict.getArray('C'));this.setBorderStyle(dict);this.setAppearance(dict);this.data={annotationFlags:this.flags,borderStyle:this.borderStyle,color:this.color,hasAppearance:!!this.appearance,id:params.id,rect:this.rectangle,subtype:params.subtype};}_createClass(Annotation,[{key:'_hasFlag',value:function _hasFlag(flags,flag){return!!(flags&flag);}},{key:'_isViewable',value:function _isViewable(flags){return!this._hasFlag(flags,_util.AnnotationFlag.INVISIBLE)&&!this._hasFlag(flags,_util.AnnotationFlag.HIDDEN)&&!this._hasFlag(flags,_util.AnnotationFlag.NOVIEW);}},{key:'_isPrintable',value:function _isPrintable(flags){return this._hasFlag(flags,_util.AnnotationFlag.PRINT)&&!this._hasFlag(flags,_util.AnnotationFlag.INVISIBLE)&&!this._hasFlag(flags,_util.AnnotationFlag.HIDDEN);}},{key:'setFlags',value:function setFlags(flags){this.flags=Number.isInteger(flags)&&flags>0?flags:0;}},{key:'hasFlag',value:function hasFlag(flag){return this._hasFlag(this.flags,flag);}},{key:'setRectangle',value:function setRectangle(rectangle){if(Array.isArray(rectangle)&&rectangle.length===4){this.rectangle=_util.Util.normalizeRect(rectangle);}else{this.rectangle=[0,0,0,0];}}},{key:'setColor',value:function setColor(color){var rgbColor=new Uint8ClampedArray(3);if(!Array.isArray(color)){this.color=rgbColor;return;}switch(color.length){case 0:this.color=null;break;case 1:_colorspace.ColorSpace.singletons.gray.getRgbItem(color,0,rgbColor,0);this.color=rgbColor;break;case 3:_colorspace.ColorSpace.singletons.rgb.getRgbItem(color,0,rgbColor,0);this.color=rgbColor;break;case 4:_colorspace.ColorSpace.singletons.cmyk.getRgbItem(color,0,rgbColor,0);this.color=rgbColor;break;default:this.color=rgbColor;break;}}},{key:'setBorderStyle',value:function setBorderStyle(borderStyle){this.borderStyle=new AnnotationBorderStyle();if(!(0,_primitives.isDict)(borderStyle)){return;}if(borderStyle.has('BS')){var dict=borderStyle.get('BS');var dictType=dict.get('Type');if(!dictType||(0,_primitives.isName)(dictType,'Border')){this.borderStyle.setWidth(dict.get('W'));this.borderStyle.setStyle(dict.get('S'));this.borderStyle.setDashArray(dict.getArray('D'));}}else if(borderStyle.has('Border')){var array=borderStyle.getArray('Border');if(Array.isArray(array)&&array.length>=3){this.borderStyle.setHorizontalCornerRadius(array[0]);this.borderStyle.setVerticalCornerRadius(array[1]);this.borderStyle.setWidth(array[2]);if(array.length===4){this.borderStyle.setDashArray(array[3]);}}}else{this.borderStyle.setWidth(0);}}},{key:'setAppearance',value:function setAppearance(dict){this.appearance=null;var appearanceStates=dict.get('AP');if(!(0,_primitives.isDict)(appearanceStates)){return;}var normalAppearanceState=appearanceStates.get('N');if((0,_primitives.isStream)(normalAppearanceState)){this.appearance=normalAppearanceState;return;}if(!(0,_primitives.isDict)(normalAppearanceState)){return;}var as=dict.get('AS');if(!(0,_primitives.isName)(as)||!normalAppearanceState.has(as.name)){return;}this.appearance=normalAppearanceState.get(as.name);}},{key:'_preparePopup',value:function _preparePopup(dict){if(!dict.has('C')){this.data.color=null;}this.data.hasPopup=dict.has('Popup');this.data.title=(0,_util.stringToPDFString)(dict.get('T')||'');this.data.contents=(0,_util.stringToPDFString)(dict.get('Contents')||'');}},{key:'loadResources',value:function loadResources(keys){return this.appearance.dict.getAsync('Resources').then(function(resources){if(!resources){return;}var objectLoader=new _obj.ObjectLoader(resources,keys,resources.xref);return objectLoader.load().then(function(){return resources;});});}},{key:'getOperatorList',value:function getOperatorList(evaluator,task,renderForms){var _this=this;if(!this.appearance){return Promise.resolve(new _operator_list.OperatorList());}var data=this.data;var appearanceDict=this.appearance.dict;var resourcesPromise=this.loadResources(['ExtGState','ColorSpace','Pattern','Shading','XObject','Font']);var bbox=appearanceDict.getArray('BBox')||[0,0,1,1];var matrix=appearanceDict.getArray('Matrix')||[1,0,0,1,0,0];var transform=getTransformMatrix(data.rect,bbox,matrix);return resourcesPromise.then(function(resources){var opList=new _operator_list.OperatorList();opList.addOp(_util.OPS.beginAnnotation,[data.rect,transform,matrix]);return evaluator.getOperatorList({stream:_this.appearance,task:task,resources:resources,operatorList:opList}).then(function(){opList.addOp(_util.OPS.endAnnotation,[]);_this.appearance.reset();return opList;});});}},{key:'viewable',get:function get(){if(this.flags===0){return true;}return this._isViewable(this.flags);}},{key:'printable',get:function get(){if(this.flags===0){return false;}return this._isPrintable(this.flags);}}]);return Annotation;}();var AnnotationBorderStyle=function(){function AnnotationBorderStyle(){_classCallCheck(this,AnnotationBorderStyle);this.width=1;this.style=_util.AnnotationBorderStyleType.SOLID;this.dashArray=[3];this.horizontalCornerRadius=0;this.verticalCornerRadius=0;}_createClass(AnnotationBorderStyle,[{key:'setWidth',value:function setWidth(width){if(Number.isInteger(width)){this.width=width;}}},{key:'setStyle',value:function setStyle(style){if(!style){return;}switch(style.name){case'S':this.style=_util.AnnotationBorderStyleType.SOLID;break;case'D':this.style=_util.AnnotationBorderStyleType.DASHED;break;case'B':this.style=_util.AnnotationBorderStyleType.BEVELED;break;case'I':this.style=_util.AnnotationBorderStyleType.INSET;break;case'U':this.style=_util.AnnotationBorderStyleType.UNDERLINE;break;default:break;}}},{key:'setDashArray',value:function setDashArray(dashArray){if(Array.isArray(dashArray)&&dashArray.length>0){var isValid=true;var allZeros=true;for(var i=0,len=dashArray.length;i<len;i++){var element=dashArray[i];var validNumber=+element>=0;if(!validNumber){isValid=false;break;}else if(element>0){allZeros=false;}}if(isValid&&!allZeros){this.dashArray=dashArray;}else{this.width=0;}}else if(dashArray){this.width=0;}}},{key:'setHorizontalCornerRadius',value:function setHorizontalCornerRadius(radius){if(Number.isInteger(radius)){this.horizontalCornerRadius=radius;}}},{key:'setVerticalCornerRadius',value:function setVerticalCornerRadius(radius){if(Number.isInteger(radius)){this.verticalCornerRadius=radius;}}}]);return AnnotationBorderStyle;}();var WidgetAnnotation=function(_Annotation){_inherits(WidgetAnnotation,_Annotation);function WidgetAnnotation(params){_classCallCheck(this,WidgetAnnotation);var _this2=_possibleConstructorReturn(this,(WidgetAnnotation.__proto__||Object.getPrototypeOf(WidgetAnnotation)).call(this,params));var dict=params.dict;var data=_this2.data;data.annotationType=_util.AnnotationType.WIDGET;data.fieldName=_this2._constructFieldName(dict);data.fieldValue=(0,_util.getInheritableProperty)({dict:dict,key:'V',getArray:true});data.alternativeText=(0,_util.stringToPDFString)(dict.get('TU')||'');data.defaultAppearance=(0,_util.getInheritableProperty)({dict:dict,key:'DA'})||'';var fieldType=(0,_util.getInheritableProperty)({dict:dict,key:'FT'});data.fieldType=(0,_primitives.isName)(fieldType)?fieldType.name:null;_this2.fieldResources=(0,_util.getInheritableProperty)({dict:dict,key:'DR'})||_primitives.Dict.empty;data.fieldFlags=(0,_util.getInheritableProperty)({dict:dict,key:'Ff'});if(!Number.isInteger(data.fieldFlags)||data.fieldFlags<0){data.fieldFlags=0;}data.readOnly=_this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);if(data.fieldType==='Sig'){_this2.setFlags(_util.AnnotationFlag.HIDDEN);}return _this2;}_createClass(WidgetAnnotation,[{key:'_constructFieldName',value:function _constructFieldName(dict){if(!dict.has('T')&&!dict.has('Parent')){(0,_util.warn)('Unknown field name, falling back to empty field name.');return'';}if(!dict.has('Parent')){return(0,_util.stringToPDFString)(dict.get('T'));}var fieldName=[];if(dict.has('T')){fieldName.unshift((0,_util.stringToPDFString)(dict.get('T')));}var loopDict=dict;while(loopDict.has('Parent')){loopDict=loopDict.get('Parent');if(!(0,_primitives.isDict)(loopDict)){break;}if(loopDict.has('T')){fieldName.unshift((0,_util.stringToPDFString)(loopDict.get('T')));}}return fieldName.join('.');}},{key:'hasFieldFlag',value:function hasFieldFlag(flag){return!!(this.data.fieldFlags&flag);}},{key:'getOperatorList',value:function getOperatorList(evaluator,task,renderForms){if(renderForms){return Promise.resolve(new _operator_list.OperatorList());}return _get(WidgetAnnotation.prototype.__proto__||Object.getPrototypeOf(WidgetAnnotation.prototype),'getOperatorList',this).call(this,evaluator,task,renderForms);}}]);return WidgetAnnotation;}(Annotation);var TextWidgetAnnotation=function(_WidgetAnnotation){_inherits(TextWidgetAnnotation,_WidgetAnnotation);function TextWidgetAnnotation(params){_classCallCheck(this,TextWidgetAnnotation);var _this3=_possibleConstructorReturn(this,(TextWidgetAnnotation.__proto__||Object.getPrototypeOf(TextWidgetAnnotation)).call(this,params));var dict=params.dict;_this3.data.fieldValue=(0,_util.stringToPDFString)(_this3.data.fieldValue||'');var alignment=(0,_util.getInheritableProperty)({dict:dict,key:'Q'});if(!Number.isInteger(alignment)||alignment<0||alignment>2){alignment=null;}_this3.data.textAlignment=alignment;var maximumLength=(0,_util.getInheritableProperty)({dict:dict,key:'MaxLen'});if(!Number.isInteger(maximumLength)||maximumLength<0){maximumLength=null;}_this3.data.maxLen=maximumLength;_this3.data.multiLine=_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);_this3.data.comb=_this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB)&&!_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE)&&!_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD)&&!_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT)&&_this3.data.maxLen!==null;return _this3;}_createClass(TextWidgetAnnotation,[{key:'getOperatorList',value:function getOperatorList(evaluator,task,renderForms){if(renderForms||this.appearance){return _get(TextWidgetAnnotation.prototype.__proto__||Object.getPrototypeOf(TextWidgetAnnotation.prototype),'getOperatorList',this).call(this,evaluator,task,renderForms);}var operatorList=new _operator_list.OperatorList();if(!this.data.defaultAppearance){return Promise.resolve(operatorList);}var stream=new _stream.Stream((0,_util.stringToBytes)(this.data.defaultAppearance));return evaluator.getOperatorList({stream:stream,task:task,resources:this.fieldResources,operatorList:operatorList}).then(function(){return operatorList;});}}]);return TextWidgetAnnotation;}(WidgetAnnotation);var ButtonWidgetAnnotation=function(_WidgetAnnotation2){_inherits(ButtonWidgetAnnotation,_WidgetAnnotation2);function ButtonWidgetAnnotation(params){_classCallCheck(this,ButtonWidgetAnnotation);var _this4=_possibleConstructorReturn(this,(ButtonWidgetAnnotation.__proto__||Object.getPrototypeOf(ButtonWidgetAnnotation)).call(this,params));_this4.data.checkBox=!_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO)&&!_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);_this4.data.radioButton=_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO)&&!_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);_this4.data.pushButton=_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);if(_this4.data.checkBox){_this4._processCheckBox(params);}else if(_this4.data.radioButton){_this4._processRadioButton(params);}else if(_this4.data.pushButton){_this4._processPushButton(params);}else{(0,_util.warn)('Invalid field flags for button widget annotation');}return _this4;}_createClass(ButtonWidgetAnnotation,[{key:'_processCheckBox',value:function _processCheckBox(params){if((0,_primitives.isName)(this.data.fieldValue)){this.data.fieldValue=this.data.fieldValue.name;}var customAppearance=params.dict.get('AP');if(!(0,_primitives.isDict)(customAppearance)){return;}var exportValueOptionsDict=customAppearance.get('D');if(!(0,_primitives.isDict)(exportValueOptionsDict)){return;}var exportValues=exportValueOptionsDict.getKeys();var hasCorrectOptionCount=exportValues.length===2;if(!hasCorrectOptionCount){return;}this.data.exportValue=exportValues[0]==='Off'?exportValues[1]:exportValues[0];}},{key:'_processRadioButton',value:function _processRadioButton(params){this.data.fieldValue=this.data.buttonValue=null;var fieldParent=params.dict.get('Parent');if((0,_primitives.isDict)(fieldParent)&&fieldParent.has('V')){var fieldParentValue=fieldParent.get('V');if((0,_primitives.isName)(fieldParentValue)){this.data.fieldValue=fieldParentValue.name;}}var appearanceStates=params.dict.get('AP');if(!(0,_primitives.isDict)(appearanceStates)){return;}var normalAppearanceState=appearanceStates.get('N');if(!(0,_primitives.isDict)(normalAppearanceState)){return;}var keys=normalAppearanceState.getKeys();for(var i=0,ii=keys.length;i<ii;i++){if(keys[i]!=='Off'){this.data.buttonValue=keys[i];break;}}}},{key:'_processPushButton',value:function _processPushButton(params){if(!params.dict.has('A')){(0,_util.warn)('Push buttons without action dictionaries are not supported');return;}_obj.Catalog.parseDestDictionary({destDict:params.dict,resultObj:this.data,docBaseUrl:params.pdfManager.docBaseUrl});}}]);return ButtonWidgetAnnotation;}(WidgetAnnotation);var ChoiceWidgetAnnotation=function(_WidgetAnnotation3){_inherits(ChoiceWidgetAnnotation,_WidgetAnnotation3);function ChoiceWidgetAnnotation(params){_classCallCheck(this,ChoiceWidgetAnnotation);var _this5=_possibleConstructorReturn(this,(ChoiceWidgetAnnotation.__proto__||Object.getPrototypeOf(ChoiceWidgetAnnotation)).call(this,params));_this5.data.options=[];var options=(0,_util.getInheritableProperty)({dict:params.dict,key:'Opt'});if(Array.isArray(options)){var xref=params.xref;for(var i=0,ii=options.length;i<ii;i++){var option=xref.fetchIfRef(options[i]);var isOptionArray=Array.isArray(option);_this5.data.options[i]={exportValue:isOptionArray?xref.fetchIfRef(option[0]):option,displayValue:(0,_util.stringToPDFString)(isOptionArray?xref.fetchIfRef(option[1]):option)};}}if(!Array.isArray(_this5.data.fieldValue)){_this5.data.fieldValue=[_this5.data.fieldValue];}_this5.data.combo=_this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);_this5.data.multiSelect=_this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);return _this5;}return ChoiceWidgetAnnotation;}(WidgetAnnotation);var TextAnnotation=function(_Annotation2){_inherits(TextAnnotation,_Annotation2);function TextAnnotation(parameters){_classCallCheck(this,TextAnnotation);var DEFAULT_ICON_SIZE=22;var _this6=_possibleConstructorReturn(this,(TextAnnotation.__proto__||Object.getPrototypeOf(TextAnnotation)).call(this,parameters));_this6.data.annotationType=_util.AnnotationType.TEXT;if(_this6.data.hasAppearance){_this6.data.name='NoIcon';}else{_this6.data.rect[1]=_this6.data.rect[3]-DEFAULT_ICON_SIZE;_this6.data.rect[2]=_this6.data.rect[0]+DEFAULT_ICON_SIZE;_this6.data.name=parameters.dict.has('Name')?parameters.dict.get('Name').name:'Note';}_this6._preparePopup(parameters.dict);return _this6;}return TextAnnotation;}(Annotation);var LinkAnnotation=function(_Annotation3){_inherits(LinkAnnotation,_Annotation3);function LinkAnnotation(params){_classCallCheck(this,LinkAnnotation);var _this7=_possibleConstructorReturn(this,(LinkAnnotation.__proto__||Object.getPrototypeOf(LinkAnnotation)).call(this,params));_this7.data.annotationType=_util.AnnotationType.LINK;_obj.Catalog.parseDestDictionary({destDict:params.dict,resultObj:_this7.data,docBaseUrl:params.pdfManager.docBaseUrl});return _this7;}return LinkAnnotation;}(Annotation);var PopupAnnotation=function(_Annotation4){_inherits(PopupAnnotation,_Annotation4);function PopupAnnotation(parameters){_classCallCheck(this,PopupAnnotation);var _this8=_possibleConstructorReturn(this,(PopupAnnotation.__proto__||Object.getPrototypeOf(PopupAnnotation)).call(this,parameters));_this8.data.annotationType=_util.AnnotationType.POPUP;var dict=parameters.dict;var parentItem=dict.get('Parent');if(!parentItem){(0,_util.warn)('Popup annotation has a missing or invalid parent annotation.');return _possibleConstructorReturn(_this8);}var parentSubtype=parentItem.get('Subtype');_this8.data.parentType=(0,_primitives.isName)(parentSubtype)?parentSubtype.name:null;_this8.data.parentId=dict.getRaw('Parent').toString();_this8.data.title=(0,_util.stringToPDFString)(parentItem.get('T')||'');_this8.data.contents=(0,_util.stringToPDFString)(parentItem.get('Contents')||'');if(!parentItem.has('C')){_this8.data.color=null;}else{_this8.setColor(parentItem.getArray('C'));_this8.data.color=_this8.color;}if(!_this8.viewable){var parentFlags=parentItem.get('F');if(_this8._isViewable(parentFlags)){_this8.setFlags(parentFlags);}}return _this8;}return PopupAnnotation;}(Annotation);var LineAnnotation=function(_Annotation5){_inherits(LineAnnotation,_Annotation5);function LineAnnotation(parameters){_classCallCheck(this,LineAnnotation);var _this9=_possibleConstructorReturn(this,(LineAnnotation.__proto__||Object.getPrototypeOf(LineAnnotation)).call(this,parameters));_this9.data.annotationType=_util.AnnotationType.LINE;var dict=parameters.dict;_this9.data.lineCoordinates=_util.Util.normalizeRect(dict.getArray('L'));_this9._preparePopup(dict);return _this9;}return LineAnnotation;}(Annotation);var SquareAnnotation=function(_Annotation6){_inherits(SquareAnnotation,_Annotation6);function SquareAnnotation(parameters){_classCallCheck(this,SquareAnnotation);var _this10=_possibleConstructorReturn(this,(SquareAnnotation.__proto__||Object.getPrototypeOf(SquareAnnotation)).call(this,parameters));_this10.data.annotationType=_util.AnnotationType.SQUARE;_this10._preparePopup(parameters.dict);return _this10;}return SquareAnnotation;}(Annotation);var CircleAnnotation=function(_Annotation7){_inherits(CircleAnnotation,_Annotation7);function CircleAnnotation(parameters){_classCallCheck(this,CircleAnnotation);var _this11=_possibleConstructorReturn(this,(CircleAnnotation.__proto__||Object.getPrototypeOf(CircleAnnotation)).call(this,parameters));_this11.data.annotationType=_util.AnnotationType.CIRCLE;_this11._preparePopup(parameters.dict);return _this11;}return CircleAnnotation;}(Annotation);var PolylineAnnotation=function(_Annotation8){_inherits(PolylineAnnotation,_Annotation8);function PolylineAnnotation(parameters){_classCallCheck(this,PolylineAnnotation);var _this12=_possibleConstructorReturn(this,(PolylineAnnotation.__proto__||Object.getPrototypeOf(PolylineAnnotation)).call(this,parameters));_this12.data.annotationType=_util.AnnotationType.POLYLINE;var dict=parameters.dict;var rawVertices=dict.getArray('Vertices');_this12.data.vertices=[];for(var i=0,ii=rawVertices.length;i<ii;i+=2){_this12.data.vertices.push({x:rawVertices[i],y:rawVertices[i+1]});}_this12._preparePopup(dict);return _this12;}return PolylineAnnotation;}(Annotation);var PolygonAnnotation=function(_PolylineAnnotation){_inherits(PolygonAnnotation,_PolylineAnnotation);function PolygonAnnotation(parameters){_classCallCheck(this,PolygonAnnotation);var _this13=_possibleConstructorReturn(this,(PolygonAnnotation.__proto__||Object.getPrototypeOf(PolygonAnnotation)).call(this,parameters));_this13.data.annotationType=_util.AnnotationType.POLYGON;return _this13;}return PolygonAnnotation;}(PolylineAnnotation);var InkAnnotation=function(_Annotation9){_inherits(InkAnnotation,_Annotation9);function InkAnnotation(parameters){_classCallCheck(this,InkAnnotation);var _this14=_possibleConstructorReturn(this,(InkAnnotation.__proto__||Object.getPrototypeOf(InkAnnotation)).call(this,parameters));_this14.data.annotationType=_util.AnnotationType.INK;var dict=parameters.dict;var xref=parameters.xref;var originalInkLists=dict.getArray('InkList');_this14.data.inkLists=[];for(var i=0,ii=originalInkLists.length;i<ii;++i){_this14.data.inkLists.push([]);for(var j=0,jj=originalInkLists[i].length;j<jj;j+=2){_this14.data.inkLists[i].push({x:xref.fetchIfRef(originalInkLists[i][j]),y:xref.fetchIfRef(originalInkLists[i][j+1])});}}_this14._preparePopup(dict);return _this14;}return InkAnnotation;}(Annotation);var HighlightAnnotation=function(_Annotation10){_inherits(HighlightAnnotation,_Annotation10);function HighlightAnnotation(parameters){_classCallCheck(this,HighlightAnnotation);var _this15=_possibleConstructorReturn(this,(HighlightAnnotation.__proto__||Object.getPrototypeOf(HighlightAnnotation)).call(this,parameters));_this15.data.annotationType=_util.AnnotationType.HIGHLIGHT;_this15._preparePopup(parameters.dict);return _this15;}return HighlightAnnotation;}(Annotation);var UnderlineAnnotation=function(_Annotation11){_inherits(UnderlineAnnotation,_Annotation11);function UnderlineAnnotation(parameters){_classCallCheck(this,UnderlineAnnotation);var _this16=_possibleConstructorReturn(this,(UnderlineAnnotation.__proto__||Object.getPrototypeOf(UnderlineAnnotation)).call(this,parameters));_this16.data.annotationType=_util.AnnotationType.UNDERLINE;_this16._preparePopup(parameters.dict);return _this16;}return UnderlineAnnotation;}(Annotation);var SquigglyAnnotation=function(_Annotation12){_inherits(SquigglyAnnotation,_Annotation12);function SquigglyAnnotation(parameters){_classCallCheck(this,SquigglyAnnotation);var _this17=_possibleConstructorReturn(this,(SquigglyAnnotation.__proto__||Object.getPrototypeOf(SquigglyAnnotation)).call(this,parameters));_this17.data.annotationType=_util.AnnotationType.SQUIGGLY;_this17._preparePopup(parameters.dict);return _this17;}return SquigglyAnnotation;}(Annotation);var StrikeOutAnnotation=function(_Annotation13){_inherits(StrikeOutAnnotation,_Annotation13);function StrikeOutAnnotation(parameters){_classCallCheck(this,StrikeOutAnnotation);var _this18=_possibleConstructorReturn(this,(StrikeOutAnnotation.__proto__||Object.getPrototypeOf(StrikeOutAnnotation)).call(this,parameters));_this18.data.annotationType=_util.AnnotationType.STRIKEOUT;_this18._preparePopup(parameters.dict);return _this18;}return StrikeOutAnnotation;}(Annotation);var StampAnnotation=function(_Annotation14){_inherits(StampAnnotation,_Annotation14);function StampAnnotation(parameters){_classCallCheck(this,StampAnnotation);var _this19=_possibleConstructorReturn(this,(StampAnnotation.__proto__||Object.getPrototypeOf(StampAnnotation)).call(this,parameters));_this19.data.annotationType=_util.AnnotationType.STAMP;_this19._preparePopup(parameters.dict);return _this19;}return StampAnnotation;}(Annotation);var FileAttachmentAnnotation=function(_Annotation15){_inherits(FileAttachmentAnnotation,_Annotation15);function FileAttachmentAnnotation(parameters){_classCallCheck(this,FileAttachmentAnnotation);var _this20=_possibleConstructorReturn(this,(FileAttachmentAnnotation.__proto__||Object.getPrototypeOf(FileAttachmentAnnotation)).call(this,parameters));var file=new _obj.FileSpec(parameters.dict.get('FS'),parameters.xref);_this20.data.annotationType=_util.AnnotationType.FILEATTACHMENT;_this20.data.file=file.serializable;_this20._preparePopup(parameters.dict);return _this20;}return FileAttachmentAnnotation;}(Annotation);exports.Annotation=Annotation;exports.AnnotationBorderStyle=AnnotationBorderStyle;exports.AnnotationFactory=AnnotationFactory;/***/},/* 153 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.OperatorList=undefined;var _util=__w_pdfjs_require__(2);var QueueOptimizer=function QueueOptimizerClosure(){function addState(parentState,pattern,checkFn,iterateFn,processFn){var state=parentState;for(var i=0,ii=pattern.length-1;i<ii;i++){var item=pattern[i];state=state[item]||(state[item]=[]);}state[pattern[pattern.length-1]]={checkFn:checkFn,iterateFn:iterateFn,processFn:processFn};}function handlePaintSolidColorImageMask(iFirstSave,count,fnArray,argsArray){var iFirstPIMXO=iFirstSave+2;for(var i=0;i<count;i++){var arg=argsArray[iFirstPIMXO+4*i];var imageMask=arg.length===1&&arg[0];if(imageMask&&imageMask.width===1&&imageMask.height===1&&(!imageMask.data.length||imageMask.data.length===1&&imageMask.data[0]===0)){fnArray[iFirstPIMXO+4*i]=_util.OPS.paintSolidColorImageMask;continue;}break;}return count-i;}var InitialState=[];addState(InitialState,[_util.OPS.save,_util.OPS.transform,_util.OPS.paintInlineImageXObject,_util.OPS.restore],null,function iterateInlineImageGroup(context,i){var fnArray=context.fnArray;var iFirstSave=context.iCurr-3;var pos=(i-iFirstSave)%4;switch(pos){case 0:return fnArray[i]===_util.OPS.save;case 1:return fnArray[i]===_util.OPS.transform;case 2:return fnArray[i]===_util.OPS.paintInlineImageXObject;case 3:return fnArray[i]===_util.OPS.restore;}},function foundInlineImageGroup(context,i){var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK=10;var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK=200;var MAX_WIDTH=1000;var IMAGE_PADDING=1;var fnArray=context.fnArray,argsArray=context.argsArray;var curr=context.iCurr;var iFirstSave=curr-3;var iFirstTransform=curr-2;var iFirstPIIXO=curr-1;var count=Math.min(Math.floor((i-iFirstSave)/4),MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);if(count<MIN_IMAGES_IN_INLINE_IMAGES_BLOCK){return i-(i-iFirstSave)%4;}var maxX=0;var map=[],maxLineHeight=0;var currentX=IMAGE_PADDING,currentY=IMAGE_PADDING;var q;for(q=0;q<count;q++){var transform=argsArray[iFirstTransform+(q<<2)];var img=argsArray[iFirstPIIXO+(q<<2)][0];if(currentX+img.width>MAX_WIDTH){maxX=Math.max(maxX,currentX);currentY+=maxLineHeight+2*IMAGE_PADDING;currentX=0;maxLineHeight=0;}map.push({transform:transform,x:currentX,y:currentY,w:img.width,h:img.height});currentX+=img.width+2*IMAGE_PADDING;maxLineHeight=Math.max(maxLineHeight,img.height);}var imgWidth=Math.max(maxX,currentX)+IMAGE_PADDING;var imgHeight=currentY+maxLineHeight+IMAGE_PADDING;var imgData=new Uint8ClampedArray(imgWidth*imgHeight*4);var imgRowSize=imgWidth<<2;for(q=0;q<count;q++){var data=argsArray[iFirstPIIXO+(q<<2)][0].data;var rowSize=map[q].w<<2;var dataOffset=0;var offset=map[q].x+map[q].y*imgWidth<<2;imgData.set(data.subarray(0,rowSize),offset-imgRowSize);for(var k=0,kk=map[q].h;k<kk;k++){imgData.set(data.subarray(dataOffset,dataOffset+rowSize),offset);dataOffset+=rowSize;offset+=imgRowSize;}imgData.set(data.subarray(dataOffset-rowSize,dataOffset),offset);while(offset>=0){data[offset-4]=data[offset];data[offset-3]=data[offset+1];data[offset-2]=data[offset+2];data[offset-1]=data[offset+3];data[offset+rowSize]=data[offset+rowSize-4];data[offset+rowSize+1]=data[offset+rowSize-3];data[offset+rowSize+2]=data[offset+rowSize-2];data[offset+rowSize+3]=data[offset+rowSize-1];offset-=imgRowSize;}}fnArray.splice(iFirstSave,count*4,_util.OPS.paintInlineImageXObjectGroup);argsArray.splice(iFirstSave,count*4,[{width:imgWidth,height:imgHeight,kind:_util.ImageKind.RGBA_32BPP,data:imgData},map]);return iFirstSave+1;});addState(InitialState,[_util.OPS.save,_util.OPS.transform,_util.OPS.paintImageMaskXObject,_util.OPS.restore],null,function iterateImageMaskGroup(context,i){var fnArray=context.fnArray;var iFirstSave=context.iCurr-3;var pos=(i-iFirstSave)%4;switch(pos){case 0:return fnArray[i]===_util.OPS.save;case 1:return fnArray[i]===_util.OPS.transform;case 2:return fnArray[i]===_util.OPS.paintImageMaskXObject;case 3:return fnArray[i]===_util.OPS.restore;}},function foundImageMaskGroup(context,i){var MIN_IMAGES_IN_MASKS_BLOCK=10;var MAX_IMAGES_IN_MASKS_BLOCK=100;var MAX_SAME_IMAGES_IN_MASKS_BLOCK=1000;var fnArray=context.fnArray,argsArray=context.argsArray;var curr=context.iCurr;var iFirstSave=curr-3;var iFirstTransform=curr-2;var iFirstPIMXO=curr-1;var count=Math.floor((i-iFirstSave)/4);count=handlePaintSolidColorImageMask(iFirstSave,count,fnArray,argsArray);if(count<MIN_IMAGES_IN_MASKS_BLOCK){return i-(i-iFirstSave)%4;}var q;var isSameImage=false;var iTransform,transformArgs;var firstPIMXOArg0=argsArray[iFirstPIMXO][0];if(argsArray[iFirstTransform][1]===0&&argsArray[iFirstTransform][2]===0){isSameImage=true;var firstTransformArg0=argsArray[iFirstTransform][0];var firstTransformArg3=argsArray[iFirstTransform][3];iTransform=iFirstTransform+4;var iPIMXO=iFirstPIMXO+4;for(q=1;q<count;q++,iTransform+=4,iPIMXO+=4){transformArgs=argsArray[iTransform];if(argsArray[iPIMXO][0]!==firstPIMXOArg0||transformArgs[0]!==firstTransformArg0||transformArgs[1]!==0||transformArgs[2]!==0||transformArgs[3]!==firstTransformArg3){if(q<MIN_IMAGES_IN_MASKS_BLOCK){isSameImage=false;}else{count=q;}break;}}}if(isSameImage){count=Math.min(count,MAX_SAME_IMAGES_IN_MASKS_BLOCK);var positions=new Float32Array(count*2);iTransform=iFirstTransform;for(q=0;q<count;q++,iTransform+=4){transformArgs=argsArray[iTransform];positions[q<<1]=transformArgs[4];positions[(q<<1)+1]=transformArgs[5];}fnArray.splice(iFirstSave,count*4,_util.OPS.paintImageMaskXObjectRepeat);argsArray.splice(iFirstSave,count*4,[firstPIMXOArg0,firstTransformArg0,firstTransformArg3,positions]);}else{count=Math.min(count,MAX_IMAGES_IN_MASKS_BLOCK);var images=[];for(q=0;q<count;q++){transformArgs=argsArray[iFirstTransform+(q<<2)];var maskParams=argsArray[iFirstPIMXO+(q<<2)][0];images.push({data:maskParams.data,width:maskParams.width,height:maskParams.height,transform:transformArgs});}fnArray.splice(iFirstSave,count*4,_util.OPS.paintImageMaskXObjectGroup);argsArray.splice(iFirstSave,count*4,[images]);}return iFirstSave+1;});addState(InitialState,[_util.OPS.save,_util.OPS.transform,_util.OPS.paintImageXObject,_util.OPS.restore],function(context){var argsArray=context.argsArray;var iFirstTransform=context.iCurr-2;return argsArray[iFirstTransform][1]===0&&argsArray[iFirstTransform][2]===0;},function(context,i){var fnArray=context.fnArray,argsArray=context.argsArray;var iFirstSave=context.iCurr-3;var pos=(i-iFirstSave)%4;switch(pos){case 0:return fnArray[i]===_util.OPS.save;case 1:if(fnArray[i]!==_util.OPS.transform){return false;}var iFirstTransform=context.iCurr-2;var firstTransformArg0=argsArray[iFirstTransform][0];var firstTransformArg3=argsArray[iFirstTransform][3];if(argsArray[i][0]!==firstTransformArg0||argsArray[i][1]!==0||argsArray[i][2]!==0||argsArray[i][3]!==firstTransformArg3){return false;}return true;case 2:if(fnArray[i]!==_util.OPS.paintImageXObject){return false;}var iFirstPIXO=context.iCurr-1;var firstPIXOArg0=argsArray[iFirstPIXO][0];if(argsArray[i][0]!==firstPIXOArg0){return false;}return true;case 3:return fnArray[i]===_util.OPS.restore;}},function(context,i){var MIN_IMAGES_IN_BLOCK=3;var MAX_IMAGES_IN_BLOCK=1000;var fnArray=context.fnArray,argsArray=context.argsArray;var curr=context.iCurr;var iFirstSave=curr-3;var iFirstTransform=curr-2;var iFirstPIXO=curr-1;var firstPIXOArg0=argsArray[iFirstPIXO][0];var firstTransformArg0=argsArray[iFirstTransform][0];var firstTransformArg3=argsArray[iFirstTransform][3];var count=Math.min(Math.floor((i-iFirstSave)/4),MAX_IMAGES_IN_BLOCK);if(count<MIN_IMAGES_IN_BLOCK){return i-(i-iFirstSave)%4;}var positions=new Float32Array(count*2);var iTransform=iFirstTransform;for(var q=0;q<count;q++,iTransform+=4){var transformArgs=argsArray[iTransform];positions[q<<1]=transformArgs[4];positions[(q<<1)+1]=transformArgs[5];}var args=[firstPIXOArg0,firstTransformArg0,firstTransformArg3,positions];fnArray.splice(iFirstSave,count*4,_util.OPS.paintImageXObjectRepeat);argsArray.splice(iFirstSave,count*4,args);return iFirstSave+1;});addState(InitialState,[_util.OPS.beginText,_util.OPS.setFont,_util.OPS.setTextMatrix,_util.OPS.showText,_util.OPS.endText],null,function(context,i){var fnArray=context.fnArray,argsArray=context.argsArray;var iFirstSave=context.iCurr-4;var pos=(i-iFirstSave)%5;switch(pos){case 0:return fnArray[i]===_util.OPS.beginText;case 1:return fnArray[i]===_util.OPS.setFont;case 2:return fnArray[i]===_util.OPS.setTextMatrix;case 3:if(fnArray[i]!==_util.OPS.showText){return false;}var iFirstSetFont=context.iCurr-3;var firstSetFontArg0=argsArray[iFirstSetFont][0];var firstSetFontArg1=argsArray[iFirstSetFont][1];if(argsArray[i][0]!==firstSetFontArg0||argsArray[i][1]!==firstSetFontArg1){return false;}return true;case 4:return fnArray[i]===_util.OPS.endText;}},function(context,i){var MIN_CHARS_IN_BLOCK=3;var MAX_CHARS_IN_BLOCK=1000;var fnArray=context.fnArray,argsArray=context.argsArray;var curr=context.iCurr;var iFirstBeginText=curr-4;var iFirstSetFont=curr-3;var iFirstSetTextMatrix=curr-2;var iFirstShowText=curr-1;var iFirstEndText=curr;var firstSetFontArg0=argsArray[iFirstSetFont][0];var firstSetFontArg1=argsArray[iFirstSetFont][1];var count=Math.min(Math.floor((i-iFirstBeginText)/5),MAX_CHARS_IN_BLOCK);if(count<MIN_CHARS_IN_BLOCK){return i-(i-iFirstBeginText)%5;}var iFirst=iFirstBeginText;if(iFirstBeginText>=4&&fnArray[iFirstBeginText-4]===fnArray[iFirstSetFont]&&fnArray[iFirstBeginText-3]===fnArray[iFirstSetTextMatrix]&&fnArray[iFirstBeginText-2]===fnArray[iFirstShowText]&&fnArray[iFirstBeginText-1]===fnArray[iFirstEndText]&&argsArray[iFirstBeginText-4][0]===firstSetFontArg0&&argsArray[iFirstBeginText-4][1]===firstSetFontArg1){count++;iFirst-=5;}var iEndText=iFirst+4;for(var q=1;q<count;q++){fnArray.splice(iEndText,3);argsArray.splice(iEndText,3);iEndText+=2;}return iEndText+1;});function QueueOptimizer(queue){this.queue=queue;this.state=null;this.context={iCurr:0,fnArray:queue.fnArray,argsArray:queue.argsArray};this.match=null;this.lastProcessed=0;}QueueOptimizer.prototype={_optimize:function _optimize(){var fnArray=this.queue.fnArray;var i=this.lastProcessed,ii=fnArray.length;var state=this.state;var match=this.match;if(!state&&!match&&i+1===ii&&!InitialState[fnArray[i]]){this.lastProcessed=ii;return;}var context=this.context;while(i<ii){if(match){var iterate=(0,match.iterateFn)(context,i);if(iterate){i++;continue;}i=(0,match.processFn)(context,i+1);ii=fnArray.length;match=null;state=null;if(i>=ii){break;}}state=(state||InitialState)[fnArray[i]];if(!state||Array.isArray(state)){i++;continue;}context.iCurr=i;i++;if(state.checkFn&&!(0,state.checkFn)(context)){state=null;continue;}match=state;state=null;}this.state=state;this.match=match;this.lastProcessed=i;},push:function push(fn,args){this.queue.fnArray.push(fn);this.queue.argsArray.push(args);this._optimize();},flush:function flush(){while(this.match){var length=this.queue.fnArray.length;this.lastProcessed=(0,this.match.processFn)(this.context,length);this.match=null;this.state=null;this._optimize();}},reset:function reset(){this.state=null;this.match=null;this.lastProcessed=0;}};return QueueOptimizer;}();var NullOptimizer=function NullOptimizerClosure(){function NullOptimizer(queue){this.queue=queue;}NullOptimizer.prototype={push:function push(fn,args){this.queue.fnArray.push(fn);this.queue.argsArray.push(args);},flush:function flush(){}};return NullOptimizer;}();var OperatorList=function OperatorListClosure(){var CHUNK_SIZE=1000;var CHUNK_SIZE_ABOUT=CHUNK_SIZE-5;function getTransfers(queue){var transfers=[];var fnArray=queue.fnArray,argsArray=queue.argsArray;for(var i=0,ii=queue.length;i<ii;i++){switch(fnArray[i]){case _util.OPS.paintInlineImageXObject:case _util.OPS.paintInlineImageXObjectGroup:case _util.OPS.paintImageMaskXObject:var arg=argsArray[i][0];;if(!arg.cached){transfers.push(arg.data.buffer);}break;}}return transfers;}function OperatorList(intent,messageHandler,pageIndex){this.messageHandler=messageHandler;this.fnArray=[];this.argsArray=[];if(messageHandler&&this.intent!=='oplist'){this.optimizer=new QueueOptimizer(this);}else{this.optimizer=new NullOptimizer(this);}this.dependencies=Object.create(null);this._totalLength=0;this.pageIndex=pageIndex;this.intent=intent;this.weight=0;}OperatorList.prototype={get length(){return this.argsArray.length;},get totalLength(){return this._totalLength+this.length;},addOp:function addOp(fn,args){this.optimizer.push(fn,args);this.weight++;if(this.messageHandler){if(this.weight>=CHUNK_SIZE){this.flush();}else if(this.weight>=CHUNK_SIZE_ABOUT&&(fn===_util.OPS.restore||fn===_util.OPS.endText)){this.flush();}}},addDependency:function addDependency(dependency){if(dependency in this.dependencies){return;}this.dependencies[dependency]=true;this.addOp(_util.OPS.dependency,[dependency]);},addDependencies:function addDependencies(dependencies){for(var key in dependencies){this.addDependency(key);}},addOpList:function addOpList(opList){Object.assign(this.dependencies,opList.dependencies);for(var i=0,ii=opList.length;i<ii;i++){this.addOp(opList.fnArray[i],opList.argsArray[i]);}},getIR:function getIR(){return{fnArray:this.fnArray,argsArray:this.argsArray,length:this.length};},flush:function flush(lastChunk){this.optimizer.flush();var transfers=getTransfers(this);var length=this.length;this._totalLength+=length;this.messageHandler.send('RenderPageChunk',{operatorList:{fnArray:this.fnArray,argsArray:this.argsArray,lastChunk:lastChunk,length:length},pageIndex:this.pageIndex,intent:this.intent},transfers);this.dependencies=Object.create(null);this.fnArray.length=0;this.argsArray.length=0;this.weight=0;this.optimizer.reset();}};return OperatorList;}();exports.OperatorList=OperatorList;/***/},/* 154 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.PartialEvaluator=undefined;var _regenerator=__w_pdfjs_require__(131);var _regenerator2=_interopRequireDefault(_regenerator);var _util=__w_pdfjs_require__(2);var _cmap=__w_pdfjs_require__(155);var _stream=__w_pdfjs_require__(140);var _primitives=__w_pdfjs_require__(138);var _fonts=__w_pdfjs_require__(156);var _encodings=__w_pdfjs_require__(159);var _unicode=__w_pdfjs_require__(162);var _standard_fonts=__w_pdfjs_require__(161);var _pattern=__w_pdfjs_require__(165);var _parser=__w_pdfjs_require__(139);var _bidi=__w_pdfjs_require__(166);var _colorspace=__w_pdfjs_require__(151);var _glyphlist=__w_pdfjs_require__(160);var _metrics=__w_pdfjs_require__(167);var _function=__w_pdfjs_require__(168);var _jpeg_stream=__w_pdfjs_require__(146);var _murmurhash=__w_pdfjs_require__(170);var _operator_list=__w_pdfjs_require__(153);var _image=__w_pdfjs_require__(171);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step("next",value);},function(err){step("throw",err);});}}return step("next");});};}var PartialEvaluator=function PartialEvaluatorClosure(){var DefaultPartialEvaluatorOptions={forceDataSchema:false,maxImageSize:-1,disableFontFace:false,nativeImageDecoderSupport:_util.NativeImageDecoding.DECODE,ignoreErrors:false,isEvalSupported:true};function NativeImageDecoder(_ref){var xref=_ref.xref,resources=_ref.resources,handler=_ref.handler,_ref$forceDataSchema=_ref.forceDataSchema,forceDataSchema=_ref$forceDataSchema===undefined?false:_ref$forceDataSchema,pdfFunctionFactory=_ref.pdfFunctionFactory;this.xref=xref;this.resources=resources;this.handler=handler;this.forceDataSchema=forceDataSchema;this.pdfFunctionFactory=pdfFunctionFactory;}NativeImageDecoder.prototype={canDecode:function canDecode(image){return image instanceof _jpeg_stream.JpegStream&&NativeImageDecoder.isDecodable(image,this.xref,this.resources,this.pdfFunctionFactory);},decode:function decode(image){var dict=image.dict;var colorSpace=dict.get('ColorSpace','CS');colorSpace=_colorspace.ColorSpace.parse(colorSpace,this.xref,this.resources,this.pdfFunctionFactory);return this.handler.sendWithPromise('JpegDecode',[image.getIR(this.forceDataSchema),colorSpace.numComps]).then(function(_ref2){var data=_ref2.data,width=_ref2.width,height=_ref2.height;return new _stream.Stream(data,0,data.length,image.dict);});}};NativeImageDecoder.isSupported=function(image,xref,res,pdfFunctionFactory){var dict=image.dict;if(dict.has('DecodeParms')||dict.has('DP')){return false;}var cs=_colorspace.ColorSpace.parse(dict.get('ColorSpace','CS'),xref,res,pdfFunctionFactory);return(cs.name==='DeviceGray'||cs.name==='DeviceRGB')&&cs.isDefaultDecode(dict.getArray('Decode','D'));};NativeImageDecoder.isDecodable=function(image,xref,res,pdfFunctionFactory){var dict=image.dict;if(dict.has('DecodeParms')||dict.has('DP')){return false;}var cs=_colorspace.ColorSpace.parse(dict.get('ColorSpace','CS'),xref,res,pdfFunctionFactory);return(cs.numComps===1||cs.numComps===3)&&cs.isDefaultDecode(dict.getArray('Decode','D'));};function PartialEvaluator(_ref3){var _this=this;var pdfManager=_ref3.pdfManager,xref=_ref3.xref,handler=_ref3.handler,pageIndex=_ref3.pageIndex,idFactory=_ref3.idFactory,fontCache=_ref3.fontCache,builtInCMapCache=_ref3.builtInCMapCache,_ref3$options=_ref3.options,options=_ref3$options===undefined?null:_ref3$options,pdfFunctionFactory=_ref3.pdfFunctionFactory;this.pdfManager=pdfManager;this.xref=xref;this.handler=handler;this.pageIndex=pageIndex;this.idFactory=idFactory;this.fontCache=fontCache;this.builtInCMapCache=builtInCMapCache;this.options=options||DefaultPartialEvaluatorOptions;this.pdfFunctionFactory=pdfFunctionFactory;this.fetchBuiltInCMap=function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee(name){var data;return _regenerator2.default.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!_this.builtInCMapCache.has(name)){_context.next=2;break;}return _context.abrupt('return',_this.builtInCMapCache.get(name));case 2:_context.next=4;return _this.handler.sendWithPromise('FetchBuiltInCMap',{name:name});case 4:data=_context.sent;if(data.compressionType!==_util.CMapCompressionType.NONE){_this.builtInCMapCache.set(name,data);}return _context.abrupt('return',data);case 7:case'end':return _context.stop();}}},_callee,_this);}));return function(_x){return _ref4.apply(this,arguments);};}();}var TIME_SLOT_DURATION_MS=20;var CHECK_TIME_EVERY=100;function TimeSlotManager(){this.reset();}TimeSlotManager.prototype={check:function TimeSlotManager_check(){if(++this.checked<CHECK_TIME_EVERY){return false;}this.checked=0;return this.endTime<=Date.now();},reset:function TimeSlotManager_reset(){this.endTime=Date.now()+TIME_SLOT_DURATION_MS;this.checked=0;}};function normalizeBlendMode(value){if(!(0,_primitives.isName)(value)){return'source-over';}switch(value.name){case'Normal':case'Compatible':return'source-over';case'Multiply':return'multiply';case'Screen':return'screen';case'Overlay':return'overlay';case'Darken':return'darken';case'Lighten':return'lighten';case'ColorDodge':return'color-dodge';case'ColorBurn':return'color-burn';case'HardLight':return'hard-light';case'SoftLight':return'soft-light';case'Difference':return'difference';case'Exclusion':return'exclusion';case'Hue':return'hue';case'Saturation':return'saturation';case'Color':return'color';case'Luminosity':return'luminosity';}(0,_util.warn)('Unsupported blend mode: '+value.name);return'source-over';}var deferred=Promise.resolve();var TILING_PATTERN=1,SHADING_PATTERN=2;PartialEvaluator.prototype={clone:function clone(){var newOptions=arguments.length>0&&arguments[0]!==undefined?arguments[0]:DefaultPartialEvaluatorOptions;var newEvaluator=Object.create(this);newEvaluator.options=newOptions;return newEvaluator;},hasBlendModes:function PartialEvaluator_hasBlendModes(resources){if(!(0,_primitives.isDict)(resources)){return false;}var processed=Object.create(null);if(resources.objId){processed[resources.objId]=true;}var nodes=[resources],xref=this.xref;while(nodes.length){var key,i,ii;var node=nodes.shift();var graphicStates=node.get('ExtGState');if((0,_primitives.isDict)(graphicStates)){var graphicStatesKeys=graphicStates.getKeys();for(i=0,ii=graphicStatesKeys.length;i<ii;i++){key=graphicStatesKeys[i];var graphicState=graphicStates.get(key);var bm=graphicState.get('BM');if((0,_primitives.isName)(bm)&&bm.name!=='Normal'){return true;}}}var xObjects=node.get('XObject');if(!(0,_primitives.isDict)(xObjects)){continue;}var xObjectsKeys=xObjects.getKeys();for(i=0,ii=xObjectsKeys.length;i<ii;i++){key=xObjectsKeys[i];var xObject=xObjects.getRaw(key);if((0,_primitives.isRef)(xObject)){if(processed[xObject.toString()]){continue;}xObject=xref.fetch(xObject);}if(!(0,_primitives.isStream)(xObject)){continue;}if(xObject.dict.objId){if(processed[xObject.dict.objId]){continue;}processed[xObject.dict.objId]=true;}var xResources=xObject.dict.get('Resources');if((0,_primitives.isDict)(xResources)&&(!xResources.objId||!processed[xResources.objId])){nodes.push(xResources);if(xResources.objId){processed[xResources.objId]=true;}}}}return false;},buildFormXObject:function PartialEvaluator_buildFormXObject(resources,xobj,smask,operatorList,task,initialState){var dict=xobj.dict;var matrix=dict.getArray('Matrix');var bbox=dict.getArray('BBox');var group=dict.get('Group');if(group){var groupOptions={matrix:matrix,bbox:bbox,smask:smask,isolated:false,knockout:false};var groupSubtype=group.get('S');var colorSpace=null;if((0,_primitives.isName)(groupSubtype,'Transparency')){groupOptions.isolated=group.get('I')||false;groupOptions.knockout=group.get('K')||false;if(group.has('CS')){colorSpace=_colorspace.ColorSpace.parse(group.get('CS'),this.xref,resources,this.pdfFunctionFactory);}}if(smask&&smask.backdrop){colorSpace=colorSpace||_colorspace.ColorSpace.singletons.rgb;smask.backdrop=colorSpace.getRgb(smask.backdrop,0);}operatorList.addOp(_util.OPS.beginGroup,[groupOptions]);}operatorList.addOp(_util.OPS.paintFormXObjectBegin,[matrix,bbox]);return this.getOperatorList({stream:xobj,task:task,resources:dict.get('Resources')||resources,operatorList:operatorList,initialState:initialState}).then(function(){operatorList.addOp(_util.OPS.paintFormXObjectEnd,[]);if(group){operatorList.addOp(_util.OPS.endGroup,[groupOptions]);}});},buildPaintImageXObject:function buildPaintImageXObject(_ref5){var _this2=this;var resources=_ref5.resources,image=_ref5.image,_ref5$isInline=_ref5.isInline,isInline=_ref5$isInline===undefined?false:_ref5$isInline,operatorList=_ref5.operatorList,cacheKey=_ref5.cacheKey,imageCache=_ref5.imageCache,_ref5$forceDisableNat=_ref5.forceDisableNativeImageDecoder,forceDisableNativeImageDecoder=_ref5$forceDisableNat===undefined?false:_ref5$forceDisableNat;var dict=image.dict;var w=dict.get('Width','W');var h=dict.get('Height','H');if(!(w&&(0,_util.isNum)(w))||!(h&&(0,_util.isNum)(h))){(0,_util.warn)('Image dimensions are missing, or not numbers.');return Promise.resolve();}var maxImageSize=this.options.maxImageSize;if(maxImageSize!==-1&&w*h>maxImageSize){(0,_util.warn)('Image exceeded maximum allowed size and was removed.');return Promise.resolve();}var imageMask=dict.get('ImageMask','IM')||false;var imgData,args;if(imageMask){var width=dict.get('Width','W');var height=dict.get('Height','H');var bitStrideLength=width+7>>3;var imgArray=image.getBytes(bitStrideLength*height,true);var decode=dict.getArray('Decode','D');imgData=_image.PDFImage.createMask({imgArray:imgArray,width:width,height:height,imageIsFromDecodeStream:image instanceof _stream.DecodeStream,inverseDecode:!!decode&&decode[0]>0});imgData.cached=true;args=[imgData];operatorList.addOp(_util.OPS.paintImageMaskXObject,args);if(cacheKey){imageCache[cacheKey]={fn:_util.OPS.paintImageMaskXObject,args:args};}return Promise.resolve();}var softMask=dict.get('SMask','SM')||false;var mask=dict.get('Mask')||false;var SMALL_IMAGE_DIMENSIONS=200;if(isInline&&!softMask&&!mask&&!(image instanceof _jpeg_stream.JpegStream)&&w+h<SMALL_IMAGE_DIMENSIONS){var imageObj=new _image.PDFImage({xref:this.xref,res:resources,image:image,isInline:isInline,pdfFunctionFactory:this.pdfFunctionFactory});imgData=imageObj.createImageData(true);operatorList.addOp(_util.OPS.paintInlineImageXObject,[imgData]);return Promise.resolve();}var nativeImageDecoderSupport=forceDisableNativeImageDecoder?_util.NativeImageDecoding.NONE:this.options.nativeImageDecoderSupport;var objId='img_'+this.idFactory.createObjId();if(nativeImageDecoderSupport!==_util.NativeImageDecoding.NONE&&!softMask&&!mask&&image instanceof _jpeg_stream.JpegStream&&NativeImageDecoder.isSupported(image,this.xref,resources,this.pdfFunctionFactory)){return this.handler.sendWithPromise('obj',[objId,this.pageIndex,'JpegStream',image.getIR(this.options.forceDataSchema)]).then(function(){operatorList.addDependency(objId);args=[objId,w,h];operatorList.addOp(_util.OPS.paintJpegXObject,args);if(cacheKey){imageCache[cacheKey]={fn:_util.OPS.paintJpegXObject,args:args};}},function(reason){(0,_util.warn)('Native JPEG decoding failed -- trying to recover: '+(reason&&reason.message));return _this2.buildPaintImageXObject({resources:resources,image:image,isInline:isInline,operatorList:operatorList,cacheKey:cacheKey,imageCache:imageCache,forceDisableNativeImageDecoder:true});});}var nativeImageDecoder=null;if(nativeImageDecoderSupport===_util.NativeImageDecoding.DECODE&&(image instanceof _jpeg_stream.JpegStream||mask instanceof _jpeg_stream.JpegStream||softMask instanceof _jpeg_stream.JpegStream)){nativeImageDecoder=new NativeImageDecoder({xref:this.xref,resources:resources,handler:this.handler,forceDataSchema:this.options.forceDataSchema,pdfFunctionFactory:this.pdfFunctionFactory});}operatorList.addDependency(objId);args=[objId,w,h];_image.PDFImage.buildImage({handler:this.handler,xref:this.xref,res:resources,image:image,isInline:isInline,nativeDecoder:nativeImageDecoder,pdfFunctionFactory:this.pdfFunctionFactory}).then(function(imageObj){var imgData=imageObj.createImageData(false);_this2.handler.send('obj',[objId,_this2.pageIndex,'Image',imgData],[imgData.data.buffer]);}).catch(function(reason){(0,_util.warn)('Unable to decode image: '+reason);_this2.handler.send('obj',[objId,_this2.pageIndex,'Image',null]);});operatorList.addOp(_util.OPS.paintImageXObject,args);if(cacheKey){imageCache[cacheKey]={fn:_util.OPS.paintImageXObject,args:args};}return Promise.resolve();},handleSMask:function PartialEvaluator_handleSmask(smask,resources,operatorList,task,stateManager){var smaskContent=smask.get('G');var smaskOptions={subtype:smask.get('S').name,backdrop:smask.get('BC')};var transferObj=smask.get('TR');if((0,_function.isPDFFunction)(transferObj)){var transferFn=this.pdfFunctionFactory.create(transferObj);var transferMap=new Uint8Array(256);var tmp=new Float32Array(1);for(var i=0;i<256;i++){tmp[0]=i/255;transferFn(tmp,0,tmp,0);transferMap[i]=tmp[0]*255|0;}smaskOptions.transferMap=transferMap;}return this.buildFormXObject(resources,smaskContent,smaskOptions,operatorList,task,stateManager.state.clone());},handleTilingType:function handleTilingType(fn,args,resources,pattern,patternDict,operatorList,task){var _this3=this;var tilingOpList=new _operator_list.OperatorList();var resourcesArray=[patternDict.get('Resources'),resources];var patternResources=_primitives.Dict.merge(this.xref,resourcesArray);return this.getOperatorList({stream:pattern,task:task,resources:patternResources,operatorList:tilingOpList}).then(function(){return(0,_pattern.getTilingPatternIR)({fnArray:tilingOpList.fnArray,argsArray:tilingOpList.argsArray},patternDict,args);}).then(function(tilingPatternIR){operatorList.addDependencies(tilingOpList.dependencies);operatorList.addOp(fn,tilingPatternIR);},function(reason){if(_this3.options.ignoreErrors){_this3.handler.send('UnsupportedFeature',{featureId:_util.UNSUPPORTED_FEATURES.unknown});(0,_util.warn)('handleTilingType - ignoring pattern: "'+reason+'".');return;}throw reason;});},handleSetFont:function PartialEvaluator_handleSetFont(resources,fontArgs,fontRef,operatorList,task,state){var _this4=this;var fontName;if(fontArgs){fontArgs=fontArgs.slice();fontName=fontArgs[0].name;}return this.loadFont(fontName,fontRef,resources).then(function(translated){if(!translated.font.isType3Font){return translated;}return translated.loadType3Data(_this4,resources,operatorList,task).then(function(){return translated;}).catch(function(reason){_this4.handler.send('UnsupportedFeature',{featureId:_util.UNSUPPORTED_FEATURES.font});return new TranslatedFont('g_font_error',new _fonts.ErrorFont('Type3 font load error: '+reason),translated.font);});}).then(function(translated){state.font=translated.font;translated.send(_this4.handler);return translated.loadedName;});},handleText:function PartialEvaluator_handleText(chars,state){var _this5=this;var font=state.font;var glyphs=font.charsToGlyphs(chars);var isAddToPathSet=!!(state.textRenderingMode&_util.TextRenderingMode.ADD_TO_PATH_FLAG);if(font.data&&(isAddToPathSet||this.options.disableFontFace||state.fillColorSpace.name==='Pattern')){var buildPath=function buildPath(fontChar){if(!font.renderer.hasBuiltPath(fontChar)){var path=font.renderer.getPathJs(fontChar);_this5.handler.send('commonobj',[font.loadedName+'_path_'+fontChar,'FontPath',path]);}};for(var i=0,ii=glyphs.length;i<ii;i++){var glyph=glyphs[i];buildPath(glyph.fontChar);var accent=glyph.accent;if(accent&&accent.fontChar){buildPath(accent.fontChar);}}}return glyphs;},setGState:function PartialEvaluator_setGState(resources,gState,operatorList,task,stateManager){var _this6=this;var gStateObj=[];var gStateKeys=gState.getKeys();var promise=Promise.resolve();var _loop=function _loop(){var key=gStateKeys[i];var value=gState.get(key);switch(key){case'Type':break;case'LW':case'LC':case'LJ':case'ML':case'D':case'RI':case'FL':case'CA':case'ca':gStateObj.push([key,value]);break;case'Font':promise=promise.then(function(){return _this6.handleSetFont(resources,null,value[0],operatorList,task,stateManager.state).then(function(loadedName){operatorList.addDependency(loadedName);gStateObj.push([key,[loadedName,value[1]]]);});});break;case'BM':gStateObj.push([key,normalizeBlendMode(value)]);break;case'SMask':if((0,_primitives.isName)(value,'None')){gStateObj.push([key,false]);break;}if((0,_primitives.isDict)(value)){promise=promise.then(function(){return _this6.handleSMask(value,resources,operatorList,task,stateManager);});gStateObj.push([key,true]);}else{(0,_util.warn)('Unsupported SMask type');}break;case'OP':case'op':case'OPM':case'BG':case'BG2':case'UCR':case'UCR2':case'TR':case'TR2':case'HT':case'SM':case'SA':case'AIS':case'TK':(0,_util.info)('graphic state operator '+key);break;default:(0,_util.info)('Unknown graphic state operator '+key);break;}};for(var i=0,ii=gStateKeys.length;i<ii;i++){_loop();}return promise.then(function(){if(gStateObj.length>0){operatorList.addOp(_util.OPS.setGState,[gStateObj]);}});},loadFont:function PartialEvaluator_loadFont(fontName,font,resources){var _this7=this;function errorFont(){return Promise.resolve(new TranslatedFont('g_font_error',new _fonts.ErrorFont('Font '+fontName+' is not available'),font));}var fontRef,xref=this.xref;if(font){if(!(0,_primitives.isRef)(font)){throw new Error('The "font" object should be a reference.');}fontRef=font;}else{var fontRes=resources.get('Font');if(fontRes){fontRef=fontRes.getRaw(fontName);}else{(0,_util.warn)('fontRes not available');return errorFont();}}if(!fontRef){(0,_util.warn)('fontRef not available');return errorFont();}if(this.fontCache.has(fontRef)){return this.fontCache.get(fontRef);}font=xref.fetchIfRef(fontRef);if(!(0,_primitives.isDict)(font)){return errorFont();}if(font.translated){return font.translated;}var fontCapability=(0,_util.createPromiseCapability)();var preEvaluatedFont=this.preEvaluateFont(font);var descriptor=preEvaluatedFont.descriptor;var fontRefIsRef=(0,_primitives.isRef)(fontRef),fontID;if(fontRefIsRef){fontID=fontRef.toString();}if((0,_primitives.isDict)(descriptor)){if(!descriptor.fontAliases){descriptor.fontAliases=Object.create(null);}var fontAliases=descriptor.fontAliases;var hash=preEvaluatedFont.hash;if(fontAliases[hash]){var aliasFontRef=fontAliases[hash].aliasRef;if(fontRefIsRef&&aliasFontRef&&this.fontCache.has(aliasFontRef)){this.fontCache.putAlias(fontRef,aliasFontRef);return this.fontCache.get(fontRef);}}else{fontAliases[hash]={fontID:_fonts.Font.getFontID()};}if(fontRefIsRef){fontAliases[hash].aliasRef=fontRef;}fontID=fontAliases[hash].fontID;}if(fontRefIsRef){this.fontCache.put(fontRef,fontCapability.promise);}else{if(!fontID){fontID=this.idFactory.createObjId();}this.fontCache.put('id_'+fontID,fontCapability.promise);}(0,_util.assert)(fontID,'The "fontID" must be defined.');font.loadedName='g_'+this.pdfManager.docId+'_f'+fontID;font.translated=fontCapability.promise;var translatedPromise;try{translatedPromise=this.translateFont(preEvaluatedFont);}catch(e){translatedPromise=Promise.reject(e);}translatedPromise.then(function(translatedFont){if(translatedFont.fontType!==undefined){var xrefFontStats=xref.stats.fontTypes;xrefFontStats[translatedFont.fontType]=true;}fontCapability.resolve(new TranslatedFont(font.loadedName,translatedFont,font));}).catch(function(reason){_this7.handler.send('UnsupportedFeature',{featureId:_util.UNSUPPORTED_FEATURES.font});try{var descriptor=preEvaluatedFont.descriptor;var fontFile3=descriptor&&descriptor.get('FontFile3');var subtype=fontFile3&&fontFile3.get('Subtype');var fontType=(0,_fonts.getFontType)(preEvaluatedFont.type,subtype&&subtype.name);var xrefFontStats=xref.stats.fontTypes;xrefFontStats[fontType]=true;}catch(ex){}fontCapability.resolve(new TranslatedFont(font.loadedName,new _fonts.ErrorFont(reason instanceof Error?reason.message:reason),font));});return fontCapability.promise;},buildPath:function PartialEvaluator_buildPath(operatorList,fn,args){var lastIndex=operatorList.length-1;if(!args){args=[];}if(lastIndex<0||operatorList.fnArray[lastIndex]!==_util.OPS.constructPath){operatorList.addOp(_util.OPS.constructPath,[[fn],args]);}else{var opArgs=operatorList.argsArray[lastIndex];opArgs[0].push(fn);Array.prototype.push.apply(opArgs[1],args);}},handleColorN:function PartialEvaluator_handleColorN(operatorList,fn,args,cs,patterns,resources,task){var patternName=args[args.length-1];var pattern;if((0,_primitives.isName)(patternName)&&(pattern=patterns.get(patternName.name))){var dict=(0,_primitives.isStream)(pattern)?pattern.dict:pattern;var typeNum=dict.get('PatternType');if(typeNum===TILING_PATTERN){var color=cs.base?cs.base.getRgb(args,0):null;return this.handleTilingType(fn,color,resources,pattern,dict,operatorList,task);}else if(typeNum===SHADING_PATTERN){var shading=dict.get('Shading');var matrix=dict.getArray('Matrix');pattern=_pattern.Pattern.parseShading(shading,matrix,this.xref,resources,this.handler,this.pdfFunctionFactory);operatorList.addOp(fn,pattern.getIR());return Promise.resolve();}return Promise.reject(new Error('Unknown PatternType: '+typeNum));}operatorList.addOp(fn,args);return Promise.resolve();},getOperatorList:function getOperatorList(_ref6){var _this8=this;var stream=_ref6.stream,task=_ref6.task,resources=_ref6.resources,operatorList=_ref6.operatorList,_ref6$initialState=_ref6.initialState,initialState=_ref6$initialState===undefined?null:_ref6$initialState;resources=resources||_primitives.Dict.empty;initialState=initialState||new EvalState();if(!operatorList){throw new Error('getOperatorList: missing "operatorList" parameter');}var self=this;var xref=this.xref;var imageCache=Object.create(null);var xobjs=resources.get('XObject')||_primitives.Dict.empty;var patterns=resources.get('Pattern')||_primitives.Dict.empty;var stateManager=new StateManager(initialState);var preprocessor=new EvaluatorPreprocessor(stream,xref,stateManager);var timeSlotManager=new TimeSlotManager();function closePendingRestoreOPS(argument){for(var i=0,ii=preprocessor.savedStatesDepth;i<ii;i++){operatorList.addOp(_util.OPS.restore,[]);}}return new Promise(function promiseBody(resolve,reject){var next=function next(promise){promise.then(function(){try{promiseBody(resolve,reject);}catch(ex){reject(ex);}},reject);};task.ensureNotTerminated();timeSlotManager.reset();var stop,operation={},i,ii,cs;while(!(stop=timeSlotManager.check())){operation.args=null;if(!preprocessor.read(operation)){break;}var args=operation.args;var fn=operation.fn;switch(fn|0){case _util.OPS.paintXObject:var name=args[0].name;if(name&&imageCache[name]!==undefined){operatorList.addOp(imageCache[name].fn,imageCache[name].args);args=null;continue;}next(new Promise(function(resolveXObject,rejectXObject){if(!name){throw new _util.FormatError('XObject must be referred to by name.');}var xobj=xobjs.get(name);if(!xobj){operatorList.addOp(fn,args);resolveXObject();return;}if(!(0,_primitives.isStream)(xobj)){throw new _util.FormatError('XObject should be a stream');}var type=xobj.dict.get('Subtype');if(!(0,_primitives.isName)(type)){throw new _util.FormatError('XObject should have a Name subtype');}if(type.name==='Form'){stateManager.save();self.buildFormXObject(resources,xobj,null,operatorList,task,stateManager.state.clone()).then(function(){stateManager.restore();resolveXObject();},rejectXObject);return;}else if(type.name==='Image'){self.buildPaintImageXObject({resources:resources,image:xobj,operatorList:operatorList,cacheKey:name,imageCache:imageCache}).then(resolveXObject,rejectXObject);return;}else if(type.name==='PS'){(0,_util.info)('Ignored XObject subtype PS');}else{throw new _util.FormatError('Unhandled XObject subtype '+type.name);}resolveXObject();}).catch(function(reason){if(self.options.ignoreErrors){self.handler.send('UnsupportedFeature',{featureId:_util.UNSUPPORTED_FEATURES.unknown});(0,_util.warn)('getOperatorList - ignoring XObject: "'+reason+'".');return;}throw reason;}));return;case _util.OPS.setFont:var fontSize=args[1];next(self.handleSetFont(resources,args,null,operatorList,task,stateManager.state).then(function(loadedName){operatorList.addDependency(loadedName);operatorList.addOp(_util.OPS.setFont,[loadedName,fontSize]);}));return;case _util.OPS.endInlineImage:var cacheKey=args[0].cacheKey;if(cacheKey){var cacheEntry=imageCache[cacheKey];if(cacheEntry!==undefined){operatorList.addOp(cacheEntry.fn,cacheEntry.args);args=null;continue;}}next(self.buildPaintImageXObject({resources:resources,image:args[0],isInline:true,operatorList:operatorList,cacheKey:cacheKey,imageCache:imageCache}));return;case _util.OPS.showText:args[0]=self.handleText(args[0],stateManager.state);break;case _util.OPS.showSpacedText:var arr=args[0];var combinedGlyphs=[];var arrLength=arr.length;var state=stateManager.state;for(i=0;i<arrLength;++i){var arrItem=arr[i];if((0,_util.isString)(arrItem)){Array.prototype.push.apply(combinedGlyphs,self.handleText(arrItem,state));}else if((0,_util.isNum)(arrItem)){combinedGlyphs.push(arrItem);}}args[0]=combinedGlyphs;fn=_util.OPS.showText;break;case _util.OPS.nextLineShowText:operatorList.addOp(_util.OPS.nextLine);args[0]=self.handleText(args[0],stateManager.state);fn=_util.OPS.showText;break;case _util.OPS.nextLineSetSpacingShowText:operatorList.addOp(_util.OPS.nextLine);operatorList.addOp(_util.OPS.setWordSpacing,[args.shift()]);operatorList.addOp(_util.OPS.setCharSpacing,[args.shift()]);args[0]=self.handleText(args[0],stateManager.state);fn=_util.OPS.showText;break;case _util.OPS.setTextRenderingMode:stateManager.state.textRenderingMode=args[0];break;case _util.OPS.setFillColorSpace:stateManager.state.fillColorSpace=_colorspace.ColorSpace.parse(args[0],xref,resources,self.pdfFunctionFactory);continue;case _util.OPS.setStrokeColorSpace:stateManager.state.strokeColorSpace=_colorspace.ColorSpace.parse(args[0],xref,resources,self.pdfFunctionFactory);continue;case _util.OPS.setFillColor:cs=stateManager.state.fillColorSpace;args=cs.getRgb(args,0);fn=_util.OPS.setFillRGBColor;break;case _util.OPS.setStrokeColor:cs=stateManager.state.strokeColorSpace;args=cs.getRgb(args,0);fn=_util.OPS.setStrokeRGBColor;break;case _util.OPS.setFillGray:stateManager.state.fillColorSpace=_colorspace.ColorSpace.singletons.gray;args=_colorspace.ColorSpace.singletons.gray.getRgb(args,0);fn=_util.OPS.setFillRGBColor;break;case _util.OPS.setStrokeGray:stateManager.state.strokeColorSpace=_colorspace.ColorSpace.singletons.gray;args=_colorspace.ColorSpace.singletons.gray.getRgb(args,0);fn=_util.OPS.setStrokeRGBColor;break;case _util.OPS.setFillCMYKColor:stateManager.state.fillColorSpace=_colorspace.ColorSpace.singletons.cmyk;args=_colorspace.ColorSpace.singletons.cmyk.getRgb(args,0);fn=_util.OPS.setFillRGBColor;break;case _util.OPS.setStrokeCMYKColor:stateManager.state.strokeColorSpace=_colorspace.ColorSpace.singletons.cmyk;args=_colorspace.ColorSpace.singletons.cmyk.getRgb(args,0);fn=_util.OPS.setStrokeRGBColor;break;case _util.OPS.setFillRGBColor:stateManager.state.fillColorSpace=_colorspace.ColorSpace.singletons.rgb;args=_colorspace.ColorSpace.singletons.rgb.getRgb(args,0);break;case _util.OPS.setStrokeRGBColor:stateManager.state.strokeColorSpace=_colorspace.ColorSpace.singletons.rgb;args=_colorspace.ColorSpace.singletons.rgb.getRgb(args,0);break;case _util.OPS.setFillColorN:cs=stateManager.state.fillColorSpace;if(cs.name==='Pattern'){next(self.handleColorN(operatorList,_util.OPS.setFillColorN,args,cs,patterns,resources,task));return;}args=cs.getRgb(args,0);fn=_util.OPS.setFillRGBColor;break;case _util.OPS.setStrokeColorN:cs=stateManager.state.strokeColorSpace;if(cs.name==='Pattern'){next(self.handleColorN(operatorList,_util.OPS.setStrokeColorN,args,cs,patterns,resources,task));return;}args=cs.getRgb(args,0);fn=_util.OPS.setStrokeRGBColor;break;case _util.OPS.shadingFill:var shadingRes=resources.get('Shading');if(!shadingRes){throw new _util.FormatError('No shading resource found');}var shading=shadingRes.get(args[0].name);if(!shading){throw new _util.FormatError('No shading object found');}var shadingFill=_pattern.Pattern.parseShading(shading,null,xref,resources,self.handler,self.pdfFunctionFactory);var patternIR=shadingFill.getIR();args=[patternIR];fn=_util.OPS.shadingFill;break;case _util.OPS.setGState:var dictName=args[0];var extGState=resources.get('ExtGState');if(!(0,_primitives.isDict)(extGState)||!extGState.has(dictName.name)){break;}var gState=extGState.get(dictName.name);next(self.setGState(resources,gState,operatorList,task,stateManager));return;case _util.OPS.moveTo:case _util.OPS.lineTo:case _util.OPS.curveTo:case _util.OPS.curveTo2:case _util.OPS.curveTo3:case _util.OPS.closePath:self.buildPath(operatorList,fn,args);continue;case _util.OPS.rectangle:self.buildPath(operatorList,fn,args);continue;case _util.OPS.markPoint:case _util.OPS.markPointProps:case _util.OPS.beginMarkedContent:case _util.OPS.beginMarkedContentProps:case _util.OPS.endMarkedContent:case _util.OPS.beginCompat:case _util.OPS.endCompat:continue;default:if(args!==null){for(i=0,ii=args.length;i<ii;i++){if(args[i]instanceof _primitives.Dict){break;}}if(i<ii){(0,_util.warn)('getOperatorList - ignoring operator: '+fn);continue;}}}operatorList.addOp(fn,args);}if(stop){next(deferred);return;}closePendingRestoreOPS();resolve();}).catch(function(reason){if(_this8.options.ignoreErrors){_this8.handler.send('UnsupportedFeature',{featureId:_util.UNSUPPORTED_FEATURES.unknown});(0,_util.warn)('getOperatorList - ignoring errors during "'+task.name+'" '+('task: "'+reason+'".'));closePendingRestoreOPS();return;}throw reason;});},getTextContent:function getTextContent(_ref7){var _this9=this;var stream=_ref7.stream,task=_ref7.task,resources=_ref7.resources,_ref7$stateManager=_ref7.stateManager,stateManager=_ref7$stateManager===undefined?null:_ref7$stateManager,_ref7$normalizeWhites=_ref7.normalizeWhitespace,normalizeWhitespace=_ref7$normalizeWhites===undefined?false:_ref7$normalizeWhites,_ref7$combineTextItem=_ref7.combineTextItems,combineTextItems=_ref7$combineTextItem===undefined?false:_ref7$combineTextItem,sink=_ref7.sink,_ref7$seenStyles=_ref7.seenStyles,seenStyles=_ref7$seenStyles===undefined?Object.create(null):_ref7$seenStyles;resources=resources||_primitives.Dict.empty;stateManager=stateManager||new StateManager(new TextState());var WhitespaceRegexp=/\s/g;var textContent={items:[],styles:Object.create(null)};var textContentItem={initialized:false,str:[],width:0,height:0,vertical:false,lastAdvanceWidth:0,lastAdvanceHeight:0,textAdvanceScale:0,spaceWidth:0,fakeSpaceMin:Infinity,fakeMultiSpaceMin:Infinity,fakeMultiSpaceMax:-0,textRunBreakAllowed:false,transform:null,fontName:null};var SPACE_FACTOR=0.3;var MULTI_SPACE_FACTOR=1.5;var MULTI_SPACE_FACTOR_MAX=4;var self=this;var xref=this.xref;var xobjs=null;var skipEmptyXObjs=Object.create(null);var preprocessor=new EvaluatorPreprocessor(stream,xref,stateManager);var textState;function ensureTextContentItem(){if(textContentItem.initialized){return textContentItem;}var font=textState.font;if(!(font.loadedName in seenStyles)){seenStyles[font.loadedName]=true;textContent.styles[font.loadedName]={fontFamily:font.fallbackName,ascent:font.ascent,descent:font.descent,vertical:font.vertical};}textContentItem.fontName=font.loadedName;var tsm=[textState.fontSize*textState.textHScale,0,0,textState.fontSize,0,textState.textRise];if(font.isType3Font&&textState.fontMatrix!==_util.FONT_IDENTITY_MATRIX&&textState.fontSize===1){var glyphHeight=font.bbox[3]-font.bbox[1];if(glyphHeight>0){glyphHeight=glyphHeight*textState.fontMatrix[3];tsm[3]*=glyphHeight;}}var trm=_util.Util.transform(textState.ctm,_util.Util.transform(textState.textMatrix,tsm));textContentItem.transform=trm;if(!font.vertical){textContentItem.width=0;textContentItem.height=Math.sqrt(trm[2]*trm[2]+trm[3]*trm[3]);textContentItem.vertical=false;}else{textContentItem.width=Math.sqrt(trm[0]*trm[0]+trm[1]*trm[1]);textContentItem.height=0;textContentItem.vertical=true;}var a=textState.textLineMatrix[0];var b=textState.textLineMatrix[1];var scaleLineX=Math.sqrt(a*a+b*b);a=textState.ctm[0];b=textState.ctm[1];var scaleCtmX=Math.sqrt(a*a+b*b);textContentItem.textAdvanceScale=scaleCtmX*scaleLineX;textContentItem.lastAdvanceWidth=0;textContentItem.lastAdvanceHeight=0;var spaceWidth=font.spaceWidth/1000*textState.fontSize;if(spaceWidth){textContentItem.spaceWidth=spaceWidth;textContentItem.fakeSpaceMin=spaceWidth*SPACE_FACTOR;textContentItem.fakeMultiSpaceMin=spaceWidth*MULTI_SPACE_FACTOR;textContentItem.fakeMultiSpaceMax=spaceWidth*MULTI_SPACE_FACTOR_MAX;textContentItem.textRunBreakAllowed=!font.isMonospace;}else{textContentItem.spaceWidth=0;textContentItem.fakeSpaceMin=Infinity;textContentItem.fakeMultiSpaceMin=Infinity;textContentItem.fakeMultiSpaceMax=0;textContentItem.textRunBreakAllowed=false;}textContentItem.initialized=true;return textContentItem;}function replaceWhitespace(str){var i=0,ii=str.length,code;while(i<ii&&(code=str.charCodeAt(i))>=0x20&&code<=0x7F){i++;}return i<ii?str.replace(WhitespaceRegexp,' '):str;}function runBidiTransform(textChunk){var str=textChunk.str.join('');var bidiResult=(0,_bidi.bidi)(str,-1,textChunk.vertical);return{str:normalizeWhitespace?replaceWhitespace(bidiResult.str):bidiResult.str,dir:bidiResult.dir,width:textChunk.width,height:textChunk.height,transform:textChunk.transform,fontName:textChunk.fontName};}function handleSetFont(fontName,fontRef){return self.loadFont(fontName,fontRef,resources).then(function(translated){textState.font=translated.font;textState.fontMatrix=translated.font.fontMatrix||_util.FONT_IDENTITY_MATRIX;});}function buildTextContentItem(chars){var font=textState.font;var textChunk=ensureTextContentItem();var width=0;var height=0;var glyphs=font.charsToGlyphs(chars);for(var i=0;i<glyphs.length;i++){var glyph=glyphs[i];var glyphWidth=null;if(font.vertical&&glyph.vmetric){glyphWidth=glyph.vmetric[0];}else{glyphWidth=glyph.width;}var glyphUnicode=glyph.unicode;var NormalizedUnicodes=(0,_unicode.getNormalizedUnicodes)();if(NormalizedUnicodes[glyphUnicode]!==undefined){glyphUnicode=NormalizedUnicodes[glyphUnicode];}glyphUnicode=(0,_unicode.reverseIfRtl)(glyphUnicode);var charSpacing=textState.charSpacing;if(glyph.isSpace){var wordSpacing=textState.wordSpacing;charSpacing+=wordSpacing;if(wordSpacing>0){addFakeSpaces(wordSpacing,textChunk.str);}}var tx=0;var ty=0;if(!font.vertical){var w0=glyphWidth*textState.fontMatrix[0];tx=(w0*textState.fontSize+charSpacing)*textState.textHScale;width+=tx;}else{var w1=glyphWidth*textState.fontMatrix[0];ty=w1*textState.fontSize+charSpacing;height+=ty;}textState.translateTextMatrix(tx,ty);textChunk.str.push(glyphUnicode);}if(!font.vertical){textChunk.lastAdvanceWidth=width;textChunk.width+=width;}else{textChunk.lastAdvanceHeight=height;textChunk.height+=Math.abs(height);}return textChunk;}function addFakeSpaces(width,strBuf){if(width<textContentItem.fakeSpaceMin){return;}if(width<textContentItem.fakeMultiSpaceMin){strBuf.push(' ');return;}var fakeSpaces=Math.round(width/textContentItem.spaceWidth);while(fakeSpaces-->0){strBuf.push(' ');}}function flushTextContentItem(){if(!textContentItem.initialized){return;}textContentItem.width*=textContentItem.textAdvanceScale;textContentItem.height*=textContentItem.textAdvanceScale;textContent.items.push(runBidiTransform(textContentItem));textContentItem.initialized=false;textContentItem.str.length=0;}function enqueueChunk(){var length=textContent.items.length;if(length>0){sink.enqueue(textContent,length);textContent.items=[];textContent.styles=Object.create(null);}}var timeSlotManager=new TimeSlotManager();return new Promise(function promiseBody(resolve,reject){var next=function next(promise){enqueueChunk();Promise.all([promise,sink.ready]).then(function(){try{promiseBody(resolve,reject);}catch(ex){reject(ex);}},reject);};task.ensureNotTerminated();timeSlotManager.reset();var stop,operation={},args=[];while(!(stop=timeSlotManager.check())){args.length=0;operation.args=args;if(!preprocessor.read(operation)){break;}textState=stateManager.state;var fn=operation.fn;args=operation.args;var advance,diff;switch(fn|0){case _util.OPS.setFont:var fontNameArg=args[0].name,fontSizeArg=args[1];if(textState.font&&fontNameArg===textState.fontName&&fontSizeArg===textState.fontSize){break;}flushTextContentItem();textState.fontName=fontNameArg;textState.fontSize=fontSizeArg;next(handleSetFont(fontNameArg,null));return;case _util.OPS.setTextRise:flushTextContentItem();textState.textRise=args[0];break;case _util.OPS.setHScale:flushTextContentItem();textState.textHScale=args[0]/100;break;case _util.OPS.setLeading:flushTextContentItem();textState.leading=args[0];break;case _util.OPS.moveText:var isSameTextLine=!textState.font?false:(textState.font.vertical?args[0]:args[1])===0;advance=args[0]-args[1];if(combineTextItems&&isSameTextLine&&textContentItem.initialized&&advance>0&&advance<=textContentItem.fakeMultiSpaceMax){textState.translateTextLineMatrix(args[0],args[1]);textContentItem.width+=args[0]-textContentItem.lastAdvanceWidth;textContentItem.height+=args[1]-textContentItem.lastAdvanceHeight;diff=args[0]-textContentItem.lastAdvanceWidth-(args[1]-textContentItem.lastAdvanceHeight);addFakeSpaces(diff,textContentItem.str);break;}flushTextContentItem();textState.translateTextLineMatrix(args[0],args[1]);textState.textMatrix=textState.textLineMatrix.slice();break;case _util.OPS.setLeadingMoveText:flushTextContentItem();textState.leading=-args[1];textState.translateTextLineMatrix(args[0],args[1]);textState.textMatrix=textState.textLineMatrix.slice();break;case _util.OPS.nextLine:flushTextContentItem();textState.carriageReturn();break;case _util.OPS.setTextMatrix:advance=textState.calcTextLineMatrixAdvance(args[0],args[1],args[2],args[3],args[4],args[5]);if(combineTextItems&&advance!==null&&textContentItem.initialized&&advance.value>0&&advance.value<=textContentItem.fakeMultiSpaceMax){textState.translateTextLineMatrix(advance.width,advance.height);textContentItem.width+=advance.width-textContentItem.lastAdvanceWidth;textContentItem.height+=advance.height-textContentItem.lastAdvanceHeight;diff=advance.width-textContentItem.lastAdvanceWidth-(advance.height-textContentItem.lastAdvanceHeight);addFakeSpaces(diff,textContentItem.str);break;}flushTextContentItem();textState.setTextMatrix(args[0],args[1],args[2],args[3],args[4],args[5]);textState.setTextLineMatrix(args[0],args[1],args[2],args[3],args[4],args[5]);break;case _util.OPS.setCharSpacing:textState.charSpacing=args[0];break;case _util.OPS.setWordSpacing:textState.wordSpacing=args[0];break;case _util.OPS.beginText:flushTextContentItem();textState.textMatrix=_util.IDENTITY_MATRIX.slice();textState.textLineMatrix=_util.IDENTITY_MATRIX.slice();break;case _util.OPS.showSpacedText:var items=args[0];var offset;for(var j=0,jj=items.length;j<jj;j++){if(typeof items[j]==='string'){buildTextContentItem(items[j]);}else if((0,_util.isNum)(items[j])){ensureTextContentItem();advance=items[j]*textState.fontSize/1000;var breakTextRun=false;if(textState.font.vertical){offset=advance;textState.translateTextMatrix(0,offset);breakTextRun=textContentItem.textRunBreakAllowed&&advance>textContentItem.fakeMultiSpaceMax;if(!breakTextRun){textContentItem.height+=offset;}}else{advance=-advance;offset=advance*textState.textHScale;textState.translateTextMatrix(offset,0);breakTextRun=textContentItem.textRunBreakAllowed&&advance>textContentItem.fakeMultiSpaceMax;if(!breakTextRun){textContentItem.width+=offset;}}if(breakTextRun){flushTextContentItem();}else if(advance>0){addFakeSpaces(advance,textContentItem.str);}}}break;case _util.OPS.showText:buildTextContentItem(args[0]);break;case _util.OPS.nextLineShowText:flushTextContentItem();textState.carriageReturn();buildTextContentItem(args[0]);break;case _util.OPS.nextLineSetSpacingShowText:flushTextContentItem();textState.wordSpacing=args[0];textState.charSpacing=args[1];textState.carriageReturn();buildTextContentItem(args[2]);break;case _util.OPS.paintXObject:flushTextContentItem();if(!xobjs){xobjs=resources.get('XObject')||_primitives.Dict.empty;}var name=args[0].name;if(name&&skipEmptyXObjs[name]!==undefined){break;}next(new Promise(function(resolveXObject,rejectXObject){if(!name){throw new _util.FormatError('XObject must be referred to by name.');}var xobj=xobjs.get(name);if(!xobj){resolveXObject();return;}if(!(0,_primitives.isStream)(xobj)){throw new _util.FormatError('XObject should be a stream');}var type=xobj.dict.get('Subtype');if(!(0,_primitives.isName)(type)){throw new _util.FormatError('XObject should have a Name subtype');}if(type.name!=='Form'){skipEmptyXObjs[name]=true;resolveXObject();return;}var currentState=stateManager.state.clone();var xObjStateManager=new StateManager(currentState);var matrix=xobj.dict.getArray('Matrix');if(Array.isArray(matrix)&&matrix.length===6){xObjStateManager.transform(matrix);}enqueueChunk();var sinkWrapper={enqueueInvoked:false,enqueue:function enqueue(chunk,size){this.enqueueInvoked=true;sink.enqueue(chunk,size);},get desiredSize(){return sink.desiredSize;},get ready(){return sink.ready;}};self.getTextContent({stream:xobj,task:task,resources:xobj.dict.get('Resources')||resources,stateManager:xObjStateManager,normalizeWhitespace:normalizeWhitespace,combineTextItems:combineTextItems,sink:sinkWrapper,seenStyles:seenStyles}).then(function(){if(!sinkWrapper.enqueueInvoked){skipEmptyXObjs[name]=true;}resolveXObject();},rejectXObject);}).catch(function(reason){if(reason instanceof _util.AbortException){return;}if(self.options.ignoreErrors){(0,_util.warn)('getTextContent - ignoring XObject: "'+reason+'".');return;}throw reason;}));return;case _util.OPS.setGState:flushTextContentItem();var dictName=args[0];var extGState=resources.get('ExtGState');if(!(0,_primitives.isDict)(extGState)||!(0,_primitives.isName)(dictName)){break;}var gState=extGState.get(dictName.name);if(!(0,_primitives.isDict)(gState)){break;}var gStateFont=gState.get('Font');if(gStateFont){textState.fontName=null;textState.fontSize=gStateFont[1];next(handleSetFont(null,gStateFont[0]));return;}break;}if(textContent.items.length>=sink.desiredSize){stop=true;break;}}if(stop){next(deferred);return;}flushTextContentItem();enqueueChunk();resolve();}).catch(function(reason){if(reason instanceof _util.AbortException){return;}if(_this9.options.ignoreErrors){(0,_util.warn)('getTextContent - ignoring errors during "'+task.name+'" '+('task: "'+reason+'".'));flushTextContentItem();enqueueChunk();return;}throw reason;});},extractDataStructures:function PartialEvaluator_extractDataStructures(dict,baseDict,properties){var _this10=this;var xref=this.xref;var toUnicode=dict.get('ToUnicode')||baseDict.get('ToUnicode');var toUnicodePromise=toUnicode?this.readToUnicode(toUnicode):Promise.resolve(undefined);if(properties.composite){var cidSystemInfo=dict.get('CIDSystemInfo');if((0,_primitives.isDict)(cidSystemInfo)){properties.cidSystemInfo={registry:(0,_util.stringToPDFString)(cidSystemInfo.get('Registry')),ordering:(0,_util.stringToPDFString)(cidSystemInfo.get('Ordering')),supplement:cidSystemInfo.get('Supplement')};}var cidToGidMap=dict.get('CIDToGIDMap');if((0,_primitives.isStream)(cidToGidMap)){properties.cidToGidMap=this.readCidToGidMap(cidToGidMap);}}var differences=[];var baseEncodingName=null;var encoding;if(dict.has('Encoding')){encoding=dict.get('Encoding');if((0,_primitives.isDict)(encoding)){baseEncodingName=encoding.get('BaseEncoding');baseEncodingName=(0,_primitives.isName)(baseEncodingName)?baseEncodingName.name:null;if(encoding.has('Differences')){var diffEncoding=encoding.get('Differences');var index=0;for(var j=0,jj=diffEncoding.length;j<jj;j++){var data=xref.fetchIfRef(diffEncoding[j]);if((0,_util.isNum)(data)){index=data;}else if((0,_primitives.isName)(data)){differences[index++]=data.name;}else{throw new _util.FormatError('Invalid entry in \'Differences\' array: '+data);}}}}else if((0,_primitives.isName)(encoding)){baseEncodingName=encoding.name;}else{throw new _util.FormatError('Encoding is not a Name nor a Dict');}if(baseEncodingName!=='MacRomanEncoding'&&baseEncodingName!=='MacExpertEncoding'&&baseEncodingName!=='WinAnsiEncoding'){baseEncodingName=null;}}if(baseEncodingName){properties.defaultEncoding=(0,_encodings.getEncoding)(baseEncodingName).slice();}else{var isSymbolicFont=!!(properties.flags&_fonts.FontFlags.Symbolic);var isNonsymbolicFont=!!(properties.flags&_fonts.FontFlags.Nonsymbolic);encoding=_encodings.StandardEncoding;if(properties.type==='TrueType'&&!isNonsymbolicFont){encoding=_encodings.WinAnsiEncoding;}if(isSymbolicFont){encoding=_encodings.MacRomanEncoding;if(!properties.file){if(/Symbol/i.test(properties.name)){encoding=_encodings.SymbolSetEncoding;}else if(/Dingbats/i.test(properties.name)){encoding=_encodings.ZapfDingbatsEncoding;}}}properties.defaultEncoding=encoding;}properties.differences=differences;properties.baseEncodingName=baseEncodingName;properties.hasEncoding=!!baseEncodingName||differences.length>0;properties.dict=dict;return toUnicodePromise.then(function(toUnicode){properties.toUnicode=toUnicode;return _this10.buildToUnicode(properties);}).then(function(toUnicode){properties.toUnicode=toUnicode;return properties;});},_buildSimpleFontToUnicode:function _buildSimpleFontToUnicode(properties){(0,_util.assert)(!properties.composite,'Must be a simple font.');var toUnicode=[],charcode=void 0,glyphName=void 0;var encoding=properties.defaultEncoding.slice();var baseEncodingName=properties.baseEncodingName;var differences=properties.differences;for(charcode in differences){glyphName=differences[charcode];if(glyphName==='.notdef'){continue;}encoding[charcode]=glyphName;}var glyphsUnicodeMap=(0,_glyphlist.getGlyphsUnicode)();for(charcode in encoding){glyphName=encoding[charcode];if(glyphName===''){continue;}else if(glyphsUnicodeMap[glyphName]===undefined){var code=0;switch(glyphName[0]){case'G':if(glyphName.length===3){code=parseInt(glyphName.substring(1),16);}break;case'g':if(glyphName.length===5){code=parseInt(glyphName.substring(1),16);}break;case'C':case'c':if(glyphName.length>=3){code=+glyphName.substring(1);}break;default:var unicode=(0,_unicode.getUnicodeForGlyph)(glyphName,glyphsUnicodeMap);if(unicode!==-1){code=unicode;}}if(code){if(baseEncodingName&&code===+charcode){var baseEncoding=(0,_encodings.getEncoding)(baseEncodingName);if(baseEncoding&&(glyphName=baseEncoding[charcode])){toUnicode[charcode]=String.fromCharCode(glyphsUnicodeMap[glyphName]);continue;}}toUnicode[charcode]=String.fromCharCode(code);}continue;}toUnicode[charcode]=String.fromCharCode(glyphsUnicodeMap[glyphName]);}return new _fonts.ToUnicodeMap(toUnicode);},buildToUnicode:function buildToUnicode(properties){properties.hasIncludedToUnicodeMap=!!properties.toUnicode&&properties.toUnicode.length>0;if(properties.hasIncludedToUnicodeMap){if(!properties.composite&&properties.hasEncoding){properties.fallbackToUnicode=this._buildSimpleFontToUnicode(properties);}return Promise.resolve(properties.toUnicode);}if(!properties.composite){return Promise.resolve(this._buildSimpleFontToUnicode(properties));}if(properties.composite&&(properties.cMap.builtInCMap&&!(properties.cMap instanceof _cmap.IdentityCMap)||properties.cidSystemInfo.registry==='Adobe'&&(properties.cidSystemInfo.ordering==='GB1'||properties.cidSystemInfo.ordering==='CNS1'||properties.cidSystemInfo.ordering==='Japan1'||properties.cidSystemInfo.ordering==='Korea1'))){var registry=properties.cidSystemInfo.registry;var ordering=properties.cidSystemInfo.ordering;var ucs2CMapName=_primitives.Name.get(registry+'-'+ordering+'-UCS2');return _cmap.CMapFactory.create({encoding:ucs2CMapName,fetchBuiltInCMap:this.fetchBuiltInCMap,useCMap:null}).then(function(ucs2CMap){var cMap=properties.cMap;var toUnicode=[];cMap.forEach(function(charcode,cid){if(cid>0xffff){throw new _util.FormatError('Max size of CID is 65,535');}var ucs2=ucs2CMap.lookup(cid);if(ucs2){toUnicode[charcode]=String.fromCharCode((ucs2.charCodeAt(0)<<8)+ucs2.charCodeAt(1));}});return new _fonts.ToUnicodeMap(toUnicode);});}return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar,properties.lastChar));},readToUnicode:function PartialEvaluator_readToUnicode(toUnicode){var cmapObj=toUnicode;if((0,_primitives.isName)(cmapObj)){return _cmap.CMapFactory.create({encoding:cmapObj,fetchBuiltInCMap:this.fetchBuiltInCMap,useCMap:null}).then(function(cmap){if(cmap instanceof _cmap.IdentityCMap){return new _fonts.IdentityToUnicodeMap(0,0xFFFF);}return new _fonts.ToUnicodeMap(cmap.getMap());});}else if((0,_primitives.isStream)(cmapObj)){return _cmap.CMapFactory.create({encoding:cmapObj,fetchBuiltInCMap:this.fetchBuiltInCMap,useCMap:null}).then(function(cmap){if(cmap instanceof _cmap.IdentityCMap){return new _fonts.IdentityToUnicodeMap(0,0xFFFF);}var map=new Array(cmap.length);cmap.forEach(function(charCode,token){var str=[];for(var k=0;k<token.length;k+=2){var w1=token.charCodeAt(k)<<8|token.charCodeAt(k+1);if((w1&0xF800)!==0xD800){str.push(w1);continue;}k+=2;var w2=token.charCodeAt(k)<<8|token.charCodeAt(k+1);str.push(((w1&0x3ff)<<10)+(w2&0x3ff)+0x10000);}map[charCode]=String.fromCharCode.apply(String,str);});return new _fonts.ToUnicodeMap(map);});}return Promise.resolve(null);},readCidToGidMap:function PartialEvaluator_readCidToGidMap(cidToGidStream){var glyphsData=cidToGidStream.getBytes();var result=[];for(var j=0,jj=glyphsData.length;j<jj;j++){var glyphID=glyphsData[j++]<<8|glyphsData[j];if(glyphID===0){continue;}var code=j>>1;result[code]=glyphID;}return result;},extractWidths:function PartialEvaluator_extractWidths(dict,descriptor,properties){var xref=this.xref;var glyphsWidths=[];var defaultWidth=0;var glyphsVMetrics=[];var defaultVMetrics;var i,ii,j,jj,start,code,widths;if(properties.composite){defaultWidth=dict.has('DW')?dict.get('DW'):1000;widths=dict.get('W');if(widths){for(i=0,ii=widths.length;i<ii;i++){start=xref.fetchIfRef(widths[i++]);code=xref.fetchIfRef(widths[i]);if(Array.isArray(code)){for(j=0,jj=code.length;j<jj;j++){glyphsWidths[start++]=xref.fetchIfRef(code[j]);}}else{var width=xref.fetchIfRef(widths[++i]);for(j=start;j<=code;j++){glyphsWidths[j]=width;}}}}if(properties.vertical){var vmetrics=dict.getArray('DW2')||[880,-1000];defaultVMetrics=[vmetrics[1],defaultWidth*0.5,vmetrics[0]];vmetrics=dict.get('W2');if(vmetrics){for(i=0,ii=vmetrics.length;i<ii;i++){start=xref.fetchIfRef(vmetrics[i++]);code=xref.fetchIfRef(vmetrics[i]);if(Array.isArray(code)){for(j=0,jj=code.length;j<jj;j++){glyphsVMetrics[start++]=[xref.fetchIfRef(code[j++]),xref.fetchIfRef(code[j++]),xref.fetchIfRef(code[j])];}}else{var vmetric=[xref.fetchIfRef(vmetrics[++i]),xref.fetchIfRef(vmetrics[++i]),xref.fetchIfRef(vmetrics[++i])];for(j=start;j<=code;j++){glyphsVMetrics[j]=vmetric;}}}}}}else{var firstChar=properties.firstChar;widths=dict.get('Widths');if(widths){j=firstChar;for(i=0,ii=widths.length;i<ii;i++){glyphsWidths[j++]=xref.fetchIfRef(widths[i]);}defaultWidth=parseFloat(descriptor.get('MissingWidth'))||0;}else{var baseFontName=dict.get('BaseFont');if((0,_primitives.isName)(baseFontName)){var metrics=this.getBaseFontMetrics(baseFontName.name);glyphsWidths=this.buildCharCodeToWidth(metrics.widths,properties);defaultWidth=metrics.defaultWidth;}}}var isMonospace=true;var firstWidth=defaultWidth;for(var glyph in glyphsWidths){var glyphWidth=glyphsWidths[glyph];if(!glyphWidth){continue;}if(!firstWidth){firstWidth=glyphWidth;continue;}if(firstWidth!==glyphWidth){isMonospace=false;break;}}if(isMonospace){properties.flags|=_fonts.FontFlags.FixedPitch;}properties.defaultWidth=defaultWidth;properties.widths=glyphsWidths;properties.defaultVMetrics=defaultVMetrics;properties.vmetrics=glyphsVMetrics;},isSerifFont:function PartialEvaluator_isSerifFont(baseFontName){var fontNameWoStyle=baseFontName.split('-')[0];return fontNameWoStyle in(0,_standard_fonts.getSerifFonts)()||fontNameWoStyle.search(/serif/gi)!==-1;},getBaseFontMetrics:function PartialEvaluator_getBaseFontMetrics(name){var defaultWidth=0;var widths=[];var monospace=false;var stdFontMap=(0,_standard_fonts.getStdFontMap)();var lookupName=stdFontMap[name]||name;var Metrics=(0,_metrics.getMetrics)();if(!(lookupName in Metrics)){if(this.isSerifFont(name)){lookupName='Times-Roman';}else{lookupName='Helvetica';}}var glyphWidths=Metrics[lookupName];if((0,_util.isNum)(glyphWidths)){defaultWidth=glyphWidths;monospace=true;}else{widths=glyphWidths();}return{defaultWidth:defaultWidth,monospace:monospace,widths:widths};},buildCharCodeToWidth:function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName,properties){var widths=Object.create(null);var differences=properties.differences;var encoding=properties.defaultEncoding;for(var charCode=0;charCode<256;charCode++){if(charCode in differences&&widthsByGlyphName[differences[charCode]]){widths[charCode]=widthsByGlyphName[differences[charCode]];continue;}if(charCode in encoding&&widthsByGlyphName[encoding[charCode]]){widths[charCode]=widthsByGlyphName[encoding[charCode]];continue;}}return widths;},preEvaluateFont:function PartialEvaluator_preEvaluateFont(dict){var baseDict=dict;var type=dict.get('Subtype');if(!(0,_primitives.isName)(type)){throw new _util.FormatError('invalid font Subtype');}var composite=false;var uint8array;if(type.name==='Type0'){var df=dict.get('DescendantFonts');if(!df){throw new _util.FormatError('Descendant fonts are not specified');}dict=Array.isArray(df)?this.xref.fetchIfRef(df[0]):df;type=dict.get('Subtype');if(!(0,_primitives.isName)(type)){throw new _util.FormatError('invalid font Subtype');}composite=true;}var descriptor=dict.get('FontDescriptor');if(descriptor){var hash=new _murmurhash.MurmurHash3_64();var encoding=baseDict.getRaw('Encoding');if((0,_primitives.isName)(encoding)){hash.update(encoding.name);}else if((0,_primitives.isRef)(encoding)){hash.update(encoding.toString());}else if((0,_primitives.isDict)(encoding)){var keys=encoding.getKeys();for(var i=0,ii=keys.length;i<ii;i++){var entry=encoding.getRaw(keys[i]);if((0,_primitives.isName)(entry)){hash.update(entry.name);}else if((0,_primitives.isRef)(entry)){hash.update(entry.toString());}else if(Array.isArray(entry)){var diffLength=entry.length,diffBuf=new Array(diffLength);for(var j=0;j<diffLength;j++){var diffEntry=entry[j];if((0,_primitives.isName)(diffEntry)){diffBuf[j]=diffEntry.name;}else if((0,_util.isNum)(diffEntry)||(0,_primitives.isRef)(diffEntry)){diffBuf[j]=diffEntry.toString();}}hash.update(diffBuf.join());}}}var toUnicode=dict.get('ToUnicode')||baseDict.get('ToUnicode');if((0,_primitives.isStream)(toUnicode)){var stream=toUnicode.str||toUnicode;uint8array=stream.buffer?new Uint8Array(stream.buffer.buffer,0,stream.bufferLength):new Uint8Array(stream.bytes.buffer,stream.start,stream.end-stream.start);hash.update(uint8array);}else if((0,_primitives.isName)(toUnicode)){hash.update(toUnicode.name);}var widths=dict.get('Widths')||baseDict.get('Widths');if(widths){uint8array=new Uint8Array(new Uint32Array(widths).buffer);hash.update(uint8array);}}return{descriptor:descriptor,dict:dict,baseDict:baseDict,composite:composite,type:type.name,hash:hash?hash.hexdigest():''};},translateFont:function PartialEvaluator_translateFont(preEvaluatedFont){var _this11=this;var baseDict=preEvaluatedFont.baseDict;var dict=preEvaluatedFont.dict;var composite=preEvaluatedFont.composite;var descriptor=preEvaluatedFont.descriptor;var type=preEvaluatedFont.type;var maxCharIndex=composite?0xFFFF:0xFF;var properties;if(!descriptor){if(type==='Type3'){descriptor=new _primitives.Dict(null);descriptor.set('FontName',_primitives.Name.get(type));descriptor.set('FontBBox',dict.getArray('FontBBox'));}else{var baseFontName=dict.get('BaseFont');if(!(0,_primitives.isName)(baseFontName)){throw new _util.FormatError('Base font is not specified');}baseFontName=baseFontName.name.replace(/[,_]/g,'-');var metrics=this.getBaseFontMetrics(baseFontName);var fontNameWoStyle=baseFontName.split('-')[0];var flags=(this.isSerifFont(fontNameWoStyle)?_fonts.FontFlags.Serif:0)|(metrics.monospace?_fonts.FontFlags.FixedPitch:0)|((0,_standard_fonts.getSymbolsFonts)()[fontNameWoStyle]?_fonts.FontFlags.Symbolic:_fonts.FontFlags.Nonsymbolic);properties={type:type,name:baseFontName,widths:metrics.widths,defaultWidth:metrics.defaultWidth,flags:flags,firstChar:0,lastChar:maxCharIndex};return this.extractDataStructures(dict,dict,properties).then(function(properties){properties.widths=_this11.buildCharCodeToWidth(metrics.widths,properties);return new _fonts.Font(baseFontName,null,properties);});}}var firstChar=dict.get('FirstChar')||0;var lastChar=dict.get('LastChar')||maxCharIndex;var fontName=descriptor.get('FontName');var baseFont=dict.get('BaseFont');if((0,_util.isString)(fontName)){fontName=_primitives.Name.get(fontName);}if((0,_util.isString)(baseFont)){baseFont=_primitives.Name.get(baseFont);}if(type!=='Type3'){var fontNameStr=fontName&&fontName.name;var baseFontStr=baseFont&&baseFont.name;if(fontNameStr!==baseFontStr){(0,_util.info)('The FontDescriptor\'s FontName is "'+fontNameStr+'" but should be the same as the Font\'s BaseFont "'+baseFontStr+'"');if(fontNameStr&&baseFontStr&&baseFontStr.indexOf(fontNameStr)===0){fontName=baseFont;}}}fontName=fontName||baseFont;if(!(0,_primitives.isName)(fontName)){throw new _util.FormatError('invalid font name');}var fontFile=descriptor.get('FontFile','FontFile2','FontFile3');if(fontFile){if(fontFile.dict){var subtype=fontFile.dict.get('Subtype');if(subtype){subtype=subtype.name;}var length1=fontFile.dict.get('Length1');var length2=fontFile.dict.get('Length2');var length3=fontFile.dict.get('Length3');}}properties={type:type,name:fontName.name,subtype:subtype,file:fontFile,length1:length1,length2:length2,length3:length3,loadedName:baseDict.loadedName,composite:composite,wideChars:composite,fixedPitch:false,fontMatrix:dict.getArray('FontMatrix')||_util.FONT_IDENTITY_MATRIX,firstChar:firstChar||0,lastChar:lastChar||maxCharIndex,bbox:descriptor.getArray('FontBBox'),ascent:descriptor.get('Ascent'),descent:descriptor.get('Descent'),xHeight:descriptor.get('XHeight'),capHeight:descriptor.get('CapHeight'),flags:descriptor.get('Flags'),italicAngle:descriptor.get('ItalicAngle'),isType3Font:false};var cMapPromise;if(composite){var cidEncoding=baseDict.get('Encoding');if((0,_primitives.isName)(cidEncoding)){properties.cidEncoding=cidEncoding.name;}cMapPromise=_cmap.CMapFactory.create({encoding:cidEncoding,fetchBuiltInCMap:this.fetchBuiltInCMap,useCMap:null}).then(function(cMap){properties.cMap=cMap;properties.vertical=properties.cMap.vertical;});}else{cMapPromise=Promise.resolve(undefined);}return cMapPromise.then(function(){return _this11.extractDataStructures(dict,baseDict,properties);}).then(function(properties){_this11.extractWidths(dict,descriptor,properties);if(type==='Type3'){properties.isType3Font=true;}return new _fonts.Font(fontName.name,fontFile,properties);});}};return PartialEvaluator;}();var TranslatedFont=function TranslatedFontClosure(){function TranslatedFont(loadedName,font,dict){this.loadedName=loadedName;this.font=font;this.dict=dict;this.type3Loaded=null;this.sent=false;}TranslatedFont.prototype={send:function send(handler){if(this.sent){return;}var fontData=this.font.exportData();handler.send('commonobj',[this.loadedName,'Font',fontData]);this.sent=true;},loadType3Data:function loadType3Data(evaluator,resources,parentOperatorList,task){if(!this.font.isType3Font){throw new Error('Must be a Type3 font.');}if(this.type3Loaded){return this.type3Loaded;}var type3Options=Object.create(evaluator.options);type3Options.ignoreErrors=false;var type3Evaluator=evaluator.clone(type3Options);var translatedFont=this.font;var loadCharProcsPromise=Promise.resolve();var charProcs=this.dict.get('CharProcs');var fontResources=this.dict.get('Resources')||resources;var charProcKeys=charProcs.getKeys();var charProcOperatorList=Object.create(null);var _loop2=function _loop2(){var key=charProcKeys[i];loadCharProcsPromise=loadCharProcsPromise.then(function(){var glyphStream=charProcs.get(key);var operatorList=new _operator_list.OperatorList();return type3Evaluator.getOperatorList({stream:glyphStream,task:task,resources:fontResources,operatorList:operatorList}).then(function(){charProcOperatorList[key]=operatorList.getIR();parentOperatorList.addDependencies(operatorList.dependencies);}).catch(function(reason){(0,_util.warn)('Type3 font resource "'+key+'" is not available.');var operatorList=new _operator_list.OperatorList();charProcOperatorList[key]=operatorList.getIR();});});};for(var i=0,n=charProcKeys.length;i<n;++i){_loop2();}this.type3Loaded=loadCharProcsPromise.then(function(){translatedFont.charProcOperatorList=charProcOperatorList;});return this.type3Loaded;}};return TranslatedFont;}();var StateManager=function StateManagerClosure(){function StateManager(initialState){this.state=initialState;this.stateStack=[];}StateManager.prototype={save:function save(){var old=this.state;this.stateStack.push(this.state);this.state=old.clone();},restore:function restore(){var prev=this.stateStack.pop();if(prev){this.state=prev;}},transform:function transform(args){this.state.ctm=_util.Util.transform(this.state.ctm,args);}};return StateManager;}();var TextState=function TextStateClosure(){function TextState(){this.ctm=new Float32Array(_util.IDENTITY_MATRIX);this.fontName=null;this.fontSize=0;this.font=null;this.fontMatrix=_util.FONT_IDENTITY_MATRIX;this.textMatrix=_util.IDENTITY_MATRIX.slice();this.textLineMatrix=_util.IDENTITY_MATRIX.slice();this.charSpacing=0;this.wordSpacing=0;this.leading=0;this.textHScale=1;this.textRise=0;}TextState.prototype={setTextMatrix:function TextState_setTextMatrix(a,b,c,d,e,f){var m=this.textMatrix;m[0]=a;m[1]=b;m[2]=c;m[3]=d;m[4]=e;m[5]=f;},setTextLineMatrix:function TextState_setTextMatrix(a,b,c,d,e,f){var m=this.textLineMatrix;m[0]=a;m[1]=b;m[2]=c;m[3]=d;m[4]=e;m[5]=f;},translateTextMatrix:function TextState_translateTextMatrix(x,y){var m=this.textMatrix;m[4]=m[0]*x+m[2]*y+m[4];m[5]=m[1]*x+m[3]*y+m[5];},translateTextLineMatrix:function TextState_translateTextMatrix(x,y){var m=this.textLineMatrix;m[4]=m[0]*x+m[2]*y+m[4];m[5]=m[1]*x+m[3]*y+m[5];},calcTextLineMatrixAdvance:function TextState_calcTextLineMatrixAdvance(a,b,c,d,e,f){var font=this.font;if(!font){return null;}var m=this.textLineMatrix;if(!(a===m[0]&&b===m[1]&&c===m[2]&&d===m[3])){return null;}var txDiff=e-m[4],tyDiff=f-m[5];if(font.vertical&&txDiff!==0||!font.vertical&&tyDiff!==0){return null;}var tx,ty,denominator=a*d-b*c;if(font.vertical){tx=-tyDiff*c/denominator;ty=tyDiff*a/denominator;}else{tx=txDiff*d/denominator;ty=-txDiff*b/denominator;}return{width:tx,height:ty,value:font.vertical?ty:tx};},calcRenderMatrix:function TextState_calcRendeMatrix(ctm){var tsm=[this.fontSize*this.textHScale,0,0,this.fontSize,0,this.textRise];return _util.Util.transform(ctm,_util.Util.transform(this.textMatrix,tsm));},carriageReturn:function TextState_carriageReturn(){this.translateTextLineMatrix(0,-this.leading);this.textMatrix=this.textLineMatrix.slice();},clone:function TextState_clone(){var clone=Object.create(this);clone.textMatrix=this.textMatrix.slice();clone.textLineMatrix=this.textLineMatrix.slice();clone.fontMatrix=this.fontMatrix.slice();return clone;}};return TextState;}();var EvalState=function EvalStateClosure(){function EvalState(){this.ctm=new Float32Array(_util.IDENTITY_MATRIX);this.font=null;this.textRenderingMode=_util.TextRenderingMode.FILL;this.fillColorSpace=_colorspace.ColorSpace.singletons.gray;this.strokeColorSpace=_colorspace.ColorSpace.singletons.gray;}EvalState.prototype={clone:function CanvasExtraState_clone(){return Object.create(this);}};return EvalState;}();var EvaluatorPreprocessor=function EvaluatorPreprocessorClosure(){var getOPMap=(0,_util.getLookupTableFactory)(function(t){t['w']={id:_util.OPS.setLineWidth,numArgs:1,variableArgs:false};t['J']={id:_util.OPS.setLineCap,numArgs:1,variableArgs:false};t['j']={id:_util.OPS.setLineJoin,numArgs:1,variableArgs:false};t['M']={id:_util.OPS.setMiterLimit,numArgs:1,variableArgs:false};t['d']={id:_util.OPS.setDash,numArgs:2,variableArgs:false};t['ri']={id:_util.OPS.setRenderingIntent,numArgs:1,variableArgs:false};t['i']={id:_util.OPS.setFlatness,numArgs:1,variableArgs:false};t['gs']={id:_util.OPS.setGState,numArgs:1,variableArgs:false};t['q']={id:_util.OPS.save,numArgs:0,variableArgs:false};t['Q']={id:_util.OPS.restore,numArgs:0,variableArgs:false};t['cm']={id:_util.OPS.transform,numArgs:6,variableArgs:false};t['m']={id:_util.OPS.moveTo,numArgs:2,variableArgs:false};t['l']={id:_util.OPS.lineTo,numArgs:2,variableArgs:false};t['c']={id:_util.OPS.curveTo,numArgs:6,variableArgs:false};t['v']={id:_util.OPS.curveTo2,numArgs:4,variableArgs:false};t['y']={id:_util.OPS.curveTo3,numArgs:4,variableArgs:false};t['h']={id:_util.OPS.closePath,numArgs:0,variableArgs:false};t['re']={id:_util.OPS.rectangle,numArgs:4,variableArgs:false};t['S']={id:_util.OPS.stroke,numArgs:0,variableArgs:false};t['s']={id:_util.OPS.closeStroke,numArgs:0,variableArgs:false};t['f']={id:_util.OPS.fill,numArgs:0,variableArgs:false};t['F']={id:_util.OPS.fill,numArgs:0,variableArgs:false};t['f*']={id:_util.OPS.eoFill,numArgs:0,variableArgs:false};t['B']={id:_util.OPS.fillStroke,numArgs:0,variableArgs:false};t['B*']={id:_util.OPS.eoFillStroke,numArgs:0,variableArgs:false};t['b']={id:_util.OPS.closeFillStroke,numArgs:0,variableArgs:false};t['b*']={id:_util.OPS.closeEOFillStroke,numArgs:0,variableArgs:false};t['n']={id:_util.OPS.endPath,numArgs:0,variableArgs:false};t['W']={id:_util.OPS.clip,numArgs:0,variableArgs:false};t['W*']={id:_util.OPS.eoClip,numArgs:0,variableArgs:false};t['BT']={id:_util.OPS.beginText,numArgs:0,variableArgs:false};t['ET']={id:_util.OPS.endText,numArgs:0,variableArgs:false};t['Tc']={id:_util.OPS.setCharSpacing,numArgs:1,variableArgs:false};t['Tw']={id:_util.OPS.setWordSpacing,numArgs:1,variableArgs:false};t['Tz']={id:_util.OPS.setHScale,numArgs:1,variableArgs:false};t['TL']={id:_util.OPS.setLeading,numArgs:1,variableArgs:false};t['Tf']={id:_util.OPS.setFont,numArgs:2,variableArgs:false};t['Tr']={id:_util.OPS.setTextRenderingMode,numArgs:1,variableArgs:false};t['Ts']={id:_util.OPS.setTextRise,numArgs:1,variableArgs:false};t['Td']={id:_util.OPS.moveText,numArgs:2,variableArgs:false};t['TD']={id:_util.OPS.setLeadingMoveText,numArgs:2,variableArgs:false};t['Tm']={id:_util.OPS.setTextMatrix,numArgs:6,variableArgs:false};t['T*']={id:_util.OPS.nextLine,numArgs:0,variableArgs:false};t['Tj']={id:_util.OPS.showText,numArgs:1,variableArgs:false};t['TJ']={id:_util.OPS.showSpacedText,numArgs:1,variableArgs:false};t['\'']={id:_util.OPS.nextLineShowText,numArgs:1,variableArgs:false};t['"']={id:_util.OPS.nextLineSetSpacingShowText,numArgs:3,variableArgs:false};t['d0']={id:_util.OPS.setCharWidth,numArgs:2,variableArgs:false};t['d1']={id:_util.OPS.setCharWidthAndBounds,numArgs:6,variableArgs:false};t['CS']={id:_util.OPS.setStrokeColorSpace,numArgs:1,variableArgs:false};t['cs']={id:_util.OPS.setFillColorSpace,numArgs:1,variableArgs:false};t['SC']={id:_util.OPS.setStrokeColor,numArgs:4,variableArgs:true};t['SCN']={id:_util.OPS.setStrokeColorN,numArgs:33,variableArgs:true};t['sc']={id:_util.OPS.setFillColor,numArgs:4,variableArgs:true};t['scn']={id:_util.OPS.setFillColorN,numArgs:33,variableArgs:true};t['G']={id:_util.OPS.setStrokeGray,numArgs:1,variableArgs:false};t['g']={id:_util.OPS.setFillGray,numArgs:1,variableArgs:false};t['RG']={id:_util.OPS.setStrokeRGBColor,numArgs:3,variableArgs:false};t['rg']={id:_util.OPS.setFillRGBColor,numArgs:3,variableArgs:false};t['K']={id:_util.OPS.setStrokeCMYKColor,numArgs:4,variableArgs:false};t['k']={id:_util.OPS.setFillCMYKColor,numArgs:4,variableArgs:false};t['sh']={id:_util.OPS.shadingFill,numArgs:1,variableArgs:false};t['BI']={id:_util.OPS.beginInlineImage,numArgs:0,variableArgs:false};t['ID']={id:_util.OPS.beginImageData,numArgs:0,variableArgs:false};t['EI']={id:_util.OPS.endInlineImage,numArgs:1,variableArgs:false};t['Do']={id:_util.OPS.paintXObject,numArgs:1,variableArgs:false};t['MP']={id:_util.OPS.markPoint,numArgs:1,variableArgs:false};t['DP']={id:_util.OPS.markPointProps,numArgs:2,variableArgs:false};t['BMC']={id:_util.OPS.beginMarkedContent,numArgs:1,variableArgs:false};t['BDC']={id:_util.OPS.beginMarkedContentProps,numArgs:2,variableArgs:false};t['EMC']={id:_util.OPS.endMarkedContent,numArgs:0,variableArgs:false};t['BX']={id:_util.OPS.beginCompat,numArgs:0,variableArgs:false};t['EX']={id:_util.OPS.endCompat,numArgs:0,variableArgs:false};t['BM']=null;t['BD']=null;t['true']=null;t['fa']=null;t['fal']=null;t['fals']=null;t['false']=null;t['nu']=null;t['nul']=null;t['null']=null;});var MAX_INVALID_PATH_OPS=20;function EvaluatorPreprocessor(stream,xref,stateManager){this.opMap=getOPMap();this.parser=new _parser.Parser(new _parser.Lexer(stream,this.opMap),false,xref);this.stateManager=stateManager;this.nonProcessedArgs=[];this._numInvalidPathOPS=0;}EvaluatorPreprocessor.prototype={get savedStatesDepth(){return this.stateManager.stateStack.length;},read:function EvaluatorPreprocessor_read(operation){var args=operation.args;while(true){var obj=this.parser.getObj();if((0,_primitives.isCmd)(obj)){var cmd=obj.cmd;var opSpec=this.opMap[cmd];if(!opSpec){(0,_util.warn)('Unknown command "'+cmd+'".');continue;}var fn=opSpec.id;var numArgs=opSpec.numArgs;var argsLength=args!==null?args.length:0;if(!opSpec.variableArgs){if(argsLength!==numArgs){var nonProcessedArgs=this.nonProcessedArgs;while(argsLength>numArgs){nonProcessedArgs.push(args.shift());argsLength--;}while(argsLength<numArgs&&nonProcessedArgs.length!==0){if(args===null){args=[];}args.unshift(nonProcessedArgs.pop());argsLength++;}}if(argsLength<numArgs){var partialMsg='command '+cmd+': expected '+numArgs+' args, '+('but received '+argsLength+' args.');if(fn>=_util.OPS.moveTo&&fn<=_util.OPS.endPath&&++this._numInvalidPathOPS>MAX_INVALID_PATH_OPS){throw new _util.FormatError('Invalid '+partialMsg);}(0,_util.warn)('Skipping '+partialMsg);if(args!==null){args.length=0;}continue;}}else if(argsLength>numArgs){(0,_util.info)('Command '+cmd+': expected [0, '+numArgs+'] args, '+('but received '+argsLength+' args.'));}this.preprocessCommand(fn,args);operation.fn=fn;operation.args=args;return true;}if((0,_primitives.isEOF)(obj)){return false;}if(obj!==null){if(args===null){args=[];}args.push(obj);if(args.length>33){throw new _util.FormatError('Too many arguments');}}}},preprocessCommand:function EvaluatorPreprocessor_preprocessCommand(fn,args){switch(fn|0){case _util.OPS.save:this.stateManager.save();break;case _util.OPS.restore:this.stateManager.restore();break;case _util.OPS.transform:this.stateManager.transform(args);break;}}};return EvaluatorPreprocessor;}();exports.PartialEvaluator=PartialEvaluator;/***/},/* 155 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.CMapFactory=exports.IdentityCMap=exports.CMap=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _util=__w_pdfjs_require__(2);var _primitives=__w_pdfjs_require__(138);var _parser=__w_pdfjs_require__(139);var _stream=__w_pdfjs_require__(140);function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(_typeof3(call)==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+_typeof3(superClass));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var BUILT_IN_CMAPS=['Adobe-GB1-UCS2','Adobe-CNS1-UCS2','Adobe-Japan1-UCS2','Adobe-Korea1-UCS2','78-EUC-H','78-EUC-V','78-H','78-RKSJ-H','78-RKSJ-V','78-V','78ms-RKSJ-H','78ms-RKSJ-V','83pv-RKSJ-H','90ms-RKSJ-H','90ms-RKSJ-V','90msp-RKSJ-H','90msp-RKSJ-V','90pv-RKSJ-H','90pv-RKSJ-V','Add-H','Add-RKSJ-H','Add-RKSJ-V','Add-V','Adobe-CNS1-0','Adobe-CNS1-1','Adobe-CNS1-2','Adobe-CNS1-3','Adobe-CNS1-4','Adobe-CNS1-5','Adobe-CNS1-6','Adobe-GB1-0','Adobe-GB1-1','Adobe-GB1-2','Adobe-GB1-3','Adobe-GB1-4','Adobe-GB1-5','Adobe-Japan1-0','Adobe-Japan1-1','Adobe-Japan1-2','Adobe-Japan1-3','Adobe-Japan1-4','Adobe-Japan1-5','Adobe-Japan1-6','Adobe-Korea1-0','Adobe-Korea1-1','Adobe-Korea1-2','B5-H','B5-V','B5pc-H','B5pc-V','CNS-EUC-H','CNS-EUC-V','CNS1-H','CNS1-V','CNS2-H','CNS2-V','ETHK-B5-H','ETHK-B5-V','ETen-B5-H','ETen-B5-V','ETenms-B5-H','ETenms-B5-V','EUC-H','EUC-V','Ext-H','Ext-RKSJ-H','Ext-RKSJ-V','Ext-V','GB-EUC-H','GB-EUC-V','GB-H','GB-V','GBK-EUC-H','GBK-EUC-V','GBK2K-H','GBK2K-V','GBKp-EUC-H','GBKp-EUC-V','GBT-EUC-H','GBT-EUC-V','GBT-H','GBT-V','GBTpc-EUC-H','GBTpc-EUC-V','GBpc-EUC-H','GBpc-EUC-V','H','HKdla-B5-H','HKdla-B5-V','HKdlb-B5-H','HKdlb-B5-V','HKgccs-B5-H','HKgccs-B5-V','HKm314-B5-H','HKm314-B5-V','HKm471-B5-H','HKm471-B5-V','HKscs-B5-H','HKscs-B5-V','Hankaku','Hiragana','KSC-EUC-H','KSC-EUC-V','KSC-H','KSC-Johab-H','KSC-Johab-V','KSC-V','KSCms-UHC-H','KSCms-UHC-HW-H','KSCms-UHC-HW-V','KSCms-UHC-V','KSCpc-EUC-H','KSCpc-EUC-V','Katakana','NWP-H','NWP-V','RKSJ-H','RKSJ-V','Roman','UniCNS-UCS2-H','UniCNS-UCS2-V','UniCNS-UTF16-H','UniCNS-UTF16-V','UniCNS-UTF32-H','UniCNS-UTF32-V','UniCNS-UTF8-H','UniCNS-UTF8-V','UniGB-UCS2-H','UniGB-UCS2-V','UniGB-UTF16-H','UniGB-UTF16-V','UniGB-UTF32-H','UniGB-UTF32-V','UniGB-UTF8-H','UniGB-UTF8-V','UniJIS-UCS2-H','UniJIS-UCS2-HW-H','UniJIS-UCS2-HW-V','UniJIS-UCS2-V','UniJIS-UTF16-H','UniJIS-UTF16-V','UniJIS-UTF32-H','UniJIS-UTF32-V','UniJIS-UTF8-H','UniJIS-UTF8-V','UniJIS2004-UTF16-H','UniJIS2004-UTF16-V','UniJIS2004-UTF32-H','UniJIS2004-UTF32-V','UniJIS2004-UTF8-H','UniJIS2004-UTF8-V','UniJISPro-UCS2-HW-V','UniJISPro-UCS2-V','UniJISPro-UTF8-V','UniJISX0213-UTF32-H','UniJISX0213-UTF32-V','UniJISX02132004-UTF32-H','UniJISX02132004-UTF32-V','UniKS-UCS2-H','UniKS-UCS2-V','UniKS-UTF16-H','UniKS-UTF16-V','UniKS-UTF32-H','UniKS-UTF32-V','UniKS-UTF8-H','UniKS-UTF8-V','V','WP-Symbol'];var CMap=function(){function CMap(){var builtInCMap=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;_classCallCheck(this,CMap);this.codespaceRanges=[[],[],[],[]];this.numCodespaceRanges=0;this._map=[];this.name='';this.vertical=false;this.useCMap=null;this.builtInCMap=builtInCMap;}_createClass(CMap,[{key:'addCodespaceRange',value:function addCodespaceRange(n,low,high){this.codespaceRanges[n-1].push(low,high);this.numCodespaceRanges++;}},{key:'mapCidRange',value:function mapCidRange(low,high,dstLow){while(low<=high){this._map[low++]=dstLow++;}}},{key:'mapBfRange',value:function mapBfRange(low,high,dstLow){var lastByte=dstLow.length-1;while(low<=high){this._map[low++]=dstLow;dstLow=dstLow.substring(0,lastByte)+String.fromCharCode(dstLow.charCodeAt(lastByte)+1);}}},{key:'mapBfRangeToArray',value:function mapBfRangeToArray(low,high,array){var i=0,ii=array.length;while(low<=high&&i<ii){this._map[low]=array[i++];++low;}}},{key:'mapOne',value:function mapOne(src,dst){this._map[src]=dst;}},{key:'lookup',value:function lookup(code){return this._map[code];}},{key:'contains',value:function contains(code){return this._map[code]!==undefined;}},{key:'forEach',value:function forEach(callback){var map=this._map;var length=map.length;if(length<=0x10000){for(var i=0;i<length;i++){if(map[i]!==undefined){callback(i,map[i]);}}}else{for(var _i in map){callback(_i,map[_i]);}}}},{key:'charCodeOf',value:function charCodeOf(value){var map=this._map;if(map.length<=0x10000){return map.indexOf(value);}for(var charCode in map){if(map[charCode]===value){return charCode|0;}}return-1;}},{key:'getMap',value:function getMap(){return this._map;}},{key:'readCharCode',value:function readCharCode(str,offset,out){var c=0;var codespaceRanges=this.codespaceRanges;for(var n=0,nn=codespaceRanges.length;n<nn;n++){c=(c<<8|str.charCodeAt(offset+n))>>>0;var codespaceRange=codespaceRanges[n];for(var k=0,kk=codespaceRange.length;k<kk;){var low=codespaceRange[k++];var high=codespaceRange[k++];if(c>=low&&c<=high){out.charcode=c;out.length=n+1;return;}}}out.charcode=0;out.length=1;}},{key:'length',get:function get(){return this._map.length;}},{key:'isIdentityCMap',get:function get(){if(!(this.name==='Identity-H'||this.name==='Identity-V')){return false;}if(this._map.length!==0x10000){return false;}for(var i=0;i<0x10000;i++){if(this._map[i]!==i){return false;}}return true;}}]);return CMap;}();var IdentityCMap=function(_CMap){_inherits(IdentityCMap,_CMap);function IdentityCMap(vertical,n){_classCallCheck(this,IdentityCMap);var _this=_possibleConstructorReturn(this,(IdentityCMap.__proto__||Object.getPrototypeOf(IdentityCMap)).call(this));_this.vertical=vertical;_this.addCodespaceRange(n,0,0xffff);return _this;}_createClass(IdentityCMap,[{key:'mapCidRange',value:function mapCidRange(low,high,dstLow){(0,_util.unreachable)('should not call mapCidRange');}},{key:'mapBfRange',value:function mapBfRange(low,high,dstLow){(0,_util.unreachable)('should not call mapBfRange');}},{key:'mapBfRangeToArray',value:function mapBfRangeToArray(low,high,array){(0,_util.unreachable)('should not call mapBfRangeToArray');}},{key:'mapOne',value:function mapOne(src,dst){(0,_util.unreachable)('should not call mapCidOne');}},{key:'lookup',value:function lookup(code){return Number.isInteger(code)&&code<=0xffff?code:undefined;}},{key:'contains',value:function contains(code){return Number.isInteger(code)&&code<=0xffff;}},{key:'forEach',value:function forEach(callback){for(var i=0;i<=0xffff;i++){callback(i,i);}}},{key:'charCodeOf',value:function charCodeOf(value){return Number.isInteger(value)&&value<=0xffff?value:-1;}},{key:'getMap',value:function getMap(){var map=new Array(0x10000);for(var i=0;i<=0xffff;i++){map[i]=i;}return map;}},{key:'length',get:function get(){return 0x10000;}},{key:'isIdentityCMap',get:function get(){(0,_util.unreachable)('should not access .isIdentityCMap');}}]);return IdentityCMap;}(CMap);var BinaryCMapReader=function BinaryCMapReaderClosure(){function hexToInt(a,size){var n=0;for(var i=0;i<=size;i++){n=n<<8|a[i];}return n>>>0;}function hexToStr(a,size){if(size===1){return String.fromCharCode(a[0],a[1]);}if(size===3){return String.fromCharCode(a[0],a[1],a[2],a[3]);}return String.fromCharCode.apply(null,a.subarray(0,size+1));}function addHex(a,b,size){var c=0;for(var i=size;i>=0;i--){c+=a[i]+b[i];a[i]=c&255;c>>=8;}}function incHex(a,size){var c=1;for(var i=size;i>=0&&c>0;i--){c+=a[i];a[i]=c&255;c>>=8;}}var MAX_NUM_SIZE=16;var MAX_ENCODED_NUM_SIZE=19;function BinaryCMapStream(data){this.buffer=data;this.pos=0;this.end=data.length;this.tmpBuf=new Uint8Array(MAX_ENCODED_NUM_SIZE);}BinaryCMapStream.prototype={readByte:function readByte(){if(this.pos>=this.end){return-1;}return this.buffer[this.pos++];},readNumber:function readNumber(){var n=0;var last;do{var b=this.readByte();if(b<0){throw new _util.FormatError('unexpected EOF in bcmap');}last=!(b&0x80);n=n<<7|b&0x7F;}while(!last);return n;},readSigned:function readSigned(){var n=this.readNumber();return n&1?~(n>>>1):n>>>1;},readHex:function readHex(num,size){num.set(this.buffer.subarray(this.pos,this.pos+size+1));this.pos+=size+1;},readHexNumber:function readHexNumber(num,size){var last;var stack=this.tmpBuf,sp=0;do{var b=this.readByte();if(b<0){throw new _util.FormatError('unexpected EOF in bcmap');}last=!(b&0x80);stack[sp++]=b&0x7F;}while(!last);var i=size,buffer=0,bufferSize=0;while(i>=0){while(bufferSize<8&&stack.length>0){buffer=stack[--sp]<<bufferSize|buffer;bufferSize+=7;}num[i]=buffer&255;i--;buffer>>=8;bufferSize-=8;}},readHexSigned:function readHexSigned(num,size){this.readHexNumber(num,size);var sign=num[size]&1?255:0;var c=0;for(var i=0;i<=size;i++){c=(c&1)<<8|num[i];num[i]=c>>1^sign;}},readString:function readString(){var len=this.readNumber();var s='';for(var i=0;i<len;i++){s+=String.fromCharCode(this.readNumber());}return s;}};function processBinaryCMap(data,cMap,extend){return new Promise(function(resolve,reject){var stream=new BinaryCMapStream(data);var header=stream.readByte();cMap.vertical=!!(header&1);var useCMap=null;var start=new Uint8Array(MAX_NUM_SIZE);var end=new Uint8Array(MAX_NUM_SIZE);var char=new Uint8Array(MAX_NUM_SIZE);var charCode=new Uint8Array(MAX_NUM_SIZE);var tmp=new Uint8Array(MAX_NUM_SIZE);var code;var b;while((b=stream.readByte())>=0){var type=b>>5;if(type===7){switch(b&0x1F){case 0:stream.readString();break;case 1:useCMap=stream.readString();break;}continue;}var sequence=!!(b&0x10);var dataSize=b&15;if(dataSize+1>MAX_NUM_SIZE){throw new Error('processBinaryCMap: Invalid dataSize.');}var ucs2DataSize=1;var subitemsCount=stream.readNumber();var i;switch(type){case 0:stream.readHex(start,dataSize);stream.readHexNumber(end,dataSize);addHex(end,start,dataSize);cMap.addCodespaceRange(dataSize+1,hexToInt(start,dataSize),hexToInt(end,dataSize));for(i=1;i<subitemsCount;i++){incHex(end,dataSize);stream.readHexNumber(start,dataSize);addHex(start,end,dataSize);stream.readHexNumber(end,dataSize);addHex(end,start,dataSize);cMap.addCodespaceRange(dataSize+1,hexToInt(start,dataSize),hexToInt(end,dataSize));}break;case 1:stream.readHex(start,dataSize);stream.readHexNumber(end,dataSize);addHex(end,start,dataSize);stream.readNumber();for(i=1;i<subitemsCount;i++){incHex(end,dataSize);stream.readHexNumber(start,dataSize);addHex(start,end,dataSize);stream.readHexNumber(end,dataSize);addHex(end,start,dataSize);stream.readNumber();}break;case 2:stream.readHex(char,dataSize);code=stream.readNumber();cMap.mapOne(hexToInt(char,dataSize),code);for(i=1;i<subitemsCount;i++){incHex(char,dataSize);if(!sequence){stream.readHexNumber(tmp,dataSize);addHex(char,tmp,dataSize);}code=stream.readSigned()+(code+1);cMap.mapOne(hexToInt(char,dataSize),code);}break;case 3:stream.readHex(start,dataSize);stream.readHexNumber(end,dataSize);addHex(end,start,dataSize);code=stream.readNumber();cMap.mapCidRange(hexToInt(start,dataSize),hexToInt(end,dataSize),code);for(i=1;i<subitemsCount;i++){incHex(end,dataSize);if(!sequence){stream.readHexNumber(start,dataSize);addHex(start,end,dataSize);}else{start.set(end);}stream.readHexNumber(end,dataSize);addHex(end,start,dataSize);code=stream.readNumber();cMap.mapCidRange(hexToInt(start,dataSize),hexToInt(end,dataSize),code);}break;case 4:stream.readHex(char,ucs2DataSize);stream.readHex(charCode,dataSize);cMap.mapOne(hexToInt(char,ucs2DataSize),hexToStr(charCode,dataSize));for(i=1;i<subitemsCount;i++){incHex(char,ucs2DataSize);if(!sequence){stream.readHexNumber(tmp,ucs2DataSize);addHex(char,tmp,ucs2DataSize);}incHex(charCode,dataSize);stream.readHexSigned(tmp,dataSize);addHex(charCode,tmp,dataSize);cMap.mapOne(hexToInt(char,ucs2DataSize),hexToStr(charCode,dataSize));}break;case 5:stream.readHex(start,ucs2DataSize);stream.readHexNumber(end,ucs2DataSize);addHex(end,start,ucs2DataSize);stream.readHex(charCode,dataSize);cMap.mapBfRange(hexToInt(start,ucs2DataSize),hexToInt(end,ucs2DataSize),hexToStr(charCode,dataSize));for(i=1;i<subitemsCount;i++){incHex(end,ucs2DataSize);if(!sequence){stream.readHexNumber(start,ucs2DataSize);addHex(start,end,ucs2DataSize);}else{start.set(end);}stream.readHexNumber(end,ucs2DataSize);addHex(end,start,ucs2DataSize);stream.readHex(charCode,dataSize);cMap.mapBfRange(hexToInt(start,ucs2DataSize),hexToInt(end,ucs2DataSize),hexToStr(charCode,dataSize));}break;default:reject(new Error('processBinaryCMap: Unknown type: '+type));return;}}if(useCMap){resolve(extend(useCMap));return;}resolve(cMap);});}function BinaryCMapReader(){}BinaryCMapReader.prototype={process:processBinaryCMap};return BinaryCMapReader;}();var CMapFactory=function CMapFactoryClosure(){function strToInt(str){var a=0;for(var i=0;i<str.length;i++){a=a<<8|str.charCodeAt(i);}return a>>>0;}function expectString(obj){if(!(0,_util.isString)(obj)){throw new _util.FormatError('Malformed CMap: expected string.');}}function expectInt(obj){if(!Number.isInteger(obj)){throw new _util.FormatError('Malformed CMap: expected int.');}}function parseBfChar(cMap,lexer){while(true){var obj=lexer.getObj();if((0,_primitives.isEOF)(obj)){break;}if((0,_primitives.isCmd)(obj,'endbfchar')){return;}expectString(obj);var src=strToInt(obj);obj=lexer.getObj();expectString(obj);var dst=obj;cMap.mapOne(src,dst);}}function parseBfRange(cMap,lexer){while(true){var obj=lexer.getObj();if((0,_primitives.isEOF)(obj)){break;}if((0,_primitives.isCmd)(obj,'endbfrange')){return;}expectString(obj);var low=strToInt(obj);obj=lexer.getObj();expectString(obj);var high=strToInt(obj);obj=lexer.getObj();if(Number.isInteger(obj)||(0,_util.isString)(obj)){var dstLow=Number.isInteger(obj)?String.fromCharCode(obj):obj;cMap.mapBfRange(low,high,dstLow);}else if((0,_primitives.isCmd)(obj,'[')){obj=lexer.getObj();var array=[];while(!(0,_primitives.isCmd)(obj,']')&&!(0,_primitives.isEOF)(obj)){array.push(obj);obj=lexer.getObj();}cMap.mapBfRangeToArray(low,high,array);}else{break;}}throw new _util.FormatError('Invalid bf range.');}function parseCidChar(cMap,lexer){while(true){var obj=lexer.getObj();if((0,_primitives.isEOF)(obj)){break;}if((0,_primitives.isCmd)(obj,'endcidchar')){return;}expectString(obj);var src=strToInt(obj);obj=lexer.getObj();expectInt(obj);var dst=obj;cMap.mapOne(src,dst);}}function parseCidRange(cMap,lexer){while(true){var obj=lexer.getObj();if((0,_primitives.isEOF)(obj)){break;}if((0,_primitives.isCmd)(obj,'endcidrange')){return;}expectString(obj);var low=strToInt(obj);obj=lexer.getObj();expectString(obj);var high=strToInt(obj);obj=lexer.getObj();expectInt(obj);var dstLow=obj;cMap.mapCidRange(low,high,dstLow);}}function parseCodespaceRange(cMap,lexer){while(true){var obj=lexer.getObj();if((0,_primitives.isEOF)(obj)){break;}if((0,_primitives.isCmd)(obj,'endcodespacerange')){return;}if(!(0,_util.isString)(obj)){break;}var low=strToInt(obj);obj=lexer.getObj();if(!(0,_util.isString)(obj)){break;}var high=strToInt(obj);cMap.addCodespaceRange(obj.length,low,high);}throw new _util.FormatError('Invalid codespace range.');}function parseWMode(cMap,lexer){var obj=lexer.getObj();if(Number.isInteger(obj)){cMap.vertical=!!obj;}}function parseCMapName(cMap,lexer){var obj=lexer.getObj();if((0,_primitives.isName)(obj)&&(0,_util.isString)(obj.name)){cMap.name=obj.name;}}function parseCMap(cMap,lexer,fetchBuiltInCMap,useCMap){var previous;var embeddedUseCMap;objLoop:while(true){try{var obj=lexer.getObj();if((0,_primitives.isEOF)(obj)){break;}else if((0,_primitives.isName)(obj)){if(obj.name==='WMode'){parseWMode(cMap,lexer);}else if(obj.name==='CMapName'){parseCMapName(cMap,lexer);}previous=obj;}else if((0,_primitives.isCmd)(obj)){switch(obj.cmd){case'endcmap':break objLoop;case'usecmap':if((0,_primitives.isName)(previous)){embeddedUseCMap=previous.name;}break;case'begincodespacerange':parseCodespaceRange(cMap,lexer);break;case'beginbfchar':parseBfChar(cMap,lexer);break;case'begincidchar':parseCidChar(cMap,lexer);break;case'beginbfrange':parseBfRange(cMap,lexer);break;case'begincidrange':parseCidRange(cMap,lexer);break;}}}catch(ex){if(ex instanceof _util.MissingDataException){throw ex;}(0,_util.warn)('Invalid cMap data: '+ex);continue;}}if(!useCMap&&embeddedUseCMap){useCMap=embeddedUseCMap;}if(useCMap){return extendCMap(cMap,fetchBuiltInCMap,useCMap);}return Promise.resolve(cMap);}function extendCMap(cMap,fetchBuiltInCMap,useCMap){return createBuiltInCMap(useCMap,fetchBuiltInCMap).then(function(newCMap){cMap.useCMap=newCMap;if(cMap.numCodespaceRanges===0){var useCodespaceRanges=cMap.useCMap.codespaceRanges;for(var i=0;i<useCodespaceRanges.length;i++){cMap.codespaceRanges[i]=useCodespaceRanges[i].slice();}cMap.numCodespaceRanges=cMap.useCMap.numCodespaceRanges;}cMap.useCMap.forEach(function(key,value){if(!cMap.contains(key)){cMap.mapOne(key,cMap.useCMap.lookup(key));}});return cMap;});}function createBuiltInCMap(name,fetchBuiltInCMap){if(name==='Identity-H'){return Promise.resolve(new IdentityCMap(false,2));}else if(name==='Identity-V'){return Promise.resolve(new IdentityCMap(true,2));}if(!BUILT_IN_CMAPS.includes(name)){return Promise.reject(new Error('Unknown CMap name: '+name));}if(!fetchBuiltInCMap){return Promise.reject(new Error('Built-in CMap parameters are not provided.'));}return fetchBuiltInCMap(name).then(function(data){var cMapData=data.cMapData,compressionType=data.compressionType;var cMap=new CMap(true);if(compressionType===_util.CMapCompressionType.BINARY){return new BinaryCMapReader().process(cMapData,cMap,function(useCMap){return extendCMap(cMap,fetchBuiltInCMap,useCMap);});}if(compressionType===_util.CMapCompressionType.NONE){var lexer=new _parser.Lexer(new _stream.Stream(cMapData));return parseCMap(cMap,lexer,fetchBuiltInCMap,null);}return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));});}return{create:function create(params){var encoding=params.encoding;var fetchBuiltInCMap=params.fetchBuiltInCMap;var useCMap=params.useCMap;if((0,_primitives.isName)(encoding)){return createBuiltInCMap(encoding.name,fetchBuiltInCMap);}else if((0,_primitives.isStream)(encoding)){var cMap=new CMap();var lexer=new _parser.Lexer(encoding);return parseCMap(cMap,lexer,fetchBuiltInCMap,useCMap).then(function(parsedCMap){if(parsedCMap.isIdentityCMap){return createBuiltInCMap(parsedCMap.name,fetchBuiltInCMap);}return parsedCMap;});}return Promise.reject(new Error('Encoding required.'));}};}();exports.CMap=CMap;exports.IdentityCMap=IdentityCMap;exports.CMapFactory=CMapFactory;/***/},/* 156 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.getFontType=exports.IdentityToUnicodeMap=exports.ToUnicodeMap=exports.FontFlags=exports.Font=exports.ErrorFont=exports.SEAC_ANALYSIS_ENABLED=undefined;var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _util=__w_pdfjs_require__(2);var _cff_parser=__w_pdfjs_require__(157);var _glyphlist=__w_pdfjs_require__(160);var _encodings=__w_pdfjs_require__(159);var _standard_fonts=__w_pdfjs_require__(161);var _unicode=__w_pdfjs_require__(162);var _font_renderer=__w_pdfjs_require__(163);var _cmap=__w_pdfjs_require__(155);var _stream=__w_pdfjs_require__(140);var _type1_parser=__w_pdfjs_require__(164);var PRIVATE_USE_AREAS=[[0xE000,0xF8FF],[0x100000,0x10FFFD]];var PDF_GLYPH_SPACE_UNITS=1000;var SEAC_ANALYSIS_ENABLED=true;var FontFlags={FixedPitch:1,Serif:2,Symbolic:4,Script:8,Nonsymbolic:32,Italic:64,AllCap:65536,SmallCap:131072,ForceBold:262144};var MacStandardGlyphOrdering=['.notdef','.null','nonmarkingreturn','space','exclam','quotedbl','numbersign','dollar','percent','ampersand','quotesingle','parenleft','parenright','asterisk','plus','comma','hyphen','period','slash','zero','one','two','three','four','five','six','seven','eight','nine','colon','semicolon','less','equal','greater','question','at','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','bracketleft','backslash','bracketright','asciicircum','underscore','grave','a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','braceleft','bar','braceright','asciitilde','Adieresis','Aring','Ccedilla','Eacute','Ntilde','Odieresis','Udieresis','aacute','agrave','acircumflex','adieresis','atilde','aring','ccedilla','eacute','egrave','ecircumflex','edieresis','iacute','igrave','icircumflex','idieresis','ntilde','oacute','ograve','ocircumflex','odieresis','otilde','uacute','ugrave','ucircumflex','udieresis','dagger','degree','cent','sterling','section','bullet','paragraph','germandbls','registered','copyright','trademark','acute','dieresis','notequal','AE','Oslash','infinity','plusminus','lessequal','greaterequal','yen','mu','partialdiff','summation','product','pi','integral','ordfeminine','ordmasculine','Omega','ae','oslash','questiondown','exclamdown','logicalnot','radical','florin','approxequal','Delta','guillemotleft','guillemotright','ellipsis','nonbreakingspace','Agrave','Atilde','Otilde','OE','oe','endash','emdash','quotedblleft','quotedblright','quoteleft','quoteright','divide','lozenge','ydieresis','Ydieresis','fraction','currency','guilsinglleft','guilsinglright','fi','fl','daggerdbl','periodcentered','quotesinglbase','quotedblbase','perthousand','Acircumflex','Ecircumflex','Aacute','Edieresis','Egrave','Iacute','Icircumflex','Idieresis','Igrave','Oacute','Ocircumflex','apple','Ograve','Uacute','Ucircumflex','Ugrave','dotlessi','circumflex','tilde','macron','breve','dotaccent','ring','cedilla','hungarumlaut','ogonek','caron','Lslash','lslash','Scaron','scaron','Zcaron','zcaron','brokenbar','Eth','eth','Yacute','yacute','Thorn','thorn','minus','multiply','onesuperior','twosuperior','threesuperior','onehalf','onequarter','threequarters','franc','Gbreve','gbreve','Idotaccent','Scedilla','scedilla','Cacute','cacute','Ccaron','ccaron','dcroat'];function adjustWidths(properties){if(!properties.fontMatrix){return;}if(properties.fontMatrix[0]===_util.FONT_IDENTITY_MATRIX[0]){return;}var scale=0.001/properties.fontMatrix[0];var glyphsWidths=properties.widths;for(var glyph in glyphsWidths){glyphsWidths[glyph]*=scale;}properties.defaultWidth*=scale;}function adjustToUnicode(properties,builtInEncoding){if(properties.hasIncludedToUnicodeMap){return;}if(properties.hasEncoding){return;}if(builtInEncoding===properties.defaultEncoding){return;}if(properties.toUnicode instanceof IdentityToUnicodeMap){return;}var toUnicode=[],glyphsUnicodeMap=(0,_glyphlist.getGlyphsUnicode)();for(var charCode in builtInEncoding){var glyphName=builtInEncoding[charCode];var unicode=(0,_unicode.getUnicodeForGlyph)(glyphName,glyphsUnicodeMap);if(unicode!==-1){toUnicode[charCode]=String.fromCharCode(unicode);}}properties.toUnicode.amend(toUnicode);}function getFontType(type,subtype){switch(type){case'Type1':return subtype==='Type1C'?_util.FontType.TYPE1C:_util.FontType.TYPE1;case'CIDFontType0':return subtype==='CIDFontType0C'?_util.FontType.CIDFONTTYPE0C:_util.FontType.CIDFONTTYPE0;case'OpenType':return _util.FontType.OPENTYPE;case'TrueType':return _util.FontType.TRUETYPE;case'CIDFontType2':return _util.FontType.CIDFONTTYPE2;case'MMType1':return _util.FontType.MMTYPE1;case'Type0':return _util.FontType.TYPE0;default:return _util.FontType.UNKNOWN;}}function recoverGlyphName(name,glyphsUnicodeMap){if(glyphsUnicodeMap[name]!==undefined){return name;}var unicode=(0,_unicode.getUnicodeForGlyph)(name,glyphsUnicodeMap);if(unicode!==-1){for(var key in glyphsUnicodeMap){if(glyphsUnicodeMap[key]===unicode){return key;}}}(0,_util.info)('Unable to recover a standard glyph name for: '+name);return name;}var Glyph=function GlyphClosure(){function Glyph(fontChar,unicode,accent,width,vmetric,operatorListId,isSpace,isInFont){this.fontChar=fontChar;this.unicode=unicode;this.accent=accent;this.width=width;this.vmetric=vmetric;this.operatorListId=operatorListId;this.isSpace=isSpace;this.isInFont=isInFont;}Glyph.prototype.matchesForCache=function(fontChar,unicode,accent,width,vmetric,operatorListId,isSpace,isInFont){return this.fontChar===fontChar&&this.unicode===unicode&&this.accent===accent&&this.width===width&&this.vmetric===vmetric&&this.operatorListId===operatorListId&&this.isSpace===isSpace&&this.isInFont===isInFont;};return Glyph;}();var ToUnicodeMap=function ToUnicodeMapClosure(){function ToUnicodeMap(){var cmap=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];this._map=cmap;}ToUnicodeMap.prototype={get length(){return this._map.length;},forEach:function forEach(callback){for(var charCode in this._map){callback(charCode,this._map[charCode].charCodeAt(0));}},has:function has(i){return this._map[i]!==undefined;},get:function get(i){return this._map[i];},charCodeOf:function charCodeOf(value){var map=this._map;if(map.length<=0x10000){return map.indexOf(value);}for(var charCode in map){if(map[charCode]===value){return charCode|0;}}return-1;},amend:function amend(map){for(var charCode in map){this._map[charCode]=map[charCode];}}};return ToUnicodeMap;}();var IdentityToUnicodeMap=function IdentityToUnicodeMapClosure(){function IdentityToUnicodeMap(firstChar,lastChar){this.firstChar=firstChar;this.lastChar=lastChar;}IdentityToUnicodeMap.prototype={get length(){return this.lastChar+1-this.firstChar;},forEach:function forEach(callback){for(var i=this.firstChar,ii=this.lastChar;i<=ii;i++){callback(i,i);}},has:function has(i){return this.firstChar<=i&&i<=this.lastChar;},get:function get(i){if(this.firstChar<=i&&i<=this.lastChar){return String.fromCharCode(i);}return undefined;},charCodeOf:function charCodeOf(v){return Number.isInteger(v)&&v>=this.firstChar&&v<=this.lastChar?v:-1;},amend:function amend(map){(0,_util.unreachable)('Should not call amend()');}};return IdentityToUnicodeMap;}();var OpenTypeFileBuilder=function OpenTypeFileBuilderClosure(){function writeInt16(dest,offset,num){dest[offset]=num>>8&0xFF;dest[offset+1]=num&0xFF;}function writeInt32(dest,offset,num){dest[offset]=num>>24&0xFF;dest[offset+1]=num>>16&0xFF;dest[offset+2]=num>>8&0xFF;dest[offset+3]=num&0xFF;}function writeData(dest,offset,data){var i,ii;if(data instanceof Uint8Array){dest.set(data,offset);}else if(typeof data==='string'){for(i=0,ii=data.length;i<ii;i++){dest[offset++]=data.charCodeAt(i)&0xFF;}}else{for(i=0,ii=data.length;i<ii;i++){dest[offset++]=data[i]&0xFF;}}}function OpenTypeFileBuilder(sfnt){this.sfnt=sfnt;this.tables=Object.create(null);}OpenTypeFileBuilder.getSearchParams=function OpenTypeFileBuilder_getSearchParams(entriesCount,entrySize){var maxPower2=1,log2=0;while((maxPower2^entriesCount)>maxPower2){maxPower2<<=1;log2++;}var searchRange=maxPower2*entrySize;return{range:searchRange,entry:log2,rangeShift:entrySize*entriesCount-searchRange};};var OTF_HEADER_SIZE=12;var OTF_TABLE_ENTRY_SIZE=16;OpenTypeFileBuilder.prototype={toArray:function OpenTypeFileBuilder_toArray(){var sfnt=this.sfnt;var tables=this.tables;var tablesNames=Object.keys(tables);tablesNames.sort();var numTables=tablesNames.length;var i,j,jj,table,tableName;var offset=OTF_HEADER_SIZE+numTables*OTF_TABLE_ENTRY_SIZE;var tableOffsets=[offset];for(i=0;i<numTables;i++){table=tables[tablesNames[i]];var paddedLength=(table.length+3&~3)>>>0;offset+=paddedLength;tableOffsets.push(offset);}var file=new Uint8Array(offset);for(i=0;i<numTables;i++){table=tables[tablesNames[i]];writeData(file,tableOffsets[i],table);}if(sfnt==='true'){sfnt=(0,_util.string32)(0x00010000);}file[0]=sfnt.charCodeAt(0)&0xFF;file[1]=sfnt.charCodeAt(1)&0xFF;file[2]=sfnt.charCodeAt(2)&0xFF;file[3]=sfnt.charCodeAt(3)&0xFF;writeInt16(file,4,numTables);var searchParams=OpenTypeFileBuilder.getSearchParams(numTables,16);writeInt16(file,6,searchParams.range);writeInt16(file,8,searchParams.entry);writeInt16(file,10,searchParams.rangeShift);offset=OTF_HEADER_SIZE;for(i=0;i<numTables;i++){tableName=tablesNames[i];file[offset]=tableName.charCodeAt(0)&0xFF;file[offset+1]=tableName.charCodeAt(1)&0xFF;file[offset+2]=tableName.charCodeAt(2)&0xFF;file[offset+3]=tableName.charCodeAt(3)&0xFF;var checksum=0;for(j=tableOffsets[i],jj=tableOffsets[i+1];j<jj;j+=4){var quad=(0,_util.readUint32)(file,j);checksum=checksum+quad>>>0;}writeInt32(file,offset+4,checksum);writeInt32(file,offset+8,tableOffsets[i]);writeInt32(file,offset+12,tables[tableName].length);offset+=OTF_TABLE_ENTRY_SIZE;}return file;},addTable:function OpenTypeFileBuilder_addTable(tag,data){if(tag in this.tables){throw new Error('Table '+tag+' already exists');}this.tables[tag]=data;}};return OpenTypeFileBuilder;}();var Font=function FontClosure(){function Font(name,file,properties){var charCode;this.name=name;this.loadedName=properties.loadedName;this.isType3Font=properties.isType3Font;this.sizes=[];this.missingFile=false;this.glyphCache=Object.create(null);this.isSerifFont=!!(properties.flags&FontFlags.Serif);this.isSymbolicFont=!!(properties.flags&FontFlags.Symbolic);this.isMonospace=!!(properties.flags&FontFlags.FixedPitch);var type=properties.type;var subtype=properties.subtype;this.type=type;this.subtype=subtype;this.fallbackName=this.isMonospace?'monospace':this.isSerifFont?'serif':'sans-serif';this.differences=properties.differences;this.widths=properties.widths;this.defaultWidth=properties.defaultWidth;this.composite=properties.composite;this.wideChars=properties.wideChars;this.cMap=properties.cMap;this.ascent=properties.ascent/PDF_GLYPH_SPACE_UNITS;this.descent=properties.descent/PDF_GLYPH_SPACE_UNITS;this.fontMatrix=properties.fontMatrix;this.bbox=properties.bbox;this.defaultEncoding=properties.defaultEncoding;this.toUnicode=properties.toUnicode;this.fallbackToUnicode=properties.fallbackToUnicode||new ToUnicodeMap();this.toFontChar=[];if(properties.type==='Type3'){for(charCode=0;charCode<256;charCode++){this.toFontChar[charCode]=this.differences[charCode]||properties.defaultEncoding[charCode];}this.fontType=_util.FontType.TYPE3;return;}this.cidEncoding=properties.cidEncoding;this.vertical=properties.vertical;if(this.vertical){this.vmetrics=properties.vmetrics;this.defaultVMetrics=properties.defaultVMetrics;}if(!file||file.isEmpty){if(file){(0,_util.warn)('Font file is empty in "'+name+'" ('+this.loadedName+')');}this.fallbackToSystemFont();return;}var _getFontFileType=getFontFileType(file,properties);var _getFontFileType2=_slicedToArray(_getFontFileType,2);type=_getFontFileType2[0];subtype=_getFontFileType2[1];if(type!==this.type||subtype!==this.subtype){(0,_util.info)('Inconsistent font file Type/SubType, expected: '+(this.type+'/'+this.subtype+' but found: '+type+'/'+subtype+'.'));}try{var data;switch(type){case'MMType1':(0,_util.info)('MMType1 font ('+name+'), falling back to Type1.');case'Type1':case'CIDFontType0':this.mimetype='font/opentype';var cff=subtype==='Type1C'||subtype==='CIDFontType0C'?new CFFFont(file,properties):new Type1Font(name,file,properties);adjustWidths(properties);data=this.convert(name,cff,properties);break;case'OpenType':case'TrueType':case'CIDFontType2':this.mimetype='font/opentype';data=this.checkAndRepair(name,file,properties);if(this.isOpenType){adjustWidths(properties);type='OpenType';}break;default:throw new _util.FormatError('Font '+type+' is not supported');}}catch(e){(0,_util.warn)(e);this.fallbackToSystemFont();return;}this.data=data;this.fontType=getFontType(type,subtype);this.fontMatrix=properties.fontMatrix;this.widths=properties.widths;this.defaultWidth=properties.defaultWidth;this.toUnicode=properties.toUnicode;this.encoding=properties.baseEncoding;this.seacMap=properties.seacMap;}Font.getFontID=function(){var ID=1;return function Font_getFontID(){return String(ID++);};}();function int16(b0,b1){return(b0<<8)+b1;}function writeSignedInt16(bytes,index,value){bytes[index+1]=value;bytes[index]=value>>>8;}function signedInt16(b0,b1){var value=(b0<<8)+b1;return value&1<<15?value-0x10000:value;}function int32(b0,b1,b2,b3){return(b0<<24)+(b1<<16)+(b2<<8)+b3;}function string16(value){return String.fromCharCode(value>>8&0xff,value&0xff);}function safeString16(value){value=value>0x7FFF?0x7FFF:value<-0x8000?-0x8000:value;return String.fromCharCode(value>>8&0xff,value&0xff);}function isTrueTypeFile(file){var header=file.peekBytes(4);return(0,_util.readUint32)(header,0)===0x00010000||(0,_util.bytesToString)(header)==='true';}function isTrueTypeCollectionFile(file){var header=file.peekBytes(4);return(0,_util.bytesToString)(header)==='ttcf';}function isOpenTypeFile(file){var header=file.peekBytes(4);return(0,_util.bytesToString)(header)==='OTTO';}function isType1File(file){var header=file.peekBytes(2);if(header[0]===0x25&&header[1]===0x21){return true;}if(header[0]===0x80&&header[1]===0x01){return true;}return false;}function isCFFFile(file){var header=file.peekBytes(4);if(header[0]>=1&&header[3]>=1&&header[3]<=4){return true;}return false;}function getFontFileType(file,_ref){var type=_ref.type,subtype=_ref.subtype,composite=_ref.composite;var fileType=void 0,fileSubtype=void 0;if(isTrueTypeFile(file)||isTrueTypeCollectionFile(file)){if(composite){fileType='CIDFontType2';}else{fileType='TrueType';}}else if(isOpenTypeFile(file)){if(composite){fileType='CIDFontType2';}else{fileType='OpenType';}}else if(isType1File(file)){if(composite){fileType='CIDFontType0';}else{fileType=type==='MMType1'?'MMType1':'Type1';}}else if(isCFFFile(file)){if(composite){fileType='CIDFontType0';fileSubtype='CIDFontType0C';}else{fileType=type==='MMType1'?'MMType1':'Type1';fileSubtype='Type1C';}}else{(0,_util.warn)('getFontFileType: Unable to detect correct font file Type/Subtype.');fileType=type;fileSubtype=subtype;}return[fileType,fileSubtype];}function buildToFontChar(encoding,glyphsUnicodeMap,differences){var toFontChar=[],unicode;for(var i=0,ii=encoding.length;i<ii;i++){unicode=(0,_unicode.getUnicodeForGlyph)(encoding[i],glyphsUnicodeMap);if(unicode!==-1){toFontChar[i]=unicode;}}for(var charCode in differences){unicode=(0,_unicode.getUnicodeForGlyph)(differences[charCode],glyphsUnicodeMap);if(unicode!==-1){toFontChar[+charCode]=unicode;}}return toFontChar;}function adjustMapping(charCodeToGlyphId,hasGlyph,newGlyphZeroId){var newMap=Object.create(null);var toFontChar=[];var privateUseAreaIndex=0;var nextAvailableFontCharCode=PRIVATE_USE_AREAS[privateUseAreaIndex][0];var privateUseOffetEnd=PRIVATE_USE_AREAS[privateUseAreaIndex][1];for(var originalCharCode in charCodeToGlyphId){originalCharCode|=0;var glyphId=charCodeToGlyphId[originalCharCode];if(!hasGlyph(glyphId)){continue;}if(nextAvailableFontCharCode>privateUseOffetEnd){privateUseAreaIndex++;if(privateUseAreaIndex>=PRIVATE_USE_AREAS.length){(0,_util.warn)('Ran out of space in font private use area.');break;}nextAvailableFontCharCode=PRIVATE_USE_AREAS[privateUseAreaIndex][0];privateUseOffetEnd=PRIVATE_USE_AREAS[privateUseAreaIndex][1];}var fontCharCode=nextAvailableFontCharCode++;if(glyphId===0){glyphId=newGlyphZeroId;}newMap[fontCharCode]=glyphId;toFontChar[originalCharCode]=fontCharCode;}return{toFontChar:toFontChar,charCodeToGlyphId:newMap,nextAvailableFontCharCode:nextAvailableFontCharCode};}function getRanges(glyphs,numGlyphs){var codes=[];for(var charCode in glyphs){if(glyphs[charCode]>=numGlyphs){continue;}codes.push({fontCharCode:charCode|0,glyphId:glyphs[charCode]});}if(codes.length===0){codes.push({fontCharCode:0,glyphId:0});}codes.sort(function fontGetRangesSort(a,b){return a.fontCharCode-b.fontCharCode;});var ranges=[];var length=codes.length;for(var n=0;n<length;){var start=codes[n].fontCharCode;var codeIndices=[codes[n].glyphId];++n;var end=start;while(n<length&&end+1===codes[n].fontCharCode){codeIndices.push(codes[n].glyphId);++end;++n;if(end===0xFFFF){break;}}ranges.push([start,end,codeIndices]);}return ranges;}function createCmapTable(glyphs,numGlyphs){var ranges=getRanges(glyphs,numGlyphs);var numTables=ranges[ranges.length-1][1]>0xFFFF?2:1;var cmap='\x00\x00'+string16(numTables)+'\x00\x03'+'\x00\x01'+(0,_util.string32)(4+numTables*8);var i,ii,j,jj;for(i=ranges.length-1;i>=0;--i){if(ranges[i][0]<=0xFFFF){break;}}var bmpLength=i+1;if(ranges[i][0]<0xFFFF&&ranges[i][1]===0xFFFF){ranges[i][1]=0xFFFE;}var trailingRangesCount=ranges[i][1]<0xFFFF?1:0;var segCount=bmpLength+trailingRangesCount;var searchParams=OpenTypeFileBuilder.getSearchParams(segCount,2);var startCount='';var endCount='';var idDeltas='';var idRangeOffsets='';var glyphsIds='';var bias=0;var range,start,end,codes;for(i=0,ii=bmpLength;i<ii;i++){range=ranges[i];start=range[0];end=range[1];startCount+=string16(start);endCount+=string16(end);codes=range[2];var contiguous=true;for(j=1,jj=codes.length;j<jj;++j){if(codes[j]!==codes[j-1]+1){contiguous=false;break;}}if(!contiguous){var offset=(segCount-i)*2+bias*2;bias+=end-start+1;idDeltas+=string16(0);idRangeOffsets+=string16(offset);for(j=0,jj=codes.length;j<jj;++j){glyphsIds+=string16(codes[j]);}}else{var startCode=codes[0];idDeltas+=string16(startCode-start&0xFFFF);idRangeOffsets+=string16(0);}}if(trailingRangesCount>0){endCount+='\xFF\xFF';startCount+='\xFF\xFF';idDeltas+='\x00\x01';idRangeOffsets+='\x00\x00';}var format314='\x00\x00'+string16(2*segCount)+string16(searchParams.range)+string16(searchParams.entry)+string16(searchParams.rangeShift)+endCount+'\x00\x00'+startCount+idDeltas+idRangeOffsets+glyphsIds;var format31012='';var header31012='';if(numTables>1){cmap+='\x00\x03'+'\x00\x0A'+(0,_util.string32)(4+numTables*8+4+format314.length);format31012='';for(i=0,ii=ranges.length;i<ii;i++){range=ranges[i];start=range[0];codes=range[2];var code=codes[0];for(j=1,jj=codes.length;j<jj;++j){if(codes[j]!==codes[j-1]+1){end=range[0]+j-1;format31012+=(0,_util.string32)(start)+(0,_util.string32)(end)+(0,_util.string32)(code);start=end+1;code=codes[j];}}format31012+=(0,_util.string32)(start)+(0,_util.string32)(range[1])+(0,_util.string32)(code);}header31012='\x00\x0C'+'\x00\x00'+(0,_util.string32)(format31012.length+16)+'\x00\x00\x00\x00'+(0,_util.string32)(format31012.length/12);}return cmap+'\x00\x04'+string16(format314.length+4)+format314+header31012+format31012;}function validateOS2Table(os2){var stream=new _stream.Stream(os2.data);var version=stream.getUint16();stream.getBytes(60);var selection=stream.getUint16();if(version<4&&selection&0x0300){return false;}var firstChar=stream.getUint16();var lastChar=stream.getUint16();if(firstChar>lastChar){return false;}stream.getBytes(6);var usWinAscent=stream.getUint16();if(usWinAscent===0){return false;}os2.data[8]=os2.data[9]=0;return true;}function createOS2Table(properties,charstrings,override){override=override||{unitsPerEm:0,yMax:0,yMin:0,ascent:0,descent:0};var ulUnicodeRange1=0;var ulUnicodeRange2=0;var ulUnicodeRange3=0;var ulUnicodeRange4=0;var firstCharIndex=null;var lastCharIndex=0;if(charstrings){for(var code in charstrings){code|=0;if(firstCharIndex>code||!firstCharIndex){firstCharIndex=code;}if(lastCharIndex<code){lastCharIndex=code;}var position=(0,_unicode.getUnicodeRangeFor)(code);if(position<32){ulUnicodeRange1|=1<<position;}else if(position<64){ulUnicodeRange2|=1<<position-32;}else if(position<96){ulUnicodeRange3|=1<<position-64;}else if(position<123){ulUnicodeRange4|=1<<position-96;}else{throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');}}if(lastCharIndex>0xFFFF){lastCharIndex=0xFFFF;}}else{firstCharIndex=0;lastCharIndex=255;}var bbox=properties.bbox||[0,0,0,0];var unitsPerEm=override.unitsPerEm||1/(properties.fontMatrix||_util.FONT_IDENTITY_MATRIX)[0];var scale=properties.ascentScaled?1.0:unitsPerEm/PDF_GLYPH_SPACE_UNITS;var typoAscent=override.ascent||Math.round(scale*(properties.ascent||bbox[3]));var typoDescent=override.descent||Math.round(scale*(properties.descent||bbox[1]));if(typoDescent>0&&properties.descent>0&&bbox[1]<0){typoDescent=-typoDescent;}var winAscent=override.yMax||typoAscent;var winDescent=-override.yMin||-typoDescent;return'\x00\x03'+'\x02\x24'+'\x01\xF4'+'\x00\x05'+'\x00\x00'+'\x02\x8A'+'\x02\xBB'+'\x00\x00'+'\x00\x8C'+'\x02\x8A'+'\x02\xBB'+'\x00\x00'+'\x01\xDF'+'\x00\x31'+'\x01\x02'+'\x00\x00'+'\x00\x00\x06'+String.fromCharCode(properties.fixedPitch?0x09:0x00)+'\x00\x00\x00\x00\x00\x00'+(0,_util.string32)(ulUnicodeRange1)+(0,_util.string32)(ulUnicodeRange2)+(0,_util.string32)(ulUnicodeRange3)+(0,_util.string32)(ulUnicodeRange4)+'\x2A\x32\x31\x2A'+string16(properties.italicAngle?1:0)+string16(firstCharIndex||properties.firstChar)+string16(lastCharIndex||properties.lastChar)+string16(typoAscent)+string16(typoDescent)+'\x00\x64'+string16(winAscent)+string16(winDescent)+'\x00\x00\x00\x00'+'\x00\x00\x00\x00'+string16(properties.xHeight)+string16(properties.capHeight)+string16(0)+string16(firstCharIndex||properties.firstChar)+'\x00\x03';}function createPostTable(properties){var angle=Math.floor(properties.italicAngle*Math.pow(2,16));return'\x00\x03\x00\x00'+(0,_util.string32)(angle)+'\x00\x00'+'\x00\x00'+(0,_util.string32)(properties.fixedPitch)+'\x00\x00\x00\x00'+'\x00\x00\x00\x00'+'\x00\x00\x00\x00'+'\x00\x00\x00\x00';}function createNameTable(name,proto){if(!proto){proto=[[],[]];}var strings=[proto[0][0]||'Original licence',proto[0][1]||name,proto[0][2]||'Unknown',proto[0][3]||'uniqueID',proto[0][4]||name,proto[0][5]||'Version 0.11',proto[0][6]||'',proto[0][7]||'Unknown',proto[0][8]||'Unknown',proto[0][9]||'Unknown'];var stringsUnicode=[];var i,ii,j,jj,str;for(i=0,ii=strings.length;i<ii;i++){str=proto[1][i]||strings[i];var strBufUnicode=[];for(j=0,jj=str.length;j<jj;j++){strBufUnicode.push(string16(str.charCodeAt(j)));}stringsUnicode.push(strBufUnicode.join(''));}var names=[strings,stringsUnicode];var platforms=['\x00\x01','\x00\x03'];var encodings=['\x00\x00','\x00\x01'];var languages=['\x00\x00','\x04\x09'];var namesRecordCount=strings.length*platforms.length;var nameTable='\x00\x00'+string16(namesRecordCount)+string16(namesRecordCount*12+6);var strOffset=0;for(i=0,ii=platforms.length;i<ii;i++){var strs=names[i];for(j=0,jj=strs.length;j<jj;j++){str=strs[j];var nameRecord=platforms[i]+encodings[i]+languages[i]+string16(j)+string16(str.length)+string16(strOffset);nameTable+=nameRecord;strOffset+=str.length;}}nameTable+=strings.join('')+stringsUnicode.join('');return nameTable;}Font.prototype={name:null,font:null,mimetype:null,encoding:null,get renderer(){var renderer=_font_renderer.FontRendererFactory.create(this,SEAC_ANALYSIS_ENABLED);return(0,_util.shadow)(this,'renderer',renderer);},exportData:function Font_exportData(){var data={};for(var i in this){if(this.hasOwnProperty(i)){data[i]=this[i];}}return data;},fallbackToSystemFont:function Font_fallbackToSystemFont(){var _this=this;this.missingFile=true;var charCode,unicode;var name=this.name;var type=this.type;var subtype=this.subtype;var fontName=name.replace(/[,_]/g,'-');var stdFontMap=(0,_standard_fonts.getStdFontMap)(),nonStdFontMap=(0,_standard_fonts.getNonStdFontMap)();var isStandardFont=!!stdFontMap[fontName]||!!(nonStdFontMap[fontName]&&stdFontMap[nonStdFontMap[fontName]]);fontName=stdFontMap[fontName]||nonStdFontMap[fontName]||fontName;this.bold=fontName.search(/bold/gi)!==-1;this.italic=fontName.search(/oblique/gi)!==-1||fontName.search(/italic/gi)!==-1;this.black=name.search(/Black/g)!==-1;this.remeasure=Object.keys(this.widths).length>0;if(isStandardFont&&type==='CIDFontType2'&&this.cidEncoding.indexOf('Identity-')===0){var GlyphMapForStandardFonts=(0,_standard_fonts.getGlyphMapForStandardFonts)();var map=[];for(charCode in GlyphMapForStandardFonts){map[+charCode]=GlyphMapForStandardFonts[charCode];}if(/Arial-?Black/i.test(name)){var SupplementalGlyphMapForArialBlack=(0,_standard_fonts.getSupplementalGlyphMapForArialBlack)();for(charCode in SupplementalGlyphMapForArialBlack){map[+charCode]=SupplementalGlyphMapForArialBlack[charCode];}}else if(/Calibri/i.test(name)){var SupplementalGlyphMapForCalibri=(0,_standard_fonts.getSupplementalGlyphMapForCalibri)();for(charCode in SupplementalGlyphMapForCalibri){map[+charCode]=SupplementalGlyphMapForCalibri[charCode];}}var isIdentityUnicode=this.toUnicode instanceof IdentityToUnicodeMap;if(!isIdentityUnicode){this.toUnicode.forEach(function(charCode,unicodeCharCode){map[+charCode]=unicodeCharCode;});}this.toFontChar=map;this.toUnicode=new ToUnicodeMap(map);}else if(/Symbol/i.test(fontName)){this.toFontChar=buildToFontChar(_encodings.SymbolSetEncoding,(0,_glyphlist.getGlyphsUnicode)(),this.differences);}else if(/Dingbats/i.test(fontName)){if(/Wingdings/i.test(name)){(0,_util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');}this.toFontChar=buildToFontChar(_encodings.ZapfDingbatsEncoding,(0,_glyphlist.getDingbatsGlyphsUnicode)(),this.differences);}else if(isStandardFont){this.toFontChar=buildToFontChar(this.defaultEncoding,(0,_glyphlist.getGlyphsUnicode)(),this.differences);}else{var glyphsUnicodeMap=(0,_glyphlist.getGlyphsUnicode)();this.toUnicode.forEach(function(charCode,unicodeCharCode){if(!_this.composite){var glyphName=_this.differences[charCode]||_this.defaultEncoding[charCode];unicode=(0,_unicode.getUnicodeForGlyph)(glyphName,glyphsUnicodeMap);if(unicode!==-1){unicodeCharCode=unicode;}}_this.toFontChar[charCode]=unicodeCharCode;});}this.loadedName=fontName.split('-')[0];this.fontType=getFontType(type,subtype);},checkAndRepair:function Font_checkAndRepair(name,font,properties){var VALID_TABLES=['OS/2','cmap','head','hhea','hmtx','maxp','name','post','loca','glyf','fpgm','prep','cvt ','CFF '];function readTables(file,numTables){var tables=Object.create(null);tables['OS/2']=null;tables['cmap']=null;tables['head']=null;tables['hhea']=null;tables['hmtx']=null;tables['maxp']=null;tables['name']=null;tables['post']=null;for(var i=0;i<numTables;i++){var table=readTableEntry(font);if(!VALID_TABLES.includes(table.tag)){continue;}if(table.length===0){continue;}tables[table.tag]=table;}return tables;}function readTableEntry(file){var tag=(0,_util.bytesToString)(file.getBytes(4));var checksum=file.getInt32()>>>0;var offset=file.getInt32()>>>0;var length=file.getInt32()>>>0;var previousPosition=file.pos;file.pos=file.start?file.start:0;file.skip(offset);var data=file.getBytes(length);file.pos=previousPosition;if(tag==='head'){data[8]=data[9]=data[10]=data[11]=0;data[17]|=0x20;}return{tag:tag,checksum:checksum,length:length,offset:offset,data:data};}function readOpenTypeHeader(ttf){return{version:(0,_util.bytesToString)(ttf.getBytes(4)),numTables:ttf.getUint16(),searchRange:ttf.getUint16(),entrySelector:ttf.getUint16(),rangeShift:ttf.getUint16()};}function readTrueTypeCollectionHeader(ttc){var ttcTag=(0,_util.bytesToString)(ttc.getBytes(4));(0,_util.assert)(ttcTag==='ttcf','Must be a TrueType Collection font.');var majorVersion=ttc.getUint16();var minorVersion=ttc.getUint16();var numFonts=ttc.getInt32()>>>0;var offsetTable=[];for(var i=0;i<numFonts;i++){offsetTable.push(ttc.getInt32()>>>0);}var header={ttcTag:ttcTag,majorVersion:majorVersion,minorVersion:minorVersion,numFonts:numFonts,offsetTable:offsetTable};switch(majorVersion){case 1:return header;case 2:header.dsigTag=ttc.getInt32()>>>0;header.dsigLength=ttc.getInt32()>>>0;header.dsigOffset=ttc.getInt32()>>>0;return header;}throw new _util.FormatError('Invalid TrueType Collection majorVersion: '+majorVersion+'.');}function readTrueTypeCollectionData(ttc,fontName){var _readTrueTypeCollecti=readTrueTypeCollectionHeader(ttc),numFonts=_readTrueTypeCollecti.numFonts,offsetTable=_readTrueTypeCollecti.offsetTable;for(var i=0;i<numFonts;i++){ttc.pos=(ttc.start||0)+offsetTable[i];var potentialHeader=readOpenTypeHeader(ttc);var potentialTables=readTables(ttc,potentialHeader.numTables);if(!potentialTables['name']){throw new _util.FormatError('TrueType Collection font must contain a "name" table.');}var nameTable=readNameTable(potentialTables['name']);for(var j=0,jj=nameTable.length;j<jj;j++){for(var k=0,kk=nameTable[j].length;k<kk;k++){var nameEntry=nameTable[j][k];if(nameEntry&&nameEntry.replace(/\s/g,'')===fontName){return{header:potentialHeader,tables:potentialTables};}}}}throw new _util.FormatError('TrueType Collection does not contain "'+fontName+'" font.');}function readCmapTable(cmap,font,isSymbolicFont,hasEncoding){if(!cmap){(0,_util.warn)('No cmap table available.');return{platformId:-1,encodingId:-1,mappings:[],hasShortCmap:false};}var segment;var start=(font.start?font.start:0)+cmap.offset;font.pos=start;font.getUint16();var numTables=font.getUint16();var potentialTable;var canBreak=false;for(var i=0;i<numTables;i++){var platformId=font.getUint16();var encodingId=font.getUint16();var offset=font.getInt32()>>>0;var useTable=false;if(potentialTable&&potentialTable.platformId===platformId&&potentialTable.encodingId===encodingId){continue;}if(platformId===0&&encodingId===0){useTable=true;}else if(platformId===1&&encodingId===0){useTable=true;}else if(platformId===3&&encodingId===1&&(hasEncoding||!potentialTable)){useTable=true;if(!isSymbolicFont){canBreak=true;}}else if(isSymbolicFont&&platformId===3&&encodingId===0){useTable=true;canBreak=true;}if(useTable){potentialTable={platformId:platformId,encodingId:encodingId,offset:offset};}if(canBreak){break;}}if(potentialTable){font.pos=start+potentialTable.offset;}if(!potentialTable||font.peekByte()===-1){(0,_util.warn)('Could not find a preferred cmap table.');return{platformId:-1,encodingId:-1,mappings:[],hasShortCmap:false};}var format=font.getUint16();font.getUint16();font.getUint16();var hasShortCmap=false;var mappings=[];var j,glyphId;if(format===0){for(j=0;j<256;j++){var index=font.getByte();if(!index){continue;}mappings.push({charCode:j,glyphId:index});}hasShortCmap=true;}else if(format===4){var segCount=font.getUint16()>>1;font.getBytes(6);var segIndex,segments=[];for(segIndex=0;segIndex<segCount;segIndex++){segments.push({end:font.getUint16()});}font.getUint16();for(segIndex=0;segIndex<segCount;segIndex++){segments[segIndex].start=font.getUint16();}for(segIndex=0;segIndex<segCount;segIndex++){segments[segIndex].delta=font.getUint16();}var offsetsCount=0;for(segIndex=0;segIndex<segCount;segIndex++){segment=segments[segIndex];var rangeOffset=font.getUint16();if(!rangeOffset){segment.offsetIndex=-1;continue;}var offsetIndex=(rangeOffset>>1)-(segCount-segIndex);segment.offsetIndex=offsetIndex;offsetsCount=Math.max(offsetsCount,offsetIndex+segment.end-segment.start+1);}var offsets=[];for(j=0;j<offsetsCount;j++){offsets.push(font.getUint16());}for(segIndex=0;segIndex<segCount;segIndex++){segment=segments[segIndex];start=segment.start;var end=segment.end;var delta=segment.delta;offsetIndex=segment.offsetIndex;for(j=start;j<=end;j++){if(j===0xFFFF){continue;}glyphId=offsetIndex<0?j:offsets[offsetIndex+j-start];glyphId=glyphId+delta&0xFFFF;mappings.push({charCode:j,glyphId:glyphId});}}}else if(format===6){var firstCode=font.getUint16();var entryCount=font.getUint16();for(j=0;j<entryCount;j++){glyphId=font.getUint16();var charCode=firstCode+j;mappings.push({charCode:charCode,glyphId:glyphId});}}else{(0,_util.warn)('cmap table has unsupported format: '+format);return{platformId:-1,encodingId:-1,mappings:[],hasShortCmap:false};}mappings.sort(function(a,b){return a.charCode-b.charCode;});for(i=1;i<mappings.length;i++){if(mappings[i-1].charCode===mappings[i].charCode){mappings.splice(i,1);i--;}}return{platformId:potentialTable.platformId,encodingId:potentialTable.encodingId,mappings:mappings,hasShortCmap:hasShortCmap};}function sanitizeMetrics(font,header,metrics,numGlyphs){if(!header){if(metrics){metrics.data=null;}return;}font.pos=(font.start?font.start:0)+header.offset;font.pos+=header.length-2;var numOfMetrics=font.getUint16();if(numOfMetrics>numGlyphs){(0,_util.info)('The numOfMetrics ('+numOfMetrics+') should not be '+'greater than the numGlyphs ('+numGlyphs+')');numOfMetrics=numGlyphs;header.data[34]=(numOfMetrics&0xff00)>>8;header.data[35]=numOfMetrics&0x00ff;}var numOfSidebearings=numGlyphs-numOfMetrics;var numMissing=numOfSidebearings-(metrics.length-numOfMetrics*4>>1);if(numMissing>0){var entries=new Uint8Array(metrics.length+numMissing*2);entries.set(metrics.data);metrics.data=entries;}}function sanitizeGlyph(source,sourceStart,sourceEnd,dest,destStart,hintsValid){var glyphProfile={length:0,sizeOfInstructions:0};if(sourceEnd-sourceStart<=12){return glyphProfile;}var glyf=source.subarray(sourceStart,sourceEnd);var contoursCount=signedInt16(glyf[0],glyf[1]);if(contoursCount<0){contoursCount=-1;writeSignedInt16(glyf,0,contoursCount);dest.set(glyf,destStart);glyphProfile.length=glyf.length;return glyphProfile;}var i,j=10,flagsCount=0;for(i=0;i<contoursCount;i++){var endPoint=glyf[j]<<8|glyf[j+1];flagsCount=endPoint+1;j+=2;}var instructionsStart=j;var instructionsLength=glyf[j]<<8|glyf[j+1];glyphProfile.sizeOfInstructions=instructionsLength;j+=2+instructionsLength;var instructionsEnd=j;var coordinatesLength=0;for(i=0;i<flagsCount;i++){var flag=glyf[j++];if(flag&0xC0){glyf[j-1]=flag&0x3F;}var xyLength=(flag&2?1:flag&16?0:2)+(flag&4?1:flag&32?0:2);coordinatesLength+=xyLength;if(flag&8){var repeat=glyf[j++];i+=repeat;coordinatesLength+=repeat*xyLength;}}if(coordinatesLength===0){return glyphProfile;}var glyphDataLength=j+coordinatesLength;if(glyphDataLength>glyf.length){return glyphProfile;}if(!hintsValid&&instructionsLength>0){dest.set(glyf.subarray(0,instructionsStart),destStart);dest.set([0,0],destStart+instructionsStart);dest.set(glyf.subarray(instructionsEnd,glyphDataLength),destStart+instructionsStart+2);glyphDataLength-=instructionsLength;if(glyf.length-glyphDataLength>3){glyphDataLength=glyphDataLength+3&~3;}glyphProfile.length=glyphDataLength;return glyphProfile;}if(glyf.length-glyphDataLength>3){glyphDataLength=glyphDataLength+3&~3;dest.set(glyf.subarray(0,glyphDataLength),destStart);glyphProfile.length=glyphDataLength;return glyphProfile;}dest.set(glyf,destStart);glyphProfile.length=glyf.length;return glyphProfile;}function sanitizeHead(head,numGlyphs,locaLength){var data=head.data;var version=int32(data[0],data[1],data[2],data[3]);if(version>>16!==1){(0,_util.info)('Attempting to fix invalid version in head table: '+version);data[0]=0;data[1]=1;data[2]=0;data[3]=0;}var indexToLocFormat=int16(data[50],data[51]);if(indexToLocFormat<0||indexToLocFormat>1){(0,_util.info)('Attempting to fix invalid indexToLocFormat in head table: '+indexToLocFormat);var numGlyphsPlusOne=numGlyphs+1;if(locaLength===numGlyphsPlusOne<<1){data[50]=0;data[51]=0;}else if(locaLength===numGlyphsPlusOne<<2){data[50]=0;data[51]=1;}else{throw new _util.FormatError('Could not fix indexToLocFormat: '+indexToLocFormat);}}}function sanitizeGlyphLocations(loca,glyf,numGlyphs,isGlyphLocationsLong,hintsValid,dupFirstEntry,maxSizeOfInstructions){var itemSize,itemDecode,itemEncode;if(isGlyphLocationsLong){itemSize=4;itemDecode=function fontItemDecodeLong(data,offset){return data[offset]<<24|data[offset+1]<<16|data[offset+2]<<8|data[offset+3];};itemEncode=function fontItemEncodeLong(data,offset,value){data[offset]=value>>>24&0xFF;data[offset+1]=value>>16&0xFF;data[offset+2]=value>>8&0xFF;data[offset+3]=value&0xFF;};}else{itemSize=2;itemDecode=function fontItemDecode(data,offset){return data[offset]<<9|data[offset+1]<<1;};itemEncode=function fontItemEncode(data,offset,value){data[offset]=value>>9&0xFF;data[offset+1]=value>>1&0xFF;};}var numGlyphsOut=dupFirstEntry?numGlyphs+1:numGlyphs;var locaData=loca.data;var locaDataSize=itemSize*(1+numGlyphsOut);locaData=new Uint8Array(locaDataSize);locaData.set(loca.data.subarray(0,locaDataSize));loca.data=locaData;var oldGlyfData=glyf.data;var oldGlyfDataLength=oldGlyfData.length;var newGlyfData=new Uint8Array(oldGlyfDataLength);var startOffset=itemDecode(locaData,0);var writeOffset=0;var missingGlyphs=Object.create(null);itemEncode(locaData,0,writeOffset);var i,j;for(i=0,j=itemSize;i<numGlyphs;i++,j+=itemSize){var endOffset=itemDecode(locaData,j);if(endOffset===0){endOffset=startOffset;}if(endOffset>oldGlyfDataLength&&(oldGlyfDataLength+3&~3)===endOffset){endOffset=oldGlyfDataLength;}if(endOffset>oldGlyfDataLength){startOffset=endOffset;}var glyphProfile=sanitizeGlyph(oldGlyfData,startOffset,endOffset,newGlyfData,writeOffset,hintsValid);var newLength=glyphProfile.length;if(newLength===0){missingGlyphs[i]=true;}if(glyphProfile.sizeOfInstructions>maxSizeOfInstructions){maxSizeOfInstructions=glyphProfile.sizeOfInstructions;}writeOffset+=newLength;itemEncode(locaData,j,writeOffset);startOffset=endOffset;}if(writeOffset===0){var simpleGlyph=new Uint8Array([0,1,0,0,0,0,0,0,0,0,0,0,0,0,49,0]);for(i=0,j=itemSize;i<numGlyphsOut;i++,j+=itemSize){itemEncode(locaData,j,simpleGlyph.length);}glyf.data=simpleGlyph;}else if(dupFirstEntry){var firstEntryLength=itemDecode(locaData,itemSize);if(newGlyfData.length>firstEntryLength+writeOffset){glyf.data=newGlyfData.subarray(0,firstEntryLength+writeOffset);}else{glyf.data=new Uint8Array(firstEntryLength+writeOffset);glyf.data.set(newGlyfData.subarray(0,writeOffset));}glyf.data.set(newGlyfData.subarray(0,firstEntryLength),writeOffset);itemEncode(loca.data,locaData.length-itemSize,writeOffset+firstEntryLength);}else{glyf.data=newGlyfData.subarray(0,writeOffset);}return{missingGlyphs:missingGlyphs,maxSizeOfInstructions:maxSizeOfInstructions};}function readPostScriptTable(post,properties,maxpNumGlyphs){var start=(font.start?font.start:0)+post.offset;font.pos=start;var length=post.length,end=start+length;var version=font.getInt32();font.getBytes(28);var glyphNames;var valid=true;var i;switch(version){case 0x00010000:glyphNames=MacStandardGlyphOrdering;break;case 0x00020000:var numGlyphs=font.getUint16();if(numGlyphs!==maxpNumGlyphs){valid=false;break;}var glyphNameIndexes=[];for(i=0;i<numGlyphs;++i){var index=font.getUint16();if(index>=32768){valid=false;break;}glyphNameIndexes.push(index);}if(!valid){break;}var customNames=[];var strBuf=[];while(font.pos<end){var stringLength=font.getByte();strBuf.length=stringLength;for(i=0;i<stringLength;++i){strBuf[i]=String.fromCharCode(font.getByte());}customNames.push(strBuf.join(''));}glyphNames=[];for(i=0;i<numGlyphs;++i){var j=glyphNameIndexes[i];if(j<258){glyphNames.push(MacStandardGlyphOrdering[j]);continue;}glyphNames.push(customNames[j-258]);}break;case 0x00030000:break;default:(0,_util.warn)('Unknown/unsupported post table version '+version);valid=false;if(properties.defaultEncoding){glyphNames=properties.defaultEncoding;}break;}properties.glyphNames=glyphNames;return valid;}function readNameTable(nameTable){var start=(font.start?font.start:0)+nameTable.offset;font.pos=start;var names=[[],[]];var length=nameTable.length,end=start+length;var format=font.getUint16();var FORMAT_0_HEADER_LENGTH=6;if(format!==0||length<FORMAT_0_HEADER_LENGTH){return names;}var numRecords=font.getUint16();var stringsStart=font.getUint16();var records=[];var NAME_RECORD_LENGTH=12;var i,ii;for(i=0;i<numRecords&&font.pos+NAME_RECORD_LENGTH<=end;i++){var r={platform:font.getUint16(),encoding:font.getUint16(),language:font.getUint16(),name:font.getUint16(),length:font.getUint16(),offset:font.getUint16()};if(r.platform===1&&r.encoding===0&&r.language===0||r.platform===3&&r.encoding===1&&r.language===0x409){records.push(r);}}for(i=0,ii=records.length;i<ii;i++){var record=records[i];if(record.length<=0){continue;}var pos=start+stringsStart+record.offset;if(pos+record.length>end){continue;}font.pos=pos;var nameIndex=record.name;if(record.encoding){var str='';for(var j=0,jj=record.length;j<jj;j+=2){str+=String.fromCharCode(font.getUint16());}names[1][nameIndex]=str;}else{names[0][nameIndex]=(0,_util.bytesToString)(font.getBytes(record.length));}}return names;}var TTOpsStackDeltas=[0,0,0,0,0,0,0,0,-2,-2,-2,-2,0,0,-2,-5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,0,-1,-1,-1,-1,1,-1,-999,0,1,0,-1,-2,0,-1,-2,-1,-1,0,-1,-1,0,0,-999,-999,-1,-1,-1,-1,-2,-999,-2,-2,-999,0,-2,-2,0,0,-2,0,-2,0,0,0,-2,-1,-1,1,1,0,0,-1,-1,-1,-1,-1,-1,-1,0,0,-1,0,-1,-1,0,-999,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,-2,-999,-999,-999,-999,-999,-1,-1,-2,-2,0,0,0,0,-1,-1,-999,-2,-2,0,0,-1,-2,-2,0,0,0,-1,-1,-1,-2];function sanitizeTTProgram(table,ttContext){var data=table.data;var i=0,j,n,b,funcId,pc,lastEndf=0,lastDeff=0;var stack=[];var callstack=[];var functionsCalled=[];var tooComplexToFollowFunctions=ttContext.tooComplexToFollowFunctions;var inFDEF=false,ifLevel=0,inELSE=0;for(var ii=data.length;i<ii;){var op=data[i++];if(op===0x40){n=data[i++];if(inFDEF||inELSE){i+=n;}else{for(j=0;j<n;j++){stack.push(data[i++]);}}}else if(op===0x41){n=data[i++];if(inFDEF||inELSE){i+=n*2;}else{for(j=0;j<n;j++){b=data[i++];stack.push(b<<8|data[i++]);}}}else if((op&0xF8)===0xB0){n=op-0xB0+1;if(inFDEF||inELSE){i+=n;}else{for(j=0;j<n;j++){stack.push(data[i++]);}}}else if((op&0xF8)===0xB8){n=op-0xB8+1;if(inFDEF||inELSE){i+=n*2;}else{for(j=0;j<n;j++){b=data[i++];stack.push(b<<8|data[i++]);}}}else if(op===0x2B&&!tooComplexToFollowFunctions){if(!inFDEF&&!inELSE){funcId=stack[stack.length-1];if(isNaN(funcId)){(0,_util.info)('TT: CALL empty stack (or invalid entry).');}else{ttContext.functionsUsed[funcId]=true;if(funcId in ttContext.functionsStackDeltas){var newStackLength=stack.length+ttContext.functionsStackDeltas[funcId];if(newStackLength<0){(0,_util.warn)('TT: CALL invalid functions stack delta.');ttContext.hintsValid=false;return;}stack.length=newStackLength;}else if(funcId in ttContext.functionsDefined&&!functionsCalled.includes(funcId)){callstack.push({data:data,i:i,stackTop:stack.length-1});functionsCalled.push(funcId);pc=ttContext.functionsDefined[funcId];if(!pc){(0,_util.warn)('TT: CALL non-existent function');ttContext.hintsValid=false;return;}data=pc.data;i=pc.i;}}}}else if(op===0x2C&&!tooComplexToFollowFunctions){if(inFDEF||inELSE){(0,_util.warn)('TT: nested FDEFs not allowed');tooComplexToFollowFunctions=true;}inFDEF=true;lastDeff=i;funcId=stack.pop();ttContext.functionsDefined[funcId]={data:data,i:i};}else if(op===0x2D){if(inFDEF){inFDEF=false;lastEndf=i;}else{pc=callstack.pop();if(!pc){(0,_util.warn)('TT: ENDF bad stack');ttContext.hintsValid=false;return;}funcId=functionsCalled.pop();data=pc.data;i=pc.i;ttContext.functionsStackDeltas[funcId]=stack.length-pc.stackTop;}}else if(op===0x89){if(inFDEF||inELSE){(0,_util.warn)('TT: nested IDEFs not allowed');tooComplexToFollowFunctions=true;}inFDEF=true;lastDeff=i;}else if(op===0x58){++ifLevel;}else if(op===0x1B){inELSE=ifLevel;}else if(op===0x59){if(inELSE===ifLevel){inELSE=0;}--ifLevel;}else if(op===0x1C){if(!inFDEF&&!inELSE){var offset=stack[stack.length-1];if(offset>0){i+=offset-1;}}}if(!inFDEF&&!inELSE){var stackDelta=op<=0x8E?TTOpsStackDeltas[op]:op>=0xC0&&op<=0xDF?-1:op>=0xE0?-2:0;if(op>=0x71&&op<=0x75){n=stack.pop();if(!isNaN(n)){stackDelta=-n*2;}}while(stackDelta<0&&stack.length>0){stack.pop();stackDelta++;}while(stackDelta>0){stack.push(NaN);stackDelta--;}}}ttContext.tooComplexToFollowFunctions=tooComplexToFollowFunctions;var content=[data];if(i>data.length){content.push(new Uint8Array(i-data.length));}if(lastDeff>lastEndf){(0,_util.warn)('TT: complementing a missing function tail');content.push(new Uint8Array([0x22,0x2D]));}foldTTTable(table,content);}function checkInvalidFunctions(ttContext,maxFunctionDefs){if(ttContext.tooComplexToFollowFunctions){return;}if(ttContext.functionsDefined.length>maxFunctionDefs){(0,_util.warn)('TT: more functions defined than expected');ttContext.hintsValid=false;return;}for(var j=0,jj=ttContext.functionsUsed.length;j<jj;j++){if(j>maxFunctionDefs){(0,_util.warn)('TT: invalid function id: '+j);ttContext.hintsValid=false;return;}if(ttContext.functionsUsed[j]&&!ttContext.functionsDefined[j]){(0,_util.warn)('TT: undefined function: '+j);ttContext.hintsValid=false;return;}}}function foldTTTable(table,content){if(content.length>1){var newLength=0;var j,jj;for(j=0,jj=content.length;j<jj;j++){newLength+=content[j].length;}newLength=newLength+3&~3;var result=new Uint8Array(newLength);var pos=0;for(j=0,jj=content.length;j<jj;j++){result.set(content[j],pos);pos+=content[j].length;}table.data=result;table.length=newLength;}}function sanitizeTTPrograms(fpgm,prep,cvt,maxFunctionDefs){var ttContext={functionsDefined:[],functionsUsed:[],functionsStackDeltas:[],tooComplexToFollowFunctions:false,hintsValid:true};if(fpgm){sanitizeTTProgram(fpgm,ttContext);}if(prep){sanitizeTTProgram(prep,ttContext);}if(fpgm){checkInvalidFunctions(ttContext,maxFunctionDefs);}if(cvt&&cvt.length&1){var cvtData=new Uint8Array(cvt.length+1);cvtData.set(cvt.data);cvt.data=cvtData;}return ttContext.hintsValid;}font=new _stream.Stream(new Uint8Array(font.getBytes()));var header=void 0,tables=void 0;if(isTrueTypeCollectionFile(font)){var ttcData=readTrueTypeCollectionData(font,this.name);header=ttcData.header;tables=ttcData.tables;}else{header=readOpenTypeHeader(font);tables=readTables(font,header.numTables);}var cff=void 0,cffFile=void 0;var isTrueType=!tables['CFF '];if(!isTrueType){var isComposite=properties.composite&&((properties.cidToGidMap||[]).length>0||!(properties.cMap instanceof _cmap.IdentityCMap));if(header.version==='OTTO'&&!isComposite||!tables['head']||!tables['hhea']||!tables['maxp']||!tables['post']){cffFile=new _stream.Stream(tables['CFF '].data);cff=new CFFFont(cffFile,properties);adjustWidths(properties);return this.convert(name,cff,properties);}delete tables['glyf'];delete tables['loca'];delete tables['fpgm'];delete tables['prep'];delete tables['cvt '];this.isOpenType=true;}else{if(!tables['loca']){throw new _util.FormatError('Required "loca" table is not found');}if(!tables['glyf']){(0,_util.warn)('Required "glyf" table is not found -- trying to recover.');tables['glyf']={tag:'glyf',data:new Uint8Array(0)};}this.isOpenType=false;}if(!tables['maxp']){throw new _util.FormatError('Required "maxp" table is not found');}font.pos=(font.start||0)+tables['maxp'].offset;var version=font.getInt32();var numGlyphs=font.getUint16();var numGlyphsOut=numGlyphs+1;var dupFirstEntry=true;if(numGlyphsOut>0xFFFF){dupFirstEntry=false;numGlyphsOut=numGlyphs;(0,_util.warn)('Not enough space in glyfs to duplicate first glyph.');}var maxFunctionDefs=0;var maxSizeOfInstructions=0;if(version>=0x00010000&&tables['maxp'].length>=22){font.pos+=8;var maxZones=font.getUint16();if(maxZones>2){tables['maxp'].data[14]=0;tables['maxp'].data[15]=2;}font.pos+=4;maxFunctionDefs=font.getUint16();font.pos+=4;maxSizeOfInstructions=font.getUint16();}tables['maxp'].data[4]=numGlyphsOut>>8;tables['maxp'].data[5]=numGlyphsOut&255;var hintsValid=sanitizeTTPrograms(tables['fpgm'],tables['prep'],tables['cvt '],maxFunctionDefs);if(!hintsValid){delete tables['fpgm'];delete tables['prep'];delete tables['cvt '];}sanitizeMetrics(font,tables['hhea'],tables['hmtx'],numGlyphsOut);if(!tables['head']){throw new _util.FormatError('Required "head" table is not found');}sanitizeHead(tables['head'],numGlyphs,isTrueType?tables['loca'].length:0);var missingGlyphs=Object.create(null);if(isTrueType){var isGlyphLocationsLong=int16(tables['head'].data[50],tables['head'].data[51]);var glyphsInfo=sanitizeGlyphLocations(tables['loca'],tables['glyf'],numGlyphs,isGlyphLocationsLong,hintsValid,dupFirstEntry,maxSizeOfInstructions);missingGlyphs=glyphsInfo.missingGlyphs;if(version>=0x00010000&&tables['maxp'].length>=22){tables['maxp'].data[26]=glyphsInfo.maxSizeOfInstructions>>8;tables['maxp'].data[27]=glyphsInfo.maxSizeOfInstructions&255;}}if(!tables['hhea']){throw new _util.FormatError('Required "hhea" table is not found');}if(tables['hhea'].data[10]===0&&tables['hhea'].data[11]===0){tables['hhea'].data[10]=0xFF;tables['hhea'].data[11]=0xFF;}var metricsOverride={unitsPerEm:int16(tables['head'].data[18],tables['head'].data[19]),yMax:int16(tables['head'].data[42],tables['head'].data[43]),yMin:signedInt16(tables['head'].data[38],tables['head'].data[39]),ascent:int16(tables['hhea'].data[4],tables['hhea'].data[5]),descent:signedInt16(tables['hhea'].data[6],tables['hhea'].data[7])};this.ascent=metricsOverride.ascent/metricsOverride.unitsPerEm;this.descent=metricsOverride.descent/metricsOverride.unitsPerEm;if(tables['post']){readPostScriptTable(tables['post'],properties,numGlyphs);}tables['post']={tag:'post',data:createPostTable(properties)};var charCodeToGlyphId=[],charCode;function hasGlyph(glyphId){return!missingGlyphs[glyphId];}if(properties.composite){var cidToGidMap=properties.cidToGidMap||[];var isCidToGidMapEmpty=cidToGidMap.length===0;properties.cMap.forEach(function(charCode,cid){if(cid>0xffff){throw new _util.FormatError('Max size of CID is 65,535');}var glyphId=-1;if(isCidToGidMapEmpty){glyphId=cid;}else if(cidToGidMap[cid]!==undefined){glyphId=cidToGidMap[cid];}if(glyphId>=0&&glyphId<numGlyphs&&hasGlyph(glyphId)){charCodeToGlyphId[charCode]=glyphId;}});}else{var cmapTable=readCmapTable(tables['cmap'],font,this.isSymbolicFont,properties.hasEncoding);var cmapPlatformId=cmapTable.platformId;var cmapEncodingId=cmapTable.encodingId;var cmapMappings=cmapTable.mappings;var cmapMappingsLength=cmapMappings.length;if(properties.hasEncoding&&(cmapPlatformId===3&&cmapEncodingId===1||cmapPlatformId===1&&cmapEncodingId===0)||cmapPlatformId===-1&&cmapEncodingId===-1&&!!(0,_encodings.getEncoding)(properties.baseEncodingName)){var baseEncoding=[];if(properties.baseEncodingName==='MacRomanEncoding'||properties.baseEncodingName==='WinAnsiEncoding'){baseEncoding=(0,_encodings.getEncoding)(properties.baseEncodingName);}var glyphsUnicodeMap=(0,_glyphlist.getGlyphsUnicode)();for(charCode=0;charCode<256;charCode++){var glyphName,standardGlyphName;if(this.differences&&charCode in this.differences){glyphName=this.differences[charCode];}else if(charCode in baseEncoding&&baseEncoding[charCode]!==''){glyphName=baseEncoding[charCode];}else{glyphName=_encodings.StandardEncoding[charCode];}if(!glyphName){continue;}standardGlyphName=recoverGlyphName(glyphName,glyphsUnicodeMap);var unicodeOrCharCode;if(cmapPlatformId===3&&cmapEncodingId===1){unicodeOrCharCode=glyphsUnicodeMap[standardGlyphName];}else if(cmapPlatformId===1&&cmapEncodingId===0){unicodeOrCharCode=_encodings.MacRomanEncoding.indexOf(standardGlyphName);}var found=false;for(var i=0;i<cmapMappingsLength;++i){if(cmapMappings[i].charCode!==unicodeOrCharCode){continue;}charCodeToGlyphId[charCode]=cmapMappings[i].glyphId;found=true;break;}if(!found&&properties.glyphNames){var glyphId=properties.glyphNames.indexOf(glyphName);if(glyphId===-1&&standardGlyphName!==glyphName){glyphId=properties.glyphNames.indexOf(standardGlyphName);}if(glyphId>0&&hasGlyph(glyphId)){charCodeToGlyphId[charCode]=glyphId;}}}}else if(cmapPlatformId===0&&cmapEncodingId===0){for(var _i=0;_i<cmapMappingsLength;++_i){charCodeToGlyphId[cmapMappings[_i].charCode]=cmapMappings[_i].glyphId;}}else{for(var _i2=0;_i2<cmapMappingsLength;++_i2){charCode=cmapMappings[_i2].charCode;if(cmapPlatformId===3&&charCode>=0xF000&&charCode<=0xF0FF){charCode&=0xFF;}charCodeToGlyphId[charCode]=cmapMappings[_i2].glyphId;}}}if(charCodeToGlyphId.length===0){charCodeToGlyphId[0]=0;}var glyphZeroId=numGlyphsOut-1;if(!dupFirstEntry){glyphZeroId=0;}var newMapping=adjustMapping(charCodeToGlyphId,hasGlyph,glyphZeroId);this.toFontChar=newMapping.toFontChar;tables['cmap']={tag:'cmap',data:createCmapTable(newMapping.charCodeToGlyphId,numGlyphsOut)};if(!tables['OS/2']||!validateOS2Table(tables['OS/2'])){tables['OS/2']={tag:'OS/2',data:createOS2Table(properties,newMapping.charCodeToGlyphId,metricsOverride)};}if(!isTrueType){try{cffFile=new _stream.Stream(tables['CFF '].data);var parser=new _cff_parser.CFFParser(cffFile,properties,SEAC_ANALYSIS_ENABLED);cff=parser.parse();cff.duplicateFirstGlyph();var compiler=new _cff_parser.CFFCompiler(cff);tables['CFF '].data=compiler.compile();}catch(e){(0,_util.warn)('Failed to compile font '+properties.loadedName);}}if(!tables['name']){tables['name']={tag:'name',data:createNameTable(this.name)};}else{var namePrototype=readNameTable(tables['name']);tables['name'].data=createNameTable(name,namePrototype);}var builder=new OpenTypeFileBuilder(header.version);for(var tableTag in tables){builder.addTable(tableTag,tables[tableTag].data);}return builder.toArray();},convert:function Font_convert(fontName,font,properties){properties.fixedPitch=false;if(properties.builtInEncoding){adjustToUnicode(properties,properties.builtInEncoding);}var glyphZeroId=1;if(font instanceof CFFFont){glyphZeroId=font.numGlyphs-1;}var mapping=font.getGlyphMapping(properties);var newMapping=adjustMapping(mapping,font.hasGlyphId.bind(font),glyphZeroId);this.toFontChar=newMapping.toFontChar;var numGlyphs=font.numGlyphs;function getCharCodes(charCodeToGlyphId,glyphId){var charCodes=null;for(var charCode in charCodeToGlyphId){if(glyphId===charCodeToGlyphId[charCode]){if(!charCodes){charCodes=[];}charCodes.push(charCode|0);}}return charCodes;}function createCharCode(charCodeToGlyphId,glyphId){for(var charCode in charCodeToGlyphId){if(glyphId===charCodeToGlyphId[charCode]){return charCode|0;}}newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode]=glyphId;return newMapping.nextAvailableFontCharCode++;}var seacs=font.seacs;if(SEAC_ANALYSIS_ENABLED&&seacs&&seacs.length){var matrix=properties.fontMatrix||_util.FONT_IDENTITY_MATRIX;var charset=font.getCharset();var seacMap=Object.create(null);for(var glyphId in seacs){glyphId|=0;var seac=seacs[glyphId];var baseGlyphName=_encodings.StandardEncoding[seac[2]];var accentGlyphName=_encodings.StandardEncoding[seac[3]];var baseGlyphId=charset.indexOf(baseGlyphName);var accentGlyphId=charset.indexOf(accentGlyphName);if(baseGlyphId<0||accentGlyphId<0){continue;}var accentOffset={x:seac[0]*matrix[0]+seac[1]*matrix[2]+matrix[4],y:seac[0]*matrix[1]+seac[1]*matrix[3]+matrix[5]};var charCodes=getCharCodes(mapping,glyphId);if(!charCodes){continue;}for(var i=0,ii=charCodes.length;i<ii;i++){var charCode=charCodes[i];var charCodeToGlyphId=newMapping.charCodeToGlyphId;var baseFontCharCode=createCharCode(charCodeToGlyphId,baseGlyphId);var accentFontCharCode=createCharCode(charCodeToGlyphId,accentGlyphId);seacMap[charCode]={baseFontCharCode:baseFontCharCode,accentFontCharCode:accentFontCharCode,accentOffset:accentOffset};}}properties.seacMap=seacMap;}var unitsPerEm=1/(properties.fontMatrix||_util.FONT_IDENTITY_MATRIX)[0];var builder=new OpenTypeFileBuilder('\x4F\x54\x54\x4F');builder.addTable('CFF ',font.data);builder.addTable('OS/2',createOS2Table(properties,newMapping.charCodeToGlyphId));builder.addTable('cmap',createCmapTable(newMapping.charCodeToGlyphId,numGlyphs));builder.addTable('head','\x00\x01\x00\x00'+'\x00\x00\x10\x00'+'\x00\x00\x00\x00'+'\x5F\x0F\x3C\xF5'+'\x00\x00'+safeString16(unitsPerEm)+'\x00\x00\x00\x00\x9e\x0b\x7e\x27'+'\x00\x00\x00\x00\x9e\x0b\x7e\x27'+'\x00\x00'+safeString16(properties.descent)+'\x0F\xFF'+safeString16(properties.ascent)+string16(properties.italicAngle?2:0)+'\x00\x11'+'\x00\x00'+'\x00\x00'+'\x00\x00');builder.addTable('hhea','\x00\x01\x00\x00'+safeString16(properties.ascent)+safeString16(properties.descent)+'\x00\x00'+'\xFF\xFF'+'\x00\x00'+'\x00\x00'+'\x00\x00'+safeString16(properties.capHeight)+safeString16(Math.tan(properties.italicAngle)*properties.xHeight)+'\x00\x00'+'\x00\x00'+'\x00\x00'+'\x00\x00'+'\x00\x00'+'\x00\x00'+string16(numGlyphs));builder.addTable('hmtx',function fontFieldsHmtx(){var charstrings=font.charstrings;var cffWidths=font.cff?font.cff.widths:null;var hmtx='\x00\x00\x00\x00';for(var i=1,ii=numGlyphs;i<ii;i++){var width=0;if(charstrings){var charstring=charstrings[i-1];width='width'in charstring?charstring.width:0;}else if(cffWidths){width=Math.ceil(cffWidths[i]||0);}hmtx+=string16(width)+string16(0);}return hmtx;}());builder.addTable('maxp','\x00\x00\x50\x00'+string16(numGlyphs));builder.addTable('name',createNameTable(fontName));builder.addTable('post',createPostTable(properties));return builder.toArray();},get spaceWidth(){if('_shadowWidth'in this){return this._shadowWidth;}var possibleSpaceReplacements=['space','minus','one','i','I'];var width;for(var i=0,ii=possibleSpaceReplacements.length;i<ii;i++){var glyphName=possibleSpaceReplacements[i];if(glyphName in this.widths){width=this.widths[glyphName];break;}var glyphsUnicodeMap=(0,_glyphlist.getGlyphsUnicode)();var glyphUnicode=glyphsUnicodeMap[glyphName];var charcode=0;if(this.composite){if(this.cMap.contains(glyphUnicode)){charcode=this.cMap.lookup(glyphUnicode);}}if(!charcode&&this.toUnicode){charcode=this.toUnicode.charCodeOf(glyphUnicode);}if(charcode<=0){charcode=glyphUnicode;}width=this.widths[charcode];if(width){break;}}width=width||this.defaultWidth;this._shadowWidth=width;return width;},charToGlyph:function Font_charToGlyph(charcode,isSpace){var fontCharCode,width,operatorListId;var widthCode=charcode;if(this.cMap&&this.cMap.contains(charcode)){widthCode=this.cMap.lookup(charcode);}width=this.widths[widthCode];width=(0,_util.isNum)(width)?width:this.defaultWidth;var vmetric=this.vmetrics&&this.vmetrics[widthCode];var unicode=this.toUnicode.get(charcode)||this.fallbackToUnicode.get(charcode)||charcode;if(typeof unicode==='number'){unicode=String.fromCharCode(unicode);}var isInFont=charcode in this.toFontChar;fontCharCode=this.toFontChar[charcode]||charcode;if(this.missingFile){fontCharCode=(0,_unicode.mapSpecialUnicodeValues)(fontCharCode);}if(this.isType3Font){operatorListId=fontCharCode;}var accent=null;if(this.seacMap&&this.seacMap[charcode]){isInFont=true;var seac=this.seacMap[charcode];fontCharCode=seac.baseFontCharCode;accent={fontChar:String.fromCodePoint(seac.accentFontCharCode),offset:seac.accentOffset};}var fontChar=typeof fontCharCode==='number'?String.fromCodePoint(fontCharCode):'';var glyph=this.glyphCache[charcode];if(!glyph||!glyph.matchesForCache(fontChar,unicode,accent,width,vmetric,operatorListId,isSpace,isInFont)){glyph=new Glyph(fontChar,unicode,accent,width,vmetric,operatorListId,isSpace,isInFont);this.glyphCache[charcode]=glyph;}return glyph;},charsToGlyphs:function Font_charsToGlyphs(chars){var charsCache=this.charsCache;var glyphs,glyph,charcode;if(charsCache){glyphs=charsCache[chars];if(glyphs){return glyphs;}}if(!charsCache){charsCache=this.charsCache=Object.create(null);}glyphs=[];var charsCacheKey=chars;var i=0,ii;if(this.cMap){var c=Object.create(null);while(i<chars.length){this.cMap.readCharCode(chars,i,c);charcode=c.charcode;var length=c.length;i+=length;var isSpace=length===1&&chars.charCodeAt(i-1)===0x20;glyph=this.charToGlyph(charcode,isSpace);glyphs.push(glyph);}}else{for(i=0,ii=chars.length;i<ii;++i){charcode=chars.charCodeAt(i);glyph=this.charToGlyph(charcode,charcode===0x20);glyphs.push(glyph);}}return charsCache[charsCacheKey]=glyphs;}};return Font;}();var ErrorFont=function ErrorFontClosure(){function ErrorFont(error){this.error=error;this.loadedName='g_font_error';this.missingFile=true;}ErrorFont.prototype={charsToGlyphs:function ErrorFont_charsToGlyphs(){return[];},exportData:function ErrorFont_exportData(){return{error:this.error};}};return ErrorFont;}();function type1FontGlyphMapping(properties,builtInEncoding,glyphNames){var charCodeToGlyphId=Object.create(null);var glyphId,charCode,baseEncoding;var isSymbolicFont=!!(properties.flags&FontFlags.Symbolic);if(properties.baseEncodingName){baseEncoding=(0,_encodings.getEncoding)(properties.baseEncodingName);for(charCode=0;charCode<baseEncoding.length;charCode++){glyphId=glyphNames.indexOf(baseEncoding[charCode]);if(glyphId>=0){charCodeToGlyphId[charCode]=glyphId;}else{charCodeToGlyphId[charCode]=0;}}}else if(isSymbolicFont){for(charCode in builtInEncoding){charCodeToGlyphId[charCode]=builtInEncoding[charCode];}}else{baseEncoding=_encodings.StandardEncoding;for(charCode=0;charCode<baseEncoding.length;charCode++){glyphId=glyphNames.indexOf(baseEncoding[charCode]);if(glyphId>=0){charCodeToGlyphId[charCode]=glyphId;}else{charCodeToGlyphId[charCode]=0;}}}var differences=properties.differences,glyphsUnicodeMap;if(differences){for(charCode in differences){var glyphName=differences[charCode];glyphId=glyphNames.indexOf(glyphName);if(glyphId===-1){if(!glyphsUnicodeMap){glyphsUnicodeMap=(0,_glyphlist.getGlyphsUnicode)();}var standardGlyphName=recoverGlyphName(glyphName,glyphsUnicodeMap);if(standardGlyphName!==glyphName){glyphId=glyphNames.indexOf(standardGlyphName);}}if(glyphId>=0){charCodeToGlyphId[charCode]=glyphId;}else{charCodeToGlyphId[charCode]=0;}}}return charCodeToGlyphId;}var Type1Font=function Type1FontClosure(){function findBlock(streamBytes,signature,startIndex){var streamBytesLength=streamBytes.length;var signatureLength=signature.length;var scanLength=streamBytesLength-signatureLength;var i=startIndex,j,found=false;while(i<scanLength){j=0;while(j<signatureLength&&streamBytes[i+j]===signature[j]){j++;}if(j>=signatureLength){i+=j;while(i<streamBytesLength&&(0,_util.isSpace)(streamBytes[i])){i++;}found=true;break;}i++;}return{found:found,length:i};}function getHeaderBlock(stream,suggestedLength){var EEXEC_SIGNATURE=[0x65,0x65,0x78,0x65,0x63];var streamStartPos=stream.pos;var headerBytes,headerBytesLength,block;try{headerBytes=stream.getBytes(suggestedLength);headerBytesLength=headerBytes.length;}catch(ex){if(ex instanceof _util.MissingDataException){throw ex;}}if(headerBytesLength===suggestedLength){block=findBlock(headerBytes,EEXEC_SIGNATURE,suggestedLength-2*EEXEC_SIGNATURE.length);if(block.found&&block.length===suggestedLength){return{stream:new _stream.Stream(headerBytes),length:suggestedLength};}}(0,_util.warn)('Invalid "Length1" property in Type1 font -- trying to recover.');stream.pos=streamStartPos;var SCAN_BLOCK_LENGTH=2048;var actualLength;while(true){var scanBytes=stream.peekBytes(SCAN_BLOCK_LENGTH);block=findBlock(scanBytes,EEXEC_SIGNATURE,0);if(block.length===0){break;}stream.pos+=block.length;if(block.found){actualLength=stream.pos-streamStartPos;break;}}stream.pos=streamStartPos;if(actualLength){return{stream:new _stream.Stream(stream.getBytes(actualLength)),length:actualLength};}(0,_util.warn)('Unable to recover "Length1" property in Type1 font -- using as is.');return{stream:new _stream.Stream(stream.getBytes(suggestedLength)),length:suggestedLength};}function getEexecBlock(stream,suggestedLength){var eexecBytes=stream.getBytes();return{stream:new _stream.Stream(eexecBytes),length:eexecBytes.length};}function Type1Font(name,file,properties){var PFB_HEADER_SIZE=6;var headerBlockLength=properties.length1;var eexecBlockLength=properties.length2;var pfbHeader=file.peekBytes(PFB_HEADER_SIZE);var pfbHeaderPresent=pfbHeader[0]===0x80&&pfbHeader[1]===0x01;if(pfbHeaderPresent){file.skip(PFB_HEADER_SIZE);headerBlockLength=pfbHeader[5]<<24|pfbHeader[4]<<16|pfbHeader[3]<<8|pfbHeader[2];}var headerBlock=getHeaderBlock(file,headerBlockLength);var headerBlockParser=new _type1_parser.Type1Parser(headerBlock.stream,false,SEAC_ANALYSIS_ENABLED);headerBlockParser.extractFontHeader(properties);if(pfbHeaderPresent){pfbHeader=file.getBytes(PFB_HEADER_SIZE);eexecBlockLength=pfbHeader[5]<<24|pfbHeader[4]<<16|pfbHeader[3]<<8|pfbHeader[2];}var eexecBlock=getEexecBlock(file,eexecBlockLength);var eexecBlockParser=new _type1_parser.Type1Parser(eexecBlock.stream,true,SEAC_ANALYSIS_ENABLED);var data=eexecBlockParser.extractFontProgram();for(var info in data.properties){properties[info]=data.properties[info];}var charstrings=data.charstrings;var type2Charstrings=this.getType2Charstrings(charstrings);var subrs=this.getType2Subrs(data.subrs);this.charstrings=charstrings;this.data=this.wrap(name,type2Charstrings,this.charstrings,subrs,properties);this.seacs=this.getSeacs(data.charstrings);}Type1Font.prototype={get numGlyphs(){return this.charstrings.length+1;},getCharset:function Type1Font_getCharset(){var charset=['.notdef'];var charstrings=this.charstrings;for(var glyphId=0;glyphId<charstrings.length;glyphId++){charset.push(charstrings[glyphId].glyphName);}return charset;},getGlyphMapping:function Type1Font_getGlyphMapping(properties){var charstrings=this.charstrings;var glyphNames=['.notdef'],glyphId;for(glyphId=0;glyphId<charstrings.length;glyphId++){glyphNames.push(charstrings[glyphId].glyphName);}var encoding=properties.builtInEncoding;if(encoding){var builtInEncoding=Object.create(null);for(var charCode in encoding){glyphId=glyphNames.indexOf(encoding[charCode]);if(glyphId>=0){builtInEncoding[charCode]=glyphId;}}}return type1FontGlyphMapping(properties,builtInEncoding,glyphNames);},hasGlyphId:function Type1Font_hasGlyphID(id){if(id<0||id>=this.numGlyphs){return false;}if(id===0){return true;}var glyph=this.charstrings[id-1];return glyph.charstring.length>0;},getSeacs:function Type1Font_getSeacs(charstrings){var i,ii;var seacMap=[];for(i=0,ii=charstrings.length;i<ii;i++){var charstring=charstrings[i];if(charstring.seac){seacMap[i+1]=charstring.seac;}}return seacMap;},getType2Charstrings:function Type1Font_getType2Charstrings(type1Charstrings){var type2Charstrings=[];for(var i=0,ii=type1Charstrings.length;i<ii;i++){type2Charstrings.push(type1Charstrings[i].charstring);}return type2Charstrings;},getType2Subrs:function Type1Font_getType2Subrs(type1Subrs){var bias=0;var count=type1Subrs.length;if(count<1133){bias=107;}else if(count<33769){bias=1131;}else{bias=32768;}var type2Subrs=[];var i;for(i=0;i<bias;i++){type2Subrs.push([0x0B]);}for(i=0;i<count;i++){type2Subrs.push(type1Subrs[i]);}return type2Subrs;},wrap:function Type1Font_wrap(name,glyphs,charstrings,subrs,properties){var cff=new _cff_parser.CFF();cff.header=new _cff_parser.CFFHeader(1,0,4,4);cff.names=[name];var topDict=new _cff_parser.CFFTopDict();topDict.setByName('version',391);topDict.setByName('Notice',392);topDict.setByName('FullName',393);topDict.setByName('FamilyName',394);topDict.setByName('Weight',395);topDict.setByName('Encoding',null);topDict.setByName('FontMatrix',properties.fontMatrix);topDict.setByName('FontBBox',properties.bbox);topDict.setByName('charset',null);topDict.setByName('CharStrings',null);topDict.setByName('Private',null);cff.topDict=topDict;var strings=new _cff_parser.CFFStrings();strings.add('Version 0.11');strings.add('See original notice');strings.add(name);strings.add(name);strings.add('Medium');cff.strings=strings;cff.globalSubrIndex=new _cff_parser.CFFIndex();var count=glyphs.length;var charsetArray=[0];var i,ii;for(i=0;i<count;i++){var index=_cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);if(index===-1){index=0;}charsetArray.push(index>>8&0xff,index&0xff);}cff.charset=new _cff_parser.CFFCharset(false,0,[],charsetArray);var charStringsIndex=new _cff_parser.CFFIndex();charStringsIndex.add([0x8B,0x0E]);for(i=0;i<count;i++){charStringsIndex.add(glyphs[i]);}cff.charStrings=charStringsIndex;var privateDict=new _cff_parser.CFFPrivateDict();privateDict.setByName('Subrs',null);var fields=['BlueValues','OtherBlues','FamilyBlues','FamilyOtherBlues','StemSnapH','StemSnapV','BlueShift','BlueFuzz','BlueScale','LanguageGroup','ExpansionFactor','ForceBold','StdHW','StdVW'];for(i=0,ii=fields.length;i<ii;i++){var field=fields[i];if(!(field in properties.privateData)){continue;}var value=properties.privateData[field];if(Array.isArray(value)){for(var j=value.length-1;j>0;j--){value[j]-=value[j-1];}}privateDict.setByName(field,value);}cff.topDict.privateDict=privateDict;var subrIndex=new _cff_parser.CFFIndex();for(i=0,ii=subrs.length;i<ii;i++){subrIndex.add(subrs[i]);}privateDict.subrsIndex=subrIndex;var compiler=new _cff_parser.CFFCompiler(cff);return compiler.compile();}};return Type1Font;}();var CFFFont=function CFFFontClosure(){function CFFFont(file,properties){this.properties=properties;var parser=new _cff_parser.CFFParser(file,properties,SEAC_ANALYSIS_ENABLED);this.cff=parser.parse();this.cff.duplicateFirstGlyph();var compiler=new _cff_parser.CFFCompiler(this.cff);this.seacs=this.cff.seacs;try{this.data=compiler.compile();}catch(e){(0,_util.warn)('Failed to compile font '+properties.loadedName);this.data=file;}}CFFFont.prototype={get numGlyphs(){return this.cff.charStrings.count;},getCharset:function CFFFont_getCharset(){return this.cff.charset.charset;},getGlyphMapping:function CFFFont_getGlyphMapping(){var cff=this.cff;var properties=this.properties;var charsets=cff.charset.charset;var charCodeToGlyphId;var glyphId;if(properties.composite){charCodeToGlyphId=Object.create(null);if(cff.isCIDFont){for(glyphId=0;glyphId<charsets.length;glyphId++){var cid=charsets[glyphId];var charCode=properties.cMap.charCodeOf(cid);charCodeToGlyphId[charCode]=glyphId;}}else{for(glyphId=0;glyphId<cff.charStrings.count;glyphId++){charCodeToGlyphId[glyphId]=glyphId;}}return charCodeToGlyphId;}var encoding=cff.encoding?cff.encoding.encoding:null;charCodeToGlyphId=type1FontGlyphMapping(properties,encoding,charsets);return charCodeToGlyphId;},hasGlyphId:function CFFFont_hasGlyphID(id){return this.cff.hasGlyphId(id);}};return CFFFont;}();exports.SEAC_ANALYSIS_ENABLED=SEAC_ANALYSIS_ENABLED;exports.ErrorFont=ErrorFont;exports.Font=Font;exports.FontFlags=FontFlags;exports.ToUnicodeMap=ToUnicodeMap;exports.IdentityToUnicodeMap=IdentityToUnicodeMap;exports.getFontType=getFontType;/***/},/* 157 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.CFFFDSelect=exports.CFFCompiler=exports.CFFPrivateDict=exports.CFFTopDict=exports.CFFCharset=exports.CFFIndex=exports.CFFStrings=exports.CFFHeader=exports.CFF=exports.CFFParser=exports.CFFStandardStrings=undefined;var _util=__w_pdfjs_require__(2);var _charsets=__w_pdfjs_require__(158);var _encodings=__w_pdfjs_require__(159);var MAX_SUBR_NESTING=10;var CFFStandardStrings=['.notdef','space','exclam','quotedbl','numbersign','dollar','percent','ampersand','quoteright','parenleft','parenright','asterisk','plus','comma','hyphen','period','slash','zero','one','two','three','four','five','six','seven','eight','nine','colon','semicolon','less','equal','greater','question','at','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','bracketleft','backslash','bracketright','asciicircum','underscore','quoteleft','a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','braceleft','bar','braceright','asciitilde','exclamdown','cent','sterling','fraction','yen','florin','section','currency','quotesingle','quotedblleft','guillemotleft','guilsinglleft','guilsinglright','fi','fl','endash','dagger','daggerdbl','periodcentered','paragraph','bullet','quotesinglbase','quotedblbase','quotedblright','guillemotright','ellipsis','perthousand','questiondown','grave','acute','circumflex','tilde','macron','breve','dotaccent','dieresis','ring','cedilla','hungarumlaut','ogonek','caron','emdash','AE','ordfeminine','Lslash','Oslash','OE','ordmasculine','ae','dotlessi','lslash','oslash','oe','germandbls','onesuperior','logicalnot','mu','trademark','Eth','onehalf','plusminus','Thorn','onequarter','divide','brokenbar','degree','thorn','threequarters','twosuperior','registered','minus','eth','multiply','threesuperior','copyright','Aacute','Acircumflex','Adieresis','Agrave','Aring','Atilde','Ccedilla','Eacute','Ecircumflex','Edieresis','Egrave','Iacute','Icircumflex','Idieresis','Igrave','Ntilde','Oacute','Ocircumflex','Odieresis','Ograve','Otilde','Scaron','Uacute','Ucircumflex','Udieresis','Ugrave','Yacute','Ydieresis','Zcaron','aacute','acircumflex','adieresis','agrave','aring','atilde','ccedilla','eacute','ecircumflex','edieresis','egrave','iacute','icircumflex','idieresis','igrave','ntilde','oacute','ocircumflex','odieresis','ograve','otilde','scaron','uacute','ucircumflex','udieresis','ugrave','yacute','ydieresis','zcaron','exclamsmall','Hungarumlautsmall','dollaroldstyle','dollarsuperior','ampersandsmall','Acutesmall','parenleftsuperior','parenrightsuperior','twodotenleader','onedotenleader','zerooldstyle','oneoldstyle','twooldstyle','threeoldstyle','fouroldstyle','fiveoldstyle','sixoldstyle','sevenoldstyle','eightoldstyle','nineoldstyle','commasuperior','threequartersemdash','periodsuperior','questionsmall','asuperior','bsuperior','centsuperior','dsuperior','esuperior','isuperior','lsuperior','msuperior','nsuperior','osuperior','rsuperior','ssuperior','tsuperior','ff','ffi','ffl','parenleftinferior','parenrightinferior','Circumflexsmall','hyphensuperior','Gravesmall','Asmall','Bsmall','Csmall','Dsmall','Esmall','Fsmall','Gsmall','Hsmall','Ismall','Jsmall','Ksmall','Lsmall','Msmall','Nsmall','Osmall','Psmall','Qsmall','Rsmall','Ssmall','Tsmall','Usmall','Vsmall','Wsmall','Xsmall','Ysmall','Zsmall','colonmonetary','onefitted','rupiah','Tildesmall','exclamdownsmall','centoldstyle','Lslashsmall','Scaronsmall','Zcaronsmall','Dieresissmall','Brevesmall','Caronsmall','Dotaccentsmall','Macronsmall','figuredash','hypheninferior','Ogoneksmall','Ringsmall','Cedillasmall','questiondownsmall','oneeighth','threeeighths','fiveeighths','seveneighths','onethird','twothirds','zerosuperior','foursuperior','fivesuperior','sixsuperior','sevensuperior','eightsuperior','ninesuperior','zeroinferior','oneinferior','twoinferior','threeinferior','fourinferior','fiveinferior','sixinferior','seveninferior','eightinferior','nineinferior','centinferior','dollarinferior','periodinferior','commainferior','Agravesmall','Aacutesmall','Acircumflexsmall','Atildesmall','Adieresissmall','Aringsmall','AEsmall','Ccedillasmall','Egravesmall','Eacutesmall','Ecircumflexsmall','Edieresissmall','Igravesmall','Iacutesmall','Icircumflexsmall','Idieresissmall','Ethsmall','Ntildesmall','Ogravesmall','Oacutesmall','Ocircumflexsmall','Otildesmall','Odieresissmall','OEsmall','Oslashsmall','Ugravesmall','Uacutesmall','Ucircumflexsmall','Udieresissmall','Yacutesmall','Thornsmall','Ydieresissmall','001.000','001.001','001.002','001.003','Black','Bold','Book','Light','Medium','Regular','Roman','Semibold'];var CFFParser=function CFFParserClosure(){var CharstringValidationData=[null,{id:'hstem',min:2,stackClearing:true,stem:true},null,{id:'vstem',min:2,stackClearing:true,stem:true},{id:'vmoveto',min:1,stackClearing:true},{id:'rlineto',min:2,resetStack:true},{id:'hlineto',min:1,resetStack:true},{id:'vlineto',min:1,resetStack:true},{id:'rrcurveto',min:6,resetStack:true},null,{id:'callsubr',min:1,undefStack:true},{id:'return',min:0,undefStack:true},null,null,{id:'endchar',min:0,stackClearing:true},null,null,null,{id:'hstemhm',min:2,stackClearing:true,stem:true},{id:'hintmask',min:0,stackClearing:true},{id:'cntrmask',min:0,stackClearing:true},{id:'rmoveto',min:2,stackClearing:true},{id:'hmoveto',min:1,stackClearing:true},{id:'vstemhm',min:2,stackClearing:true,stem:true},{id:'rcurveline',min:8,resetStack:true},{id:'rlinecurve',min:8,resetStack:true},{id:'vvcurveto',min:4,resetStack:true},{id:'hhcurveto',min:4,resetStack:true},null,{id:'callgsubr',min:1,undefStack:true},{id:'vhcurveto',min:4,resetStack:true},{id:'hvcurveto',min:4,resetStack:true}];var CharstringValidationData12=[null,null,null,{id:'and',min:2,stackDelta:-1},{id:'or',min:2,stackDelta:-1},{id:'not',min:1,stackDelta:0},null,null,null,{id:'abs',min:1,stackDelta:0},{id:'add',min:2,stackDelta:-1,stackFn:function stack_div(stack,index){stack[index-2]=stack[index-2]+stack[index-1];}},{id:'sub',min:2,stackDelta:-1,stackFn:function stack_div(stack,index){stack[index-2]=stack[index-2]-stack[index-1];}},{id:'div',min:2,stackDelta:-1,stackFn:function stack_div(stack,index){stack[index-2]=stack[index-2]/stack[index-1];}},null,{id:'neg',min:1,stackDelta:0,stackFn:function stack_div(stack,index){stack[index-1]=-stack[index-1];}},{id:'eq',min:2,stackDelta:-1},null,null,{id:'drop',min:1,stackDelta:-1},null,{id:'put',min:2,stackDelta:-2},{id:'get',min:1,stackDelta:0},{id:'ifelse',min:4,stackDelta:-3},{id:'random',min:0,stackDelta:1},{id:'mul',min:2,stackDelta:-1,stackFn:function stack_div(stack,index){stack[index-2]=stack[index-2]*stack[index-1];}},null,{id:'sqrt',min:1,stackDelta:0},{id:'dup',min:1,stackDelta:1},{id:'exch',min:2,stackDelta:0},{id:'index',min:2,stackDelta:0},{id:'roll',min:3,stackDelta:-2},null,null,null,{id:'hflex',min:7,resetStack:true},{id:'flex',min:13,resetStack:true},{id:'hflex1',min:9,resetStack:true},{id:'flex1',min:11,resetStack:true}];function CFFParser(file,properties,seacAnalysisEnabled){this.bytes=file.getBytes();this.properties=properties;this.seacAnalysisEnabled=!!seacAnalysisEnabled;}CFFParser.prototype={parse:function CFFParser_parse(){var properties=this.properties;var cff=new CFF();this.cff=cff;var header=this.parseHeader();var nameIndex=this.parseIndex(header.endPos);var topDictIndex=this.parseIndex(nameIndex.endPos);var stringIndex=this.parseIndex(topDictIndex.endPos);var globalSubrIndex=this.parseIndex(stringIndex.endPos);var topDictParsed=this.parseDict(topDictIndex.obj.get(0));var topDict=this.createDict(CFFTopDict,topDictParsed,cff.strings);cff.header=header.obj;cff.names=this.parseNameIndex(nameIndex.obj);cff.strings=this.parseStringIndex(stringIndex.obj);cff.topDict=topDict;cff.globalSubrIndex=globalSubrIndex.obj;this.parsePrivateDict(cff.topDict);cff.isCIDFont=topDict.hasName('ROS');var charStringOffset=topDict.getByName('CharStrings');var charStringIndex=this.parseIndex(charStringOffset).obj;var fontMatrix=topDict.getByName('FontMatrix');if(fontMatrix){properties.fontMatrix=fontMatrix;}var fontBBox=topDict.getByName('FontBBox');if(fontBBox){properties.ascent=Math.max(fontBBox[3],fontBBox[1]);properties.descent=Math.min(fontBBox[1],fontBBox[3]);properties.ascentScaled=true;}var charset,encoding;if(cff.isCIDFont){var fdArrayIndex=this.parseIndex(topDict.getByName('FDArray')).obj;for(var i=0,ii=fdArrayIndex.count;i<ii;++i){var dictRaw=fdArrayIndex.get(i);var fontDict=this.createDict(CFFTopDict,this.parseDict(dictRaw),cff.strings);this.parsePrivateDict(fontDict);cff.fdArray.push(fontDict);}encoding=null;charset=this.parseCharsets(topDict.getByName('charset'),charStringIndex.count,cff.strings,true);cff.fdSelect=this.parseFDSelect(topDict.getByName('FDSelect'),charStringIndex.count);}else{charset=this.parseCharsets(topDict.getByName('charset'),charStringIndex.count,cff.strings,false);encoding=this.parseEncoding(topDict.getByName('Encoding'),properties,cff.strings,charset.charset);}cff.charset=charset;cff.encoding=encoding;var charStringsAndSeacs=this.parseCharStrings({charStrings:charStringIndex,localSubrIndex:topDict.privateDict.subrsIndex,globalSubrIndex:globalSubrIndex.obj,fdSelect:cff.fdSelect,fdArray:cff.fdArray,privateDict:topDict.privateDict});cff.charStrings=charStringsAndSeacs.charStrings;cff.seacs=charStringsAndSeacs.seacs;cff.widths=charStringsAndSeacs.widths;return cff;},parseHeader:function CFFParser_parseHeader(){var bytes=this.bytes;var bytesLength=bytes.length;var offset=0;while(offset<bytesLength&&bytes[offset]!==1){++offset;}if(offset>=bytesLength){throw new _util.FormatError('Invalid CFF header');}if(offset!==0){(0,_util.info)('cff data is shifted');bytes=bytes.subarray(offset);this.bytes=bytes;}var major=bytes[0];var minor=bytes[1];var hdrSize=bytes[2];var offSize=bytes[3];var header=new CFFHeader(major,minor,hdrSize,offSize);return{obj:header,endPos:hdrSize};},parseDict:function CFFParser_parseDict(dict){var pos=0;function parseOperand(){var value=dict[pos++];if(value===30){return parseFloatOperand();}else if(value===28){value=dict[pos++];value=(value<<24|dict[pos++]<<16)>>16;return value;}else if(value===29){value=dict[pos++];value=value<<8|dict[pos++];value=value<<8|dict[pos++];value=value<<8|dict[pos++];return value;}else if(value>=32&&value<=246){return value-139;}else if(value>=247&&value<=250){return(value-247)*256+dict[pos++]+108;}else if(value>=251&&value<=254){return-((value-251)*256)-dict[pos++]-108;}(0,_util.warn)('CFFParser_parseDict: "'+value+'" is a reserved command.');return NaN;}function parseFloatOperand(){var str='';var eof=15;var lookup=['0','1','2','3','4','5','6','7','8','9','.','E','E-',null,'-'];var length=dict.length;while(pos<length){var b=dict[pos++];var b1=b>>4;var b2=b&15;if(b1===eof){break;}str+=lookup[b1];if(b2===eof){break;}str+=lookup[b2];}return parseFloat(str);}var operands=[];var entries=[];pos=0;var end=dict.length;while(pos<end){var b=dict[pos];if(b<=21){if(b===12){b=b<<8|dict[++pos];}entries.push([b,operands]);operands=[];++pos;}else{operands.push(parseOperand());}}return entries;},parseIndex:function CFFParser_parseIndex(pos){var cffIndex=new CFFIndex();var bytes=this.bytes;var count=bytes[pos++]<<8|bytes[pos++];var offsets=[];var end=pos;var i,ii;if(count!==0){var offsetSize=bytes[pos++];var startPos=pos+(count+1)*offsetSize-1;for(i=0,ii=count+1;i<ii;++i){var offset=0;for(var j=0;j<offsetSize;++j){offset<<=8;offset+=bytes[pos++];}offsets.push(startPos+offset);}end=offsets[count];}for(i=0,ii=offsets.length-1;i<ii;++i){var offsetStart=offsets[i];var offsetEnd=offsets[i+1];cffIndex.add(bytes.subarray(offsetStart,offsetEnd));}return{obj:cffIndex,endPos:end};},parseNameIndex:function CFFParser_parseNameIndex(index){var names=[];for(var i=0,ii=index.count;i<ii;++i){var name=index.get(i);names.push((0,_util.bytesToString)(name));}return names;},parseStringIndex:function CFFParser_parseStringIndex(index){var strings=new CFFStrings();for(var i=0,ii=index.count;i<ii;++i){var data=index.get(i);strings.add((0,_util.bytesToString)(data));}return strings;},createDict:function CFFParser_createDict(Type,dict,strings){var cffDict=new Type(strings);for(var i=0,ii=dict.length;i<ii;++i){var pair=dict[i];var key=pair[0];var value=pair[1];cffDict.setByKey(key,value);}return cffDict;},parseCharString:function CFFParser_parseCharString(state,data,localSubrIndex,globalSubrIndex){if(!data||state.callDepth>MAX_SUBR_NESTING){return false;}var stackSize=state.stackSize;var stack=state.stack;var length=data.length;for(var j=0;j<length;){var value=data[j++];var validationCommand=null;if(value===12){var q=data[j++];if(q===0){data[j-2]=139;data[j-1]=22;stackSize=0;}else{validationCommand=CharstringValidationData12[q];}}else if(value===28){stack[stackSize]=(data[j]<<24|data[j+1]<<16)>>16;j+=2;stackSize++;}else if(value===14){if(stackSize>=4){stackSize-=4;if(this.seacAnalysisEnabled){state.seac=stack.slice(stackSize,stackSize+4);return false;}}validationCommand=CharstringValidationData[value];}else if(value>=32&&value<=246){stack[stackSize]=value-139;stackSize++;}else if(value>=247&&value<=254){stack[stackSize]=value<251?(value-247<<8)+data[j]+108:-(value-251<<8)-data[j]-108;j++;stackSize++;}else if(value===255){stack[stackSize]=(data[j]<<24|data[j+1]<<16|data[j+2]<<8|data[j+3])/65536;j+=4;stackSize++;}else if(value===19||value===20){state.hints+=stackSize>>1;j+=state.hints+7>>3;stackSize%=2;validationCommand=CharstringValidationData[value];}else if(value===10||value===29){var subrsIndex;if(value===10){subrsIndex=localSubrIndex;}else{subrsIndex=globalSubrIndex;}if(!subrsIndex){validationCommand=CharstringValidationData[value];(0,_util.warn)('Missing subrsIndex for '+validationCommand.id);return false;}var bias=32768;if(subrsIndex.count<1240){bias=107;}else if(subrsIndex.count<33900){bias=1131;}var subrNumber=stack[--stackSize]+bias;if(subrNumber<0||subrNumber>=subrsIndex.count||isNaN(subrNumber)){validationCommand=CharstringValidationData[value];(0,_util.warn)('Out of bounds subrIndex for '+validationCommand.id);return false;}state.stackSize=stackSize;state.callDepth++;var valid=this.parseCharString(state,subrsIndex.get(subrNumber),localSubrIndex,globalSubrIndex);if(!valid){return false;}state.callDepth--;stackSize=state.stackSize;continue;}else if(value===11){state.stackSize=stackSize;return true;}else{validationCommand=CharstringValidationData[value];}if(validationCommand){if(validationCommand.stem){state.hints+=stackSize>>1;}if('min'in validationCommand){if(!state.undefStack&&stackSize<validationCommand.min){(0,_util.warn)('Not enough parameters for '+validationCommand.id+'; actual: '+stackSize+', expected: '+validationCommand.min);return false;}}if(state.firstStackClearing&&validationCommand.stackClearing){state.firstStackClearing=false;stackSize-=validationCommand.min;if(stackSize>=2&&validationCommand.stem){stackSize%=2;}else if(stackSize>1){(0,_util.warn)('Found too many parameters for stack-clearing command');}if(stackSize>0&&stack[stackSize-1]>=0){state.width=stack[stackSize-1];}}if('stackDelta'in validationCommand){if('stackFn'in validationCommand){validationCommand.stackFn(stack,stackSize);}stackSize+=validationCommand.stackDelta;}else if(validationCommand.stackClearing){stackSize=0;}else if(validationCommand.resetStack){stackSize=0;state.undefStack=false;}else if(validationCommand.undefStack){stackSize=0;state.undefStack=true;state.firstStackClearing=false;}}}state.stackSize=stackSize;return true;},parseCharStrings:function parseCharStrings(_ref){var charStrings=_ref.charStrings,localSubrIndex=_ref.localSubrIndex,globalSubrIndex=_ref.globalSubrIndex,fdSelect=_ref.fdSelect,fdArray=_ref.fdArray,privateDict=_ref.privateDict;var seacs=[];var widths=[];var count=charStrings.count;for(var i=0;i<count;i++){var charstring=charStrings.get(i);var state={callDepth:0,stackSize:0,stack:[],undefStack:true,hints:0,firstStackClearing:true,seac:null,width:null};var valid=true;var localSubrToUse=null;var privateDictToUse=privateDict;if(fdSelect&&fdArray.length){var fdIndex=fdSelect.getFDIndex(i);if(fdIndex===-1){(0,_util.warn)('Glyph index is not in fd select.');valid=false;}if(fdIndex>=fdArray.length){(0,_util.warn)('Invalid fd index for glyph index.');valid=false;}if(valid){privateDictToUse=fdArray[fdIndex].privateDict;localSubrToUse=privateDictToUse.subrsIndex;}}else if(localSubrIndex){localSubrToUse=localSubrIndex;}if(valid){valid=this.parseCharString(state,charstring,localSubrToUse,globalSubrIndex);}if(state.width!==null){var nominalWidth=privateDictToUse.getByName('nominalWidthX');widths[i]=nominalWidth+state.width;}else{var defaultWidth=privateDictToUse.getByName('defaultWidthX');widths[i]=defaultWidth;}if(state.seac!==null){seacs[i]=state.seac;}if(!valid){charStrings.set(i,new Uint8Array([14]));}}return{charStrings:charStrings,seacs:seacs,widths:widths};},emptyPrivateDictionary:function CFFParser_emptyPrivateDictionary(parentDict){var privateDict=this.createDict(CFFPrivateDict,[],parentDict.strings);parentDict.setByKey(18,[0,0]);parentDict.privateDict=privateDict;},parsePrivateDict:function CFFParser_parsePrivateDict(parentDict){if(!parentDict.hasName('Private')){this.emptyPrivateDictionary(parentDict);return;}var privateOffset=parentDict.getByName('Private');if(!Array.isArray(privateOffset)||privateOffset.length!==2){parentDict.removeByName('Private');return;}var size=privateOffset[0];var offset=privateOffset[1];if(size===0||offset>=this.bytes.length){this.emptyPrivateDictionary(parentDict);return;}var privateDictEnd=offset+size;var dictData=this.bytes.subarray(offset,privateDictEnd);var dict=this.parseDict(dictData);var privateDict=this.createDict(CFFPrivateDict,dict,parentDict.strings);parentDict.privateDict=privateDict;if(!privateDict.getByName('Subrs')){return;}var subrsOffset=privateDict.getByName('Subrs');var relativeOffset=offset+subrsOffset;if(subrsOffset===0||relativeOffset>=this.bytes.length){this.emptyPrivateDictionary(parentDict);return;}var subrsIndex=this.parseIndex(relativeOffset);privateDict.subrsIndex=subrsIndex.obj;},parseCharsets:function CFFParser_parseCharsets(pos,length,strings,cid){if(pos===0){return new CFFCharset(true,CFFCharsetPredefinedTypes.ISO_ADOBE,_charsets.ISOAdobeCharset);}else if(pos===1){return new CFFCharset(true,CFFCharsetPredefinedTypes.EXPERT,_charsets.ExpertCharset);}else if(pos===2){return new CFFCharset(true,CFFCharsetPredefinedTypes.EXPERT_SUBSET,_charsets.ExpertSubsetCharset);}var bytes=this.bytes;var start=pos;var format=bytes[pos++];var charset=['.notdef'];var id,count,i;length-=1;switch(format){case 0:for(i=0;i<length;i++){id=bytes[pos++]<<8|bytes[pos++];charset.push(cid?id:strings.get(id));}break;case 1:while(charset.length<=length){id=bytes[pos++]<<8|bytes[pos++];count=bytes[pos++];for(i=0;i<=count;i++){charset.push(cid?id++:strings.get(id++));}}break;case 2:while(charset.length<=length){id=bytes[pos++]<<8|bytes[pos++];count=bytes[pos++]<<8|bytes[pos++];for(i=0;i<=count;i++){charset.push(cid?id++:strings.get(id++));}}break;default:throw new _util.FormatError('Unknown charset format');}var end=pos;var raw=bytes.subarray(start,end);return new CFFCharset(false,format,charset,raw);},parseEncoding:function CFFParser_parseEncoding(pos,properties,strings,charset){var encoding=Object.create(null);var bytes=this.bytes;var predefined=false;var format,i,ii;var raw=null;function readSupplement(){var supplementsCount=bytes[pos++];for(i=0;i<supplementsCount;i++){var code=bytes[pos++];var sid=(bytes[pos++]<<8)+(bytes[pos++]&0xff);encoding[code]=charset.indexOf(strings.get(sid));}}if(pos===0||pos===1){predefined=true;format=pos;var baseEncoding=pos?_encodings.ExpertEncoding:_encodings.StandardEncoding;for(i=0,ii=charset.length;i<ii;i++){var index=baseEncoding.indexOf(charset[i]);if(index!==-1){encoding[index]=i;}}}else{var dataStart=pos;format=bytes[pos++];switch(format&0x7f){case 0:var glyphsCount=bytes[pos++];for(i=1;i<=glyphsCount;i++){encoding[bytes[pos++]]=i;}break;case 1:var rangesCount=bytes[pos++];var gid=1;for(i=0;i<rangesCount;i++){var start=bytes[pos++];var left=bytes[pos++];for(var j=start;j<=start+left;j++){encoding[j]=gid++;}}break;default:throw new _util.FormatError('Unknown encoding format: '+format+' in CFF');}var dataEnd=pos;if(format&0x80){bytes[dataStart]&=0x7f;readSupplement();}raw=bytes.subarray(dataStart,dataEnd);}format=format&0x7f;return new CFFEncoding(predefined,format,encoding,raw);},parseFDSelect:function CFFParser_parseFDSelect(pos,length){var bytes=this.bytes;var format=bytes[pos++];var fdSelect=[];var i;switch(format){case 0:for(i=0;i<length;++i){var id=bytes[pos++];fdSelect.push(id);}break;case 3:var rangesCount=bytes[pos++]<<8|bytes[pos++];for(i=0;i<rangesCount;++i){var first=bytes[pos++]<<8|bytes[pos++];if(i===0&&first!==0){(0,_util.warn)('parseFDSelect: The first range must have a first GID of 0'+' -- trying to recover.');first=0;}var fdIndex=bytes[pos++];var next=bytes[pos]<<8|bytes[pos+1];for(var j=first;j<next;++j){fdSelect.push(fdIndex);}}pos+=2;break;default:throw new _util.FormatError('parseFDSelect: Unknown format "'+format+'".');}if(fdSelect.length!==length){throw new _util.FormatError('parseFDSelect: Invalid font data.');}return new CFFFDSelect(format,fdSelect);}};return CFFParser;}();var CFF=function CFFClosure(){function CFF(){this.header=null;this.names=[];this.topDict=null;this.strings=new CFFStrings();this.globalSubrIndex=null;this.encoding=null;this.charset=null;this.charStrings=null;this.fdArray=[];this.fdSelect=null;this.isCIDFont=false;}CFF.prototype={duplicateFirstGlyph:function CFF_duplicateFirstGlyph(){if(this.charStrings.count>=65535){(0,_util.warn)('Not enough space in charstrings to duplicate first glyph.');return;}var glyphZero=this.charStrings.get(0);this.charStrings.add(glyphZero);if(this.isCIDFont){this.fdSelect.fdSelect.push(this.fdSelect.fdSelect[0]);}},hasGlyphId:function CFF_hasGlyphID(id){if(id<0||id>=this.charStrings.count){return false;}var glyph=this.charStrings.get(id);return glyph.length>0;}};return CFF;}();var CFFHeader=function CFFHeaderClosure(){function CFFHeader(major,minor,hdrSize,offSize){this.major=major;this.minor=minor;this.hdrSize=hdrSize;this.offSize=offSize;}return CFFHeader;}();var CFFStrings=function CFFStringsClosure(){function CFFStrings(){this.strings=[];}CFFStrings.prototype={get:function CFFStrings_get(index){if(index>=0&&index<=390){return CFFStandardStrings[index];}if(index-391<=this.strings.length){return this.strings[index-391];}return CFFStandardStrings[0];},add:function CFFStrings_add(value){this.strings.push(value);},get count(){return this.strings.length;}};return CFFStrings;}();var CFFIndex=function CFFIndexClosure(){function CFFIndex(){this.objects=[];this.length=0;}CFFIndex.prototype={add:function CFFIndex_add(data){this.length+=data.length;this.objects.push(data);},set:function CFFIndex_set(index,data){this.length+=data.length-this.objects[index].length;this.objects[index]=data;},get:function CFFIndex_get(index){return this.objects[index];},get count(){return this.objects.length;}};return CFFIndex;}();var CFFDict=function CFFDictClosure(){function CFFDict(tables,strings){this.keyToNameMap=tables.keyToNameMap;this.nameToKeyMap=tables.nameToKeyMap;this.defaults=tables.defaults;this.types=tables.types;this.opcodes=tables.opcodes;this.order=tables.order;this.strings=strings;this.values=Object.create(null);}CFFDict.prototype={setByKey:function CFFDict_setByKey(key,value){if(!(key in this.keyToNameMap)){return false;}var valueLength=value.length;if(valueLength===0){return true;}for(var i=0;i<valueLength;i++){if(isNaN(value[i])){(0,_util.warn)('Invalid CFFDict value: "'+value+'" for key "'+key+'".');return true;}}var type=this.types[key];if(type==='num'||type==='sid'||type==='offset'){value=value[0];}this.values[key]=value;return true;},setByName:function CFFDict_setByName(name,value){if(!(name in this.nameToKeyMap)){throw new _util.FormatError('Invalid dictionary name "'+name+'"');}this.values[this.nameToKeyMap[name]]=value;},hasName:function CFFDict_hasName(name){return this.nameToKeyMap[name]in this.values;},getByName:function CFFDict_getByName(name){if(!(name in this.nameToKeyMap)){throw new _util.FormatError('Invalid dictionary name '+name+'"');}var key=this.nameToKeyMap[name];if(!(key in this.values)){return this.defaults[key];}return this.values[key];},removeByName:function CFFDict_removeByName(name){delete this.values[this.nameToKeyMap[name]];}};CFFDict.createTables=function CFFDict_createTables(layout){var tables={keyToNameMap:{},nameToKeyMap:{},defaults:{},types:{},opcodes:{},order:[]};for(var i=0,ii=layout.length;i<ii;++i){var entry=layout[i];var key=Array.isArray(entry[0])?(entry[0][0]<<8)+entry[0][1]:entry[0];tables.keyToNameMap[key]=entry[1];tables.nameToKeyMap[entry[1]]=key;tables.types[key]=entry[2];tables.defaults[key]=entry[3];tables.opcodes[key]=Array.isArray(entry[0])?entry[0]:[entry[0]];tables.order.push(key);}return tables;};return CFFDict;}();var CFFTopDict=function CFFTopDictClosure(){var layout=[[[12,30],'ROS',['sid','sid','num'],null],[[12,20],'SyntheticBase','num',null],[0,'version','sid',null],[1,'Notice','sid',null],[[12,0],'Copyright','sid',null],[2,'FullName','sid',null],[3,'FamilyName','sid',null],[4,'Weight','sid',null],[[12,1],'isFixedPitch','num',0],[[12,2],'ItalicAngle','num',0],[[12,3],'UnderlinePosition','num',-100],[[12,4],'UnderlineThickness','num',50],[[12,5],'PaintType','num',0],[[12,6],'CharstringType','num',2],[[12,7],'FontMatrix',['num','num','num','num','num','num'],[0.001,0,0,0.001,0,0]],[13,'UniqueID','num',null],[5,'FontBBox',['num','num','num','num'],[0,0,0,0]],[[12,8],'StrokeWidth','num',0],[14,'XUID','array',null],[15,'charset','offset',0],[16,'Encoding','offset',0],[17,'CharStrings','offset',0],[18,'Private',['offset','offset'],null],[[12,21],'PostScript','sid',null],[[12,22],'BaseFontName','sid',null],[[12,23],'BaseFontBlend','delta',null],[[12,31],'CIDFontVersion','num',0],[[12,32],'CIDFontRevision','num',0],[[12,33],'CIDFontType','num',0],[[12,34],'CIDCount','num',8720],[[12,35],'UIDBase','num',null],[[12,37],'FDSelect','offset',null],[[12,36],'FDArray','offset',null],[[12,38],'FontName','sid',null]];var tables=null;function CFFTopDict(strings){if(tables===null){tables=CFFDict.createTables(layout);}CFFDict.call(this,tables,strings);this.privateDict=null;}CFFTopDict.prototype=Object.create(CFFDict.prototype);return CFFTopDict;}();var CFFPrivateDict=function CFFPrivateDictClosure(){var layout=[[6,'BlueValues','delta',null],[7,'OtherBlues','delta',null],[8,'FamilyBlues','delta',null],[9,'FamilyOtherBlues','delta',null],[[12,9],'BlueScale','num',0.039625],[[12,10],'BlueShift','num',7],[[12,11],'BlueFuzz','num',1],[10,'StdHW','num',null],[11,'StdVW','num',null],[[12,12],'StemSnapH','delta',null],[[12,13],'StemSnapV','delta',null],[[12,14],'ForceBold','num',0],[[12,17],'LanguageGroup','num',0],[[12,18],'ExpansionFactor','num',0.06],[[12,19],'initialRandomSeed','num',0],[20,'defaultWidthX','num',0],[21,'nominalWidthX','num',0],[19,'Subrs','offset',null]];var tables=null;function CFFPrivateDict(strings){if(tables===null){tables=CFFDict.createTables(layout);}CFFDict.call(this,tables,strings);this.subrsIndex=null;}CFFPrivateDict.prototype=Object.create(CFFDict.prototype);return CFFPrivateDict;}();var CFFCharsetPredefinedTypes={ISO_ADOBE:0,EXPERT:1,EXPERT_SUBSET:2};var CFFCharset=function CFFCharsetClosure(){function CFFCharset(predefined,format,charset,raw){this.predefined=predefined;this.format=format;this.charset=charset;this.raw=raw;}return CFFCharset;}();var CFFEncoding=function CFFEncodingClosure(){function CFFEncoding(predefined,format,encoding,raw){this.predefined=predefined;this.format=format;this.encoding=encoding;this.raw=raw;}return CFFEncoding;}();var CFFFDSelect=function CFFFDSelectClosure(){function CFFFDSelect(format,fdSelect){this.format=format;this.fdSelect=fdSelect;}CFFFDSelect.prototype={getFDIndex:function CFFFDSelect_get(glyphIndex){if(glyphIndex<0||glyphIndex>=this.fdSelect.length){return-1;}return this.fdSelect[glyphIndex];}};return CFFFDSelect;}();var CFFOffsetTracker=function CFFOffsetTrackerClosure(){function CFFOffsetTracker(){this.offsets=Object.create(null);}CFFOffsetTracker.prototype={isTracking:function CFFOffsetTracker_isTracking(key){return key in this.offsets;},track:function CFFOffsetTracker_track(key,location){if(key in this.offsets){throw new _util.FormatError('Already tracking location of '+key);}this.offsets[key]=location;},offset:function CFFOffsetTracker_offset(value){for(var key in this.offsets){this.offsets[key]+=value;}},setEntryLocation:function CFFOffsetTracker_setEntryLocation(key,values,output){if(!(key in this.offsets)){throw new _util.FormatError('Not tracking location of '+key);}var data=output.data;var dataOffset=this.offsets[key];var size=5;for(var i=0,ii=values.length;i<ii;++i){var offset0=i*size+dataOffset;var offset1=offset0+1;var offset2=offset0+2;var offset3=offset0+3;var offset4=offset0+4;if(data[offset0]!==0x1d||data[offset1]!==0||data[offset2]!==0||data[offset3]!==0||data[offset4]!==0){throw new _util.FormatError('writing to an offset that is not empty');}var value=values[i];data[offset0]=0x1d;data[offset1]=value>>24&0xFF;data[offset2]=value>>16&0xFF;data[offset3]=value>>8&0xFF;data[offset4]=value&0xFF;}}};return CFFOffsetTracker;}();var CFFCompiler=function CFFCompilerClosure(){function CFFCompiler(cff){this.cff=cff;}CFFCompiler.prototype={compile:function CFFCompiler_compile(){var cff=this.cff;var output={data:[],length:0,add:function CFFCompiler_add(data){this.data=this.data.concat(data);this.length=this.data.length;}};var header=this.compileHeader(cff.header);output.add(header);var nameIndex=this.compileNameIndex(cff.names);output.add(nameIndex);if(cff.isCIDFont){if(cff.topDict.hasName('FontMatrix')){var base=cff.topDict.getByName('FontMatrix');cff.topDict.removeByName('FontMatrix');for(var i=0,ii=cff.fdArray.length;i<ii;i++){var subDict=cff.fdArray[i];var matrix=base.slice(0);if(subDict.hasName('FontMatrix')){matrix=_util.Util.transform(matrix,subDict.getByName('FontMatrix'));}subDict.setByName('FontMatrix',matrix);}}}cff.topDict.setByName('charset',0);var compiled=this.compileTopDicts([cff.topDict],output.length,cff.isCIDFont);output.add(compiled.output);var topDictTracker=compiled.trackers[0];var stringIndex=this.compileStringIndex(cff.strings.strings);output.add(stringIndex);var globalSubrIndex=this.compileIndex(cff.globalSubrIndex);output.add(globalSubrIndex);if(cff.encoding&&cff.topDict.hasName('Encoding')){if(cff.encoding.predefined){topDictTracker.setEntryLocation('Encoding',[cff.encoding.format],output);}else{var encoding=this.compileEncoding(cff.encoding);topDictTracker.setEntryLocation('Encoding',[output.length],output);output.add(encoding);}}var charset=this.compileCharset(cff.charset);topDictTracker.setEntryLocation('charset',[output.length],output);output.add(charset);var charStrings=this.compileCharStrings(cff.charStrings);topDictTracker.setEntryLocation('CharStrings',[output.length],output);output.add(charStrings);if(cff.isCIDFont){topDictTracker.setEntryLocation('FDSelect',[output.length],output);var fdSelect=this.compileFDSelect(cff.fdSelect);output.add(fdSelect);compiled=this.compileTopDicts(cff.fdArray,output.length,true);topDictTracker.setEntryLocation('FDArray',[output.length],output);output.add(compiled.output);var fontDictTrackers=compiled.trackers;this.compilePrivateDicts(cff.fdArray,fontDictTrackers,output);}this.compilePrivateDicts([cff.topDict],[topDictTracker],output);output.add([0]);return output.data;},encodeNumber:function CFFCompiler_encodeNumber(value){if(parseFloat(value)===parseInt(value,10)&&!isNaN(value)){return this.encodeInteger(value);}return this.encodeFloat(value);},encodeFloat:function CFFCompiler_encodeFloat(num){var value=num.toString();var m=/\.(\d*?)(?:9{5,20}|0{5,20})\d{0,2}(?:e(.+)|$)/.exec(value);if(m){var epsilon=parseFloat('1e'+((m[2]?+m[2]:0)+m[1].length));value=(Math.round(num*epsilon)/epsilon).toString();}var nibbles='';var i,ii;for(i=0,ii=value.length;i<ii;++i){var a=value[i];if(a==='e'){nibbles+=value[++i]==='-'?'c':'b';}else if(a==='.'){nibbles+='a';}else if(a==='-'){nibbles+='e';}else{nibbles+=a;}}nibbles+=nibbles.length&1?'f':'ff';var out=[30];for(i=0,ii=nibbles.length;i<ii;i+=2){out.push(parseInt(nibbles.substring(i,i+2),16));}return out;},encodeInteger:function CFFCompiler_encodeInteger(value){var code;if(value>=-107&&value<=107){code=[value+139];}else if(value>=108&&value<=1131){value=value-108;code=[(value>>8)+247,value&0xFF];}else if(value>=-1131&&value<=-108){value=-value-108;code=[(value>>8)+251,value&0xFF];}else if(value>=-32768&&value<=32767){code=[0x1c,value>>8&0xFF,value&0xFF];}else{code=[0x1d,value>>24&0xFF,value>>16&0xFF,value>>8&0xFF,value&0xFF];}return code;},compileHeader:function CFFCompiler_compileHeader(header){return[header.major,header.minor,header.hdrSize,header.offSize];},compileNameIndex:function CFFCompiler_compileNameIndex(names){var nameIndex=new CFFIndex();for(var i=0,ii=names.length;i<ii;++i){var name=names[i];var length=Math.min(name.length,127);var sanitizedName=new Array(length);for(var j=0;j<length;j++){var char=name[j];if(char<'!'||char>'~'||char==='['||char===']'||char==='('||char===')'||char==='{'||char==='}'||char==='<'||char==='>'||char==='/'||char==='%'){char='_';}sanitizedName[j]=char;}sanitizedName=sanitizedName.join('');if(sanitizedName===''){sanitizedName='Bad_Font_Name';}nameIndex.add((0,_util.stringToBytes)(sanitizedName));}return this.compileIndex(nameIndex);},compileTopDicts:function CFFCompiler_compileTopDicts(dicts,length,removeCidKeys){var fontDictTrackers=[];var fdArrayIndex=new CFFIndex();for(var i=0,ii=dicts.length;i<ii;++i){var fontDict=dicts[i];if(removeCidKeys){fontDict.removeByName('CIDFontVersion');fontDict.removeByName('CIDFontRevision');fontDict.removeByName('CIDFontType');fontDict.removeByName('CIDCount');fontDict.removeByName('UIDBase');}var fontDictTracker=new CFFOffsetTracker();var fontDictData=this.compileDict(fontDict,fontDictTracker);fontDictTrackers.push(fontDictTracker);fdArrayIndex.add(fontDictData);fontDictTracker.offset(length);}fdArrayIndex=this.compileIndex(fdArrayIndex,fontDictTrackers);return{trackers:fontDictTrackers,output:fdArrayIndex};},compilePrivateDicts:function CFFCompiler_compilePrivateDicts(dicts,trackers,output){for(var i=0,ii=dicts.length;i<ii;++i){var fontDict=dicts[i];var privateDict=fontDict.privateDict;if(!privateDict||!fontDict.hasName('Private')){throw new _util.FormatError('There must be a private dictionary.');}var privateDictTracker=new CFFOffsetTracker();var privateDictData=this.compileDict(privateDict,privateDictTracker);var outputLength=output.length;privateDictTracker.offset(outputLength);if(!privateDictData.length){outputLength=0;}trackers[i].setEntryLocation('Private',[privateDictData.length,outputLength],output);output.add(privateDictData);if(privateDict.subrsIndex&&privateDict.hasName('Subrs')){var subrs=this.compileIndex(privateDict.subrsIndex);privateDictTracker.setEntryLocation('Subrs',[privateDictData.length],output);output.add(subrs);}}},compileDict:function CFFCompiler_compileDict(dict,offsetTracker){var out=[];var order=dict.order;for(var i=0;i<order.length;++i){var key=order[i];if(!(key in dict.values)){continue;}var values=dict.values[key];var types=dict.types[key];if(!Array.isArray(types)){types=[types];}if(!Array.isArray(values)){values=[values];}if(values.length===0){continue;}for(var j=0,jj=types.length;j<jj;++j){var type=types[j];var value=values[j];switch(type){case'num':case'sid':out=out.concat(this.encodeNumber(value));break;case'offset':var name=dict.keyToNameMap[key];if(!offsetTracker.isTracking(name)){offsetTracker.track(name,out.length);}out=out.concat([0x1d,0,0,0,0]);break;case'array':case'delta':out=out.concat(this.encodeNumber(value));for(var k=1,kk=values.length;k<kk;++k){out=out.concat(this.encodeNumber(values[k]));}break;default:throw new _util.FormatError('Unknown data type of '+type);}}out=out.concat(dict.opcodes[key]);}return out;},compileStringIndex:function CFFCompiler_compileStringIndex(strings){var stringIndex=new CFFIndex();for(var i=0,ii=strings.length;i<ii;++i){stringIndex.add((0,_util.stringToBytes)(strings[i]));}return this.compileIndex(stringIndex);},compileGlobalSubrIndex:function CFFCompiler_compileGlobalSubrIndex(){var globalSubrIndex=this.cff.globalSubrIndex;this.out.writeByteArray(this.compileIndex(globalSubrIndex));},compileCharStrings:function CFFCompiler_compileCharStrings(charStrings){var charStringsIndex=new CFFIndex();for(var i=0;i<charStrings.count;i++){var glyph=charStrings.get(i);if(glyph.length===0){charStringsIndex.add(new Uint8Array([0x8B,0x0E]));continue;}charStringsIndex.add(glyph);}return this.compileIndex(charStringsIndex);},compileCharset:function CFFCompiler_compileCharset(charset){var length=1+(this.cff.charStrings.count-1)*2;var out=new Uint8Array(length);return this.compileTypedArray(out);},compileEncoding:function CFFCompiler_compileEncoding(encoding){return this.compileTypedArray(encoding.raw);},compileFDSelect:function CFFCompiler_compileFDSelect(fdSelect){var format=fdSelect.format;var out=void 0,i=void 0;switch(format){case 0:out=new Uint8Array(1+fdSelect.fdSelect.length);out[0]=format;for(i=0;i<fdSelect.fdSelect.length;i++){out[i+1]=fdSelect.fdSelect[i];}break;case 3:var start=0;var lastFD=fdSelect.fdSelect[0];var ranges=[format,0,0,start>>8&0xFF,start&0xFF,lastFD];for(i=1;i<fdSelect.fdSelect.length;i++){var currentFD=fdSelect.fdSelect[i];if(currentFD!==lastFD){ranges.push(i>>8&0xFF,i&0xFF,currentFD);lastFD=currentFD;}}var numRanges=(ranges.length-3)/3;ranges[1]=numRanges>>8&0xFF;ranges[2]=numRanges&0xFF;ranges.push(i>>8&0xFF,i&0xFF);out=new Uint8Array(ranges);break;}return this.compileTypedArray(out);},compileTypedArray:function CFFCompiler_compileTypedArray(data){var out=[];for(var i=0,ii=data.length;i<ii;++i){out[i]=data[i];}return out;},compileIndex:function CFFCompiler_compileIndex(index,trackers){trackers=trackers||[];var objects=index.objects;var count=objects.length;if(count===0){return[0,0,0];}var data=[count>>8&0xFF,count&0xff];var lastOffset=1,i;for(i=0;i<count;++i){lastOffset+=objects[i].length;}var offsetSize;if(lastOffset<0x100){offsetSize=1;}else if(lastOffset<0x10000){offsetSize=2;}else if(lastOffset<0x1000000){offsetSize=3;}else{offsetSize=4;}data.push(offsetSize);var relativeOffset=1;for(i=0;i<count+1;i++){if(offsetSize===1){data.push(relativeOffset&0xFF);}else if(offsetSize===2){data.push(relativeOffset>>8&0xFF,relativeOffset&0xFF);}else if(offsetSize===3){data.push(relativeOffset>>16&0xFF,relativeOffset>>8&0xFF,relativeOffset&0xFF);}else{data.push(relativeOffset>>>24&0xFF,relativeOffset>>16&0xFF,relativeOffset>>8&0xFF,relativeOffset&0xFF);}if(objects[i]){relativeOffset+=objects[i].length;}}for(i=0;i<count;i++){if(trackers[i]){trackers[i].offset(data.length);}for(var j=0,jj=objects[i].length;j<jj;j++){data.push(objects[i][j]);}}return data;}};return CFFCompiler;}();exports.CFFStandardStrings=CFFStandardStrings;exports.CFFParser=CFFParser;exports.CFF=CFF;exports.CFFHeader=CFFHeader;exports.CFFStrings=CFFStrings;exports.CFFIndex=CFFIndex;exports.CFFCharset=CFFCharset;exports.CFFTopDict=CFFTopDict;exports.CFFPrivateDict=CFFPrivateDict;exports.CFFCompiler=CFFCompiler;exports.CFFFDSelect=CFFFDSelect;/***/},/* 158 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var ISOAdobeCharset=['.notdef','space','exclam','quotedbl','numbersign','dollar','percent','ampersand','quoteright','parenleft','parenright','asterisk','plus','comma','hyphen','period','slash','zero','one','two','three','four','five','six','seven','eight','nine','colon','semicolon','less','equal','greater','question','at','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','bracketleft','backslash','bracketright','asciicircum','underscore','quoteleft','a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','braceleft','bar','braceright','asciitilde','exclamdown','cent','sterling','fraction','yen','florin','section','currency','quotesingle','quotedblleft','guillemotleft','guilsinglleft','guilsinglright','fi','fl','endash','dagger','daggerdbl','periodcentered','paragraph','bullet','quotesinglbase','quotedblbase','quotedblright','guillemotright','ellipsis','perthousand','questiondown','grave','acute','circumflex','tilde','macron','breve','dotaccent','dieresis','ring','cedilla','hungarumlaut','ogonek','caron','emdash','AE','ordfeminine','Lslash','Oslash','OE','ordmasculine','ae','dotlessi','lslash','oslash','oe','germandbls','onesuperior','logicalnot','mu','trademark','Eth','onehalf','plusminus','Thorn','onequarter','divide','brokenbar','degree','thorn','threequarters','twosuperior','registered','minus','eth','multiply','threesuperior','copyright','Aacute','Acircumflex','Adieresis','Agrave','Aring','Atilde','Ccedilla','Eacute','Ecircumflex','Edieresis','Egrave','Iacute','Icircumflex','Idieresis','Igrave','Ntilde','Oacute','Ocircumflex','Odieresis','Ograve','Otilde','Scaron','Uacute','Ucircumflex','Udieresis','Ugrave','Yacute','Ydieresis','Zcaron','aacute','acircumflex','adieresis','agrave','aring','atilde','ccedilla','eacute','ecircumflex','edieresis','egrave','iacute','icircumflex','idieresis','igrave','ntilde','oacute','ocircumflex','odieresis','ograve','otilde','scaron','uacute','ucircumflex','udieresis','ugrave','yacute','ydieresis','zcaron'];var ExpertCharset=['.notdef','space','exclamsmall','Hungarumlautsmall','dollaroldstyle','dollarsuperior','ampersandsmall','Acutesmall','parenleftsuperior','parenrightsuperior','twodotenleader','onedotenleader','comma','hyphen','period','fraction','zerooldstyle','oneoldstyle','twooldstyle','threeoldstyle','fouroldstyle','fiveoldstyle','sixoldstyle','sevenoldstyle','eightoldstyle','nineoldstyle','colon','semicolon','commasuperior','threequartersemdash','periodsuperior','questionsmall','asuperior','bsuperior','centsuperior','dsuperior','esuperior','isuperior','lsuperior','msuperior','nsuperior','osuperior','rsuperior','ssuperior','tsuperior','ff','fi','fl','ffi','ffl','parenleftinferior','parenrightinferior','Circumflexsmall','hyphensuperior','Gravesmall','Asmall','Bsmall','Csmall','Dsmall','Esmall','Fsmall','Gsmall','Hsmall','Ismall','Jsmall','Ksmall','Lsmall','Msmall','Nsmall','Osmall','Psmall','Qsmall','Rsmall','Ssmall','Tsmall','Usmall','Vsmall','Wsmall','Xsmall','Ysmall','Zsmall','colonmonetary','onefitted','rupiah','Tildesmall','exclamdownsmall','centoldstyle','Lslashsmall','Scaronsmall','Zcaronsmall','Dieresissmall','Brevesmall','Caronsmall','Dotaccentsmall','Macronsmall','figuredash','hypheninferior','Ogoneksmall','Ringsmall','Cedillasmall','onequarter','onehalf','threequarters','questiondownsmall','oneeighth','threeeighths','fiveeighths','seveneighths','onethird','twothirds','zerosuperior','onesuperior','twosuperior','threesuperior','foursuperior','fivesuperior','sixsuperior','sevensuperior','eightsuperior','ninesuperior','zeroinferior','oneinferior','twoinferior','threeinferior','fourinferior','fiveinferior','sixinferior','seveninferior','eightinferior','nineinferior','centinferior','dollarinferior','periodinferior','commainferior','Agravesmall','Aacutesmall','Acircumflexsmall','Atildesmall','Adieresissmall','Aringsmall','AEsmall','Ccedillasmall','Egravesmall','Eacutesmall','Ecircumflexsmall','Edieresissmall','Igravesmall','Iacutesmall','Icircumflexsmall','Idieresissmall','Ethsmall','Ntildesmall','Ogravesmall','Oacutesmall','Ocircumflexsmall','Otildesmall','Odieresissmall','OEsmall','Oslashsmall','Ugravesmall','Uacutesmall','Ucircumflexsmall','Udieresissmall','Yacutesmall','Thornsmall','Ydieresissmall'];var ExpertSubsetCharset=['.notdef','space','dollaroldstyle','dollarsuperior','parenleftsuperior','parenrightsuperior','twodotenleader','onedotenleader','comma','hyphen','period','fraction','zerooldstyle','oneoldstyle','twooldstyle','threeoldstyle','fouroldstyle','fiveoldstyle','sixoldstyle','sevenoldstyle','eightoldstyle','nineoldstyle','colon','semicolon','commasuperior','threequartersemdash','periodsuperior','asuperior','bsuperior','centsuperior','dsuperior','esuperior','isuperior','lsuperior','msuperior','nsuperior','osuperior','rsuperior','ssuperior','tsuperior','ff','fi','fl','ffi','ffl','parenleftinferior','parenrightinferior','hyphensuperior','colonmonetary','onefitted','rupiah','centoldstyle','figuredash','hypheninferior','onequarter','onehalf','threequarters','oneeighth','threeeighths','fiveeighths','seveneighths','onethird','twothirds','zerosuperior','onesuperior','twosuperior','threesuperior','foursuperior','fivesuperior','sixsuperior','sevensuperior','eightsuperior','ninesuperior','zeroinferior','oneinferior','twoinferior','threeinferior','fourinferior','fiveinferior','sixinferior','seveninferior','eightinferior','nineinferior','centinferior','dollarinferior','periodinferior','commainferior'];exports.ISOAdobeCharset=ISOAdobeCharset;exports.ExpertCharset=ExpertCharset;exports.ExpertSubsetCharset=ExpertSubsetCharset;/***/},/* 159 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var ExpertEncoding=['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','space','exclamsmall','Hungarumlautsmall','','dollaroldstyle','dollarsuperior','ampersandsmall','Acutesmall','parenleftsuperior','parenrightsuperior','twodotenleader','onedotenleader','comma','hyphen','period','fraction','zerooldstyle','oneoldstyle','twooldstyle','threeoldstyle','fouroldstyle','fiveoldstyle','sixoldstyle','sevenoldstyle','eightoldstyle','nineoldstyle','colon','semicolon','commasuperior','threequartersemdash','periodsuperior','questionsmall','','asuperior','bsuperior','centsuperior','dsuperior','esuperior','','','','isuperior','','','lsuperior','msuperior','nsuperior','osuperior','','','rsuperior','ssuperior','tsuperior','','ff','fi','fl','ffi','ffl','parenleftinferior','','parenrightinferior','Circumflexsmall','hyphensuperior','Gravesmall','Asmall','Bsmall','Csmall','Dsmall','Esmall','Fsmall','Gsmall','Hsmall','Ismall','Jsmall','Ksmall','Lsmall','Msmall','Nsmall','Osmall','Psmall','Qsmall','Rsmall','Ssmall','Tsmall','Usmall','Vsmall','Wsmall','Xsmall','Ysmall','Zsmall','colonmonetary','onefitted','rupiah','Tildesmall','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','exclamdownsmall','centoldstyle','Lslashsmall','','','Scaronsmall','Zcaronsmall','Dieresissmall','Brevesmall','Caronsmall','','Dotaccentsmall','','','Macronsmall','','','figuredash','hypheninferior','','','Ogoneksmall','Ringsmall','Cedillasmall','','','','onequarter','onehalf','threequarters','questiondownsmall','oneeighth','threeeighths','fiveeighths','seveneighths','onethird','twothirds','','','zerosuperior','onesuperior','twosuperior','threesuperior','foursuperior','fivesuperior','sixsuperior','sevensuperior','eightsuperior','ninesuperior','zeroinferior','oneinferior','twoinferior','threeinferior','fourinferior','fiveinferior','sixinferior','seveninferior','eightinferior','nineinferior','centinferior','dollarinferior','periodinferior','commainferior','Agravesmall','Aacutesmall','Acircumflexsmall','Atildesmall','Adieresissmall','Aringsmall','AEsmall','Ccedillasmall','Egravesmall','Eacutesmall','Ecircumflexsmall','Edieresissmall','Igravesmall','Iacutesmall','Icircumflexsmall','Idieresissmall','Ethsmall','Ntildesmall','Ogravesmall','Oacutesmall','Ocircumflexsmall','Otildesmall','Odieresissmall','OEsmall','Oslashsmall','Ugravesmall','Uacutesmall','Ucircumflexsmall','Udieresissmall','Yacutesmall','Thornsmall','Ydieresissmall'];var MacExpertEncoding=['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','space','exclamsmall','Hungarumlautsmall','centoldstyle','dollaroldstyle','dollarsuperior','ampersandsmall','Acutesmall','parenleftsuperior','parenrightsuperior','twodotenleader','onedotenleader','comma','hyphen','period','fraction','zerooldstyle','oneoldstyle','twooldstyle','threeoldstyle','fouroldstyle','fiveoldstyle','sixoldstyle','sevenoldstyle','eightoldstyle','nineoldstyle','colon','semicolon','','threequartersemdash','','questionsmall','','','','','Ethsmall','','','onequarter','onehalf','threequarters','oneeighth','threeeighths','fiveeighths','seveneighths','onethird','twothirds','','','','','','','ff','fi','fl','ffi','ffl','parenleftinferior','','parenrightinferior','Circumflexsmall','hypheninferior','Gravesmall','Asmall','Bsmall','Csmall','Dsmall','Esmall','Fsmall','Gsmall','Hsmall','Ismall','Jsmall','Ksmall','Lsmall','Msmall','Nsmall','Osmall','Psmall','Qsmall','Rsmall','Ssmall','Tsmall','Usmall','Vsmall','Wsmall','Xsmall','Ysmall','Zsmall','colonmonetary','onefitted','rupiah','Tildesmall','','','asuperior','centsuperior','','','','','Aacutesmall','Agravesmall','Acircumflexsmall','Adieresissmall','Atildesmall','Aringsmall','Ccedillasmall','Eacutesmall','Egravesmall','Ecircumflexsmall','Edieresissmall','Iacutesmall','Igravesmall','Icircumflexsmall','Idieresissmall','Ntildesmall','Oacutesmall','Ogravesmall','Ocircumflexsmall','Odieresissmall','Otildesmall','Uacutesmall','Ugravesmall','Ucircumflexsmall','Udieresissmall','','eightsuperior','fourinferior','threeinferior','sixinferior','eightinferior','seveninferior','Scaronsmall','','centinferior','twoinferior','','Dieresissmall','','Caronsmall','osuperior','fiveinferior','','commainferior','periodinferior','Yacutesmall','','dollarinferior','','','Thornsmall','','nineinferior','zeroinferior','Zcaronsmall','AEsmall','Oslashsmall','questiondownsmall','oneinferior','Lslashsmall','','','','','','','Cedillasmall','','','','','','OEsmall','figuredash','hyphensuperior','','','','','exclamdownsmall','','Ydieresissmall','','onesuperior','twosuperior','threesuperior','foursuperior','fivesuperior','sixsuperior','sevensuperior','ninesuperior','zerosuperior','','esuperior','rsuperior','tsuperior','','','isuperior','ssuperior','dsuperior','','','','','','lsuperior','Ogoneksmall','Brevesmall','Macronsmall','bsuperior','nsuperior','msuperior','commasuperior','periodsuperior','Dotaccentsmall','Ringsmall','','','',''];var MacRomanEncoding=['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','space','exclam','quotedbl','numbersign','dollar','percent','ampersand','quotesingle','parenleft','parenright','asterisk','plus','comma','hyphen','period','slash','zero','one','two','three','four','five','six','seven','eight','nine','colon','semicolon','less','equal','greater','question','at','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','bracketleft','backslash','bracketright','asciicircum','underscore','grave','a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','braceleft','bar','braceright','asciitilde','','Adieresis','Aring','Ccedilla','Eacute','Ntilde','Odieresis','Udieresis','aacute','agrave','acircumflex','adieresis','atilde','aring','ccedilla','eacute','egrave','ecircumflex','edieresis','iacute','igrave','icircumflex','idieresis','ntilde','oacute','ograve','ocircumflex','odieresis','otilde','uacute','ugrave','ucircumflex','udieresis','dagger','degree','cent','sterling','section','bullet','paragraph','germandbls','registered','copyright','trademark','acute','dieresis','notequal','AE','Oslash','infinity','plusminus','lessequal','greaterequal','yen','mu','partialdiff','summation','product','pi','integral','ordfeminine','ordmasculine','Omega','ae','oslash','questiondown','exclamdown','logicalnot','radical','florin','approxequal','Delta','guillemotleft','guillemotright','ellipsis','space','Agrave','Atilde','Otilde','OE','oe','endash','emdash','quotedblleft','quotedblright','quoteleft','quoteright','divide','lozenge','ydieresis','Ydieresis','fraction','currency','guilsinglleft','guilsinglright','fi','fl','daggerdbl','periodcentered','quotesinglbase','quotedblbase','perthousand','Acircumflex','Ecircumflex','Aacute','Edieresis','Egrave','Iacute','Icircumflex','Idieresis','Igrave','Oacute','Ocircumflex','apple','Ograve','Uacute','Ucircumflex','Ugrave','dotlessi','circumflex','tilde','macron','breve','dotaccent','ring','cedilla','hungarumlaut','ogonek','caron'];var StandardEncoding=['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','space','exclam','quotedbl','numbersign','dollar','percent','ampersand','quoteright','parenleft','parenright','asterisk','plus','comma','hyphen','period','slash','zero','one','two','three','four','five','six','seven','eight','nine','colon','semicolon','less','equal','greater','question','at','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','bracketleft','backslash','bracketright','asciicircum','underscore','quoteleft','a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','braceleft','bar','braceright','asciitilde','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','exclamdown','cent','sterling','fraction','yen','florin','section','currency','quotesingle','quotedblleft','guillemotleft','guilsinglleft','guilsinglright','fi','fl','','endash','dagger','daggerdbl','periodcentered','','paragraph','bullet','quotesinglbase','quotedblbase','quotedblright','guillemotright','ellipsis','perthousand','','questiondown','','grave','acute','circumflex','tilde','macron','breve','dotaccent','dieresis','','ring','cedilla','','hungarumlaut','ogonek','caron','emdash','','','','','','','','','','','','','','','','','AE','','ordfeminine','','','','','Lslash','Oslash','OE','ordmasculine','','','','','','ae','','','','dotlessi','','','lslash','oslash','oe','germandbls','','','',''];var WinAnsiEncoding=['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','space','exclam','quotedbl','numbersign','dollar','percent','ampersand','quotesingle','parenleft','parenright','asterisk','plus','comma','hyphen','period','slash','zero','one','two','three','four','five','six','seven','eight','nine','colon','semicolon','less','equal','greater','question','at','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','bracketleft','backslash','bracketright','asciicircum','underscore','grave','a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','braceleft','bar','braceright','asciitilde','bullet','Euro','bullet','quotesinglbase','florin','quotedblbase','ellipsis','dagger','daggerdbl','circumflex','perthousand','Scaron','guilsinglleft','OE','bullet','Zcaron','bullet','bullet','quoteleft','quoteright','quotedblleft','quotedblright','bullet','endash','emdash','tilde','trademark','scaron','guilsinglright','oe','bullet','zcaron','Ydieresis','space','exclamdown','cent','sterling','currency','yen','brokenbar','section','dieresis','copyright','ordfeminine','guillemotleft','logicalnot','hyphen','registered','macron','degree','plusminus','twosuperior','threesuperior','acute','mu','paragraph','periodcentered','cedilla','onesuperior','ordmasculine','guillemotright','onequarter','onehalf','threequarters','questiondown','Agrave','Aacute','Acircumflex','Atilde','Adieresis','Aring','AE','Ccedilla','Egrave','Eacute','Ecircumflex','Edieresis','Igrave','Iacute','Icircumflex','Idieresis','Eth','Ntilde','Ograve','Oacute','Ocircumflex','Otilde','Odieresis','multiply','Oslash','Ugrave','Uacute','Ucircumflex','Udieresis','Yacute','Thorn','germandbls','agrave','aacute','acircumflex','atilde','adieresis','aring','ae','ccedilla','egrave','eacute','ecircumflex','edieresis','igrave','iacute','icircumflex','idieresis','eth','ntilde','ograve','oacute','ocircumflex','otilde','odieresis','divide','oslash','ugrave','uacute','ucircumflex','udieresis','yacute','thorn','ydieresis'];var SymbolSetEncoding=['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','space','exclam','universal','numbersign','existential','percent','ampersand','suchthat','parenleft','parenright','asteriskmath','plus','comma','minus','period','slash','zero','one','two','three','four','five','six','seven','eight','nine','colon','semicolon','less','equal','greater','question','congruent','Alpha','Beta','Chi','Delta','Epsilon','Phi','Gamma','Eta','Iota','theta1','Kappa','Lambda','Mu','Nu','Omicron','Pi','Theta','Rho','Sigma','Tau','Upsilon','sigma1','Omega','Xi','Psi','Zeta','bracketleft','therefore','bracketright','perpendicular','underscore','radicalex','alpha','beta','chi','delta','epsilon','phi','gamma','eta','iota','phi1','kappa','lambda','mu','nu','omicron','pi','theta','rho','sigma','tau','upsilon','omega1','omega','xi','psi','zeta','braceleft','bar','braceright','similar','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','Euro','Upsilon1','minute','lessequal','fraction','infinity','florin','club','diamond','heart','spade','arrowboth','arrowleft','arrowup','arrowright','arrowdown','degree','plusminus','second','greaterequal','multiply','proportional','partialdiff','bullet','divide','notequal','equivalence','approxequal','ellipsis','arrowvertex','arrowhorizex','carriagereturn','aleph','Ifraktur','Rfraktur','weierstrass','circlemultiply','circleplus','emptyset','intersection','union','propersuperset','reflexsuperset','notsubset','propersubset','reflexsubset','element','notelement','angle','gradient','registerserif','copyrightserif','trademarkserif','product','radical','dotmath','logicalnot','logicaland','logicalor','arrowdblboth','arrowdblleft','arrowdblup','arrowdblright','arrowdbldown','lozenge','angleleft','registersans','copyrightsans','trademarksans','summation','parenlefttp','parenleftex','parenleftbt','bracketlefttp','bracketleftex','bracketleftbt','bracelefttp','braceleftmid','braceleftbt','braceex','','angleright','integral','integraltp','integralex','integralbt','parenrighttp','parenrightex','parenrightbt','bracketrighttp','bracketrightex','bracketrightbt','bracerighttp','bracerightmid','bracerightbt',''];var ZapfDingbatsEncoding=['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','space','a1','a2','a202','a3','a4','a5','a119','a118','a117','a11','a12','a13','a14','a15','a16','a105','a17','a18','a19','a20','a21','a22','a23','a24','a25','a26','a27','a28','a6','a7','a8','a9','a10','a29','a30','a31','a32','a33','a34','a35','a36','a37','a38','a39','a40','a41','a42','a43','a44','a45','a46','a47','a48','a49','a50','a51','a52','a53','a54','a55','a56','a57','a58','a59','a60','a61','a62','a63','a64','a65','a66','a67','a68','a69','a70','a71','a72','a73','a74','a203','a75','a204','a76','a77','a78','a79','a81','a82','a83','a84','a97','a98','a99','a100','','a89','a90','a93','a94','a91','a92','a205','a85','a206','a86','a87','a88','a95','a96','','','','','','','','','','','','','','','','','','','','a101','a102','a103','a104','a106','a107','a108','a112','a111','a110','a109','a120','a121','a122','a123','a124','a125','a126','a127','a128','a129','a130','a131','a132','a133','a134','a135','a136','a137','a138','a139','a140','a141','a142','a143','a144','a145','a146','a147','a148','a149','a150','a151','a152','a153','a154','a155','a156','a157','a158','a159','a160','a161','a163','a164','a196','a165','a192','a166','a167','a168','a169','a170','a171','a172','a173','a162','a174','a175','a176','a177','a178','a179','a193','a180','a199','a181','a200','a182','','a201','a183','a184','a197','a185','a194','a198','a186','a195','a187','a188','a189','a190','a191',''];function getEncoding(encodingName){switch(encodingName){case'WinAnsiEncoding':return WinAnsiEncoding;case'StandardEncoding':return StandardEncoding;case'MacRomanEncoding':return MacRomanEncoding;case'SymbolSetEncoding':return SymbolSetEncoding;case'ZapfDingbatsEncoding':return ZapfDingbatsEncoding;case'ExpertEncoding':return ExpertEncoding;case'MacExpertEncoding':return MacExpertEncoding;default:return null;}}exports.WinAnsiEncoding=WinAnsiEncoding;exports.StandardEncoding=StandardEncoding;exports.MacRomanEncoding=MacRomanEncoding;exports.SymbolSetEncoding=SymbolSetEncoding;exports.ZapfDingbatsEncoding=ZapfDingbatsEncoding;exports.ExpertEncoding=ExpertEncoding;exports.getEncoding=getEncoding;/***/},/* 160 */ /***/function(module,exports,__w_pdfjs_require__){var getLookupTableFactory=__w_pdfjs_require__(2).getLookupTableFactory;var getGlyphsUnicode=getLookupTableFactory(function(t){t['A']=0x0041;t['AE']=0x00C6;t['AEacute']=0x01FC;t['AEmacron']=0x01E2;t['AEsmall']=0xF7E6;t['Aacute']=0x00C1;t['Aacutesmall']=0xF7E1;t['Abreve']=0x0102;t['Abreveacute']=0x1EAE;t['Abrevecyrillic']=0x04D0;t['Abrevedotbelow']=0x1EB6;t['Abrevegrave']=0x1EB0;t['Abrevehookabove']=0x1EB2;t['Abrevetilde']=0x1EB4;t['Acaron']=0x01CD;t['Acircle']=0x24B6;t['Acircumflex']=0x00C2;t['Acircumflexacute']=0x1EA4;t['Acircumflexdotbelow']=0x1EAC;t['Acircumflexgrave']=0x1EA6;t['Acircumflexhookabove']=0x1EA8;t['Acircumflexsmall']=0xF7E2;t['Acircumflextilde']=0x1EAA;t['Acute']=0xF6C9;t['Acutesmall']=0xF7B4;t['Acyrillic']=0x0410;t['Adblgrave']=0x0200;t['Adieresis']=0x00C4;t['Adieresiscyrillic']=0x04D2;t['Adieresismacron']=0x01DE;t['Adieresissmall']=0xF7E4;t['Adotbelow']=0x1EA0;t['Adotmacron']=0x01E0;t['Agrave']=0x00C0;t['Agravesmall']=0xF7E0;t['Ahookabove']=0x1EA2;t['Aiecyrillic']=0x04D4;t['Ainvertedbreve']=0x0202;t['Alpha']=0x0391;t['Alphatonos']=0x0386;t['Amacron']=0x0100;t['Amonospace']=0xFF21;t['Aogonek']=0x0104;t['Aring']=0x00C5;t['Aringacute']=0x01FA;t['Aringbelow']=0x1E00;t['Aringsmall']=0xF7E5;t['Asmall']=0xF761;t['Atilde']=0x00C3;t['Atildesmall']=0xF7E3;t['Aybarmenian']=0x0531;t['B']=0x0042;t['Bcircle']=0x24B7;t['Bdotaccent']=0x1E02;t['Bdotbelow']=0x1E04;t['Becyrillic']=0x0411;t['Benarmenian']=0x0532;t['Beta']=0x0392;t['Bhook']=0x0181;t['Blinebelow']=0x1E06;t['Bmonospace']=0xFF22;t['Brevesmall']=0xF6F4;t['Bsmall']=0xF762;t['Btopbar']=0x0182;t['C']=0x0043;t['Caarmenian']=0x053E;t['Cacute']=0x0106;t['Caron']=0xF6CA;t['Caronsmall']=0xF6F5;t['Ccaron']=0x010C;t['Ccedilla']=0x00C7;t['Ccedillaacute']=0x1E08;t['Ccedillasmall']=0xF7E7;t['Ccircle']=0x24B8;t['Ccircumflex']=0x0108;t['Cdot']=0x010A;t['Cdotaccent']=0x010A;t['Cedillasmall']=0xF7B8;t['Chaarmenian']=0x0549;t['Cheabkhasiancyrillic']=0x04BC;t['Checyrillic']=0x0427;t['Chedescenderabkhasiancyrillic']=0x04BE;t['Chedescendercyrillic']=0x04B6;t['Chedieresiscyrillic']=0x04F4;t['Cheharmenian']=0x0543;t['Chekhakassiancyrillic']=0x04CB;t['Cheverticalstrokecyrillic']=0x04B8;t['Chi']=0x03A7;t['Chook']=0x0187;t['Circumflexsmall']=0xF6F6;t['Cmonospace']=0xFF23;t['Coarmenian']=0x0551;t['Csmall']=0xF763;t['D']=0x0044;t['DZ']=0x01F1;t['DZcaron']=0x01C4;t['Daarmenian']=0x0534;t['Dafrican']=0x0189;t['Dcaron']=0x010E;t['Dcedilla']=0x1E10;t['Dcircle']=0x24B9;t['Dcircumflexbelow']=0x1E12;t['Dcroat']=0x0110;t['Ddotaccent']=0x1E0A;t['Ddotbelow']=0x1E0C;t['Decyrillic']=0x0414;t['Deicoptic']=0x03EE;t['Delta']=0x2206;t['Deltagreek']=0x0394;t['Dhook']=0x018A;t['Dieresis']=0xF6CB;t['DieresisAcute']=0xF6CC;t['DieresisGrave']=0xF6CD;t['Dieresissmall']=0xF7A8;t['Digammagreek']=0x03DC;t['Djecyrillic']=0x0402;t['Dlinebelow']=0x1E0E;t['Dmonospace']=0xFF24;t['Dotaccentsmall']=0xF6F7;t['Dslash']=0x0110;t['Dsmall']=0xF764;t['Dtopbar']=0x018B;t['Dz']=0x01F2;t['Dzcaron']=0x01C5;t['Dzeabkhasiancyrillic']=0x04E0;t['Dzecyrillic']=0x0405;t['Dzhecyrillic']=0x040F;t['E']=0x0045;t['Eacute']=0x00C9;t['Eacutesmall']=0xF7E9;t['Ebreve']=0x0114;t['Ecaron']=0x011A;t['Ecedillabreve']=0x1E1C;t['Echarmenian']=0x0535;t['Ecircle']=0x24BA;t['Ecircumflex']=0x00CA;t['Ecircumflexacute']=0x1EBE;t['Ecircumflexbelow']=0x1E18;t['Ecircumflexdotbelow']=0x1EC6;t['Ecircumflexgrave']=0x1EC0;t['Ecircumflexhookabove']=0x1EC2;t['Ecircumflexsmall']=0xF7EA;t['Ecircumflextilde']=0x1EC4;t['Ecyrillic']=0x0404;t['Edblgrave']=0x0204;t['Edieresis']=0x00CB;t['Edieresissmall']=0xF7EB;t['Edot']=0x0116;t['Edotaccent']=0x0116;t['Edotbelow']=0x1EB8;t['Efcyrillic']=0x0424;t['Egrave']=0x00C8;t['Egravesmall']=0xF7E8;t['Eharmenian']=0x0537;t['Ehookabove']=0x1EBA;t['Eightroman']=0x2167;t['Einvertedbreve']=0x0206;t['Eiotifiedcyrillic']=0x0464;t['Elcyrillic']=0x041B;t['Elevenroman']=0x216A;t['Emacron']=0x0112;t['Emacronacute']=0x1E16;t['Emacrongrave']=0x1E14;t['Emcyrillic']=0x041C;t['Emonospace']=0xFF25;t['Encyrillic']=0x041D;t['Endescendercyrillic']=0x04A2;t['Eng']=0x014A;t['Enghecyrillic']=0x04A4;t['Enhookcyrillic']=0x04C7;t['Eogonek']=0x0118;t['Eopen']=0x0190;t['Epsilon']=0x0395;t['Epsilontonos']=0x0388;t['Ercyrillic']=0x0420;t['Ereversed']=0x018E;t['Ereversedcyrillic']=0x042D;t['Escyrillic']=0x0421;t['Esdescendercyrillic']=0x04AA;t['Esh']=0x01A9;t['Esmall']=0xF765;t['Eta']=0x0397;t['Etarmenian']=0x0538;t['Etatonos']=0x0389;t['Eth']=0x00D0;t['Ethsmall']=0xF7F0;t['Etilde']=0x1EBC;t['Etildebelow']=0x1E1A;t['Euro']=0x20AC;t['Ezh']=0x01B7;t['Ezhcaron']=0x01EE;t['Ezhreversed']=0x01B8;t['F']=0x0046;t['Fcircle']=0x24BB;t['Fdotaccent']=0x1E1E;t['Feharmenian']=0x0556;t['Feicoptic']=0x03E4;t['Fhook']=0x0191;t['Fitacyrillic']=0x0472;t['Fiveroman']=0x2164;t['Fmonospace']=0xFF26;t['Fourroman']=0x2163;t['Fsmall']=0xF766;t['G']=0x0047;t['GBsquare']=0x3387;t['Gacute']=0x01F4;t['Gamma']=0x0393;t['Gammaafrican']=0x0194;t['Gangiacoptic']=0x03EA;t['Gbreve']=0x011E;t['Gcaron']=0x01E6;t['Gcedilla']=0x0122;t['Gcircle']=0x24BC;t['Gcircumflex']=0x011C;t['Gcommaaccent']=0x0122;t['Gdot']=0x0120;t['Gdotaccent']=0x0120;t['Gecyrillic']=0x0413;t['Ghadarmenian']=0x0542;t['Ghemiddlehookcyrillic']=0x0494;t['Ghestrokecyrillic']=0x0492;t['Gheupturncyrillic']=0x0490;t['Ghook']=0x0193;t['Gimarmenian']=0x0533;t['Gjecyrillic']=0x0403;t['Gmacron']=0x1E20;t['Gmonospace']=0xFF27;t['Grave']=0xF6CE;t['Gravesmall']=0xF760;t['Gsmall']=0xF767;t['Gsmallhook']=0x029B;t['Gstroke']=0x01E4;t['H']=0x0048;t['H18533']=0x25CF;t['H18543']=0x25AA;t['H18551']=0x25AB;t['H22073']=0x25A1;t['HPsquare']=0x33CB;t['Haabkhasiancyrillic']=0x04A8;t['Hadescendercyrillic']=0x04B2;t['Hardsigncyrillic']=0x042A;t['Hbar']=0x0126;t['Hbrevebelow']=0x1E2A;t['Hcedilla']=0x1E28;t['Hcircle']=0x24BD;t['Hcircumflex']=0x0124;t['Hdieresis']=0x1E26;t['Hdotaccent']=0x1E22;t['Hdotbelow']=0x1E24;t['Hmonospace']=0xFF28;t['Hoarmenian']=0x0540;t['Horicoptic']=0x03E8;t['Hsmall']=0xF768;t['Hungarumlaut']=0xF6CF;t['Hungarumlautsmall']=0xF6F8;t['Hzsquare']=0x3390;t['I']=0x0049;t['IAcyrillic']=0x042F;t['IJ']=0x0132;t['IUcyrillic']=0x042E;t['Iacute']=0x00CD;t['Iacutesmall']=0xF7ED;t['Ibreve']=0x012C;t['Icaron']=0x01CF;t['Icircle']=0x24BE;t['Icircumflex']=0x00CE;t['Icircumflexsmall']=0xF7EE;t['Icyrillic']=0x0406;t['Idblgrave']=0x0208;t['Idieresis']=0x00CF;t['Idieresisacute']=0x1E2E;t['Idieresiscyrillic']=0x04E4;t['Idieresissmall']=0xF7EF;t['Idot']=0x0130;t['Idotaccent']=0x0130;t['Idotbelow']=0x1ECA;t['Iebrevecyrillic']=0x04D6;t['Iecyrillic']=0x0415;t['Ifraktur']=0x2111;t['Igrave']=0x00CC;t['Igravesmall']=0xF7EC;t['Ihookabove']=0x1EC8;t['Iicyrillic']=0x0418;t['Iinvertedbreve']=0x020A;t['Iishortcyrillic']=0x0419;t['Imacron']=0x012A;t['Imacroncyrillic']=0x04E2;t['Imonospace']=0xFF29;t['Iniarmenian']=0x053B;t['Iocyrillic']=0x0401;t['Iogonek']=0x012E;t['Iota']=0x0399;t['Iotaafrican']=0x0196;t['Iotadieresis']=0x03AA;t['Iotatonos']=0x038A;t['Ismall']=0xF769;t['Istroke']=0x0197;t['Itilde']=0x0128;t['Itildebelow']=0x1E2C;t['Izhitsacyrillic']=0x0474;t['Izhitsadblgravecyrillic']=0x0476;t['J']=0x004A;t['Jaarmenian']=0x0541;t['Jcircle']=0x24BF;t['Jcircumflex']=0x0134;t['Jecyrillic']=0x0408;t['Jheharmenian']=0x054B;t['Jmonospace']=0xFF2A;t['Jsmall']=0xF76A;t['K']=0x004B;t['KBsquare']=0x3385;t['KKsquare']=0x33CD;t['Kabashkircyrillic']=0x04A0;t['Kacute']=0x1E30;t['Kacyrillic']=0x041A;t['Kadescendercyrillic']=0x049A;t['Kahookcyrillic']=0x04C3;t['Kappa']=0x039A;t['Kastrokecyrillic']=0x049E;t['Kaverticalstrokecyrillic']=0x049C;t['Kcaron']=0x01E8;t['Kcedilla']=0x0136;t['Kcircle']=0x24C0;t['Kcommaaccent']=0x0136;t['Kdotbelow']=0x1E32;t['Keharmenian']=0x0554;t['Kenarmenian']=0x053F;t['Khacyrillic']=0x0425;t['Kheicoptic']=0x03E6;t['Khook']=0x0198;t['Kjecyrillic']=0x040C;t['Klinebelow']=0x1E34;t['Kmonospace']=0xFF2B;t['Koppacyrillic']=0x0480;t['Koppagreek']=0x03DE;t['Ksicyrillic']=0x046E;t['Ksmall']=0xF76B;t['L']=0x004C;t['LJ']=0x01C7;t['LL']=0xF6BF;t['Lacute']=0x0139;t['Lambda']=0x039B;t['Lcaron']=0x013D;t['Lcedilla']=0x013B;t['Lcircle']=0x24C1;t['Lcircumflexbelow']=0x1E3C;t['Lcommaaccent']=0x013B;t['Ldot']=0x013F;t['Ldotaccent']=0x013F;t['Ldotbelow']=0x1E36;t['Ldotbelowmacron']=0x1E38;t['Liwnarmenian']=0x053C;t['Lj']=0x01C8;t['Ljecyrillic']=0x0409;t['Llinebelow']=0x1E3A;t['Lmonospace']=0xFF2C;t['Lslash']=0x0141;t['Lslashsmall']=0xF6F9;t['Lsmall']=0xF76C;t['M']=0x004D;t['MBsquare']=0x3386;t['Macron']=0xF6D0;t['Macronsmall']=0xF7AF;t['Macute']=0x1E3E;t['Mcircle']=0x24C2;t['Mdotaccent']=0x1E40;t['Mdotbelow']=0x1E42;t['Menarmenian']=0x0544;t['Mmonospace']=0xFF2D;t['Msmall']=0xF76D;t['Mturned']=0x019C;t['Mu']=0x039C;t['N']=0x004E;t['NJ']=0x01CA;t['Nacute']=0x0143;t['Ncaron']=0x0147;t['Ncedilla']=0x0145;t['Ncircle']=0x24C3;t['Ncircumflexbelow']=0x1E4A;t['Ncommaaccent']=0x0145;t['Ndotaccent']=0x1E44;t['Ndotbelow']=0x1E46;t['Nhookleft']=0x019D;t['Nineroman']=0x2168;t['Nj']=0x01CB;t['Njecyrillic']=0x040A;t['Nlinebelow']=0x1E48;t['Nmonospace']=0xFF2E;t['Nowarmenian']=0x0546;t['Nsmall']=0xF76E;t['Ntilde']=0x00D1;t['Ntildesmall']=0xF7F1;t['Nu']=0x039D;t['O']=0x004F;t['OE']=0x0152;t['OEsmall']=0xF6FA;t['Oacute']=0x00D3;t['Oacutesmall']=0xF7F3;t['Obarredcyrillic']=0x04E8;t['Obarreddieresiscyrillic']=0x04EA;t['Obreve']=0x014E;t['Ocaron']=0x01D1;t['Ocenteredtilde']=0x019F;t['Ocircle']=0x24C4;t['Ocircumflex']=0x00D4;t['Ocircumflexacute']=0x1ED0;t['Ocircumflexdotbelow']=0x1ED8;t['Ocircumflexgrave']=0x1ED2;t['Ocircumflexhookabove']=0x1ED4;t['Ocircumflexsmall']=0xF7F4;t['Ocircumflextilde']=0x1ED6;t['Ocyrillic']=0x041E;t['Odblacute']=0x0150;t['Odblgrave']=0x020C;t['Odieresis']=0x00D6;t['Odieresiscyrillic']=0x04E6;t['Odieresissmall']=0xF7F6;t['Odotbelow']=0x1ECC;t['Ogoneksmall']=0xF6FB;t['Ograve']=0x00D2;t['Ogravesmall']=0xF7F2;t['Oharmenian']=0x0555;t['Ohm']=0x2126;t['Ohookabove']=0x1ECE;t['Ohorn']=0x01A0;t['Ohornacute']=0x1EDA;t['Ohorndotbelow']=0x1EE2;t['Ohorngrave']=0x1EDC;t['Ohornhookabove']=0x1EDE;t['Ohorntilde']=0x1EE0;t['Ohungarumlaut']=0x0150;t['Oi']=0x01A2;t['Oinvertedbreve']=0x020E;t['Omacron']=0x014C;t['Omacronacute']=0x1E52;t['Omacrongrave']=0x1E50;t['Omega']=0x2126;t['Omegacyrillic']=0x0460;t['Omegagreek']=0x03A9;t['Omegaroundcyrillic']=0x047A;t['Omegatitlocyrillic']=0x047C;t['Omegatonos']=0x038F;t['Omicron']=0x039F;t['Omicrontonos']=0x038C;t['Omonospace']=0xFF2F;t['Oneroman']=0x2160;t['Oogonek']=0x01EA;t['Oogonekmacron']=0x01EC;t['Oopen']=0x0186;t['Oslash']=0x00D8;t['Oslashacute']=0x01FE;t['Oslashsmall']=0xF7F8;t['Osmall']=0xF76F;t['Ostrokeacute']=0x01FE;t['Otcyrillic']=0x047E;t['Otilde']=0x00D5;t['Otildeacute']=0x1E4C;t['Otildedieresis']=0x1E4E;t['Otildesmall']=0xF7F5;t['P']=0x0050;t['Pacute']=0x1E54;t['Pcircle']=0x24C5;t['Pdotaccent']=0x1E56;t['Pecyrillic']=0x041F;t['Peharmenian']=0x054A;t['Pemiddlehookcyrillic']=0x04A6;t['Phi']=0x03A6;t['Phook']=0x01A4;t['Pi']=0x03A0;t['Piwrarmenian']=0x0553;t['Pmonospace']=0xFF30;t['Psi']=0x03A8;t['Psicyrillic']=0x0470;t['Psmall']=0xF770;t['Q']=0x0051;t['Qcircle']=0x24C6;t['Qmonospace']=0xFF31;t['Qsmall']=0xF771;t['R']=0x0052;t['Raarmenian']=0x054C;t['Racute']=0x0154;t['Rcaron']=0x0158;t['Rcedilla']=0x0156;t['Rcircle']=0x24C7;t['Rcommaaccent']=0x0156;t['Rdblgrave']=0x0210;t['Rdotaccent']=0x1E58;t['Rdotbelow']=0x1E5A;t['Rdotbelowmacron']=0x1E5C;t['Reharmenian']=0x0550;t['Rfraktur']=0x211C;t['Rho']=0x03A1;t['Ringsmall']=0xF6FC;t['Rinvertedbreve']=0x0212;t['Rlinebelow']=0x1E5E;t['Rmonospace']=0xFF32;t['Rsmall']=0xF772;t['Rsmallinverted']=0x0281;t['Rsmallinvertedsuperior']=0x02B6;t['S']=0x0053;t['SF010000']=0x250C;t['SF020000']=0x2514;t['SF030000']=0x2510;t['SF040000']=0x2518;t['SF050000']=0x253C;t['SF060000']=0x252C;t['SF070000']=0x2534;t['SF080000']=0x251C;t['SF090000']=0x2524;t['SF100000']=0x2500;t['SF110000']=0x2502;t['SF190000']=0x2561;t['SF200000']=0x2562;t['SF210000']=0x2556;t['SF220000']=0x2555;t['SF230000']=0x2563;t['SF240000']=0x2551;t['SF250000']=0x2557;t['SF260000']=0x255D;t['SF270000']=0x255C;t['SF280000']=0x255B;t['SF360000']=0x255E;t['SF370000']=0x255F;t['SF380000']=0x255A;t['SF390000']=0x2554;t['SF400000']=0x2569;t['SF410000']=0x2566;t['SF420000']=0x2560;t['SF430000']=0x2550;t['SF440000']=0x256C;t['SF450000']=0x2567;t['SF460000']=0x2568;t['SF470000']=0x2564;t['SF480000']=0x2565;t['SF490000']=0x2559;t['SF500000']=0x2558;t['SF510000']=0x2552;t['SF520000']=0x2553;t['SF530000']=0x256B;t['SF540000']=0x256A;t['Sacute']=0x015A;t['Sacutedotaccent']=0x1E64;t['Sampigreek']=0x03E0;t['Scaron']=0x0160;t['Scarondotaccent']=0x1E66;t['Scaronsmall']=0xF6FD;t['Scedilla']=0x015E;t['Schwa']=0x018F;t['Schwacyrillic']=0x04D8;t['Schwadieresiscyrillic']=0x04DA;t['Scircle']=0x24C8;t['Scircumflex']=0x015C;t['Scommaaccent']=0x0218;t['Sdotaccent']=0x1E60;t['Sdotbelow']=0x1E62;t['Sdotbelowdotaccent']=0x1E68;t['Seharmenian']=0x054D;t['Sevenroman']=0x2166;t['Shaarmenian']=0x0547;t['Shacyrillic']=0x0428;t['Shchacyrillic']=0x0429;t['Sheicoptic']=0x03E2;t['Shhacyrillic']=0x04BA;t['Shimacoptic']=0x03EC;t['Sigma']=0x03A3;t['Sixroman']=0x2165;t['Smonospace']=0xFF33;t['Softsigncyrillic']=0x042C;t['Ssmall']=0xF773;t['Stigmagreek']=0x03DA;t['T']=0x0054;t['Tau']=0x03A4;t['Tbar']=0x0166;t['Tcaron']=0x0164;t['Tcedilla']=0x0162;t['Tcircle']=0x24C9;t['Tcircumflexbelow']=0x1E70;t['Tcommaaccent']=0x0162;t['Tdotaccent']=0x1E6A;t['Tdotbelow']=0x1E6C;t['Tecyrillic']=0x0422;t['Tedescendercyrillic']=0x04AC;t['Tenroman']=0x2169;t['Tetsecyrillic']=0x04B4;t['Theta']=0x0398;t['Thook']=0x01AC;t['Thorn']=0x00DE;t['Thornsmall']=0xF7FE;t['Threeroman']=0x2162;t['Tildesmall']=0xF6FE;t['Tiwnarmenian']=0x054F;t['Tlinebelow']=0x1E6E;t['Tmonospace']=0xFF34;t['Toarmenian']=0x0539;t['Tonefive']=0x01BC;t['Tonesix']=0x0184;t['Tonetwo']=0x01A7;t['Tretroflexhook']=0x01AE;t['Tsecyrillic']=0x0426;t['Tshecyrillic']=0x040B;t['Tsmall']=0xF774;t['Twelveroman']=0x216B;t['Tworoman']=0x2161;t['U']=0x0055;t['Uacute']=0x00DA;t['Uacutesmall']=0xF7FA;t['Ubreve']=0x016C;t['Ucaron']=0x01D3;t['Ucircle']=0x24CA;t['Ucircumflex']=0x00DB;t['Ucircumflexbelow']=0x1E76;t['Ucircumflexsmall']=0xF7FB;t['Ucyrillic']=0x0423;t['Udblacute']=0x0170;t['Udblgrave']=0x0214;t['Udieresis']=0x00DC;t['Udieresisacute']=0x01D7;t['Udieresisbelow']=0x1E72;t['Udieresiscaron']=0x01D9;t['Udieresiscyrillic']=0x04F0;t['Udieresisgrave']=0x01DB;t['Udieresismacron']=0x01D5;t['Udieresissmall']=0xF7FC;t['Udotbelow']=0x1EE4;t['Ugrave']=0x00D9;t['Ugravesmall']=0xF7F9;t['Uhookabove']=0x1EE6;t['Uhorn']=0x01AF;t['Uhornacute']=0x1EE8;t['Uhorndotbelow']=0x1EF0;t['Uhorngrave']=0x1EEA;t['Uhornhookabove']=0x1EEC;t['Uhorntilde']=0x1EEE;t['Uhungarumlaut']=0x0170;t['Uhungarumlautcyrillic']=0x04F2;t['Uinvertedbreve']=0x0216;t['Ukcyrillic']=0x0478;t['Umacron']=0x016A;t['Umacroncyrillic']=0x04EE;t['Umacrondieresis']=0x1E7A;t['Umonospace']=0xFF35;t['Uogonek']=0x0172;t['Upsilon']=0x03A5;t['Upsilon1']=0x03D2;t['Upsilonacutehooksymbolgreek']=0x03D3;t['Upsilonafrican']=0x01B1;t['Upsilondieresis']=0x03AB;t['Upsilondieresishooksymbolgreek']=0x03D4;t['Upsilonhooksymbol']=0x03D2;t['Upsilontonos']=0x038E;t['Uring']=0x016E;t['Ushortcyrillic']=0x040E;t['Usmall']=0xF775;t['Ustraightcyrillic']=0x04AE;t['Ustraightstrokecyrillic']=0x04B0;t['Utilde']=0x0168;t['Utildeacute']=0x1E78;t['Utildebelow']=0x1E74;t['V']=0x0056;t['Vcircle']=0x24CB;t['Vdotbelow']=0x1E7E;t['Vecyrillic']=0x0412;t['Vewarmenian']=0x054E;t['Vhook']=0x01B2;t['Vmonospace']=0xFF36;t['Voarmenian']=0x0548;t['Vsmall']=0xF776;t['Vtilde']=0x1E7C;t['W']=0x0057;t['Wacute']=0x1E82;t['Wcircle']=0x24CC;t['Wcircumflex']=0x0174;t['Wdieresis']=0x1E84;t['Wdotaccent']=0x1E86;t['Wdotbelow']=0x1E88;t['Wgrave']=0x1E80;t['Wmonospace']=0xFF37;t['Wsmall']=0xF777;t['X']=0x0058;t['Xcircle']=0x24CD;t['Xdieresis']=0x1E8C;t['Xdotaccent']=0x1E8A;t['Xeharmenian']=0x053D;t['Xi']=0x039E;t['Xmonospace']=0xFF38;t['Xsmall']=0xF778;t['Y']=0x0059;t['Yacute']=0x00DD;t['Yacutesmall']=0xF7FD;t['Yatcyrillic']=0x0462;t['Ycircle']=0x24CE;t['Ycircumflex']=0x0176;t['Ydieresis']=0x0178;t['Ydieresissmall']=0xF7FF;t['Ydotaccent']=0x1E8E;t['Ydotbelow']=0x1EF4;t['Yericyrillic']=0x042B;t['Yerudieresiscyrillic']=0x04F8;t['Ygrave']=0x1EF2;t['Yhook']=0x01B3;t['Yhookabove']=0x1EF6;t['Yiarmenian']=0x0545;t['Yicyrillic']=0x0407;t['Yiwnarmenian']=0x0552;t['Ymonospace']=0xFF39;t['Ysmall']=0xF779;t['Ytilde']=0x1EF8;t['Yusbigcyrillic']=0x046A;t['Yusbigiotifiedcyrillic']=0x046C;t['Yuslittlecyrillic']=0x0466;t['Yuslittleiotifiedcyrillic']=0x0468;t['Z']=0x005A;t['Zaarmenian']=0x0536;t['Zacute']=0x0179;t['Zcaron']=0x017D;t['Zcaronsmall']=0xF6FF;t['Zcircle']=0x24CF;t['Zcircumflex']=0x1E90;t['Zdot']=0x017B;t['Zdotaccent']=0x017B;t['Zdotbelow']=0x1E92;t['Zecyrillic']=0x0417;t['Zedescendercyrillic']=0x0498;t['Zedieresiscyrillic']=0x04DE;t['Zeta']=0x0396;t['Zhearmenian']=0x053A;t['Zhebrevecyrillic']=0x04C1;t['Zhecyrillic']=0x0416;t['Zhedescendercyrillic']=0x0496;t['Zhedieresiscyrillic']=0x04DC;t['Zlinebelow']=0x1E94;t['Zmonospace']=0xFF3A;t['Zsmall']=0xF77A;t['Zstroke']=0x01B5;t['a']=0x0061;t['aabengali']=0x0986;t['aacute']=0x00E1;t['aadeva']=0x0906;t['aagujarati']=0x0A86;t['aagurmukhi']=0x0A06;t['aamatragurmukhi']=0x0A3E;t['aarusquare']=0x3303;t['aavowelsignbengali']=0x09BE;t['aavowelsigndeva']=0x093E;t['aavowelsigngujarati']=0x0ABE;t['abbreviationmarkarmenian']=0x055F;t['abbreviationsigndeva']=0x0970;t['abengali']=0x0985;t['abopomofo']=0x311A;t['abreve']=0x0103;t['abreveacute']=0x1EAF;t['abrevecyrillic']=0x04D1;t['abrevedotbelow']=0x1EB7;t['abrevegrave']=0x1EB1;t['abrevehookabove']=0x1EB3;t['abrevetilde']=0x1EB5;t['acaron']=0x01CE;t['acircle']=0x24D0;t['acircumflex']=0x00E2;t['acircumflexacute']=0x1EA5;t['acircumflexdotbelow']=0x1EAD;t['acircumflexgrave']=0x1EA7;t['acircumflexhookabove']=0x1EA9;t['acircumflextilde']=0x1EAB;t['acute']=0x00B4;t['acutebelowcmb']=0x0317;t['acutecmb']=0x0301;t['acutecomb']=0x0301;t['acutedeva']=0x0954;t['acutelowmod']=0x02CF;t['acutetonecmb']=0x0341;t['acyrillic']=0x0430;t['adblgrave']=0x0201;t['addakgurmukhi']=0x0A71;t['adeva']=0x0905;t['adieresis']=0x00E4;t['adieresiscyrillic']=0x04D3;t['adieresismacron']=0x01DF;t['adotbelow']=0x1EA1;t['adotmacron']=0x01E1;t['ae']=0x00E6;t['aeacute']=0x01FD;t['aekorean']=0x3150;t['aemacron']=0x01E3;t['afii00208']=0x2015;t['afii08941']=0x20A4;t['afii10017']=0x0410;t['afii10018']=0x0411;t['afii10019']=0x0412;t['afii10020']=0x0413;t['afii10021']=0x0414;t['afii10022']=0x0415;t['afii10023']=0x0401;t['afii10024']=0x0416;t['afii10025']=0x0417;t['afii10026']=0x0418;t['afii10027']=0x0419;t['afii10028']=0x041A;t['afii10029']=0x041B;t['afii10030']=0x041C;t['afii10031']=0x041D;t['afii10032']=0x041E;t['afii10033']=0x041F;t['afii10034']=0x0420;t['afii10035']=0x0421;t['afii10036']=0x0422;t['afii10037']=0x0423;t['afii10038']=0x0424;t['afii10039']=0x0425;t['afii10040']=0x0426;t['afii10041']=0x0427;t['afii10042']=0x0428;t['afii10043']=0x0429;t['afii10044']=0x042A;t['afii10045']=0x042B;t['afii10046']=0x042C;t['afii10047']=0x042D;t['afii10048']=0x042E;t['afii10049']=0x042F;t['afii10050']=0x0490;t['afii10051']=0x0402;t['afii10052']=0x0403;t['afii10053']=0x0404;t['afii10054']=0x0405;t['afii10055']=0x0406;t['afii10056']=0x0407;t['afii10057']=0x0408;t['afii10058']=0x0409;t['afii10059']=0x040A;t['afii10060']=0x040B;t['afii10061']=0x040C;t['afii10062']=0x040E;t['afii10063']=0xF6C4;t['afii10064']=0xF6C5;t['afii10065']=0x0430;t['afii10066']=0x0431;t['afii10067']=0x0432;t['afii10068']=0x0433;t['afii10069']=0x0434;t['afii10070']=0x0435;t['afii10071']=0x0451;t['afii10072']=0x0436;t['afii10073']=0x0437;t['afii10074']=0x0438;t['afii10075']=0x0439;t['afii10076']=0x043A;t['afii10077']=0x043B;t['afii10078']=0x043C;t['afii10079']=0x043D;t['afii10080']=0x043E;t['afii10081']=0x043F;t['afii10082']=0x0440;t['afii10083']=0x0441;t['afii10084']=0x0442;t['afii10085']=0x0443;t['afii10086']=0x0444;t['afii10087']=0x0445;t['afii10088']=0x0446;t['afii10089']=0x0447;t['afii10090']=0x0448;t['afii10091']=0x0449;t['afii10092']=0x044A;t['afii10093']=0x044B;t['afii10094']=0x044C;t['afii10095']=0x044D;t['afii10096']=0x044E;t['afii10097']=0x044F;t['afii10098']=0x0491;t['afii10099']=0x0452;t['afii10100']=0x0453;t['afii10101']=0x0454;t['afii10102']=0x0455;t['afii10103']=0x0456;t['afii10104']=0x0457;t['afii10105']=0x0458;t['afii10106']=0x0459;t['afii10107']=0x045A;t['afii10108']=0x045B;t['afii10109']=0x045C;t['afii10110']=0x045E;t['afii10145']=0x040F;t['afii10146']=0x0462;t['afii10147']=0x0472;t['afii10148']=0x0474;t['afii10192']=0xF6C6;t['afii10193']=0x045F;t['afii10194']=0x0463;t['afii10195']=0x0473;t['afii10196']=0x0475;t['afii10831']=0xF6C7;t['afii10832']=0xF6C8;t['afii10846']=0x04D9;t['afii299']=0x200E;t['afii300']=0x200F;t['afii301']=0x200D;t['afii57381']=0x066A;t['afii57388']=0x060C;t['afii57392']=0x0660;t['afii57393']=0x0661;t['afii57394']=0x0662;t['afii57395']=0x0663;t['afii57396']=0x0664;t['afii57397']=0x0665;t['afii57398']=0x0666;t['afii57399']=0x0667;t['afii57400']=0x0668;t['afii57401']=0x0669;t['afii57403']=0x061B;t['afii57407']=0x061F;t['afii57409']=0x0621;t['afii57410']=0x0622;t['afii57411']=0x0623;t['afii57412']=0x0624;t['afii57413']=0x0625;t['afii57414']=0x0626;t['afii57415']=0x0627;t['afii57416']=0x0628;t['afii57417']=0x0629;t['afii57418']=0x062A;t['afii57419']=0x062B;t['afii57420']=0x062C;t['afii57421']=0x062D;t['afii57422']=0x062E;t['afii57423']=0x062F;t['afii57424']=0x0630;t['afii57425']=0x0631;t['afii57426']=0x0632;t['afii57427']=0x0633;t['afii57428']=0x0634;t['afii57429']=0x0635;t['afii57430']=0x0636;t['afii57431']=0x0637;t['afii57432']=0x0638;t['afii57433']=0x0639;t['afii57434']=0x063A;t['afii57440']=0x0640;t['afii57441']=0x0641;t['afii57442']=0x0642;t['afii57443']=0x0643;t['afii57444']=0x0644;t['afii57445']=0x0645;t['afii57446']=0x0646;t['afii57448']=0x0648;t['afii57449']=0x0649;t['afii57450']=0x064A;t['afii57451']=0x064B;t['afii57452']=0x064C;t['afii57453']=0x064D;t['afii57454']=0x064E;t['afii57455']=0x064F;t['afii57456']=0x0650;t['afii57457']=0x0651;t['afii57458']=0x0652;t['afii57470']=0x0647;t['afii57505']=0x06A4;t['afii57506']=0x067E;t['afii57507']=0x0686;t['afii57508']=0x0698;t['afii57509']=0x06AF;t['afii57511']=0x0679;t['afii57512']=0x0688;t['afii57513']=0x0691;t['afii57514']=0x06BA;t['afii57519']=0x06D2;t['afii57534']=0x06D5;t['afii57636']=0x20AA;t['afii57645']=0x05BE;t['afii57658']=0x05C3;t['afii57664']=0x05D0;t['afii57665']=0x05D1;t['afii57666']=0x05D2;t['afii57667']=0x05D3;t['afii57668']=0x05D4;t['afii57669']=0x05D5;t['afii57670']=0x05D6;t['afii57671']=0x05D7;t['afii57672']=0x05D8;t['afii57673']=0x05D9;t['afii57674']=0x05DA;t['afii57675']=0x05DB;t['afii57676']=0x05DC;t['afii57677']=0x05DD;t['afii57678']=0x05DE;t['afii57679']=0x05DF;t['afii57680']=0x05E0;t['afii57681']=0x05E1;t['afii57682']=0x05E2;t['afii57683']=0x05E3;t['afii57684']=0x05E4;t['afii57685']=0x05E5;t['afii57686']=0x05E6;t['afii57687']=0x05E7;t['afii57688']=0x05E8;t['afii57689']=0x05E9;t['afii57690']=0x05EA;t['afii57694']=0xFB2A;t['afii57695']=0xFB2B;t['afii57700']=0xFB4B;t['afii57705']=0xFB1F;t['afii57716']=0x05F0;t['afii57717']=0x05F1;t['afii57718']=0x05F2;t['afii57723']=0xFB35;t['afii57793']=0x05B4;t['afii57794']=0x05B5;t['afii57795']=0x05B6;t['afii57796']=0x05BB;t['afii57797']=0x05B8;t['afii57798']=0x05B7;t['afii57799']=0x05B0;t['afii57800']=0x05B2;t['afii57801']=0x05B1;t['afii57802']=0x05B3;t['afii57803']=0x05C2;t['afii57804']=0x05C1;t['afii57806']=0x05B9;t['afii57807']=0x05BC;t['afii57839']=0x05BD;t['afii57841']=0x05BF;t['afii57842']=0x05C0;t['afii57929']=0x02BC;t['afii61248']=0x2105;t['afii61289']=0x2113;t['afii61352']=0x2116;t['afii61573']=0x202C;t['afii61574']=0x202D;t['afii61575']=0x202E;t['afii61664']=0x200C;t['afii63167']=0x066D;t['afii64937']=0x02BD;t['agrave']=0x00E0;t['agujarati']=0x0A85;t['agurmukhi']=0x0A05;t['ahiragana']=0x3042;t['ahookabove']=0x1EA3;t['aibengali']=0x0990;t['aibopomofo']=0x311E;t['aideva']=0x0910;t['aiecyrillic']=0x04D5;t['aigujarati']=0x0A90;t['aigurmukhi']=0x0A10;t['aimatragurmukhi']=0x0A48;t['ainarabic']=0x0639;t['ainfinalarabic']=0xFECA;t['aininitialarabic']=0xFECB;t['ainmedialarabic']=0xFECC;t['ainvertedbreve']=0x0203;t['aivowelsignbengali']=0x09C8;t['aivowelsigndeva']=0x0948;t['aivowelsigngujarati']=0x0AC8;t['akatakana']=0x30A2;t['akatakanahalfwidth']=0xFF71;t['akorean']=0x314F;t['alef']=0x05D0;t['alefarabic']=0x0627;t['alefdageshhebrew']=0xFB30;t['aleffinalarabic']=0xFE8E;t['alefhamzaabovearabic']=0x0623;t['alefhamzaabovefinalarabic']=0xFE84;t['alefhamzabelowarabic']=0x0625;t['alefhamzabelowfinalarabic']=0xFE88;t['alefhebrew']=0x05D0;t['aleflamedhebrew']=0xFB4F;t['alefmaddaabovearabic']=0x0622;t['alefmaddaabovefinalarabic']=0xFE82;t['alefmaksuraarabic']=0x0649;t['alefmaksurafinalarabic']=0xFEF0;t['alefmaksurainitialarabic']=0xFEF3;t['alefmaksuramedialarabic']=0xFEF4;t['alefpatahhebrew']=0xFB2E;t['alefqamatshebrew']=0xFB2F;t['aleph']=0x2135;t['allequal']=0x224C;t['alpha']=0x03B1;t['alphatonos']=0x03AC;t['amacron']=0x0101;t['amonospace']=0xFF41;t['ampersand']=0x0026;t['ampersandmonospace']=0xFF06;t['ampersandsmall']=0xF726;t['amsquare']=0x33C2;t['anbopomofo']=0x3122;t['angbopomofo']=0x3124;t['angbracketleft']=0x3008;t['angbracketright']=0x3009;t['angkhankhuthai']=0x0E5A;t['angle']=0x2220;t['anglebracketleft']=0x3008;t['anglebracketleftvertical']=0xFE3F;t['anglebracketright']=0x3009;t['anglebracketrightvertical']=0xFE40;t['angleleft']=0x2329;t['angleright']=0x232A;t['angstrom']=0x212B;t['anoteleia']=0x0387;t['anudattadeva']=0x0952;t['anusvarabengali']=0x0982;t['anusvaradeva']=0x0902;t['anusvaragujarati']=0x0A82;t['aogonek']=0x0105;t['apaatosquare']=0x3300;t['aparen']=0x249C;t['apostrophearmenian']=0x055A;t['apostrophemod']=0x02BC;t['apple']=0xF8FF;t['approaches']=0x2250;t['approxequal']=0x2248;t['approxequalorimage']=0x2252;t['approximatelyequal']=0x2245;t['araeaekorean']=0x318E;t['araeakorean']=0x318D;t['arc']=0x2312;t['arighthalfring']=0x1E9A;t['aring']=0x00E5;t['aringacute']=0x01FB;t['aringbelow']=0x1E01;t['arrowboth']=0x2194;t['arrowdashdown']=0x21E3;t['arrowdashleft']=0x21E0;t['arrowdashright']=0x21E2;t['arrowdashup']=0x21E1;t['arrowdblboth']=0x21D4;t['arrowdbldown']=0x21D3;t['arrowdblleft']=0x21D0;t['arrowdblright']=0x21D2;t['arrowdblup']=0x21D1;t['arrowdown']=0x2193;t['arrowdownleft']=0x2199;t['arrowdownright']=0x2198;t['arrowdownwhite']=0x21E9;t['arrowheaddownmod']=0x02C5;t['arrowheadleftmod']=0x02C2;t['arrowheadrightmod']=0x02C3;t['arrowheadupmod']=0x02C4;t['arrowhorizex']=0xF8E7;t['arrowleft']=0x2190;t['arrowleftdbl']=0x21D0;t['arrowleftdblstroke']=0x21CD;t['arrowleftoverright']=0x21C6;t['arrowleftwhite']=0x21E6;t['arrowright']=0x2192;t['arrowrightdblstroke']=0x21CF;t['arrowrightheavy']=0x279E;t['arrowrightoverleft']=0x21C4;t['arrowrightwhite']=0x21E8;t['arrowtableft']=0x21E4;t['arrowtabright']=0x21E5;t['arrowup']=0x2191;t['arrowupdn']=0x2195;t['arrowupdnbse']=0x21A8;t['arrowupdownbase']=0x21A8;t['arrowupleft']=0x2196;t['arrowupleftofdown']=0x21C5;t['arrowupright']=0x2197;t['arrowupwhite']=0x21E7;t['arrowvertex']=0xF8E6;t['asciicircum']=0x005E;t['asciicircummonospace']=0xFF3E;t['asciitilde']=0x007E;t['asciitildemonospace']=0xFF5E;t['ascript']=0x0251;t['ascriptturned']=0x0252;t['asmallhiragana']=0x3041;t['asmallkatakana']=0x30A1;t['asmallkatakanahalfwidth']=0xFF67;t['asterisk']=0x002A;t['asteriskaltonearabic']=0x066D;t['asteriskarabic']=0x066D;t['asteriskmath']=0x2217;t['asteriskmonospace']=0xFF0A;t['asterisksmall']=0xFE61;t['asterism']=0x2042;t['asuperior']=0xF6E9;t['asymptoticallyequal']=0x2243;t['at']=0x0040;t['atilde']=0x00E3;t['atmonospace']=0xFF20;t['atsmall']=0xFE6B;t['aturned']=0x0250;t['aubengali']=0x0994;t['aubopomofo']=0x3120;t['audeva']=0x0914;t['augujarati']=0x0A94;t['augurmukhi']=0x0A14;t['aulengthmarkbengali']=0x09D7;t['aumatragurmukhi']=0x0A4C;t['auvowelsignbengali']=0x09CC;t['auvowelsigndeva']=0x094C;t['auvowelsigngujarati']=0x0ACC;t['avagrahadeva']=0x093D;t['aybarmenian']=0x0561;t['ayin']=0x05E2;t['ayinaltonehebrew']=0xFB20;t['ayinhebrew']=0x05E2;t['b']=0x0062;t['babengali']=0x09AC;t['backslash']=0x005C;t['backslashmonospace']=0xFF3C;t['badeva']=0x092C;t['bagujarati']=0x0AAC;t['bagurmukhi']=0x0A2C;t['bahiragana']=0x3070;t['bahtthai']=0x0E3F;t['bakatakana']=0x30D0;t['bar']=0x007C;t['barmonospace']=0xFF5C;t['bbopomofo']=0x3105;t['bcircle']=0x24D1;t['bdotaccent']=0x1E03;t['bdotbelow']=0x1E05;t['beamedsixteenthnotes']=0x266C;t['because']=0x2235;t['becyrillic']=0x0431;t['beharabic']=0x0628;t['behfinalarabic']=0xFE90;t['behinitialarabic']=0xFE91;t['behiragana']=0x3079;t['behmedialarabic']=0xFE92;t['behmeeminitialarabic']=0xFC9F;t['behmeemisolatedarabic']=0xFC08;t['behnoonfinalarabic']=0xFC6D;t['bekatakana']=0x30D9;t['benarmenian']=0x0562;t['bet']=0x05D1;t['beta']=0x03B2;t['betasymbolgreek']=0x03D0;t['betdagesh']=0xFB31;t['betdageshhebrew']=0xFB31;t['bethebrew']=0x05D1;t['betrafehebrew']=0xFB4C;t['bhabengali']=0x09AD;t['bhadeva']=0x092D;t['bhagujarati']=0x0AAD;t['bhagurmukhi']=0x0A2D;t['bhook']=0x0253;t['bihiragana']=0x3073;t['bikatakana']=0x30D3;t['bilabialclick']=0x0298;t['bindigurmukhi']=0x0A02;t['birusquare']=0x3331;t['blackcircle']=0x25CF;t['blackdiamond']=0x25C6;t['blackdownpointingtriangle']=0x25BC;t['blackleftpointingpointer']=0x25C4;t['blackleftpointingtriangle']=0x25C0;t['blacklenticularbracketleft']=0x3010;t['blacklenticularbracketleftvertical']=0xFE3B;t['blacklenticularbracketright']=0x3011;t['blacklenticularbracketrightvertical']=0xFE3C;t['blacklowerlefttriangle']=0x25E3;t['blacklowerrighttriangle']=0x25E2;t['blackrectangle']=0x25AC;t['blackrightpointingpointer']=0x25BA;t['blackrightpointingtriangle']=0x25B6;t['blacksmallsquare']=0x25AA;t['blacksmilingface']=0x263B;t['blacksquare']=0x25A0;t['blackstar']=0x2605;t['blackupperlefttriangle']=0x25E4;t['blackupperrighttriangle']=0x25E5;t['blackuppointingsmalltriangle']=0x25B4;t['blackuppointingtriangle']=0x25B2;t['blank']=0x2423;t['blinebelow']=0x1E07;t['block']=0x2588;t['bmonospace']=0xFF42;t['bobaimaithai']=0x0E1A;t['bohiragana']=0x307C;t['bokatakana']=0x30DC;t['bparen']=0x249D;t['bqsquare']=0x33C3;t['braceex']=0xF8F4;t['braceleft']=0x007B;t['braceleftbt']=0xF8F3;t['braceleftmid']=0xF8F2;t['braceleftmonospace']=0xFF5B;t['braceleftsmall']=0xFE5B;t['bracelefttp']=0xF8F1;t['braceleftvertical']=0xFE37;t['braceright']=0x007D;t['bracerightbt']=0xF8FE;t['bracerightmid']=0xF8FD;t['bracerightmonospace']=0xFF5D;t['bracerightsmall']=0xFE5C;t['bracerighttp']=0xF8FC;t['bracerightvertical']=0xFE38;t['bracketleft']=0x005B;t['bracketleftbt']=0xF8F0;t['bracketleftex']=0xF8EF;t['bracketleftmonospace']=0xFF3B;t['bracketlefttp']=0xF8EE;t['bracketright']=0x005D;t['bracketrightbt']=0xF8FB;t['bracketrightex']=0xF8FA;t['bracketrightmonospace']=0xFF3D;t['bracketrighttp']=0xF8F9;t['breve']=0x02D8;t['brevebelowcmb']=0x032E;t['brevecmb']=0x0306;t['breveinvertedbelowcmb']=0x032F;t['breveinvertedcmb']=0x0311;t['breveinverteddoublecmb']=0x0361;t['bridgebelowcmb']=0x032A;t['bridgeinvertedbelowcmb']=0x033A;t['brokenbar']=0x00A6;t['bstroke']=0x0180;t['bsuperior']=0xF6EA;t['btopbar']=0x0183;t['buhiragana']=0x3076;t['bukatakana']=0x30D6;t['bullet']=0x2022;t['bulletinverse']=0x25D8;t['bulletoperator']=0x2219;t['bullseye']=0x25CE;t['c']=0x0063;t['caarmenian']=0x056E;t['cabengali']=0x099A;t['cacute']=0x0107;t['cadeva']=0x091A;t['cagujarati']=0x0A9A;t['cagurmukhi']=0x0A1A;t['calsquare']=0x3388;t['candrabindubengali']=0x0981;t['candrabinducmb']=0x0310;t['candrabindudeva']=0x0901;t['candrabindugujarati']=0x0A81;t['capslock']=0x21EA;t['careof']=0x2105;t['caron']=0x02C7;t['caronbelowcmb']=0x032C;t['caroncmb']=0x030C;t['carriagereturn']=0x21B5;t['cbopomofo']=0x3118;t['ccaron']=0x010D;t['ccedilla']=0x00E7;t['ccedillaacute']=0x1E09;t['ccircle']=0x24D2;t['ccircumflex']=0x0109;t['ccurl']=0x0255;t['cdot']=0x010B;t['cdotaccent']=0x010B;t['cdsquare']=0x33C5;t['cedilla']=0x00B8;t['cedillacmb']=0x0327;t['cent']=0x00A2;t['centigrade']=0x2103;t['centinferior']=0xF6DF;t['centmonospace']=0xFFE0;t['centoldstyle']=0xF7A2;t['centsuperior']=0xF6E0;t['chaarmenian']=0x0579;t['chabengali']=0x099B;t['chadeva']=0x091B;t['chagujarati']=0x0A9B;t['chagurmukhi']=0x0A1B;t['chbopomofo']=0x3114;t['cheabkhasiancyrillic']=0x04BD;t['checkmark']=0x2713;t['checyrillic']=0x0447;t['chedescenderabkhasiancyrillic']=0x04BF;t['chedescendercyrillic']=0x04B7;t['chedieresiscyrillic']=0x04F5;t['cheharmenian']=0x0573;t['chekhakassiancyrillic']=0x04CC;t['cheverticalstrokecyrillic']=0x04B9;t['chi']=0x03C7;t['chieuchacirclekorean']=0x3277;t['chieuchaparenkorean']=0x3217;t['chieuchcirclekorean']=0x3269;t['chieuchkorean']=0x314A;t['chieuchparenkorean']=0x3209;t['chochangthai']=0x0E0A;t['chochanthai']=0x0E08;t['chochingthai']=0x0E09;t['chochoethai']=0x0E0C;t['chook']=0x0188;t['cieucacirclekorean']=0x3276;t['cieucaparenkorean']=0x3216;t['cieuccirclekorean']=0x3268;t['cieuckorean']=0x3148;t['cieucparenkorean']=0x3208;t['cieucuparenkorean']=0x321C;t['circle']=0x25CB;t['circlecopyrt']=0x00A9;t['circlemultiply']=0x2297;t['circleot']=0x2299;t['circleplus']=0x2295;t['circlepostalmark']=0x3036;t['circlewithlefthalfblack']=0x25D0;t['circlewithrighthalfblack']=0x25D1;t['circumflex']=0x02C6;t['circumflexbelowcmb']=0x032D;t['circumflexcmb']=0x0302;t['clear']=0x2327;t['clickalveolar']=0x01C2;t['clickdental']=0x01C0;t['clicklateral']=0x01C1;t['clickretroflex']=0x01C3;t['club']=0x2663;t['clubsuitblack']=0x2663;t['clubsuitwhite']=0x2667;t['cmcubedsquare']=0x33A4;t['cmonospace']=0xFF43;t['cmsquaredsquare']=0x33A0;t['coarmenian']=0x0581;t['colon']=0x003A;t['colonmonetary']=0x20A1;t['colonmonospace']=0xFF1A;t['colonsign']=0x20A1;t['colonsmall']=0xFE55;t['colontriangularhalfmod']=0x02D1;t['colontriangularmod']=0x02D0;t['comma']=0x002C;t['commaabovecmb']=0x0313;t['commaaboverightcmb']=0x0315;t['commaaccent']=0xF6C3;t['commaarabic']=0x060C;t['commaarmenian']=0x055D;t['commainferior']=0xF6E1;t['commamonospace']=0xFF0C;t['commareversedabovecmb']=0x0314;t['commareversedmod']=0x02BD;t['commasmall']=0xFE50;t['commasuperior']=0xF6E2;t['commaturnedabovecmb']=0x0312;t['commaturnedmod']=0x02BB;t['compass']=0x263C;t['congruent']=0x2245;t['contourintegral']=0x222E;t['control']=0x2303;t['controlACK']=0x0006;t['controlBEL']=0x0007;t['controlBS']=0x0008;t['controlCAN']=0x0018;t['controlCR']=0x000D;t['controlDC1']=0x0011;t['controlDC2']=0x0012;t['controlDC3']=0x0013;t['controlDC4']=0x0014;t['controlDEL']=0x007F;t['controlDLE']=0x0010;t['controlEM']=0x0019;t['controlENQ']=0x0005;t['controlEOT']=0x0004;t['controlESC']=0x001B;t['controlETB']=0x0017;t['controlETX']=0x0003;t['controlFF']=0x000C;t['controlFS']=0x001C;t['controlGS']=0x001D;t['controlHT']=0x0009;t['controlLF']=0x000A;t['controlNAK']=0x0015;t['controlNULL']=0x0000;t['controlRS']=0x001E;t['controlSI']=0x000F;t['controlSO']=0x000E;t['controlSOT']=0x0002;t['controlSTX']=0x0001;t['controlSUB']=0x001A;t['controlSYN']=0x0016;t['controlUS']=0x001F;t['controlVT']=0x000B;t['copyright']=0x00A9;t['copyrightsans']=0xF8E9;t['copyrightserif']=0xF6D9;t['cornerbracketleft']=0x300C;t['cornerbracketlefthalfwidth']=0xFF62;t['cornerbracketleftvertical']=0xFE41;t['cornerbracketright']=0x300D;t['cornerbracketrighthalfwidth']=0xFF63;t['cornerbracketrightvertical']=0xFE42;t['corporationsquare']=0x337F;t['cosquare']=0x33C7;t['coverkgsquare']=0x33C6;t['cparen']=0x249E;t['cruzeiro']=0x20A2;t['cstretched']=0x0297;t['curlyand']=0x22CF;t['curlyor']=0x22CE;t['currency']=0x00A4;t['cyrBreve']=0xF6D1;t['cyrFlex']=0xF6D2;t['cyrbreve']=0xF6D4;t['cyrflex']=0xF6D5;t['d']=0x0064;t['daarmenian']=0x0564;t['dabengali']=0x09A6;t['dadarabic']=0x0636;t['dadeva']=0x0926;t['dadfinalarabic']=0xFEBE;t['dadinitialarabic']=0xFEBF;t['dadmedialarabic']=0xFEC0;t['dagesh']=0x05BC;t['dageshhebrew']=0x05BC;t['dagger']=0x2020;t['daggerdbl']=0x2021;t['dagujarati']=0x0AA6;t['dagurmukhi']=0x0A26;t['dahiragana']=0x3060;t['dakatakana']=0x30C0;t['dalarabic']=0x062F;t['dalet']=0x05D3;t['daletdagesh']=0xFB33;t['daletdageshhebrew']=0xFB33;t['dalethebrew']=0x05D3;t['dalfinalarabic']=0xFEAA;t['dammaarabic']=0x064F;t['dammalowarabic']=0x064F;t['dammatanaltonearabic']=0x064C;t['dammatanarabic']=0x064C;t['danda']=0x0964;t['dargahebrew']=0x05A7;t['dargalefthebrew']=0x05A7;t['dasiapneumatacyrilliccmb']=0x0485;t['dblGrave']=0xF6D3;t['dblanglebracketleft']=0x300A;t['dblanglebracketleftvertical']=0xFE3D;t['dblanglebracketright']=0x300B;t['dblanglebracketrightvertical']=0xFE3E;t['dblarchinvertedbelowcmb']=0x032B;t['dblarrowleft']=0x21D4;t['dblarrowright']=0x21D2;t['dbldanda']=0x0965;t['dblgrave']=0xF6D6;t['dblgravecmb']=0x030F;t['dblintegral']=0x222C;t['dbllowline']=0x2017;t['dbllowlinecmb']=0x0333;t['dbloverlinecmb']=0x033F;t['dblprimemod']=0x02BA;t['dblverticalbar']=0x2016;t['dblverticallineabovecmb']=0x030E;t['dbopomofo']=0x3109;t['dbsquare']=0x33C8;t['dcaron']=0x010F;t['dcedilla']=0x1E11;t['dcircle']=0x24D3;t['dcircumflexbelow']=0x1E13;t['dcroat']=0x0111;t['ddabengali']=0x09A1;t['ddadeva']=0x0921;t['ddagujarati']=0x0AA1;t['ddagurmukhi']=0x0A21;t['ddalarabic']=0x0688;t['ddalfinalarabic']=0xFB89;t['dddhadeva']=0x095C;t['ddhabengali']=0x09A2;t['ddhadeva']=0x0922;t['ddhagujarati']=0x0AA2;t['ddhagurmukhi']=0x0A22;t['ddotaccent']=0x1E0B;t['ddotbelow']=0x1E0D;t['decimalseparatorarabic']=0x066B;t['decimalseparatorpersian']=0x066B;t['decyrillic']=0x0434;t['degree']=0x00B0;t['dehihebrew']=0x05AD;t['dehiragana']=0x3067;t['deicoptic']=0x03EF;t['dekatakana']=0x30C7;t['deleteleft']=0x232B;t['deleteright']=0x2326;t['delta']=0x03B4;t['deltaturned']=0x018D;t['denominatorminusonenumeratorbengali']=0x09F8;t['dezh']=0x02A4;t['dhabengali']=0x09A7;t['dhadeva']=0x0927;t['dhagujarati']=0x0AA7;t['dhagurmukhi']=0x0A27;t['dhook']=0x0257;t['dialytikatonos']=0x0385;t['dialytikatonoscmb']=0x0344;t['diamond']=0x2666;t['diamondsuitwhite']=0x2662;t['dieresis']=0x00A8;t['dieresisacute']=0xF6D7;t['dieresisbelowcmb']=0x0324;t['dieresiscmb']=0x0308;t['dieresisgrave']=0xF6D8;t['dieresistonos']=0x0385;t['dihiragana']=0x3062;t['dikatakana']=0x30C2;t['dittomark']=0x3003;t['divide']=0x00F7;t['divides']=0x2223;t['divisionslash']=0x2215;t['djecyrillic']=0x0452;t['dkshade']=0x2593;t['dlinebelow']=0x1E0F;t['dlsquare']=0x3397;t['dmacron']=0x0111;t['dmonospace']=0xFF44;t['dnblock']=0x2584;t['dochadathai']=0x0E0E;t['dodekthai']=0x0E14;t['dohiragana']=0x3069;t['dokatakana']=0x30C9;t['dollar']=0x0024;t['dollarinferior']=0xF6E3;t['dollarmonospace']=0xFF04;t['dollaroldstyle']=0xF724;t['dollarsmall']=0xFE69;t['dollarsuperior']=0xF6E4;t['dong']=0x20AB;t['dorusquare']=0x3326;t['dotaccent']=0x02D9;t['dotaccentcmb']=0x0307;t['dotbelowcmb']=0x0323;t['dotbelowcomb']=0x0323;t['dotkatakana']=0x30FB;t['dotlessi']=0x0131;t['dotlessj']=0xF6BE;t['dotlessjstrokehook']=0x0284;t['dotmath']=0x22C5;t['dottedcircle']=0x25CC;t['doubleyodpatah']=0xFB1F;t['doubleyodpatahhebrew']=0xFB1F;t['downtackbelowcmb']=0x031E;t['downtackmod']=0x02D5;t['dparen']=0x249F;t['dsuperior']=0xF6EB;t['dtail']=0x0256;t['dtopbar']=0x018C;t['duhiragana']=0x3065;t['dukatakana']=0x30C5;t['dz']=0x01F3;t['dzaltone']=0x02A3;t['dzcaron']=0x01C6;t['dzcurl']=0x02A5;t['dzeabkhasiancyrillic']=0x04E1;t['dzecyrillic']=0x0455;t['dzhecyrillic']=0x045F;t['e']=0x0065;t['eacute']=0x00E9;t['earth']=0x2641;t['ebengali']=0x098F;t['ebopomofo']=0x311C;t['ebreve']=0x0115;t['ecandradeva']=0x090D;t['ecandragujarati']=0x0A8D;t['ecandravowelsigndeva']=0x0945;t['ecandravowelsigngujarati']=0x0AC5;t['ecaron']=0x011B;t['ecedillabreve']=0x1E1D;t['echarmenian']=0x0565;t['echyiwnarmenian']=0x0587;t['ecircle']=0x24D4;t['ecircumflex']=0x00EA;t['ecircumflexacute']=0x1EBF;t['ecircumflexbelow']=0x1E19;t['ecircumflexdotbelow']=0x1EC7;t['ecircumflexgrave']=0x1EC1;t['ecircumflexhookabove']=0x1EC3;t['ecircumflextilde']=0x1EC5;t['ecyrillic']=0x0454;t['edblgrave']=0x0205;t['edeva']=0x090F;t['edieresis']=0x00EB;t['edot']=0x0117;t['edotaccent']=0x0117;t['edotbelow']=0x1EB9;t['eegurmukhi']=0x0A0F;t['eematragurmukhi']=0x0A47;t['efcyrillic']=0x0444;t['egrave']=0x00E8;t['egujarati']=0x0A8F;t['eharmenian']=0x0567;t['ehbopomofo']=0x311D;t['ehiragana']=0x3048;t['ehookabove']=0x1EBB;t['eibopomofo']=0x311F;t['eight']=0x0038;t['eightarabic']=0x0668;t['eightbengali']=0x09EE;t['eightcircle']=0x2467;t['eightcircleinversesansserif']=0x2791;t['eightdeva']=0x096E;t['eighteencircle']=0x2471;t['eighteenparen']=0x2485;t['eighteenperiod']=0x2499;t['eightgujarati']=0x0AEE;t['eightgurmukhi']=0x0A6E;t['eighthackarabic']=0x0668;t['eighthangzhou']=0x3028;t['eighthnotebeamed']=0x266B;t['eightideographicparen']=0x3227;t['eightinferior']=0x2088;t['eightmonospace']=0xFF18;t['eightoldstyle']=0xF738;t['eightparen']=0x247B;t['eightperiod']=0x248F;t['eightpersian']=0x06F8;t['eightroman']=0x2177;t['eightsuperior']=0x2078;t['eightthai']=0x0E58;t['einvertedbreve']=0x0207;t['eiotifiedcyrillic']=0x0465;t['ekatakana']=0x30A8;t['ekatakanahalfwidth']=0xFF74;t['ekonkargurmukhi']=0x0A74;t['ekorean']=0x3154;t['elcyrillic']=0x043B;t['element']=0x2208;t['elevencircle']=0x246A;t['elevenparen']=0x247E;t['elevenperiod']=0x2492;t['elevenroman']=0x217A;t['ellipsis']=0x2026;t['ellipsisvertical']=0x22EE;t['emacron']=0x0113;t['emacronacute']=0x1E17;t['emacrongrave']=0x1E15;t['emcyrillic']=0x043C;t['emdash']=0x2014;t['emdashvertical']=0xFE31;t['emonospace']=0xFF45;t['emphasismarkarmenian']=0x055B;t['emptyset']=0x2205;t['enbopomofo']=0x3123;t['encyrillic']=0x043D;t['endash']=0x2013;t['endashvertical']=0xFE32;t['endescendercyrillic']=0x04A3;t['eng']=0x014B;t['engbopomofo']=0x3125;t['enghecyrillic']=0x04A5;t['enhookcyrillic']=0x04C8;t['enspace']=0x2002;t['eogonek']=0x0119;t['eokorean']=0x3153;t['eopen']=0x025B;t['eopenclosed']=0x029A;t['eopenreversed']=0x025C;t['eopenreversedclosed']=0x025E;t['eopenreversedhook']=0x025D;t['eparen']=0x24A0;t['epsilon']=0x03B5;t['epsilontonos']=0x03AD;t['equal']=0x003D;t['equalmonospace']=0xFF1D;t['equalsmall']=0xFE66;t['equalsuperior']=0x207C;t['equivalence']=0x2261;t['erbopomofo']=0x3126;t['ercyrillic']=0x0440;t['ereversed']=0x0258;t['ereversedcyrillic']=0x044D;t['escyrillic']=0x0441;t['esdescendercyrillic']=0x04AB;t['esh']=0x0283;t['eshcurl']=0x0286;t['eshortdeva']=0x090E;t['eshortvowelsigndeva']=0x0946;t['eshreversedloop']=0x01AA;t['eshsquatreversed']=0x0285;t['esmallhiragana']=0x3047;t['esmallkatakana']=0x30A7;t['esmallkatakanahalfwidth']=0xFF6A;t['estimated']=0x212E;t['esuperior']=0xF6EC;t['eta']=0x03B7;t['etarmenian']=0x0568;t['etatonos']=0x03AE;t['eth']=0x00F0;t['etilde']=0x1EBD;t['etildebelow']=0x1E1B;t['etnahtafoukhhebrew']=0x0591;t['etnahtafoukhlefthebrew']=0x0591;t['etnahtahebrew']=0x0591;t['etnahtalefthebrew']=0x0591;t['eturned']=0x01DD;t['eukorean']=0x3161;t['euro']=0x20AC;t['evowelsignbengali']=0x09C7;t['evowelsigndeva']=0x0947;t['evowelsigngujarati']=0x0AC7;t['exclam']=0x0021;t['exclamarmenian']=0x055C;t['exclamdbl']=0x203C;t['exclamdown']=0x00A1;t['exclamdownsmall']=0xF7A1;t['exclammonospace']=0xFF01;t['exclamsmall']=0xF721;t['existential']=0x2203;t['ezh']=0x0292;t['ezhcaron']=0x01EF;t['ezhcurl']=0x0293;t['ezhreversed']=0x01B9;t['ezhtail']=0x01BA;t['f']=0x0066;t['fadeva']=0x095E;t['fagurmukhi']=0x0A5E;t['fahrenheit']=0x2109;t['fathaarabic']=0x064E;t['fathalowarabic']=0x064E;t['fathatanarabic']=0x064B;t['fbopomofo']=0x3108;t['fcircle']=0x24D5;t['fdotaccent']=0x1E1F;t['feharabic']=0x0641;t['feharmenian']=0x0586;t['fehfinalarabic']=0xFED2;t['fehinitialarabic']=0xFED3;t['fehmedialarabic']=0xFED4;t['feicoptic']=0x03E5;t['female']=0x2640;t['ff']=0xFB00;t['ffi']=0xFB03;t['ffl']=0xFB04;t['fi']=0xFB01;t['fifteencircle']=0x246E;t['fifteenparen']=0x2482;t['fifteenperiod']=0x2496;t['figuredash']=0x2012;t['filledbox']=0x25A0;t['filledrect']=0x25AC;t['finalkaf']=0x05DA;t['finalkafdagesh']=0xFB3A;t['finalkafdageshhebrew']=0xFB3A;t['finalkafhebrew']=0x05DA;t['finalmem']=0x05DD;t['finalmemhebrew']=0x05DD;t['finalnun']=0x05DF;t['finalnunhebrew']=0x05DF;t['finalpe']=0x05E3;t['finalpehebrew']=0x05E3;t['finaltsadi']=0x05E5;t['finaltsadihebrew']=0x05E5;t['firsttonechinese']=0x02C9;t['fisheye']=0x25C9;t['fitacyrillic']=0x0473;t['five']=0x0035;t['fivearabic']=0x0665;t['fivebengali']=0x09EB;t['fivecircle']=0x2464;t['fivecircleinversesansserif']=0x278E;t['fivedeva']=0x096B;t['fiveeighths']=0x215D;t['fivegujarati']=0x0AEB;t['fivegurmukhi']=0x0A6B;t['fivehackarabic']=0x0665;t['fivehangzhou']=0x3025;t['fiveideographicparen']=0x3224;t['fiveinferior']=0x2085;t['fivemonospace']=0xFF15;t['fiveoldstyle']=0xF735;t['fiveparen']=0x2478;t['fiveperiod']=0x248C;t['fivepersian']=0x06F5;t['fiveroman']=0x2174;t['fivesuperior']=0x2075;t['fivethai']=0x0E55;t['fl']=0xFB02;t['florin']=0x0192;t['fmonospace']=0xFF46;t['fmsquare']=0x3399;t['fofanthai']=0x0E1F;t['fofathai']=0x0E1D;t['fongmanthai']=0x0E4F;t['forall']=0x2200;t['four']=0x0034;t['fourarabic']=0x0664;t['fourbengali']=0x09EA;t['fourcircle']=0x2463;t['fourcircleinversesansserif']=0x278D;t['fourdeva']=0x096A;t['fourgujarati']=0x0AEA;t['fourgurmukhi']=0x0A6A;t['fourhackarabic']=0x0664;t['fourhangzhou']=0x3024;t['fourideographicparen']=0x3223;t['fourinferior']=0x2084;t['fourmonospace']=0xFF14;t['fournumeratorbengali']=0x09F7;t['fouroldstyle']=0xF734;t['fourparen']=0x2477;t['fourperiod']=0x248B;t['fourpersian']=0x06F4;t['fourroman']=0x2173;t['foursuperior']=0x2074;t['fourteencircle']=0x246D;t['fourteenparen']=0x2481;t['fourteenperiod']=0x2495;t['fourthai']=0x0E54;t['fourthtonechinese']=0x02CB;t['fparen']=0x24A1;t['fraction']=0x2044;t['franc']=0x20A3;t['g']=0x0067;t['gabengali']=0x0997;t['gacute']=0x01F5;t['gadeva']=0x0917;t['gafarabic']=0x06AF;t['gaffinalarabic']=0xFB93;t['gafinitialarabic']=0xFB94;t['gafmedialarabic']=0xFB95;t['gagujarati']=0x0A97;t['gagurmukhi']=0x0A17;t['gahiragana']=0x304C;t['gakatakana']=0x30AC;t['gamma']=0x03B3;t['gammalatinsmall']=0x0263;t['gammasuperior']=0x02E0;t['gangiacoptic']=0x03EB;t['gbopomofo']=0x310D;t['gbreve']=0x011F;t['gcaron']=0x01E7;t['gcedilla']=0x0123;t['gcircle']=0x24D6;t['gcircumflex']=0x011D;t['gcommaaccent']=0x0123;t['gdot']=0x0121;t['gdotaccent']=0x0121;t['gecyrillic']=0x0433;t['gehiragana']=0x3052;t['gekatakana']=0x30B2;t['geometricallyequal']=0x2251;t['gereshaccenthebrew']=0x059C;t['gereshhebrew']=0x05F3;t['gereshmuqdamhebrew']=0x059D;t['germandbls']=0x00DF;t['gershayimaccenthebrew']=0x059E;t['gershayimhebrew']=0x05F4;t['getamark']=0x3013;t['ghabengali']=0x0998;t['ghadarmenian']=0x0572;t['ghadeva']=0x0918;t['ghagujarati']=0x0A98;t['ghagurmukhi']=0x0A18;t['ghainarabic']=0x063A;t['ghainfinalarabic']=0xFECE;t['ghaininitialarabic']=0xFECF;t['ghainmedialarabic']=0xFED0;t['ghemiddlehookcyrillic']=0x0495;t['ghestrokecyrillic']=0x0493;t['gheupturncyrillic']=0x0491;t['ghhadeva']=0x095A;t['ghhagurmukhi']=0x0A5A;t['ghook']=0x0260;t['ghzsquare']=0x3393;t['gihiragana']=0x304E;t['gikatakana']=0x30AE;t['gimarmenian']=0x0563;t['gimel']=0x05D2;t['gimeldagesh']=0xFB32;t['gimeldageshhebrew']=0xFB32;t['gimelhebrew']=0x05D2;t['gjecyrillic']=0x0453;t['glottalinvertedstroke']=0x01BE;t['glottalstop']=0x0294;t['glottalstopinverted']=0x0296;t['glottalstopmod']=0x02C0;t['glottalstopreversed']=0x0295;t['glottalstopreversedmod']=0x02C1;t['glottalstopreversedsuperior']=0x02E4;t['glottalstopstroke']=0x02A1;t['glottalstopstrokereversed']=0x02A2;t['gmacron']=0x1E21;t['gmonospace']=0xFF47;t['gohiragana']=0x3054;t['gokatakana']=0x30B4;t['gparen']=0x24A2;t['gpasquare']=0x33AC;t['gradient']=0x2207;t['grave']=0x0060;t['gravebelowcmb']=0x0316;t['gravecmb']=0x0300;t['gravecomb']=0x0300;t['gravedeva']=0x0953;t['gravelowmod']=0x02CE;t['gravemonospace']=0xFF40;t['gravetonecmb']=0x0340;t['greater']=0x003E;t['greaterequal']=0x2265;t['greaterequalorless']=0x22DB;t['greatermonospace']=0xFF1E;t['greaterorequivalent']=0x2273;t['greaterorless']=0x2277;t['greateroverequal']=0x2267;t['greatersmall']=0xFE65;t['gscript']=0x0261;t['gstroke']=0x01E5;t['guhiragana']=0x3050;t['guillemotleft']=0x00AB;t['guillemotright']=0x00BB;t['guilsinglleft']=0x2039;t['guilsinglright']=0x203A;t['gukatakana']=0x30B0;t['guramusquare']=0x3318;t['gysquare']=0x33C9;t['h']=0x0068;t['haabkhasiancyrillic']=0x04A9;t['haaltonearabic']=0x06C1;t['habengali']=0x09B9;t['hadescendercyrillic']=0x04B3;t['hadeva']=0x0939;t['hagujarati']=0x0AB9;t['hagurmukhi']=0x0A39;t['haharabic']=0x062D;t['hahfinalarabic']=0xFEA2;t['hahinitialarabic']=0xFEA3;t['hahiragana']=0x306F;t['hahmedialarabic']=0xFEA4;t['haitusquare']=0x332A;t['hakatakana']=0x30CF;t['hakatakanahalfwidth']=0xFF8A;t['halantgurmukhi']=0x0A4D;t['hamzaarabic']=0x0621;t['hamzalowarabic']=0x0621;t['hangulfiller']=0x3164;t['hardsigncyrillic']=0x044A;t['harpoonleftbarbup']=0x21BC;t['harpoonrightbarbup']=0x21C0;t['hasquare']=0x33CA;t['hatafpatah']=0x05B2;t['hatafpatah16']=0x05B2;t['hatafpatah23']=0x05B2;t['hatafpatah2f']=0x05B2;t['hatafpatahhebrew']=0x05B2;t['hatafpatahnarrowhebrew']=0x05B2;t['hatafpatahquarterhebrew']=0x05B2;t['hatafpatahwidehebrew']=0x05B2;t['hatafqamats']=0x05B3;t['hatafqamats1b']=0x05B3;t['hatafqamats28']=0x05B3;t['hatafqamats34']=0x05B3;t['hatafqamatshebrew']=0x05B3;t['hatafqamatsnarrowhebrew']=0x05B3;t['hatafqamatsquarterhebrew']=0x05B3;t['hatafqamatswidehebrew']=0x05B3;t['hatafsegol']=0x05B1;t['hatafsegol17']=0x05B1;t['hatafsegol24']=0x05B1;t['hatafsegol30']=0x05B1;t['hatafsegolhebrew']=0x05B1;t['hatafsegolnarrowhebrew']=0x05B1;t['hatafsegolquarterhebrew']=0x05B1;t['hatafsegolwidehebrew']=0x05B1;t['hbar']=0x0127;t['hbopomofo']=0x310F;t['hbrevebelow']=0x1E2B;t['hcedilla']=0x1E29;t['hcircle']=0x24D7;t['hcircumflex']=0x0125;t['hdieresis']=0x1E27;t['hdotaccent']=0x1E23;t['hdotbelow']=0x1E25;t['he']=0x05D4;t['heart']=0x2665;t['heartsuitblack']=0x2665;t['heartsuitwhite']=0x2661;t['hedagesh']=0xFB34;t['hedageshhebrew']=0xFB34;t['hehaltonearabic']=0x06C1;t['heharabic']=0x0647;t['hehebrew']=0x05D4;t['hehfinalaltonearabic']=0xFBA7;t['hehfinalalttwoarabic']=0xFEEA;t['hehfinalarabic']=0xFEEA;t['hehhamzaabovefinalarabic']=0xFBA5;t['hehhamzaaboveisolatedarabic']=0xFBA4;t['hehinitialaltonearabic']=0xFBA8;t['hehinitialarabic']=0xFEEB;t['hehiragana']=0x3078;t['hehmedialaltonearabic']=0xFBA9;t['hehmedialarabic']=0xFEEC;t['heiseierasquare']=0x337B;t['hekatakana']=0x30D8;t['hekatakanahalfwidth']=0xFF8D;t['hekutaarusquare']=0x3336;t['henghook']=0x0267;t['herutusquare']=0x3339;t['het']=0x05D7;t['hethebrew']=0x05D7;t['hhook']=0x0266;t['hhooksuperior']=0x02B1;t['hieuhacirclekorean']=0x327B;t['hieuhaparenkorean']=0x321B;t['hieuhcirclekorean']=0x326D;t['hieuhkorean']=0x314E;t['hieuhparenkorean']=0x320D;t['hihiragana']=0x3072;t['hikatakana']=0x30D2;t['hikatakanahalfwidth']=0xFF8B;t['hiriq']=0x05B4;t['hiriq14']=0x05B4;t['hiriq21']=0x05B4;t['hiriq2d']=0x05B4;t['hiriqhebrew']=0x05B4;t['hiriqnarrowhebrew']=0x05B4;t['hiriqquarterhebrew']=0x05B4;t['hiriqwidehebrew']=0x05B4;t['hlinebelow']=0x1E96;t['hmonospace']=0xFF48;t['hoarmenian']=0x0570;t['hohipthai']=0x0E2B;t['hohiragana']=0x307B;t['hokatakana']=0x30DB;t['hokatakanahalfwidth']=0xFF8E;t['holam']=0x05B9;t['holam19']=0x05B9;t['holam26']=0x05B9;t['holam32']=0x05B9;t['holamhebrew']=0x05B9;t['holamnarrowhebrew']=0x05B9;t['holamquarterhebrew']=0x05B9;t['holamwidehebrew']=0x05B9;t['honokhukthai']=0x0E2E;t['hookabovecomb']=0x0309;t['hookcmb']=0x0309;t['hookpalatalizedbelowcmb']=0x0321;t['hookretroflexbelowcmb']=0x0322;t['hoonsquare']=0x3342;t['horicoptic']=0x03E9;t['horizontalbar']=0x2015;t['horncmb']=0x031B;t['hotsprings']=0x2668;t['house']=0x2302;t['hparen']=0x24A3;t['hsuperior']=0x02B0;t['hturned']=0x0265;t['huhiragana']=0x3075;t['huiitosquare']=0x3333;t['hukatakana']=0x30D5;t['hukatakanahalfwidth']=0xFF8C;t['hungarumlaut']=0x02DD;t['hungarumlautcmb']=0x030B;t['hv']=0x0195;t['hyphen']=0x002D;t['hypheninferior']=0xF6E5;t['hyphenmonospace']=0xFF0D;t['hyphensmall']=0xFE63;t['hyphensuperior']=0xF6E6;t['hyphentwo']=0x2010;t['i']=0x0069;t['iacute']=0x00ED;t['iacyrillic']=0x044F;t['ibengali']=0x0987;t['ibopomofo']=0x3127;t['ibreve']=0x012D;t['icaron']=0x01D0;t['icircle']=0x24D8;t['icircumflex']=0x00EE;t['icyrillic']=0x0456;t['idblgrave']=0x0209;t['ideographearthcircle']=0x328F;t['ideographfirecircle']=0x328B;t['ideographicallianceparen']=0x323F;t['ideographiccallparen']=0x323A;t['ideographiccentrecircle']=0x32A5;t['ideographicclose']=0x3006;t['ideographiccomma']=0x3001;t['ideographiccommaleft']=0xFF64;t['ideographiccongratulationparen']=0x3237;t['ideographiccorrectcircle']=0x32A3;t['ideographicearthparen']=0x322F;t['ideographicenterpriseparen']=0x323D;t['ideographicexcellentcircle']=0x329D;t['ideographicfestivalparen']=0x3240;t['ideographicfinancialcircle']=0x3296;t['ideographicfinancialparen']=0x3236;t['ideographicfireparen']=0x322B;t['ideographichaveparen']=0x3232;t['ideographichighcircle']=0x32A4;t['ideographiciterationmark']=0x3005;t['ideographiclaborcircle']=0x3298;t['ideographiclaborparen']=0x3238;t['ideographicleftcircle']=0x32A7;t['ideographiclowcircle']=0x32A6;t['ideographicmedicinecircle']=0x32A9;t['ideographicmetalparen']=0x322E;t['ideographicmoonparen']=0x322A;t['ideographicnameparen']=0x3234;t['ideographicperiod']=0x3002;t['ideographicprintcircle']=0x329E;t['ideographicreachparen']=0x3243;t['ideographicrepresentparen']=0x3239;t['ideographicresourceparen']=0x323E;t['ideographicrightcircle']=0x32A8;t['ideographicsecretcircle']=0x3299;t['ideographicselfparen']=0x3242;t['ideographicsocietyparen']=0x3233;t['ideographicspace']=0x3000;t['ideographicspecialparen']=0x3235;t['ideographicstockparen']=0x3231;t['ideographicstudyparen']=0x323B;t['ideographicsunparen']=0x3230;t['ideographicsuperviseparen']=0x323C;t['ideographicwaterparen']=0x322C;t['ideographicwoodparen']=0x322D;t['ideographiczero']=0x3007;t['ideographmetalcircle']=0x328E;t['ideographmooncircle']=0x328A;t['ideographnamecircle']=0x3294;t['ideographsuncircle']=0x3290;t['ideographwatercircle']=0x328C;t['ideographwoodcircle']=0x328D;t['ideva']=0x0907;t['idieresis']=0x00EF;t['idieresisacute']=0x1E2F;t['idieresiscyrillic']=0x04E5;t['idotbelow']=0x1ECB;t['iebrevecyrillic']=0x04D7;t['iecyrillic']=0x0435;t['ieungacirclekorean']=0x3275;t['ieungaparenkorean']=0x3215;t['ieungcirclekorean']=0x3267;t['ieungkorean']=0x3147;t['ieungparenkorean']=0x3207;t['igrave']=0x00EC;t['igujarati']=0x0A87;t['igurmukhi']=0x0A07;t['ihiragana']=0x3044;t['ihookabove']=0x1EC9;t['iibengali']=0x0988;t['iicyrillic']=0x0438;t['iideva']=0x0908;t['iigujarati']=0x0A88;t['iigurmukhi']=0x0A08;t['iimatragurmukhi']=0x0A40;t['iinvertedbreve']=0x020B;t['iishortcyrillic']=0x0439;t['iivowelsignbengali']=0x09C0;t['iivowelsigndeva']=0x0940;t['iivowelsigngujarati']=0x0AC0;t['ij']=0x0133;t['ikatakana']=0x30A4;t['ikatakanahalfwidth']=0xFF72;t['ikorean']=0x3163;t['ilde']=0x02DC;t['iluyhebrew']=0x05AC;t['imacron']=0x012B;t['imacroncyrillic']=0x04E3;t['imageorapproximatelyequal']=0x2253;t['imatragurmukhi']=0x0A3F;t['imonospace']=0xFF49;t['increment']=0x2206;t['infinity']=0x221E;t['iniarmenian']=0x056B;t['integral']=0x222B;t['integralbottom']=0x2321;t['integralbt']=0x2321;t['integralex']=0xF8F5;t['integraltop']=0x2320;t['integraltp']=0x2320;t['intersection']=0x2229;t['intisquare']=0x3305;t['invbullet']=0x25D8;t['invcircle']=0x25D9;t['invsmileface']=0x263B;t['iocyrillic']=0x0451;t['iogonek']=0x012F;t['iota']=0x03B9;t['iotadieresis']=0x03CA;t['iotadieresistonos']=0x0390;t['iotalatin']=0x0269;t['iotatonos']=0x03AF;t['iparen']=0x24A4;t['irigurmukhi']=0x0A72;t['ismallhiragana']=0x3043;t['ismallkatakana']=0x30A3;t['ismallkatakanahalfwidth']=0xFF68;t['issharbengali']=0x09FA;t['istroke']=0x0268;t['isuperior']=0xF6ED;t['iterationhiragana']=0x309D;t['iterationkatakana']=0x30FD;t['itilde']=0x0129;t['itildebelow']=0x1E2D;t['iubopomofo']=0x3129;t['iucyrillic']=0x044E;t['ivowelsignbengali']=0x09BF;t['ivowelsigndeva']=0x093F;t['ivowelsigngujarati']=0x0ABF;t['izhitsacyrillic']=0x0475;t['izhitsadblgravecyrillic']=0x0477;t['j']=0x006A;t['jaarmenian']=0x0571;t['jabengali']=0x099C;t['jadeva']=0x091C;t['jagujarati']=0x0A9C;t['jagurmukhi']=0x0A1C;t['jbopomofo']=0x3110;t['jcaron']=0x01F0;t['jcircle']=0x24D9;t['jcircumflex']=0x0135;t['jcrossedtail']=0x029D;t['jdotlessstroke']=0x025F;t['jecyrillic']=0x0458;t['jeemarabic']=0x062C;t['jeemfinalarabic']=0xFE9E;t['jeeminitialarabic']=0xFE9F;t['jeemmedialarabic']=0xFEA0;t['jeharabic']=0x0698;t['jehfinalarabic']=0xFB8B;t['jhabengali']=0x099D;t['jhadeva']=0x091D;t['jhagujarati']=0x0A9D;t['jhagurmukhi']=0x0A1D;t['jheharmenian']=0x057B;t['jis']=0x3004;t['jmonospace']=0xFF4A;t['jparen']=0x24A5;t['jsuperior']=0x02B2;t['k']=0x006B;t['kabashkircyrillic']=0x04A1;t['kabengali']=0x0995;t['kacute']=0x1E31;t['kacyrillic']=0x043A;t['kadescendercyrillic']=0x049B;t['kadeva']=0x0915;t['kaf']=0x05DB;t['kafarabic']=0x0643;t['kafdagesh']=0xFB3B;t['kafdageshhebrew']=0xFB3B;t['kaffinalarabic']=0xFEDA;t['kafhebrew']=0x05DB;t['kafinitialarabic']=0xFEDB;t['kafmedialarabic']=0xFEDC;t['kafrafehebrew']=0xFB4D;t['kagujarati']=0x0A95;t['kagurmukhi']=0x0A15;t['kahiragana']=0x304B;t['kahookcyrillic']=0x04C4;t['kakatakana']=0x30AB;t['kakatakanahalfwidth']=0xFF76;t['kappa']=0x03BA;t['kappasymbolgreek']=0x03F0;t['kapyeounmieumkorean']=0x3171;t['kapyeounphieuphkorean']=0x3184;t['kapyeounpieupkorean']=0x3178;t['kapyeounssangpieupkorean']=0x3179;t['karoriisquare']=0x330D;t['kashidaautoarabic']=0x0640;t['kashidaautonosidebearingarabic']=0x0640;t['kasmallkatakana']=0x30F5;t['kasquare']=0x3384;t['kasraarabic']=0x0650;t['kasratanarabic']=0x064D;t['kastrokecyrillic']=0x049F;t['katahiraprolongmarkhalfwidth']=0xFF70;t['kaverticalstrokecyrillic']=0x049D;t['kbopomofo']=0x310E;t['kcalsquare']=0x3389;t['kcaron']=0x01E9;t['kcedilla']=0x0137;t['kcircle']=0x24DA;t['kcommaaccent']=0x0137;t['kdotbelow']=0x1E33;t['keharmenian']=0x0584;t['kehiragana']=0x3051;t['kekatakana']=0x30B1;t['kekatakanahalfwidth']=0xFF79;t['kenarmenian']=0x056F;t['kesmallkatakana']=0x30F6;t['kgreenlandic']=0x0138;t['khabengali']=0x0996;t['khacyrillic']=0x0445;t['khadeva']=0x0916;t['khagujarati']=0x0A96;t['khagurmukhi']=0x0A16;t['khaharabic']=0x062E;t['khahfinalarabic']=0xFEA6;t['khahinitialarabic']=0xFEA7;t['khahmedialarabic']=0xFEA8;t['kheicoptic']=0x03E7;t['khhadeva']=0x0959;t['khhagurmukhi']=0x0A59;t['khieukhacirclekorean']=0x3278;t['khieukhaparenkorean']=0x3218;t['khieukhcirclekorean']=0x326A;t['khieukhkorean']=0x314B;t['khieukhparenkorean']=0x320A;t['khokhaithai']=0x0E02;t['khokhonthai']=0x0E05;t['khokhuatthai']=0x0E03;t['khokhwaithai']=0x0E04;t['khomutthai']=0x0E5B;t['khook']=0x0199;t['khorakhangthai']=0x0E06;t['khzsquare']=0x3391;t['kihiragana']=0x304D;t['kikatakana']=0x30AD;t['kikatakanahalfwidth']=0xFF77;t['kiroguramusquare']=0x3315;t['kiromeetorusquare']=0x3316;t['kirosquare']=0x3314;t['kiyeokacirclekorean']=0x326E;t['kiyeokaparenkorean']=0x320E;t['kiyeokcirclekorean']=0x3260;t['kiyeokkorean']=0x3131;t['kiyeokparenkorean']=0x3200;t['kiyeoksioskorean']=0x3133;t['kjecyrillic']=0x045C;t['klinebelow']=0x1E35;t['klsquare']=0x3398;t['kmcubedsquare']=0x33A6;t['kmonospace']=0xFF4B;t['kmsquaredsquare']=0x33A2;t['kohiragana']=0x3053;t['kohmsquare']=0x33C0;t['kokaithai']=0x0E01;t['kokatakana']=0x30B3;t['kokatakanahalfwidth']=0xFF7A;t['kooposquare']=0x331E;t['koppacyrillic']=0x0481;t['koreanstandardsymbol']=0x327F;t['koroniscmb']=0x0343;t['kparen']=0x24A6;t['kpasquare']=0x33AA;t['ksicyrillic']=0x046F;t['ktsquare']=0x33CF;t['kturned']=0x029E;t['kuhiragana']=0x304F;t['kukatakana']=0x30AF;t['kukatakanahalfwidth']=0xFF78;t['kvsquare']=0x33B8;t['kwsquare']=0x33BE;t['l']=0x006C;t['labengali']=0x09B2;t['lacute']=0x013A;t['ladeva']=0x0932;t['lagujarati']=0x0AB2;t['lagurmukhi']=0x0A32;t['lakkhangyaothai']=0x0E45;t['lamaleffinalarabic']=0xFEFC;t['lamalefhamzaabovefinalarabic']=0xFEF8;t['lamalefhamzaaboveisolatedarabic']=0xFEF7;t['lamalefhamzabelowfinalarabic']=0xFEFA;t['lamalefhamzabelowisolatedarabic']=0xFEF9;t['lamalefisolatedarabic']=0xFEFB;t['lamalefmaddaabovefinalarabic']=0xFEF6;t['lamalefmaddaaboveisolatedarabic']=0xFEF5;t['lamarabic']=0x0644;t['lambda']=0x03BB;t['lambdastroke']=0x019B;t['lamed']=0x05DC;t['lameddagesh']=0xFB3C;t['lameddageshhebrew']=0xFB3C;t['lamedhebrew']=0x05DC;t['lamfinalarabic']=0xFEDE;t['lamhahinitialarabic']=0xFCCA;t['laminitialarabic']=0xFEDF;t['lamjeeminitialarabic']=0xFCC9;t['lamkhahinitialarabic']=0xFCCB;t['lamlamhehisolatedarabic']=0xFDF2;t['lammedialarabic']=0xFEE0;t['lammeemhahinitialarabic']=0xFD88;t['lammeeminitialarabic']=0xFCCC;t['largecircle']=0x25EF;t['lbar']=0x019A;t['lbelt']=0x026C;t['lbopomofo']=0x310C;t['lcaron']=0x013E;t['lcedilla']=0x013C;t['lcircle']=0x24DB;t['lcircumflexbelow']=0x1E3D;t['lcommaaccent']=0x013C;t['ldot']=0x0140;t['ldotaccent']=0x0140;t['ldotbelow']=0x1E37;t['ldotbelowmacron']=0x1E39;t['leftangleabovecmb']=0x031A;t['lefttackbelowcmb']=0x0318;t['less']=0x003C;t['lessequal']=0x2264;t['lessequalorgreater']=0x22DA;t['lessmonospace']=0xFF1C;t['lessorequivalent']=0x2272;t['lessorgreater']=0x2276;t['lessoverequal']=0x2266;t['lesssmall']=0xFE64;t['lezh']=0x026E;t['lfblock']=0x258C;t['lhookretroflex']=0x026D;t['lira']=0x20A4;t['liwnarmenian']=0x056C;t['lj']=0x01C9;t['ljecyrillic']=0x0459;t['ll']=0xF6C0;t['lladeva']=0x0933;t['llagujarati']=0x0AB3;t['llinebelow']=0x1E3B;t['llladeva']=0x0934;t['llvocalicbengali']=0x09E1;t['llvocalicdeva']=0x0961;t['llvocalicvowelsignbengali']=0x09E3;t['llvocalicvowelsigndeva']=0x0963;t['lmiddletilde']=0x026B;t['lmonospace']=0xFF4C;t['lmsquare']=0x33D0;t['lochulathai']=0x0E2C;t['logicaland']=0x2227;t['logicalnot']=0x00AC;t['logicalnotreversed']=0x2310;t['logicalor']=0x2228;t['lolingthai']=0x0E25;t['longs']=0x017F;t['lowlinecenterline']=0xFE4E;t['lowlinecmb']=0x0332;t['lowlinedashed']=0xFE4D;t['lozenge']=0x25CA;t['lparen']=0x24A7;t['lslash']=0x0142;t['lsquare']=0x2113;t['lsuperior']=0xF6EE;t['ltshade']=0x2591;t['luthai']=0x0E26;t['lvocalicbengali']=0x098C;t['lvocalicdeva']=0x090C;t['lvocalicvowelsignbengali']=0x09E2;t['lvocalicvowelsigndeva']=0x0962;t['lxsquare']=0x33D3;t['m']=0x006D;t['mabengali']=0x09AE;t['macron']=0x00AF;t['macronbelowcmb']=0x0331;t['macroncmb']=0x0304;t['macronlowmod']=0x02CD;t['macronmonospace']=0xFFE3;t['macute']=0x1E3F;t['madeva']=0x092E;t['magujarati']=0x0AAE;t['magurmukhi']=0x0A2E;t['mahapakhhebrew']=0x05A4;t['mahapakhlefthebrew']=0x05A4;t['mahiragana']=0x307E;t['maichattawalowleftthai']=0xF895;t['maichattawalowrightthai']=0xF894;t['maichattawathai']=0x0E4B;t['maichattawaupperleftthai']=0xF893;t['maieklowleftthai']=0xF88C;t['maieklowrightthai']=0xF88B;t['maiekthai']=0x0E48;t['maiekupperleftthai']=0xF88A;t['maihanakatleftthai']=0xF884;t['maihanakatthai']=0x0E31;t['maitaikhuleftthai']=0xF889;t['maitaikhuthai']=0x0E47;t['maitholowleftthai']=0xF88F;t['maitholowrightthai']=0xF88E;t['maithothai']=0x0E49;t['maithoupperleftthai']=0xF88D;t['maitrilowleftthai']=0xF892;t['maitrilowrightthai']=0xF891;t['maitrithai']=0x0E4A;t['maitriupperleftthai']=0xF890;t['maiyamokthai']=0x0E46;t['makatakana']=0x30DE;t['makatakanahalfwidth']=0xFF8F;t['male']=0x2642;t['mansyonsquare']=0x3347;t['maqafhebrew']=0x05BE;t['mars']=0x2642;t['masoracirclehebrew']=0x05AF;t['masquare']=0x3383;t['mbopomofo']=0x3107;t['mbsquare']=0x33D4;t['mcircle']=0x24DC;t['mcubedsquare']=0x33A5;t['mdotaccent']=0x1E41;t['mdotbelow']=0x1E43;t['meemarabic']=0x0645;t['meemfinalarabic']=0xFEE2;t['meeminitialarabic']=0xFEE3;t['meemmedialarabic']=0xFEE4;t['meemmeeminitialarabic']=0xFCD1;t['meemmeemisolatedarabic']=0xFC48;t['meetorusquare']=0x334D;t['mehiragana']=0x3081;t['meizierasquare']=0x337E;t['mekatakana']=0x30E1;t['mekatakanahalfwidth']=0xFF92;t['mem']=0x05DE;t['memdagesh']=0xFB3E;t['memdageshhebrew']=0xFB3E;t['memhebrew']=0x05DE;t['menarmenian']=0x0574;t['merkhahebrew']=0x05A5;t['merkhakefulahebrew']=0x05A6;t['merkhakefulalefthebrew']=0x05A6;t['merkhalefthebrew']=0x05A5;t['mhook']=0x0271;t['mhzsquare']=0x3392;t['middledotkatakanahalfwidth']=0xFF65;t['middot']=0x00B7;t['mieumacirclekorean']=0x3272;t['mieumaparenkorean']=0x3212;t['mieumcirclekorean']=0x3264;t['mieumkorean']=0x3141;t['mieumpansioskorean']=0x3170;t['mieumparenkorean']=0x3204;t['mieumpieupkorean']=0x316E;t['mieumsioskorean']=0x316F;t['mihiragana']=0x307F;t['mikatakana']=0x30DF;t['mikatakanahalfwidth']=0xFF90;t['minus']=0x2212;t['minusbelowcmb']=0x0320;t['minuscircle']=0x2296;t['minusmod']=0x02D7;t['minusplus']=0x2213;t['minute']=0x2032;t['miribaarusquare']=0x334A;t['mirisquare']=0x3349;t['mlonglegturned']=0x0270;t['mlsquare']=0x3396;t['mmcubedsquare']=0x33A3;t['mmonospace']=0xFF4D;t['mmsquaredsquare']=0x339F;t['mohiragana']=0x3082;t['mohmsquare']=0x33C1;t['mokatakana']=0x30E2;t['mokatakanahalfwidth']=0xFF93;t['molsquare']=0x33D6;t['momathai']=0x0E21;t['moverssquare']=0x33A7;t['moverssquaredsquare']=0x33A8;t['mparen']=0x24A8;t['mpasquare']=0x33AB;t['mssquare']=0x33B3;t['msuperior']=0xF6EF;t['mturned']=0x026F;t['mu']=0x00B5;t['mu1']=0x00B5;t['muasquare']=0x3382;t['muchgreater']=0x226B;t['muchless']=0x226A;t['mufsquare']=0x338C;t['mugreek']=0x03BC;t['mugsquare']=0x338D;t['muhiragana']=0x3080;t['mukatakana']=0x30E0;t['mukatakanahalfwidth']=0xFF91;t['mulsquare']=0x3395;t['multiply']=0x00D7;t['mumsquare']=0x339B;t['munahhebrew']=0x05A3;t['munahlefthebrew']=0x05A3;t['musicalnote']=0x266A;t['musicalnotedbl']=0x266B;t['musicflatsign']=0x266D;t['musicsharpsign']=0x266F;t['mussquare']=0x33B2;t['muvsquare']=0x33B6;t['muwsquare']=0x33BC;t['mvmegasquare']=0x33B9;t['mvsquare']=0x33B7;t['mwmegasquare']=0x33BF;t['mwsquare']=0x33BD;t['n']=0x006E;t['nabengali']=0x09A8;t['nabla']=0x2207;t['nacute']=0x0144;t['nadeva']=0x0928;t['nagujarati']=0x0AA8;t['nagurmukhi']=0x0A28;t['nahiragana']=0x306A;t['nakatakana']=0x30CA;t['nakatakanahalfwidth']=0xFF85;t['napostrophe']=0x0149;t['nasquare']=0x3381;t['nbopomofo']=0x310B;t['nbspace']=0x00A0;t['ncaron']=0x0148;t['ncedilla']=0x0146;t['ncircle']=0x24DD;t['ncircumflexbelow']=0x1E4B;t['ncommaaccent']=0x0146;t['ndotaccent']=0x1E45;t['ndotbelow']=0x1E47;t['nehiragana']=0x306D;t['nekatakana']=0x30CD;t['nekatakanahalfwidth']=0xFF88;t['newsheqelsign']=0x20AA;t['nfsquare']=0x338B;t['ngabengali']=0x0999;t['ngadeva']=0x0919;t['ngagujarati']=0x0A99;t['ngagurmukhi']=0x0A19;t['ngonguthai']=0x0E07;t['nhiragana']=0x3093;t['nhookleft']=0x0272;t['nhookretroflex']=0x0273;t['nieunacirclekorean']=0x326F;t['nieunaparenkorean']=0x320F;t['nieuncieuckorean']=0x3135;t['nieuncirclekorean']=0x3261;t['nieunhieuhkorean']=0x3136;t['nieunkorean']=0x3134;t['nieunpansioskorean']=0x3168;t['nieunparenkorean']=0x3201;t['nieunsioskorean']=0x3167;t['nieuntikeutkorean']=0x3166;t['nihiragana']=0x306B;t['nikatakana']=0x30CB;t['nikatakanahalfwidth']=0xFF86;t['nikhahitleftthai']=0xF899;t['nikhahitthai']=0x0E4D;t['nine']=0x0039;t['ninearabic']=0x0669;t['ninebengali']=0x09EF;t['ninecircle']=0x2468;t['ninecircleinversesansserif']=0x2792;t['ninedeva']=0x096F;t['ninegujarati']=0x0AEF;t['ninegurmukhi']=0x0A6F;t['ninehackarabic']=0x0669;t['ninehangzhou']=0x3029;t['nineideographicparen']=0x3228;t['nineinferior']=0x2089;t['ninemonospace']=0xFF19;t['nineoldstyle']=0xF739;t['nineparen']=0x247C;t['nineperiod']=0x2490;t['ninepersian']=0x06F9;t['nineroman']=0x2178;t['ninesuperior']=0x2079;t['nineteencircle']=0x2472;t['nineteenparen']=0x2486;t['nineteenperiod']=0x249A;t['ninethai']=0x0E59;t['nj']=0x01CC;t['njecyrillic']=0x045A;t['nkatakana']=0x30F3;t['nkatakanahalfwidth']=0xFF9D;t['nlegrightlong']=0x019E;t['nlinebelow']=0x1E49;t['nmonospace']=0xFF4E;t['nmsquare']=0x339A;t['nnabengali']=0x09A3;t['nnadeva']=0x0923;t['nnagujarati']=0x0AA3;t['nnagurmukhi']=0x0A23;t['nnnadeva']=0x0929;t['nohiragana']=0x306E;t['nokatakana']=0x30CE;t['nokatakanahalfwidth']=0xFF89;t['nonbreakingspace']=0x00A0;t['nonenthai']=0x0E13;t['nonuthai']=0x0E19;t['noonarabic']=0x0646;t['noonfinalarabic']=0xFEE6;t['noonghunnaarabic']=0x06BA;t['noonghunnafinalarabic']=0xFB9F;t['nooninitialarabic']=0xFEE7;t['noonjeeminitialarabic']=0xFCD2;t['noonjeemisolatedarabic']=0xFC4B;t['noonmedialarabic']=0xFEE8;t['noonmeeminitialarabic']=0xFCD5;t['noonmeemisolatedarabic']=0xFC4E;t['noonnoonfinalarabic']=0xFC8D;t['notcontains']=0x220C;t['notelement']=0x2209;t['notelementof']=0x2209;t['notequal']=0x2260;t['notgreater']=0x226F;t['notgreaternorequal']=0x2271;t['notgreaternorless']=0x2279;t['notidentical']=0x2262;t['notless']=0x226E;t['notlessnorequal']=0x2270;t['notparallel']=0x2226;t['notprecedes']=0x2280;t['notsubset']=0x2284;t['notsucceeds']=0x2281;t['notsuperset']=0x2285;t['nowarmenian']=0x0576;t['nparen']=0x24A9;t['nssquare']=0x33B1;t['nsuperior']=0x207F;t['ntilde']=0x00F1;t['nu']=0x03BD;t['nuhiragana']=0x306C;t['nukatakana']=0x30CC;t['nukatakanahalfwidth']=0xFF87;t['nuktabengali']=0x09BC;t['nuktadeva']=0x093C;t['nuktagujarati']=0x0ABC;t['nuktagurmukhi']=0x0A3C;t['numbersign']=0x0023;t['numbersignmonospace']=0xFF03;t['numbersignsmall']=0xFE5F;t['numeralsigngreek']=0x0374;t['numeralsignlowergreek']=0x0375;t['numero']=0x2116;t['nun']=0x05E0;t['nundagesh']=0xFB40;t['nundageshhebrew']=0xFB40;t['nunhebrew']=0x05E0;t['nvsquare']=0x33B5;t['nwsquare']=0x33BB;t['nyabengali']=0x099E;t['nyadeva']=0x091E;t['nyagujarati']=0x0A9E;t['nyagurmukhi']=0x0A1E;t['o']=0x006F;t['oacute']=0x00F3;t['oangthai']=0x0E2D;t['obarred']=0x0275;t['obarredcyrillic']=0x04E9;t['obarreddieresiscyrillic']=0x04EB;t['obengali']=0x0993;t['obopomofo']=0x311B;t['obreve']=0x014F;t['ocandradeva']=0x0911;t['ocandragujarati']=0x0A91;t['ocandravowelsigndeva']=0x0949;t['ocandravowelsigngujarati']=0x0AC9;t['ocaron']=0x01D2;t['ocircle']=0x24DE;t['ocircumflex']=0x00F4;t['ocircumflexacute']=0x1ED1;t['ocircumflexdotbelow']=0x1ED9;t['ocircumflexgrave']=0x1ED3;t['ocircumflexhookabove']=0x1ED5;t['ocircumflextilde']=0x1ED7;t['ocyrillic']=0x043E;t['odblacute']=0x0151;t['odblgrave']=0x020D;t['odeva']=0x0913;t['odieresis']=0x00F6;t['odieresiscyrillic']=0x04E7;t['odotbelow']=0x1ECD;t['oe']=0x0153;t['oekorean']=0x315A;t['ogonek']=0x02DB;t['ogonekcmb']=0x0328;t['ograve']=0x00F2;t['ogujarati']=0x0A93;t['oharmenian']=0x0585;t['ohiragana']=0x304A;t['ohookabove']=0x1ECF;t['ohorn']=0x01A1;t['ohornacute']=0x1EDB;t['ohorndotbelow']=0x1EE3;t['ohorngrave']=0x1EDD;t['ohornhookabove']=0x1EDF;t['ohorntilde']=0x1EE1;t['ohungarumlaut']=0x0151;t['oi']=0x01A3;t['oinvertedbreve']=0x020F;t['okatakana']=0x30AA;t['okatakanahalfwidth']=0xFF75;t['okorean']=0x3157;t['olehebrew']=0x05AB;t['omacron']=0x014D;t['omacronacute']=0x1E53;t['omacrongrave']=0x1E51;t['omdeva']=0x0950;t['omega']=0x03C9;t['omega1']=0x03D6;t['omegacyrillic']=0x0461;t['omegalatinclosed']=0x0277;t['omegaroundcyrillic']=0x047B;t['omegatitlocyrillic']=0x047D;t['omegatonos']=0x03CE;t['omgujarati']=0x0AD0;t['omicron']=0x03BF;t['omicrontonos']=0x03CC;t['omonospace']=0xFF4F;t['one']=0x0031;t['onearabic']=0x0661;t['onebengali']=0x09E7;t['onecircle']=0x2460;t['onecircleinversesansserif']=0x278A;t['onedeva']=0x0967;t['onedotenleader']=0x2024;t['oneeighth']=0x215B;t['onefitted']=0xF6DC;t['onegujarati']=0x0AE7;t['onegurmukhi']=0x0A67;t['onehackarabic']=0x0661;t['onehalf']=0x00BD;t['onehangzhou']=0x3021;t['oneideographicparen']=0x3220;t['oneinferior']=0x2081;t['onemonospace']=0xFF11;t['onenumeratorbengali']=0x09F4;t['oneoldstyle']=0xF731;t['oneparen']=0x2474;t['oneperiod']=0x2488;t['onepersian']=0x06F1;t['onequarter']=0x00BC;t['oneroman']=0x2170;t['onesuperior']=0x00B9;t['onethai']=0x0E51;t['onethird']=0x2153;t['oogonek']=0x01EB;t['oogonekmacron']=0x01ED;t['oogurmukhi']=0x0A13;t['oomatragurmukhi']=0x0A4B;t['oopen']=0x0254;t['oparen']=0x24AA;t['openbullet']=0x25E6;t['option']=0x2325;t['ordfeminine']=0x00AA;t['ordmasculine']=0x00BA;t['orthogonal']=0x221F;t['oshortdeva']=0x0912;t['oshortvowelsigndeva']=0x094A;t['oslash']=0x00F8;t['oslashacute']=0x01FF;t['osmallhiragana']=0x3049;t['osmallkatakana']=0x30A9;t['osmallkatakanahalfwidth']=0xFF6B;t['ostrokeacute']=0x01FF;t['osuperior']=0xF6F0;t['otcyrillic']=0x047F;t['otilde']=0x00F5;t['otildeacute']=0x1E4D;t['otildedieresis']=0x1E4F;t['oubopomofo']=0x3121;t['overline']=0x203E;t['overlinecenterline']=0xFE4A;t['overlinecmb']=0x0305;t['overlinedashed']=0xFE49;t['overlinedblwavy']=0xFE4C;t['overlinewavy']=0xFE4B;t['overscore']=0x00AF;t['ovowelsignbengali']=0x09CB;t['ovowelsigndeva']=0x094B;t['ovowelsigngujarati']=0x0ACB;t['p']=0x0070;t['paampssquare']=0x3380;t['paasentosquare']=0x332B;t['pabengali']=0x09AA;t['pacute']=0x1E55;t['padeva']=0x092A;t['pagedown']=0x21DF;t['pageup']=0x21DE;t['pagujarati']=0x0AAA;t['pagurmukhi']=0x0A2A;t['pahiragana']=0x3071;t['paiyannoithai']=0x0E2F;t['pakatakana']=0x30D1;t['palatalizationcyrilliccmb']=0x0484;t['palochkacyrillic']=0x04C0;t['pansioskorean']=0x317F;t['paragraph']=0x00B6;t['parallel']=0x2225;t['parenleft']=0x0028;t['parenleftaltonearabic']=0xFD3E;t['parenleftbt']=0xF8ED;t['parenleftex']=0xF8EC;t['parenleftinferior']=0x208D;t['parenleftmonospace']=0xFF08;t['parenleftsmall']=0xFE59;t['parenleftsuperior']=0x207D;t['parenlefttp']=0xF8EB;t['parenleftvertical']=0xFE35;t['parenright']=0x0029;t['parenrightaltonearabic']=0xFD3F;t['parenrightbt']=0xF8F8;t['parenrightex']=0xF8F7;t['parenrightinferior']=0x208E;t['parenrightmonospace']=0xFF09;t['parenrightsmall']=0xFE5A;t['parenrightsuperior']=0x207E;t['parenrighttp']=0xF8F6;t['parenrightvertical']=0xFE36;t['partialdiff']=0x2202;t['paseqhebrew']=0x05C0;t['pashtahebrew']=0x0599;t['pasquare']=0x33A9;t['patah']=0x05B7;t['patah11']=0x05B7;t['patah1d']=0x05B7;t['patah2a']=0x05B7;t['patahhebrew']=0x05B7;t['patahnarrowhebrew']=0x05B7;t['patahquarterhebrew']=0x05B7;t['patahwidehebrew']=0x05B7;t['pazerhebrew']=0x05A1;t['pbopomofo']=0x3106;t['pcircle']=0x24DF;t['pdotaccent']=0x1E57;t['pe']=0x05E4;t['pecyrillic']=0x043F;t['pedagesh']=0xFB44;t['pedageshhebrew']=0xFB44;t['peezisquare']=0x333B;t['pefinaldageshhebrew']=0xFB43;t['peharabic']=0x067E;t['peharmenian']=0x057A;t['pehebrew']=0x05E4;t['pehfinalarabic']=0xFB57;t['pehinitialarabic']=0xFB58;t['pehiragana']=0x307A;t['pehmedialarabic']=0xFB59;t['pekatakana']=0x30DA;t['pemiddlehookcyrillic']=0x04A7;t['perafehebrew']=0xFB4E;t['percent']=0x0025;t['percentarabic']=0x066A;t['percentmonospace']=0xFF05;t['percentsmall']=0xFE6A;t['period']=0x002E;t['periodarmenian']=0x0589;t['periodcentered']=0x00B7;t['periodhalfwidth']=0xFF61;t['periodinferior']=0xF6E7;t['periodmonospace']=0xFF0E;t['periodsmall']=0xFE52;t['periodsuperior']=0xF6E8;t['perispomenigreekcmb']=0x0342;t['perpendicular']=0x22A5;t['perthousand']=0x2030;t['peseta']=0x20A7;t['pfsquare']=0x338A;t['phabengali']=0x09AB;t['phadeva']=0x092B;t['phagujarati']=0x0AAB;t['phagurmukhi']=0x0A2B;t['phi']=0x03C6;t['phi1']=0x03D5;t['phieuphacirclekorean']=0x327A;t['phieuphaparenkorean']=0x321A;t['phieuphcirclekorean']=0x326C;t['phieuphkorean']=0x314D;t['phieuphparenkorean']=0x320C;t['philatin']=0x0278;t['phinthuthai']=0x0E3A;t['phisymbolgreek']=0x03D5;t['phook']=0x01A5;t['phophanthai']=0x0E1E;t['phophungthai']=0x0E1C;t['phosamphaothai']=0x0E20;t['pi']=0x03C0;t['pieupacirclekorean']=0x3273;t['pieupaparenkorean']=0x3213;t['pieupcieuckorean']=0x3176;t['pieupcirclekorean']=0x3265;t['pieupkiyeokkorean']=0x3172;t['pieupkorean']=0x3142;t['pieupparenkorean']=0x3205;t['pieupsioskiyeokkorean']=0x3174;t['pieupsioskorean']=0x3144;t['pieupsiostikeutkorean']=0x3175;t['pieupthieuthkorean']=0x3177;t['pieuptikeutkorean']=0x3173;t['pihiragana']=0x3074;t['pikatakana']=0x30D4;t['pisymbolgreek']=0x03D6;t['piwrarmenian']=0x0583;t['plus']=0x002B;t['plusbelowcmb']=0x031F;t['pluscircle']=0x2295;t['plusminus']=0x00B1;t['plusmod']=0x02D6;t['plusmonospace']=0xFF0B;t['plussmall']=0xFE62;t['plussuperior']=0x207A;t['pmonospace']=0xFF50;t['pmsquare']=0x33D8;t['pohiragana']=0x307D;t['pointingindexdownwhite']=0x261F;t['pointingindexleftwhite']=0x261C;t['pointingindexrightwhite']=0x261E;t['pointingindexupwhite']=0x261D;t['pokatakana']=0x30DD;t['poplathai']=0x0E1B;t['postalmark']=0x3012;t['postalmarkface']=0x3020;t['pparen']=0x24AB;t['precedes']=0x227A;t['prescription']=0x211E;t['primemod']=0x02B9;t['primereversed']=0x2035;t['product']=0x220F;t['projective']=0x2305;t['prolongedkana']=0x30FC;t['propellor']=0x2318;t['propersubset']=0x2282;t['propersuperset']=0x2283;t['proportion']=0x2237;t['proportional']=0x221D;t['psi']=0x03C8;t['psicyrillic']=0x0471;t['psilipneumatacyrilliccmb']=0x0486;t['pssquare']=0x33B0;t['puhiragana']=0x3077;t['pukatakana']=0x30D7;t['pvsquare']=0x33B4;t['pwsquare']=0x33BA;t['q']=0x0071;t['qadeva']=0x0958;t['qadmahebrew']=0x05A8;t['qafarabic']=0x0642;t['qaffinalarabic']=0xFED6;t['qafinitialarabic']=0xFED7;t['qafmedialarabic']=0xFED8;t['qamats']=0x05B8;t['qamats10']=0x05B8;t['qamats1a']=0x05B8;t['qamats1c']=0x05B8;t['qamats27']=0x05B8;t['qamats29']=0x05B8;t['qamats33']=0x05B8;t['qamatsde']=0x05B8;t['qamatshebrew']=0x05B8;t['qamatsnarrowhebrew']=0x05B8;t['qamatsqatanhebrew']=0x05B8;t['qamatsqatannarrowhebrew']=0x05B8;t['qamatsqatanquarterhebrew']=0x05B8;t['qamatsqatanwidehebrew']=0x05B8;t['qamatsquarterhebrew']=0x05B8;t['qamatswidehebrew']=0x05B8;t['qarneyparahebrew']=0x059F;t['qbopomofo']=0x3111;t['qcircle']=0x24E0;t['qhook']=0x02A0;t['qmonospace']=0xFF51;t['qof']=0x05E7;t['qofdagesh']=0xFB47;t['qofdageshhebrew']=0xFB47;t['qofhebrew']=0x05E7;t['qparen']=0x24AC;t['quarternote']=0x2669;t['qubuts']=0x05BB;t['qubuts18']=0x05BB;t['qubuts25']=0x05BB;t['qubuts31']=0x05BB;t['qubutshebrew']=0x05BB;t['qubutsnarrowhebrew']=0x05BB;t['qubutsquarterhebrew']=0x05BB;t['qubutswidehebrew']=0x05BB;t['question']=0x003F;t['questionarabic']=0x061F;t['questionarmenian']=0x055E;t['questiondown']=0x00BF;t['questiondownsmall']=0xF7BF;t['questiongreek']=0x037E;t['questionmonospace']=0xFF1F;t['questionsmall']=0xF73F;t['quotedbl']=0x0022;t['quotedblbase']=0x201E;t['quotedblleft']=0x201C;t['quotedblmonospace']=0xFF02;t['quotedblprime']=0x301E;t['quotedblprimereversed']=0x301D;t['quotedblright']=0x201D;t['quoteleft']=0x2018;t['quoteleftreversed']=0x201B;t['quotereversed']=0x201B;t['quoteright']=0x2019;t['quoterightn']=0x0149;t['quotesinglbase']=0x201A;t['quotesingle']=0x0027;t['quotesinglemonospace']=0xFF07;t['r']=0x0072;t['raarmenian']=0x057C;t['rabengali']=0x09B0;t['racute']=0x0155;t['radeva']=0x0930;t['radical']=0x221A;t['radicalex']=0xF8E5;t['radoverssquare']=0x33AE;t['radoverssquaredsquare']=0x33AF;t['radsquare']=0x33AD;t['rafe']=0x05BF;t['rafehebrew']=0x05BF;t['ragujarati']=0x0AB0;t['ragurmukhi']=0x0A30;t['rahiragana']=0x3089;t['rakatakana']=0x30E9;t['rakatakanahalfwidth']=0xFF97;t['ralowerdiagonalbengali']=0x09F1;t['ramiddlediagonalbengali']=0x09F0;t['ramshorn']=0x0264;t['ratio']=0x2236;t['rbopomofo']=0x3116;t['rcaron']=0x0159;t['rcedilla']=0x0157;t['rcircle']=0x24E1;t['rcommaaccent']=0x0157;t['rdblgrave']=0x0211;t['rdotaccent']=0x1E59;t['rdotbelow']=0x1E5B;t['rdotbelowmacron']=0x1E5D;t['referencemark']=0x203B;t['reflexsubset']=0x2286;t['reflexsuperset']=0x2287;t['registered']=0x00AE;t['registersans']=0xF8E8;t['registerserif']=0xF6DA;t['reharabic']=0x0631;t['reharmenian']=0x0580;t['rehfinalarabic']=0xFEAE;t['rehiragana']=0x308C;t['rekatakana']=0x30EC;t['rekatakanahalfwidth']=0xFF9A;t['resh']=0x05E8;t['reshdageshhebrew']=0xFB48;t['reshhebrew']=0x05E8;t['reversedtilde']=0x223D;t['reviahebrew']=0x0597;t['reviamugrashhebrew']=0x0597;t['revlogicalnot']=0x2310;t['rfishhook']=0x027E;t['rfishhookreversed']=0x027F;t['rhabengali']=0x09DD;t['rhadeva']=0x095D;t['rho']=0x03C1;t['rhook']=0x027D;t['rhookturned']=0x027B;t['rhookturnedsuperior']=0x02B5;t['rhosymbolgreek']=0x03F1;t['rhotichookmod']=0x02DE;t['rieulacirclekorean']=0x3271;t['rieulaparenkorean']=0x3211;t['rieulcirclekorean']=0x3263;t['rieulhieuhkorean']=0x3140;t['rieulkiyeokkorean']=0x313A;t['rieulkiyeoksioskorean']=0x3169;t['rieulkorean']=0x3139;t['rieulmieumkorean']=0x313B;t['rieulpansioskorean']=0x316C;t['rieulparenkorean']=0x3203;t['rieulphieuphkorean']=0x313F;t['rieulpieupkorean']=0x313C;t['rieulpieupsioskorean']=0x316B;t['rieulsioskorean']=0x313D;t['rieulthieuthkorean']=0x313E;t['rieultikeutkorean']=0x316A;t['rieulyeorinhieuhkorean']=0x316D;t['rightangle']=0x221F;t['righttackbelowcmb']=0x0319;t['righttriangle']=0x22BF;t['rihiragana']=0x308A;t['rikatakana']=0x30EA;t['rikatakanahalfwidth']=0xFF98;t['ring']=0x02DA;t['ringbelowcmb']=0x0325;t['ringcmb']=0x030A;t['ringhalfleft']=0x02BF;t['ringhalfleftarmenian']=0x0559;t['ringhalfleftbelowcmb']=0x031C;t['ringhalfleftcentered']=0x02D3;t['ringhalfright']=0x02BE;t['ringhalfrightbelowcmb']=0x0339;t['ringhalfrightcentered']=0x02D2;t['rinvertedbreve']=0x0213;t['rittorusquare']=0x3351;t['rlinebelow']=0x1E5F;t['rlongleg']=0x027C;t['rlonglegturned']=0x027A;t['rmonospace']=0xFF52;t['rohiragana']=0x308D;t['rokatakana']=0x30ED;t['rokatakanahalfwidth']=0xFF9B;t['roruathai']=0x0E23;t['rparen']=0x24AD;t['rrabengali']=0x09DC;t['rradeva']=0x0931;t['rragurmukhi']=0x0A5C;t['rreharabic']=0x0691;t['rrehfinalarabic']=0xFB8D;t['rrvocalicbengali']=0x09E0;t['rrvocalicdeva']=0x0960;t['rrvocalicgujarati']=0x0AE0;t['rrvocalicvowelsignbengali']=0x09C4;t['rrvocalicvowelsigndeva']=0x0944;t['rrvocalicvowelsigngujarati']=0x0AC4;t['rsuperior']=0xF6F1;t['rtblock']=0x2590;t['rturned']=0x0279;t['rturnedsuperior']=0x02B4;t['ruhiragana']=0x308B;t['rukatakana']=0x30EB;t['rukatakanahalfwidth']=0xFF99;t['rupeemarkbengali']=0x09F2;t['rupeesignbengali']=0x09F3;t['rupiah']=0xF6DD;t['ruthai']=0x0E24;t['rvocalicbengali']=0x098B;t['rvocalicdeva']=0x090B;t['rvocalicgujarati']=0x0A8B;t['rvocalicvowelsignbengali']=0x09C3;t['rvocalicvowelsigndeva']=0x0943;t['rvocalicvowelsigngujarati']=0x0AC3;t['s']=0x0073;t['sabengali']=0x09B8;t['sacute']=0x015B;t['sacutedotaccent']=0x1E65;t['sadarabic']=0x0635;t['sadeva']=0x0938;t['sadfinalarabic']=0xFEBA;t['sadinitialarabic']=0xFEBB;t['sadmedialarabic']=0xFEBC;t['sagujarati']=0x0AB8;t['sagurmukhi']=0x0A38;t['sahiragana']=0x3055;t['sakatakana']=0x30B5;t['sakatakanahalfwidth']=0xFF7B;t['sallallahoualayhewasallamarabic']=0xFDFA;t['samekh']=0x05E1;t['samekhdagesh']=0xFB41;t['samekhdageshhebrew']=0xFB41;t['samekhhebrew']=0x05E1;t['saraaathai']=0x0E32;t['saraaethai']=0x0E41;t['saraaimaimalaithai']=0x0E44;t['saraaimaimuanthai']=0x0E43;t['saraamthai']=0x0E33;t['saraathai']=0x0E30;t['saraethai']=0x0E40;t['saraiileftthai']=0xF886;t['saraiithai']=0x0E35;t['saraileftthai']=0xF885;t['saraithai']=0x0E34;t['saraothai']=0x0E42;t['saraueeleftthai']=0xF888;t['saraueethai']=0x0E37;t['saraueleftthai']=0xF887;t['sarauethai']=0x0E36;t['sarauthai']=0x0E38;t['sarauuthai']=0x0E39;t['sbopomofo']=0x3119;t['scaron']=0x0161;t['scarondotaccent']=0x1E67;t['scedilla']=0x015F;t['schwa']=0x0259;t['schwacyrillic']=0x04D9;t['schwadieresiscyrillic']=0x04DB;t['schwahook']=0x025A;t['scircle']=0x24E2;t['scircumflex']=0x015D;t['scommaaccent']=0x0219;t['sdotaccent']=0x1E61;t['sdotbelow']=0x1E63;t['sdotbelowdotaccent']=0x1E69;t['seagullbelowcmb']=0x033C;t['second']=0x2033;t['secondtonechinese']=0x02CA;t['section']=0x00A7;t['seenarabic']=0x0633;t['seenfinalarabic']=0xFEB2;t['seeninitialarabic']=0xFEB3;t['seenmedialarabic']=0xFEB4;t['segol']=0x05B6;t['segol13']=0x05B6;t['segol1f']=0x05B6;t['segol2c']=0x05B6;t['segolhebrew']=0x05B6;t['segolnarrowhebrew']=0x05B6;t['segolquarterhebrew']=0x05B6;t['segoltahebrew']=0x0592;t['segolwidehebrew']=0x05B6;t['seharmenian']=0x057D;t['sehiragana']=0x305B;t['sekatakana']=0x30BB;t['sekatakanahalfwidth']=0xFF7E;t['semicolon']=0x003B;t['semicolonarabic']=0x061B;t['semicolonmonospace']=0xFF1B;t['semicolonsmall']=0xFE54;t['semivoicedmarkkana']=0x309C;t['semivoicedmarkkanahalfwidth']=0xFF9F;t['sentisquare']=0x3322;t['sentosquare']=0x3323;t['seven']=0x0037;t['sevenarabic']=0x0667;t['sevenbengali']=0x09ED;t['sevencircle']=0x2466;t['sevencircleinversesansserif']=0x2790;t['sevendeva']=0x096D;t['seveneighths']=0x215E;t['sevengujarati']=0x0AED;t['sevengurmukhi']=0x0A6D;t['sevenhackarabic']=0x0667;t['sevenhangzhou']=0x3027;t['sevenideographicparen']=0x3226;t['seveninferior']=0x2087;t['sevenmonospace']=0xFF17;t['sevenoldstyle']=0xF737;t['sevenparen']=0x247A;t['sevenperiod']=0x248E;t['sevenpersian']=0x06F7;t['sevenroman']=0x2176;t['sevensuperior']=0x2077;t['seventeencircle']=0x2470;t['seventeenparen']=0x2484;t['seventeenperiod']=0x2498;t['seventhai']=0x0E57;t['sfthyphen']=0x00AD;t['shaarmenian']=0x0577;t['shabengali']=0x09B6;t['shacyrillic']=0x0448;t['shaddaarabic']=0x0651;t['shaddadammaarabic']=0xFC61;t['shaddadammatanarabic']=0xFC5E;t['shaddafathaarabic']=0xFC60;t['shaddakasraarabic']=0xFC62;t['shaddakasratanarabic']=0xFC5F;t['shade']=0x2592;t['shadedark']=0x2593;t['shadelight']=0x2591;t['shademedium']=0x2592;t['shadeva']=0x0936;t['shagujarati']=0x0AB6;t['shagurmukhi']=0x0A36;t['shalshelethebrew']=0x0593;t['shbopomofo']=0x3115;t['shchacyrillic']=0x0449;t['sheenarabic']=0x0634;t['sheenfinalarabic']=0xFEB6;t['sheeninitialarabic']=0xFEB7;t['sheenmedialarabic']=0xFEB8;t['sheicoptic']=0x03E3;t['sheqel']=0x20AA;t['sheqelhebrew']=0x20AA;t['sheva']=0x05B0;t['sheva115']=0x05B0;t['sheva15']=0x05B0;t['sheva22']=0x05B0;t['sheva2e']=0x05B0;t['shevahebrew']=0x05B0;t['shevanarrowhebrew']=0x05B0;t['shevaquarterhebrew']=0x05B0;t['shevawidehebrew']=0x05B0;t['shhacyrillic']=0x04BB;t['shimacoptic']=0x03ED;t['shin']=0x05E9;t['shindagesh']=0xFB49;t['shindageshhebrew']=0xFB49;t['shindageshshindot']=0xFB2C;t['shindageshshindothebrew']=0xFB2C;t['shindageshsindot']=0xFB2D;t['shindageshsindothebrew']=0xFB2D;t['shindothebrew']=0x05C1;t['shinhebrew']=0x05E9;t['shinshindot']=0xFB2A;t['shinshindothebrew']=0xFB2A;t['shinsindot']=0xFB2B;t['shinsindothebrew']=0xFB2B;t['shook']=0x0282;t['sigma']=0x03C3;t['sigma1']=0x03C2;t['sigmafinal']=0x03C2;t['sigmalunatesymbolgreek']=0x03F2;t['sihiragana']=0x3057;t['sikatakana']=0x30B7;t['sikatakanahalfwidth']=0xFF7C;t['siluqhebrew']=0x05BD;t['siluqlefthebrew']=0x05BD;t['similar']=0x223C;t['sindothebrew']=0x05C2;t['siosacirclekorean']=0x3274;t['siosaparenkorean']=0x3214;t['sioscieuckorean']=0x317E;t['sioscirclekorean']=0x3266;t['sioskiyeokkorean']=0x317A;t['sioskorean']=0x3145;t['siosnieunkorean']=0x317B;t['siosparenkorean']=0x3206;t['siospieupkorean']=0x317D;t['siostikeutkorean']=0x317C;t['six']=0x0036;t['sixarabic']=0x0666;t['sixbengali']=0x09EC;t['sixcircle']=0x2465;t['sixcircleinversesansserif']=0x278F;t['sixdeva']=0x096C;t['sixgujarati']=0x0AEC;t['sixgurmukhi']=0x0A6C;t['sixhackarabic']=0x0666;t['sixhangzhou']=0x3026;t['sixideographicparen']=0x3225;t['sixinferior']=0x2086;t['sixmonospace']=0xFF16;t['sixoldstyle']=0xF736;t['sixparen']=0x2479;t['sixperiod']=0x248D;t['sixpersian']=0x06F6;t['sixroman']=0x2175;t['sixsuperior']=0x2076;t['sixteencircle']=0x246F;t['sixteencurrencydenominatorbengali']=0x09F9;t['sixteenparen']=0x2483;t['sixteenperiod']=0x2497;t['sixthai']=0x0E56;t['slash']=0x002F;t['slashmonospace']=0xFF0F;t['slong']=0x017F;t['slongdotaccent']=0x1E9B;t['smileface']=0x263A;t['smonospace']=0xFF53;t['sofpasuqhebrew']=0x05C3;t['softhyphen']=0x00AD;t['softsigncyrillic']=0x044C;t['sohiragana']=0x305D;t['sokatakana']=0x30BD;t['sokatakanahalfwidth']=0xFF7F;t['soliduslongoverlaycmb']=0x0338;t['solidusshortoverlaycmb']=0x0337;t['sorusithai']=0x0E29;t['sosalathai']=0x0E28;t['sosothai']=0x0E0B;t['sosuathai']=0x0E2A;t['space']=0x0020;t['spacehackarabic']=0x0020;t['spade']=0x2660;t['spadesuitblack']=0x2660;t['spadesuitwhite']=0x2664;t['sparen']=0x24AE;t['squarebelowcmb']=0x033B;t['squarecc']=0x33C4;t['squarecm']=0x339D;t['squarediagonalcrosshatchfill']=0x25A9;t['squarehorizontalfill']=0x25A4;t['squarekg']=0x338F;t['squarekm']=0x339E;t['squarekmcapital']=0x33CE;t['squareln']=0x33D1;t['squarelog']=0x33D2;t['squaremg']=0x338E;t['squaremil']=0x33D5;t['squaremm']=0x339C;t['squaremsquared']=0x33A1;t['squareorthogonalcrosshatchfill']=0x25A6;t['squareupperlefttolowerrightfill']=0x25A7;t['squareupperrighttolowerleftfill']=0x25A8;t['squareverticalfill']=0x25A5;t['squarewhitewithsmallblack']=0x25A3;t['srsquare']=0x33DB;t['ssabengali']=0x09B7;t['ssadeva']=0x0937;t['ssagujarati']=0x0AB7;t['ssangcieuckorean']=0x3149;t['ssanghieuhkorean']=0x3185;t['ssangieungkorean']=0x3180;t['ssangkiyeokkorean']=0x3132;t['ssangnieunkorean']=0x3165;t['ssangpieupkorean']=0x3143;t['ssangsioskorean']=0x3146;t['ssangtikeutkorean']=0x3138;t['ssuperior']=0xF6F2;t['sterling']=0x00A3;t['sterlingmonospace']=0xFFE1;t['strokelongoverlaycmb']=0x0336;t['strokeshortoverlaycmb']=0x0335;t['subset']=0x2282;t['subsetnotequal']=0x228A;t['subsetorequal']=0x2286;t['succeeds']=0x227B;t['suchthat']=0x220B;t['suhiragana']=0x3059;t['sukatakana']=0x30B9;t['sukatakanahalfwidth']=0xFF7D;t['sukunarabic']=0x0652;t['summation']=0x2211;t['sun']=0x263C;t['superset']=0x2283;t['supersetnotequal']=0x228B;t['supersetorequal']=0x2287;t['svsquare']=0x33DC;t['syouwaerasquare']=0x337C;t['t']=0x0074;t['tabengali']=0x09A4;t['tackdown']=0x22A4;t['tackleft']=0x22A3;t['tadeva']=0x0924;t['tagujarati']=0x0AA4;t['tagurmukhi']=0x0A24;t['taharabic']=0x0637;t['tahfinalarabic']=0xFEC2;t['tahinitialarabic']=0xFEC3;t['tahiragana']=0x305F;t['tahmedialarabic']=0xFEC4;t['taisyouerasquare']=0x337D;t['takatakana']=0x30BF;t['takatakanahalfwidth']=0xFF80;t['tatweelarabic']=0x0640;t['tau']=0x03C4;t['tav']=0x05EA;t['tavdages']=0xFB4A;t['tavdagesh']=0xFB4A;t['tavdageshhebrew']=0xFB4A;t['tavhebrew']=0x05EA;t['tbar']=0x0167;t['tbopomofo']=0x310A;t['tcaron']=0x0165;t['tccurl']=0x02A8;t['tcedilla']=0x0163;t['tcheharabic']=0x0686;t['tchehfinalarabic']=0xFB7B;t['tchehinitialarabic']=0xFB7C;t['tchehmedialarabic']=0xFB7D;t['tcircle']=0x24E3;t['tcircumflexbelow']=0x1E71;t['tcommaaccent']=0x0163;t['tdieresis']=0x1E97;t['tdotaccent']=0x1E6B;t['tdotbelow']=0x1E6D;t['tecyrillic']=0x0442;t['tedescendercyrillic']=0x04AD;t['teharabic']=0x062A;t['tehfinalarabic']=0xFE96;t['tehhahinitialarabic']=0xFCA2;t['tehhahisolatedarabic']=0xFC0C;t['tehinitialarabic']=0xFE97;t['tehiragana']=0x3066;t['tehjeeminitialarabic']=0xFCA1;t['tehjeemisolatedarabic']=0xFC0B;t['tehmarbutaarabic']=0x0629;t['tehmarbutafinalarabic']=0xFE94;t['tehmedialarabic']=0xFE98;t['tehmeeminitialarabic']=0xFCA4;t['tehmeemisolatedarabic']=0xFC0E;t['tehnoonfinalarabic']=0xFC73;t['tekatakana']=0x30C6;t['tekatakanahalfwidth']=0xFF83;t['telephone']=0x2121;t['telephoneblack']=0x260E;t['telishagedolahebrew']=0x05A0;t['telishaqetanahebrew']=0x05A9;t['tencircle']=0x2469;t['tenideographicparen']=0x3229;t['tenparen']=0x247D;t['tenperiod']=0x2491;t['tenroman']=0x2179;t['tesh']=0x02A7;t['tet']=0x05D8;t['tetdagesh']=0xFB38;t['tetdageshhebrew']=0xFB38;t['tethebrew']=0x05D8;t['tetsecyrillic']=0x04B5;t['tevirhebrew']=0x059B;t['tevirlefthebrew']=0x059B;t['thabengali']=0x09A5;t['thadeva']=0x0925;t['thagujarati']=0x0AA5;t['thagurmukhi']=0x0A25;t['thalarabic']=0x0630;t['thalfinalarabic']=0xFEAC;t['thanthakhatlowleftthai']=0xF898;t['thanthakhatlowrightthai']=0xF897;t['thanthakhatthai']=0x0E4C;t['thanthakhatupperleftthai']=0xF896;t['theharabic']=0x062B;t['thehfinalarabic']=0xFE9A;t['thehinitialarabic']=0xFE9B;t['thehmedialarabic']=0xFE9C;t['thereexists']=0x2203;t['therefore']=0x2234;t['theta']=0x03B8;t['theta1']=0x03D1;t['thetasymbolgreek']=0x03D1;t['thieuthacirclekorean']=0x3279;t['thieuthaparenkorean']=0x3219;t['thieuthcirclekorean']=0x326B;t['thieuthkorean']=0x314C;t['thieuthparenkorean']=0x320B;t['thirteencircle']=0x246C;t['thirteenparen']=0x2480;t['thirteenperiod']=0x2494;t['thonangmonthothai']=0x0E11;t['thook']=0x01AD;t['thophuthaothai']=0x0E12;t['thorn']=0x00FE;t['thothahanthai']=0x0E17;t['thothanthai']=0x0E10;t['thothongthai']=0x0E18;t['thothungthai']=0x0E16;t['thousandcyrillic']=0x0482;t['thousandsseparatorarabic']=0x066C;t['thousandsseparatorpersian']=0x066C;t['three']=0x0033;t['threearabic']=0x0663;t['threebengali']=0x09E9;t['threecircle']=0x2462;t['threecircleinversesansserif']=0x278C;t['threedeva']=0x0969;t['threeeighths']=0x215C;t['threegujarati']=0x0AE9;t['threegurmukhi']=0x0A69;t['threehackarabic']=0x0663;t['threehangzhou']=0x3023;t['threeideographicparen']=0x3222;t['threeinferior']=0x2083;t['threemonospace']=0xFF13;t['threenumeratorbengali']=0x09F6;t['threeoldstyle']=0xF733;t['threeparen']=0x2476;t['threeperiod']=0x248A;t['threepersian']=0x06F3;t['threequarters']=0x00BE;t['threequartersemdash']=0xF6DE;t['threeroman']=0x2172;t['threesuperior']=0x00B3;t['threethai']=0x0E53;t['thzsquare']=0x3394;t['tihiragana']=0x3061;t['tikatakana']=0x30C1;t['tikatakanahalfwidth']=0xFF81;t['tikeutacirclekorean']=0x3270;t['tikeutaparenkorean']=0x3210;t['tikeutcirclekorean']=0x3262;t['tikeutkorean']=0x3137;t['tikeutparenkorean']=0x3202;t['tilde']=0x02DC;t['tildebelowcmb']=0x0330;t['tildecmb']=0x0303;t['tildecomb']=0x0303;t['tildedoublecmb']=0x0360;t['tildeoperator']=0x223C;t['tildeoverlaycmb']=0x0334;t['tildeverticalcmb']=0x033E;t['timescircle']=0x2297;t['tipehahebrew']=0x0596;t['tipehalefthebrew']=0x0596;t['tippigurmukhi']=0x0A70;t['titlocyrilliccmb']=0x0483;t['tiwnarmenian']=0x057F;t['tlinebelow']=0x1E6F;t['tmonospace']=0xFF54;t['toarmenian']=0x0569;t['tohiragana']=0x3068;t['tokatakana']=0x30C8;t['tokatakanahalfwidth']=0xFF84;t['tonebarextrahighmod']=0x02E5;t['tonebarextralowmod']=0x02E9;t['tonebarhighmod']=0x02E6;t['tonebarlowmod']=0x02E8;t['tonebarmidmod']=0x02E7;t['tonefive']=0x01BD;t['tonesix']=0x0185;t['tonetwo']=0x01A8;t['tonos']=0x0384;t['tonsquare']=0x3327;t['topatakthai']=0x0E0F;t['tortoiseshellbracketleft']=0x3014;t['tortoiseshellbracketleftsmall']=0xFE5D;t['tortoiseshellbracketleftvertical']=0xFE39;t['tortoiseshellbracketright']=0x3015;t['tortoiseshellbracketrightsmall']=0xFE5E;t['tortoiseshellbracketrightvertical']=0xFE3A;t['totaothai']=0x0E15;t['tpalatalhook']=0x01AB;t['tparen']=0x24AF;t['trademark']=0x2122;t['trademarksans']=0xF8EA;t['trademarkserif']=0xF6DB;t['tretroflexhook']=0x0288;t['triagdn']=0x25BC;t['triaglf']=0x25C4;t['triagrt']=0x25BA;t['triagup']=0x25B2;t['ts']=0x02A6;t['tsadi']=0x05E6;t['tsadidagesh']=0xFB46;t['tsadidageshhebrew']=0xFB46;t['tsadihebrew']=0x05E6;t['tsecyrillic']=0x0446;t['tsere']=0x05B5;t['tsere12']=0x05B5;t['tsere1e']=0x05B5;t['tsere2b']=0x05B5;t['tserehebrew']=0x05B5;t['tserenarrowhebrew']=0x05B5;t['tserequarterhebrew']=0x05B5;t['tserewidehebrew']=0x05B5;t['tshecyrillic']=0x045B;t['tsuperior']=0xF6F3;t['ttabengali']=0x099F;t['ttadeva']=0x091F;t['ttagujarati']=0x0A9F;t['ttagurmukhi']=0x0A1F;t['tteharabic']=0x0679;t['ttehfinalarabic']=0xFB67;t['ttehinitialarabic']=0xFB68;t['ttehmedialarabic']=0xFB69;t['tthabengali']=0x09A0;t['tthadeva']=0x0920;t['tthagujarati']=0x0AA0;t['tthagurmukhi']=0x0A20;t['tturned']=0x0287;t['tuhiragana']=0x3064;t['tukatakana']=0x30C4;t['tukatakanahalfwidth']=0xFF82;t['tusmallhiragana']=0x3063;t['tusmallkatakana']=0x30C3;t['tusmallkatakanahalfwidth']=0xFF6F;t['twelvecircle']=0x246B;t['twelveparen']=0x247F;t['twelveperiod']=0x2493;t['twelveroman']=0x217B;t['twentycircle']=0x2473;t['twentyhangzhou']=0x5344;t['twentyparen']=0x2487;t['twentyperiod']=0x249B;t['two']=0x0032;t['twoarabic']=0x0662;t['twobengali']=0x09E8;t['twocircle']=0x2461;t['twocircleinversesansserif']=0x278B;t['twodeva']=0x0968;t['twodotenleader']=0x2025;t['twodotleader']=0x2025;t['twodotleadervertical']=0xFE30;t['twogujarati']=0x0AE8;t['twogurmukhi']=0x0A68;t['twohackarabic']=0x0662;t['twohangzhou']=0x3022;t['twoideographicparen']=0x3221;t['twoinferior']=0x2082;t['twomonospace']=0xFF12;t['twonumeratorbengali']=0x09F5;t['twooldstyle']=0xF732;t['twoparen']=0x2475;t['twoperiod']=0x2489;t['twopersian']=0x06F2;t['tworoman']=0x2171;t['twostroke']=0x01BB;t['twosuperior']=0x00B2;t['twothai']=0x0E52;t['twothirds']=0x2154;t['u']=0x0075;t['uacute']=0x00FA;t['ubar']=0x0289;t['ubengali']=0x0989;t['ubopomofo']=0x3128;t['ubreve']=0x016D;t['ucaron']=0x01D4;t['ucircle']=0x24E4;t['ucircumflex']=0x00FB;t['ucircumflexbelow']=0x1E77;t['ucyrillic']=0x0443;t['udattadeva']=0x0951;t['udblacute']=0x0171;t['udblgrave']=0x0215;t['udeva']=0x0909;t['udieresis']=0x00FC;t['udieresisacute']=0x01D8;t['udieresisbelow']=0x1E73;t['udieresiscaron']=0x01DA;t['udieresiscyrillic']=0x04F1;t['udieresisgrave']=0x01DC;t['udieresismacron']=0x01D6;t['udotbelow']=0x1EE5;t['ugrave']=0x00F9;t['ugujarati']=0x0A89;t['ugurmukhi']=0x0A09;t['uhiragana']=0x3046;t['uhookabove']=0x1EE7;t['uhorn']=0x01B0;t['uhornacute']=0x1EE9;t['uhorndotbelow']=0x1EF1;t['uhorngrave']=0x1EEB;t['uhornhookabove']=0x1EED;t['uhorntilde']=0x1EEF;t['uhungarumlaut']=0x0171;t['uhungarumlautcyrillic']=0x04F3;t['uinvertedbreve']=0x0217;t['ukatakana']=0x30A6;t['ukatakanahalfwidth']=0xFF73;t['ukcyrillic']=0x0479;t['ukorean']=0x315C;t['umacron']=0x016B;t['umacroncyrillic']=0x04EF;t['umacrondieresis']=0x1E7B;t['umatragurmukhi']=0x0A41;t['umonospace']=0xFF55;t['underscore']=0x005F;t['underscoredbl']=0x2017;t['underscoremonospace']=0xFF3F;t['underscorevertical']=0xFE33;t['underscorewavy']=0xFE4F;t['union']=0x222A;t['universal']=0x2200;t['uogonek']=0x0173;t['uparen']=0x24B0;t['upblock']=0x2580;t['upperdothebrew']=0x05C4;t['upsilon']=0x03C5;t['upsilondieresis']=0x03CB;t['upsilondieresistonos']=0x03B0;t['upsilonlatin']=0x028A;t['upsilontonos']=0x03CD;t['uptackbelowcmb']=0x031D;t['uptackmod']=0x02D4;t['uragurmukhi']=0x0A73;t['uring']=0x016F;t['ushortcyrillic']=0x045E;t['usmallhiragana']=0x3045;t['usmallkatakana']=0x30A5;t['usmallkatakanahalfwidth']=0xFF69;t['ustraightcyrillic']=0x04AF;t['ustraightstrokecyrillic']=0x04B1;t['utilde']=0x0169;t['utildeacute']=0x1E79;t['utildebelow']=0x1E75;t['uubengali']=0x098A;t['uudeva']=0x090A;t['uugujarati']=0x0A8A;t['uugurmukhi']=0x0A0A;t['uumatragurmukhi']=0x0A42;t['uuvowelsignbengali']=0x09C2;t['uuvowelsigndeva']=0x0942;t['uuvowelsigngujarati']=0x0AC2;t['uvowelsignbengali']=0x09C1;t['uvowelsigndeva']=0x0941;t['uvowelsigngujarati']=0x0AC1;t['v']=0x0076;t['vadeva']=0x0935;t['vagujarati']=0x0AB5;t['vagurmukhi']=0x0A35;t['vakatakana']=0x30F7;t['vav']=0x05D5;t['vavdagesh']=0xFB35;t['vavdagesh65']=0xFB35;t['vavdageshhebrew']=0xFB35;t['vavhebrew']=0x05D5;t['vavholam']=0xFB4B;t['vavholamhebrew']=0xFB4B;t['vavvavhebrew']=0x05F0;t['vavyodhebrew']=0x05F1;t['vcircle']=0x24E5;t['vdotbelow']=0x1E7F;t['vecyrillic']=0x0432;t['veharabic']=0x06A4;t['vehfinalarabic']=0xFB6B;t['vehinitialarabic']=0xFB6C;t['vehmedialarabic']=0xFB6D;t['vekatakana']=0x30F9;t['venus']=0x2640;t['verticalbar']=0x007C;t['verticallineabovecmb']=0x030D;t['verticallinebelowcmb']=0x0329;t['verticallinelowmod']=0x02CC;t['verticallinemod']=0x02C8;t['vewarmenian']=0x057E;t['vhook']=0x028B;t['vikatakana']=0x30F8;t['viramabengali']=0x09CD;t['viramadeva']=0x094D;t['viramagujarati']=0x0ACD;t['visargabengali']=0x0983;t['visargadeva']=0x0903;t['visargagujarati']=0x0A83;t['vmonospace']=0xFF56;t['voarmenian']=0x0578;t['voicediterationhiragana']=0x309E;t['voicediterationkatakana']=0x30FE;t['voicedmarkkana']=0x309B;t['voicedmarkkanahalfwidth']=0xFF9E;t['vokatakana']=0x30FA;t['vparen']=0x24B1;t['vtilde']=0x1E7D;t['vturned']=0x028C;t['vuhiragana']=0x3094;t['vukatakana']=0x30F4;t['w']=0x0077;t['wacute']=0x1E83;t['waekorean']=0x3159;t['wahiragana']=0x308F;t['wakatakana']=0x30EF;t['wakatakanahalfwidth']=0xFF9C;t['wakorean']=0x3158;t['wasmallhiragana']=0x308E;t['wasmallkatakana']=0x30EE;t['wattosquare']=0x3357;t['wavedash']=0x301C;t['wavyunderscorevertical']=0xFE34;t['wawarabic']=0x0648;t['wawfinalarabic']=0xFEEE;t['wawhamzaabovearabic']=0x0624;t['wawhamzaabovefinalarabic']=0xFE86;t['wbsquare']=0x33DD;t['wcircle']=0x24E6;t['wcircumflex']=0x0175;t['wdieresis']=0x1E85;t['wdotaccent']=0x1E87;t['wdotbelow']=0x1E89;t['wehiragana']=0x3091;t['weierstrass']=0x2118;t['wekatakana']=0x30F1;t['wekorean']=0x315E;t['weokorean']=0x315D;t['wgrave']=0x1E81;t['whitebullet']=0x25E6;t['whitecircle']=0x25CB;t['whitecircleinverse']=0x25D9;t['whitecornerbracketleft']=0x300E;t['whitecornerbracketleftvertical']=0xFE43;t['whitecornerbracketright']=0x300F;t['whitecornerbracketrightvertical']=0xFE44;t['whitediamond']=0x25C7;t['whitediamondcontainingblacksmalldiamond']=0x25C8;t['whitedownpointingsmalltriangle']=0x25BF;t['whitedownpointingtriangle']=0x25BD;t['whiteleftpointingsmalltriangle']=0x25C3;t['whiteleftpointingtriangle']=0x25C1;t['whitelenticularbracketleft']=0x3016;t['whitelenticularbracketright']=0x3017;t['whiterightpointingsmalltriangle']=0x25B9;t['whiterightpointingtriangle']=0x25B7;t['whitesmallsquare']=0x25AB;t['whitesmilingface']=0x263A;t['whitesquare']=0x25A1;t['whitestar']=0x2606;t['whitetelephone']=0x260F;t['whitetortoiseshellbracketleft']=0x3018;t['whitetortoiseshellbracketright']=0x3019;t['whiteuppointingsmalltriangle']=0x25B5;t['whiteuppointingtriangle']=0x25B3;t['wihiragana']=0x3090;t['wikatakana']=0x30F0;t['wikorean']=0x315F;t['wmonospace']=0xFF57;t['wohiragana']=0x3092;t['wokatakana']=0x30F2;t['wokatakanahalfwidth']=0xFF66;t['won']=0x20A9;t['wonmonospace']=0xFFE6;t['wowaenthai']=0x0E27;t['wparen']=0x24B2;t['wring']=0x1E98;t['wsuperior']=0x02B7;t['wturned']=0x028D;t['wynn']=0x01BF;t['x']=0x0078;t['xabovecmb']=0x033D;t['xbopomofo']=0x3112;t['xcircle']=0x24E7;t['xdieresis']=0x1E8D;t['xdotaccent']=0x1E8B;t['xeharmenian']=0x056D;t['xi']=0x03BE;t['xmonospace']=0xFF58;t['xparen']=0x24B3;t['xsuperior']=0x02E3;t['y']=0x0079;t['yaadosquare']=0x334E;t['yabengali']=0x09AF;t['yacute']=0x00FD;t['yadeva']=0x092F;t['yaekorean']=0x3152;t['yagujarati']=0x0AAF;t['yagurmukhi']=0x0A2F;t['yahiragana']=0x3084;t['yakatakana']=0x30E4;t['yakatakanahalfwidth']=0xFF94;t['yakorean']=0x3151;t['yamakkanthai']=0x0E4E;t['yasmallhiragana']=0x3083;t['yasmallkatakana']=0x30E3;t['yasmallkatakanahalfwidth']=0xFF6C;t['yatcyrillic']=0x0463;t['ycircle']=0x24E8;t['ycircumflex']=0x0177;t['ydieresis']=0x00FF;t['ydotaccent']=0x1E8F;t['ydotbelow']=0x1EF5;t['yeharabic']=0x064A;t['yehbarreearabic']=0x06D2;t['yehbarreefinalarabic']=0xFBAF;t['yehfinalarabic']=0xFEF2;t['yehhamzaabovearabic']=0x0626;t['yehhamzaabovefinalarabic']=0xFE8A;t['yehhamzaaboveinitialarabic']=0xFE8B;t['yehhamzaabovemedialarabic']=0xFE8C;t['yehinitialarabic']=0xFEF3;t['yehmedialarabic']=0xFEF4;t['yehmeeminitialarabic']=0xFCDD;t['yehmeemisolatedarabic']=0xFC58;t['yehnoonfinalarabic']=0xFC94;t['yehthreedotsbelowarabic']=0x06D1;t['yekorean']=0x3156;t['yen']=0x00A5;t['yenmonospace']=0xFFE5;t['yeokorean']=0x3155;t['yeorinhieuhkorean']=0x3186;t['yerahbenyomohebrew']=0x05AA;t['yerahbenyomolefthebrew']=0x05AA;t['yericyrillic']=0x044B;t['yerudieresiscyrillic']=0x04F9;t['yesieungkorean']=0x3181;t['yesieungpansioskorean']=0x3183;t['yesieungsioskorean']=0x3182;t['yetivhebrew']=0x059A;t['ygrave']=0x1EF3;t['yhook']=0x01B4;t['yhookabove']=0x1EF7;t['yiarmenian']=0x0575;t['yicyrillic']=0x0457;t['yikorean']=0x3162;t['yinyang']=0x262F;t['yiwnarmenian']=0x0582;t['ymonospace']=0xFF59;t['yod']=0x05D9;t['yoddagesh']=0xFB39;t['yoddageshhebrew']=0xFB39;t['yodhebrew']=0x05D9;t['yodyodhebrew']=0x05F2;t['yodyodpatahhebrew']=0xFB1F;t['yohiragana']=0x3088;t['yoikorean']=0x3189;t['yokatakana']=0x30E8;t['yokatakanahalfwidth']=0xFF96;t['yokorean']=0x315B;t['yosmallhiragana']=0x3087;t['yosmallkatakana']=0x30E7;t['yosmallkatakanahalfwidth']=0xFF6E;t['yotgreek']=0x03F3;t['yoyaekorean']=0x3188;t['yoyakorean']=0x3187;t['yoyakthai']=0x0E22;t['yoyingthai']=0x0E0D;t['yparen']=0x24B4;t['ypogegrammeni']=0x037A;t['ypogegrammenigreekcmb']=0x0345;t['yr']=0x01A6;t['yring']=0x1E99;t['ysuperior']=0x02B8;t['ytilde']=0x1EF9;t['yturned']=0x028E;t['yuhiragana']=0x3086;t['yuikorean']=0x318C;t['yukatakana']=0x30E6;t['yukatakanahalfwidth']=0xFF95;t['yukorean']=0x3160;t['yusbigcyrillic']=0x046B;t['yusbigiotifiedcyrillic']=0x046D;t['yuslittlecyrillic']=0x0467;t['yuslittleiotifiedcyrillic']=0x0469;t['yusmallhiragana']=0x3085;t['yusmallkatakana']=0x30E5;t['yusmallkatakanahalfwidth']=0xFF6D;t['yuyekorean']=0x318B;t['yuyeokorean']=0x318A;t['yyabengali']=0x09DF;t['yyadeva']=0x095F;t['z']=0x007A;t['zaarmenian']=0x0566;t['zacute']=0x017A;t['zadeva']=0x095B;t['zagurmukhi']=0x0A5B;t['zaharabic']=0x0638;t['zahfinalarabic']=0xFEC6;t['zahinitialarabic']=0xFEC7;t['zahiragana']=0x3056;t['zahmedialarabic']=0xFEC8;t['zainarabic']=0x0632;t['zainfinalarabic']=0xFEB0;t['zakatakana']=0x30B6;t['zaqefgadolhebrew']=0x0595;t['zaqefqatanhebrew']=0x0594;t['zarqahebrew']=0x0598;t['zayin']=0x05D6;t['zayindagesh']=0xFB36;t['zayindageshhebrew']=0xFB36;t['zayinhebrew']=0x05D6;t['zbopomofo']=0x3117;t['zcaron']=0x017E;t['zcircle']=0x24E9;t['zcircumflex']=0x1E91;t['zcurl']=0x0291;t['zdot']=0x017C;t['zdotaccent']=0x017C;t['zdotbelow']=0x1E93;t['zecyrillic']=0x0437;t['zedescendercyrillic']=0x0499;t['zedieresiscyrillic']=0x04DF;t['zehiragana']=0x305C;t['zekatakana']=0x30BC;t['zero']=0x0030;t['zeroarabic']=0x0660;t['zerobengali']=0x09E6;t['zerodeva']=0x0966;t['zerogujarati']=0x0AE6;t['zerogurmukhi']=0x0A66;t['zerohackarabic']=0x0660;t['zeroinferior']=0x2080;t['zeromonospace']=0xFF10;t['zerooldstyle']=0xF730;t['zeropersian']=0x06F0;t['zerosuperior']=0x2070;t['zerothai']=0x0E50;t['zerowidthjoiner']=0xFEFF;t['zerowidthnonjoiner']=0x200C;t['zerowidthspace']=0x200B;t['zeta']=0x03B6;t['zhbopomofo']=0x3113;t['zhearmenian']=0x056A;t['zhebrevecyrillic']=0x04C2;t['zhecyrillic']=0x0436;t['zhedescendercyrillic']=0x0497;t['zhedieresiscyrillic']=0x04DD;t['zihiragana']=0x3058;t['zikatakana']=0x30B8;t['zinorhebrew']=0x05AE;t['zlinebelow']=0x1E95;t['zmonospace']=0xFF5A;t['zohiragana']=0x305E;t['zokatakana']=0x30BE;t['zparen']=0x24B5;t['zretroflexhook']=0x0290;t['zstroke']=0x01B6;t['zuhiragana']=0x305A;t['zukatakana']=0x30BA;t['.notdef']=0x0000;t['angbracketleftbig']=0x2329;t['angbracketleftBig']=0x2329;t['angbracketleftbigg']=0x2329;t['angbracketleftBigg']=0x2329;t['angbracketrightBig']=0x232A;t['angbracketrightbig']=0x232A;t['angbracketrightBigg']=0x232A;t['angbracketrightbigg']=0x232A;t['arrowhookleft']=0x21AA;t['arrowhookright']=0x21A9;t['arrowlefttophalf']=0x21BC;t['arrowleftbothalf']=0x21BD;t['arrownortheast']=0x2197;t['arrownorthwest']=0x2196;t['arrowrighttophalf']=0x21C0;t['arrowrightbothalf']=0x21C1;t['arrowsoutheast']=0x2198;t['arrowsouthwest']=0x2199;t['backslashbig']=0x2216;t['backslashBig']=0x2216;t['backslashBigg']=0x2216;t['backslashbigg']=0x2216;t['bardbl']=0x2016;t['bracehtipdownleft']=0xFE37;t['bracehtipdownright']=0xFE37;t['bracehtipupleft']=0xFE38;t['bracehtipupright']=0xFE38;t['braceleftBig']=0x007B;t['braceleftbig']=0x007B;t['braceleftbigg']=0x007B;t['braceleftBigg']=0x007B;t['bracerightBig']=0x007D;t['bracerightbig']=0x007D;t['bracerightbigg']=0x007D;t['bracerightBigg']=0x007D;t['bracketleftbig']=0x005B;t['bracketleftBig']=0x005B;t['bracketleftbigg']=0x005B;t['bracketleftBigg']=0x005B;t['bracketrightBig']=0x005D;t['bracketrightbig']=0x005D;t['bracketrightbigg']=0x005D;t['bracketrightBigg']=0x005D;t['ceilingleftbig']=0x2308;t['ceilingleftBig']=0x2308;t['ceilingleftBigg']=0x2308;t['ceilingleftbigg']=0x2308;t['ceilingrightbig']=0x2309;t['ceilingrightBig']=0x2309;t['ceilingrightbigg']=0x2309;t['ceilingrightBigg']=0x2309;t['circledotdisplay']=0x2299;t['circledottext']=0x2299;t['circlemultiplydisplay']=0x2297;t['circlemultiplytext']=0x2297;t['circleplusdisplay']=0x2295;t['circleplustext']=0x2295;t['contintegraldisplay']=0x222E;t['contintegraltext']=0x222E;t['coproductdisplay']=0x2210;t['coproducttext']=0x2210;t['floorleftBig']=0x230A;t['floorleftbig']=0x230A;t['floorleftbigg']=0x230A;t['floorleftBigg']=0x230A;t['floorrightbig']=0x230B;t['floorrightBig']=0x230B;t['floorrightBigg']=0x230B;t['floorrightbigg']=0x230B;t['hatwide']=0x0302;t['hatwider']=0x0302;t['hatwidest']=0x0302;t['intercal']=0x1D40;t['integraldisplay']=0x222B;t['integraltext']=0x222B;t['intersectiondisplay']=0x22C2;t['intersectiontext']=0x22C2;t['logicalanddisplay']=0x2227;t['logicalandtext']=0x2227;t['logicalordisplay']=0x2228;t['logicalortext']=0x2228;t['parenleftBig']=0x0028;t['parenleftbig']=0x0028;t['parenleftBigg']=0x0028;t['parenleftbigg']=0x0028;t['parenrightBig']=0x0029;t['parenrightbig']=0x0029;t['parenrightBigg']=0x0029;t['parenrightbigg']=0x0029;t['prime']=0x2032;t['productdisplay']=0x220F;t['producttext']=0x220F;t['radicalbig']=0x221A;t['radicalBig']=0x221A;t['radicalBigg']=0x221A;t['radicalbigg']=0x221A;t['radicalbt']=0x221A;t['radicaltp']=0x221A;t['radicalvertex']=0x221A;t['slashbig']=0x002F;t['slashBig']=0x002F;t['slashBigg']=0x002F;t['slashbigg']=0x002F;t['summationdisplay']=0x2211;t['summationtext']=0x2211;t['tildewide']=0x02DC;t['tildewider']=0x02DC;t['tildewidest']=0x02DC;t['uniondisplay']=0x22C3;t['unionmultidisplay']=0x228E;t['unionmultitext']=0x228E;t['unionsqdisplay']=0x2294;t['unionsqtext']=0x2294;t['uniontext']=0x22C3;t['vextenddouble']=0x2225;t['vextendsingle']=0x2223;});var getDingbatsGlyphsUnicode=getLookupTableFactory(function(t){t['space']=0x0020;t['a1']=0x2701;t['a2']=0x2702;t['a202']=0x2703;t['a3']=0x2704;t['a4']=0x260E;t['a5']=0x2706;t['a119']=0x2707;t['a118']=0x2708;t['a117']=0x2709;t['a11']=0x261B;t['a12']=0x261E;t['a13']=0x270C;t['a14']=0x270D;t['a15']=0x270E;t['a16']=0x270F;t['a105']=0x2710;t['a17']=0x2711;t['a18']=0x2712;t['a19']=0x2713;t['a20']=0x2714;t['a21']=0x2715;t['a22']=0x2716;t['a23']=0x2717;t['a24']=0x2718;t['a25']=0x2719;t['a26']=0x271A;t['a27']=0x271B;t['a28']=0x271C;t['a6']=0x271D;t['a7']=0x271E;t['a8']=0x271F;t['a9']=0x2720;t['a10']=0x2721;t['a29']=0x2722;t['a30']=0x2723;t['a31']=0x2724;t['a32']=0x2725;t['a33']=0x2726;t['a34']=0x2727;t['a35']=0x2605;t['a36']=0x2729;t['a37']=0x272A;t['a38']=0x272B;t['a39']=0x272C;t['a40']=0x272D;t['a41']=0x272E;t['a42']=0x272F;t['a43']=0x2730;t['a44']=0x2731;t['a45']=0x2732;t['a46']=0x2733;t['a47']=0x2734;t['a48']=0x2735;t['a49']=0x2736;t['a50']=0x2737;t['a51']=0x2738;t['a52']=0x2739;t['a53']=0x273A;t['a54']=0x273B;t['a55']=0x273C;t['a56']=0x273D;t['a57']=0x273E;t['a58']=0x273F;t['a59']=0x2740;t['a60']=0x2741;t['a61']=0x2742;t['a62']=0x2743;t['a63']=0x2744;t['a64']=0x2745;t['a65']=0x2746;t['a66']=0x2747;t['a67']=0x2748;t['a68']=0x2749;t['a69']=0x274A;t['a70']=0x274B;t['a71']=0x25CF;t['a72']=0x274D;t['a73']=0x25A0;t['a74']=0x274F;t['a203']=0x2750;t['a75']=0x2751;t['a204']=0x2752;t['a76']=0x25B2;t['a77']=0x25BC;t['a78']=0x25C6;t['a79']=0x2756;t['a81']=0x25D7;t['a82']=0x2758;t['a83']=0x2759;t['a84']=0x275A;t['a97']=0x275B;t['a98']=0x275C;t['a99']=0x275D;t['a100']=0x275E;t['a101']=0x2761;t['a102']=0x2762;t['a103']=0x2763;t['a104']=0x2764;t['a106']=0x2765;t['a107']=0x2766;t['a108']=0x2767;t['a112']=0x2663;t['a111']=0x2666;t['a110']=0x2665;t['a109']=0x2660;t['a120']=0x2460;t['a121']=0x2461;t['a122']=0x2462;t['a123']=0x2463;t['a124']=0x2464;t['a125']=0x2465;t['a126']=0x2466;t['a127']=0x2467;t['a128']=0x2468;t['a129']=0x2469;t['a130']=0x2776;t['a131']=0x2777;t['a132']=0x2778;t['a133']=0x2779;t['a134']=0x277A;t['a135']=0x277B;t['a136']=0x277C;t['a137']=0x277D;t['a138']=0x277E;t['a139']=0x277F;t['a140']=0x2780;t['a141']=0x2781;t['a142']=0x2782;t['a143']=0x2783;t['a144']=0x2784;t['a145']=0x2785;t['a146']=0x2786;t['a147']=0x2787;t['a148']=0x2788;t['a149']=0x2789;t['a150']=0x278A;t['a151']=0x278B;t['a152']=0x278C;t['a153']=0x278D;t['a154']=0x278E;t['a155']=0x278F;t['a156']=0x2790;t['a157']=0x2791;t['a158']=0x2792;t['a159']=0x2793;t['a160']=0x2794;t['a161']=0x2192;t['a163']=0x2194;t['a164']=0x2195;t['a196']=0x2798;t['a165']=0x2799;t['a192']=0x279A;t['a166']=0x279B;t['a167']=0x279C;t['a168']=0x279D;t['a169']=0x279E;t['a170']=0x279F;t['a171']=0x27A0;t['a172']=0x27A1;t['a173']=0x27A2;t['a162']=0x27A3;t['a174']=0x27A4;t['a175']=0x27A5;t['a176']=0x27A6;t['a177']=0x27A7;t['a178']=0x27A8;t['a179']=0x27A9;t['a193']=0x27AA;t['a180']=0x27AB;t['a199']=0x27AC;t['a181']=0x27AD;t['a200']=0x27AE;t['a182']=0x27AF;t['a201']=0x27B1;t['a183']=0x27B2;t['a184']=0x27B3;t['a197']=0x27B4;t['a185']=0x27B5;t['a194']=0x27B6;t['a198']=0x27B7;t['a186']=0x27B8;t['a195']=0x27B9;t['a187']=0x27BA;t['a188']=0x27BB;t['a189']=0x27BC;t['a190']=0x27BD;t['a191']=0x27BE;t['a89']=0x2768;t['a90']=0x2769;t['a93']=0x276A;t['a94']=0x276B;t['a91']=0x276C;t['a92']=0x276D;t['a205']=0x276E;t['a85']=0x276F;t['a206']=0x2770;t['a86']=0x2771;t['a87']=0x2772;t['a88']=0x2773;t['a95']=0x2774;t['a96']=0x2775;t['.notdef']=0x0000;});exports.getGlyphsUnicode=getGlyphsUnicode;exports.getDingbatsGlyphsUnicode=getDingbatsGlyphsUnicode;/***/},/* 161 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.getSupplementalGlyphMapForCalibri=exports.getSupplementalGlyphMapForArialBlack=exports.getGlyphMapForStandardFonts=exports.getSymbolsFonts=exports.getSerifFonts=exports.getNonStdFontMap=exports.getStdFontMap=undefined;var _util=__w_pdfjs_require__(2);var getStdFontMap=(0,_util.getLookupTableFactory)(function(t){t['ArialNarrow']='Helvetica';t['ArialNarrow-Bold']='Helvetica-Bold';t['ArialNarrow-BoldItalic']='Helvetica-BoldOblique';t['ArialNarrow-Italic']='Helvetica-Oblique';t['ArialBlack']='Helvetica';t['ArialBlack-Bold']='Helvetica-Bold';t['ArialBlack-BoldItalic']='Helvetica-BoldOblique';t['ArialBlack-Italic']='Helvetica-Oblique';t['Arial-Black']='Helvetica';t['Arial-Black-Bold']='Helvetica-Bold';t['Arial-Black-BoldItalic']='Helvetica-BoldOblique';t['Arial-Black-Italic']='Helvetica-Oblique';t['Arial']='Helvetica';t['Arial-Bold']='Helvetica-Bold';t['Arial-BoldItalic']='Helvetica-BoldOblique';t['Arial-Italic']='Helvetica-Oblique';t['Arial-BoldItalicMT']='Helvetica-BoldOblique';t['Arial-BoldMT']='Helvetica-Bold';t['Arial-ItalicMT']='Helvetica-Oblique';t['ArialMT']='Helvetica';t['Courier-Bold']='Courier-Bold';t['Courier-BoldItalic']='Courier-BoldOblique';t['Courier-Italic']='Courier-Oblique';t['CourierNew']='Courier';t['CourierNew-Bold']='Courier-Bold';t['CourierNew-BoldItalic']='Courier-BoldOblique';t['CourierNew-Italic']='Courier-Oblique';t['CourierNewPS-BoldItalicMT']='Courier-BoldOblique';t['CourierNewPS-BoldMT']='Courier-Bold';t['CourierNewPS-ItalicMT']='Courier-Oblique';t['CourierNewPSMT']='Courier';t['Helvetica']='Helvetica';t['Helvetica-Bold']='Helvetica-Bold';t['Helvetica-BoldItalic']='Helvetica-BoldOblique';t['Helvetica-BoldOblique']='Helvetica-BoldOblique';t['Helvetica-Italic']='Helvetica-Oblique';t['Helvetica-Oblique']='Helvetica-Oblique';t['SegoeUISymbol']='Helvetica';t['Symbol-Bold']='Symbol';t['Symbol-BoldItalic']='Symbol';t['Symbol-Italic']='Symbol';t['TimesNewRoman']='Times-Roman';t['TimesNewRoman-Bold']='Times-Bold';t['TimesNewRoman-BoldItalic']='Times-BoldItalic';t['TimesNewRoman-Italic']='Times-Italic';t['TimesNewRomanPS']='Times-Roman';t['TimesNewRomanPS-Bold']='Times-Bold';t['TimesNewRomanPS-BoldItalic']='Times-BoldItalic';t['TimesNewRomanPS-BoldItalicMT']='Times-BoldItalic';t['TimesNewRomanPS-BoldMT']='Times-Bold';t['TimesNewRomanPS-Italic']='Times-Italic';t['TimesNewRomanPS-ItalicMT']='Times-Italic';t['TimesNewRomanPSMT']='Times-Roman';t['TimesNewRomanPSMT-Bold']='Times-Bold';t['TimesNewRomanPSMT-BoldItalic']='Times-BoldItalic';t['TimesNewRomanPSMT-Italic']='Times-Italic';});var getNonStdFontMap=(0,_util.getLookupTableFactory)(function(t){t['Calibri']='Helvetica';t['Calibri-Bold']='Helvetica-Bold';t['Calibri-BoldItalic']='Helvetica-BoldOblique';t['Calibri-Italic']='Helvetica-Oblique';t['CenturyGothic']='Helvetica';t['CenturyGothic-Bold']='Helvetica-Bold';t['CenturyGothic-BoldItalic']='Helvetica-BoldOblique';t['CenturyGothic-Italic']='Helvetica-Oblique';t['ComicSansMS']='Comic Sans MS';t['ComicSansMS-Bold']='Comic Sans MS-Bold';t['ComicSansMS-BoldItalic']='Comic Sans MS-BoldItalic';t['ComicSansMS-Italic']='Comic Sans MS-Italic';t['LucidaConsole']='Courier';t['LucidaConsole-Bold']='Courier-Bold';t['LucidaConsole-BoldItalic']='Courier-BoldOblique';t['LucidaConsole-Italic']='Courier-Oblique';t['LucidaSans-Demi']='Helvetica-Bold';t['MS-Gothic']='MS Gothic';t['MS-Gothic-Bold']='MS Gothic-Bold';t['MS-Gothic-BoldItalic']='MS Gothic-BoldItalic';t['MS-Gothic-Italic']='MS Gothic-Italic';t['MS-Mincho']='MS Mincho';t['MS-Mincho-Bold']='MS Mincho-Bold';t['MS-Mincho-BoldItalic']='MS Mincho-BoldItalic';t['MS-Mincho-Italic']='MS Mincho-Italic';t['MS-PGothic']='MS PGothic';t['MS-PGothic-Bold']='MS PGothic-Bold';t['MS-PGothic-BoldItalic']='MS PGothic-BoldItalic';t['MS-PGothic-Italic']='MS PGothic-Italic';t['MS-PMincho']='MS PMincho';t['MS-PMincho-Bold']='MS PMincho-Bold';t['MS-PMincho-BoldItalic']='MS PMincho-BoldItalic';t['MS-PMincho-Italic']='MS PMincho-Italic';t['NuptialScript']='Times-Italic';t['Wingdings']='ZapfDingbats';});var getSerifFonts=(0,_util.getLookupTableFactory)(function(t){t['Adobe Jenson']=true;t['Adobe Text']=true;t['Albertus']=true;t['Aldus']=true;t['Alexandria']=true;t['Algerian']=true;t['American Typewriter']=true;t['Antiqua']=true;t['Apex']=true;t['Arno']=true;t['Aster']=true;t['Aurora']=true;t['Baskerville']=true;t['Bell']=true;t['Bembo']=true;t['Bembo Schoolbook']=true;t['Benguiat']=true;t['Berkeley Old Style']=true;t['Bernhard Modern']=true;t['Berthold City']=true;t['Bodoni']=true;t['Bauer Bodoni']=true;t['Book Antiqua']=true;t['Bookman']=true;t['Bordeaux Roman']=true;t['Californian FB']=true;t['Calisto']=true;t['Calvert']=true;t['Capitals']=true;t['Cambria']=true;t['Cartier']=true;t['Caslon']=true;t['Catull']=true;t['Centaur']=true;t['Century Old Style']=true;t['Century Schoolbook']=true;t['Chaparral']=true;t['Charis SIL']=true;t['Cheltenham']=true;t['Cholla Slab']=true;t['Clarendon']=true;t['Clearface']=true;t['Cochin']=true;t['Colonna']=true;t['Computer Modern']=true;t['Concrete Roman']=true;t['Constantia']=true;t['Cooper Black']=true;t['Corona']=true;t['Ecotype']=true;t['Egyptienne']=true;t['Elephant']=true;t['Excelsior']=true;t['Fairfield']=true;t['FF Scala']=true;t['Folkard']=true;t['Footlight']=true;t['FreeSerif']=true;t['Friz Quadrata']=true;t['Garamond']=true;t['Gentium']=true;t['Georgia']=true;t['Gloucester']=true;t['Goudy Old Style']=true;t['Goudy Schoolbook']=true;t['Goudy Pro Font']=true;t['Granjon']=true;t['Guardian Egyptian']=true;t['Heather']=true;t['Hercules']=true;t['High Tower Text']=true;t['Hiroshige']=true;t['Hoefler Text']=true;t['Humana Serif']=true;t['Imprint']=true;t['Ionic No. 5']=true;t['Janson']=true;t['Joanna']=true;t['Korinna']=true;t['Lexicon']=true;t['Liberation Serif']=true;t['Linux Libertine']=true;t['Literaturnaya']=true;t['Lucida']=true;t['Lucida Bright']=true;t['Melior']=true;t['Memphis']=true;t['Miller']=true;t['Minion']=true;t['Modern']=true;t['Mona Lisa']=true;t['Mrs Eaves']=true;t['MS Serif']=true;t['Museo Slab']=true;t['New York']=true;t['Nimbus Roman']=true;t['NPS Rawlinson Roadway']=true;t['NuptialScript']=true;t['Palatino']=true;t['Perpetua']=true;t['Plantin']=true;t['Plantin Schoolbook']=true;t['Playbill']=true;t['Poor Richard']=true;t['Rawlinson Roadway']=true;t['Renault']=true;t['Requiem']=true;t['Rockwell']=true;t['Roman']=true;t['Rotis Serif']=true;t['Sabon']=true;t['Scala']=true;t['Seagull']=true;t['Sistina']=true;t['Souvenir']=true;t['STIX']=true;t['Stone Informal']=true;t['Stone Serif']=true;t['Sylfaen']=true;t['Times']=true;t['Trajan']=true;t['Trinité']=true;t['Trump Mediaeval']=true;t['Utopia']=true;t['Vale Type']=true;t['Bitstream Vera']=true;t['Vera Serif']=true;t['Versailles']=true;t['Wanted']=true;t['Weiss']=true;t['Wide Latin']=true;t['Windsor']=true;t['XITS']=true;});var getSymbolsFonts=(0,_util.getLookupTableFactory)(function(t){t['Dingbats']=true;t['Symbol']=true;t['ZapfDingbats']=true;});var getGlyphMapForStandardFonts=(0,_util.getLookupTableFactory)(function(t){t[2]=10;t[3]=32;t[4]=33;t[5]=34;t[6]=35;t[7]=36;t[8]=37;t[9]=38;t[10]=39;t[11]=40;t[12]=41;t[13]=42;t[14]=43;t[15]=44;t[16]=45;t[17]=46;t[18]=47;t[19]=48;t[20]=49;t[21]=50;t[22]=51;t[23]=52;t[24]=53;t[25]=54;t[26]=55;t[27]=56;t[28]=57;t[29]=58;t[30]=894;t[31]=60;t[32]=61;t[33]=62;t[34]=63;t[35]=64;t[36]=65;t[37]=66;t[38]=67;t[39]=68;t[40]=69;t[41]=70;t[42]=71;t[43]=72;t[44]=73;t[45]=74;t[46]=75;t[47]=76;t[48]=77;t[49]=78;t[50]=79;t[51]=80;t[52]=81;t[53]=82;t[54]=83;t[55]=84;t[56]=85;t[57]=86;t[58]=87;t[59]=88;t[60]=89;t[61]=90;t[62]=91;t[63]=92;t[64]=93;t[65]=94;t[66]=95;t[67]=96;t[68]=97;t[69]=98;t[70]=99;t[71]=100;t[72]=101;t[73]=102;t[74]=103;t[75]=104;t[76]=105;t[77]=106;t[78]=107;t[79]=108;t[80]=109;t[81]=110;t[82]=111;t[83]=112;t[84]=113;t[85]=114;t[86]=115;t[87]=116;t[88]=117;t[89]=118;t[90]=119;t[91]=120;t[92]=121;t[93]=122;t[94]=123;t[95]=124;t[96]=125;t[97]=126;t[98]=196;t[99]=197;t[100]=199;t[101]=201;t[102]=209;t[103]=214;t[104]=220;t[105]=225;t[106]=224;t[107]=226;t[108]=228;t[109]=227;t[110]=229;t[111]=231;t[112]=233;t[113]=232;t[114]=234;t[115]=235;t[116]=237;t[117]=236;t[118]=238;t[119]=239;t[120]=241;t[121]=243;t[122]=242;t[123]=244;t[124]=246;t[125]=245;t[126]=250;t[127]=249;t[128]=251;t[129]=252;t[130]=8224;t[131]=176;t[132]=162;t[133]=163;t[134]=167;t[135]=8226;t[136]=182;t[137]=223;t[138]=174;t[139]=169;t[140]=8482;t[141]=180;t[142]=168;t[143]=8800;t[144]=198;t[145]=216;t[146]=8734;t[147]=177;t[148]=8804;t[149]=8805;t[150]=165;t[151]=181;t[152]=8706;t[153]=8721;t[154]=8719;t[156]=8747;t[157]=170;t[158]=186;t[159]=8486;t[160]=230;t[161]=248;t[162]=191;t[163]=161;t[164]=172;t[165]=8730;t[166]=402;t[167]=8776;t[168]=8710;t[169]=171;t[170]=187;t[171]=8230;t[210]=218;t[223]=711;t[224]=321;t[225]=322;t[227]=353;t[229]=382;t[234]=253;t[252]=263;t[253]=268;t[254]=269;t[258]=258;t[260]=260;t[261]=261;t[265]=280;t[266]=281;t[268]=283;t[269]=313;t[275]=323;t[276]=324;t[278]=328;t[284]=345;t[285]=346;t[286]=347;t[292]=367;t[295]=377;t[296]=378;t[298]=380;t[305]=963;t[306]=964;t[307]=966;t[308]=8215;t[309]=8252;t[310]=8319;t[311]=8359;t[312]=8592;t[313]=8593;t[337]=9552;t[493]=1039;t[494]=1040;t[705]=1524;t[706]=8362;t[710]=64288;t[711]=64298;t[759]=1617;t[761]=1776;t[763]=1778;t[775]=1652;t[777]=1764;t[778]=1780;t[779]=1781;t[780]=1782;t[782]=771;t[783]=64726;t[786]=8363;t[788]=8532;t[790]=768;t[791]=769;t[792]=768;t[795]=803;t[797]=64336;t[798]=64337;t[799]=64342;t[800]=64343;t[801]=64344;t[802]=64345;t[803]=64362;t[804]=64363;t[805]=64364;t[2424]=7821;t[2425]=7822;t[2426]=7823;t[2427]=7824;t[2428]=7825;t[2429]=7826;t[2430]=7827;t[2433]=7682;t[2678]=8045;t[2679]=8046;t[2830]=1552;t[2838]=686;t[2840]=751;t[2842]=753;t[2843]=754;t[2844]=755;t[2846]=757;t[2856]=767;t[2857]=848;t[2858]=849;t[2862]=853;t[2863]=854;t[2864]=855;t[2865]=861;t[2866]=862;t[2906]=7460;t[2908]=7462;t[2909]=7463;t[2910]=7464;t[2912]=7466;t[2913]=7467;t[2914]=7468;t[2916]=7470;t[2917]=7471;t[2918]=7472;t[2920]=7474;t[2921]=7475;t[2922]=7476;t[2924]=7478;t[2925]=7479;t[2926]=7480;t[2928]=7482;t[2929]=7483;t[2930]=7484;t[2932]=7486;t[2933]=7487;t[2934]=7488;t[2936]=7490;t[2937]=7491;t[2938]=7492;t[2940]=7494;t[2941]=7495;t[2942]=7496;t[2944]=7498;t[2946]=7500;t[2948]=7502;t[2950]=7504;t[2951]=7505;t[2952]=7506;t[2954]=7508;t[2955]=7509;t[2956]=7510;t[2958]=7512;t[2959]=7513;t[2960]=7514;t[2962]=7516;t[2963]=7517;t[2964]=7518;t[2966]=7520;t[2967]=7521;t[2968]=7522;t[2970]=7524;t[2971]=7525;t[2972]=7526;t[2974]=7528;t[2975]=7529;t[2976]=7530;t[2978]=1537;t[2979]=1538;t[2980]=1539;t[2982]=1549;t[2983]=1551;t[2984]=1552;t[2986]=1554;t[2987]=1555;t[2988]=1556;t[2990]=1623;t[2991]=1624;t[2995]=1775;t[2999]=1791;t[3002]=64290;t[3003]=64291;t[3004]=64292;t[3006]=64294;t[3007]=64295;t[3008]=64296;t[3011]=1900;t[3014]=8223;t[3015]=8244;t[3017]=7532;t[3018]=7533;t[3019]=7534;t[3075]=7590;t[3076]=7591;t[3079]=7594;t[3080]=7595;t[3083]=7598;t[3084]=7599;t[3087]=7602;t[3088]=7603;t[3091]=7606;t[3092]=7607;t[3095]=7610;t[3096]=7611;t[3099]=7614;t[3100]=7615;t[3103]=7618;t[3104]=7619;t[3107]=8337;t[3108]=8338;t[3116]=1884;t[3119]=1885;t[3120]=1885;t[3123]=1886;t[3124]=1886;t[3127]=1887;t[3128]=1887;t[3131]=1888;t[3132]=1888;t[3135]=1889;t[3136]=1889;t[3139]=1890;t[3140]=1890;t[3143]=1891;t[3144]=1891;t[3147]=1892;t[3148]=1892;t[3153]=580;t[3154]=581;t[3157]=584;t[3158]=585;t[3161]=588;t[3162]=589;t[3165]=891;t[3166]=892;t[3169]=1274;t[3170]=1275;t[3173]=1278;t[3174]=1279;t[3181]=7622;t[3182]=7623;t[3282]=11799;t[3316]=578;t[3379]=42785;t[3393]=1159;t[3416]=8377;});var getSupplementalGlyphMapForArialBlack=(0,_util.getLookupTableFactory)(function(t){t[227]=322;t[264]=261;t[291]=346;});var getSupplementalGlyphMapForCalibri=(0,_util.getLookupTableFactory)(function(t){t[1]=32;t[4]=65;t[17]=66;t[18]=67;t[24]=68;t[28]=69;t[38]=70;t[39]=71;t[44]=72;t[47]=73;t[58]=74;t[60]=75;t[62]=76;t[68]=77;t[69]=78;t[75]=79;t[87]=80;t[89]=81;t[90]=82;t[94]=83;t[100]=84;t[104]=85;t[115]=86;t[116]=87;t[121]=88;t[122]=89;t[127]=90;t[258]=97;t[268]=261;t[271]=98;t[272]=99;t[273]=263;t[282]=100;t[286]=101;t[295]=281;t[296]=102;t[336]=103;t[346]=104;t[349]=105;t[361]=106;t[364]=107;t[367]=108;t[371]=322;t[373]=109;t[374]=110;t[381]=111;t[383]=243;t[393]=112;t[395]=113;t[396]=114;t[400]=115;t[401]=347;t[410]=116;t[437]=117;t[448]=118;t[449]=119;t[454]=120;t[455]=121;t[460]=122;t[463]=380;t[853]=44;t[855]=58;t[856]=46;t[876]=47;t[878]=45;t[882]=45;t[894]=40;t[895]=41;t[896]=91;t[897]=93;t[923]=64;t[1004]=48;t[1005]=49;t[1006]=50;t[1007]=51;t[1008]=52;t[1009]=53;t[1010]=54;t[1011]=55;t[1012]=56;t[1013]=57;t[1081]=37;t[1085]=43;t[1086]=45;});exports.getStdFontMap=getStdFontMap;exports.getNonStdFontMap=getNonStdFontMap;exports.getSerifFonts=getSerifFonts;exports.getSymbolsFonts=getSymbolsFonts;exports.getGlyphMapForStandardFonts=getGlyphMapForStandardFonts;exports.getSupplementalGlyphMapForArialBlack=getSupplementalGlyphMapForArialBlack;exports.getSupplementalGlyphMapForCalibri=getSupplementalGlyphMapForCalibri;/***/},/* 162 */ /***/function(module,exports,__w_pdfjs_require__){var getLookupTableFactory=__w_pdfjs_require__(2).getLookupTableFactory;var getSpecialPUASymbols=getLookupTableFactory(function(t){t[63721]=0x00A9;t[63193]=0x00A9;t[63720]=0x00AE;t[63194]=0x00AE;t[63722]=0x2122;t[63195]=0x2122;t[63729]=0x23A7;t[63730]=0x23A8;t[63731]=0x23A9;t[63740]=0x23AB;t[63741]=0x23AC;t[63742]=0x23AD;t[63726]=0x23A1;t[63727]=0x23A2;t[63728]=0x23A3;t[63737]=0x23A4;t[63738]=0x23A5;t[63739]=0x23A6;t[63723]=0x239B;t[63724]=0x239C;t[63725]=0x239D;t[63734]=0x239E;t[63735]=0x239F;t[63736]=0x23A0;});function mapSpecialUnicodeValues(code){if(code>=0xFFF0&&code<=0xFFFF){return 0;}else if(code>=0xF600&&code<=0xF8FF){return getSpecialPUASymbols()[code]||code;}else if(code===0x00AD){return 0x002D;}return code;}function getUnicodeForGlyph(name,glyphsUnicodeMap){var unicode=glyphsUnicodeMap[name];if(unicode!==undefined){return unicode;}if(!name){return-1;}if(name[0]==='u'){var nameLen=name.length,hexStr;if(nameLen===7&&name[1]==='n'&&name[2]==='i'){hexStr=name.substring(3);}else if(nameLen>=5&&nameLen<=7){hexStr=name.substring(1);}else{return-1;}if(hexStr===hexStr.toUpperCase()){unicode=parseInt(hexStr,16);if(unicode>=0){return unicode;}}}return-1;}var UnicodeRanges=[{'begin':0x0000,'end':0x007F},{'begin':0x0080,'end':0x00FF},{'begin':0x0100,'end':0x017F},{'begin':0x0180,'end':0x024F},{'begin':0x0250,'end':0x02AF},{'begin':0x02B0,'end':0x02FF},{'begin':0x0300,'end':0x036F},{'begin':0x0370,'end':0x03FF},{'begin':0x2C80,'end':0x2CFF},{'begin':0x0400,'end':0x04FF},{'begin':0x0530,'end':0x058F},{'begin':0x0590,'end':0x05FF},{'begin':0xA500,'end':0xA63F},{'begin':0x0600,'end':0x06FF},{'begin':0x07C0,'end':0x07FF},{'begin':0x0900,'end':0x097F},{'begin':0x0980,'end':0x09FF},{'begin':0x0A00,'end':0x0A7F},{'begin':0x0A80,'end':0x0AFF},{'begin':0x0B00,'end':0x0B7F},{'begin':0x0B80,'end':0x0BFF},{'begin':0x0C00,'end':0x0C7F},{'begin':0x0C80,'end':0x0CFF},{'begin':0x0D00,'end':0x0D7F},{'begin':0x0E00,'end':0x0E7F},{'begin':0x0E80,'end':0x0EFF},{'begin':0x10A0,'end':0x10FF},{'begin':0x1B00,'end':0x1B7F},{'begin':0x1100,'end':0x11FF},{'begin':0x1E00,'end':0x1EFF},{'begin':0x1F00,'end':0x1FFF},{'begin':0x2000,'end':0x206F},{'begin':0x2070,'end':0x209F},{'begin':0x20A0,'end':0x20CF},{'begin':0x20D0,'end':0x20FF},{'begin':0x2100,'end':0x214F},{'begin':0x2150,'end':0x218F},{'begin':0x2190,'end':0x21FF},{'begin':0x2200,'end':0x22FF},{'begin':0x2300,'end':0x23FF},{'begin':0x2400,'end':0x243F},{'begin':0x2440,'end':0x245F},{'begin':0x2460,'end':0x24FF},{'begin':0x2500,'end':0x257F},{'begin':0x2580,'end':0x259F},{'begin':0x25A0,'end':0x25FF},{'begin':0x2600,'end':0x26FF},{'begin':0x2700,'end':0x27BF},{'begin':0x3000,'end':0x303F},{'begin':0x3040,'end':0x309F},{'begin':0x30A0,'end':0x30FF},{'begin':0x3100,'end':0x312F},{'begin':0x3130,'end':0x318F},{'begin':0xA840,'end':0xA87F},{'begin':0x3200,'end':0x32FF},{'begin':0x3300,'end':0x33FF},{'begin':0xAC00,'end':0xD7AF},{'begin':0xD800,'end':0xDFFF},{'begin':0x10900,'end':0x1091F},{'begin':0x4E00,'end':0x9FFF},{'begin':0xE000,'end':0xF8FF},{'begin':0x31C0,'end':0x31EF},{'begin':0xFB00,'end':0xFB4F},{'begin':0xFB50,'end':0xFDFF},{'begin':0xFE20,'end':0xFE2F},{'begin':0xFE10,'end':0xFE1F},{'begin':0xFE50,'end':0xFE6F},{'begin':0xFE70,'end':0xFEFF},{'begin':0xFF00,'end':0xFFEF},{'begin':0xFFF0,'end':0xFFFF},{'begin':0x0F00,'end':0x0FFF},{'begin':0x0700,'end':0x074F},{'begin':0x0780,'end':0x07BF},{'begin':0x0D80,'end':0x0DFF},{'begin':0x1000,'end':0x109F},{'begin':0x1200,'end':0x137F},{'begin':0x13A0,'end':0x13FF},{'begin':0x1400,'end':0x167F},{'begin':0x1680,'end':0x169F},{'begin':0x16A0,'end':0x16FF},{'begin':0x1780,'end':0x17FF},{'begin':0x1800,'end':0x18AF},{'begin':0x2800,'end':0x28FF},{'begin':0xA000,'end':0xA48F},{'begin':0x1700,'end':0x171F},{'begin':0x10300,'end':0x1032F},{'begin':0x10330,'end':0x1034F},{'begin':0x10400,'end':0x1044F},{'begin':0x1D000,'end':0x1D0FF},{'begin':0x1D400,'end':0x1D7FF},{'begin':0xFF000,'end':0xFFFFD},{'begin':0xFE00,'end':0xFE0F},{'begin':0xE0000,'end':0xE007F},{'begin':0x1900,'end':0x194F},{'begin':0x1950,'end':0x197F},{'begin':0x1980,'end':0x19DF},{'begin':0x1A00,'end':0x1A1F},{'begin':0x2C00,'end':0x2C5F},{'begin':0x2D30,'end':0x2D7F},{'begin':0x4DC0,'end':0x4DFF},{'begin':0xA800,'end':0xA82F},{'begin':0x10000,'end':0x1007F},{'begin':0x10140,'end':0x1018F},{'begin':0x10380,'end':0x1039F},{'begin':0x103A0,'end':0x103DF},{'begin':0x10450,'end':0x1047F},{'begin':0x10480,'end':0x104AF},{'begin':0x10800,'end':0x1083F},{'begin':0x10A00,'end':0x10A5F},{'begin':0x1D300,'end':0x1D35F},{'begin':0x12000,'end':0x123FF},{'begin':0x1D360,'end':0x1D37F},{'begin':0x1B80,'end':0x1BBF},{'begin':0x1C00,'end':0x1C4F},{'begin':0x1C50,'end':0x1C7F},{'begin':0xA880,'end':0xA8DF},{'begin':0xA900,'end':0xA92F},{'begin':0xA930,'end':0xA95F},{'begin':0xAA00,'end':0xAA5F},{'begin':0x10190,'end':0x101CF},{'begin':0x101D0,'end':0x101FF},{'begin':0x102A0,'end':0x102DF},{'begin':0x1F030,'end':0x1F09F}];function getUnicodeRangeFor(value){for(var i=0,ii=UnicodeRanges.length;i<ii;i++){var range=UnicodeRanges[i];if(value>=range.begin&&value<range.end){return i;}}return-1;}function isRTLRangeFor(value){var range=UnicodeRanges[13];if(value>=range.begin&&value<range.end){return true;}range=UnicodeRanges[11];if(value>=range.begin&&value<range.end){return true;}return false;}var getNormalizedUnicodes=getLookupTableFactory(function(t){t["\xA8"]=" \u0308";t["\xAF"]=" \u0304";t["\xB4"]=" \u0301";t["\xB5"]="\u03BC";t["\xB8"]=" \u0327";t["\u0132"]="IJ";t["\u0133"]="ij";t["\u013F"]="L\xB7";t["\u0140"]="l\xB7";t["\u0149"]="\u02BCn";t["\u017F"]="s";t["\u01C4"]="D\u017D";t["\u01C5"]="D\u017E";t["\u01C6"]="d\u017E";t["\u01C7"]="LJ";t["\u01C8"]="Lj";t["\u01C9"]="lj";t["\u01CA"]="NJ";t["\u01CB"]="Nj";t["\u01CC"]="nj";t["\u01F1"]="DZ";t["\u01F2"]="Dz";t["\u01F3"]="dz";t["\u02D8"]=" \u0306";t["\u02D9"]=" \u0307";t["\u02DA"]=" \u030A";t["\u02DB"]=" \u0328";t["\u02DC"]=" \u0303";t["\u02DD"]=" \u030B";t["\u037A"]=" \u0345";t["\u0384"]=" \u0301";t["\u03D0"]="\u03B2";t["\u03D1"]="\u03B8";t["\u03D2"]="\u03A5";t["\u03D5"]="\u03C6";t["\u03D6"]="\u03C0";t["\u03F0"]="\u03BA";t["\u03F1"]="\u03C1";t["\u03F2"]="\u03C2";t["\u03F4"]="\u0398";t["\u03F5"]="\u03B5";t["\u03F9"]="\u03A3";t["\u0587"]="\u0565\u0582";t["\u0675"]="\u0627\u0674";t["\u0676"]="\u0648\u0674";t["\u0677"]="\u06C7\u0674";t["\u0678"]="\u064A\u0674";t["\u0E33"]="\u0E4D\u0E32";t["\u0EB3"]="\u0ECD\u0EB2";t["\u0EDC"]="\u0EAB\u0E99";t["\u0EDD"]="\u0EAB\u0EA1";t["\u0F77"]="\u0FB2\u0F81";t["\u0F79"]="\u0FB3\u0F81";t["\u1E9A"]="a\u02BE";t["\u1FBD"]=" \u0313";t["\u1FBF"]=" \u0313";t["\u1FC0"]=" \u0342";t["\u1FFE"]=" \u0314";t["\u2002"]=" ";t["\u2003"]=" ";t["\u2004"]=" ";t["\u2005"]=" ";t["\u2006"]=" ";t["\u2008"]=" ";t["\u2009"]=" ";t["\u200A"]=" ";t["\u2017"]=" \u0333";t["\u2024"]=".";t["\u2025"]="..";t["\u2026"]="...";t["\u2033"]="\u2032\u2032";t["\u2034"]="\u2032\u2032\u2032";t["\u2036"]="\u2035\u2035";t["\u2037"]="\u2035\u2035\u2035";t["\u203C"]="!!";t["\u203E"]=" \u0305";t["\u2047"]="??";t["\u2048"]="?!";t["\u2049"]="!?";t["\u2057"]="\u2032\u2032\u2032\u2032";t["\u205F"]=" ";t["\u20A8"]="Rs";t["\u2100"]="a/c";t["\u2101"]="a/s";t["\u2103"]="\xB0C";t["\u2105"]="c/o";t["\u2106"]="c/u";t["\u2107"]="\u0190";t["\u2109"]="\xB0F";t["\u2116"]="No";t["\u2121"]="TEL";t["\u2135"]="\u05D0";t["\u2136"]="\u05D1";t["\u2137"]="\u05D2";t["\u2138"]="\u05D3";t["\u213B"]="FAX";t["\u2160"]="I";t["\u2161"]="II";t["\u2162"]="III";t["\u2163"]="IV";t["\u2164"]="V";t["\u2165"]="VI";t["\u2166"]="VII";t["\u2167"]="VIII";t["\u2168"]="IX";t["\u2169"]="X";t["\u216A"]="XI";t["\u216B"]="XII";t["\u216C"]="L";t["\u216D"]="C";t["\u216E"]="D";t["\u216F"]="M";t["\u2170"]="i";t["\u2171"]="ii";t["\u2172"]="iii";t["\u2173"]="iv";t["\u2174"]="v";t["\u2175"]="vi";t["\u2176"]="vii";t["\u2177"]="viii";t["\u2178"]="ix";t["\u2179"]="x";t["\u217A"]="xi";t["\u217B"]="xii";t["\u217C"]="l";t["\u217D"]="c";t["\u217E"]="d";t["\u217F"]="m";t["\u222C"]="\u222B\u222B";t["\u222D"]="\u222B\u222B\u222B";t["\u222F"]="\u222E\u222E";t["\u2230"]="\u222E\u222E\u222E";t["\u2474"]="(1)";t["\u2475"]="(2)";t["\u2476"]="(3)";t["\u2477"]="(4)";t["\u2478"]="(5)";t["\u2479"]="(6)";t["\u247A"]="(7)";t["\u247B"]="(8)";t["\u247C"]="(9)";t["\u247D"]="(10)";t["\u247E"]="(11)";t["\u247F"]="(12)";t["\u2480"]="(13)";t["\u2481"]="(14)";t["\u2482"]="(15)";t["\u2483"]="(16)";t["\u2484"]="(17)";t["\u2485"]="(18)";t["\u2486"]="(19)";t["\u2487"]="(20)";t["\u2488"]="1.";t["\u2489"]="2.";t["\u248A"]="3.";t["\u248B"]="4.";t["\u248C"]="5.";t["\u248D"]="6.";t["\u248E"]="7.";t["\u248F"]="8.";t["\u2490"]="9.";t["\u2491"]="10.";t["\u2492"]="11.";t["\u2493"]="12.";t["\u2494"]="13.";t["\u2495"]="14.";t["\u2496"]="15.";t["\u2497"]="16.";t["\u2498"]="17.";t["\u2499"]="18.";t["\u249A"]="19.";t["\u249B"]="20.";t["\u249C"]="(a)";t["\u249D"]="(b)";t["\u249E"]="(c)";t["\u249F"]="(d)";t["\u24A0"]="(e)";t["\u24A1"]="(f)";t["\u24A2"]="(g)";t["\u24A3"]="(h)";t["\u24A4"]="(i)";t["\u24A5"]="(j)";t["\u24A6"]="(k)";t["\u24A7"]="(l)";t["\u24A8"]="(m)";t["\u24A9"]="(n)";t["\u24AA"]="(o)";t["\u24AB"]="(p)";t["\u24AC"]="(q)";t["\u24AD"]="(r)";t["\u24AE"]="(s)";t["\u24AF"]="(t)";t["\u24B0"]="(u)";t["\u24B1"]="(v)";t["\u24B2"]="(w)";t["\u24B3"]="(x)";t["\u24B4"]="(y)";t["\u24B5"]="(z)";t["\u2A0C"]="\u222B\u222B\u222B\u222B";t["\u2A74"]="::=";t["\u2A75"]="==";t["\u2A76"]="===";t["\u2E9F"]="\u6BCD";t["\u2EF3"]="\u9F9F";t["\u2F00"]="\u4E00";t["\u2F01"]="\u4E28";t["\u2F02"]="\u4E36";t["\u2F03"]="\u4E3F";t["\u2F04"]="\u4E59";t["\u2F05"]="\u4E85";t["\u2F06"]="\u4E8C";t["\u2F07"]="\u4EA0";t["\u2F08"]="\u4EBA";t["\u2F09"]="\u513F";t["\u2F0A"]="\u5165";t["\u2F0B"]="\u516B";t["\u2F0C"]="\u5182";t["\u2F0D"]="\u5196";t["\u2F0E"]="\u51AB";t["\u2F0F"]="\u51E0";t["\u2F10"]="\u51F5";t["\u2F11"]="\u5200";t["\u2F12"]="\u529B";t["\u2F13"]="\u52F9";t["\u2F14"]="\u5315";t["\u2F15"]="\u531A";t["\u2F16"]="\u5338";t["\u2F17"]="\u5341";t["\u2F18"]="\u535C";t["\u2F19"]="\u5369";t["\u2F1A"]="\u5382";t["\u2F1B"]="\u53B6";t["\u2F1C"]="\u53C8";t["\u2F1D"]="\u53E3";t["\u2F1E"]="\u56D7";t["\u2F1F"]="\u571F";t["\u2F20"]="\u58EB";t["\u2F21"]="\u5902";t["\u2F22"]="\u590A";t["\u2F23"]="\u5915";t["\u2F24"]="\u5927";t["\u2F25"]="\u5973";t["\u2F26"]="\u5B50";t["\u2F27"]="\u5B80";t["\u2F28"]="\u5BF8";t["\u2F29"]="\u5C0F";t["\u2F2A"]="\u5C22";t["\u2F2B"]="\u5C38";t["\u2F2C"]="\u5C6E";t["\u2F2D"]="\u5C71";t["\u2F2E"]="\u5DDB";t["\u2F2F"]="\u5DE5";t["\u2F30"]="\u5DF1";t["\u2F31"]="\u5DFE";t["\u2F32"]="\u5E72";t["\u2F33"]="\u5E7A";t["\u2F34"]="\u5E7F";t["\u2F35"]="\u5EF4";t["\u2F36"]="\u5EFE";t["\u2F37"]="\u5F0B";t["\u2F38"]="\u5F13";t["\u2F39"]="\u5F50";t["\u2F3A"]="\u5F61";t["\u2F3B"]="\u5F73";t["\u2F3C"]="\u5FC3";t["\u2F3D"]="\u6208";t["\u2F3E"]="\u6236";t["\u2F3F"]="\u624B";t["\u2F40"]="\u652F";t["\u2F41"]="\u6534";t["\u2F42"]="\u6587";t["\u2F43"]="\u6597";t["\u2F44"]="\u65A4";t["\u2F45"]="\u65B9";t["\u2F46"]="\u65E0";t["\u2F47"]="\u65E5";t["\u2F48"]="\u66F0";t["\u2F49"]="\u6708";t["\u2F4A"]="\u6728";t["\u2F4B"]="\u6B20";t["\u2F4C"]="\u6B62";t["\u2F4D"]="\u6B79";t["\u2F4E"]="\u6BB3";t["\u2F4F"]="\u6BCB";t["\u2F50"]="\u6BD4";t["\u2F51"]="\u6BDB";t["\u2F52"]="\u6C0F";t["\u2F53"]="\u6C14";t["\u2F54"]="\u6C34";t["\u2F55"]="\u706B";t["\u2F56"]="\u722A";t["\u2F57"]="\u7236";t["\u2F58"]="\u723B";t["\u2F59"]="\u723F";t["\u2F5A"]="\u7247";t["\u2F5B"]="\u7259";t["\u2F5C"]="\u725B";t["\u2F5D"]="\u72AC";t["\u2F5E"]="\u7384";t["\u2F5F"]="\u7389";t["\u2F60"]="\u74DC";t["\u2F61"]="\u74E6";t["\u2F62"]="\u7518";t["\u2F63"]="\u751F";t["\u2F64"]="\u7528";t["\u2F65"]="\u7530";t["\u2F66"]="\u758B";t["\u2F67"]="\u7592";t["\u2F68"]="\u7676";t["\u2F69"]="\u767D";t["\u2F6A"]="\u76AE";t["\u2F6B"]="\u76BF";t["\u2F6C"]="\u76EE";t["\u2F6D"]="\u77DB";t["\u2F6E"]="\u77E2";t["\u2F6F"]="\u77F3";t["\u2F70"]="\u793A";t["\u2F71"]="\u79B8";t["\u2F72"]="\u79BE";t["\u2F73"]="\u7A74";t["\u2F74"]="\u7ACB";t["\u2F75"]="\u7AF9";t["\u2F76"]="\u7C73";t["\u2F77"]="\u7CF8";t["\u2F78"]="\u7F36";t["\u2F79"]="\u7F51";t["\u2F7A"]="\u7F8A";t["\u2F7B"]="\u7FBD";t["\u2F7C"]="\u8001";t["\u2F7D"]="\u800C";t["\u2F7E"]="\u8012";t["\u2F7F"]="\u8033";t["\u2F80"]="\u807F";t["\u2F81"]="\u8089";t["\u2F82"]="\u81E3";t["\u2F83"]="\u81EA";t["\u2F84"]="\u81F3";t["\u2F85"]="\u81FC";t["\u2F86"]="\u820C";t["\u2F87"]="\u821B";t["\u2F88"]="\u821F";t["\u2F89"]="\u826E";t["\u2F8A"]="\u8272";t["\u2F8B"]="\u8278";t["\u2F8C"]="\u864D";t["\u2F8D"]="\u866B";t["\u2F8E"]="\u8840";t["\u2F8F"]="\u884C";t["\u2F90"]="\u8863";t["\u2F91"]="\u897E";t["\u2F92"]="\u898B";t["\u2F93"]="\u89D2";t["\u2F94"]="\u8A00";t["\u2F95"]="\u8C37";t["\u2F96"]="\u8C46";t["\u2F97"]="\u8C55";t["\u2F98"]="\u8C78";t["\u2F99"]="\u8C9D";t["\u2F9A"]="\u8D64";t["\u2F9B"]="\u8D70";t["\u2F9C"]="\u8DB3";t["\u2F9D"]="\u8EAB";t["\u2F9E"]="\u8ECA";t["\u2F9F"]="\u8F9B";t["\u2FA0"]="\u8FB0";t["\u2FA1"]="\u8FB5";t["\u2FA2"]="\u9091";t["\u2FA3"]="\u9149";t["\u2FA4"]="\u91C6";t["\u2FA5"]="\u91CC";t["\u2FA6"]="\u91D1";t["\u2FA7"]="\u9577";t["\u2FA8"]="\u9580";t["\u2FA9"]="\u961C";t["\u2FAA"]="\u96B6";t["\u2FAB"]="\u96B9";t["\u2FAC"]="\u96E8";t["\u2FAD"]="\u9751";t["\u2FAE"]="\u975E";t["\u2FAF"]="\u9762";t["\u2FB0"]="\u9769";t["\u2FB1"]="\u97CB";t["\u2FB2"]="\u97ED";t["\u2FB3"]="\u97F3";t["\u2FB4"]="\u9801";t["\u2FB5"]="\u98A8";t["\u2FB6"]="\u98DB";t["\u2FB7"]="\u98DF";t["\u2FB8"]="\u9996";t["\u2FB9"]="\u9999";t["\u2FBA"]="\u99AC";t["\u2FBB"]="\u9AA8";t["\u2FBC"]="\u9AD8";t["\u2FBD"]="\u9ADF";t["\u2FBE"]="\u9B25";t["\u2FBF"]="\u9B2F";t["\u2FC0"]="\u9B32";t["\u2FC1"]="\u9B3C";t["\u2FC2"]="\u9B5A";t["\u2FC3"]="\u9CE5";t["\u2FC4"]="\u9E75";t["\u2FC5"]="\u9E7F";t["\u2FC6"]="\u9EA5";t["\u2FC7"]="\u9EBB";t["\u2FC8"]="\u9EC3";t["\u2FC9"]="\u9ECD";t["\u2FCA"]="\u9ED1";t["\u2FCB"]="\u9EF9";t["\u2FCC"]="\u9EFD";t["\u2FCD"]="\u9F0E";t["\u2FCE"]="\u9F13";t["\u2FCF"]="\u9F20";t["\u2FD0"]="\u9F3B";t["\u2FD1"]="\u9F4A";t["\u2FD2"]="\u9F52";t["\u2FD3"]="\u9F8D";t["\u2FD4"]="\u9F9C";t["\u2FD5"]="\u9FA0";t["\u3036"]="\u3012";t["\u3038"]="\u5341";t["\u3039"]="\u5344";t["\u303A"]="\u5345";t["\u309B"]=" \u3099";t["\u309C"]=" \u309A";t["\u3131"]="\u1100";t["\u3132"]="\u1101";t["\u3133"]="\u11AA";t["\u3134"]="\u1102";t["\u3135"]="\u11AC";t["\u3136"]="\u11AD";t["\u3137"]="\u1103";t["\u3138"]="\u1104";t["\u3139"]="\u1105";t["\u313A"]="\u11B0";t["\u313B"]="\u11B1";t["\u313C"]="\u11B2";t["\u313D"]="\u11B3";t["\u313E"]="\u11B4";t["\u313F"]="\u11B5";t["\u3140"]="\u111A";t["\u3141"]="\u1106";t["\u3142"]="\u1107";t["\u3143"]="\u1108";t["\u3144"]="\u1121";t["\u3145"]="\u1109";t["\u3146"]="\u110A";t["\u3147"]="\u110B";t["\u3148"]="\u110C";t["\u3149"]="\u110D";t["\u314A"]="\u110E";t["\u314B"]="\u110F";t["\u314C"]="\u1110";t["\u314D"]="\u1111";t["\u314E"]="\u1112";t["\u314F"]="\u1161";t["\u3150"]="\u1162";t["\u3151"]="\u1163";t["\u3152"]="\u1164";t["\u3153"]="\u1165";t["\u3154"]="\u1166";t["\u3155"]="\u1167";t["\u3156"]="\u1168";t["\u3157"]="\u1169";t["\u3158"]="\u116A";t["\u3159"]="\u116B";t["\u315A"]="\u116C";t["\u315B"]="\u116D";t["\u315C"]="\u116E";t["\u315D"]="\u116F";t["\u315E"]="\u1170";t["\u315F"]="\u1171";t["\u3160"]="\u1172";t["\u3161"]="\u1173";t["\u3162"]="\u1174";t["\u3163"]="\u1175";t["\u3164"]="\u1160";t["\u3165"]="\u1114";t["\u3166"]="\u1115";t["\u3167"]="\u11C7";t["\u3168"]="\u11C8";t["\u3169"]="\u11CC";t["\u316A"]="\u11CE";t["\u316B"]="\u11D3";t["\u316C"]="\u11D7";t["\u316D"]="\u11D9";t["\u316E"]="\u111C";t["\u316F"]="\u11DD";t["\u3170"]="\u11DF";t["\u3171"]="\u111D";t["\u3172"]="\u111E";t["\u3173"]="\u1120";t["\u3174"]="\u1122";t["\u3175"]="\u1123";t["\u3176"]="\u1127";t["\u3177"]="\u1129";t["\u3178"]="\u112B";t["\u3179"]="\u112C";t["\u317A"]="\u112D";t["\u317B"]="\u112E";t["\u317C"]="\u112F";t["\u317D"]="\u1132";t["\u317E"]="\u1136";t["\u317F"]="\u1140";t["\u3180"]="\u1147";t["\u3181"]="\u114C";t["\u3182"]="\u11F1";t["\u3183"]="\u11F2";t["\u3184"]="\u1157";t["\u3185"]="\u1158";t["\u3186"]="\u1159";t["\u3187"]="\u1184";t["\u3188"]="\u1185";t["\u3189"]="\u1188";t["\u318A"]="\u1191";t["\u318B"]="\u1192";t["\u318C"]="\u1194";t["\u318D"]="\u119E";t["\u318E"]="\u11A1";t["\u3200"]="(\u1100)";t["\u3201"]="(\u1102)";t["\u3202"]="(\u1103)";t["\u3203"]="(\u1105)";t["\u3204"]="(\u1106)";t["\u3205"]="(\u1107)";t["\u3206"]="(\u1109)";t["\u3207"]="(\u110B)";t["\u3208"]="(\u110C)";t["\u3209"]="(\u110E)";t["\u320A"]="(\u110F)";t["\u320B"]="(\u1110)";t["\u320C"]="(\u1111)";t["\u320D"]="(\u1112)";t["\u320E"]="(\u1100\u1161)";t["\u320F"]="(\u1102\u1161)";t["\u3210"]="(\u1103\u1161)";t["\u3211"]="(\u1105\u1161)";t["\u3212"]="(\u1106\u1161)";t["\u3213"]="(\u1107\u1161)";t["\u3214"]="(\u1109\u1161)";t["\u3215"]="(\u110B\u1161)";t["\u3216"]="(\u110C\u1161)";t["\u3217"]="(\u110E\u1161)";t["\u3218"]="(\u110F\u1161)";t["\u3219"]="(\u1110\u1161)";t["\u321A"]="(\u1111\u1161)";t["\u321B"]="(\u1112\u1161)";t["\u321C"]="(\u110C\u116E)";t["\u321D"]="(\u110B\u1169\u110C\u1165\u11AB)";t["\u321E"]="(\u110B\u1169\u1112\u116E)";t["\u3220"]="(\u4E00)";t["\u3221"]="(\u4E8C)";t["\u3222"]="(\u4E09)";t["\u3223"]="(\u56DB)";t["\u3224"]="(\u4E94)";t["\u3225"]="(\u516D)";t["\u3226"]="(\u4E03)";t["\u3227"]="(\u516B)";t["\u3228"]="(\u4E5D)";t["\u3229"]="(\u5341)";t["\u322A"]="(\u6708)";t["\u322B"]="(\u706B)";t["\u322C"]="(\u6C34)";t["\u322D"]="(\u6728)";t["\u322E"]="(\u91D1)";t["\u322F"]="(\u571F)";t["\u3230"]="(\u65E5)";t["\u3231"]="(\u682A)";t["\u3232"]="(\u6709)";t["\u3233"]="(\u793E)";t["\u3234"]="(\u540D)";t["\u3235"]="(\u7279)";t["\u3236"]="(\u8CA1)";t["\u3237"]="(\u795D)";t["\u3238"]="(\u52B4)";t["\u3239"]="(\u4EE3)";t["\u323A"]="(\u547C)";t["\u323B"]="(\u5B66)";t["\u323C"]="(\u76E3)";t["\u323D"]="(\u4F01)";t["\u323E"]="(\u8CC7)";t["\u323F"]="(\u5354)";t["\u3240"]="(\u796D)";t["\u3241"]="(\u4F11)";t["\u3242"]="(\u81EA)";t["\u3243"]="(\u81F3)";t["\u32C0"]="1\u6708";t["\u32C1"]="2\u6708";t["\u32C2"]="3\u6708";t["\u32C3"]="4\u6708";t["\u32C4"]="5\u6708";t["\u32C5"]="6\u6708";t["\u32C6"]="7\u6708";t["\u32C7"]="8\u6708";t["\u32C8"]="9\u6708";t["\u32C9"]="10\u6708";t["\u32CA"]="11\u6708";t["\u32CB"]="12\u6708";t["\u3358"]="0\u70B9";t["\u3359"]="1\u70B9";t["\u335A"]="2\u70B9";t["\u335B"]="3\u70B9";t["\u335C"]="4\u70B9";t["\u335D"]="5\u70B9";t["\u335E"]="6\u70B9";t["\u335F"]="7\u70B9";t["\u3360"]="8\u70B9";t["\u3361"]="9\u70B9";t["\u3362"]="10\u70B9";t["\u3363"]="11\u70B9";t["\u3364"]="12\u70B9";t["\u3365"]="13\u70B9";t["\u3366"]="14\u70B9";t["\u3367"]="15\u70B9";t["\u3368"]="16\u70B9";t["\u3369"]="17\u70B9";t["\u336A"]="18\u70B9";t["\u336B"]="19\u70B9";t["\u336C"]="20\u70B9";t["\u336D"]="21\u70B9";t["\u336E"]="22\u70B9";t["\u336F"]="23\u70B9";t["\u3370"]="24\u70B9";t["\u33E0"]="1\u65E5";t["\u33E1"]="2\u65E5";t["\u33E2"]="3\u65E5";t["\u33E3"]="4\u65E5";t["\u33E4"]="5\u65E5";t["\u33E5"]="6\u65E5";t["\u33E6"]="7\u65E5";t["\u33E7"]="8\u65E5";t["\u33E8"]="9\u65E5";t["\u33E9"]="10\u65E5";t["\u33EA"]="11\u65E5";t["\u33EB"]="12\u65E5";t["\u33EC"]="13\u65E5";t["\u33ED"]="14\u65E5";t["\u33EE"]="15\u65E5";t["\u33EF"]="16\u65E5";t["\u33F0"]="17\u65E5";t["\u33F1"]="18\u65E5";t["\u33F2"]="19\u65E5";t["\u33F3"]="20\u65E5";t["\u33F4"]="21\u65E5";t["\u33F5"]="22\u65E5";t["\u33F6"]="23\u65E5";t["\u33F7"]="24\u65E5";t["\u33F8"]="25\u65E5";t["\u33F9"]="26\u65E5";t["\u33FA"]="27\u65E5";t["\u33FB"]="28\u65E5";t["\u33FC"]="29\u65E5";t["\u33FD"]="30\u65E5";t["\u33FE"]="31\u65E5";t["\uFB00"]="ff";t["\uFB01"]="fi";t["\uFB02"]="fl";t["\uFB03"]="ffi";t["\uFB04"]="ffl";t["\uFB05"]="\u017Ft";t["\uFB06"]="st";t["\uFB13"]="\u0574\u0576";t["\uFB14"]="\u0574\u0565";t["\uFB15"]="\u0574\u056B";t["\uFB16"]="\u057E\u0576";t["\uFB17"]="\u0574\u056D";t["\uFB4F"]="\u05D0\u05DC";t["\uFB50"]="\u0671";t["\uFB51"]="\u0671";t["\uFB52"]="\u067B";t["\uFB53"]="\u067B";t["\uFB54"]="\u067B";t["\uFB55"]="\u067B";t["\uFB56"]="\u067E";t["\uFB57"]="\u067E";t["\uFB58"]="\u067E";t["\uFB59"]="\u067E";t["\uFB5A"]="\u0680";t["\uFB5B"]="\u0680";t["\uFB5C"]="\u0680";t["\uFB5D"]="\u0680";t["\uFB5E"]="\u067A";t["\uFB5F"]="\u067A";t["\uFB60"]="\u067A";t["\uFB61"]="\u067A";t["\uFB62"]="\u067F";t["\uFB63"]="\u067F";t["\uFB64"]="\u067F";t["\uFB65"]="\u067F";t["\uFB66"]="\u0679";t["\uFB67"]="\u0679";t["\uFB68"]="\u0679";t["\uFB69"]="\u0679";t["\uFB6A"]="\u06A4";t["\uFB6B"]="\u06A4";t["\uFB6C"]="\u06A4";t["\uFB6D"]="\u06A4";t["\uFB6E"]="\u06A6";t["\uFB6F"]="\u06A6";t["\uFB70"]="\u06A6";t["\uFB71"]="\u06A6";t["\uFB72"]="\u0684";t["\uFB73"]="\u0684";t["\uFB74"]="\u0684";t["\uFB75"]="\u0684";t["\uFB76"]="\u0683";t["\uFB77"]="\u0683";t["\uFB78"]="\u0683";t["\uFB79"]="\u0683";t["\uFB7A"]="\u0686";t["\uFB7B"]="\u0686";t["\uFB7C"]="\u0686";t["\uFB7D"]="\u0686";t["\uFB7E"]="\u0687";t["\uFB7F"]="\u0687";t["\uFB80"]="\u0687";t["\uFB81"]="\u0687";t["\uFB82"]="\u068D";t["\uFB83"]="\u068D";t["\uFB84"]="\u068C";t["\uFB85"]="\u068C";t["\uFB86"]="\u068E";t["\uFB87"]="\u068E";t["\uFB88"]="\u0688";t["\uFB89"]="\u0688";t["\uFB8A"]="\u0698";t["\uFB8B"]="\u0698";t["\uFB8C"]="\u0691";t["\uFB8D"]="\u0691";t["\uFB8E"]="\u06A9";t["\uFB8F"]="\u06A9";t["\uFB90"]="\u06A9";t["\uFB91"]="\u06A9";t["\uFB92"]="\u06AF";t["\uFB93"]="\u06AF";t["\uFB94"]="\u06AF";t["\uFB95"]="\u06AF";t["\uFB96"]="\u06B3";t["\uFB97"]="\u06B3";t["\uFB98"]="\u06B3";t["\uFB99"]="\u06B3";t["\uFB9A"]="\u06B1";t["\uFB9B"]="\u06B1";t["\uFB9C"]="\u06B1";t["\uFB9D"]="\u06B1";t["\uFB9E"]="\u06BA";t["\uFB9F"]="\u06BA";t["\uFBA0"]="\u06BB";t["\uFBA1"]="\u06BB";t["\uFBA2"]="\u06BB";t["\uFBA3"]="\u06BB";t["\uFBA4"]="\u06C0";t["\uFBA5"]="\u06C0";t["\uFBA6"]="\u06C1";t["\uFBA7"]="\u06C1";t["\uFBA8"]="\u06C1";t["\uFBA9"]="\u06C1";t["\uFBAA"]="\u06BE";t["\uFBAB"]="\u06BE";t["\uFBAC"]="\u06BE";t["\uFBAD"]="\u06BE";t["\uFBAE"]="\u06D2";t["\uFBAF"]="\u06D2";t["\uFBB0"]="\u06D3";t["\uFBB1"]="\u06D3";t["\uFBD3"]="\u06AD";t["\uFBD4"]="\u06AD";t["\uFBD5"]="\u06AD";t["\uFBD6"]="\u06AD";t["\uFBD7"]="\u06C7";t["\uFBD8"]="\u06C7";t["\uFBD9"]="\u06C6";t["\uFBDA"]="\u06C6";t["\uFBDB"]="\u06C8";t["\uFBDC"]="\u06C8";t["\uFBDD"]="\u0677";t["\uFBDE"]="\u06CB";t["\uFBDF"]="\u06CB";t["\uFBE0"]="\u06C5";t["\uFBE1"]="\u06C5";t["\uFBE2"]="\u06C9";t["\uFBE3"]="\u06C9";t["\uFBE4"]="\u06D0";t["\uFBE5"]="\u06D0";t["\uFBE6"]="\u06D0";t["\uFBE7"]="\u06D0";t["\uFBE8"]="\u0649";t["\uFBE9"]="\u0649";t["\uFBEA"]="\u0626\u0627";t["\uFBEB"]="\u0626\u0627";t["\uFBEC"]="\u0626\u06D5";t["\uFBED"]="\u0626\u06D5";t["\uFBEE"]="\u0626\u0648";t["\uFBEF"]="\u0626\u0648";t["\uFBF0"]="\u0626\u06C7";t["\uFBF1"]="\u0626\u06C7";t["\uFBF2"]="\u0626\u06C6";t["\uFBF3"]="\u0626\u06C6";t["\uFBF4"]="\u0626\u06C8";t["\uFBF5"]="\u0626\u06C8";t["\uFBF6"]="\u0626\u06D0";t["\uFBF7"]="\u0626\u06D0";t["\uFBF8"]="\u0626\u06D0";t["\uFBF9"]="\u0626\u0649";t["\uFBFA"]="\u0626\u0649";t["\uFBFB"]="\u0626\u0649";t["\uFBFC"]="\u06CC";t["\uFBFD"]="\u06CC";t["\uFBFE"]="\u06CC";t["\uFBFF"]="\u06CC";t["\uFC00"]="\u0626\u062C";t["\uFC01"]="\u0626\u062D";t["\uFC02"]="\u0626\u0645";t["\uFC03"]="\u0626\u0649";t["\uFC04"]="\u0626\u064A";t["\uFC05"]="\u0628\u062C";t["\uFC06"]="\u0628\u062D";t["\uFC07"]="\u0628\u062E";t["\uFC08"]="\u0628\u0645";t["\uFC09"]="\u0628\u0649";t["\uFC0A"]="\u0628\u064A";t["\uFC0B"]="\u062A\u062C";t["\uFC0C"]="\u062A\u062D";t["\uFC0D"]="\u062A\u062E";t["\uFC0E"]="\u062A\u0645";t["\uFC0F"]="\u062A\u0649";t["\uFC10"]="\u062A\u064A";t["\uFC11"]="\u062B\u062C";t["\uFC12"]="\u062B\u0645";t["\uFC13"]="\u062B\u0649";t["\uFC14"]="\u062B\u064A";t["\uFC15"]="\u062C\u062D";t["\uFC16"]="\u062C\u0645";t["\uFC17"]="\u062D\u062C";t["\uFC18"]="\u062D\u0645";t["\uFC19"]="\u062E\u062C";t["\uFC1A"]="\u062E\u062D";t["\uFC1B"]="\u062E\u0645";t["\uFC1C"]="\u0633\u062C";t["\uFC1D"]="\u0633\u062D";t["\uFC1E"]="\u0633\u062E";t["\uFC1F"]="\u0633\u0645";t["\uFC20"]="\u0635\u062D";t["\uFC21"]="\u0635\u0645";t["\uFC22"]="\u0636\u062C";t["\uFC23"]="\u0636\u062D";t["\uFC24"]="\u0636\u062E";t["\uFC25"]="\u0636\u0645";t["\uFC26"]="\u0637\u062D";t["\uFC27"]="\u0637\u0645";t["\uFC28"]="\u0638\u0645";t["\uFC29"]="\u0639\u062C";t["\uFC2A"]="\u0639\u0645";t["\uFC2B"]="\u063A\u062C";t["\uFC2C"]="\u063A\u0645";t["\uFC2D"]="\u0641\u062C";t["\uFC2E"]="\u0641\u062D";t["\uFC2F"]="\u0641\u062E";t["\uFC30"]="\u0641\u0645";t["\uFC31"]="\u0641\u0649";t["\uFC32"]="\u0641\u064A";t["\uFC33"]="\u0642\u062D";t["\uFC34"]="\u0642\u0645";t["\uFC35"]="\u0642\u0649";t["\uFC36"]="\u0642\u064A";t["\uFC37"]="\u0643\u0627";t["\uFC38"]="\u0643\u062C";t["\uFC39"]="\u0643\u062D";t["\uFC3A"]="\u0643\u062E";t["\uFC3B"]="\u0643\u0644";t["\uFC3C"]="\u0643\u0645";t["\uFC3D"]="\u0643\u0649";t["\uFC3E"]="\u0643\u064A";t["\uFC3F"]="\u0644\u062C";t["\uFC40"]="\u0644\u062D";t["\uFC41"]="\u0644\u062E";t["\uFC42"]="\u0644\u0645";t["\uFC43"]="\u0644\u0649";t["\uFC44"]="\u0644\u064A";t["\uFC45"]="\u0645\u062C";t["\uFC46"]="\u0645\u062D";t["\uFC47"]="\u0645\u062E";t["\uFC48"]="\u0645\u0645";t["\uFC49"]="\u0645\u0649";t["\uFC4A"]="\u0645\u064A";t["\uFC4B"]="\u0646\u062C";t["\uFC4C"]="\u0646\u062D";t["\uFC4D"]="\u0646\u062E";t["\uFC4E"]="\u0646\u0645";t["\uFC4F"]="\u0646\u0649";t["\uFC50"]="\u0646\u064A";t["\uFC51"]="\u0647\u062C";t["\uFC52"]="\u0647\u0645";t["\uFC53"]="\u0647\u0649";t["\uFC54"]="\u0647\u064A";t["\uFC55"]="\u064A\u062C";t["\uFC56"]="\u064A\u062D";t["\uFC57"]="\u064A\u062E";t["\uFC58"]="\u064A\u0645";t["\uFC59"]="\u064A\u0649";t["\uFC5A"]="\u064A\u064A";t["\uFC5B"]="\u0630\u0670";t["\uFC5C"]="\u0631\u0670";t["\uFC5D"]="\u0649\u0670";t["\uFC5E"]=" \u064C\u0651";t["\uFC5F"]=" \u064D\u0651";t["\uFC60"]=" \u064E\u0651";t["\uFC61"]=" \u064F\u0651";t["\uFC62"]=" \u0650\u0651";t["\uFC63"]=" \u0651\u0670";t["\uFC64"]="\u0626\u0631";t["\uFC65"]="\u0626\u0632";t["\uFC66"]="\u0626\u0645";t["\uFC67"]="\u0626\u0646";t["\uFC68"]="\u0626\u0649";t["\uFC69"]="\u0626\u064A";t["\uFC6A"]="\u0628\u0631";t["\uFC6B"]="\u0628\u0632";t["\uFC6C"]="\u0628\u0645";t["\uFC6D"]="\u0628\u0646";t["\uFC6E"]="\u0628\u0649";t["\uFC6F"]="\u0628\u064A";t["\uFC70"]="\u062A\u0631";t["\uFC71"]="\u062A\u0632";t["\uFC72"]="\u062A\u0645";t["\uFC73"]="\u062A\u0646";t["\uFC74"]="\u062A\u0649";t["\uFC75"]="\u062A\u064A";t["\uFC76"]="\u062B\u0631";t["\uFC77"]="\u062B\u0632";t["\uFC78"]="\u062B\u0645";t["\uFC79"]="\u062B\u0646";t["\uFC7A"]="\u062B\u0649";t["\uFC7B"]="\u062B\u064A";t["\uFC7C"]="\u0641\u0649";t["\uFC7D"]="\u0641\u064A";t["\uFC7E"]="\u0642\u0649";t["\uFC7F"]="\u0642\u064A";t["\uFC80"]="\u0643\u0627";t["\uFC81"]="\u0643\u0644";t["\uFC82"]="\u0643\u0645";t["\uFC83"]="\u0643\u0649";t["\uFC84"]="\u0643\u064A";t["\uFC85"]="\u0644\u0645";t["\uFC86"]="\u0644\u0649";t["\uFC87"]="\u0644\u064A";t["\uFC88"]="\u0645\u0627";t["\uFC89"]="\u0645\u0645";t["\uFC8A"]="\u0646\u0631";t["\uFC8B"]="\u0646\u0632";t["\uFC8C"]="\u0646\u0645";t["\uFC8D"]="\u0646\u0646";t["\uFC8E"]="\u0646\u0649";t["\uFC8F"]="\u0646\u064A";t["\uFC90"]="\u0649\u0670";t["\uFC91"]="\u064A\u0631";t["\uFC92"]="\u064A\u0632";t["\uFC93"]="\u064A\u0645";t["\uFC94"]="\u064A\u0646";t["\uFC95"]="\u064A\u0649";t["\uFC96"]="\u064A\u064A";t["\uFC97"]="\u0626\u062C";t["\uFC98"]="\u0626\u062D";t["\uFC99"]="\u0626\u062E";t["\uFC9A"]="\u0626\u0645";t["\uFC9B"]="\u0626\u0647";t["\uFC9C"]="\u0628\u062C";t["\uFC9D"]="\u0628\u062D";t["\uFC9E"]="\u0628\u062E";t["\uFC9F"]="\u0628\u0645";t["\uFCA0"]="\u0628\u0647";t["\uFCA1"]="\u062A\u062C";t["\uFCA2"]="\u062A\u062D";t["\uFCA3"]="\u062A\u062E";t["\uFCA4"]="\u062A\u0645";t["\uFCA5"]="\u062A\u0647";t["\uFCA6"]="\u062B\u0645";t["\uFCA7"]="\u062C\u062D";t["\uFCA8"]="\u062C\u0645";t["\uFCA9"]="\u062D\u062C";t["\uFCAA"]="\u062D\u0645";t["\uFCAB"]="\u062E\u062C";t["\uFCAC"]="\u062E\u0645";t["\uFCAD"]="\u0633\u062C";t["\uFCAE"]="\u0633\u062D";t["\uFCAF"]="\u0633\u062E";t["\uFCB0"]="\u0633\u0645";t["\uFCB1"]="\u0635\u062D";t["\uFCB2"]="\u0635\u062E";t["\uFCB3"]="\u0635\u0645";t["\uFCB4"]="\u0636\u062C";t["\uFCB5"]="\u0636\u062D";t["\uFCB6"]="\u0636\u062E";t["\uFCB7"]="\u0636\u0645";t["\uFCB8"]="\u0637\u062D";t["\uFCB9"]="\u0638\u0645";t["\uFCBA"]="\u0639\u062C";t["\uFCBB"]="\u0639\u0645";t["\uFCBC"]="\u063A\u062C";t["\uFCBD"]="\u063A\u0645";t["\uFCBE"]="\u0641\u062C";t["\uFCBF"]="\u0641\u062D";t["\uFCC0"]="\u0641\u062E";t["\uFCC1"]="\u0641\u0645";t["\uFCC2"]="\u0642\u062D";t["\uFCC3"]="\u0642\u0645";t["\uFCC4"]="\u0643\u062C";t["\uFCC5"]="\u0643\u062D";t["\uFCC6"]="\u0643\u062E";t["\uFCC7"]="\u0643\u0644";t["\uFCC8"]="\u0643\u0645";t["\uFCC9"]="\u0644\u062C";t["\uFCCA"]="\u0644\u062D";t["\uFCCB"]="\u0644\u062E";t["\uFCCC"]="\u0644\u0645";t["\uFCCD"]="\u0644\u0647";t["\uFCCE"]="\u0645\u062C";t["\uFCCF"]="\u0645\u062D";t["\uFCD0"]="\u0645\u062E";t["\uFCD1"]="\u0645\u0645";t["\uFCD2"]="\u0646\u062C";t["\uFCD3"]="\u0646\u062D";t["\uFCD4"]="\u0646\u062E";t["\uFCD5"]="\u0646\u0645";t["\uFCD6"]="\u0646\u0647";t["\uFCD7"]="\u0647\u062C";t["\uFCD8"]="\u0647\u0645";t["\uFCD9"]="\u0647\u0670";t["\uFCDA"]="\u064A\u062C";t["\uFCDB"]="\u064A\u062D";t["\uFCDC"]="\u064A\u062E";t["\uFCDD"]="\u064A\u0645";t["\uFCDE"]="\u064A\u0647";t["\uFCDF"]="\u0626\u0645";t["\uFCE0"]="\u0626\u0647";t["\uFCE1"]="\u0628\u0645";t["\uFCE2"]="\u0628\u0647";t["\uFCE3"]="\u062A\u0645";t["\uFCE4"]="\u062A\u0647";t["\uFCE5"]="\u062B\u0645";t["\uFCE6"]="\u062B\u0647";t["\uFCE7"]="\u0633\u0645";t["\uFCE8"]="\u0633\u0647";t["\uFCE9"]="\u0634\u0645";t["\uFCEA"]="\u0634\u0647";t["\uFCEB"]="\u0643\u0644";t["\uFCEC"]="\u0643\u0645";t["\uFCED"]="\u0644\u0645";t["\uFCEE"]="\u0646\u0645";t["\uFCEF"]="\u0646\u0647";t["\uFCF0"]="\u064A\u0645";t["\uFCF1"]="\u064A\u0647";t["\uFCF2"]="\u0640\u064E\u0651";t["\uFCF3"]="\u0640\u064F\u0651";t["\uFCF4"]="\u0640\u0650\u0651";t["\uFCF5"]="\u0637\u0649";t["\uFCF6"]="\u0637\u064A";t["\uFCF7"]="\u0639\u0649";t["\uFCF8"]="\u0639\u064A";t["\uFCF9"]="\u063A\u0649";t["\uFCFA"]="\u063A\u064A";t["\uFCFB"]="\u0633\u0649";t["\uFCFC"]="\u0633\u064A";t["\uFCFD"]="\u0634\u0649";t["\uFCFE"]="\u0634\u064A";t["\uFCFF"]="\u062D\u0649";t["\uFD00"]="\u062D\u064A";t["\uFD01"]="\u062C\u0649";t["\uFD02"]="\u062C\u064A";t["\uFD03"]="\u062E\u0649";t["\uFD04"]="\u062E\u064A";t["\uFD05"]="\u0635\u0649";t["\uFD06"]="\u0635\u064A";t["\uFD07"]="\u0636\u0649";t["\uFD08"]="\u0636\u064A";t["\uFD09"]="\u0634\u062C";t["\uFD0A"]="\u0634\u062D";t["\uFD0B"]="\u0634\u062E";t["\uFD0C"]="\u0634\u0645";t["\uFD0D"]="\u0634\u0631";t["\uFD0E"]="\u0633\u0631";t["\uFD0F"]="\u0635\u0631";t["\uFD10"]="\u0636\u0631";t["\uFD11"]="\u0637\u0649";t["\uFD12"]="\u0637\u064A";t["\uFD13"]="\u0639\u0649";t["\uFD14"]="\u0639\u064A";t["\uFD15"]="\u063A\u0649";t["\uFD16"]="\u063A\u064A";t["\uFD17"]="\u0633\u0649";t["\uFD18"]="\u0633\u064A";t["\uFD19"]="\u0634\u0649";t["\uFD1A"]="\u0634\u064A";t["\uFD1B"]="\u062D\u0649";t["\uFD1C"]="\u062D\u064A";t["\uFD1D"]="\u062C\u0649";t["\uFD1E"]="\u062C\u064A";t["\uFD1F"]="\u062E\u0649";t["\uFD20"]="\u062E\u064A";t["\uFD21"]="\u0635\u0649";t["\uFD22"]="\u0635\u064A";t["\uFD23"]="\u0636\u0649";t["\uFD24"]="\u0636\u064A";t["\uFD25"]="\u0634\u062C";t["\uFD26"]="\u0634\u062D";t["\uFD27"]="\u0634\u062E";t["\uFD28"]="\u0634\u0645";t["\uFD29"]="\u0634\u0631";t["\uFD2A"]="\u0633\u0631";t["\uFD2B"]="\u0635\u0631";t["\uFD2C"]="\u0636\u0631";t["\uFD2D"]="\u0634\u062C";t["\uFD2E"]="\u0634\u062D";t["\uFD2F"]="\u0634\u062E";t["\uFD30"]="\u0634\u0645";t["\uFD31"]="\u0633\u0647";t["\uFD32"]="\u0634\u0647";t["\uFD33"]="\u0637\u0645";t["\uFD34"]="\u0633\u062C";t["\uFD35"]="\u0633\u062D";t["\uFD36"]="\u0633\u062E";t["\uFD37"]="\u0634\u062C";t["\uFD38"]="\u0634\u062D";t["\uFD39"]="\u0634\u062E";t["\uFD3A"]="\u0637\u0645";t["\uFD3B"]="\u0638\u0645";t["\uFD3C"]="\u0627\u064B";t["\uFD3D"]="\u0627\u064B";t["\uFD50"]="\u062A\u062C\u0645";t["\uFD51"]="\u062A\u062D\u062C";t["\uFD52"]="\u062A\u062D\u062C";t["\uFD53"]="\u062A\u062D\u0645";t["\uFD54"]="\u062A\u062E\u0645";t["\uFD55"]="\u062A\u0645\u062C";t["\uFD56"]="\u062A\u0645\u062D";t["\uFD57"]="\u062A\u0645\u062E";t["\uFD58"]="\u062C\u0645\u062D";t["\uFD59"]="\u062C\u0645\u062D";t["\uFD5A"]="\u062D\u0645\u064A";t["\uFD5B"]="\u062D\u0645\u0649";t["\uFD5C"]="\u0633\u062D\u062C";t["\uFD5D"]="\u0633\u062C\u062D";t["\uFD5E"]="\u0633\u062C\u0649";t["\uFD5F"]="\u0633\u0645\u062D";t["\uFD60"]="\u0633\u0645\u062D";t["\uFD61"]="\u0633\u0645\u062C";t["\uFD62"]="\u0633\u0645\u0645";t["\uFD63"]="\u0633\u0645\u0645";t["\uFD64"]="\u0635\u062D\u062D";t["\uFD65"]="\u0635\u062D\u062D";t["\uFD66"]="\u0635\u0645\u0645";t["\uFD67"]="\u0634\u062D\u0645";t["\uFD68"]="\u0634\u062D\u0645";t["\uFD69"]="\u0634\u062C\u064A";t["\uFD6A"]="\u0634\u0645\u062E";t["\uFD6B"]="\u0634\u0645\u062E";t["\uFD6C"]="\u0634\u0645\u0645";t["\uFD6D"]="\u0634\u0645\u0645";t["\uFD6E"]="\u0636\u062D\u0649";t["\uFD6F"]="\u0636\u062E\u0645";t["\uFD70"]="\u0636\u062E\u0645";t["\uFD71"]="\u0637\u0645\u062D";t["\uFD72"]="\u0637\u0645\u062D";t["\uFD73"]="\u0637\u0645\u0645";t["\uFD74"]="\u0637\u0645\u064A";t["\uFD75"]="\u0639\u062C\u0645";t["\uFD76"]="\u0639\u0645\u0645";t["\uFD77"]="\u0639\u0645\u0645";t["\uFD78"]="\u0639\u0645\u0649";t["\uFD79"]="\u063A\u0645\u0645";t["\uFD7A"]="\u063A\u0645\u064A";t["\uFD7B"]="\u063A\u0645\u0649";t["\uFD7C"]="\u0641\u062E\u0645";t["\uFD7D"]="\u0641\u062E\u0645";t["\uFD7E"]="\u0642\u0645\u062D";t["\uFD7F"]="\u0642\u0645\u0645";t["\uFD80"]="\u0644\u062D\u0645";t["\uFD81"]="\u0644\u062D\u064A";t["\uFD82"]="\u0644\u062D\u0649";t["\uFD83"]="\u0644\u062C\u062C";t["\uFD84"]="\u0644\u062C\u062C";t["\uFD85"]="\u0644\u062E\u0645";t["\uFD86"]="\u0644\u062E\u0645";t["\uFD87"]="\u0644\u0645\u062D";t["\uFD88"]="\u0644\u0645\u062D";t["\uFD89"]="\u0645\u062D\u062C";t["\uFD8A"]="\u0645\u062D\u0645";t["\uFD8B"]="\u0645\u062D\u064A";t["\uFD8C"]="\u0645\u062C\u062D";t["\uFD8D"]="\u0645\u062C\u0645";t["\uFD8E"]="\u0645\u062E\u062C";t["\uFD8F"]="\u0645\u062E\u0645";t["\uFD92"]="\u0645\u062C\u062E";t["\uFD93"]="\u0647\u0645\u062C";t["\uFD94"]="\u0647\u0645\u0645";t["\uFD95"]="\u0646\u062D\u0645";t["\uFD96"]="\u0646\u062D\u0649";t["\uFD97"]="\u0646\u062C\u0645";t["\uFD98"]="\u0646\u062C\u0645";t["\uFD99"]="\u0646\u062C\u0649";t["\uFD9A"]="\u0646\u0645\u064A";t["\uFD9B"]="\u0646\u0645\u0649";t["\uFD9C"]="\u064A\u0645\u0645";t["\uFD9D"]="\u064A\u0645\u0645";t["\uFD9E"]="\u0628\u062E\u064A";t["\uFD9F"]="\u062A\u062C\u064A";t["\uFDA0"]="\u062A\u062C\u0649";t["\uFDA1"]="\u062A\u062E\u064A";t["\uFDA2"]="\u062A\u062E\u0649";t["\uFDA3"]="\u062A\u0645\u064A";t["\uFDA4"]="\u062A\u0645\u0649";t["\uFDA5"]="\u062C\u0645\u064A";t["\uFDA6"]="\u062C\u062D\u0649";t["\uFDA7"]="\u062C\u0645\u0649";t["\uFDA8"]="\u0633\u062E\u0649";t["\uFDA9"]="\u0635\u062D\u064A";t["\uFDAA"]="\u0634\u062D\u064A";t["\uFDAB"]="\u0636\u062D\u064A";t["\uFDAC"]="\u0644\u062C\u064A";t["\uFDAD"]="\u0644\u0645\u064A";t["\uFDAE"]="\u064A\u062D\u064A";t["\uFDAF"]="\u064A\u062C\u064A";t["\uFDB0"]="\u064A\u0645\u064A";t["\uFDB1"]="\u0645\u0645\u064A";t["\uFDB2"]="\u0642\u0645\u064A";t["\uFDB3"]="\u0646\u062D\u064A";t["\uFDB4"]="\u0642\u0645\u062D";t["\uFDB5"]="\u0644\u062D\u0645";t["\uFDB6"]="\u0639\u0645\u064A";t["\uFDB7"]="\u0643\u0645\u064A";t["\uFDB8"]="\u0646\u062C\u062D";t["\uFDB9"]="\u0645\u062E\u064A";t["\uFDBA"]="\u0644\u062C\u0645";t["\uFDBB"]="\u0643\u0645\u0645";t["\uFDBC"]="\u0644\u062C\u0645";t["\uFDBD"]="\u0646\u062C\u062D";t["\uFDBE"]="\u062C\u062D\u064A";t["\uFDBF"]="\u062D\u062C\u064A";t["\uFDC0"]="\u0645\u062C\u064A";t["\uFDC1"]="\u0641\u0645\u064A";t["\uFDC2"]="\u0628\u062D\u064A";t["\uFDC3"]="\u0643\u0645\u0645";t["\uFDC4"]="\u0639\u062C\u0645";t["\uFDC5"]="\u0635\u0645\u0645";t["\uFDC6"]="\u0633\u062E\u064A";t["\uFDC7"]="\u0646\u062C\u064A";t["\uFE49"]="\u203E";t["\uFE4A"]="\u203E";t["\uFE4B"]="\u203E";t["\uFE4C"]="\u203E";t["\uFE4D"]="_";t["\uFE4E"]="_";t["\uFE4F"]="_";t["\uFE80"]="\u0621";t["\uFE81"]="\u0622";t["\uFE82"]="\u0622";t["\uFE83"]="\u0623";t["\uFE84"]="\u0623";t["\uFE85"]="\u0624";t["\uFE86"]="\u0624";t["\uFE87"]="\u0625";t["\uFE88"]="\u0625";t["\uFE89"]="\u0626";t["\uFE8A"]="\u0626";t["\uFE8B"]="\u0626";t["\uFE8C"]="\u0626";t["\uFE8D"]="\u0627";t["\uFE8E"]="\u0627";t["\uFE8F"]="\u0628";t["\uFE90"]="\u0628";t["\uFE91"]="\u0628";t["\uFE92"]="\u0628";t["\uFE93"]="\u0629";t["\uFE94"]="\u0629";t["\uFE95"]="\u062A";t["\uFE96"]="\u062A";t["\uFE97"]="\u062A";t["\uFE98"]="\u062A";t["\uFE99"]="\u062B";t["\uFE9A"]="\u062B";t["\uFE9B"]="\u062B";t["\uFE9C"]="\u062B";t["\uFE9D"]="\u062C";t["\uFE9E"]="\u062C";t["\uFE9F"]="\u062C";t["\uFEA0"]="\u062C";t["\uFEA1"]="\u062D";t["\uFEA2"]="\u062D";t["\uFEA3"]="\u062D";t["\uFEA4"]="\u062D";t["\uFEA5"]="\u062E";t["\uFEA6"]="\u062E";t["\uFEA7"]="\u062E";t["\uFEA8"]="\u062E";t["\uFEA9"]="\u062F";t["\uFEAA"]="\u062F";t["\uFEAB"]="\u0630";t["\uFEAC"]="\u0630";t["\uFEAD"]="\u0631";t["\uFEAE"]="\u0631";t["\uFEAF"]="\u0632";t["\uFEB0"]="\u0632";t["\uFEB1"]="\u0633";t["\uFEB2"]="\u0633";t["\uFEB3"]="\u0633";t["\uFEB4"]="\u0633";t["\uFEB5"]="\u0634";t["\uFEB6"]="\u0634";t["\uFEB7"]="\u0634";t["\uFEB8"]="\u0634";t["\uFEB9"]="\u0635";t["\uFEBA"]="\u0635";t["\uFEBB"]="\u0635";t["\uFEBC"]="\u0635";t["\uFEBD"]="\u0636";t["\uFEBE"]="\u0636";t["\uFEBF"]="\u0636";t["\uFEC0"]="\u0636";t["\uFEC1"]="\u0637";t["\uFEC2"]="\u0637";t["\uFEC3"]="\u0637";t["\uFEC4"]="\u0637";t["\uFEC5"]="\u0638";t["\uFEC6"]="\u0638";t["\uFEC7"]="\u0638";t["\uFEC8"]="\u0638";t["\uFEC9"]="\u0639";t["\uFECA"]="\u0639";t["\uFECB"]="\u0639";t["\uFECC"]="\u0639";t["\uFECD"]="\u063A";t["\uFECE"]="\u063A";t["\uFECF"]="\u063A";t["\uFED0"]="\u063A";t["\uFED1"]="\u0641";t["\uFED2"]="\u0641";t["\uFED3"]="\u0641";t["\uFED4"]="\u0641";t["\uFED5"]="\u0642";t["\uFED6"]="\u0642";t["\uFED7"]="\u0642";t["\uFED8"]="\u0642";t["\uFED9"]="\u0643";t["\uFEDA"]="\u0643";t["\uFEDB"]="\u0643";t["\uFEDC"]="\u0643";t["\uFEDD"]="\u0644";t["\uFEDE"]="\u0644";t["\uFEDF"]="\u0644";t["\uFEE0"]="\u0644";t["\uFEE1"]="\u0645";t["\uFEE2"]="\u0645";t["\uFEE3"]="\u0645";t["\uFEE4"]="\u0645";t["\uFEE5"]="\u0646";t["\uFEE6"]="\u0646";t["\uFEE7"]="\u0646";t["\uFEE8"]="\u0646";t["\uFEE9"]="\u0647";t["\uFEEA"]="\u0647";t["\uFEEB"]="\u0647";t["\uFEEC"]="\u0647";t["\uFEED"]="\u0648";t["\uFEEE"]="\u0648";t["\uFEEF"]="\u0649";t["\uFEF0"]="\u0649";t["\uFEF1"]="\u064A";t["\uFEF2"]="\u064A";t["\uFEF3"]="\u064A";t["\uFEF4"]="\u064A";t["\uFEF5"]="\u0644\u0622";t["\uFEF6"]="\u0644\u0622";t["\uFEF7"]="\u0644\u0623";t["\uFEF8"]="\u0644\u0623";t["\uFEF9"]="\u0644\u0625";t["\uFEFA"]="\u0644\u0625";t["\uFEFB"]="\u0644\u0627";t["\uFEFC"]="\u0644\u0627";});function reverseIfRtl(chars){var charsLength=chars.length;if(charsLength<=1||!isRTLRangeFor(chars.charCodeAt(0))){return chars;}var s='';for(var ii=charsLength-1;ii>=0;ii--){s+=chars[ii];}return s;}exports.mapSpecialUnicodeValues=mapSpecialUnicodeValues;exports.reverseIfRtl=reverseIfRtl;exports.getUnicodeRangeFor=getUnicodeRangeFor;exports.getNormalizedUnicodes=getNormalizedUnicodes;exports.getUnicodeForGlyph=getUnicodeForGlyph;/***/},/* 163 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.FontRendererFactory=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _util=__w_pdfjs_require__(2);var _cff_parser=__w_pdfjs_require__(157);var _glyphlist=__w_pdfjs_require__(160);var _encodings=__w_pdfjs_require__(159);var _stream=__w_pdfjs_require__(140);function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(_typeof3(call)==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+_typeof3(superClass));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var FontRendererFactory=function FontRendererFactoryClosure(){function getLong(data,offset){return data[offset]<<24|data[offset+1]<<16|data[offset+2]<<8|data[offset+3];}function getUshort(data,offset){return data[offset]<<8|data[offset+1];}function parseCmap(data,start,end){var offset=getUshort(data,start+2)===1?getLong(data,start+8):getLong(data,start+16);var format=getUshort(data,start+offset);var ranges,p,i;if(format===4){getUshort(data,start+offset+2);var segCount=getUshort(data,start+offset+6)>>1;p=start+offset+14;ranges=[];for(i=0;i<segCount;i++,p+=2){ranges[i]={end:getUshort(data,p)};}p+=2;for(i=0;i<segCount;i++,p+=2){ranges[i].start=getUshort(data,p);}for(i=0;i<segCount;i++,p+=2){ranges[i].idDelta=getUshort(data,p);}for(i=0;i<segCount;i++,p+=2){var idOffset=getUshort(data,p);if(idOffset===0){continue;}ranges[i].ids=[];for(var j=0,jj=ranges[i].end-ranges[i].start+1;j<jj;j++){ranges[i].ids[j]=getUshort(data,p+idOffset);idOffset+=2;}}return ranges;}else if(format===12){getLong(data,start+offset+4);var groups=getLong(data,start+offset+12);p=start+offset+16;ranges=[];for(i=0;i<groups;i++){ranges.push({start:getLong(data,p),end:getLong(data,p+4),idDelta:getLong(data,p+8)-getLong(data,p)});p+=12;}return ranges;}throw new _util.FormatError('unsupported cmap: '+format);}function parseCff(data,start,end,seacAnalysisEnabled){var properties={};var parser=new _cff_parser.CFFParser(new _stream.Stream(data,start,end-start),properties,seacAnalysisEnabled);var cff=parser.parse();return{glyphs:cff.charStrings.objects,subrs:cff.topDict.privateDict&&cff.topDict.privateDict.subrsIndex&&cff.topDict.privateDict.subrsIndex.objects,gsubrs:cff.globalSubrIndex&&cff.globalSubrIndex.objects,isCFFCIDFont:cff.isCIDFont,fdSelect:cff.fdSelect,fdArray:cff.fdArray};}function parseGlyfTable(glyf,loca,isGlyphLocationsLong){var itemSize,itemDecode;if(isGlyphLocationsLong){itemSize=4;itemDecode=function fontItemDecodeLong(data,offset){return data[offset]<<24|data[offset+1]<<16|data[offset+2]<<8|data[offset+3];};}else{itemSize=2;itemDecode=function fontItemDecode(data,offset){return data[offset]<<9|data[offset+1]<<1;};}var glyphs=[];var startOffset=itemDecode(loca,0);for(var j=itemSize;j<loca.length;j+=itemSize){var endOffset=itemDecode(loca,j);glyphs.push(glyf.subarray(startOffset,endOffset));startOffset=endOffset;}return glyphs;}function lookupCmap(ranges,unicode){var code=unicode.codePointAt(0),gid=0;var l=0,r=ranges.length-1;while(l<r){var c=l+r+1>>1;if(code<ranges[c].start){r=c-1;}else{l=c;}}if(ranges[l].start<=code&&code<=ranges[l].end){gid=ranges[l].idDelta+(ranges[l].ids?ranges[l].ids[code-ranges[l].start]:code)&0xFFFF;}return{charCode:code,glyphId:gid};}function compileGlyf(code,cmds,font){function moveTo(x,y){cmds.push({cmd:'moveTo',args:[x,y]});}function lineTo(x,y){cmds.push({cmd:'lineTo',args:[x,y]});}function quadraticCurveTo(xa,ya,x,y){cmds.push({cmd:'quadraticCurveTo',args:[xa,ya,x,y]});}var i=0;var numberOfContours=(code[i]<<24|code[i+1]<<16)>>16;var flags;var x=0,y=0;i+=10;if(numberOfContours<0){do{flags=code[i]<<8|code[i+1];var glyphIndex=code[i+2]<<8|code[i+3];i+=4;var arg1,arg2;if(flags&0x01){arg1=(code[i]<<24|code[i+1]<<16)>>16;arg2=(code[i+2]<<24|code[i+3]<<16)>>16;i+=4;}else{arg1=code[i++];arg2=code[i++];}if(flags&0x02){x=arg1;y=arg2;}else{x=0;y=0;}var scaleX=1,scaleY=1,scale01=0,scale10=0;if(flags&0x08){scaleX=scaleY=(code[i]<<24|code[i+1]<<16)/1073741824;i+=2;}else if(flags&0x40){scaleX=(code[i]<<24|code[i+1]<<16)/1073741824;scaleY=(code[i+2]<<24|code[i+3]<<16)/1073741824;i+=4;}else if(flags&0x80){scaleX=(code[i]<<24|code[i+1]<<16)/1073741824;scale01=(code[i+2]<<24|code[i+3]<<16)/1073741824;scale10=(code[i+4]<<24|code[i+5]<<16)/1073741824;scaleY=(code[i+6]<<24|code[i+7]<<16)/1073741824;i+=8;}var subglyph=font.glyphs[glyphIndex];if(subglyph){cmds.push({cmd:'save'});cmds.push({cmd:'transform',args:[scaleX,scale01,scale10,scaleY,x,y]});compileGlyf(subglyph,cmds,font);cmds.push({cmd:'restore'});}}while(flags&0x20);}else{var endPtsOfContours=[];var j,jj;for(j=0;j<numberOfContours;j++){endPtsOfContours.push(code[i]<<8|code[i+1]);i+=2;}var instructionLength=code[i]<<8|code[i+1];i+=2+instructionLength;var numberOfPoints=endPtsOfContours[endPtsOfContours.length-1]+1;var points=[];while(points.length<numberOfPoints){flags=code[i++];var repeat=1;if(flags&0x08){repeat+=code[i++];}while(repeat-->0){points.push({flags:flags});}}for(j=0;j<numberOfPoints;j++){switch(points[j].flags&0x12){case 0x00:x+=(code[i]<<24|code[i+1]<<16)>>16;i+=2;break;case 0x02:x-=code[i++];break;case 0x12:x+=code[i++];break;}points[j].x=x;}for(j=0;j<numberOfPoints;j++){switch(points[j].flags&0x24){case 0x00:y+=(code[i]<<24|code[i+1]<<16)>>16;i+=2;break;case 0x04:y-=code[i++];break;case 0x24:y+=code[i++];break;}points[j].y=y;}var startPoint=0;for(i=0;i<numberOfContours;i++){var endPoint=endPtsOfContours[i];var contour=points.slice(startPoint,endPoint+1);if(contour[0].flags&1){contour.push(contour[0]);}else if(contour[contour.length-1].flags&1){contour.unshift(contour[contour.length-1]);}else{var p={flags:1,x:(contour[0].x+contour[contour.length-1].x)/2,y:(contour[0].y+contour[contour.length-1].y)/2};contour.unshift(p);contour.push(p);}moveTo(contour[0].x,contour[0].y);for(j=1,jj=contour.length;j<jj;j++){if(contour[j].flags&1){lineTo(contour[j].x,contour[j].y);}else if(contour[j+1].flags&1){quadraticCurveTo(contour[j].x,contour[j].y,contour[j+1].x,contour[j+1].y);j++;}else{quadraticCurveTo(contour[j].x,contour[j].y,(contour[j].x+contour[j+1].x)/2,(contour[j].y+contour[j+1].y)/2);}}startPoint=endPoint+1;}}}function compileCharString(code,cmds,font,glyphId){var stack=[];var x=0,y=0;var stems=0;function moveTo(x,y){cmds.push({cmd:'moveTo',args:[x,y]});}function lineTo(x,y){cmds.push({cmd:'lineTo',args:[x,y]});}function bezierCurveTo(x1,y1,x2,y2,x,y){cmds.push({cmd:'bezierCurveTo',args:[x1,y1,x2,y2,x,y]});}function parse(code){var i=0;while(i<code.length){var stackClean=false;var v=code[i++];var xa,xb,ya,yb,y1,y2,y3,n,subrCode;switch(v){case 1:stems+=stack.length>>1;stackClean=true;break;case 3:stems+=stack.length>>1;stackClean=true;break;case 4:y+=stack.pop();moveTo(x,y);stackClean=true;break;case 5:while(stack.length>0){x+=stack.shift();y+=stack.shift();lineTo(x,y);}break;case 6:while(stack.length>0){x+=stack.shift();lineTo(x,y);if(stack.length===0){break;}y+=stack.shift();lineTo(x,y);}break;case 7:while(stack.length>0){y+=stack.shift();lineTo(x,y);if(stack.length===0){break;}x+=stack.shift();lineTo(x,y);}break;case 8:while(stack.length>0){xa=x+stack.shift();ya=y+stack.shift();xb=xa+stack.shift();yb=ya+stack.shift();x=xb+stack.shift();y=yb+stack.shift();bezierCurveTo(xa,ya,xb,yb,x,y);}break;case 10:n=stack.pop();subrCode=null;if(font.isCFFCIDFont){var fdIndex=font.fdSelect.getFDIndex(glyphId);if(fdIndex>=0&&fdIndex<font.fdArray.length){var fontDict=font.fdArray[fdIndex],subrs=void 0;if(fontDict.privateDict&&fontDict.privateDict.subrsIndex){subrs=fontDict.privateDict.subrsIndex.objects;}if(subrs){var numSubrs=subrs.length;n+=numSubrs<1240?107:numSubrs<33900?1131:32768;subrCode=subrs[n];}}else{(0,_util.warn)('Invalid fd index for glyph index.');}}else{subrCode=font.subrs[n+font.subrsBias];}if(subrCode){parse(subrCode);}break;case 11:return;case 12:v=code[i++];switch(v){case 34:xa=x+stack.shift();xb=xa+stack.shift();y1=y+stack.shift();x=xb+stack.shift();bezierCurveTo(xa,y,xb,y1,x,y1);xa=x+stack.shift();xb=xa+stack.shift();x=xb+stack.shift();bezierCurveTo(xa,y1,xb,y,x,y);break;case 35:xa=x+stack.shift();ya=y+stack.shift();xb=xa+stack.shift();yb=ya+stack.shift();x=xb+stack.shift();y=yb+stack.shift();bezierCurveTo(xa,ya,xb,yb,x,y);xa=x+stack.shift();ya=y+stack.shift();xb=xa+stack.shift();yb=ya+stack.shift();x=xb+stack.shift();y=yb+stack.shift();bezierCurveTo(xa,ya,xb,yb,x,y);stack.pop();break;case 36:xa=x+stack.shift();y1=y+stack.shift();xb=xa+stack.shift();y2=y1+stack.shift();x=xb+stack.shift();bezierCurveTo(xa,y1,xb,y2,x,y2);xa=x+stack.shift();xb=xa+stack.shift();y3=y2+stack.shift();x=xb+stack.shift();bezierCurveTo(xa,y2,xb,y3,x,y);break;case 37:var x0=x,y0=y;xa=x+stack.shift();ya=y+stack.shift();xb=xa+stack.shift();yb=ya+stack.shift();x=xb+stack.shift();y=yb+stack.shift();bezierCurveTo(xa,ya,xb,yb,x,y);xa=x+stack.shift();ya=y+stack.shift();xb=xa+stack.shift();yb=ya+stack.shift();x=xb;y=yb;if(Math.abs(x-x0)>Math.abs(y-y0)){x+=stack.shift();}else{y+=stack.shift();}bezierCurveTo(xa,ya,xb,yb,x,y);break;default:throw new _util.FormatError('unknown operator: 12 '+v);}break;case 14:if(stack.length>=4){var achar=stack.pop();var bchar=stack.pop();y=stack.pop();x=stack.pop();cmds.push({cmd:'save'});cmds.push({cmd:'translate',args:[x,y]});var cmap=lookupCmap(font.cmap,String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));compileCharString(font.glyphs[cmap.glyphId],cmds,font,cmap.glyphId);cmds.push({cmd:'restore'});cmap=lookupCmap(font.cmap,String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));compileCharString(font.glyphs[cmap.glyphId],cmds,font,cmap.glyphId);}return;case 18:stems+=stack.length>>1;stackClean=true;break;case 19:stems+=stack.length>>1;i+=stems+7>>3;stackClean=true;break;case 20:stems+=stack.length>>1;i+=stems+7>>3;stackClean=true;break;case 21:y+=stack.pop();x+=stack.pop();moveTo(x,y);stackClean=true;break;case 22:x+=stack.pop();moveTo(x,y);stackClean=true;break;case 23:stems+=stack.length>>1;stackClean=true;break;case 24:while(stack.length>2){xa=x+stack.shift();ya=y+stack.shift();xb=xa+stack.shift();yb=ya+stack.shift();x=xb+stack.shift();y=yb+stack.shift();bezierCurveTo(xa,ya,xb,yb,x,y);}x+=stack.shift();y+=stack.shift();lineTo(x,y);break;case 25:while(stack.length>6){x+=stack.shift();y+=stack.shift();lineTo(x,y);}xa=x+stack.shift();ya=y+stack.shift();xb=xa+stack.shift();yb=ya+stack.shift();x=xb+stack.shift();y=yb+stack.shift();bezierCurveTo(xa,ya,xb,yb,x,y);break;case 26:if(stack.length%2){x+=stack.shift();}while(stack.length>0){xa=x;ya=y+stack.shift();xb=xa+stack.shift();yb=ya+stack.shift();x=xb;y=yb+stack.shift();bezierCurveTo(xa,ya,xb,yb,x,y);}break;case 27:if(stack.length%2){y+=stack.shift();}while(stack.length>0){xa=x+stack.shift();ya=y;xb=xa+stack.shift();yb=ya+stack.shift();x=xb+stack.shift();y=yb;bezierCurveTo(xa,ya,xb,yb,x,y);}break;case 28:stack.push((code[i]<<24|code[i+1]<<16)>>16);i+=2;break;case 29:n=stack.pop()+font.gsubrsBias;subrCode=font.gsubrs[n];if(subrCode){parse(subrCode);}break;case 30:while(stack.length>0){xa=x;ya=y+stack.shift();xb=xa+stack.shift();yb=ya+stack.shift();x=xb+stack.shift();y=yb+(stack.length===1?stack.shift():0);bezierCurveTo(xa,ya,xb,yb,x,y);if(stack.length===0){break;}xa=x+stack.shift();ya=y;xb=xa+stack.shift();yb=ya+stack.shift();y=yb+stack.shift();x=xb+(stack.length===1?stack.shift():0);bezierCurveTo(xa,ya,xb,yb,x,y);}break;case 31:while(stack.length>0){xa=x+stack.shift();ya=y;xb=xa+stack.shift();yb=ya+stack.shift();y=yb+stack.shift();x=xb+(stack.length===1?stack.shift():0);bezierCurveTo(xa,ya,xb,yb,x,y);if(stack.length===0){break;}xa=x;ya=y+stack.shift();xb=xa+stack.shift();yb=ya+stack.shift();x=xb+stack.shift();y=yb+(stack.length===1?stack.shift():0);bezierCurveTo(xa,ya,xb,yb,x,y);}break;default:if(v<32){throw new _util.FormatError('unknown operator: '+v);}if(v<247){stack.push(v-139);}else if(v<251){stack.push((v-247)*256+code[i++]+108);}else if(v<255){stack.push(-(v-251)*256-code[i++]-108);}else{stack.push((code[i]<<24|code[i+1]<<16|code[i+2]<<8|code[i+3])/65536);i+=4;}break;}if(stackClean){stack.length=0;}}}parse(code);}var NOOP=[];var CompiledFont=function(){function CompiledFont(fontMatrix){_classCallCheck(this,CompiledFont);if(this.constructor===CompiledFont){(0,_util.unreachable)('Cannot initialize CompiledFont.');}this.fontMatrix=fontMatrix;this.compiledGlyphs=Object.create(null);this.compiledCharCodeToGlyphId=Object.create(null);}_createClass(CompiledFont,[{key:'getPathJs',value:function getPathJs(unicode){var cmap=lookupCmap(this.cmap,unicode);var fn=this.compiledGlyphs[cmap.glyphId];if(!fn){fn=this.compileGlyph(this.glyphs[cmap.glyphId],cmap.glyphId);this.compiledGlyphs[cmap.glyphId]=fn;}if(this.compiledCharCodeToGlyphId[cmap.charCode]===undefined){this.compiledCharCodeToGlyphId[cmap.charCode]=cmap.glyphId;}return fn;}},{key:'compileGlyph',value:function compileGlyph(code,glyphId){if(!code||code.length===0||code[0]===14){return NOOP;}var fontMatrix=this.fontMatrix;if(this.isCFFCIDFont){var fdIndex=this.fdSelect.getFDIndex(glyphId);if(fdIndex>=0&&fdIndex<this.fdArray.length){var fontDict=this.fdArray[fdIndex];fontMatrix=fontDict.getByName('FontMatrix')||_util.FONT_IDENTITY_MATRIX;}else{(0,_util.warn)('Invalid fd index for glyph index.');}}var cmds=[];cmds.push({cmd:'save'});cmds.push({cmd:'transform',args:fontMatrix.slice()});cmds.push({cmd:'scale',args:['size','-size']});this.compileGlyphImpl(code,cmds,glyphId);cmds.push({cmd:'restore'});return cmds;}},{key:'compileGlyphImpl',value:function compileGlyphImpl(){(0,_util.unreachable)('Children classes should implement this.');}},{key:'hasBuiltPath',value:function hasBuiltPath(unicode){var cmap=lookupCmap(this.cmap,unicode);return this.compiledGlyphs[cmap.glyphId]!==undefined&&this.compiledCharCodeToGlyphId[cmap.charCode]!==undefined;}}]);return CompiledFont;}();var TrueTypeCompiled=function(_CompiledFont){_inherits(TrueTypeCompiled,_CompiledFont);function TrueTypeCompiled(glyphs,cmap,fontMatrix){_classCallCheck(this,TrueTypeCompiled);var _this=_possibleConstructorReturn(this,(TrueTypeCompiled.__proto__||Object.getPrototypeOf(TrueTypeCompiled)).call(this,fontMatrix||[0.000488,0,0,0.000488,0,0]));_this.glyphs=glyphs;_this.cmap=cmap;return _this;}_createClass(TrueTypeCompiled,[{key:'compileGlyphImpl',value:function compileGlyphImpl(code,cmds){compileGlyf(code,cmds,this);}}]);return TrueTypeCompiled;}(CompiledFont);var Type2Compiled=function(_CompiledFont2){_inherits(Type2Compiled,_CompiledFont2);function Type2Compiled(cffInfo,cmap,fontMatrix,glyphNameMap){_classCallCheck(this,Type2Compiled);var _this2=_possibleConstructorReturn(this,(Type2Compiled.__proto__||Object.getPrototypeOf(Type2Compiled)).call(this,fontMatrix||[0.001,0,0,0.001,0,0]));_this2.glyphs=cffInfo.glyphs;_this2.gsubrs=cffInfo.gsubrs||[];_this2.subrs=cffInfo.subrs||[];_this2.cmap=cmap;_this2.glyphNameMap=glyphNameMap||(0,_glyphlist.getGlyphsUnicode)();_this2.gsubrsBias=_this2.gsubrs.length<1240?107:_this2.gsubrs.length<33900?1131:32768;_this2.subrsBias=_this2.subrs.length<1240?107:_this2.subrs.length<33900?1131:32768;_this2.isCFFCIDFont=cffInfo.isCFFCIDFont;_this2.fdSelect=cffInfo.fdSelect;_this2.fdArray=cffInfo.fdArray;return _this2;}_createClass(Type2Compiled,[{key:'compileGlyphImpl',value:function compileGlyphImpl(code,cmds,glyphId){compileCharString(code,cmds,this,glyphId);}}]);return Type2Compiled;}(CompiledFont);return{create:function FontRendererFactory_create(font,seacAnalysisEnabled){var data=new Uint8Array(font.data);var cmap,glyf,loca,cff,indexToLocFormat,unitsPerEm;var numTables=getUshort(data,4);for(var i=0,p=12;i<numTables;i++,p+=16){var tag=(0,_util.bytesToString)(data.subarray(p,p+4));var offset=getLong(data,p+8);var length=getLong(data,p+12);switch(tag){case'cmap':cmap=parseCmap(data,offset,offset+length);break;case'glyf':glyf=data.subarray(offset,offset+length);break;case'loca':loca=data.subarray(offset,offset+length);break;case'head':unitsPerEm=getUshort(data,offset+18);indexToLocFormat=getUshort(data,offset+50);break;case'CFF ':cff=parseCff(data,offset,offset+length,seacAnalysisEnabled);break;}}if(glyf){var fontMatrix=!unitsPerEm?font.fontMatrix:[1/unitsPerEm,0,0,1/unitsPerEm,0,0];return new TrueTypeCompiled(parseGlyfTable(glyf,loca,indexToLocFormat),cmap,fontMatrix);}return new Type2Compiled(cff,cmap,font.fontMatrix,font.glyphNameMap);}};}();exports.FontRendererFactory=FontRendererFactory;/***/},/* 164 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.Type1Parser=undefined;var _util=__w_pdfjs_require__(2);var _encodings=__w_pdfjs_require__(159);var _stream=__w_pdfjs_require__(140);var HINTING_ENABLED=false;var Type1CharString=function Type1CharStringClosure(){var COMMAND_MAP={'hstem':[1],'vstem':[3],'vmoveto':[4],'rlineto':[5],'hlineto':[6],'vlineto':[7],'rrcurveto':[8],'callsubr':[10],'flex':[12,35],'drop':[12,18],'endchar':[14],'rmoveto':[21],'hmoveto':[22],'vhcurveto':[30],'hvcurveto':[31]};function Type1CharString(){this.width=0;this.lsb=0;this.flexing=false;this.output=[];this.stack=[];}Type1CharString.prototype={convert:function Type1CharString_convert(encoded,subrs,seacAnalysisEnabled){var count=encoded.length;var error=false;var wx,sbx,subrNumber;for(var i=0;i<count;i++){var value=encoded[i];if(value<32){if(value===12){value=(value<<8)+encoded[++i];}switch(value){case 1:if(!HINTING_ENABLED){this.stack=[];break;}error=this.executeCommand(2,COMMAND_MAP.hstem);break;case 3:if(!HINTING_ENABLED){this.stack=[];break;}error=this.executeCommand(2,COMMAND_MAP.vstem);break;case 4:if(this.flexing){if(this.stack.length<1){error=true;break;}var dy=this.stack.pop();this.stack.push(0,dy);break;}error=this.executeCommand(1,COMMAND_MAP.vmoveto);break;case 5:error=this.executeCommand(2,COMMAND_MAP.rlineto);break;case 6:error=this.executeCommand(1,COMMAND_MAP.hlineto);break;case 7:error=this.executeCommand(1,COMMAND_MAP.vlineto);break;case 8:error=this.executeCommand(6,COMMAND_MAP.rrcurveto);break;case 9:this.stack=[];break;case 10:if(this.stack.length<1){error=true;break;}subrNumber=this.stack.pop();if(!subrs[subrNumber]){error=true;break;}error=this.convert(subrs[subrNumber],subrs,seacAnalysisEnabled);break;case 11:return error;case 13:if(this.stack.length<2){error=true;break;}wx=this.stack.pop();sbx=this.stack.pop();this.lsb=sbx;this.width=wx;this.stack.push(wx,sbx);error=this.executeCommand(2,COMMAND_MAP.hmoveto);break;case 14:this.output.push(COMMAND_MAP.endchar[0]);break;case 21:if(this.flexing){break;}error=this.executeCommand(2,COMMAND_MAP.rmoveto);break;case 22:if(this.flexing){this.stack.push(0);break;}error=this.executeCommand(1,COMMAND_MAP.hmoveto);break;case 30:error=this.executeCommand(4,COMMAND_MAP.vhcurveto);break;case 31:error=this.executeCommand(4,COMMAND_MAP.hvcurveto);break;case(12<<8)+0:this.stack=[];break;case(12<<8)+1:if(!HINTING_ENABLED){this.stack=[];break;}error=this.executeCommand(2,COMMAND_MAP.vstem);break;case(12<<8)+2:if(!HINTING_ENABLED){this.stack=[];break;}error=this.executeCommand(2,COMMAND_MAP.hstem);break;case(12<<8)+6:if(seacAnalysisEnabled){this.seac=this.stack.splice(-4,4);error=this.executeCommand(0,COMMAND_MAP.endchar);}else{error=this.executeCommand(4,COMMAND_MAP.endchar);}break;case(12<<8)+7:if(this.stack.length<4){error=true;break;}this.stack.pop();wx=this.stack.pop();var sby=this.stack.pop();sbx=this.stack.pop();this.lsb=sbx;this.width=wx;this.stack.push(wx,sbx,sby);error=this.executeCommand(3,COMMAND_MAP.rmoveto);break;case(12<<8)+12:if(this.stack.length<2){error=true;break;}var num2=this.stack.pop();var num1=this.stack.pop();this.stack.push(num1/num2);break;case(12<<8)+16:if(this.stack.length<2){error=true;break;}subrNumber=this.stack.pop();var numArgs=this.stack.pop();if(subrNumber===0&&numArgs===3){var flexArgs=this.stack.splice(this.stack.length-17,17);this.stack.push(flexArgs[2]+flexArgs[0],flexArgs[3]+flexArgs[1],flexArgs[4],flexArgs[5],flexArgs[6],flexArgs[7],flexArgs[8],flexArgs[9],flexArgs[10],flexArgs[11],flexArgs[12],flexArgs[13],flexArgs[14]);error=this.executeCommand(13,COMMAND_MAP.flex,true);this.flexing=false;this.stack.push(flexArgs[15],flexArgs[16]);}else if(subrNumber===1&&numArgs===0){this.flexing=true;}break;case(12<<8)+17:break;case(12<<8)+33:this.stack=[];break;default:(0,_util.warn)('Unknown type 1 charstring command of "'+value+'"');break;}if(error){break;}continue;}else if(value<=246){value=value-139;}else if(value<=250){value=(value-247)*256+encoded[++i]+108;}else if(value<=254){value=-((value-251)*256)-encoded[++i]-108;}else{value=(encoded[++i]&0xff)<<24|(encoded[++i]&0xff)<<16|(encoded[++i]&0xff)<<8|(encoded[++i]&0xff)<<0;}this.stack.push(value);}return error;},executeCommand:function executeCommand(howManyArgs,command,keepStack){var stackLength=this.stack.length;if(howManyArgs>stackLength){return true;}var start=stackLength-howManyArgs;for(var i=start;i<stackLength;i++){var value=this.stack[i];if(Number.isInteger(value)){this.output.push(28,value>>8&0xff,value&0xff);}else{value=65536*value|0;this.output.push(255,value>>24&0xFF,value>>16&0xFF,value>>8&0xFF,value&0xFF);}}this.output.push.apply(this.output,command);if(keepStack){this.stack.splice(start,howManyArgs);}else{this.stack.length=0;}return false;}};return Type1CharString;}();var Type1Parser=function Type1ParserClosure(){var EEXEC_ENCRYPT_KEY=55665;var CHAR_STRS_ENCRYPT_KEY=4330;function isHexDigit(code){return code>=48&&code<=57||code>=65&&code<=70||code>=97&&code<=102;}function decrypt(data,key,discardNumber){if(discardNumber>=data.length){return new Uint8Array(0);}var r=key|0,c1=52845,c2=22719,i,j;for(i=0;i<discardNumber;i++){r=(data[i]+r)*c1+c2&(1<<16)-1;}var count=data.length-discardNumber;var decrypted=new Uint8Array(count);for(i=discardNumber,j=0;j<count;i++,j++){var value=data[i];decrypted[j]=value^r>>8;r=(value+r)*c1+c2&(1<<16)-1;}return decrypted;}function decryptAscii(data,key,discardNumber){var r=key|0,c1=52845,c2=22719;var count=data.length,maybeLength=count>>>1;var decrypted=new Uint8Array(maybeLength);var i,j;for(i=0,j=0;i<count;i++){var digit1=data[i];if(!isHexDigit(digit1)){continue;}i++;var digit2;while(i<count&&!isHexDigit(digit2=data[i])){i++;}if(i<count){var value=parseInt(String.fromCharCode(digit1,digit2),16);decrypted[j++]=value^r>>8;r=(value+r)*c1+c2&(1<<16)-1;}}return Array.prototype.slice.call(decrypted,discardNumber,j);}function isSpecial(c){return c===0x2F||c===0x5B||c===0x5D||c===0x7B||c===0x7D||c===0x28||c===0x29;}function Type1Parser(stream,encrypted,seacAnalysisEnabled){if(encrypted){var data=stream.getBytes();var isBinary=!(isHexDigit(data[0])&&isHexDigit(data[1])&&isHexDigit(data[2])&&isHexDigit(data[3]));stream=new _stream.Stream(isBinary?decrypt(data,EEXEC_ENCRYPT_KEY,4):decryptAscii(data,EEXEC_ENCRYPT_KEY,4));}this.seacAnalysisEnabled=!!seacAnalysisEnabled;this.stream=stream;this.nextChar();}Type1Parser.prototype={readNumberArray:function Type1Parser_readNumberArray(){this.getToken();var array=[];while(true){var token=this.getToken();if(token===null||token===']'||token==='}'){break;}array.push(parseFloat(token||0));}return array;},readNumber:function Type1Parser_readNumber(){var token=this.getToken();return parseFloat(token||0);},readInt:function Type1Parser_readInt(){var token=this.getToken();return parseInt(token||0,10)|0;},readBoolean:function Type1Parser_readBoolean(){var token=this.getToken();return token==='true'?1:0;},nextChar:function Type1_nextChar(){return this.currentChar=this.stream.getByte();},getToken:function Type1Parser_getToken(){var comment=false;var ch=this.currentChar;while(true){if(ch===-1){return null;}if(comment){if(ch===0x0A||ch===0x0D){comment=false;}}else if(ch===0x25){comment=true;}else if(!(0,_util.isSpace)(ch)){break;}ch=this.nextChar();}if(isSpecial(ch)){this.nextChar();return String.fromCharCode(ch);}var token='';do{token+=String.fromCharCode(ch);ch=this.nextChar();}while(ch>=0&&!(0,_util.isSpace)(ch)&&!isSpecial(ch));return token;},readCharStrings:function Type1Parser_readCharStrings(bytes,lenIV){if(lenIV===-1){return bytes;}return decrypt(bytes,CHAR_STRS_ENCRYPT_KEY,lenIV);},extractFontProgram:function Type1Parser_extractFontProgram(){var stream=this.stream;var subrs=[],charstrings=[];var privateData=Object.create(null);privateData['lenIV']=4;var program={subrs:[],charstrings:[],properties:{'privateData':privateData}};var token,length,data,lenIV,encoded;while((token=this.getToken())!==null){if(token!=='/'){continue;}token=this.getToken();switch(token){case'CharStrings':this.getToken();this.getToken();this.getToken();this.getToken();while(true){token=this.getToken();if(token===null||token==='end'){break;}if(token!=='/'){continue;}var glyph=this.getToken();length=this.readInt();this.getToken();data=length>0?stream.getBytes(length):new Uint8Array(0);lenIV=program.properties.privateData['lenIV'];encoded=this.readCharStrings(data,lenIV);this.nextChar();token=this.getToken();if(token==='noaccess'){this.getToken();}charstrings.push({glyph:glyph,encoded:encoded});}break;case'Subrs':this.readInt();this.getToken();while(this.getToken()==='dup'){var index=this.readInt();length=this.readInt();this.getToken();data=length>0?stream.getBytes(length):new Uint8Array(0);lenIV=program.properties.privateData['lenIV'];encoded=this.readCharStrings(data,lenIV);this.nextChar();token=this.getToken();if(token==='noaccess'){this.getToken();}subrs[index]=encoded;}break;case'BlueValues':case'OtherBlues':case'FamilyBlues':case'FamilyOtherBlues':var blueArray=this.readNumberArray();if(blueArray.length>0&&blueArray.length%2===0&&HINTING_ENABLED){program.properties.privateData[token]=blueArray;}break;case'StemSnapH':case'StemSnapV':program.properties.privateData[token]=this.readNumberArray();break;case'StdHW':case'StdVW':program.properties.privateData[token]=this.readNumberArray()[0];break;case'BlueShift':case'lenIV':case'BlueFuzz':case'BlueScale':case'LanguageGroup':case'ExpansionFactor':program.properties.privateData[token]=this.readNumber();break;case'ForceBold':program.properties.privateData[token]=this.readBoolean();break;}}for(var i=0;i<charstrings.length;i++){glyph=charstrings[i].glyph;encoded=charstrings[i].encoded;var charString=new Type1CharString();var error=charString.convert(encoded,subrs,this.seacAnalysisEnabled);var output=charString.output;if(error){output=[14];}program.charstrings.push({glyphName:glyph,charstring:output,width:charString.width,lsb:charString.lsb,seac:charString.seac});}return program;},extractFontHeader:function Type1Parser_extractFontHeader(properties){var token;while((token=this.getToken())!==null){if(token!=='/'){continue;}token=this.getToken();switch(token){case'FontMatrix':var matrix=this.readNumberArray();properties.fontMatrix=matrix;break;case'Encoding':var encodingArg=this.getToken();var encoding;if(!/^\d+$/.test(encodingArg)){encoding=(0,_encodings.getEncoding)(encodingArg);}else{encoding=[];var size=parseInt(encodingArg,10)|0;this.getToken();for(var j=0;j<size;j++){token=this.getToken();while(token!=='dup'&&token!=='def'){token=this.getToken();if(token===null){return;}}if(token==='def'){break;}var index=this.readInt();this.getToken();var glyph=this.getToken();encoding[index]=glyph;this.getToken();}}properties.builtInEncoding=encoding;break;case'FontBBox':var fontBBox=this.readNumberArray();properties.ascent=Math.max(fontBBox[3],fontBBox[1]);properties.descent=Math.min(fontBBox[1],fontBBox[3]);properties.ascentScaled=true;break;}}}};return Type1Parser;}();exports.Type1Parser=Type1Parser;/***/},/* 165 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.getTilingPatternIR=exports.Pattern=undefined;var _util=__w_pdfjs_require__(2);var _colorspace=__w_pdfjs_require__(151);var _primitives=__w_pdfjs_require__(138);var ShadingType={FUNCTION_BASED:1,AXIAL:2,RADIAL:3,FREE_FORM_MESH:4,LATTICE_FORM_MESH:5,COONS_PATCH_MESH:6,TENSOR_PATCH_MESH:7};var Pattern=function PatternClosure(){function Pattern(){(0,_util.unreachable)('should not call Pattern constructor');}Pattern.prototype={getPattern:function Pattern_getPattern(ctx){(0,_util.unreachable)('Should not call Pattern.getStyle: '+ctx);}};Pattern.parseShading=function(shading,matrix,xref,res,handler,pdfFunctionFactory){var dict=(0,_primitives.isStream)(shading)?shading.dict:shading;var type=dict.get('ShadingType');try{switch(type){case ShadingType.AXIAL:case ShadingType.RADIAL:return new Shadings.RadialAxial(dict,matrix,xref,res,pdfFunctionFactory);case ShadingType.FREE_FORM_MESH:case ShadingType.LATTICE_FORM_MESH:case ShadingType.COONS_PATCH_MESH:case ShadingType.TENSOR_PATCH_MESH:return new Shadings.Mesh(shading,matrix,xref,res,pdfFunctionFactory);default:throw new _util.FormatError('Unsupported ShadingType: '+type);}}catch(ex){if(ex instanceof _util.MissingDataException){throw ex;}handler.send('UnsupportedFeature',{featureId:_util.UNSUPPORTED_FEATURES.shadingPattern});(0,_util.warn)(ex);return new Shadings.Dummy();}};return Pattern;}();var Shadings={};Shadings.SMALL_NUMBER=1e-6;Shadings.RadialAxial=function RadialAxialClosure(){function RadialAxial(dict,matrix,xref,res,pdfFunctionFactory){this.matrix=matrix;this.coordsArr=dict.getArray('Coords');this.shadingType=dict.get('ShadingType');this.type='Pattern';var cs=dict.get('ColorSpace','CS');cs=_colorspace.ColorSpace.parse(cs,xref,res,pdfFunctionFactory);this.cs=cs;var t0=0.0,t1=1.0;if(dict.has('Domain')){var domainArr=dict.getArray('Domain');t0=domainArr[0];t1=domainArr[1];}var extendStart=false,extendEnd=false;if(dict.has('Extend')){var extendArr=dict.getArray('Extend');extendStart=extendArr[0];extendEnd=extendArr[1];}if(this.shadingType===ShadingType.RADIAL&&(!extendStart||!extendEnd)){var x1=this.coordsArr[0];var y1=this.coordsArr[1];var r1=this.coordsArr[2];var x2=this.coordsArr[3];var y2=this.coordsArr[4];var r2=this.coordsArr[5];var distance=Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));if(r1<=r2+distance&&r2<=r1+distance){(0,_util.warn)('Unsupported radial gradient.');}}this.extendStart=extendStart;this.extendEnd=extendEnd;var fnObj=dict.get('Function');var fn=pdfFunctionFactory.createFromArray(fnObj);var diff=t1-t0;var step=diff/10;var colorStops=this.colorStops=[];if(t0>=t1||step<=0){(0,_util.info)('Bad shading domain.');return;}var color=new Float32Array(cs.numComps),ratio=new Float32Array(1);var rgbColor;for(var i=t0;i<=t1;i+=step){ratio[0]=i;fn(ratio,0,color,0);rgbColor=cs.getRgb(color,0);var cssColor=_util.Util.makeCssRgb(rgbColor[0],rgbColor[1],rgbColor[2]);colorStops.push([(i-t0)/diff,cssColor]);}var background='transparent';if(dict.has('Background')){rgbColor=cs.getRgb(dict.get('Background'),0);background=_util.Util.makeCssRgb(rgbColor[0],rgbColor[1],rgbColor[2]);}if(!extendStart){colorStops.unshift([0,background]);colorStops[1][0]+=Shadings.SMALL_NUMBER;}if(!extendEnd){colorStops[colorStops.length-1][0]-=Shadings.SMALL_NUMBER;colorStops.push([1,background]);}this.colorStops=colorStops;}RadialAxial.prototype={getIR:function RadialAxial_getIR(){var coordsArr=this.coordsArr;var shadingType=this.shadingType;var type,p0,p1,r0,r1;if(shadingType===ShadingType.AXIAL){p0=[coordsArr[0],coordsArr[1]];p1=[coordsArr[2],coordsArr[3]];r0=null;r1=null;type='axial';}else if(shadingType===ShadingType.RADIAL){p0=[coordsArr[0],coordsArr[1]];p1=[coordsArr[3],coordsArr[4]];r0=coordsArr[2];r1=coordsArr[5];type='radial';}else{(0,_util.unreachable)('getPattern type unknown: '+shadingType);}var matrix=this.matrix;if(matrix){p0=_util.Util.applyTransform(p0,matrix);p1=_util.Util.applyTransform(p1,matrix);if(shadingType===ShadingType.RADIAL){var scale=_util.Util.singularValueDecompose2dScale(matrix);r0*=scale[0];r1*=scale[1];}}return['RadialAxial',type,this.colorStops,p0,p1,r0,r1];}};return RadialAxial;}();Shadings.Mesh=function MeshClosure(){function MeshStreamReader(stream,context){this.stream=stream;this.context=context;this.buffer=0;this.bufferLength=0;var numComps=context.numComps;this.tmpCompsBuf=new Float32Array(numComps);var csNumComps=context.colorSpace.numComps;this.tmpCsCompsBuf=context.colorFn?new Float32Array(csNumComps):this.tmpCompsBuf;}MeshStreamReader.prototype={get hasData(){if(this.stream.end){return this.stream.pos<this.stream.end;}if(this.bufferLength>0){return true;}var nextByte=this.stream.getByte();if(nextByte<0){return false;}this.buffer=nextByte;this.bufferLength=8;return true;},readBits:function MeshStreamReader_readBits(n){var buffer=this.buffer;var bufferLength=this.bufferLength;if(n===32){if(bufferLength===0){return(this.stream.getByte()<<24|this.stream.getByte()<<16|this.stream.getByte()<<8|this.stream.getByte())>>>0;}buffer=buffer<<24|this.stream.getByte()<<16|this.stream.getByte()<<8|this.stream.getByte();var nextByte=this.stream.getByte();this.buffer=nextByte&(1<<bufferLength)-1;return(buffer<<8-bufferLength|(nextByte&0xFF)>>bufferLength)>>>0;}if(n===8&&bufferLength===0){return this.stream.getByte();}while(bufferLength<n){buffer=buffer<<8|this.stream.getByte();bufferLength+=8;}bufferLength-=n;this.bufferLength=bufferLength;this.buffer=buffer&(1<<bufferLength)-1;return buffer>>bufferLength;},align:function MeshStreamReader_align(){this.buffer=0;this.bufferLength=0;},readFlag:function MeshStreamReader_readFlag(){return this.readBits(this.context.bitsPerFlag);},readCoordinate:function MeshStreamReader_readCoordinate(){var bitsPerCoordinate=this.context.bitsPerCoordinate;var xi=this.readBits(bitsPerCoordinate);var yi=this.readBits(bitsPerCoordinate);var decode=this.context.decode;var scale=bitsPerCoordinate<32?1/((1<<bitsPerCoordinate)-1):2.3283064365386963e-10;return[xi*scale*(decode[1]-decode[0])+decode[0],yi*scale*(decode[3]-decode[2])+decode[2]];},readComponents:function MeshStreamReader_readComponents(){var numComps=this.context.numComps;var bitsPerComponent=this.context.bitsPerComponent;var scale=bitsPerComponent<32?1/((1<<bitsPerComponent)-1):2.3283064365386963e-10;var decode=this.context.decode;var components=this.tmpCompsBuf;for(var i=0,j=4;i<numComps;i++,j+=2){var ci=this.readBits(bitsPerComponent);components[i]=ci*scale*(decode[j+1]-decode[j])+decode[j];}var color=this.tmpCsCompsBuf;if(this.context.colorFn){this.context.colorFn(components,0,color,0);}return this.context.colorSpace.getRgb(color,0);}};function decodeType4Shading(mesh,reader){var coords=mesh.coords;var colors=mesh.colors;var operators=[];var ps=[];var verticesLeft=0;while(reader.hasData){var f=reader.readFlag();var coord=reader.readCoordinate();var color=reader.readComponents();if(verticesLeft===0){if(!(0<=f&&f<=2)){throw new _util.FormatError('Unknown type4 flag');}switch(f){case 0:verticesLeft=3;break;case 1:ps.push(ps[ps.length-2],ps[ps.length-1]);verticesLeft=1;break;case 2:ps.push(ps[ps.length-3],ps[ps.length-1]);verticesLeft=1;break;}operators.push(f);}ps.push(coords.length);coords.push(coord);colors.push(color);verticesLeft--;reader.align();}mesh.figures.push({type:'triangles',coords:new Int32Array(ps),colors:new Int32Array(ps)});}function decodeType5Shading(mesh,reader,verticesPerRow){var coords=mesh.coords;var colors=mesh.colors;var ps=[];while(reader.hasData){var coord=reader.readCoordinate();var color=reader.readComponents();ps.push(coords.length);coords.push(coord);colors.push(color);}mesh.figures.push({type:'lattice',coords:new Int32Array(ps),colors:new Int32Array(ps),verticesPerRow:verticesPerRow});}var MIN_SPLIT_PATCH_CHUNKS_AMOUNT=3;var MAX_SPLIT_PATCH_CHUNKS_AMOUNT=20;var TRIANGLE_DENSITY=20;var getB=function getBClosure(){function buildB(count){var lut=[];for(var i=0;i<=count;i++){var t=i/count,t_=1-t;lut.push(new Float32Array([t_*t_*t_,3*t*t_*t_,3*t*t*t_,t*t*t]));}return lut;}var cache=[];return function getB(count){if(!cache[count]){cache[count]=buildB(count);}return cache[count];};}();function buildFigureFromPatch(mesh,index){var figure=mesh.figures[index];(0,_util.assert)(figure.type==='patch','Unexpected patch mesh figure');var coords=mesh.coords,colors=mesh.colors;var pi=figure.coords;var ci=figure.colors;var figureMinX=Math.min(coords[pi[0]][0],coords[pi[3]][0],coords[pi[12]][0],coords[pi[15]][0]);var figureMinY=Math.min(coords[pi[0]][1],coords[pi[3]][1],coords[pi[12]][1],coords[pi[15]][1]);var figureMaxX=Math.max(coords[pi[0]][0],coords[pi[3]][0],coords[pi[12]][0],coords[pi[15]][0]);var figureMaxY=Math.max(coords[pi[0]][1],coords[pi[3]][1],coords[pi[12]][1],coords[pi[15]][1]);var splitXBy=Math.ceil((figureMaxX-figureMinX)*TRIANGLE_DENSITY/(mesh.bounds[2]-mesh.bounds[0]));splitXBy=Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT,Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT,splitXBy));var splitYBy=Math.ceil((figureMaxY-figureMinY)*TRIANGLE_DENSITY/(mesh.bounds[3]-mesh.bounds[1]));splitYBy=Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT,Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT,splitYBy));var verticesPerRow=splitXBy+1;var figureCoords=new Int32Array((splitYBy+1)*verticesPerRow);var figureColors=new Int32Array((splitYBy+1)*verticesPerRow);var k=0;var cl=new Uint8Array(3),cr=new Uint8Array(3);var c0=colors[ci[0]],c1=colors[ci[1]],c2=colors[ci[2]],c3=colors[ci[3]];var bRow=getB(splitYBy),bCol=getB(splitXBy);for(var row=0;row<=splitYBy;row++){cl[0]=(c0[0]*(splitYBy-row)+c2[0]*row)/splitYBy|0;cl[1]=(c0[1]*(splitYBy-row)+c2[1]*row)/splitYBy|0;cl[2]=(c0[2]*(splitYBy-row)+c2[2]*row)/splitYBy|0;cr[0]=(c1[0]*(splitYBy-row)+c3[0]*row)/splitYBy|0;cr[1]=(c1[1]*(splitYBy-row)+c3[1]*row)/splitYBy|0;cr[2]=(c1[2]*(splitYBy-row)+c3[2]*row)/splitYBy|0;for(var col=0;col<=splitXBy;col++,k++){if((row===0||row===splitYBy)&&(col===0||col===splitXBy)){continue;}var x=0,y=0;var q=0;for(var i=0;i<=3;i++){for(var j=0;j<=3;j++,q++){var m=bRow[row][i]*bCol[col][j];x+=coords[pi[q]][0]*m;y+=coords[pi[q]][1]*m;}}figureCoords[k]=coords.length;coords.push([x,y]);figureColors[k]=colors.length;var newColor=new Uint8Array(3);newColor[0]=(cl[0]*(splitXBy-col)+cr[0]*col)/splitXBy|0;newColor[1]=(cl[1]*(splitXBy-col)+cr[1]*col)/splitXBy|0;newColor[2]=(cl[2]*(splitXBy-col)+cr[2]*col)/splitXBy|0;colors.push(newColor);}}figureCoords[0]=pi[0];figureColors[0]=ci[0];figureCoords[splitXBy]=pi[3];figureColors[splitXBy]=ci[1];figureCoords[verticesPerRow*splitYBy]=pi[12];figureColors[verticesPerRow*splitYBy]=ci[2];figureCoords[verticesPerRow*splitYBy+splitXBy]=pi[15];figureColors[verticesPerRow*splitYBy+splitXBy]=ci[3];mesh.figures[index]={type:'lattice',coords:figureCoords,colors:figureColors,verticesPerRow:verticesPerRow};}function decodeType6Shading(mesh,reader){var coords=mesh.coords;var colors=mesh.colors;var ps=new Int32Array(16);var cs=new Int32Array(4);while(reader.hasData){var f=reader.readFlag();if(!(0<=f&&f<=3)){throw new _util.FormatError('Unknown type6 flag');}var i,ii;var pi=coords.length;for(i=0,ii=f!==0?8:12;i<ii;i++){coords.push(reader.readCoordinate());}var ci=colors.length;for(i=0,ii=f!==0?2:4;i<ii;i++){colors.push(reader.readComponents());}var tmp1,tmp2,tmp3,tmp4;switch(f){case 0:ps[12]=pi+3;ps[13]=pi+4;ps[14]=pi+5;ps[15]=pi+6;ps[8]=pi+2;ps[11]=pi+7;ps[4]=pi+1;ps[7]=pi+8;ps[0]=pi;ps[1]=pi+11;ps[2]=pi+10;ps[3]=pi+9;cs[2]=ci+1;cs[3]=ci+2;cs[0]=ci;cs[1]=ci+3;break;case 1:tmp1=ps[12];tmp2=ps[13];tmp3=ps[14];tmp4=ps[15];ps[12]=tmp4;ps[13]=pi+0;ps[14]=pi+1;ps[15]=pi+2;ps[8]=tmp3;ps[11]=pi+3;ps[4]=tmp2;ps[7]=pi+4;ps[0]=tmp1;ps[1]=pi+7;ps[2]=pi+6;ps[3]=pi+5;tmp1=cs[2];tmp2=cs[3];cs[2]=tmp2;cs[3]=ci;cs[0]=tmp1;cs[1]=ci+1;break;case 2:tmp1=ps[15];tmp2=ps[11];ps[12]=ps[3];ps[13]=pi+0;ps[14]=pi+1;ps[15]=pi+2;ps[8]=ps[7];ps[11]=pi+3;ps[4]=tmp2;ps[7]=pi+4;ps[0]=tmp1;ps[1]=pi+7;ps[2]=pi+6;ps[3]=pi+5;tmp1=cs[3];cs[2]=cs[1];cs[3]=ci;cs[0]=tmp1;cs[1]=ci+1;break;case 3:ps[12]=ps[0];ps[13]=pi+0;ps[14]=pi+1;ps[15]=pi+2;ps[8]=ps[1];ps[11]=pi+3;ps[4]=ps[2];ps[7]=pi+4;ps[0]=ps[3];ps[1]=pi+7;ps[2]=pi+6;ps[3]=pi+5;cs[2]=cs[0];cs[3]=ci;cs[0]=cs[1];cs[1]=ci+1;break;}ps[5]=coords.length;coords.push([(-4*coords[ps[0]][0]-coords[ps[15]][0]+6*(coords[ps[4]][0]+coords[ps[1]][0])-2*(coords[ps[12]][0]+coords[ps[3]][0])+3*(coords[ps[13]][0]+coords[ps[7]][0]))/9,(-4*coords[ps[0]][1]-coords[ps[15]][1]+6*(coords[ps[4]][1]+coords[ps[1]][1])-2*(coords[ps[12]][1]+coords[ps[3]][1])+3*(coords[ps[13]][1]+coords[ps[7]][1]))/9]);ps[6]=coords.length;coords.push([(-4*coords[ps[3]][0]-coords[ps[12]][0]+6*(coords[ps[2]][0]+coords[ps[7]][0])-2*(coords[ps[0]][0]+coords[ps[15]][0])+3*(coords[ps[4]][0]+coords[ps[14]][0]))/9,(-4*coords[ps[3]][1]-coords[ps[12]][1]+6*(coords[ps[2]][1]+coords[ps[7]][1])-2*(coords[ps[0]][1]+coords[ps[15]][1])+3*(coords[ps[4]][1]+coords[ps[14]][1]))/9]);ps[9]=coords.length;coords.push([(-4*coords[ps[12]][0]-coords[ps[3]][0]+6*(coords[ps[8]][0]+coords[ps[13]][0])-2*(coords[ps[0]][0]+coords[ps[15]][0])+3*(coords[ps[11]][0]+coords[ps[1]][0]))/9,(-4*coords[ps[12]][1]-coords[ps[3]][1]+6*(coords[ps[8]][1]+coords[ps[13]][1])-2*(coords[ps[0]][1]+coords[ps[15]][1])+3*(coords[ps[11]][1]+coords[ps[1]][1]))/9]);ps[10]=coords.length;coords.push([(-4*coords[ps[15]][0]-coords[ps[0]][0]+6*(coords[ps[11]][0]+coords[ps[14]][0])-2*(coords[ps[12]][0]+coords[ps[3]][0])+3*(coords[ps[2]][0]+coords[ps[8]][0]))/9,(-4*coords[ps[15]][1]-coords[ps[0]][1]+6*(coords[ps[11]][1]+coords[ps[14]][1])-2*(coords[ps[12]][1]+coords[ps[3]][1])+3*(coords[ps[2]][1]+coords[ps[8]][1]))/9]);mesh.figures.push({type:'patch',coords:new Int32Array(ps),colors:new Int32Array(cs)});}}function decodeType7Shading(mesh,reader){var coords=mesh.coords;var colors=mesh.colors;var ps=new Int32Array(16);var cs=new Int32Array(4);while(reader.hasData){var f=reader.readFlag();if(!(0<=f&&f<=3)){throw new _util.FormatError('Unknown type7 flag');}var i,ii;var pi=coords.length;for(i=0,ii=f!==0?12:16;i<ii;i++){coords.push(reader.readCoordinate());}var ci=colors.length;for(i=0,ii=f!==0?2:4;i<ii;i++){colors.push(reader.readComponents());}var tmp1,tmp2,tmp3,tmp4;switch(f){case 0:ps[12]=pi+3;ps[13]=pi+4;ps[14]=pi+5;ps[15]=pi+6;ps[8]=pi+2;ps[9]=pi+13;ps[10]=pi+14;ps[11]=pi+7;ps[4]=pi+1;ps[5]=pi+12;ps[6]=pi+15;ps[7]=pi+8;ps[0]=pi;ps[1]=pi+11;ps[2]=pi+10;ps[3]=pi+9;cs[2]=ci+1;cs[3]=ci+2;cs[0]=ci;cs[1]=ci+3;break;case 1:tmp1=ps[12];tmp2=ps[13];tmp3=ps[14];tmp4=ps[15];ps[12]=tmp4;ps[13]=pi+0;ps[14]=pi+1;ps[15]=pi+2;ps[8]=tmp3;ps[9]=pi+9;ps[10]=pi+10;ps[11]=pi+3;ps[4]=tmp2;ps[5]=pi+8;ps[6]=pi+11;ps[7]=pi+4;ps[0]=tmp1;ps[1]=pi+7;ps[2]=pi+6;ps[3]=pi+5;tmp1=cs[2];tmp2=cs[3];cs[2]=tmp2;cs[3]=ci;cs[0]=tmp1;cs[1]=ci+1;break;case 2:tmp1=ps[15];tmp2=ps[11];ps[12]=ps[3];ps[13]=pi+0;ps[14]=pi+1;ps[15]=pi+2;ps[8]=ps[7];ps[9]=pi+9;ps[10]=pi+10;ps[11]=pi+3;ps[4]=tmp2;ps[5]=pi+8;ps[6]=pi+11;ps[7]=pi+4;ps[0]=tmp1;ps[1]=pi+7;ps[2]=pi+6;ps[3]=pi+5;tmp1=cs[3];cs[2]=cs[1];cs[3]=ci;cs[0]=tmp1;cs[1]=ci+1;break;case 3:ps[12]=ps[0];ps[13]=pi+0;ps[14]=pi+1;ps[15]=pi+2;ps[8]=ps[1];ps[9]=pi+9;ps[10]=pi+10;ps[11]=pi+3;ps[4]=ps[2];ps[5]=pi+8;ps[6]=pi+11;ps[7]=pi+4;ps[0]=ps[3];ps[1]=pi+7;ps[2]=pi+6;ps[3]=pi+5;cs[2]=cs[0];cs[3]=ci;cs[0]=cs[1];cs[1]=ci+1;break;}mesh.figures.push({type:'patch',coords:new Int32Array(ps),colors:new Int32Array(cs)});}}function updateBounds(mesh){var minX=mesh.coords[0][0],minY=mesh.coords[0][1],maxX=minX,maxY=minY;for(var i=1,ii=mesh.coords.length;i<ii;i++){var x=mesh.coords[i][0],y=mesh.coords[i][1];minX=minX>x?x:minX;minY=minY>y?y:minY;maxX=maxX<x?x:maxX;maxY=maxY<y?y:maxY;}mesh.bounds=[minX,minY,maxX,maxY];}function packData(mesh){var i,ii,j,jj;var coords=mesh.coords;var coordsPacked=new Float32Array(coords.length*2);for(i=0,j=0,ii=coords.length;i<ii;i++){var xy=coords[i];coordsPacked[j++]=xy[0];coordsPacked[j++]=xy[1];}mesh.coords=coordsPacked;var colors=mesh.colors;var colorsPacked=new Uint8Array(colors.length*3);for(i=0,j=0,ii=colors.length;i<ii;i++){var c=colors[i];colorsPacked[j++]=c[0];colorsPacked[j++]=c[1];colorsPacked[j++]=c[2];}mesh.colors=colorsPacked;var figures=mesh.figures;for(i=0,ii=figures.length;i<ii;i++){var figure=figures[i],ps=figure.coords,cs=figure.colors;for(j=0,jj=ps.length;j<jj;j++){ps[j]*=2;cs[j]*=3;}}}function Mesh(stream,matrix,xref,res,pdfFunctionFactory){if(!(0,_primitives.isStream)(stream)){throw new _util.FormatError('Mesh data is not a stream');}var dict=stream.dict;this.matrix=matrix;this.shadingType=dict.get('ShadingType');this.type='Pattern';this.bbox=dict.getArray('BBox');var cs=dict.get('ColorSpace','CS');cs=_colorspace.ColorSpace.parse(cs,xref,res,pdfFunctionFactory);this.cs=cs;this.background=dict.has('Background')?cs.getRgb(dict.get('Background'),0):null;var fnObj=dict.get('Function');var fn=fnObj?pdfFunctionFactory.createFromArray(fnObj):null;this.coords=[];this.colors=[];this.figures=[];var decodeContext={bitsPerCoordinate:dict.get('BitsPerCoordinate'),bitsPerComponent:dict.get('BitsPerComponent'),bitsPerFlag:dict.get('BitsPerFlag'),decode:dict.getArray('Decode'),colorFn:fn,colorSpace:cs,numComps:fn?1:cs.numComps};var reader=new MeshStreamReader(stream,decodeContext);var patchMesh=false;switch(this.shadingType){case ShadingType.FREE_FORM_MESH:decodeType4Shading(this,reader);break;case ShadingType.LATTICE_FORM_MESH:var verticesPerRow=dict.get('VerticesPerRow')|0;if(verticesPerRow<2){throw new _util.FormatError('Invalid VerticesPerRow');}decodeType5Shading(this,reader,verticesPerRow);break;case ShadingType.COONS_PATCH_MESH:decodeType6Shading(this,reader);patchMesh=true;break;case ShadingType.TENSOR_PATCH_MESH:decodeType7Shading(this,reader);patchMesh=true;break;default:(0,_util.unreachable)('Unsupported mesh type.');break;}if(patchMesh){updateBounds(this);for(var i=0,ii=this.figures.length;i<ii;i++){buildFigureFromPatch(this,i);}}updateBounds(this);packData(this);}Mesh.prototype={getIR:function Mesh_getIR(){return['Mesh',this.shadingType,this.coords,this.colors,this.figures,this.bounds,this.matrix,this.bbox,this.background];}};return Mesh;}();Shadings.Dummy=function DummyClosure(){function Dummy(){this.type='Pattern';}Dummy.prototype={getIR:function Dummy_getIR(){return['Dummy'];}};return Dummy;}();function getTilingPatternIR(operatorList,dict,args){var matrix=dict.getArray('Matrix');var bbox=_util.Util.normalizeRect(dict.getArray('BBox'));var xstep=dict.get('XStep');var ystep=dict.get('YStep');var paintType=dict.get('PaintType');var tilingType=dict.get('TilingType');if(bbox[2]-bbox[0]===0||bbox[3]-bbox[1]===0){throw new _util.FormatError('Invalid getTilingPatternIR /BBox array: ['+bbox+'].');}return['TilingPattern',args,operatorList,matrix,bbox,xstep,ystep,paintType,tilingType];}exports.Pattern=Pattern;exports.getTilingPatternIR=getTilingPatternIR;/***/},/* 166 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.bidi=undefined;var _util=__w_pdfjs_require__(2);var baseTypes=['BN','BN','BN','BN','BN','BN','BN','BN','BN','S','B','S','WS','B','BN','BN','BN','BN','BN','BN','BN','BN','BN','BN','BN','BN','BN','BN','B','B','B','S','WS','ON','ON','ET','ET','ET','ON','ON','ON','ON','ON','ES','CS','ES','CS','CS','EN','EN','EN','EN','EN','EN','EN','EN','EN','EN','CS','ON','ON','ON','ON','ON','ON','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','ON','ON','ON','ON','ON','ON','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','ON','ON','ON','ON','BN','BN','BN','BN','BN','BN','B','BN','BN','BN','BN','BN','BN','BN','BN','BN','BN','BN','BN','BN','BN','BN','BN','BN','BN','BN','BN','BN','BN','BN','BN','BN','BN','CS','ON','ET','ET','ET','ET','ON','ON','ON','ON','L','ON','ON','BN','ON','ON','ET','ET','EN','EN','ON','L','ON','ON','ON','EN','L','ON','ON','ON','ON','ON','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','ON','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','L','ON','L','L','L','L','L','L','L','L'];var arabicTypes=['AN','AN','AN','AN','AN','AN','ON','ON','AL','ET','ET','AL','CS','AL','ON','ON','NSM','NSM','NSM','NSM','NSM','NSM','NSM','NSM','NSM','NSM','NSM','AL','AL','','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','NSM','NSM','NSM','NSM','NSM','NSM','NSM','NSM','NSM','NSM','NSM','NSM','NSM','NSM','NSM','NSM','NSM','NSM','NSM','NSM','NSM','AN','AN','AN','AN','AN','AN','AN','AN','AN','AN','ET','AN','AN','AL','AL','AL','NSM','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','NSM','NSM','NSM','NSM','NSM','NSM','NSM','AN','ON','NSM','NSM','NSM','NSM','NSM','NSM','AL','AL','NSM','NSM','ON','NSM','NSM','NSM','NSM','AL','AL','EN','EN','EN','EN','EN','EN','EN','EN','EN','EN','AL','AL','AL','AL','AL','AL'];function isOdd(i){return(i&1)!==0;}function isEven(i){return(i&1)===0;}function findUnequal(arr,start,value){for(var j=start,jj=arr.length;j<jj;++j){if(arr[j]!==value){return j;}}return j;}function setValues(arr,start,end,value){for(var j=start;j<end;++j){arr[j]=value;}}function reverseValues(arr,start,end){for(var i=start,j=end-1;i<j;++i,--j){var temp=arr[i];arr[i]=arr[j];arr[j]=temp;}}function createBidiText(str,isLTR,vertical){return{str:str,dir:vertical?'ttb':isLTR?'ltr':'rtl'};}var chars=[];var types=[];function bidi(str,startLevel,vertical){var isLTR=true;var strLength=str.length;if(strLength===0||vertical){return createBidiText(str,isLTR,vertical);}chars.length=strLength;types.length=strLength;var numBidi=0;var i,ii;for(i=0;i<strLength;++i){chars[i]=str.charAt(i);var charCode=str.charCodeAt(i);var charType='L';if(charCode<=0x00ff){charType=baseTypes[charCode];}else if(0x0590<=charCode&&charCode<=0x05f4){charType='R';}else if(0x0600<=charCode&&charCode<=0x06ff){charType=arabicTypes[charCode&0xff];if(!charType){(0,_util.warn)('Bidi: invalid Unicode character '+charCode.toString(16));}}else if(0x0700<=charCode&&charCode<=0x08AC){charType='AL';}if(charType==='R'||charType==='AL'||charType==='AN'){numBidi++;}types[i]=charType;}if(numBidi===0){isLTR=true;return createBidiText(str,isLTR);}if(startLevel===-1){if(numBidi/strLength<0.3){isLTR=true;startLevel=0;}else{isLTR=false;startLevel=1;}}var levels=[];for(i=0;i<strLength;++i){levels[i]=startLevel;}var e=isOdd(startLevel)?'R':'L';var sor=e;var eor=sor;var lastType=sor;for(i=0;i<strLength;++i){if(types[i]==='NSM'){types[i]=lastType;}else{lastType=types[i];}}lastType=sor;var t;for(i=0;i<strLength;++i){t=types[i];if(t==='EN'){types[i]=lastType==='AL'?'AN':'EN';}else if(t==='R'||t==='L'||t==='AL'){lastType=t;}}for(i=0;i<strLength;++i){t=types[i];if(t==='AL'){types[i]='R';}}for(i=1;i<strLength-1;++i){if(types[i]==='ES'&&types[i-1]==='EN'&&types[i+1]==='EN'){types[i]='EN';}if(types[i]==='CS'&&(types[i-1]==='EN'||types[i-1]==='AN')&&types[i+1]===types[i-1]){types[i]=types[i-1];}}for(i=0;i<strLength;++i){if(types[i]==='EN'){var j;for(j=i-1;j>=0;--j){if(types[j]!=='ET'){break;}types[j]='EN';}for(j=i+1;j<strLength;++j){if(types[j]!=='ET'){break;}types[j]='EN';}}}for(i=0;i<strLength;++i){t=types[i];if(t==='WS'||t==='ES'||t==='ET'||t==='CS'){types[i]='ON';}}lastType=sor;for(i=0;i<strLength;++i){t=types[i];if(t==='EN'){types[i]=lastType==='L'?'L':'EN';}else if(t==='R'||t==='L'){lastType=t;}}for(i=0;i<strLength;++i){if(types[i]==='ON'){var end=findUnequal(types,i+1,'ON');var before=sor;if(i>0){before=types[i-1];}var after=eor;if(end+1<strLength){after=types[end+1];}if(before!=='L'){before='R';}if(after!=='L'){after='R';}if(before===after){setValues(types,i,end,before);}i=end-1;}}for(i=0;i<strLength;++i){if(types[i]==='ON'){types[i]=e;}}for(i=0;i<strLength;++i){t=types[i];if(isEven(levels[i])){if(t==='R'){levels[i]+=1;}else if(t==='AN'||t==='EN'){levels[i]+=2;}}else{if(t==='L'||t==='AN'||t==='EN'){levels[i]+=1;}}}var highestLevel=-1;var lowestOddLevel=99;var level;for(i=0,ii=levels.length;i<ii;++i){level=levels[i];if(highestLevel<level){highestLevel=level;}if(lowestOddLevel>level&&isOdd(level)){lowestOddLevel=level;}}for(level=highestLevel;level>=lowestOddLevel;--level){var start=-1;for(i=0,ii=levels.length;i<ii;++i){if(levels[i]<level){if(start>=0){reverseValues(chars,start,i);start=-1;}}else if(start<0){start=i;}}if(start>=0){reverseValues(chars,start,levels.length);}}for(i=0,ii=chars.length;i<ii;++i){var ch=chars[i];if(ch==='<'||ch==='>'){chars[i]='';}}return createBidiText(chars.join(''),isLTR);}exports.bidi=bidi;/***/},/* 167 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.getMetrics=undefined;var _util=__w_pdfjs_require__(2);var getMetrics=(0,_util.getLookupTableFactory)(function(t){t['Courier']=600;t['Courier-Bold']=600;t['Courier-BoldOblique']=600;t['Courier-Oblique']=600;t['Helvetica']=(0,_util.getLookupTableFactory)(function(t){t['space']=278;t['exclam']=278;t['quotedbl']=355;t['numbersign']=556;t['dollar']=556;t['percent']=889;t['ampersand']=667;t['quoteright']=222;t['parenleft']=333;t['parenright']=333;t['asterisk']=389;t['plus']=584;t['comma']=278;t['hyphen']=333;t['period']=278;t['slash']=278;t['zero']=556;t['one']=556;t['two']=556;t['three']=556;t['four']=556;t['five']=556;t['six']=556;t['seven']=556;t['eight']=556;t['nine']=556;t['colon']=278;t['semicolon']=278;t['less']=584;t['equal']=584;t['greater']=584;t['question']=556;t['at']=1015;t['A']=667;t['B']=667;t['C']=722;t['D']=722;t['E']=667;t['F']=611;t['G']=778;t['H']=722;t['I']=278;t['J']=500;t['K']=667;t['L']=556;t['M']=833;t['N']=722;t['O']=778;t['P']=667;t['Q']=778;t['R']=722;t['S']=667;t['T']=611;t['U']=722;t['V']=667;t['W']=944;t['X']=667;t['Y']=667;t['Z']=611;t['bracketleft']=278;t['backslash']=278;t['bracketright']=278;t['asciicircum']=469;t['underscore']=556;t['quoteleft']=222;t['a']=556;t['b']=556;t['c']=500;t['d']=556;t['e']=556;t['f']=278;t['g']=556;t['h']=556;t['i']=222;t['j']=222;t['k']=500;t['l']=222;t['m']=833;t['n']=556;t['o']=556;t['p']=556;t['q']=556;t['r']=333;t['s']=500;t['t']=278;t['u']=556;t['v']=500;t['w']=722;t['x']=500;t['y']=500;t['z']=500;t['braceleft']=334;t['bar']=260;t['braceright']=334;t['asciitilde']=584;t['exclamdown']=333;t['cent']=556;t['sterling']=556;t['fraction']=167;t['yen']=556;t['florin']=556;t['section']=556;t['currency']=556;t['quotesingle']=191;t['quotedblleft']=333;t['guillemotleft']=556;t['guilsinglleft']=333;t['guilsinglright']=333;t['fi']=500;t['fl']=500;t['endash']=556;t['dagger']=556;t['daggerdbl']=556;t['periodcentered']=278;t['paragraph']=537;t['bullet']=350;t['quotesinglbase']=222;t['quotedblbase']=333;t['quotedblright']=333;t['guillemotright']=556;t['ellipsis']=1000;t['perthousand']=1000;t['questiondown']=611;t['grave']=333;t['acute']=333;t['circumflex']=333;t['tilde']=333;t['macron']=333;t['breve']=333;t['dotaccent']=333;t['dieresis']=333;t['ring']=333;t['cedilla']=333;t['hungarumlaut']=333;t['ogonek']=333;t['caron']=333;t['emdash']=1000;t['AE']=1000;t['ordfeminine']=370;t['Lslash']=556;t['Oslash']=778;t['OE']=1000;t['ordmasculine']=365;t['ae']=889;t['dotlessi']=278;t['lslash']=222;t['oslash']=611;t['oe']=944;t['germandbls']=611;t['Idieresis']=278;t['eacute']=556;t['abreve']=556;t['uhungarumlaut']=556;t['ecaron']=556;t['Ydieresis']=667;t['divide']=584;t['Yacute']=667;t['Acircumflex']=667;t['aacute']=556;t['Ucircumflex']=722;t['yacute']=500;t['scommaaccent']=500;t['ecircumflex']=556;t['Uring']=722;t['Udieresis']=722;t['aogonek']=556;t['Uacute']=722;t['uogonek']=556;t['Edieresis']=667;t['Dcroat']=722;t['commaaccent']=250;t['copyright']=737;t['Emacron']=667;t['ccaron']=500;t['aring']=556;t['Ncommaaccent']=722;t['lacute']=222;t['agrave']=556;t['Tcommaaccent']=611;t['Cacute']=722;t['atilde']=556;t['Edotaccent']=667;t['scaron']=500;t['scedilla']=500;t['iacute']=278;t['lozenge']=471;t['Rcaron']=722;t['Gcommaaccent']=778;t['ucircumflex']=556;t['acircumflex']=556;t['Amacron']=667;t['rcaron']=333;t['ccedilla']=500;t['Zdotaccent']=611;t['Thorn']=667;t['Omacron']=778;t['Racute']=722;t['Sacute']=667;t['dcaron']=643;t['Umacron']=722;t['uring']=556;t['threesuperior']=333;t['Ograve']=778;t['Agrave']=667;t['Abreve']=667;t['multiply']=584;t['uacute']=556;t['Tcaron']=611;t['partialdiff']=476;t['ydieresis']=500;t['Nacute']=722;t['icircumflex']=278;t['Ecircumflex']=667;t['adieresis']=556;t['edieresis']=556;t['cacute']=500;t['nacute']=556;t['umacron']=556;t['Ncaron']=722;t['Iacute']=278;t['plusminus']=584;t['brokenbar']=260;t['registered']=737;t['Gbreve']=778;t['Idotaccent']=278;t['summation']=600;t['Egrave']=667;t['racute']=333;t['omacron']=556;t['Zacute']=611;t['Zcaron']=611;t['greaterequal']=549;t['Eth']=722;t['Ccedilla']=722;t['lcommaaccent']=222;t['tcaron']=317;t['eogonek']=556;t['Uogonek']=722;t['Aacute']=667;t['Adieresis']=667;t['egrave']=556;t['zacute']=500;t['iogonek']=222;t['Oacute']=778;t['oacute']=556;t['amacron']=556;t['sacute']=500;t['idieresis']=278;t['Ocircumflex']=778;t['Ugrave']=722;t['Delta']=612;t['thorn']=556;t['twosuperior']=333;t['Odieresis']=778;t['mu']=556;t['igrave']=278;t['ohungarumlaut']=556;t['Eogonek']=667;t['dcroat']=556;t['threequarters']=834;t['Scedilla']=667;t['lcaron']=299;t['Kcommaaccent']=667;t['Lacute']=556;t['trademark']=1000;t['edotaccent']=556;t['Igrave']=278;t['Imacron']=278;t['Lcaron']=556;t['onehalf']=834;t['lessequal']=549;t['ocircumflex']=556;t['ntilde']=556;t['Uhungarumlaut']=722;t['Eacute']=667;t['emacron']=556;t['gbreve']=556;t['onequarter']=834;t['Scaron']=667;t['Scommaaccent']=667;t['Ohungarumlaut']=778;t['degree']=400;t['ograve']=556;t['Ccaron']=722;t['ugrave']=556;t['radical']=453;t['Dcaron']=722;t['rcommaaccent']=333;t['Ntilde']=722;t['otilde']=556;t['Rcommaaccent']=722;t['Lcommaaccent']=556;t['Atilde']=667;t['Aogonek']=667;t['Aring']=667;t['Otilde']=778;t['zdotaccent']=500;t['Ecaron']=667;t['Iogonek']=278;t['kcommaaccent']=500;t['minus']=584;t['Icircumflex']=278;t['ncaron']=556;t['tcommaaccent']=278;t['logicalnot']=584;t['odieresis']=556;t['udieresis']=556;t['notequal']=549;t['gcommaaccent']=556;t['eth']=556;t['zcaron']=500;t['ncommaaccent']=556;t['onesuperior']=333;t['imacron']=278;t['Euro']=556;});t['Helvetica-Bold']=(0,_util.getLookupTableFactory)(function(t){t['space']=278;t['exclam']=333;t['quotedbl']=474;t['numbersign']=556;t['dollar']=556;t['percent']=889;t['ampersand']=722;t['quoteright']=278;t['parenleft']=333;t['parenright']=333;t['asterisk']=389;t['plus']=584;t['comma']=278;t['hyphen']=333;t['period']=278;t['slash']=278;t['zero']=556;t['one']=556;t['two']=556;t['three']=556;t['four']=556;t['five']=556;t['six']=556;t['seven']=556;t['eight']=556;t['nine']=556;t['colon']=333;t['semicolon']=333;t['less']=584;t['equal']=584;t['greater']=584;t['question']=611;t['at']=975;t['A']=722;t['B']=722;t['C']=722;t['D']=722;t['E']=667;t['F']=611;t['G']=778;t['H']=722;t['I']=278;t['J']=556;t['K']=722;t['L']=611;t['M']=833;t['N']=722;t['O']=778;t['P']=667;t['Q']=778;t['R']=722;t['S']=667;t['T']=611;t['U']=722;t['V']=667;t['W']=944;t['X']=667;t['Y']=667;t['Z']=611;t['bracketleft']=333;t['backslash']=278;t['bracketright']=333;t['asciicircum']=584;t['underscore']=556;t['quoteleft']=278;t['a']=556;t['b']=611;t['c']=556;t['d']=611;t['e']=556;t['f']=333;t['g']=611;t['h']=611;t['i']=278;t['j']=278;t['k']=556;t['l']=278;t['m']=889;t['n']=611;t['o']=611;t['p']=611;t['q']=611;t['r']=389;t['s']=556;t['t']=333;t['u']=611;t['v']=556;t['w']=778;t['x']=556;t['y']=556;t['z']=500;t['braceleft']=389;t['bar']=280;t['braceright']=389;t['asciitilde']=584;t['exclamdown']=333;t['cent']=556;t['sterling']=556;t['fraction']=167;t['yen']=556;t['florin']=556;t['section']=556;t['currency']=556;t['quotesingle']=238;t['quotedblleft']=500;t['guillemotleft']=556;t['guilsinglleft']=333;t['guilsinglright']=333;t['fi']=611;t['fl']=611;t['endash']=556;t['dagger']=556;t['daggerdbl']=556;t['periodcentered']=278;t['paragraph']=556;t['bullet']=350;t['quotesinglbase']=278;t['quotedblbase']=500;t['quotedblright']=500;t['guillemotright']=556;t['ellipsis']=1000;t['perthousand']=1000;t['questiondown']=611;t['grave']=333;t['acute']=333;t['circumflex']=333;t['tilde']=333;t['macron']=333;t['breve']=333;t['dotaccent']=333;t['dieresis']=333;t['ring']=333;t['cedilla']=333;t['hungarumlaut']=333;t['ogonek']=333;t['caron']=333;t['emdash']=1000;t['AE']=1000;t['ordfeminine']=370;t['Lslash']=611;t['Oslash']=778;t['OE']=1000;t['ordmasculine']=365;t['ae']=889;t['dotlessi']=278;t['lslash']=278;t['oslash']=611;t['oe']=944;t['germandbls']=611;t['Idieresis']=278;t['eacute']=556;t['abreve']=556;t['uhungarumlaut']=611;t['ecaron']=556;t['Ydieresis']=667;t['divide']=584;t['Yacute']=667;t['Acircumflex']=722;t['aacute']=556;t['Ucircumflex']=722;t['yacute']=556;t['scommaaccent']=556;t['ecircumflex']=556;t['Uring']=722;t['Udieresis']=722;t['aogonek']=556;t['Uacute']=722;t['uogonek']=611;t['Edieresis']=667;t['Dcroat']=722;t['commaaccent']=250;t['copyright']=737;t['Emacron']=667;t['ccaron']=556;t['aring']=556;t['Ncommaaccent']=722;t['lacute']=278;t['agrave']=556;t['Tcommaaccent']=611;t['Cacute']=722;t['atilde']=556;t['Edotaccent']=667;t['scaron']=556;t['scedilla']=556;t['iacute']=278;t['lozenge']=494;t['Rcaron']=722;t['Gcommaaccent']=778;t['ucircumflex']=611;t['acircumflex']=556;t['Amacron']=722;t['rcaron']=389;t['ccedilla']=556;t['Zdotaccent']=611;t['Thorn']=667;t['Omacron']=778;t['Racute']=722;t['Sacute']=667;t['dcaron']=743;t['Umacron']=722;t['uring']=611;t['threesuperior']=333;t['Ograve']=778;t['Agrave']=722;t['Abreve']=722;t['multiply']=584;t['uacute']=611;t['Tcaron']=611;t['partialdiff']=494;t['ydieresis']=556;t['Nacute']=722;t['icircumflex']=278;t['Ecircumflex']=667;t['adieresis']=556;t['edieresis']=556;t['cacute']=556;t['nacute']=611;t['umacron']=611;t['Ncaron']=722;t['Iacute']=278;t['plusminus']=584;t['brokenbar']=280;t['registered']=737;t['Gbreve']=778;t['Idotaccent']=278;t['summation']=600;t['Egrave']=667;t['racute']=389;t['omacron']=611;t['Zacute']=611;t['Zcaron']=611;t['greaterequal']=549;t['Eth']=722;t['Ccedilla']=722;t['lcommaaccent']=278;t['tcaron']=389;t['eogonek']=556;t['Uogonek']=722;t['Aacute']=722;t['Adieresis']=722;t['egrave']=556;t['zacute']=500;t['iogonek']=278;t['Oacute']=778;t['oacute']=611;t['amacron']=556;t['sacute']=556;t['idieresis']=278;t['Ocircumflex']=778;t['Ugrave']=722;t['Delta']=612;t['thorn']=611;t['twosuperior']=333;t['Odieresis']=778;t['mu']=611;t['igrave']=278;t['ohungarumlaut']=611;t['Eogonek']=667;t['dcroat']=611;t['threequarters']=834;t['Scedilla']=667;t['lcaron']=400;t['Kcommaaccent']=722;t['Lacute']=611;t['trademark']=1000;t['edotaccent']=556;t['Igrave']=278;t['Imacron']=278;t['Lcaron']=611;t['onehalf']=834;t['lessequal']=549;t['ocircumflex']=611;t['ntilde']=611;t['Uhungarumlaut']=722;t['Eacute']=667;t['emacron']=556;t['gbreve']=611;t['onequarter']=834;t['Scaron']=667;t['Scommaaccent']=667;t['Ohungarumlaut']=778;t['degree']=400;t['ograve']=611;t['Ccaron']=722;t['ugrave']=611;t['radical']=549;t['Dcaron']=722;t['rcommaaccent']=389;t['Ntilde']=722;t['otilde']=611;t['Rcommaaccent']=722;t['Lcommaaccent']=611;t['Atilde']=722;t['Aogonek']=722;t['Aring']=722;t['Otilde']=778;t['zdotaccent']=500;t['Ecaron']=667;t['Iogonek']=278;t['kcommaaccent']=556;t['minus']=584;t['Icircumflex']=278;t['ncaron']=611;t['tcommaaccent']=333;t['logicalnot']=584;t['odieresis']=611;t['udieresis']=611;t['notequal']=549;t['gcommaaccent']=611;t['eth']=611;t['zcaron']=500;t['ncommaaccent']=611;t['onesuperior']=333;t['imacron']=278;t['Euro']=556;});t['Helvetica-BoldOblique']=(0,_util.getLookupTableFactory)(function(t){t['space']=278;t['exclam']=333;t['quotedbl']=474;t['numbersign']=556;t['dollar']=556;t['percent']=889;t['ampersand']=722;t['quoteright']=278;t['parenleft']=333;t['parenright']=333;t['asterisk']=389;t['plus']=584;t['comma']=278;t['hyphen']=333;t['period']=278;t['slash']=278;t['zero']=556;t['one']=556;t['two']=556;t['three']=556;t['four']=556;t['five']=556;t['six']=556;t['seven']=556;t['eight']=556;t['nine']=556;t['colon']=333;t['semicolon']=333;t['less']=584;t['equal']=584;t['greater']=584;t['question']=611;t['at']=975;t['A']=722;t['B']=722;t['C']=722;t['D']=722;t['E']=667;t['F']=611;t['G']=778;t['H']=722;t['I']=278;t['J']=556;t['K']=722;t['L']=611;t['M']=833;t['N']=722;t['O']=778;t['P']=667;t['Q']=778;t['R']=722;t['S']=667;t['T']=611;t['U']=722;t['V']=667;t['W']=944;t['X']=667;t['Y']=667;t['Z']=611;t['bracketleft']=333;t['backslash']=278;t['bracketright']=333;t['asciicircum']=584;t['underscore']=556;t['quoteleft']=278;t['a']=556;t['b']=611;t['c']=556;t['d']=611;t['e']=556;t['f']=333;t['g']=611;t['h']=611;t['i']=278;t['j']=278;t['k']=556;t['l']=278;t['m']=889;t['n']=611;t['o']=611;t['p']=611;t['q']=611;t['r']=389;t['s']=556;t['t']=333;t['u']=611;t['v']=556;t['w']=778;t['x']=556;t['y']=556;t['z']=500;t['braceleft']=389;t['bar']=280;t['braceright']=389;t['asciitilde']=584;t['exclamdown']=333;t['cent']=556;t['sterling']=556;t['fraction']=167;t['yen']=556;t['florin']=556;t['section']=556;t['currency']=556;t['quotesingle']=238;t['quotedblleft']=500;t['guillemotleft']=556;t['guilsinglleft']=333;t['guilsinglright']=333;t['fi']=611;t['fl']=611;t['endash']=556;t['dagger']=556;t['daggerdbl']=556;t['periodcentered']=278;t['paragraph']=556;t['bullet']=350;t['quotesinglbase']=278;t['quotedblbase']=500;t['quotedblright']=500;t['guillemotright']=556;t['ellipsis']=1000;t['perthousand']=1000;t['questiondown']=611;t['grave']=333;t['acute']=333;t['circumflex']=333;t['tilde']=333;t['macron']=333;t['breve']=333;t['dotaccent']=333;t['dieresis']=333;t['ring']=333;t['cedilla']=333;t['hungarumlaut']=333;t['ogonek']=333;t['caron']=333;t['emdash']=1000;t['AE']=1000;t['ordfeminine']=370;t['Lslash']=611;t['Oslash']=778;t['OE']=1000;t['ordmasculine']=365;t['ae']=889;t['dotlessi']=278;t['lslash']=278;t['oslash']=611;t['oe']=944;t['germandbls']=611;t['Idieresis']=278;t['eacute']=556;t['abreve']=556;t['uhungarumlaut']=611;t['ecaron']=556;t['Ydieresis']=667;t['divide']=584;t['Yacute']=667;t['Acircumflex']=722;t['aacute']=556;t['Ucircumflex']=722;t['yacute']=556;t['scommaaccent']=556;t['ecircumflex']=556;t['Uring']=722;t['Udieresis']=722;t['aogonek']=556;t['Uacute']=722;t['uogonek']=611;t['Edieresis']=667;t['Dcroat']=722;t['commaaccent']=250;t['copyright']=737;t['Emacron']=667;t['ccaron']=556;t['aring']=556;t['Ncommaaccent']=722;t['lacute']=278;t['agrave']=556;t['Tcommaaccent']=611;t['Cacute']=722;t['atilde']=556;t['Edotaccent']=667;t['scaron']=556;t['scedilla']=556;t['iacute']=278;t['lozenge']=494;t['Rcaron']=722;t['Gcommaaccent']=778;t['ucircumflex']=611;t['acircumflex']=556;t['Amacron']=722;t['rcaron']=389;t['ccedilla']=556;t['Zdotaccent']=611;t['Thorn']=667;t['Omacron']=778;t['Racute']=722;t['Sacute']=667;t['dcaron']=743;t['Umacron']=722;t['uring']=611;t['threesuperior']=333;t['Ograve']=778;t['Agrave']=722;t['Abreve']=722;t['multiply']=584;t['uacute']=611;t['Tcaron']=611;t['partialdiff']=494;t['ydieresis']=556;t['Nacute']=722;t['icircumflex']=278;t['Ecircumflex']=667;t['adieresis']=556;t['edieresis']=556;t['cacute']=556;t['nacute']=611;t['umacron']=611;t['Ncaron']=722;t['Iacute']=278;t['plusminus']=584;t['brokenbar']=280;t['registered']=737;t['Gbreve']=778;t['Idotaccent']=278;t['summation']=600;t['Egrave']=667;t['racute']=389;t['omacron']=611;t['Zacute']=611;t['Zcaron']=611;t['greaterequal']=549;t['Eth']=722;t['Ccedilla']=722;t['lcommaaccent']=278;t['tcaron']=389;t['eogonek']=556;t['Uogonek']=722;t['Aacute']=722;t['Adieresis']=722;t['egrave']=556;t['zacute']=500;t['iogonek']=278;t['Oacute']=778;t['oacute']=611;t['amacron']=556;t['sacute']=556;t['idieresis']=278;t['Ocircumflex']=778;t['Ugrave']=722;t['Delta']=612;t['thorn']=611;t['twosuperior']=333;t['Odieresis']=778;t['mu']=611;t['igrave']=278;t['ohungarumlaut']=611;t['Eogonek']=667;t['dcroat']=611;t['threequarters']=834;t['Scedilla']=667;t['lcaron']=400;t['Kcommaaccent']=722;t['Lacute']=611;t['trademark']=1000;t['edotaccent']=556;t['Igrave']=278;t['Imacron']=278;t['Lcaron']=611;t['onehalf']=834;t['lessequal']=549;t['ocircumflex']=611;t['ntilde']=611;t['Uhungarumlaut']=722;t['Eacute']=667;t['emacron']=556;t['gbreve']=611;t['onequarter']=834;t['Scaron']=667;t['Scommaaccent']=667;t['Ohungarumlaut']=778;t['degree']=400;t['ograve']=611;t['Ccaron']=722;t['ugrave']=611;t['radical']=549;t['Dcaron']=722;t['rcommaaccent']=389;t['Ntilde']=722;t['otilde']=611;t['Rcommaaccent']=722;t['Lcommaaccent']=611;t['Atilde']=722;t['Aogonek']=722;t['Aring']=722;t['Otilde']=778;t['zdotaccent']=500;t['Ecaron']=667;t['Iogonek']=278;t['kcommaaccent']=556;t['minus']=584;t['Icircumflex']=278;t['ncaron']=611;t['tcommaaccent']=333;t['logicalnot']=584;t['odieresis']=611;t['udieresis']=611;t['notequal']=549;t['gcommaaccent']=611;t['eth']=611;t['zcaron']=500;t['ncommaaccent']=611;t['onesuperior']=333;t['imacron']=278;t['Euro']=556;});t['Helvetica-Oblique']=(0,_util.getLookupTableFactory)(function(t){t['space']=278;t['exclam']=278;t['quotedbl']=355;t['numbersign']=556;t['dollar']=556;t['percent']=889;t['ampersand']=667;t['quoteright']=222;t['parenleft']=333;t['parenright']=333;t['asterisk']=389;t['plus']=584;t['comma']=278;t['hyphen']=333;t['period']=278;t['slash']=278;t['zero']=556;t['one']=556;t['two']=556;t['three']=556;t['four']=556;t['five']=556;t['six']=556;t['seven']=556;t['eight']=556;t['nine']=556;t['colon']=278;t['semicolon']=278;t['less']=584;t['equal']=584;t['greater']=584;t['question']=556;t['at']=1015;t['A']=667;t['B']=667;t['C']=722;t['D']=722;t['E']=667;t['F']=611;t['G']=778;t['H']=722;t['I']=278;t['J']=500;t['K']=667;t['L']=556;t['M']=833;t['N']=722;t['O']=778;t['P']=667;t['Q']=778;t['R']=722;t['S']=667;t['T']=611;t['U']=722;t['V']=667;t['W']=944;t['X']=667;t['Y']=667;t['Z']=611;t['bracketleft']=278;t['backslash']=278;t['bracketright']=278;t['asciicircum']=469;t['underscore']=556;t['quoteleft']=222;t['a']=556;t['b']=556;t['c']=500;t['d']=556;t['e']=556;t['f']=278;t['g']=556;t['h']=556;t['i']=222;t['j']=222;t['k']=500;t['l']=222;t['m']=833;t['n']=556;t['o']=556;t['p']=556;t['q']=556;t['r']=333;t['s']=500;t['t']=278;t['u']=556;t['v']=500;t['w']=722;t['x']=500;t['y']=500;t['z']=500;t['braceleft']=334;t['bar']=260;t['braceright']=334;t['asciitilde']=584;t['exclamdown']=333;t['cent']=556;t['sterling']=556;t['fraction']=167;t['yen']=556;t['florin']=556;t['section']=556;t['currency']=556;t['quotesingle']=191;t['quotedblleft']=333;t['guillemotleft']=556;t['guilsinglleft']=333;t['guilsinglright']=333;t['fi']=500;t['fl']=500;t['endash']=556;t['dagger']=556;t['daggerdbl']=556;t['periodcentered']=278;t['paragraph']=537;t['bullet']=350;t['quotesinglbase']=222;t['quotedblbase']=333;t['quotedblright']=333;t['guillemotright']=556;t['ellipsis']=1000;t['perthousand']=1000;t['questiondown']=611;t['grave']=333;t['acute']=333;t['circumflex']=333;t['tilde']=333;t['macron']=333;t['breve']=333;t['dotaccent']=333;t['dieresis']=333;t['ring']=333;t['cedilla']=333;t['hungarumlaut']=333;t['ogonek']=333;t['caron']=333;t['emdash']=1000;t['AE']=1000;t['ordfeminine']=370;t['Lslash']=556;t['Oslash']=778;t['OE']=1000;t['ordmasculine']=365;t['ae']=889;t['dotlessi']=278;t['lslash']=222;t['oslash']=611;t['oe']=944;t['germandbls']=611;t['Idieresis']=278;t['eacute']=556;t['abreve']=556;t['uhungarumlaut']=556;t['ecaron']=556;t['Ydieresis']=667;t['divide']=584;t['Yacute']=667;t['Acircumflex']=667;t['aacute']=556;t['Ucircumflex']=722;t['yacute']=500;t['scommaaccent']=500;t['ecircumflex']=556;t['Uring']=722;t['Udieresis']=722;t['aogonek']=556;t['Uacute']=722;t['uogonek']=556;t['Edieresis']=667;t['Dcroat']=722;t['commaaccent']=250;t['copyright']=737;t['Emacron']=667;t['ccaron']=500;t['aring']=556;t['Ncommaaccent']=722;t['lacute']=222;t['agrave']=556;t['Tcommaaccent']=611;t['Cacute']=722;t['atilde']=556;t['Edotaccent']=667;t['scaron']=500;t['scedilla']=500;t['iacute']=278;t['lozenge']=471;t['Rcaron']=722;t['Gcommaaccent']=778;t['ucircumflex']=556;t['acircumflex']=556;t['Amacron']=667;t['rcaron']=333;t['ccedilla']=500;t['Zdotaccent']=611;t['Thorn']=667;t['Omacron']=778;t['Racute']=722;t['Sacute']=667;t['dcaron']=643;t['Umacron']=722;t['uring']=556;t['threesuperior']=333;t['Ograve']=778;t['Agrave']=667;t['Abreve']=667;t['multiply']=584;t['uacute']=556;t['Tcaron']=611;t['partialdiff']=476;t['ydieresis']=500;t['Nacute']=722;t['icircumflex']=278;t['Ecircumflex']=667;t['adieresis']=556;t['edieresis']=556;t['cacute']=500;t['nacute']=556;t['umacron']=556;t['Ncaron']=722;t['Iacute']=278;t['plusminus']=584;t['brokenbar']=260;t['registered']=737;t['Gbreve']=778;t['Idotaccent']=278;t['summation']=600;t['Egrave']=667;t['racute']=333;t['omacron']=556;t['Zacute']=611;t['Zcaron']=611;t['greaterequal']=549;t['Eth']=722;t['Ccedilla']=722;t['lcommaaccent']=222;t['tcaron']=317;t['eogonek']=556;t['Uogonek']=722;t['Aacute']=667;t['Adieresis']=667;t['egrave']=556;t['zacute']=500;t['iogonek']=222;t['Oacute']=778;t['oacute']=556;t['amacron']=556;t['sacute']=500;t['idieresis']=278;t['Ocircumflex']=778;t['Ugrave']=722;t['Delta']=612;t['thorn']=556;t['twosuperior']=333;t['Odieresis']=778;t['mu']=556;t['igrave']=278;t['ohungarumlaut']=556;t['Eogonek']=667;t['dcroat']=556;t['threequarters']=834;t['Scedilla']=667;t['lcaron']=299;t['Kcommaaccent']=667;t['Lacute']=556;t['trademark']=1000;t['edotaccent']=556;t['Igrave']=278;t['Imacron']=278;t['Lcaron']=556;t['onehalf']=834;t['lessequal']=549;t['ocircumflex']=556;t['ntilde']=556;t['Uhungarumlaut']=722;t['Eacute']=667;t['emacron']=556;t['gbreve']=556;t['onequarter']=834;t['Scaron']=667;t['Scommaaccent']=667;t['Ohungarumlaut']=778;t['degree']=400;t['ograve']=556;t['Ccaron']=722;t['ugrave']=556;t['radical']=453;t['Dcaron']=722;t['rcommaaccent']=333;t['Ntilde']=722;t['otilde']=556;t['Rcommaaccent']=722;t['Lcommaaccent']=556;t['Atilde']=667;t['Aogonek']=667;t['Aring']=667;t['Otilde']=778;t['zdotaccent']=500;t['Ecaron']=667;t['Iogonek']=278;t['kcommaaccent']=500;t['minus']=584;t['Icircumflex']=278;t['ncaron']=556;t['tcommaaccent']=278;t['logicalnot']=584;t['odieresis']=556;t['udieresis']=556;t['notequal']=549;t['gcommaaccent']=556;t['eth']=556;t['zcaron']=500;t['ncommaaccent']=556;t['onesuperior']=333;t['imacron']=278;t['Euro']=556;});t['Symbol']=(0,_util.getLookupTableFactory)(function(t){t['space']=250;t['exclam']=333;t['universal']=713;t['numbersign']=500;t['existential']=549;t['percent']=833;t['ampersand']=778;t['suchthat']=439;t['parenleft']=333;t['parenright']=333;t['asteriskmath']=500;t['plus']=549;t['comma']=250;t['minus']=549;t['period']=250;t['slash']=278;t['zero']=500;t['one']=500;t['two']=500;t['three']=500;t['four']=500;t['five']=500;t['six']=500;t['seven']=500;t['eight']=500;t['nine']=500;t['colon']=278;t['semicolon']=278;t['less']=549;t['equal']=549;t['greater']=549;t['question']=444;t['congruent']=549;t['Alpha']=722;t['Beta']=667;t['Chi']=722;t['Delta']=612;t['Epsilon']=611;t['Phi']=763;t['Gamma']=603;t['Eta']=722;t['Iota']=333;t['theta1']=631;t['Kappa']=722;t['Lambda']=686;t['Mu']=889;t['Nu']=722;t['Omicron']=722;t['Pi']=768;t['Theta']=741;t['Rho']=556;t['Sigma']=592;t['Tau']=611;t['Upsilon']=690;t['sigma1']=439;t['Omega']=768;t['Xi']=645;t['Psi']=795;t['Zeta']=611;t['bracketleft']=333;t['therefore']=863;t['bracketright']=333;t['perpendicular']=658;t['underscore']=500;t['radicalex']=500;t['alpha']=631;t['beta']=549;t['chi']=549;t['delta']=494;t['epsilon']=439;t['phi']=521;t['gamma']=411;t['eta']=603;t['iota']=329;t['phi1']=603;t['kappa']=549;t['lambda']=549;t['mu']=576;t['nu']=521;t['omicron']=549;t['pi']=549;t['theta']=521;t['rho']=549;t['sigma']=603;t['tau']=439;t['upsilon']=576;t['omega1']=713;t['omega']=686;t['xi']=493;t['psi']=686;t['zeta']=494;t['braceleft']=480;t['bar']=200;t['braceright']=480;t['similar']=549;t['Euro']=750;t['Upsilon1']=620;t['minute']=247;t['lessequal']=549;t['fraction']=167;t['infinity']=713;t['florin']=500;t['club']=753;t['diamond']=753;t['heart']=753;t['spade']=753;t['arrowboth']=1042;t['arrowleft']=987;t['arrowup']=603;t['arrowright']=987;t['arrowdown']=603;t['degree']=400;t['plusminus']=549;t['second']=411;t['greaterequal']=549;t['multiply']=549;t['proportional']=713;t['partialdiff']=494;t['bullet']=460;t['divide']=549;t['notequal']=549;t['equivalence']=549;t['approxequal']=549;t['ellipsis']=1000;t['arrowvertex']=603;t['arrowhorizex']=1000;t['carriagereturn']=658;t['aleph']=823;t['Ifraktur']=686;t['Rfraktur']=795;t['weierstrass']=987;t['circlemultiply']=768;t['circleplus']=768;t['emptyset']=823;t['intersection']=768;t['union']=768;t['propersuperset']=713;t['reflexsuperset']=713;t['notsubset']=713;t['propersubset']=713;t['reflexsubset']=713;t['element']=713;t['notelement']=713;t['angle']=768;t['gradient']=713;t['registerserif']=790;t['copyrightserif']=790;t['trademarkserif']=890;t['product']=823;t['radical']=549;t['dotmath']=250;t['logicalnot']=713;t['logicaland']=603;t['logicalor']=603;t['arrowdblboth']=1042;t['arrowdblleft']=987;t['arrowdblup']=603;t['arrowdblright']=987;t['arrowdbldown']=603;t['lozenge']=494;t['angleleft']=329;t['registersans']=790;t['copyrightsans']=790;t['trademarksans']=786;t['summation']=713;t['parenlefttp']=384;t['parenleftex']=384;t['parenleftbt']=384;t['bracketlefttp']=384;t['bracketleftex']=384;t['bracketleftbt']=384;t['bracelefttp']=494;t['braceleftmid']=494;t['braceleftbt']=494;t['braceex']=494;t['angleright']=329;t['integral']=274;t['integraltp']=686;t['integralex']=686;t['integralbt']=686;t['parenrighttp']=384;t['parenrightex']=384;t['parenrightbt']=384;t['bracketrighttp']=384;t['bracketrightex']=384;t['bracketrightbt']=384;t['bracerighttp']=494;t['bracerightmid']=494;t['bracerightbt']=494;t['apple']=790;});t['Times-Roman']=(0,_util.getLookupTableFactory)(function(t){t['space']=250;t['exclam']=333;t['quotedbl']=408;t['numbersign']=500;t['dollar']=500;t['percent']=833;t['ampersand']=778;t['quoteright']=333;t['parenleft']=333;t['parenright']=333;t['asterisk']=500;t['plus']=564;t['comma']=250;t['hyphen']=333;t['period']=250;t['slash']=278;t['zero']=500;t['one']=500;t['two']=500;t['three']=500;t['four']=500;t['five']=500;t['six']=500;t['seven']=500;t['eight']=500;t['nine']=500;t['colon']=278;t['semicolon']=278;t['less']=564;t['equal']=564;t['greater']=564;t['question']=444;t['at']=921;t['A']=722;t['B']=667;t['C']=667;t['D']=722;t['E']=611;t['F']=556;t['G']=722;t['H']=722;t['I']=333;t['J']=389;t['K']=722;t['L']=611;t['M']=889;t['N']=722;t['O']=722;t['P']=556;t['Q']=722;t['R']=667;t['S']=556;t['T']=611;t['U']=722;t['V']=722;t['W']=944;t['X']=722;t['Y']=722;t['Z']=611;t['bracketleft']=333;t['backslash']=278;t['bracketright']=333;t['asciicircum']=469;t['underscore']=500;t['quoteleft']=333;t['a']=444;t['b']=500;t['c']=444;t['d']=500;t['e']=444;t['f']=333;t['g']=500;t['h']=500;t['i']=278;t['j']=278;t['k']=500;t['l']=278;t['m']=778;t['n']=500;t['o']=500;t['p']=500;t['q']=500;t['r']=333;t['s']=389;t['t']=278;t['u']=500;t['v']=500;t['w']=722;t['x']=500;t['y']=500;t['z']=444;t['braceleft']=480;t['bar']=200;t['braceright']=480;t['asciitilde']=541;t['exclamdown']=333;t['cent']=500;t['sterling']=500;t['fraction']=167;t['yen']=500;t['florin']=500;t['section']=500;t['currency']=500;t['quotesingle']=180;t['quotedblleft']=444;t['guillemotleft']=500;t['guilsinglleft']=333;t['guilsinglright']=333;t['fi']=556;t['fl']=556;t['endash']=500;t['dagger']=500;t['daggerdbl']=500;t['periodcentered']=250;t['paragraph']=453;t['bullet']=350;t['quotesinglbase']=333;t['quotedblbase']=444;t['quotedblright']=444;t['guillemotright']=500;t['ellipsis']=1000;t['perthousand']=1000;t['questiondown']=444;t['grave']=333;t['acute']=333;t['circumflex']=333;t['tilde']=333;t['macron']=333;t['breve']=333;t['dotaccent']=333;t['dieresis']=333;t['ring']=333;t['cedilla']=333;t['hungarumlaut']=333;t['ogonek']=333;t['caron']=333;t['emdash']=1000;t['AE']=889;t['ordfeminine']=276;t['Lslash']=611;t['Oslash']=722;t['OE']=889;t['ordmasculine']=310;t['ae']=667;t['dotlessi']=278;t['lslash']=278;t['oslash']=500;t['oe']=722;t['germandbls']=500;t['Idieresis']=333;t['eacute']=444;t['abreve']=444;t['uhungarumlaut']=500;t['ecaron']=444;t['Ydieresis']=722;t['divide']=564;t['Yacute']=722;t['Acircumflex']=722;t['aacute']=444;t['Ucircumflex']=722;t['yacute']=500;t['scommaaccent']=389;t['ecircumflex']=444;t['Uring']=722;t['Udieresis']=722;t['aogonek']=444;t['Uacute']=722;t['uogonek']=500;t['Edieresis']=611;t['Dcroat']=722;t['commaaccent']=250;t['copyright']=760;t['Emacron']=611;t['ccaron']=444;t['aring']=444;t['Ncommaaccent']=722;t['lacute']=278;t['agrave']=444;t['Tcommaaccent']=611;t['Cacute']=667;t['atilde']=444;t['Edotaccent']=611;t['scaron']=389;t['scedilla']=389;t['iacute']=278;t['lozenge']=471;t['Rcaron']=667;t['Gcommaaccent']=722;t['ucircumflex']=500;t['acircumflex']=444;t['Amacron']=722;t['rcaron']=333;t['ccedilla']=444;t['Zdotaccent']=611;t['Thorn']=556;t['Omacron']=722;t['Racute']=667;t['Sacute']=556;t['dcaron']=588;t['Umacron']=722;t['uring']=500;t['threesuperior']=300;t['Ograve']=722;t['Agrave']=722;t['Abreve']=722;t['multiply']=564;t['uacute']=500;t['Tcaron']=611;t['partialdiff']=476;t['ydieresis']=500;t['Nacute']=722;t['icircumflex']=278;t['Ecircumflex']=611;t['adieresis']=444;t['edieresis']=444;t['cacute']=444;t['nacute']=500;t['umacron']=500;t['Ncaron']=722;t['Iacute']=333;t['plusminus']=564;t['brokenbar']=200;t['registered']=760;t['Gbreve']=722;t['Idotaccent']=333;t['summation']=600;t['Egrave']=611;t['racute']=333;t['omacron']=500;t['Zacute']=611;t['Zcaron']=611;t['greaterequal']=549;t['Eth']=722;t['Ccedilla']=667;t['lcommaaccent']=278;t['tcaron']=326;t['eogonek']=444;t['Uogonek']=722;t['Aacute']=722;t['Adieresis']=722;t['egrave']=444;t['zacute']=444;t['iogonek']=278;t['Oacute']=722;t['oacute']=500;t['amacron']=444;t['sacute']=389;t['idieresis']=278;t['Ocircumflex']=722;t['Ugrave']=722;t['Delta']=612;t['thorn']=500;t['twosuperior']=300;t['Odieresis']=722;t['mu']=500;t['igrave']=278;t['ohungarumlaut']=500;t['Eogonek']=611;t['dcroat']=500;t['threequarters']=750;t['Scedilla']=556;t['lcaron']=344;t['Kcommaaccent']=722;t['Lacute']=611;t['trademark']=980;t['edotaccent']=444;t['Igrave']=333;t['Imacron']=333;t['Lcaron']=611;t['onehalf']=750;t['lessequal']=549;t['ocircumflex']=500;t['ntilde']=500;t['Uhungarumlaut']=722;t['Eacute']=611;t['emacron']=444;t['gbreve']=500;t['onequarter']=750;t['Scaron']=556;t['Scommaaccent']=556;t['Ohungarumlaut']=722;t['degree']=400;t['ograve']=500;t['Ccaron']=667;t['ugrave']=500;t['radical']=453;t['Dcaron']=722;t['rcommaaccent']=333;t['Ntilde']=722;t['otilde']=500;t['Rcommaaccent']=667;t['Lcommaaccent']=611;t['Atilde']=722;t['Aogonek']=722;t['Aring']=722;t['Otilde']=722;t['zdotaccent']=444;t['Ecaron']=611;t['Iogonek']=333;t['kcommaaccent']=500;t['minus']=564;t['Icircumflex']=333;t['ncaron']=500;t['tcommaaccent']=278;t['logicalnot']=564;t['odieresis']=500;t['udieresis']=500;t['notequal']=549;t['gcommaaccent']=500;t['eth']=500;t['zcaron']=444;t['ncommaaccent']=500;t['onesuperior']=300;t['imacron']=278;t['Euro']=500;});t['Times-Bold']=(0,_util.getLookupTableFactory)(function(t){t['space']=250;t['exclam']=333;t['quotedbl']=555;t['numbersign']=500;t['dollar']=500;t['percent']=1000;t['ampersand']=833;t['quoteright']=333;t['parenleft']=333;t['parenright']=333;t['asterisk']=500;t['plus']=570;t['comma']=250;t['hyphen']=333;t['period']=250;t['slash']=278;t['zero']=500;t['one']=500;t['two']=500;t['three']=500;t['four']=500;t['five']=500;t['six']=500;t['seven']=500;t['eight']=500;t['nine']=500;t['colon']=333;t['semicolon']=333;t['less']=570;t['equal']=570;t['greater']=570;t['question']=500;t['at']=930;t['A']=722;t['B']=667;t['C']=722;t['D']=722;t['E']=667;t['F']=611;t['G']=778;t['H']=778;t['I']=389;t['J']=500;t['K']=778;t['L']=667;t['M']=944;t['N']=722;t['O']=778;t['P']=611;t['Q']=778;t['R']=722;t['S']=556;t['T']=667;t['U']=722;t['V']=722;t['W']=1000;t['X']=722;t['Y']=722;t['Z']=667;t['bracketleft']=333;t['backslash']=278;t['bracketright']=333;t['asciicircum']=581;t['underscore']=500;t['quoteleft']=333;t['a']=500;t['b']=556;t['c']=444;t['d']=556;t['e']=444;t['f']=333;t['g']=500;t['h']=556;t['i']=278;t['j']=333;t['k']=556;t['l']=278;t['m']=833;t['n']=556;t['o']=500;t['p']=556;t['q']=556;t['r']=444;t['s']=389;t['t']=333;t['u']=556;t['v']=500;t['w']=722;t['x']=500;t['y']=500;t['z']=444;t['braceleft']=394;t['bar']=220;t['braceright']=394;t['asciitilde']=520;t['exclamdown']=333;t['cent']=500;t['sterling']=500;t['fraction']=167;t['yen']=500;t['florin']=500;t['section']=500;t['currency']=500;t['quotesingle']=278;t['quotedblleft']=500;t['guillemotleft']=500;t['guilsinglleft']=333;t['guilsinglright']=333;t['fi']=556;t['fl']=556;t['endash']=500;t['dagger']=500;t['daggerdbl']=500;t['periodcentered']=250;t['paragraph']=540;t['bullet']=350;t['quotesinglbase']=333;t['quotedblbase']=500;t['quotedblright']=500;t['guillemotright']=500;t['ellipsis']=1000;t['perthousand']=1000;t['questiondown']=500;t['grave']=333;t['acute']=333;t['circumflex']=333;t['tilde']=333;t['macron']=333;t['breve']=333;t['dotaccent']=333;t['dieresis']=333;t['ring']=333;t['cedilla']=333;t['hungarumlaut']=333;t['ogonek']=333;t['caron']=333;t['emdash']=1000;t['AE']=1000;t['ordfeminine']=300;t['Lslash']=667;t['Oslash']=778;t['OE']=1000;t['ordmasculine']=330;t['ae']=722;t['dotlessi']=278;t['lslash']=278;t['oslash']=500;t['oe']=722;t['germandbls']=556;t['Idieresis']=389;t['eacute']=444;t['abreve']=500;t['uhungarumlaut']=556;t['ecaron']=444;t['Ydieresis']=722;t['divide']=570;t['Yacute']=722;t['Acircumflex']=722;t['aacute']=500;t['Ucircumflex']=722;t['yacute']=500;t['scommaaccent']=389;t['ecircumflex']=444;t['Uring']=722;t['Udieresis']=722;t['aogonek']=500;t['Uacute']=722;t['uogonek']=556;t['Edieresis']=667;t['Dcroat']=722;t['commaaccent']=250;t['copyright']=747;t['Emacron']=667;t['ccaron']=444;t['aring']=500;t['Ncommaaccent']=722;t['lacute']=278;t['agrave']=500;t['Tcommaaccent']=667;t['Cacute']=722;t['atilde']=500;t['Edotaccent']=667;t['scaron']=389;t['scedilla']=389;t['iacute']=278;t['lozenge']=494;t['Rcaron']=722;t['Gcommaaccent']=778;t['ucircumflex']=556;t['acircumflex']=500;t['Amacron']=722;t['rcaron']=444;t['ccedilla']=444;t['Zdotaccent']=667;t['Thorn']=611;t['Omacron']=778;t['Racute']=722;t['Sacute']=556;t['dcaron']=672;t['Umacron']=722;t['uring']=556;t['threesuperior']=300;t['Ograve']=778;t['Agrave']=722;t['Abreve']=722;t['multiply']=570;t['uacute']=556;t['Tcaron']=667;t['partialdiff']=494;t['ydieresis']=500;t['Nacute']=722;t['icircumflex']=278;t['Ecircumflex']=667;t['adieresis']=500;t['edieresis']=444;t['cacute']=444;t['nacute']=556;t['umacron']=556;t['Ncaron']=722;t['Iacute']=389;t['plusminus']=570;t['brokenbar']=220;t['registered']=747;t['Gbreve']=778;t['Idotaccent']=389;t['summation']=600;t['Egrave']=667;t['racute']=444;t['omacron']=500;t['Zacute']=667;t['Zcaron']=667;t['greaterequal']=549;t['Eth']=722;t['Ccedilla']=722;t['lcommaaccent']=278;t['tcaron']=416;t['eogonek']=444;t['Uogonek']=722;t['Aacute']=722;t['Adieresis']=722;t['egrave']=444;t['zacute']=444;t['iogonek']=278;t['Oacute']=778;t['oacute']=500;t['amacron']=500;t['sacute']=389;t['idieresis']=278;t['Ocircumflex']=778;t['Ugrave']=722;t['Delta']=612;t['thorn']=556;t['twosuperior']=300;t['Odieresis']=778;t['mu']=556;t['igrave']=278;t['ohungarumlaut']=500;t['Eogonek']=667;t['dcroat']=556;t['threequarters']=750;t['Scedilla']=556;t['lcaron']=394;t['Kcommaaccent']=778;t['Lacute']=667;t['trademark']=1000;t['edotaccent']=444;t['Igrave']=389;t['Imacron']=389;t['Lcaron']=667;t['onehalf']=750;t['lessequal']=549;t['ocircumflex']=500;t['ntilde']=556;t['Uhungarumlaut']=722;t['Eacute']=667;t['emacron']=444;t['gbreve']=500;t['onequarter']=750;t['Scaron']=556;t['Scommaaccent']=556;t['Ohungarumlaut']=778;t['degree']=400;t['ograve']=500;t['Ccaron']=722;t['ugrave']=556;t['radical']=549;t['Dcaron']=722;t['rcommaaccent']=444;t['Ntilde']=722;t['otilde']=500;t['Rcommaaccent']=722;t['Lcommaaccent']=667;t['Atilde']=722;t['Aogonek']=722;t['Aring']=722;t['Otilde']=778;t['zdotaccent']=444;t['Ecaron']=667;t['Iogonek']=389;t['kcommaaccent']=556;t['minus']=570;t['Icircumflex']=389;t['ncaron']=556;t['tcommaaccent']=333;t['logicalnot']=570;t['odieresis']=500;t['udieresis']=556;t['notequal']=549;t['gcommaaccent']=500;t['eth']=500;t['zcaron']=444;t['ncommaaccent']=556;t['onesuperior']=300;t['imacron']=278;t['Euro']=500;});t['Times-BoldItalic']=(0,_util.getLookupTableFactory)(function(t){t['space']=250;t['exclam']=389;t['quotedbl']=555;t['numbersign']=500;t['dollar']=500;t['percent']=833;t['ampersand']=778;t['quoteright']=333;t['parenleft']=333;t['parenright']=333;t['asterisk']=500;t['plus']=570;t['comma']=250;t['hyphen']=333;t['period']=250;t['slash']=278;t['zero']=500;t['one']=500;t['two']=500;t['three']=500;t['four']=500;t['five']=500;t['six']=500;t['seven']=500;t['eight']=500;t['nine']=500;t['colon']=333;t['semicolon']=333;t['less']=570;t['equal']=570;t['greater']=570;t['question']=500;t['at']=832;t['A']=667;t['B']=667;t['C']=667;t['D']=722;t['E']=667;t['F']=667;t['G']=722;t['H']=778;t['I']=389;t['J']=500;t['K']=667;t['L']=611;t['M']=889;t['N']=722;t['O']=722;t['P']=611;t['Q']=722;t['R']=667;t['S']=556;t['T']=611;t['U']=722;t['V']=667;t['W']=889;t['X']=667;t['Y']=611;t['Z']=611;t['bracketleft']=333;t['backslash']=278;t['bracketright']=333;t['asciicircum']=570;t['underscore']=500;t['quoteleft']=333;t['a']=500;t['b']=500;t['c']=444;t['d']=500;t['e']=444;t['f']=333;t['g']=500;t['h']=556;t['i']=278;t['j']=278;t['k']=500;t['l']=278;t['m']=778;t['n']=556;t['o']=500;t['p']=500;t['q']=500;t['r']=389;t['s']=389;t['t']=278;t['u']=556;t['v']=444;t['w']=667;t['x']=500;t['y']=444;t['z']=389;t['braceleft']=348;t['bar']=220;t['braceright']=348;t['asciitilde']=570;t['exclamdown']=389;t['cent']=500;t['sterling']=500;t['fraction']=167;t['yen']=500;t['florin']=500;t['section']=500;t['currency']=500;t['quotesingle']=278;t['quotedblleft']=500;t['guillemotleft']=500;t['guilsinglleft']=333;t['guilsinglright']=333;t['fi']=556;t['fl']=556;t['endash']=500;t['dagger']=500;t['daggerdbl']=500;t['periodcentered']=250;t['paragraph']=500;t['bullet']=350;t['quotesinglbase']=333;t['quotedblbase']=500;t['quotedblright']=500;t['guillemotright']=500;t['ellipsis']=1000;t['perthousand']=1000;t['questiondown']=500;t['grave']=333;t['acute']=333;t['circumflex']=333;t['tilde']=333;t['macron']=333;t['breve']=333;t['dotaccent']=333;t['dieresis']=333;t['ring']=333;t['cedilla']=333;t['hungarumlaut']=333;t['ogonek']=333;t['caron']=333;t['emdash']=1000;t['AE']=944;t['ordfeminine']=266;t['Lslash']=611;t['Oslash']=722;t['OE']=944;t['ordmasculine']=300;t['ae']=722;t['dotlessi']=278;t['lslash']=278;t['oslash']=500;t['oe']=722;t['germandbls']=500;t['Idieresis']=389;t['eacute']=444;t['abreve']=500;t['uhungarumlaut']=556;t['ecaron']=444;t['Ydieresis']=611;t['divide']=570;t['Yacute']=611;t['Acircumflex']=667;t['aacute']=500;t['Ucircumflex']=722;t['yacute']=444;t['scommaaccent']=389;t['ecircumflex']=444;t['Uring']=722;t['Udieresis']=722;t['aogonek']=500;t['Uacute']=722;t['uogonek']=556;t['Edieresis']=667;t['Dcroat']=722;t['commaaccent']=250;t['copyright']=747;t['Emacron']=667;t['ccaron']=444;t['aring']=500;t['Ncommaaccent']=722;t['lacute']=278;t['agrave']=500;t['Tcommaaccent']=611;t['Cacute']=667;t['atilde']=500;t['Edotaccent']=667;t['scaron']=389;t['scedilla']=389;t['iacute']=278;t['lozenge']=494;t['Rcaron']=667;t['Gcommaaccent']=722;t['ucircumflex']=556;t['acircumflex']=500;t['Amacron']=667;t['rcaron']=389;t['ccedilla']=444;t['Zdotaccent']=611;t['Thorn']=611;t['Omacron']=722;t['Racute']=667;t['Sacute']=556;t['dcaron']=608;t['Umacron']=722;t['uring']=556;t['threesuperior']=300;t['Ograve']=722;t['Agrave']=667;t['Abreve']=667;t['multiply']=570;t['uacute']=556;t['Tcaron']=611;t['partialdiff']=494;t['ydieresis']=444;t['Nacute']=722;t['icircumflex']=278;t['Ecircumflex']=667;t['adieresis']=500;t['edieresis']=444;t['cacute']=444;t['nacute']=556;t['umacron']=556;t['Ncaron']=722;t['Iacute']=389;t['plusminus']=570;t['brokenbar']=220;t['registered']=747;t['Gbreve']=722;t['Idotaccent']=389;t['summation']=600;t['Egrave']=667;t['racute']=389;t['omacron']=500;t['Zacute']=611;t['Zcaron']=611;t['greaterequal']=549;t['Eth']=722;t['Ccedilla']=667;t['lcommaaccent']=278;t['tcaron']=366;t['eogonek']=444;t['Uogonek']=722;t['Aacute']=667;t['Adieresis']=667;t['egrave']=444;t['zacute']=389;t['iogonek']=278;t['Oacute']=722;t['oacute']=500;t['amacron']=500;t['sacute']=389;t['idieresis']=278;t['Ocircumflex']=722;t['Ugrave']=722;t['Delta']=612;t['thorn']=500;t['twosuperior']=300;t['Odieresis']=722;t['mu']=576;t['igrave']=278;t['ohungarumlaut']=500;t['Eogonek']=667;t['dcroat']=500;t['threequarters']=750;t['Scedilla']=556;t['lcaron']=382;t['Kcommaaccent']=667;t['Lacute']=611;t['trademark']=1000;t['edotaccent']=444;t['Igrave']=389;t['Imacron']=389;t['Lcaron']=611;t['onehalf']=750;t['lessequal']=549;t['ocircumflex']=500;t['ntilde']=556;t['Uhungarumlaut']=722;t['Eacute']=667;t['emacron']=444;t['gbreve']=500;t['onequarter']=750;t['Scaron']=556;t['Scommaaccent']=556;t['Ohungarumlaut']=722;t['degree']=400;t['ograve']=500;t['Ccaron']=667;t['ugrave']=556;t['radical']=549;t['Dcaron']=722;t['rcommaaccent']=389;t['Ntilde']=722;t['otilde']=500;t['Rcommaaccent']=667;t['Lcommaaccent']=611;t['Atilde']=667;t['Aogonek']=667;t['Aring']=667;t['Otilde']=722;t['zdotaccent']=389;t['Ecaron']=667;t['Iogonek']=389;t['kcommaaccent']=500;t['minus']=606;t['Icircumflex']=389;t['ncaron']=556;t['tcommaaccent']=278;t['logicalnot']=606;t['odieresis']=500;t['udieresis']=556;t['notequal']=549;t['gcommaaccent']=500;t['eth']=500;t['zcaron']=389;t['ncommaaccent']=556;t['onesuperior']=300;t['imacron']=278;t['Euro']=500;});t['Times-Italic']=(0,_util.getLookupTableFactory)(function(t){t['space']=250;t['exclam']=333;t['quotedbl']=420;t['numbersign']=500;t['dollar']=500;t['percent']=833;t['ampersand']=778;t['quoteright']=333;t['parenleft']=333;t['parenright']=333;t['asterisk']=500;t['plus']=675;t['comma']=250;t['hyphen']=333;t['period']=250;t['slash']=278;t['zero']=500;t['one']=500;t['two']=500;t['three']=500;t['four']=500;t['five']=500;t['six']=500;t['seven']=500;t['eight']=500;t['nine']=500;t['colon']=333;t['semicolon']=333;t['less']=675;t['equal']=675;t['greater']=675;t['question']=500;t['at']=920;t['A']=611;t['B']=611;t['C']=667;t['D']=722;t['E']=611;t['F']=611;t['G']=722;t['H']=722;t['I']=333;t['J']=444;t['K']=667;t['L']=556;t['M']=833;t['N']=667;t['O']=722;t['P']=611;t['Q']=722;t['R']=611;t['S']=500;t['T']=556;t['U']=722;t['V']=611;t['W']=833;t['X']=611;t['Y']=556;t['Z']=556;t['bracketleft']=389;t['backslash']=278;t['bracketright']=389;t['asciicircum']=422;t['underscore']=500;t['quoteleft']=333;t['a']=500;t['b']=500;t['c']=444;t['d']=500;t['e']=444;t['f']=278;t['g']=500;t['h']=500;t['i']=278;t['j']=278;t['k']=444;t['l']=278;t['m']=722;t['n']=500;t['o']=500;t['p']=500;t['q']=500;t['r']=389;t['s']=389;t['t']=278;t['u']=500;t['v']=444;t['w']=667;t['x']=444;t['y']=444;t['z']=389;t['braceleft']=400;t['bar']=275;t['braceright']=400;t['asciitilde']=541;t['exclamdown']=389;t['cent']=500;t['sterling']=500;t['fraction']=167;t['yen']=500;t['florin']=500;t['section']=500;t['currency']=500;t['quotesingle']=214;t['quotedblleft']=556;t['guillemotleft']=500;t['guilsinglleft']=333;t['guilsinglright']=333;t['fi']=500;t['fl']=500;t['endash']=500;t['dagger']=500;t['daggerdbl']=500;t['periodcentered']=250;t['paragraph']=523;t['bullet']=350;t['quotesinglbase']=333;t['quotedblbase']=556;t['quotedblright']=556;t['guillemotright']=500;t['ellipsis']=889;t['perthousand']=1000;t['questiondown']=500;t['grave']=333;t['acute']=333;t['circumflex']=333;t['tilde']=333;t['macron']=333;t['breve']=333;t['dotaccent']=333;t['dieresis']=333;t['ring']=333;t['cedilla']=333;t['hungarumlaut']=333;t['ogonek']=333;t['caron']=333;t['emdash']=889;t['AE']=889;t['ordfeminine']=276;t['Lslash']=556;t['Oslash']=722;t['OE']=944;t['ordmasculine']=310;t['ae']=667;t['dotlessi']=278;t['lslash']=278;t['oslash']=500;t['oe']=667;t['germandbls']=500;t['Idieresis']=333;t['eacute']=444;t['abreve']=500;t['uhungarumlaut']=500;t['ecaron']=444;t['Ydieresis']=556;t['divide']=675;t['Yacute']=556;t['Acircumflex']=611;t['aacute']=500;t['Ucircumflex']=722;t['yacute']=444;t['scommaaccent']=389;t['ecircumflex']=444;t['Uring']=722;t['Udieresis']=722;t['aogonek']=500;t['Uacute']=722;t['uogonek']=500;t['Edieresis']=611;t['Dcroat']=722;t['commaaccent']=250;t['copyright']=760;t['Emacron']=611;t['ccaron']=444;t['aring']=500;t['Ncommaaccent']=667;t['lacute']=278;t['agrave']=500;t['Tcommaaccent']=556;t['Cacute']=667;t['atilde']=500;t['Edotaccent']=611;t['scaron']=389;t['scedilla']=389;t['iacute']=278;t['lozenge']=471;t['Rcaron']=611;t['Gcommaaccent']=722;t['ucircumflex']=500;t['acircumflex']=500;t['Amacron']=611;t['rcaron']=389;t['ccedilla']=444;t['Zdotaccent']=556;t['Thorn']=611;t['Omacron']=722;t['Racute']=611;t['Sacute']=500;t['dcaron']=544;t['Umacron']=722;t['uring']=500;t['threesuperior']=300;t['Ograve']=722;t['Agrave']=611;t['Abreve']=611;t['multiply']=675;t['uacute']=500;t['Tcaron']=556;t['partialdiff']=476;t['ydieresis']=444;t['Nacute']=667;t['icircumflex']=278;t['Ecircumflex']=611;t['adieresis']=500;t['edieresis']=444;t['cacute']=444;t['nacute']=500;t['umacron']=500;t['Ncaron']=667;t['Iacute']=333;t['plusminus']=675;t['brokenbar']=275;t['registered']=760;t['Gbreve']=722;t['Idotaccent']=333;t['summation']=600;t['Egrave']=611;t['racute']=389;t['omacron']=500;t['Zacute']=556;t['Zcaron']=556;t['greaterequal']=549;t['Eth']=722;t['Ccedilla']=667;t['lcommaaccent']=278;t['tcaron']=300;t['eogonek']=444;t['Uogonek']=722;t['Aacute']=611;t['Adieresis']=611;t['egrave']=444;t['zacute']=389;t['iogonek']=278;t['Oacute']=722;t['oacute']=500;t['amacron']=500;t['sacute']=389;t['idieresis']=278;t['Ocircumflex']=722;t['Ugrave']=722;t['Delta']=612;t['thorn']=500;t['twosuperior']=300;t['Odieresis']=722;t['mu']=500;t['igrave']=278;t['ohungarumlaut']=500;t['Eogonek']=611;t['dcroat']=500;t['threequarters']=750;t['Scedilla']=500;t['lcaron']=300;t['Kcommaaccent']=667;t['Lacute']=556;t['trademark']=980;t['edotaccent']=444;t['Igrave']=333;t['Imacron']=333;t['Lcaron']=611;t['onehalf']=750;t['lessequal']=549;t['ocircumflex']=500;t['ntilde']=500;t['Uhungarumlaut']=722;t['Eacute']=611;t['emacron']=444;t['gbreve']=500;t['onequarter']=750;t['Scaron']=500;t['Scommaaccent']=500;t['Ohungarumlaut']=722;t['degree']=400;t['ograve']=500;t['Ccaron']=667;t['ugrave']=500;t['radical']=453;t['Dcaron']=722;t['rcommaaccent']=389;t['Ntilde']=667;t['otilde']=500;t['Rcommaaccent']=611;t['Lcommaaccent']=556;t['Atilde']=611;t['Aogonek']=611;t['Aring']=611;t['Otilde']=722;t['zdotaccent']=389;t['Ecaron']=611;t['Iogonek']=333;t['kcommaaccent']=444;t['minus']=675;t['Icircumflex']=333;t['ncaron']=500;t['tcommaaccent']=278;t['logicalnot']=675;t['odieresis']=500;t['udieresis']=500;t['notequal']=549;t['gcommaaccent']=500;t['eth']=500;t['zcaron']=389;t['ncommaaccent']=500;t['onesuperior']=300;t['imacron']=278;t['Euro']=500;});t['ZapfDingbats']=(0,_util.getLookupTableFactory)(function(t){t['space']=278;t['a1']=974;t['a2']=961;t['a202']=974;t['a3']=980;t['a4']=719;t['a5']=789;t['a119']=790;t['a118']=791;t['a117']=690;t['a11']=960;t['a12']=939;t['a13']=549;t['a14']=855;t['a15']=911;t['a16']=933;t['a105']=911;t['a17']=945;t['a18']=974;t['a19']=755;t['a20']=846;t['a21']=762;t['a22']=761;t['a23']=571;t['a24']=677;t['a25']=763;t['a26']=760;t['a27']=759;t['a28']=754;t['a6']=494;t['a7']=552;t['a8']=537;t['a9']=577;t['a10']=692;t['a29']=786;t['a30']=788;t['a31']=788;t['a32']=790;t['a33']=793;t['a34']=794;t['a35']=816;t['a36']=823;t['a37']=789;t['a38']=841;t['a39']=823;t['a40']=833;t['a41']=816;t['a42']=831;t['a43']=923;t['a44']=744;t['a45']=723;t['a46']=749;t['a47']=790;t['a48']=792;t['a49']=695;t['a50']=776;t['a51']=768;t['a52']=792;t['a53']=759;t['a54']=707;t['a55']=708;t['a56']=682;t['a57']=701;t['a58']=826;t['a59']=815;t['a60']=789;t['a61']=789;t['a62']=707;t['a63']=687;t['a64']=696;t['a65']=689;t['a66']=786;t['a67']=787;t['a68']=713;t['a69']=791;t['a70']=785;t['a71']=791;t['a72']=873;t['a73']=761;t['a74']=762;t['a203']=762;t['a75']=759;t['a204']=759;t['a76']=892;t['a77']=892;t['a78']=788;t['a79']=784;t['a81']=438;t['a82']=138;t['a83']=277;t['a84']=415;t['a97']=392;t['a98']=392;t['a99']=668;t['a100']=668;t['a89']=390;t['a90']=390;t['a93']=317;t['a94']=317;t['a91']=276;t['a92']=276;t['a205']=509;t['a85']=509;t['a206']=410;t['a86']=410;t['a87']=234;t['a88']=234;t['a95']=334;t['a96']=334;t['a101']=732;t['a102']=544;t['a103']=544;t['a104']=910;t['a106']=667;t['a107']=760;t['a108']=760;t['a112']=776;t['a111']=595;t['a110']=694;t['a109']=626;t['a120']=788;t['a121']=788;t['a122']=788;t['a123']=788;t['a124']=788;t['a125']=788;t['a126']=788;t['a127']=788;t['a128']=788;t['a129']=788;t['a130']=788;t['a131']=788;t['a132']=788;t['a133']=788;t['a134']=788;t['a135']=788;t['a136']=788;t['a137']=788;t['a138']=788;t['a139']=788;t['a140']=788;t['a141']=788;t['a142']=788;t['a143']=788;t['a144']=788;t['a145']=788;t['a146']=788;t['a147']=788;t['a148']=788;t['a149']=788;t['a150']=788;t['a151']=788;t['a152']=788;t['a153']=788;t['a154']=788;t['a155']=788;t['a156']=788;t['a157']=788;t['a158']=788;t['a159']=788;t['a160']=894;t['a161']=838;t['a163']=1016;t['a164']=458;t['a196']=748;t['a165']=924;t['a192']=748;t['a166']=918;t['a167']=927;t['a168']=928;t['a169']=928;t['a170']=834;t['a171']=873;t['a172']=828;t['a173']=924;t['a162']=924;t['a174']=917;t['a175']=930;t['a176']=931;t['a177']=463;t['a178']=883;t['a179']=836;t['a193']=836;t['a180']=867;t['a199']=867;t['a181']=696;t['a200']=696;t['a182']=874;t['a201']=874;t['a183']=760;t['a184']=946;t['a197']=771;t['a185']=865;t['a194']=771;t['a198']=888;t['a186']=967;t['a195']=888;t['a187']=831;t['a188']=873;t['a189']=927;t['a190']=970;t['a191']=918;});});exports.getMetrics=getMetrics;/***/},/* 168 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.PostScriptCompiler=exports.PostScriptEvaluator=exports.PDFFunctionFactory=exports.isPDFFunction=undefined;var _typeof=typeof Symbol==="function"&&_typeof3(Symbol.iterator)==="symbol"?function(obj){return _typeof3(obj);}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":_typeof3(obj);};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _util=__w_pdfjs_require__(2);var _primitives=__w_pdfjs_require__(138);var _ps_parser=__w_pdfjs_require__(169);function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var IsEvalSupportedCached={get value(){return(0,_util.shadow)(this,'value',(0,_util.isEvalSupported)());}};var PDFFunctionFactory=function(){function PDFFunctionFactory(_ref){var xref=_ref.xref,_ref$isEvalSupported=_ref.isEvalSupported,isEvalSupported=_ref$isEvalSupported===undefined?true:_ref$isEvalSupported;_classCallCheck(this,PDFFunctionFactory);this.xref=xref;this.isEvalSupported=isEvalSupported!==false;}_createClass(PDFFunctionFactory,[{key:'create',value:function create(fn){return PDFFunction.parse({xref:this.xref,isEvalSupported:this.isEvalSupported,fn:fn});}},{key:'createFromArray',value:function createFromArray(fnObj){return PDFFunction.parseArray({xref:this.xref,isEvalSupported:this.isEvalSupported,fnObj:fnObj});}}]);return PDFFunctionFactory;}();function toNumberArray(arr){if(!Array.isArray(arr)){return null;}var length=arr.length;for(var i=0;i<length;i++){if(typeof arr[i]!=='number'){var result=new Array(length);for(var _i=0;_i<length;_i++){result[_i]=+arr[_i];}return result;}}return arr;}var PDFFunction=function PDFFunctionClosure(){var CONSTRUCT_SAMPLED=0;var CONSTRUCT_INTERPOLATED=2;var CONSTRUCT_STICHED=3;var CONSTRUCT_POSTSCRIPT=4;return{getSampleArray:function getSampleArray(size,outputSize,bps,stream){var i,ii;var length=1;for(i=0,ii=size.length;i<ii;i++){length*=size[i];}length*=outputSize;var array=new Array(length);var codeSize=0;var codeBuf=0;var sampleMul=1.0/(Math.pow(2.0,bps)-1);var strBytes=stream.getBytes((length*bps+7)/8);var strIdx=0;for(i=0;i<length;i++){while(codeSize<bps){codeBuf<<=8;codeBuf|=strBytes[strIdx++];codeSize+=8;}codeSize-=bps;array[i]=(codeBuf>>codeSize)*sampleMul;codeBuf&=(1<<codeSize)-1;}return array;},getIR:function getIR(_ref2){var xref=_ref2.xref,isEvalSupported=_ref2.isEvalSupported,fn=_ref2.fn;var dict=fn.dict;if(!dict){dict=fn;}var types=[this.constructSampled,null,this.constructInterpolated,this.constructStiched,this.constructPostScript];var typeNum=dict.get('FunctionType');var typeFn=types[typeNum];if(!typeFn){throw new _util.FormatError('Unknown type of function');}return typeFn.call(this,{xref:xref,isEvalSupported:isEvalSupported,fn:fn,dict:dict});},fromIR:function fromIR(_ref3){var xref=_ref3.xref,isEvalSupported=_ref3.isEvalSupported,IR=_ref3.IR;var type=IR[0];switch(type){case CONSTRUCT_SAMPLED:return this.constructSampledFromIR({xref:xref,isEvalSupported:isEvalSupported,IR:IR});case CONSTRUCT_INTERPOLATED:return this.constructInterpolatedFromIR({xref:xref,isEvalSupported:isEvalSupported,IR:IR});case CONSTRUCT_STICHED:return this.constructStichedFromIR({xref:xref,isEvalSupported:isEvalSupported,IR:IR});default:return this.constructPostScriptFromIR({xref:xref,isEvalSupported:isEvalSupported,IR:IR});}},parse:function parse(_ref4){var xref=_ref4.xref,isEvalSupported=_ref4.isEvalSupported,fn=_ref4.fn;var IR=this.getIR({xref:xref,isEvalSupported:isEvalSupported,fn:fn});return this.fromIR({xref:xref,isEvalSupported:isEvalSupported,IR:IR});},parseArray:function parseArray(_ref5){var xref=_ref5.xref,isEvalSupported=_ref5.isEvalSupported,fnObj=_ref5.fnObj;if(!Array.isArray(fnObj)){return this.parse({xref:xref,isEvalSupported:isEvalSupported,fn:fnObj});}var fnArray=[];for(var j=0,jj=fnObj.length;j<jj;j++){fnArray.push(this.parse({xref:xref,isEvalSupported:isEvalSupported,fn:xref.fetchIfRef(fnObj[j])}));}return function(src,srcOffset,dest,destOffset){for(var i=0,ii=fnArray.length;i<ii;i++){fnArray[i](src,srcOffset,dest,destOffset+i);}};},constructSampled:function constructSampled(_ref6){var xref=_ref6.xref,isEvalSupported=_ref6.isEvalSupported,fn=_ref6.fn,dict=_ref6.dict;function toMultiArray(arr){var inputLength=arr.length;var out=[];var index=0;for(var i=0;i<inputLength;i+=2){out[index]=[arr[i],arr[i+1]];++index;}return out;}var domain=toNumberArray(dict.getArray('Domain'));var range=toNumberArray(dict.getArray('Range'));if(!domain||!range){throw new _util.FormatError('No domain or range');}var inputSize=domain.length/2;var outputSize=range.length/2;domain=toMultiArray(domain);range=toMultiArray(range);var size=toNumberArray(dict.getArray('Size'));var bps=dict.get('BitsPerSample');var order=dict.get('Order')||1;if(order!==1){(0,_util.info)('No support for cubic spline interpolation: '+order);}var encode=toNumberArray(dict.getArray('Encode'));if(!encode){encode=[];for(var i=0;i<inputSize;++i){encode.push([0,size[i]-1]);}}else{encode=toMultiArray(encode);}var decode=toNumberArray(dict.getArray('Decode'));if(!decode){decode=range;}else{decode=toMultiArray(decode);}var samples=this.getSampleArray(size,outputSize,bps,fn);return[CONSTRUCT_SAMPLED,inputSize,domain,encode,decode,samples,size,outputSize,Math.pow(2,bps)-1,range];},constructSampledFromIR:function constructSampledFromIR(_ref7){var xref=_ref7.xref,isEvalSupported=_ref7.isEvalSupported,IR=_ref7.IR;function interpolate(x,xmin,xmax,ymin,ymax){return ymin+(x-xmin)*((ymax-ymin)/(xmax-xmin));}return function constructSampledFromIRResult(src,srcOffset,dest,destOffset){var m=IR[1];var domain=IR[2];var encode=IR[3];var decode=IR[4];var samples=IR[5];var size=IR[6];var n=IR[7];var range=IR[9];var cubeVertices=1<<m;var cubeN=new Float64Array(cubeVertices);var cubeVertex=new Uint32Array(cubeVertices);var i,j;for(j=0;j<cubeVertices;j++){cubeN[j]=1;}var k=n,pos=1;for(i=0;i<m;++i){var domain_2i=domain[i][0];var domain_2i_1=domain[i][1];var xi=Math.min(Math.max(src[srcOffset+i],domain_2i),domain_2i_1);var e=interpolate(xi,domain_2i,domain_2i_1,encode[i][0],encode[i][1]);var size_i=size[i];e=Math.min(Math.max(e,0),size_i-1);var e0=e<size_i-1?Math.floor(e):e-1;var n0=e0+1-e;var n1=e-e0;var offset0=e0*k;var offset1=offset0+k;for(j=0;j<cubeVertices;j++){if(j&pos){cubeN[j]*=n1;cubeVertex[j]+=offset1;}else{cubeN[j]*=n0;cubeVertex[j]+=offset0;}}k*=size_i;pos<<=1;}for(j=0;j<n;++j){var rj=0;for(i=0;i<cubeVertices;i++){rj+=samples[cubeVertex[i]+j]*cubeN[i];}rj=interpolate(rj,0,1,decode[j][0],decode[j][1]);dest[destOffset+j]=Math.min(Math.max(rj,range[j][0]),range[j][1]);}};},constructInterpolated:function constructInterpolated(_ref8){var xref=_ref8.xref,isEvalSupported=_ref8.isEvalSupported,fn=_ref8.fn,dict=_ref8.dict;var c0=toNumberArray(dict.getArray('C0'))||[0];var c1=toNumberArray(dict.getArray('C1'))||[1];var n=dict.get('N');var length=c0.length;var diff=[];for(var i=0;i<length;++i){diff.push(c1[i]-c0[i]);}return[CONSTRUCT_INTERPOLATED,c0,diff,n];},constructInterpolatedFromIR:function constructInterpolatedFromIR(_ref9){var xref=_ref9.xref,isEvalSupported=_ref9.isEvalSupported,IR=_ref9.IR;var c0=IR[1];var diff=IR[2];var n=IR[3];var length=diff.length;return function constructInterpolatedFromIRResult(src,srcOffset,dest,destOffset){var x=n===1?src[srcOffset]:Math.pow(src[srcOffset],n);for(var j=0;j<length;++j){dest[destOffset+j]=c0[j]+x*diff[j];}};},constructStiched:function constructStiched(_ref10){var xref=_ref10.xref,isEvalSupported=_ref10.isEvalSupported,fn=_ref10.fn,dict=_ref10.dict;var domain=toNumberArray(dict.getArray('Domain'));if(!domain){throw new _util.FormatError('No domain');}var inputSize=domain.length/2;if(inputSize!==1){throw new _util.FormatError('Bad domain for stiched function');}var fnRefs=dict.get('Functions');var fns=[];for(var i=0,ii=fnRefs.length;i<ii;++i){fns.push(this.parse({xref:xref,isEvalSupported:isEvalSupported,fn:xref.fetchIfRef(fnRefs[i])}));}var bounds=toNumberArray(dict.getArray('Bounds'));var encode=toNumberArray(dict.getArray('Encode'));return[CONSTRUCT_STICHED,domain,bounds,encode,fns];},constructStichedFromIR:function constructStichedFromIR(_ref11){var xref=_ref11.xref,isEvalSupported=_ref11.isEvalSupported,IR=_ref11.IR;var domain=IR[1];var bounds=IR[2];var encode=IR[3];var fns=IR[4];var tmpBuf=new Float32Array(1);return function constructStichedFromIRResult(src,srcOffset,dest,destOffset){var clip=function constructStichedFromIRClip(v,min,max){if(v>max){v=max;}else if(v<min){v=min;}return v;};var v=clip(src[srcOffset],domain[0],domain[1]);for(var i=0,ii=bounds.length;i<ii;++i){if(v<bounds[i]){break;}}var dmin=domain[0];if(i>0){dmin=bounds[i-1];}var dmax=domain[1];if(i<bounds.length){dmax=bounds[i];}var rmin=encode[2*i];var rmax=encode[2*i+1];tmpBuf[0]=dmin===dmax?rmin:rmin+(v-dmin)*(rmax-rmin)/(dmax-dmin);fns[i](tmpBuf,0,dest,destOffset);};},constructPostScript:function constructPostScript(_ref12){var xref=_ref12.xref,isEvalSupported=_ref12.isEvalSupported,fn=_ref12.fn,dict=_ref12.dict;var domain=toNumberArray(dict.getArray('Domain'));var range=toNumberArray(dict.getArray('Range'));if(!domain){throw new _util.FormatError('No domain.');}if(!range){throw new _util.FormatError('No range.');}var lexer=new _ps_parser.PostScriptLexer(fn);var parser=new _ps_parser.PostScriptParser(lexer);var code=parser.parse();return[CONSTRUCT_POSTSCRIPT,domain,range,code];},constructPostScriptFromIR:function constructPostScriptFromIR(_ref13){var xref=_ref13.xref,isEvalSupported=_ref13.isEvalSupported,IR=_ref13.IR;var domain=IR[1];var range=IR[2];var code=IR[3];if(isEvalSupported&&IsEvalSupportedCached.value){var compiled=new PostScriptCompiler().compile(code,domain,range);if(compiled){return new Function('src','srcOffset','dest','destOffset',compiled);}}(0,_util.info)('Unable to compile PS function');var numOutputs=range.length>>1;var numInputs=domain.length>>1;var evaluator=new PostScriptEvaluator(code);var cache=Object.create(null);var MAX_CACHE_SIZE=2048*4;var cache_available=MAX_CACHE_SIZE;var tmpBuf=new Float32Array(numInputs);return function constructPostScriptFromIRResult(src,srcOffset,dest,destOffset){var i,value;var key='';var input=tmpBuf;for(i=0;i<numInputs;i++){value=src[srcOffset+i];input[i]=value;key+=value+'_';}var cachedValue=cache[key];if(cachedValue!==undefined){dest.set(cachedValue,destOffset);return;}var output=new Float32Array(numOutputs);var stack=evaluator.execute(input);var stackIndex=stack.length-numOutputs;for(i=0;i<numOutputs;i++){value=stack[stackIndex+i];var bound=range[i*2];if(value<bound){value=bound;}else{bound=range[i*2+1];if(value>bound){value=bound;}}output[i]=value;}if(cache_available>0){cache_available--;cache[key]=output;}dest.set(output,destOffset);};}};}();function isPDFFunction(v){var fnDict;if((typeof v==='undefined'?'undefined':_typeof(v))!=='object'){return false;}else if((0,_primitives.isDict)(v)){fnDict=v;}else if((0,_primitives.isStream)(v)){fnDict=v.dict;}else{return false;}return fnDict.has('FunctionType');}var PostScriptStack=function PostScriptStackClosure(){var MAX_STACK_SIZE=100;function PostScriptStack(initialStack){this.stack=!initialStack?[]:Array.prototype.slice.call(initialStack,0);}PostScriptStack.prototype={push:function PostScriptStack_push(value){if(this.stack.length>=MAX_STACK_SIZE){throw new Error('PostScript function stack overflow.');}this.stack.push(value);},pop:function PostScriptStack_pop(){if(this.stack.length<=0){throw new Error('PostScript function stack underflow.');}return this.stack.pop();},copy:function PostScriptStack_copy(n){if(this.stack.length+n>=MAX_STACK_SIZE){throw new Error('PostScript function stack overflow.');}var stack=this.stack;for(var i=stack.length-n,j=n-1;j>=0;j--,i++){stack.push(stack[i]);}},index:function PostScriptStack_index(n){this.push(this.stack[this.stack.length-n-1]);},roll:function PostScriptStack_roll(n,p){var stack=this.stack;var l=stack.length-n;var r=stack.length-1,c=l+(p-Math.floor(p/n)*n),i,j,t;for(i=l,j=r;i<j;i++,j--){t=stack[i];stack[i]=stack[j];stack[j]=t;}for(i=l,j=c-1;i<j;i++,j--){t=stack[i];stack[i]=stack[j];stack[j]=t;}for(i=c,j=r;i<j;i++,j--){t=stack[i];stack[i]=stack[j];stack[j]=t;}}};return PostScriptStack;}();var PostScriptEvaluator=function PostScriptEvaluatorClosure(){function PostScriptEvaluator(operators){this.operators=operators;}PostScriptEvaluator.prototype={execute:function PostScriptEvaluator_execute(initialStack){var stack=new PostScriptStack(initialStack);var counter=0;var operators=this.operators;var length=operators.length;var operator,a,b;while(counter<length){operator=operators[counter++];if(typeof operator==='number'){stack.push(operator);continue;}switch(operator){case'jz':b=stack.pop();a=stack.pop();if(!a){counter=b;}break;case'j':a=stack.pop();counter=a;break;case'abs':a=stack.pop();stack.push(Math.abs(a));break;case'add':b=stack.pop();a=stack.pop();stack.push(a+b);break;case'and':b=stack.pop();a=stack.pop();if((0,_util.isBool)(a)&&(0,_util.isBool)(b)){stack.push(a&&b);}else{stack.push(a&b);}break;case'atan':a=stack.pop();stack.push(Math.atan(a));break;case'bitshift':b=stack.pop();a=stack.pop();if(a>0){stack.push(a<<b);}else{stack.push(a>>b);}break;case'ceiling':a=stack.pop();stack.push(Math.ceil(a));break;case'copy':a=stack.pop();stack.copy(a);break;case'cos':a=stack.pop();stack.push(Math.cos(a));break;case'cvi':a=stack.pop()|0;stack.push(a);break;case'cvr':break;case'div':b=stack.pop();a=stack.pop();stack.push(a/b);break;case'dup':stack.copy(1);break;case'eq':b=stack.pop();a=stack.pop();stack.push(a===b);break;case'exch':stack.roll(2,1);break;case'exp':b=stack.pop();a=stack.pop();stack.push(Math.pow(a,b));break;case'false':stack.push(false);break;case'floor':a=stack.pop();stack.push(Math.floor(a));break;case'ge':b=stack.pop();a=stack.pop();stack.push(a>=b);break;case'gt':b=stack.pop();a=stack.pop();stack.push(a>b);break;case'idiv':b=stack.pop();a=stack.pop();stack.push(a/b|0);break;case'index':a=stack.pop();stack.index(a);break;case'le':b=stack.pop();a=stack.pop();stack.push(a<=b);break;case'ln':a=stack.pop();stack.push(Math.log(a));break;case'log':a=stack.pop();stack.push(Math.log(a)/Math.LN10);break;case'lt':b=stack.pop();a=stack.pop();stack.push(a<b);break;case'mod':b=stack.pop();a=stack.pop();stack.push(a%b);break;case'mul':b=stack.pop();a=stack.pop();stack.push(a*b);break;case'ne':b=stack.pop();a=stack.pop();stack.push(a!==b);break;case'neg':a=stack.pop();stack.push(-a);break;case'not':a=stack.pop();if((0,_util.isBool)(a)){stack.push(!a);}else{stack.push(~a);}break;case'or':b=stack.pop();a=stack.pop();if((0,_util.isBool)(a)&&(0,_util.isBool)(b)){stack.push(a||b);}else{stack.push(a|b);}break;case'pop':stack.pop();break;case'roll':b=stack.pop();a=stack.pop();stack.roll(a,b);break;case'round':a=stack.pop();stack.push(Math.round(a));break;case'sin':a=stack.pop();stack.push(Math.sin(a));break;case'sqrt':a=stack.pop();stack.push(Math.sqrt(a));break;case'sub':b=stack.pop();a=stack.pop();stack.push(a-b);break;case'true':stack.push(true);break;case'truncate':a=stack.pop();a=a<0?Math.ceil(a):Math.floor(a);stack.push(a);break;case'xor':b=stack.pop();a=stack.pop();if((0,_util.isBool)(a)&&(0,_util.isBool)(b)){stack.push(a!==b);}else{stack.push(a^b);}break;default:throw new _util.FormatError('Unknown operator '+operator);}}return stack.stack;}};return PostScriptEvaluator;}();var PostScriptCompiler=function PostScriptCompilerClosure(){function AstNode(type){this.type=type;}AstNode.prototype.visit=function(visitor){(0,_util.unreachable)('abstract method');};function AstArgument(index,min,max){AstNode.call(this,'args');this.index=index;this.min=min;this.max=max;}AstArgument.prototype=Object.create(AstNode.prototype);AstArgument.prototype.visit=function(visitor){visitor.visitArgument(this);};function AstLiteral(number){AstNode.call(this,'literal');this.number=number;this.min=number;this.max=number;}AstLiteral.prototype=Object.create(AstNode.prototype);AstLiteral.prototype.visit=function(visitor){visitor.visitLiteral(this);};function AstBinaryOperation(op,arg1,arg2,min,max){AstNode.call(this,'binary');this.op=op;this.arg1=arg1;this.arg2=arg2;this.min=min;this.max=max;}AstBinaryOperation.prototype=Object.create(AstNode.prototype);AstBinaryOperation.prototype.visit=function(visitor){visitor.visitBinaryOperation(this);};function AstMin(arg,max){AstNode.call(this,'max');this.arg=arg;this.min=arg.min;this.max=max;}AstMin.prototype=Object.create(AstNode.prototype);AstMin.prototype.visit=function(visitor){visitor.visitMin(this);};function AstVariable(index,min,max){AstNode.call(this,'var');this.index=index;this.min=min;this.max=max;}AstVariable.prototype=Object.create(AstNode.prototype);AstVariable.prototype.visit=function(visitor){visitor.visitVariable(this);};function AstVariableDefinition(variable,arg){AstNode.call(this,'definition');this.variable=variable;this.arg=arg;}AstVariableDefinition.prototype=Object.create(AstNode.prototype);AstVariableDefinition.prototype.visit=function(visitor){visitor.visitVariableDefinition(this);};function ExpressionBuilderVisitor(){this.parts=[];}ExpressionBuilderVisitor.prototype={visitArgument:function visitArgument(arg){this.parts.push('Math.max(',arg.min,', Math.min(',arg.max,', src[srcOffset + ',arg.index,']))');},visitVariable:function visitVariable(variable){this.parts.push('v',variable.index);},visitLiteral:function visitLiteral(literal){this.parts.push(literal.number);},visitBinaryOperation:function visitBinaryOperation(operation){this.parts.push('(');operation.arg1.visit(this);this.parts.push(' ',operation.op,' ');operation.arg2.visit(this);this.parts.push(')');},visitVariableDefinition:function visitVariableDefinition(definition){this.parts.push('var ');definition.variable.visit(this);this.parts.push(' = ');definition.arg.visit(this);this.parts.push(';');},visitMin:function visitMin(max){this.parts.push('Math.min(');max.arg.visit(this);this.parts.push(', ',max.max,')');},toString:function toString(){return this.parts.join('');}};function buildAddOperation(num1,num2){if(num2.type==='literal'&&num2.number===0){return num1;}if(num1.type==='literal'&&num1.number===0){return num2;}if(num2.type==='literal'&&num1.type==='literal'){return new AstLiteral(num1.number+num2.number);}return new AstBinaryOperation('+',num1,num2,num1.min+num2.min,num1.max+num2.max);}function buildMulOperation(num1,num2){if(num2.type==='literal'){if(num2.number===0){return new AstLiteral(0);}else if(num2.number===1){return num1;}else if(num1.type==='literal'){return new AstLiteral(num1.number*num2.number);}}if(num1.type==='literal'){if(num1.number===0){return new AstLiteral(0);}else if(num1.number===1){return num2;}}var min=Math.min(num1.min*num2.min,num1.min*num2.max,num1.max*num2.min,num1.max*num2.max);var max=Math.max(num1.min*num2.min,num1.min*num2.max,num1.max*num2.min,num1.max*num2.max);return new AstBinaryOperation('*',num1,num2,min,max);}function buildSubOperation(num1,num2){if(num2.type==='literal'){if(num2.number===0){return num1;}else if(num1.type==='literal'){return new AstLiteral(num1.number-num2.number);}}if(num2.type==='binary'&&num2.op==='-'&&num1.type==='literal'&&num1.number===1&&num2.arg1.type==='literal'&&num2.arg1.number===1){return num2.arg2;}return new AstBinaryOperation('-',num1,num2,num1.min-num2.max,num1.max-num2.min);}function buildMinOperation(num1,max){if(num1.min>=max){return new AstLiteral(max);}else if(num1.max<=max){return num1;}return new AstMin(num1,max);}function PostScriptCompiler(){}PostScriptCompiler.prototype={compile:function PostScriptCompiler_compile(code,domain,range){var stack=[];var i,ii;var instructions=[];var inputSize=domain.length>>1,outputSize=range.length>>1;var lastRegister=0;var n,j;var num1,num2,ast1,ast2,tmpVar,item;for(i=0;i<inputSize;i++){stack.push(new AstArgument(i,domain[i*2],domain[i*2+1]));}for(i=0,ii=code.length;i<ii;i++){item=code[i];if(typeof item==='number'){stack.push(new AstLiteral(item));continue;}switch(item){case'add':if(stack.length<2){return null;}num2=stack.pop();num1=stack.pop();stack.push(buildAddOperation(num1,num2));break;case'cvr':if(stack.length<1){return null;}break;case'mul':if(stack.length<2){return null;}num2=stack.pop();num1=stack.pop();stack.push(buildMulOperation(num1,num2));break;case'sub':if(stack.length<2){return null;}num2=stack.pop();num1=stack.pop();stack.push(buildSubOperation(num1,num2));break;case'exch':if(stack.length<2){return null;}ast1=stack.pop();ast2=stack.pop();stack.push(ast1,ast2);break;case'pop':if(stack.length<1){return null;}stack.pop();break;case'index':if(stack.length<1){return null;}num1=stack.pop();if(num1.type!=='literal'){return null;}n=num1.number;if(n<0||!Number.isInteger(n)||stack.length<n){return null;}ast1=stack[stack.length-n-1];if(ast1.type==='literal'||ast1.type==='var'){stack.push(ast1);break;}tmpVar=new AstVariable(lastRegister++,ast1.min,ast1.max);stack[stack.length-n-1]=tmpVar;stack.push(tmpVar);instructions.push(new AstVariableDefinition(tmpVar,ast1));break;case'dup':if(stack.length<1){return null;}if(typeof code[i+1]==='number'&&code[i+2]==='gt'&&code[i+3]===i+7&&code[i+4]==='jz'&&code[i+5]==='pop'&&code[i+6]===code[i+1]){num1=stack.pop();stack.push(buildMinOperation(num1,code[i+1]));i+=6;break;}ast1=stack[stack.length-1];if(ast1.type==='literal'||ast1.type==='var'){stack.push(ast1);break;}tmpVar=new AstVariable(lastRegister++,ast1.min,ast1.max);stack[stack.length-1]=tmpVar;stack.push(tmpVar);instructions.push(new AstVariableDefinition(tmpVar,ast1));break;case'roll':if(stack.length<2){return null;}num2=stack.pop();num1=stack.pop();if(num2.type!=='literal'||num1.type!=='literal'){return null;}j=num2.number;n=num1.number;if(n<=0||!Number.isInteger(n)||!Number.isInteger(j)||stack.length<n){return null;}j=(j%n+n)%n;if(j===0){break;}Array.prototype.push.apply(stack,stack.splice(stack.length-n,n-j));break;default:return null;}}if(stack.length!==outputSize){return null;}var result=[];instructions.forEach(function(instruction){var statementBuilder=new ExpressionBuilderVisitor();instruction.visit(statementBuilder);result.push(statementBuilder.toString());});stack.forEach(function(expr,i){var statementBuilder=new ExpressionBuilderVisitor();expr.visit(statementBuilder);var min=range[i*2],max=range[i*2+1];var out=[statementBuilder.toString()];if(min>expr.min){out.unshift('Math.max(',min,', ');out.push(')');}if(max<expr.max){out.unshift('Math.min(',max,', ');out.push(')');}out.unshift('dest[destOffset + ',i,'] = ');out.push(';');result.push(out.join(''));});return result.join('\n');}};return PostScriptCompiler;}();exports.isPDFFunction=isPDFFunction;exports.PDFFunctionFactory=PDFFunctionFactory;exports.PostScriptEvaluator=PostScriptEvaluator;exports.PostScriptCompiler=PostScriptCompiler;/***/},/* 169 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.PostScriptParser=exports.PostScriptLexer=undefined;var _util=__w_pdfjs_require__(2);var _primitives=__w_pdfjs_require__(138);var PostScriptParser=function PostScriptParserClosure(){function PostScriptParser(lexer){this.lexer=lexer;this.operators=[];this.token=null;this.prev=null;}PostScriptParser.prototype={nextToken:function PostScriptParser_nextToken(){this.prev=this.token;this.token=this.lexer.getToken();},accept:function PostScriptParser_accept(type){if(this.token.type===type){this.nextToken();return true;}return false;},expect:function PostScriptParser_expect(type){if(this.accept(type)){return true;}throw new _util.FormatError('Unexpected symbol: found '+this.token.type+' expected '+type+'.');},parse:function PostScriptParser_parse(){this.nextToken();this.expect(PostScriptTokenTypes.LBRACE);this.parseBlock();this.expect(PostScriptTokenTypes.RBRACE);return this.operators;},parseBlock:function PostScriptParser_parseBlock(){while(true){if(this.accept(PostScriptTokenTypes.NUMBER)){this.operators.push(this.prev.value);}else if(this.accept(PostScriptTokenTypes.OPERATOR)){this.operators.push(this.prev.value);}else if(this.accept(PostScriptTokenTypes.LBRACE)){this.parseCondition();}else{return;}}},parseCondition:function PostScriptParser_parseCondition(){var conditionLocation=this.operators.length;this.operators.push(null,null);this.parseBlock();this.expect(PostScriptTokenTypes.RBRACE);if(this.accept(PostScriptTokenTypes.IF)){this.operators[conditionLocation]=this.operators.length;this.operators[conditionLocation+1]='jz';}else if(this.accept(PostScriptTokenTypes.LBRACE)){var jumpLocation=this.operators.length;this.operators.push(null,null);var endOfTrue=this.operators.length;this.parseBlock();this.expect(PostScriptTokenTypes.RBRACE);this.expect(PostScriptTokenTypes.IFELSE);this.operators[jumpLocation]=this.operators.length;this.operators[jumpLocation+1]='j';this.operators[conditionLocation]=endOfTrue;this.operators[conditionLocation+1]='jz';}else{throw new _util.FormatError('PS Function: error parsing conditional.');}}};return PostScriptParser;}();var PostScriptTokenTypes={LBRACE:0,RBRACE:1,NUMBER:2,OPERATOR:3,IF:4,IFELSE:5};var PostScriptToken=function PostScriptTokenClosure(){function PostScriptToken(type,value){this.type=type;this.value=value;}var opCache=Object.create(null);PostScriptToken.getOperator=function PostScriptToken_getOperator(op){var opValue=opCache[op];if(opValue){return opValue;}return opCache[op]=new PostScriptToken(PostScriptTokenTypes.OPERATOR,op);};PostScriptToken.LBRACE=new PostScriptToken(PostScriptTokenTypes.LBRACE,'{');PostScriptToken.RBRACE=new PostScriptToken(PostScriptTokenTypes.RBRACE,'}');PostScriptToken.IF=new PostScriptToken(PostScriptTokenTypes.IF,'IF');PostScriptToken.IFELSE=new PostScriptToken(PostScriptTokenTypes.IFELSE,'IFELSE');return PostScriptToken;}();var PostScriptLexer=function PostScriptLexerClosure(){function PostScriptLexer(stream){this.stream=stream;this.nextChar();this.strBuf=[];}PostScriptLexer.prototype={nextChar:function PostScriptLexer_nextChar(){return this.currentChar=this.stream.getByte();},getToken:function PostScriptLexer_getToken(){var comment=false;var ch=this.currentChar;while(true){if(ch<0){return _primitives.EOF;}if(comment){if(ch===0x0A||ch===0x0D){comment=false;}}else if(ch===0x25){comment=true;}else if(!(0,_util.isSpace)(ch)){break;}ch=this.nextChar();}switch(ch|0){case 0x30:case 0x31:case 0x32:case 0x33:case 0x34:case 0x35:case 0x36:case 0x37:case 0x38:case 0x39:case 0x2B:case 0x2D:case 0x2E:return new PostScriptToken(PostScriptTokenTypes.NUMBER,this.getNumber());case 0x7B:this.nextChar();return PostScriptToken.LBRACE;case 0x7D:this.nextChar();return PostScriptToken.RBRACE;}var strBuf=this.strBuf;strBuf.length=0;strBuf[0]=String.fromCharCode(ch);while((ch=this.nextChar())>=0&&(ch>=0x41&&ch<=0x5A||ch>=0x61&&ch<=0x7A)){strBuf.push(String.fromCharCode(ch));}var str=strBuf.join('');switch(str.toLowerCase()){case'if':return PostScriptToken.IF;case'ifelse':return PostScriptToken.IFELSE;default:return PostScriptToken.getOperator(str);}},getNumber:function PostScriptLexer_getNumber(){var ch=this.currentChar;var strBuf=this.strBuf;strBuf.length=0;strBuf[0]=String.fromCharCode(ch);while((ch=this.nextChar())>=0){if(ch>=0x30&&ch<=0x39||ch===0x2D||ch===0x2E){strBuf.push(String.fromCharCode(ch));}else{break;}}var value=parseFloat(strBuf.join(''));if(isNaN(value)){throw new _util.FormatError('Invalid floating point number: '+value);}return value;}};return PostScriptLexer;}();exports.PostScriptLexer=PostScriptLexer;exports.PostScriptParser=PostScriptParser;/***/},/* 170 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.MurmurHash3_64=undefined;var _util=__w_pdfjs_require__(2);var MurmurHash3_64=function MurmurHash3_64Closure(seed){var MASK_HIGH=0xffff0000;var MASK_LOW=0xffff;function MurmurHash3_64(seed){var SEED=0xc3d2e1f0;this.h1=seed?seed&0xffffffff:SEED;this.h2=seed?seed&0xffffffff:SEED;}MurmurHash3_64.prototype={update:function MurmurHash3_64_update(input){var data=void 0,length=void 0;if((0,_util.isString)(input)){data=new Uint8Array(input.length*2);length=0;for(var i=0,ii=input.length;i<ii;i++){var code=input.charCodeAt(i);if(code<=0xff){data[length++]=code;}else{data[length++]=code>>>8;data[length++]=code&0xff;}}}else if((0,_util.isArrayBuffer)(input)){data=input;length=data.byteLength;}else{throw new Error('Wrong data format in MurmurHash3_64_update. '+'Input must be a string or array.');}var blockCounts=length>>2;var tailLength=length-blockCounts*4;var dataUint32=new Uint32Array(data.buffer,0,blockCounts);var k1=0;var k2=0;var h1=this.h1;var h2=this.h2;var C1=0xcc9e2d51;var C2=0x1b873593;var C1_LOW=C1&MASK_LOW;var C2_LOW=C2&MASK_LOW;for(var _i=0;_i<blockCounts;_i++){if(_i&1){k1=dataUint32[_i];k1=k1*C1&MASK_HIGH|k1*C1_LOW&MASK_LOW;k1=k1<<15|k1>>>17;k1=k1*C2&MASK_HIGH|k1*C2_LOW&MASK_LOW;h1^=k1;h1=h1<<13|h1>>>19;h1=h1*5+0xe6546b64;}else{k2=dataUint32[_i];k2=k2*C1&MASK_HIGH|k2*C1_LOW&MASK_LOW;k2=k2<<15|k2>>>17;k2=k2*C2&MASK_HIGH|k2*C2_LOW&MASK_LOW;h2^=k2;h2=h2<<13|h2>>>19;h2=h2*5+0xe6546b64;}}k1=0;switch(tailLength){case 3:k1^=data[blockCounts*4+2]<<16;case 2:k1^=data[blockCounts*4+1]<<8;case 1:k1^=data[blockCounts*4];k1=k1*C1&MASK_HIGH|k1*C1_LOW&MASK_LOW;k1=k1<<15|k1>>>17;k1=k1*C2&MASK_HIGH|k1*C2_LOW&MASK_LOW;if(blockCounts&1){h1^=k1;}else{h2^=k1;}}this.h1=h1;this.h2=h2;return this;},hexdigest:function MurmurHash3_64_hexdigest(){var h1=this.h1;var h2=this.h2;h1^=h2>>>1;h1=h1*0xed558ccd&MASK_HIGH|h1*0x8ccd&MASK_LOW;h2=h2*0xff51afd7&MASK_HIGH|((h2<<16|h1>>>16)*0xafd7ed55&MASK_HIGH)>>>16;h1^=h2>>>1;h1=h1*0x1a85ec53&MASK_HIGH|h1*0xec53&MASK_LOW;h2=h2*0xc4ceb9fe&MASK_HIGH|((h2<<16|h1>>>16)*0xb9fe1a85&MASK_HIGH)>>>16;h1^=h2>>>1;for(var i=0,arr=[h1,h2],str='';i<arr.length;i++){var hex=(arr[i]>>>0).toString(16);while(hex.length<8){hex='0'+hex;}str+=hex;}return str;}};return MurmurHash3_64;}();exports.MurmurHash3_64=MurmurHash3_64;/***/},/* 171 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.PDFImage=undefined;var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _util=__w_pdfjs_require__(2);var _primitives=__w_pdfjs_require__(138);var _colorspace=__w_pdfjs_require__(151);var _stream=__w_pdfjs_require__(140);var _jpeg_stream=__w_pdfjs_require__(146);var _jpx=__w_pdfjs_require__(149);var PDFImage=function PDFImageClosure(){function handleImageData(image,nativeDecoder){if(nativeDecoder&&nativeDecoder.canDecode(image)){return nativeDecoder.decode(image).catch(function(reason){(0,_util.warn)('Native image decoding failed -- trying to recover: '+(reason&&reason.message));return image;});}return Promise.resolve(image);}function decodeAndClamp(value,addend,coefficient,max){value=addend+value*coefficient;return value<0?0:value>max?max:value;}function resizeImageMask(src,bpc,w1,h1,w2,h2){var length=w2*h2;var dest=bpc<=8?new Uint8Array(length):bpc<=16?new Uint16Array(length):new Uint32Array(length);var xRatio=w1/w2;var yRatio=h1/h2;var i,j,py,newIndex=0,oldIndex;var xScaled=new Uint16Array(w2);var w1Scanline=w1;for(i=0;i<w2;i++){xScaled[i]=Math.floor(i*xRatio);}for(i=0;i<h2;i++){py=Math.floor(i*yRatio)*w1Scanline;for(j=0;j<w2;j++){oldIndex=py+xScaled[j];dest[newIndex++]=src[oldIndex];}}return dest;}function PDFImage(_ref){var xref=_ref.xref,res=_ref.res,image=_ref.image,_ref$isInline=_ref.isInline,isInline=_ref$isInline===undefined?false:_ref$isInline,_ref$smask=_ref.smask,smask=_ref$smask===undefined?null:_ref$smask,_ref$mask=_ref.mask,mask=_ref$mask===undefined?null:_ref$mask,_ref$isMask=_ref.isMask,isMask=_ref$isMask===undefined?false:_ref$isMask,pdfFunctionFactory=_ref.pdfFunctionFactory;this.image=image;var dict=image.dict;var filter=dict.get('Filter');if((0,_primitives.isName)(filter)){switch(filter.name){case'JPXDecode':var jpxImage=new _jpx.JpxImage();jpxImage.parseImageProperties(image.stream);image.stream.reset();image.width=jpxImage.width;image.height=jpxImage.height;image.bitsPerComponent=jpxImage.bitsPerComponent;image.numComps=jpxImage.componentsCount;break;case'JBIG2Decode':image.bitsPerComponent=1;image.numComps=1;break;}}var width=dict.get('Width','W');var height=dict.get('Height','H');if(Number.isInteger(image.width)&&image.width>0&&Number.isInteger(image.height)&&image.height>0&&(image.width!==width||image.height!==height)){(0,_util.warn)('PDFImage - using the Width/Height of the image data, '+'rather than the image dictionary.');width=image.width;height=image.height;}if(width<1||height<1){throw new _util.FormatError('Invalid image width: '+width+' or '+('height: '+height));}this.width=width;this.height=height;this.interpolate=dict.get('Interpolate','I')||false;this.imageMask=dict.get('ImageMask','IM')||false;this.matte=dict.get('Matte')||false;var bitsPerComponent=image.bitsPerComponent;if(!bitsPerComponent){bitsPerComponent=dict.get('BitsPerComponent','BPC');if(!bitsPerComponent){if(this.imageMask){bitsPerComponent=1;}else{throw new _util.FormatError('Bits per component missing in image: '+this.imageMask);}}}this.bpc=bitsPerComponent;if(!this.imageMask){var colorSpace=dict.get('ColorSpace','CS');if(!colorSpace){(0,_util.info)('JPX images (which do not require color spaces)');switch(image.numComps){case 1:colorSpace=_primitives.Name.get('DeviceGray');break;case 3:colorSpace=_primitives.Name.get('DeviceRGB');break;case 4:colorSpace=_primitives.Name.get('DeviceCMYK');break;default:throw new Error('JPX images with '+image.numComps+' '+'color components not supported.');}}var resources=isInline?res:null;this.colorSpace=_colorspace.ColorSpace.parse(colorSpace,xref,resources,pdfFunctionFactory);this.numComps=this.colorSpace.numComps;}this.decode=dict.getArray('Decode','D');this.needsDecode=false;if(this.decode&&(this.colorSpace&&!this.colorSpace.isDefaultDecode(this.decode)||isMask&&!_colorspace.ColorSpace.isDefaultDecode(this.decode,1))){this.needsDecode=true;var max=(1<<bitsPerComponent)-1;this.decodeCoefficients=[];this.decodeAddends=[];for(var i=0,j=0;i<this.decode.length;i+=2,++j){var dmin=this.decode[i];var dmax=this.decode[i+1];this.decodeCoefficients[j]=dmax-dmin;this.decodeAddends[j]=max*dmin;}}if(smask){this.smask=new PDFImage({xref:xref,res:res,image:smask,isInline:isInline,pdfFunctionFactory:pdfFunctionFactory});}else if(mask){if((0,_primitives.isStream)(mask)){var maskDict=mask.dict,imageMask=maskDict.get('ImageMask','IM');if(!imageMask){(0,_util.warn)('Ignoring /Mask in image without /ImageMask.');}else{this.mask=new PDFImage({xref:xref,res:res,image:mask,isInline:isInline,isMask:true,pdfFunctionFactory:pdfFunctionFactory});}}else{this.mask=mask;}}}PDFImage.buildImage=function(_ref2){var handler=_ref2.handler,xref=_ref2.xref,res=_ref2.res,image=_ref2.image,_ref2$isInline=_ref2.isInline,isInline=_ref2$isInline===undefined?false:_ref2$isInline,_ref2$nativeDecoder=_ref2.nativeDecoder,nativeDecoder=_ref2$nativeDecoder===undefined?null:_ref2$nativeDecoder,pdfFunctionFactory=_ref2.pdfFunctionFactory;var imagePromise=handleImageData(image,nativeDecoder);var smaskPromise;var maskPromise;var smask=image.dict.get('SMask');var mask=image.dict.get('Mask');if(smask){smaskPromise=handleImageData(smask,nativeDecoder);maskPromise=Promise.resolve(null);}else{smaskPromise=Promise.resolve(null);if(mask){if((0,_primitives.isStream)(mask)){maskPromise=handleImageData(mask,nativeDecoder);}else if(Array.isArray(mask)){maskPromise=Promise.resolve(mask);}else{(0,_util.warn)('Unsupported mask format.');maskPromise=Promise.resolve(null);}}else{maskPromise=Promise.resolve(null);}}return Promise.all([imagePromise,smaskPromise,maskPromise]).then(function(_ref3){var _ref4=_slicedToArray(_ref3,3),imageData=_ref4[0],smaskData=_ref4[1],maskData=_ref4[2];return new PDFImage({xref:xref,res:res,image:imageData,isInline:isInline,smask:smaskData,mask:maskData,pdfFunctionFactory:pdfFunctionFactory});});};PDFImage.createMask=function(_ref5){var imgArray=_ref5.imgArray,width=_ref5.width,height=_ref5.height,imageIsFromDecodeStream=_ref5.imageIsFromDecodeStream,inverseDecode=_ref5.inverseDecode;var computedLength=(width+7>>3)*height;var actualLength=imgArray.byteLength;var haveFullData=computedLength===actualLength;var data,i;if(imageIsFromDecodeStream&&(!inverseDecode||haveFullData)){data=imgArray;}else if(!inverseDecode){data=new Uint8ClampedArray(actualLength);data.set(imgArray);}else{data=new Uint8ClampedArray(computedLength);data.set(imgArray);for(i=actualLength;i<computedLength;i++){data[i]=0xff;}}if(inverseDecode){for(i=0;i<actualLength;i++){data[i]^=0xFF;}}return{data:data,width:width,height:height};};PDFImage.prototype={get drawWidth(){return Math.max(this.width,this.smask&&this.smask.width||0,this.mask&&this.mask.width||0);},get drawHeight(){return Math.max(this.height,this.smask&&this.smask.height||0,this.mask&&this.mask.height||0);},decodeBuffer:function decodeBuffer(buffer){var bpc=this.bpc;var numComps=this.numComps;var decodeAddends=this.decodeAddends;var decodeCoefficients=this.decodeCoefficients;var max=(1<<bpc)-1;var i,ii;if(bpc===1){for(i=0,ii=buffer.length;i<ii;i++){buffer[i]=+!buffer[i];}return;}var index=0;for(i=0,ii=this.width*this.height;i<ii;i++){for(var j=0;j<numComps;j++){buffer[index]=decodeAndClamp(buffer[index],decodeAddends[j],decodeCoefficients[j],max);index++;}}},getComponents:function getComponents(buffer){var bpc=this.bpc;if(bpc===8){return buffer;}var width=this.width;var height=this.height;var numComps=this.numComps;var length=width*height*numComps;var bufferPos=0;var output=bpc<=8?new Uint8Array(length):bpc<=16?new Uint16Array(length):new Uint32Array(length);var rowComps=width*numComps;var max=(1<<bpc)-1;var i=0,ii,buf;if(bpc===1){var mask,loop1End,loop2End;for(var j=0;j<height;j++){loop1End=i+(rowComps&~7);loop2End=i+rowComps;while(i<loop1End){buf=buffer[bufferPos++];output[i]=buf>>7&1;output[i+1]=buf>>6&1;output[i+2]=buf>>5&1;output[i+3]=buf>>4&1;output[i+4]=buf>>3&1;output[i+5]=buf>>2&1;output[i+6]=buf>>1&1;output[i+7]=buf&1;i+=8;}if(i<loop2End){buf=buffer[bufferPos++];mask=128;while(i<loop2End){output[i++]=+!!(buf&mask);mask>>=1;}}}}else{var bits=0;buf=0;for(i=0,ii=length;i<ii;++i){if(i%rowComps===0){buf=0;bits=0;}while(bits<bpc){buf=buf<<8|buffer[bufferPos++];bits+=8;}var remainingBits=bits-bpc;var value=buf>>remainingBits;output[i]=value<0?0:value>max?max:value;buf=buf&(1<<remainingBits)-1;bits=remainingBits;}}return output;},fillOpacity:function fillOpacity(rgbaBuf,width,height,actualHeight,image){var smask=this.smask;var mask=this.mask;var alphaBuf,sw,sh,i,ii,j;if(smask){sw=smask.width;sh=smask.height;alphaBuf=new Uint8ClampedArray(sw*sh);smask.fillGrayBuffer(alphaBuf);if(sw!==width||sh!==height){alphaBuf=resizeImageMask(alphaBuf,smask.bpc,sw,sh,width,height);}}else if(mask){if(mask instanceof PDFImage){sw=mask.width;sh=mask.height;alphaBuf=new Uint8ClampedArray(sw*sh);mask.numComps=1;mask.fillGrayBuffer(alphaBuf);for(i=0,ii=sw*sh;i<ii;++i){alphaBuf[i]=255-alphaBuf[i];}if(sw!==width||sh!==height){alphaBuf=resizeImageMask(alphaBuf,mask.bpc,sw,sh,width,height);}}else if(Array.isArray(mask)){alphaBuf=new Uint8ClampedArray(width*height);var numComps=this.numComps;for(i=0,ii=width*height;i<ii;++i){var opacity=0;var imageOffset=i*numComps;for(j=0;j<numComps;++j){var color=image[imageOffset+j];var maskOffset=j*2;if(color<mask[maskOffset]||color>mask[maskOffset+1]){opacity=255;break;}}alphaBuf[i]=opacity;}}else{throw new _util.FormatError('Unknown mask format.');}}if(alphaBuf){for(i=0,j=3,ii=width*actualHeight;i<ii;++i,j+=4){rgbaBuf[j]=alphaBuf[i];}}else{for(i=0,j=3,ii=width*actualHeight;i<ii;++i,j+=4){rgbaBuf[j]=255;}}},undoPreblend:function undoPreblend(buffer,width,height){var matte=this.smask&&this.smask.matte;if(!matte){return;}var matteRgb=this.colorSpace.getRgb(matte,0);var matteR=matteRgb[0];var matteG=matteRgb[1];var matteB=matteRgb[2];var length=width*height*4;for(var i=0;i<length;i+=4){var alpha=buffer[i+3];if(alpha===0){buffer[i]=255;buffer[i+1]=255;buffer[i+2]=255;continue;}var k=255/alpha;buffer[i]=(buffer[i]-matteR)*k+matteR;buffer[i+1]=(buffer[i+1]-matteG)*k+matteG;buffer[i+2]=(buffer[i+2]-matteB)*k+matteB;}},createImageData:function createImageData(){var forceRGBA=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var drawWidth=this.drawWidth;var drawHeight=this.drawHeight;var imgData={width:drawWidth,height:drawHeight,kind:0,data:null};var numComps=this.numComps;var originalWidth=this.width;var originalHeight=this.height;var bpc=this.bpc;var rowBytes=originalWidth*numComps*bpc+7>>3;var imgArray;if(!forceRGBA){var kind;if(this.colorSpace.name==='DeviceGray'&&bpc===1){kind=_util.ImageKind.GRAYSCALE_1BPP;}else if(this.colorSpace.name==='DeviceRGB'&&bpc===8&&!this.needsDecode){kind=_util.ImageKind.RGB_24BPP;}if(kind&&!this.smask&&!this.mask&&drawWidth===originalWidth&&drawHeight===originalHeight){imgData.kind=kind;imgArray=this.getImageBytes(originalHeight*rowBytes);if(this.image instanceof _stream.DecodeStream){imgData.data=imgArray;}else{var newArray=new Uint8ClampedArray(imgArray.length);newArray.set(imgArray);imgData.data=newArray;}if(this.needsDecode){(0,_util.assert)(kind===_util.ImageKind.GRAYSCALE_1BPP,'PDFImage.createImageData: The image must be grayscale.');var buffer=imgData.data;for(var i=0,ii=buffer.length;i<ii;i++){buffer[i]^=0xff;}}return imgData;}if(this.image instanceof _jpeg_stream.JpegStream&&!this.smask&&!this.mask){var imageLength=originalHeight*rowBytes;switch(this.colorSpace.name){case'DeviceGray':imageLength*=3;case'DeviceRGB':case'DeviceCMYK':imgData.kind=_util.ImageKind.RGB_24BPP;imgData.data=this.getImageBytes(imageLength,drawWidth,drawHeight,true);return imgData;}}}imgArray=this.getImageBytes(originalHeight*rowBytes);var actualHeight=0|imgArray.length/rowBytes*drawHeight/originalHeight;var comps=this.getComponents(imgArray);var alpha01,maybeUndoPreblend;if(!forceRGBA&&!this.smask&&!this.mask){imgData.kind=_util.ImageKind.RGB_24BPP;imgData.data=new Uint8ClampedArray(drawWidth*drawHeight*3);alpha01=0;maybeUndoPreblend=false;}else{imgData.kind=_util.ImageKind.RGBA_32BPP;imgData.data=new Uint8ClampedArray(drawWidth*drawHeight*4);alpha01=1;maybeUndoPreblend=true;this.fillOpacity(imgData.data,drawWidth,drawHeight,actualHeight,comps);}if(this.needsDecode){this.decodeBuffer(comps);}this.colorSpace.fillRgb(imgData.data,originalWidth,originalHeight,drawWidth,drawHeight,actualHeight,bpc,comps,alpha01);if(maybeUndoPreblend){this.undoPreblend(imgData.data,drawWidth,actualHeight);}return imgData;},fillGrayBuffer:function fillGrayBuffer(buffer){var numComps=this.numComps;if(numComps!==1){throw new _util.FormatError('Reading gray scale from a color image: '+numComps);}var width=this.width;var height=this.height;var bpc=this.bpc;var rowBytes=width*numComps*bpc+7>>3;var imgArray=this.getImageBytes(height*rowBytes);var comps=this.getComponents(imgArray);var i,length;if(bpc===1){length=width*height;if(this.needsDecode){for(i=0;i<length;++i){buffer[i]=comps[i]-1&255;}}else{for(i=0;i<length;++i){buffer[i]=-comps[i]&255;}}return;}if(this.needsDecode){this.decodeBuffer(comps);}length=width*height;var scale=255/((1<<bpc)-1);for(i=0;i<length;++i){buffer[i]=scale*comps[i];}},getImageBytes:function getImageBytes(length,drawWidth,drawHeight){var forceRGB=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;this.image.reset();this.image.drawWidth=drawWidth||this.width;this.image.drawHeight=drawHeight||this.height;this.image.forceRGB=!!forceRGB;return this.image.getBytes(length,true);}};return PDFImage;}();exports.PDFImage=PDFImage;/***/},/* 172 */ /***/function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.MessageHandler=undefined;var _regenerator=__w_pdfjs_require__(131);var _regenerator2=_interopRequireDefault(_regenerator);var _typeof=typeof Symbol==="function"&&_typeof3(Symbol.iterator)==="symbol"?function(obj){return _typeof3(obj);}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":_typeof3(obj);};var resolveCall=function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee(fn,args){var thisArg=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;return _regenerator2.default.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(fn){_context.next=2;break;}return _context.abrupt('return');case 2:return _context.abrupt('return',fn.apply(thisArg,args));case 3:case'end':return _context.stop();}}},_callee,this);}));return function resolveCall(_x2,_x3){return _ref.apply(this,arguments);};}();var _util=__w_pdfjs_require__(2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step("next",value);},function(err){step("throw",err);});}}return step("next");});};}function wrapReason(reason){if((typeof reason==='undefined'?'undefined':_typeof(reason))!=='object'){return reason;}switch(reason.name){case'AbortException':return new _util.AbortException(reason.message);case'MissingPDFException':return new _util.MissingPDFException(reason.message);case'UnexpectedResponseException':return new _util.UnexpectedResponseException(reason.message,reason.status);default:return new _util.UnknownErrorException(reason.message,reason.details);}}function makeReasonSerializable(reason){if(!(reason instanceof Error)||reason instanceof _util.AbortException||reason instanceof _util.MissingPDFException||reason instanceof _util.UnexpectedResponseException||reason instanceof _util.UnknownErrorException){return reason;}return new _util.UnknownErrorException(reason.message,reason.toString());}function resolveOrReject(capability,success,reason){if(success){capability.resolve();}else{capability.reject(reason);}}function finalize(promise){return Promise.resolve(promise).catch(function(){});}function MessageHandler(sourceName,targetName,comObj){var _this=this;this.sourceName=sourceName;this.targetName=targetName;this.comObj=comObj;this.callbackId=1;this.streamId=1;this.postMessageTransfers=true;this.streamSinks=Object.create(null);this.streamControllers=Object.create(null);var callbacksCapabilities=this.callbacksCapabilities=Object.create(null);var ah=this.actionHandler=Object.create(null);this._onComObjOnMessage=function(event){var data=event.data;if(data.targetName!==_this.sourceName){return;}if(data.stream){_this._processStreamMessage(data);}else if(data.isReply){var callbackId=data.callbackId;if(data.callbackId in callbacksCapabilities){var callback=callbacksCapabilities[callbackId];delete callbacksCapabilities[callbackId];if('error'in data){callback.reject(wrapReason(data.error));}else{callback.resolve(data.data);}}else{throw new Error('Cannot resolve callback '+callbackId);}}else if(data.action in ah){var action=ah[data.action];if(data.callbackId){var _sourceName=_this.sourceName;var _targetName=data.sourceName;Promise.resolve().then(function(){return action[0].call(action[1],data.data);}).then(function(result){comObj.postMessage({sourceName:_sourceName,targetName:_targetName,isReply:true,callbackId:data.callbackId,data:result});},function(reason){comObj.postMessage({sourceName:_sourceName,targetName:_targetName,isReply:true,callbackId:data.callbackId,error:makeReasonSerializable(reason)});});}else if(data.streamId){_this._createStreamSink(data);}else{action[0].call(action[1],data.data);}}else{throw new Error('Unknown action from worker: '+data.action);}};comObj.addEventListener('message',this._onComObjOnMessage);}MessageHandler.prototype={on:function on(actionName,handler,scope){var ah=this.actionHandler;if(ah[actionName]){throw new Error('There is already an actionName called "'+actionName+'"');}ah[actionName]=[handler,scope];},send:function send(actionName,data,transfers){var message={sourceName:this.sourceName,targetName:this.targetName,action:actionName,data:data};this.postMessage(message,transfers);},sendWithPromise:function sendWithPromise(actionName,data,transfers){var callbackId=this.callbackId++;var message={sourceName:this.sourceName,targetName:this.targetName,action:actionName,data:data,callbackId:callbackId};var capability=(0,_util.createPromiseCapability)();this.callbacksCapabilities[callbackId]=capability;try{this.postMessage(message,transfers);}catch(e){capability.reject(e);}return capability.promise;},sendWithStream:function sendWithStream(actionName,data,queueingStrategy,transfers){var _this2=this;var streamId=this.streamId++;var sourceName=this.sourceName;var targetName=this.targetName;return new _util.ReadableStream({start:function start(controller){var startCapability=(0,_util.createPromiseCapability)();_this2.streamControllers[streamId]={controller:controller,startCall:startCapability,isClosed:false};_this2.postMessage({sourceName:sourceName,targetName:targetName,action:actionName,streamId:streamId,data:data,desiredSize:controller.desiredSize});return startCapability.promise;},pull:function pull(controller){var pullCapability=(0,_util.createPromiseCapability)();_this2.streamControllers[streamId].pullCall=pullCapability;_this2.postMessage({sourceName:sourceName,targetName:targetName,stream:'pull',streamId:streamId,desiredSize:controller.desiredSize});return pullCapability.promise;},cancel:function cancel(reason){var cancelCapability=(0,_util.createPromiseCapability)();_this2.streamControllers[streamId].cancelCall=cancelCapability;_this2.streamControllers[streamId].isClosed=true;_this2.postMessage({sourceName:sourceName,targetName:targetName,stream:'cancel',reason:reason,streamId:streamId});return cancelCapability.promise;}},queueingStrategy);},_createStreamSink:function _createStreamSink(data){var _this3=this;var self=this;var action=this.actionHandler[data.action];var streamId=data.streamId;var desiredSize=data.desiredSize;var sourceName=this.sourceName;var targetName=data.sourceName;var capability=(0,_util.createPromiseCapability)();var sendStreamRequest=function sendStreamRequest(_ref2){var stream=_ref2.stream,chunk=_ref2.chunk,transfers=_ref2.transfers,success=_ref2.success,reason=_ref2.reason;_this3.postMessage({sourceName:sourceName,targetName:targetName,stream:stream,streamId:streamId,chunk:chunk,success:success,reason:reason},transfers);};var streamSink={enqueue:function enqueue(chunk){var size=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;var transfers=arguments[2];if(this.isCancelled){return;}var lastDesiredSize=this.desiredSize;this.desiredSize-=size;if(lastDesiredSize>0&&this.desiredSize<=0){this.sinkCapability=(0,_util.createPromiseCapability)();this.ready=this.sinkCapability.promise;}sendStreamRequest({stream:'enqueue',chunk:chunk,transfers:transfers});},close:function close(){if(this.isCancelled){return;}this.isCancelled=true;sendStreamRequest({stream:'close'});delete self.streamSinks[streamId];},error:function error(reason){if(this.isCancelled){return;}this.isCancelled=true;sendStreamRequest({stream:'error',reason:reason});},sinkCapability:capability,onPull:null,onCancel:null,isCancelled:false,desiredSize:desiredSize,ready:null};streamSink.sinkCapability.resolve();streamSink.ready=streamSink.sinkCapability.promise;this.streamSinks[streamId]=streamSink;resolveCall(action[0],[data.data,streamSink],action[1]).then(function(){sendStreamRequest({stream:'start_complete',success:true});},function(reason){sendStreamRequest({stream:'start_complete',success:false,reason:reason});});},_processStreamMessage:function _processStreamMessage(data){var _this4=this;var sourceName=this.sourceName;var targetName=data.sourceName;var streamId=data.streamId;var sendStreamResponse=function sendStreamResponse(_ref3){var stream=_ref3.stream,success=_ref3.success,reason=_ref3.reason;_this4.comObj.postMessage({sourceName:sourceName,targetName:targetName,stream:stream,success:success,streamId:streamId,reason:reason});};var deleteStreamController=function deleteStreamController(){Promise.all([_this4.streamControllers[data.streamId].startCall,_this4.streamControllers[data.streamId].pullCall,_this4.streamControllers[data.streamId].cancelCall].map(function(capability){return capability&&finalize(capability.promise);})).then(function(){delete _this4.streamControllers[data.streamId];});};switch(data.stream){case'start_complete':resolveOrReject(this.streamControllers[data.streamId].startCall,data.success,wrapReason(data.reason));break;case'pull_complete':resolveOrReject(this.streamControllers[data.streamId].pullCall,data.success,wrapReason(data.reason));break;case'pull':if(!this.streamSinks[data.streamId]){sendStreamResponse({stream:'pull_complete',success:true});break;}if(this.streamSinks[data.streamId].desiredSize<=0&&data.desiredSize>0){this.streamSinks[data.streamId].sinkCapability.resolve();}this.streamSinks[data.streamId].desiredSize=data.desiredSize;resolveCall(this.streamSinks[data.streamId].onPull).then(function(){sendStreamResponse({stream:'pull_complete',success:true});},function(reason){sendStreamResponse({stream:'pull_complete',success:false,reason:reason});});break;case'enqueue':(0,_util.assert)(this.streamControllers[data.streamId],'enqueue should have stream controller');if(!this.streamControllers[data.streamId].isClosed){this.streamControllers[data.streamId].controller.enqueue(data.chunk);}break;case'close':(0,_util.assert)(this.streamControllers[data.streamId],'close should have stream controller');if(this.streamControllers[data.streamId].isClosed){break;}this.streamControllers[data.streamId].isClosed=true;this.streamControllers[data.streamId].controller.close();deleteStreamController();break;case'error':(0,_util.assert)(this.streamControllers[data.streamId],'error should have stream controller');this.streamControllers[data.streamId].controller.error(wrapReason(data.reason));deleteStreamController();break;case'cancel_complete':resolveOrReject(this.streamControllers[data.streamId].cancelCall,data.success,wrapReason(data.reason));deleteStreamController();break;case'cancel':if(!this.streamSinks[data.streamId]){break;}resolveCall(this.streamSinks[data.streamId].onCancel,[wrapReason(data.reason)]).then(function(){sendStreamResponse({stream:'cancel_complete',success:true});},function(reason){sendStreamResponse({stream:'cancel_complete',success:false,reason:reason});});this.streamSinks[data.streamId].sinkCapability.reject(wrapReason(data.reason));this.streamSinks[data.streamId].isCancelled=true;delete this.streamSinks[data.streamId];break;default:throw new Error('Unexpected stream case');}},postMessage:function postMessage(message,transfers){if(transfers&&this.postMessageTransfers){this.comObj.postMessage(message,transfers);}else{this.comObj.postMessage(message);}},destroy:function destroy(){this.comObj.removeEventListener('message',this._onComObjOnMessage);}};exports.MessageHandler=MessageHandler;/***/}]));});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/buffer/index.js */ "./node_modules/buffer/index.js").Buffer, __webpack_require__(/*! ./../node_modules/webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"), __webpack_require__(/*! ./../node_modules/process/browser.js */ "./node_modules/process/browser.js"), __webpack_require__(/*! ./../node_modules/webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./src/pdfjsannotate.js":
/*!******************************!*\
  !*** ./src/pdfjsannotate.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/**
 * PDFAnnotate v2.0.0
 * Author: Ravisha Heshan
 */
var pdfjsLib = __webpack_require__(/*! pdfjs-dist */ "./node_modules/pdfjs-dist/build/pdf.js");

var fabric = __webpack_require__(/*! fabric */ "./node_modules/fabric/dist/fabric.js").fabric;

__webpack_require__(/*! ./arrow.fabric.js */ "./src/arrow.fabric.js");

var $ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");

var jsPDF = __webpack_require__(/*! ./jspdf.min.js */ "./src/jspdf.min.js");

(typeof window !== "undefined" ? window : {}).pdfjsWorker = __webpack_require__(/*! ./pdfWorker.js */ "./src/pdfWorker.js");
var SVG_NS = "http://www.w3.org/2000/svg";

var PDFAnnotate = window.PDFAnnotate = function (container_id, url) {
  this.number_of_pages = 0;
  this.pages_rendered = 0;
  this.active_tool = 1; // 1 - Free hand, 2 - Text, 3 - Arrow

  this.fabricObjects = [];
  this.textContents = [];
  this.color = "#212121";
  this.font_size = 16;
  this.active_canvas = 0;
  this.container_id = container_id;
  this.url = url;
  var instance = this;
  var loadingTask = pdfjsLib.getDocument(this.url);
  loadingTask.promise.then(function (pdf) {
    var scale = 1.3;
    instance.number_of_pages = pdf._pdfInfo.numPages;

    for (var i = 1; i <= instance.number_of_pages; i++) {
      pdf.getPage(i).then(function (page) {
        var viewport = page.getViewport(scale);
        var imageCanvas = document.createElement("canvas");
        document.getElementById(instance.container_id).appendChild(imageCanvas);
        imageCanvas.className = "pdf-image-canvas";
        imageCanvas.height = viewport.height;
        imageCanvas.width = viewport.width;
        imageCanvas.style.marginLeft = "-" + viewport.width / 2 + "px";
        imageCanvasContext = imageCanvas.getContext("2d");
        page.render({
          canvasContext: imageCanvasContext,
          viewport: viewport
        }).then(function () {
          return page.getTextContent();
        }).then(function (textContent) {
          instance.pages_rendered++;

          if (instance.pages_rendered == instance.number_of_pages) {
            $(".pdf-image-canvas").each(function (index, el) {
              var imageCanvasElement = el;
              imageCanvasElement.id = "page-".concat(index + 1, "-image-canvas");
              var svg = instance.buildTextSvg(viewport, textContent);
              instance.initFabric(imageCanvasElement, svg);
            });
          }
        });
      });
    }
  }, function (reason) {
    console.error(reason);
  });

  this.initFabric = function (imageCanvasElement, textSvg) {
    var instance = this;
    var background = imageCanvasElement.toDataURL("image/png");
    var fabricObj = new fabric.Canvas(imageCanvasElement.id, {
      freeDrawingBrush: {
        width: 1,
        color: instance.color
      }
    });
    instance.fabricObjects.push(fabricObj);
    fabricObj.setBackgroundImage(background, fabricObj.renderAll.bind(fabricObj));
    $(fabricObj.upperCanvasEl).click(function (event) {
      instance.active_canvas = index;
      instance.fabricClickHandler(event, fabricObj);
    });
    imageCanvasElement.parentNode.prepend(textSvg);
  };

  this.buildTextSvg = function (viewport, textContent) {
    var svg = document.createElementNS(SVG_NS, "svg:svg");
    svg.setAttribute("width", viewport.width + "px");
    svg.setAttribute("height", viewport.height + "px");
    svg.setAttribute("font-size", 1);
    textContent.items.forEach(function (textItem) {
      var tx = pdfjsLib.Util.transform(pdfjsLib.Util.transform(viewport.transform, textItem.transform), [1, 0, 0, -1, 0, 0]);
      console.log(textItem, textContent);
      var style = textContent.styles[textItem.fontName];
      var text = document.createElementNS(SVG_NS, "svg:text");
      text.setAttribute("transform", "matrix(" + tx.join(" ") + ")");
      text.setAttribute("font-family", style.fontFamily);
      text.textContent = textItem.str;
      svg.appendChild(text);
    });
    return svg;
  };

  this.fabricClickHandler = function (event, fabricObj) {
    var instance = this;

    if (instance.active_tool == 2) {
      var text = new fabric.IText("Sample text", {
        left: event.clientX - fabricObj.upperCanvasEl.getBoundingClientRect().left,
        top: event.clientY - fabricObj.upperCanvasEl.getBoundingClientRect().top,
        fill: instance.color,
        fontSize: instance.font_size,
        selectable: true
      });
      fabricObj.add(text);
      instance.active_tool = 0;
    }
  };
};

PDFAnnotate.prototype.enablePencil = function () {
  var instance = this;
  instance.active_tool = 1;

  if (instance.fabricObjects.length > 0) {
    $.each(instance.fabricObjects, function (index, fabricObj) {
      fabricObj.isDrawingMode = true;
    });
  }
};

PDFAnnotate.prototype.savePdf = function (fileName) {
  if (typeof fileName == "undefined" || fileName.length == 0) fileName = "sample.pdf";
  var instance = this;
  var doc = new jsPDF();
  $.each(instance.fabricObjects, function (index, fabricObj) {
    fabricObj.backgroundImage = false;

    if (index != 0) {
      doc.addPage();
      doc.setPage(index + 1);
    }

    doc.addImage(document.getElementById(fabricObj.lowerCanvasEl.id + "-copy").toDataURL(), "png", 0, 0);
    doc.addImage(fabricObj.toDataURL(), "png", 0, 0);
  });
  doc.save(fileName);
};

PDFAnnotate.prototype.enableAddText = function (text) {
  var inst = this;
  inst.active_tool = 2;

  if (typeof text === 'string') {
    inst.textBoxText = text;
  }

  if (inst.fabricObjects.length > 0) {
    $.each(inst.fabricObjects, function (index, fabricObj) {
      fabricObj.isDrawingMode = false;
    });
  }
};

PDFAnnotate.prototype.enableRectangle = function () {
  var inst = this;
  var fabricObj = inst.fabricObjects[inst.active_canvas];
  inst.active_tool = 4;

  if (inst.fabricObjects.length > 0) {
    $.each(inst.fabricObjects, function (index, fabricObj) {
      fabricObj.isDrawingMode = false;
    });
  }
};

PDFAnnotate.prototype.enableAddArrow = function () {
  var onDrawnCallback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
  var inst = this;
  inst.active_tool = 3;

  if (inst.fabricObjects.length > 0) {
    $.each(inst.fabricObjects, function (index, fabricObj) {
      fabricObj.isDrawingMode = false;
      new Arrow(fabricObj, inst.color, function () {
        inst.active_tool = 0;

        if (typeof onDrawnCallback === 'function') {
          onDrawnCallback();
        }
      });
    });
  }
};

PDFAnnotate.prototype.addImageToCanvas = function () {
  var inst = this;
  var fabricObj = inst.fabricObjects[inst.active_canvas];

  if (fabricObj) {
    var inputElement = document.createElement('input');
    inputElement.type = 'file';
    inputElement.accept = '.jpg,.jpeg,.png,.PNG,.JPG,.JPEG';

    inputElement.onchange = function () {
      var reader = new FileReader();
      reader.addEventListener('load', function () {
        inputElement.remove();
        var image = new Image();

        image.onload = function () {
          fabricObj.add(new fabric.Image(image));
        };

        image.src = this.result;
      }, false);
      reader.readAsDataURL(inputElement.files[0]);
    };

    document.getElementsByTagName('body')[0].appendChild(inputElement);
    inputElement.click();
  }
};

PDFAnnotate.prototype.deleteSelectedObject = function () {
  var inst = this;
  var activeObject = inst.fabricObjects[inst.active_canvas].getActiveObject();

  if (activeObject) {
    if (confirm('Are you sure ?')) {
      inst.fabricObjects[inst.active_canvas].remove(activeObject);
    }
  }
};

PDFAnnotate.prototype.setBrushSize = function (size) {
  var inst = this;
  $.each(inst.fabricObjects, function (index, fabricObj) {
    fabricObj.freeDrawingBrush.width = parseInt(size, 10) || 1;
  });
};

PDFAnnotate.prototype.setColor = function (color) {
  var inst = this;
  inst.color = color;
  $.each(inst.fabricObjects, function (index, fabricObj) {
    fabricObj.freeDrawingBrush.color = color;
  });
};

PDFAnnotate.prototype.setBorderColor = function (color) {
  var inst = this;
  inst.borderColor = color;
};

PDFAnnotate.prototype.setFontSize = function (size) {
  this.font_size = size;
};

PDFAnnotate.prototype.setBorderSize = function (size) {
  this.borderSize = size;
};

PDFAnnotate.prototype.clearActivePage = function () {
  var inst = this;
  var fabricObj = inst.fabricObjects[inst.active_canvas];
  var bg = fabricObj.backgroundImage;

  if (confirm('Are you sure?')) {
    fabricObj.clear();
    fabricObj.setBackgroundImage(bg, fabricObj.renderAll.bind(fabricObj));
  }
};

PDFAnnotate.prototype.serializePdf = function (callback) {
  var inst = this;
  var pageAnnotations = [];
  inst.fabricObjects.forEach(function (fabricObject) {
    fabricObject.clone(function (fabricObjectCopy) {
      fabricObjectCopy.setBackgroundImage(null);
      fabricObjectCopy.setBackgroundColor('');
      pageAnnotations.push(fabricObjectCopy);

      if (pageAnnotations.length === inst.fabricObjects.length) {
        var data = {
          page_setup: {
            format: inst.format,
            orientation: inst.orientation
          },
          pages: pageAnnotations
        };
        callback(JSON.stringify(data));
      }
    });
  });
};

PDFAnnotate.prototype.loadFromJSON = function (jsonData) {
  var inst = this;
  var page_setup = jsonData.page_setup,
      pages = jsonData.pages;

  if (typeof pages === 'undefined') {
    pages = jsonData;
  }

  if (_typeof(page_setup) === 'object' && typeof page_setup.format === 'string' && typeof page_setup.orientation === 'string') {
    inst.format = page_setup.format;
    inst.orientation = page_setup.orientation;
  }

  $.each(inst.fabricObjects, function (index, fabricObj) {
    if (pages.length > index) {
      fabricObj.loadFromJSON(pages[index], function () {
        inst.fabricObjectsData[index] = fabricObj.toJSON();
      });
    }
  });
};

PDFAnnotate.prototype.setDefaultTextForTextBox = function (text) {
  var inst = this;

  if (typeof text === 'string') {
    inst.textBoxText = text;
  }
};

PDFAnnotate.prototype.output = function (type, options) {
  var inst = this;
  return inst.output(type, options);
};

module.exports = PDFAnnotate;

/***/ }),

/***/ 0:
/*!************************************!*\
  !*** multi ./src/pdfjsannotate.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! E:\wamp-www\www\PDFJsAnnotations\src\pdfjsannotate.js */"./src/pdfjsannotate.js");


/***/ }),

/***/ 1:
/*!**********************!*\
  !*** zlib (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 2:
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 3:
/*!**********************!*\
  !*** http (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 4:
/*!***********************!*\
  !*** https (ignored) ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 5:
/*!***********************!*\
  !*** jsdom (ignored) ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 6:
/*!********************************************************!*\
  !*** jsdom/lib/jsdom/living/generated/utils (ignored) ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 7:
/*!***************************************!*\
  !*** jsdom/lib/jsdom/utils (ignored) ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 8:
/*!************************!*\
  !*** xmldom (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ })

/******/ });